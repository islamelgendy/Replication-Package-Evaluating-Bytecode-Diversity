Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 29
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray8 = new double[] { 100, 0L };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair9 = cMAESOptimizer2.optimize((int) (short) 10, multivariateFunction4, goalType5, doubleArray8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: ldc2_w        #10
50: dastore
51: dup
52: iconst_1
53: dconst_0
54: dastore
55: astore        5
57: aload_2
58: bipush        10
60: aload_3
61: aload         4
63: aload         5
65: invokevirtual #12
68: astore        6
70: ldc           #13
72: invokestatic  #14
75: goto          80
78: astore        6
80: aload         5
82: invokestatic  #16
85: aload         5
87: invokestatic  #17
90: ldc           #18
92: invokestatic  #19
95: return
Exception table:
from    to  target type
57    75    78   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 32
End line: 64
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray12 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray12);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray12);
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray21);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.RealMatrix realMatrix32 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair33 = cMAESOptimizer2.optimize((int) (byte) 0, multivariateFunction4, goalType5, doubleArray12, doubleArray21, doubleArray30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #20
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aconst_null
38: astore_3
39: aconst_null
40: astore        4
42: bipush        6
44: newarray       double
46: dup
47: iconst_0
48: dconst_0
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #10
55: dastore
56: dup
57: iconst_2
58: dconst_1
59: dastore
60: dup
61: iconst_3
62: dconst_0
63: dastore
64: dup
65: iconst_4
66: dconst_1
67: dastore
68: dup
69: iconst_5
70: ldc2_w        #21
73: dastore
74: astore        5
76: aload         5
78: invokestatic  #23
81: aload         5
83: invokestatic  #24
86: astore        6
88: bipush        6
90: newarray       double
92: dup
93: iconst_0
94: dconst_0
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #10
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: dup
107: iconst_3
108: dconst_0
109: dastore
110: dup
111: iconst_4
112: dconst_1
113: dastore
114: dup
115: iconst_5
116: ldc2_w        #21
119: dastore
120: astore        7
122: aload         7
124: invokestatic  #23
127: aload         7
129: invokestatic  #24
132: astore        8
134: bipush        6
136: newarray       double
138: dup
139: iconst_0
140: dconst_0
141: dastore
142: dup
143: iconst_1
144: ldc2_w        #10
147: dastore
148: dup
149: iconst_2
150: dconst_1
151: dastore
152: dup
153: iconst_3
154: dconst_0
155: dastore
156: dup
157: iconst_4
158: dconst_1
159: dastore
160: dup
161: iconst_5
162: ldc2_w        #21
165: dastore
166: astore        9
168: aload         9
170: invokestatic  #23
173: aload         9
175: invokestatic  #24
178: astore        10
180: aload_2
181: iconst_0
182: aload_3
183: aload         4
185: aload         5
187: aload         7
189: aload         9
191: invokevirtual #25
194: astore        11
196: ldc           #13
198: invokestatic  #14
201: goto          206
204: astore        11
206: aload         5
208: invokestatic  #16
211: aload         5
213: invokestatic  #17
216: ldc           #26
218: invokestatic  #19
221: aload         6
223: invokestatic  #16
226: aload         7
228: invokestatic  #16
231: aload         7
233: invokestatic  #17
236: ldc           #26
238: invokestatic  #19
241: aload         8
243: invokestatic  #16
246: aload         9
248: invokestatic  #16
251: aload         9
253: invokestatic  #17
256: ldc           #26
258: invokestatic  #19
261: aload         10
263: invokestatic  #16
266: return
Exception table:
from    to  target type
180   201   204   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 67
End line: 79
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = cMAESOptimizer2.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #27
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #28
41: astore_3
42: ldc           #29
44: invokestatic  #14
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 82
End line: 109
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction20 = null;
        org.apache.commons.math3.optimization.GoalType goalType21 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray29 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray29);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister37 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker39 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray29, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister37, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair41 = cMAESOptimizer18.optimize((-1068072960), multivariateFunction20, goalType21, doubleArray29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + goalType21 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType21.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #31
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aconst_null
100: astore        5
102: getstatic     #37
105: astore        6
107: bipush        6
109: newarray       double
111: dup
112: iconst_0
113: dconst_0
114: dastore
115: dup
116: iconst_1
117: ldc2_w        #10
120: dastore
121: dup
122: iconst_2
123: dconst_1
124: dastore
125: dup
126: iconst_3
127: dconst_0
128: dastore
129: dup
130: iconst_4
131: dconst_1
132: dastore
133: dup
134: iconst_5
135: ldc2_w        #21
138: dastore
139: astore        7
141: aload         7
143: invokestatic  #23
146: new           #32
149: dup
150: iconst_1
151: invokespecial #33
154: astore        8
156: new           #34
159: dup
160: invokespecial #35
163: astore        9
165: new           #8
168: dup
169: iconst_5
170: aload         7
172: bipush        100
174: dconst_0
175: iconst_0
176: iconst_0
177: bipush        100
179: aload         8
181: iconst_1
182: aload         9
184: invokespecial #36
187: astore        10
189: aload         4
191: ldc           #38
193: aload         5
195: aload         6
197: aload         7
199: invokevirtual #12
202: astore        11
204: ldc           #13
206: invokestatic  #14
209: goto          214
212: astore        11
214: aload_1
215: invokestatic  #16
218: aload_1
219: invokestatic  #17
222: ldc           #26
224: invokestatic  #19
227: new           #39
230: dup
231: invokespecial #40
234: ldc           #41
236: invokevirtual #42
239: aload         6
241: invokevirtual #43
244: ldc           #44
246: invokevirtual #42
249: getstatic     #37
252: invokevirtual #43
255: ldc           #41
257: invokevirtual #42
260: invokevirtual #45
263: aload         6
265: getstatic     #37
268: invokevirtual #46
271: invokestatic  #47
274: aload         7
276: invokestatic  #16
279: aload         7
281: invokestatic  #17
284: ldc           #26
286: invokestatic  #19
289: return
Exception table:
from    to  target type
189   209   212   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 112
End line: 138
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction20 = null;
        org.apache.commons.math3.optimization.GoalType goalType21 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.RealMatrix realMatrix30 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair31 = cMAESOptimizer18.optimize((int) (short) 0, multivariateFunction20, goalType21, doubleArray28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + goalType21 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType21.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #48
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aconst_null
100: astore        5
102: getstatic     #37
105: astore        6
107: bipush        6
109: newarray       double
111: dup
112: iconst_0
113: dconst_0
114: dastore
115: dup
116: iconst_1
117: ldc2_w        #10
120: dastore
121: dup
122: iconst_2
123: dconst_1
124: dastore
125: dup
126: iconst_3
127: dconst_0
128: dastore
129: dup
130: iconst_4
131: dconst_1
132: dastore
133: dup
134: iconst_5
135: ldc2_w        #21
138: dastore
139: astore        7
141: aload         7
143: invokestatic  #23
146: aload         7
148: invokestatic  #24
151: astore        8
153: aload         4
155: iconst_0
156: aload         5
158: aload         6
160: aload         7
162: invokevirtual #12
165: astore        9
167: ldc           #13
169: invokestatic  #14
172: goto          177
175: astore        9
177: aload_1
178: invokestatic  #16
181: aload_1
182: invokestatic  #17
185: ldc           #26
187: invokestatic  #19
190: new           #39
193: dup
194: invokespecial #40
197: ldc           #41
199: invokevirtual #42
202: aload         6
204: invokevirtual #43
207: ldc           #44
209: invokevirtual #42
212: getstatic     #37
215: invokevirtual #43
218: ldc           #41
220: invokevirtual #42
223: invokevirtual #45
226: aload         6
228: getstatic     #37
231: invokevirtual #46
234: invokestatic  #47
237: aload         7
239: invokestatic  #16
242: aload         7
244: invokestatic  #17
247: ldc           #26
249: invokestatic  #19
252: aload         8
254: invokestatic  #16
257: return
Exception table:
from    to  target type
153   172   175   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 141
End line: 163
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray13 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray13);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray13, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair25 = cMAESOptimizer2.optimize(35, multivariateFunction4, goalType5, doubleArray13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #49
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aconst_null
38: astore_3
39: getstatic     #37
42: astore        4
44: bipush        6
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #10
57: dastore
58: dup
59: iconst_2
60: dconst_1
61: dastore
62: dup
63: iconst_3
64: dconst_0
65: dastore
66: dup
67: iconst_4
68: dconst_1
69: dastore
70: dup
71: iconst_5
72: ldc2_w        #21
75: dastore
76: astore        5
78: aload         5
80: invokestatic  #23
83: new           #32
86: dup
87: iconst_1
88: invokespecial #33
91: astore        6
93: new           #34
96: dup
97: invokespecial #35
100: astore        7
102: new           #8
105: dup
106: iconst_5
107: aload         5
109: bipush        100
111: dconst_0
112: iconst_0
113: iconst_0
114: bipush        100
116: aload         6
118: iconst_1
119: aload         7
121: invokespecial #36
124: astore        8
126: aload_2
127: bipush        35
129: aload_3
130: aload         4
132: aload         5
134: invokevirtual #12
137: astore        9
139: ldc           #13
141: invokestatic  #14
144: goto          149
147: astore        9
149: new           #39
152: dup
153: invokespecial #40
156: ldc           #41
158: invokevirtual #42
161: aload         4
163: invokevirtual #43
166: ldc           #44
168: invokevirtual #42
171: getstatic     #37
174: invokevirtual #43
177: ldc           #41
179: invokevirtual #42
182: invokevirtual #45
185: aload         4
187: getstatic     #37
190: invokevirtual #46
193: invokestatic  #47
196: aload         5
198: invokestatic  #16
201: aload         5
203: invokestatic  #17
206: ldc           #26
208: invokestatic  #19
211: return
Exception table:
from    to  target type
126   144   147   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 166
End line: 178
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair3 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #50
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #51
41: astore_3
42: ldc           #29
44: invokestatic  #14
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 181
End line: 195
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #52
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #53
41: astore_3
42: aload_2
43: invokevirtual #54
46: astore        4
48: ldc           #29
50: invokestatic  #14
53: goto          58
56: astore        4
58: aload_3
59: invokestatic  #16
62: return
Exception table:
from    to  target type
42    53    56   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 198
End line: 210
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #55
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #56
41: astore_3
42: ldc           #29
44: invokestatic  #14
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
37    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 213
End line: 245
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.RealMatrix realMatrix30 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray28);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair32 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray28, (double) (-1.0f));
        double[] doubleArray33 = pointValuePair32.getPoint();
        org.apache.commons.math3.optimization.PointValuePair pointValuePair34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = pointValuePairConvergenceChecker20.converged(0, pointValuePair32, pointValuePair34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #53
111: astore        6
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        7
147: aload         7
149: invokestatic  #23
152: aload         7
154: invokestatic  #24
157: astore        8
159: new           #58
162: dup
163: aload         7
165: ldc2_w        #59
168: invokespecial #61
171: astore        9
173: aload         9
175: invokevirtual #62
178: astore        10
180: aconst_null
181: astore        11
183: aload         6
185: iconst_0
186: aload         9
188: aload         11
190: invokeinterface #63,  4
195: istore        12
197: ldc           #29
199: invokestatic  #14
202: goto          207
205: astore        12
207: aload_1
208: invokestatic  #16
211: aload_1
212: invokestatic  #17
215: ldc           #26
217: invokestatic  #19
220: aload         5
222: invokestatic  #16
225: aload         6
227: invokestatic  #16
230: aload         7
232: invokestatic  #16
235: aload         7
237: invokestatic  #17
240: ldc           #26
242: invokestatic  #19
245: aload         8
247: invokestatic  #16
250: aload         10
252: invokestatic  #16
255: aload         10
257: invokestatic  #17
260: ldc           #26
262: invokestatic  #19
265: return
Exception table:
from    to  target type
183   202   205   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 248
End line: 265
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 1 and 2 are not strictly increasing (100 >= 1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #64
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload_1
100: invokestatic  #65
103: ldc           #66
105: invokestatic  #14
108: goto          113
111: astore        5
113: aload_1
114: invokestatic  #16
117: aload_1
118: invokestatic  #17
121: ldc           #26
123: invokestatic  #19
126: return
Exception table:
from    to  target type
99   108   111   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 268
End line: 306
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray25 = new double[] { '4' };
        double[] doubleArray26 = new double[] {};
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray26);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException33 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection31, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection34 = nonMonotonicSequenceException33.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray25, orderDirection34, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = cMAESOptimizer18.optimize(10, multivariateFunction22, goalType23, doubleArray25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection34 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection34.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #68
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #69
111: istore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: ldc2_w        #70
129: dastore
130: astore        9
132: iconst_0
133: newarray       double
135: astore        10
137: aload         9
139: aload         10
141: invokestatic  #72
144: istore        11
146: getstatic     #73
149: astore        12
151: new           #67
154: dup
155: ldc2_w        #74
158: invokestatic  #76
161: iconst_1
162: invokestatic  #77
165: bipush        100
167: aload         12
169: iconst_1
170: invokespecial #78
173: astore        13
175: aload         13
177: invokevirtual #79
180: astore        14
182: aload         9
184: aload         14
186: iconst_1
187: invokestatic  #80
190: aload         4
192: bipush        10
194: aload         7
196: aload         8
198: aload         9
200: invokevirtual #12
203: astore        15
205: ldc           #13
207: invokestatic  #14
210: goto          215
213: astore        15
215: aload_1
216: invokestatic  #16
219: aload_1
220: invokestatic  #17
223: ldc           #26
225: invokestatic  #19
228: aload         5
230: invokestatic  #16
233: new           #39
236: dup
237: invokespecial #40
240: ldc           #41
242: invokevirtual #42
245: iload         6
247: invokevirtual #81
250: ldc           #44
252: invokevirtual #42
255: iconst_0
256: invokevirtual #81
259: ldc           #41
261: invokevirtual #42
264: invokevirtual #45
267: iload         6
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #47
280: new           #39
283: dup
284: invokespecial #40
287: ldc           #41
289: invokevirtual #42
292: aload         8
294: invokevirtual #43
297: ldc           #44
299: invokevirtual #42
302: getstatic     #37
305: invokevirtual #43
308: ldc           #41
310: invokevirtual #42
313: invokevirtual #45
316: aload         8
318: getstatic     #37
321: invokevirtual #46
324: invokestatic  #47
327: aload         9
329: invokestatic  #16
332: aload         9
334: invokestatic  #17
337: ldc           #82
339: invokestatic  #19
342: aload         10
344: invokestatic  #16
347: aload         10
349: invokestatic  #17
352: ldc           #83
354: invokestatic  #19
357: new           #39
360: dup
361: invokespecial #40
364: ldc           #41
366: invokevirtual #42
369: iload         11
371: invokevirtual #84
374: ldc           #44
376: invokevirtual #42
379: iconst_0
380: invokevirtual #84
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: iload         11
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #47
404: new           #39
407: dup
408: invokespecial #40
411: ldc           #41
413: invokevirtual #42
416: aload         12
418: invokevirtual #43
421: ldc           #44
423: invokevirtual #42
426: getstatic     #73
429: invokevirtual #43
432: ldc           #41
434: invokevirtual #42
437: invokevirtual #45
440: aload         12
442: getstatic     #73
445: invokevirtual #85
448: invokestatic  #47
451: new           #39
454: dup
455: invokespecial #40
458: ldc           #41
460: invokevirtual #42
463: aload         14
465: invokevirtual #43
468: ldc           #44
470: invokevirtual #42
473: getstatic     #73
476: invokevirtual #43
479: ldc           #41
481: invokevirtual #42
484: invokevirtual #45
487: aload         14
489: getstatic     #73
492: invokevirtual #85
495: invokestatic  #47
498: return
Exception table:
from    to  target type
190   210   213   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 309
End line: 343
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray10 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray11 = new double[][] { doubleArray10 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix13 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray11, true);
        double[][] doubleArray14 = array2DRowRealMatrix13.getData();
        double[] doubleArray17 = new double[] { '4' };
        double[] doubleArray18 = new double[] {};
        boolean boolean19 = org.apache.commons.math3.util.MathArrays.equals(doubleArray17, doubleArray18);
        array2DRowRealMatrix13.setColumn((int) (short) 1, doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair21 = cMAESOptimizer2.optimize(0, multivariateFunction5, goalType6, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #86
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aconst_null
43: astore        4
45: getstatic     #37
48: astore        5
50: iconst_3
51: newarray       double
53: dup
54: iconst_0
55: ldc2_w        #87
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #59
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #59
70: dastore
71: astore        6
73: iconst_1
74: anewarray     #89
77: dup
78: iconst_0
79: aload         6
81: aastore
82: astore        7
84: new           #90
87: dup
88: aload         7
90: iconst_1
91: invokespecial #91
94: astore        8
96: aload         8
98: invokevirtual #92
101: astore        9
103: iconst_1
104: newarray       double
106: dup
107: iconst_0
108: ldc2_w        #70
111: dastore
112: astore        10
114: iconst_0
115: newarray       double
117: astore        11
119: aload         10
121: aload         11
123: invokestatic  #72
126: istore        12
128: aload         8
130: iconst_1
131: aload         10
133: invokevirtual #93
136: aload_2
137: iconst_0
138: aload         4
140: aload         5
142: aload         10
144: invokevirtual #12
147: astore        13
149: ldc           #13
151: invokestatic  #14
154: goto          159
157: astore        13
159: new           #39
162: dup
163: invokespecial #40
166: ldc           #41
168: invokevirtual #42
171: iload_3
172: invokevirtual #81
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #81
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload_3
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #47
204: new           #39
207: dup
208: invokespecial #40
211: ldc           #41
213: invokevirtual #42
216: aload         5
218: invokevirtual #43
221: ldc           #44
223: invokevirtual #42
226: getstatic     #37
229: invokevirtual #43
232: ldc           #41
234: invokevirtual #42
237: invokevirtual #45
240: aload         5
242: getstatic     #37
245: invokevirtual #46
248: invokestatic  #47
251: aload         6
253: invokestatic  #16
256: aload         6
258: invokestatic  #17
261: ldc           #94
263: invokestatic  #19
266: aload         7
268: invokestatic  #16
271: aload         9
273: invokestatic  #16
276: aload         10
278: invokestatic  #16
281: aload         10
283: invokestatic  #17
286: ldc           #82
288: invokestatic  #19
291: aload         11
293: invokestatic  #16
296: aload         11
298: invokestatic  #17
301: ldc           #83
303: invokestatic  #19
306: new           #39
309: dup
310: invokespecial #40
313: ldc           #41
315: invokevirtual #42
318: iload         12
320: invokevirtual #84
323: ldc           #44
325: invokevirtual #42
328: iconst_0
329: invokevirtual #84
332: ldc           #41
334: invokevirtual #42
337: invokevirtual #45
340: iload         12
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #47
353: return
Exception table:
from    to  target type
136   154   157   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 346
End line: 406
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        double[][] doubleArray7 = array2DRowRealMatrix6.getData();
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.RealVector realVector19 = arrayRealVector18.copy();
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector28, arrayRealVector37);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        double[] doubleArray56 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray56);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray56);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector58);
        double[] doubleArray66 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray66);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray66);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector69 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector58, arrayRealVector68);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector70 = arrayRealVector37.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector68);
        double[] doubleArray71 = arrayRealVector37.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector18, doubleArray71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            array2DRowRealMatrix6.setColumn((-1), doubleArray71);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: column index (-1)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #95
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #87
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #59
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #59
44: dastore
45: astore_1
46: iconst_1
47: anewarray     #89
50: dup
51: iconst_0
52: aload_1
53: aastore
54: astore_2
55: new           #90
58: dup
59: aload_2
60: iconst_1
61: invokespecial #91
64: astore_3
65: aload_3
66: invokevirtual #92
69: astore        4
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore        5
105: aload         5
107: invokestatic  #23
110: new           #96
113: dup
114: aload         5
116: invokespecial #97
119: astore        6
121: aload         6
123: invokevirtual #98
126: astore        7
128: bipush        6
130: newarray       double
132: dup
133: iconst_0
134: dconst_0
135: dastore
136: dup
137: iconst_1
138: ldc2_w        #10
141: dastore
142: dup
143: iconst_2
144: dconst_1
145: dastore
146: dup
147: iconst_3
148: dconst_0
149: dastore
150: dup
151: iconst_4
152: dconst_1
153: dastore
154: dup
155: iconst_5
156: ldc2_w        #21
159: dastore
160: astore        8
162: aload         8
164: invokestatic  #23
167: new           #96
170: dup
171: aload         8
173: invokespecial #97
176: astore        9
178: bipush        6
180: newarray       double
182: dup
183: iconst_0
184: dconst_0
185: dastore
186: dup
187: iconst_1
188: ldc2_w        #10
191: dastore
192: dup
193: iconst_2
194: dconst_1
195: dastore
196: dup
197: iconst_3
198: dconst_0
199: dastore
200: dup
201: iconst_4
202: dconst_1
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #21
209: dastore
210: astore        10
212: aload         10
214: invokestatic  #23
217: new           #96
220: dup
221: aload         10
223: invokespecial #97
226: astore        11
228: new           #96
231: dup
232: aload         9
234: aload         11
236: invokespecial #99
239: astore        12
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #10
254: dastore
255: dup
256: iconst_2
257: dconst_1
258: dastore
259: dup
260: iconst_3
261: dconst_0
262: dastore
263: dup
264: iconst_4
265: dconst_1
266: dastore
267: dup
268: iconst_5
269: ldc2_w        #21
272: dastore
273: astore        13
275: aload         13
277: invokestatic  #23
280: new           #96
283: dup
284: aload         13
286: invokespecial #97
289: astore        14
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: ldc2_w        #10
304: dastore
305: dup
306: iconst_2
307: dconst_1
308: dastore
309: dup
310: iconst_3
311: dconst_0
312: dastore
313: dup
314: iconst_4
315: dconst_1
316: dastore
317: dup
318: iconst_5
319: ldc2_w        #21
322: dastore
323: astore        15
325: aload         15
327: invokestatic  #23
330: new           #96
333: dup
334: aload         15
336: invokespecial #97
339: astore        16
341: new           #96
344: dup
345: aload         14
347: aload         16
349: invokespecial #99
352: astore        17
354: bipush        6
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #10
367: dastore
368: dup
369: iconst_2
370: dconst_1
371: dastore
372: dup
373: iconst_3
374: dconst_0
375: dastore
376: dup
377: iconst_4
378: dconst_1
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #21
385: dastore
386: astore        18
388: aload         18
390: invokestatic  #23
393: new           #96
396: dup
397: aload         18
399: invokespecial #97
402: astore        19
404: new           #96
407: dup
408: aload         16
410: aload         19
412: invokespecial #99
415: astore        20
417: aload         11
419: dconst_1
420: dconst_1
421: aload         19
423: invokevirtual #100
426: astore        21
428: aload         11
430: invokevirtual #101
433: astore        22
435: new           #96
438: dup
439: aload         6
441: aload         22
443: invokespecial #102
446: astore        23
448: new           #8
451: dup
452: bipush        100
454: aload         22
456: invokespecial #9
459: astore        24
461: aload_3
462: iconst_m1
463: aload         22
465: invokevirtual #93
468: ldc           #103
470: invokestatic  #14
473: goto          478
476: astore        25
478: aload_1
479: invokestatic  #16
482: aload_1
483: invokestatic  #17
486: ldc           #94
488: invokestatic  #19
491: aload_2
492: invokestatic  #16
495: aload         4
497: invokestatic  #16
500: aload         5
502: invokestatic  #16
505: aload         5
507: invokestatic  #17
510: ldc           #26
512: invokestatic  #19
515: aload         7
517: invokestatic  #16
520: aload         8
522: invokestatic  #16
525: aload         8
527: invokestatic  #17
530: ldc           #26
532: invokestatic  #19
535: aload         10
537: invokestatic  #16
540: aload         10
542: invokestatic  #17
545: ldc           #26
547: invokestatic  #19
550: aload         13
552: invokestatic  #16
555: aload         13
557: invokestatic  #17
560: ldc           #26
562: invokestatic  #19
565: aload         15
567: invokestatic  #16
570: aload         15
572: invokestatic  #17
575: ldc           #26
577: invokestatic  #19
580: aload         18
582: invokestatic  #16
585: aload         18
587: invokestatic  #17
590: ldc           #26
592: invokestatic  #19
595: aload         21
597: invokestatic  #16
600: aload         22
602: invokestatic  #16
605: aload         22
607: invokestatic  #17
610: ldc           #105
612: invokestatic  #19
615: return
Exception table:
from    to  target type
461   473   476   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 409
End line: 453
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix33 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        double[] doubleArray35 = null;
        double[] doubleArray42 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix44 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix45 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair47 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray42, (java.lang.Double) 1.401298464324817E-45d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair48 = cMAESOptimizer18.optimize((int) (short) 0, multivariateFunction23, goalType24, doubleArray31, doubleArray35, doubleArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix33);
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(realMatrix45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #106
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #53
111: astore        6
113: aload         4
115: invokevirtual #69
118: istore        7
120: aconst_null
121: astore        8
123: getstatic     #37
126: astore        9
128: bipush        6
130: newarray       double
132: dup
133: iconst_0
134: dconst_0
135: dastore
136: dup
137: iconst_1
138: ldc2_w        #10
141: dastore
142: dup
143: iconst_2
144: dconst_1
145: dastore
146: dup
147: iconst_3
148: dconst_0
149: dastore
150: dup
151: iconst_4
152: dconst_1
153: dastore
154: dup
155: iconst_5
156: ldc2_w        #21
159: dastore
160: astore        10
162: aload         10
164: invokestatic  #23
167: aload         10
169: invokestatic  #24
172: astore        11
174: aload         10
176: invokestatic  #24
179: astore        12
181: aconst_null
182: astore        13
184: bipush        6
186: newarray       double
188: dup
189: iconst_0
190: dconst_0
191: dastore
192: dup
193: iconst_1
194: ldc2_w        #10
197: dastore
198: dup
199: iconst_2
200: dconst_1
201: dastore
202: dup
203: iconst_3
204: dconst_0
205: dastore
206: dup
207: iconst_4
208: dconst_1
209: dastore
210: dup
211: iconst_5
212: ldc2_w        #21
215: dastore
216: astore        14
218: aload         14
220: invokestatic  #23
223: aload         14
225: invokestatic  #24
228: astore        15
230: aload         14
232: invokestatic  #24
235: astore        16
237: new           #107
240: dup
241: aload         14
243: ldc2_w        #108
246: invokestatic  #76
249: invokespecial #110
252: astore        17
254: aload         4
256: iconst_0
257: aload         8
259: aload         9
261: aload         10
263: aload         13
265: aload         14
267: invokevirtual #25
270: astore        18
272: ldc           #13
274: invokestatic  #14
277: goto          282
280: astore        18
282: aload_1
283: invokestatic  #16
286: aload_1
287: invokestatic  #17
290: ldc           #26
292: invokestatic  #19
295: aload         5
297: invokestatic  #16
300: aload         6
302: invokestatic  #16
305: new           #39
308: dup
309: invokespecial #40
312: ldc           #41
314: invokevirtual #42
317: iload         7
319: invokevirtual #81
322: ldc           #44
324: invokevirtual #42
327: iconst_0
328: invokevirtual #81
331: ldc           #41
333: invokevirtual #42
336: invokevirtual #45
339: iload         7
341: ifne          348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #47
352: new           #39
355: dup
356: invokespecial #40
359: ldc           #41
361: invokevirtual #42
364: aload         9
366: invokevirtual #43
369: ldc           #44
371: invokevirtual #42
374: getstatic     #37
377: invokevirtual #43
380: ldc           #41
382: invokevirtual #42
385: invokevirtual #45
388: aload         9
390: getstatic     #37
393: invokevirtual #46
396: invokestatic  #47
399: aload         10
401: invokestatic  #16
404: aload         10
406: invokestatic  #17
409: ldc           #26
411: invokestatic  #19
414: aload         11
416: invokestatic  #16
419: aload         12
421: invokestatic  #16
424: aload         14
426: invokestatic  #16
429: aload         14
431: invokestatic  #17
434: ldc           #26
436: invokestatic  #19
439: aload         15
441: invokestatic  #16
444: aload         16
446: invokestatic  #16
449: return
Exception table:
from    to  target type
254   277   280   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 456
End line: 475
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        double double25 = simpleValueChecker23.getAbsoluteThreshold();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.2250738585072014E-306d + "'", double25 == 2.2250738585072014E-306d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: aload_1
62: invokestatic  #24
65: astore_2
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore_3
89: new           #32
92: dup
93: aload_3
94: invokespecial #112
97: astore        4
99: aload         4
101: invokevirtual #113
104: fstore        5
106: new           #34
109: dup
110: invokespecial #35
113: astore        6
115: new           #8
118: dup
119: bipush        32
121: aload_1
122: iconst_0
123: ldc2_w        #114
126: iconst_1
127: ldc           #38
129: bipush        100
131: aload         4
133: iconst_1
134: aload         6
136: invokespecial #36
139: astore        7
141: aload         6
143: invokevirtual #116
146: dstore        8
148: aload_1
149: invokestatic  #16
152: aload_1
153: invokestatic  #17
156: ldc           #26
158: invokestatic  #19
161: aload_2
162: invokestatic  #16
165: aload_3
166: invokestatic  #16
169: aload_3
170: invokestatic  #117
173: ldc           #118
175: invokestatic  #19
178: new           #39
181: dup
182: invokespecial #40
185: ldc           #41
187: invokevirtual #42
190: fload         5
192: invokevirtual #119
195: ldc           #44
197: invokevirtual #42
200: ldc           #120
202: invokevirtual #119
205: ldc           #41
207: invokevirtual #42
210: invokevirtual #45
213: fload         5
215: ldc           #120
217: fcmpl
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #47
229: new           #39
232: dup
233: invokespecial #40
236: ldc           #41
238: invokevirtual #42
241: dload         8
243: invokevirtual #121
246: ldc           #44
248: invokevirtual #42
251: ldc2_w        #122
254: invokevirtual #121
257: ldc           #41
259: invokevirtual #42
262: invokevirtual #45
265: dload         8
267: ldc2_w        #122
270: dcmpl
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #47
282: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 478
End line: 503
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair25 = cMAESOptimizer18.optimizeInternal((int) (byte) 10, multivariateFunction22, goalType23, doubleArray24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #125
111: istore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: aconst_null
122: astore        9
124: aload         4
126: bipush        10
128: aload         7
130: aload         8
132: aload         9
134: invokevirtual #126
137: astore        10
139: ldc           #13
141: invokestatic  #14
144: goto          149
147: astore        10
149: aload_1
150: invokestatic  #16
153: aload_1
154: invokestatic  #17
157: ldc           #26
159: invokestatic  #19
162: aload         5
164: invokestatic  #16
167: new           #39
170: dup
171: invokespecial #40
174: ldc           #41
176: invokevirtual #42
179: iload         6
181: invokevirtual #81
184: ldc           #44
186: invokevirtual #42
189: iconst_0
190: invokevirtual #81
193: ldc           #41
195: invokevirtual #42
198: invokevirtual #45
201: iload         6
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #47
214: new           #39
217: dup
218: invokespecial #40
221: ldc           #41
223: invokevirtual #42
226: aload         8
228: invokevirtual #43
231: ldc           #44
233: invokevirtual #42
236: getstatic     #37
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: aload         8
252: getstatic     #37
255: invokevirtual #46
258: invokestatic  #47
261: return
Exception table:
from    to  target type
124   144   147   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 506
End line: 529
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction21 = null;
        org.apache.commons.math3.optimization.GoalType goalType22 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair24 = cMAESOptimizer18.optimize(100, multivariateFunction21, goalType22, doubleArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + goalType22 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType22.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #127
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #125
104: istore        5
106: aconst_null
107: astore        6
109: getstatic     #37
112: astore        7
114: aconst_null
115: astore        8
117: aload         4
119: bipush        100
121: aload         6
123: aload         7
125: aload         8
127: invokevirtual #12
130: astore        9
132: ldc           #29
134: invokestatic  #14
137: goto          142
140: astore        9
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: new           #39
158: dup
159: invokespecial #40
162: ldc           #41
164: invokevirtual #42
167: iload         5
169: invokevirtual #81
172: ldc           #44
174: invokevirtual #42
177: iconst_0
178: invokevirtual #81
181: ldc           #41
183: invokevirtual #42
186: invokevirtual #45
189: iload         5
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #47
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: aload         7
216: invokevirtual #43
219: ldc           #44
221: invokevirtual #42
224: getstatic     #37
227: invokevirtual #43
230: ldc           #41
232: invokevirtual #42
235: invokevirtual #45
238: aload         7
240: getstatic     #37
243: invokevirtual #46
246: invokestatic  #47
249: return
Exception table:
from    to  target type
117   137   140   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 532
End line: 548
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #128
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aload_2
43: invokevirtual #53
46: astore        4
48: aload_2
49: invokevirtual #56
52: astore        5
54: ldc           #29
56: invokestatic  #14
59: goto          64
62: astore        5
64: new           #39
67: dup
68: invokespecial #40
71: ldc           #41
73: invokevirtual #42
76: iload_3
77: invokevirtual #81
80: ldc           #44
82: invokevirtual #42
85: iconst_0
86: invokevirtual #81
89: ldc           #41
91: invokevirtual #42
94: invokevirtual #45
97: iload_3
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #47
109: aload         4
111: invokestatic  #16
114: return
Exception table:
from    to  target type
48    59    62   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 551
End line: 567
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = cMAESOptimizer2.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(doubleList4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #129
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #53
41: astore_3
42: aload_2
43: invokevirtual #130
46: astore        4
48: aload_2
49: invokevirtual #28
52: astore        5
54: ldc           #29
56: invokestatic  #14
59: goto          64
62: astore        5
64: aload_3
65: invokestatic  #16
68: aload         4
70: invokestatic  #16
73: return
Exception table:
from    to  target type
48    59    62   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 570
End line: 586
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray5 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #131
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aload_2
43: invokevirtual #53
46: astore        4
48: aload_2
49: invokevirtual #54
52: astore        5
54: ldc           #29
56: invokestatic  #14
59: goto          64
62: astore        5
64: new           #39
67: dup
68: invokespecial #40
71: ldc           #41
73: invokevirtual #42
76: iload_3
77: invokevirtual #81
80: ldc           #44
82: invokevirtual #42
85: iconst_0
86: invokevirtual #81
89: ldc           #41
91: invokevirtual #42
94: invokevirtual #45
97: iload_3
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #47
109: aload         4
111: invokestatic  #16
114: return
Exception table:
from    to  target type
48    59    62   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 589
End line: 646
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray28 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray29 = new double[][] { doubleArray28 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix31 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray29, true);
        double[][] doubleArray32 = array2DRowRealMatrix31.getData();
        double[] doubleArray35 = new double[] { '4' };
        double[] doubleArray36 = new double[] {};
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.equals(doubleArray35, doubleArray36);
        array2DRowRealMatrix31.setColumn((int) (short) 1, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray45);
        org.apache.commons.math3.linear.RealMatrix realMatrix47 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray45);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair49 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray45, (double) (-1.0f));
        double[] doubleArray50 = pointValuePair49.getPoint();
        double double51 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray35, doubleArray50);
        double double52 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair53 = cMAESOptimizer18.optimize((int) (short) -10, multivariateFunction23, goalType24, doubleArray50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix47);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.5087060905671d + "'", double52 == 100.5087060905671d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #69
111: istore        6
113: aload         4
115: invokevirtual #133
118: astore        7
120: aconst_null
121: astore        8
123: getstatic     #37
126: astore        9
128: iconst_3
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #87
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #59
142: dastore
143: dup
144: iconst_2
145: ldc2_w        #59
148: dastore
149: astore        10
151: iconst_1
152: anewarray     #89
155: dup
156: iconst_0
157: aload         10
159: aastore
160: astore        11
162: new           #90
165: dup
166: aload         11
168: iconst_1
169: invokespecial #91
172: astore        12
174: aload         12
176: invokevirtual #92
179: astore        13
181: iconst_1
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #70
189: dastore
190: astore        14
192: iconst_0
193: newarray       double
195: astore        15
197: aload         14
199: aload         15
201: invokestatic  #72
204: istore        16
206: aload         12
208: iconst_1
209: aload         14
211: invokevirtual #93
214: bipush        6
216: newarray       double
218: dup
219: iconst_0
220: dconst_0
221: dastore
222: dup
223: iconst_1
224: ldc2_w        #10
227: dastore
228: dup
229: iconst_2
230: dconst_1
231: dastore
232: dup
233: iconst_3
234: dconst_0
235: dastore
236: dup
237: iconst_4
238: dconst_1
239: dastore
240: dup
241: iconst_5
242: ldc2_w        #21
245: dastore
246: astore        17
248: aload         17
250: invokestatic  #23
253: aload         17
255: invokestatic  #24
258: astore        18
260: new           #58
263: dup
264: aload         17
266: ldc2_w        #59
269: invokespecial #61
272: astore        19
274: aload         19
276: invokevirtual #62
279: astore        20
281: aload         14
283: aload         20
285: invokestatic  #134
288: dstore        21
290: aload         20
292: invokestatic  #135
295: dstore        23
297: aload         4
299: bipush        -10
301: aload         8
303: aload         9
305: aload         20
307: invokevirtual #12
310: astore        25
312: ldc           #13
314: invokestatic  #14
317: goto          322
320: astore        25
322: aload_1
323: invokestatic  #16
326: aload_1
327: invokestatic  #17
330: ldc           #26
332: invokestatic  #19
335: aload         5
337: invokestatic  #16
340: new           #39
343: dup
344: invokespecial #40
347: ldc           #41
349: invokevirtual #42
352: iload         6
354: invokevirtual #81
357: ldc           #44
359: invokevirtual #42
362: iconst_0
363: invokevirtual #81
366: ldc           #41
368: invokevirtual #42
371: invokevirtual #45
374: iload         6
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #47
387: aload         7
389: invokestatic  #16
392: new           #39
395: dup
396: invokespecial #40
399: ldc           #41
401: invokevirtual #42
404: aload         9
406: invokevirtual #43
409: ldc           #44
411: invokevirtual #42
414: getstatic     #37
417: invokevirtual #43
420: ldc           #41
422: invokevirtual #42
425: invokevirtual #45
428: aload         9
430: getstatic     #37
433: invokevirtual #46
436: invokestatic  #47
439: aload         10
441: invokestatic  #16
444: aload         10
446: invokestatic  #17
449: ldc           #94
451: invokestatic  #19
454: aload         11
456: invokestatic  #16
459: aload         13
461: invokestatic  #16
464: aload         14
466: invokestatic  #16
469: aload         14
471: invokestatic  #17
474: ldc           #82
476: invokestatic  #19
479: aload         15
481: invokestatic  #16
484: aload         15
486: invokestatic  #17
489: ldc           #83
491: invokestatic  #19
494: new           #39
497: dup
498: invokespecial #40
501: ldc           #41
503: invokevirtual #42
506: iload         16
508: invokevirtual #84
511: ldc           #44
513: invokevirtual #42
516: iconst_0
517: invokevirtual #84
520: ldc           #41
522: invokevirtual #42
525: invokevirtual #45
528: iload         16
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #47
541: aload         17
543: invokestatic  #16
546: aload         17
548: invokestatic  #17
551: ldc           #26
553: invokestatic  #19
556: aload         18
558: invokestatic  #16
561: aload         20
563: invokestatic  #16
566: aload         20
568: invokestatic  #17
571: ldc           #26
573: invokestatic  #19
576: new           #39
579: dup
580: invokespecial #40
583: ldc           #41
585: invokevirtual #42
588: dload         21
590: invokevirtual #121
593: ldc           #44
595: invokevirtual #42
598: ldc2_w        #70
601: invokevirtual #121
604: ldc           #41
606: invokevirtual #42
609: invokevirtual #45
612: dload         21
614: ldc2_w        #70
617: dcmpl
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #47
629: new           #39
632: dup
633: invokespecial #40
636: ldc           #41
638: invokevirtual #42
641: dload         23
643: invokevirtual #121
646: ldc           #44
648: invokevirtual #42
651: ldc2_w        #136
654: invokevirtual #121
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: dload         23
667: ldc2_w        #136
670: dcmpl
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #47
682: return
Exception table:
from    to  target type
297   317   320   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 649
End line: 696
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray26 = new double[] { '4' };
        double[] doubleArray27 = new double[] {};
        boolean boolean28 = org.apache.commons.math3.util.MathArrays.equals(doubleArray26, doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.RealMatrix realMatrix37 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray45);
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray26, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair48 = cMAESOptimizer18.optimizeInternal(31, multivariateFunction23, goalType24, doubleArray45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #138
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #69
111: istore        6
113: aload         4
115: invokevirtual #133
118: astore        7
120: aconst_null
121: astore        8
123: getstatic     #37
126: astore        9
128: iconst_1
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #70
136: dastore
137: astore        10
139: iconst_0
140: newarray       double
142: astore        11
144: aload         10
146: aload         11
148: invokestatic  #72
151: istore        12
153: bipush        6
155: newarray       double
157: dup
158: iconst_0
159: dconst_0
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #10
166: dastore
167: dup
168: iconst_2
169: dconst_1
170: dastore
171: dup
172: iconst_3
173: dconst_0
174: dastore
175: dup
176: iconst_4
177: dconst_1
178: dastore
179: dup
180: iconst_5
181: ldc2_w        #21
184: dastore
185: astore        13
187: aload         13
189: invokestatic  #23
192: aload         13
194: invokestatic  #24
197: astore        14
199: new           #96
202: dup
203: aload         10
205: aload         13
207: invokespecial #139
210: astore        15
212: bipush        6
214: newarray       double
216: dup
217: iconst_0
218: dconst_0
219: dastore
220: dup
221: iconst_1
222: ldc2_w        #10
225: dastore
226: dup
227: iconst_2
228: dconst_1
229: dastore
230: dup
231: iconst_3
232: dconst_0
233: dastore
234: dup
235: iconst_4
236: dconst_1
237: dastore
238: dup
239: iconst_5
240: ldc2_w        #21
243: dastore
244: astore        16
246: aload         16
248: invokestatic  #23
251: aload         10
253: aload         16
255: invokestatic  #140
258: istore        17
260: aload         4
262: bipush        31
264: aload         8
266: aload         9
268: aload         16
270: invokevirtual #126
273: astore        18
275: ldc           #13
277: invokestatic  #14
280: goto          285
283: astore        18
285: aload_1
286: invokestatic  #16
289: aload_1
290: invokestatic  #17
293: ldc           #26
295: invokestatic  #19
298: aload         5
300: invokestatic  #16
303: new           #39
306: dup
307: invokespecial #40
310: ldc           #41
312: invokevirtual #42
315: iload         6
317: invokevirtual #81
320: ldc           #44
322: invokevirtual #42
325: iconst_0
326: invokevirtual #81
329: ldc           #41
331: invokevirtual #42
334: invokevirtual #45
337: iload         6
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #47
350: aload         7
352: invokestatic  #16
355: new           #39
358: dup
359: invokespecial #40
362: ldc           #41
364: invokevirtual #42
367: aload         9
369: invokevirtual #43
372: ldc           #44
374: invokevirtual #42
377: getstatic     #37
380: invokevirtual #43
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: aload         9
393: getstatic     #37
396: invokevirtual #46
399: invokestatic  #47
402: aload         10
404: invokestatic  #16
407: aload         10
409: invokestatic  #17
412: ldc           #82
414: invokestatic  #19
417: aload         11
419: invokestatic  #16
422: aload         11
424: invokestatic  #17
427: ldc           #83
429: invokestatic  #19
432: new           #39
435: dup
436: invokespecial #40
439: ldc           #41
441: invokevirtual #42
444: iload         12
446: invokevirtual #84
449: ldc           #44
451: invokevirtual #42
454: iconst_0
455: invokevirtual #84
458: ldc           #41
460: invokevirtual #42
463: invokevirtual #45
466: iload         12
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #47
479: aload         13
481: invokestatic  #16
484: aload         13
486: invokestatic  #17
489: ldc           #26
491: invokestatic  #19
494: aload         14
496: invokestatic  #16
499: aload         16
501: invokestatic  #16
504: aload         16
506: invokestatic  #17
509: ldc           #26
511: invokestatic  #19
514: new           #39
517: dup
518: invokespecial #40
521: ldc           #41
523: invokevirtual #42
526: iload         17
528: invokevirtual #84
531: ldc           #44
533: invokevirtual #42
536: iconst_0
537: invokevirtual #84
540: ldc           #41
542: invokevirtual #42
545: invokevirtual #45
548: iload         17
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #47
561: return
Exception table:
from    to  target type
260   280   283   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 699
End line: 715
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair5 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(doubleList4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #53
41: astore_3
42: aload_2
43: invokevirtual #130
46: astore        4
48: aload_2
49: invokevirtual #51
52: astore        5
54: ldc           #29
56: invokestatic  #14
59: goto          64
62: astore        5
64: aload_3
65: invokestatic  #16
68: aload         4
70: invokestatic  #16
73: return
Exception table:
from    to  target type
48    59    62   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 718
End line: 775
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        double[] doubleArray24 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector17, arrayRealVector26);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        double[] doubleArray45 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray45);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray45);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector38, arrayRealVector47);
        double[] doubleArray55 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector47, arrayRealVector57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = arrayRealVector26.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector57);
        double[] doubleArray60 = arrayRealVector26.toArray();
        double double61 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray60);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair63 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray60, (java.lang.Double) (-0.7853981633974482d));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair64 = cMAESOptimizer2.optimize((int) (short) -10, multivariateFunction7, goalType8, doubleArray60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 201.0174121811342d + "'", double61 == 201.0174121811342d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aload_2
43: invokevirtual #53
46: astore        4
48: aload_2
49: invokevirtual #53
52: astore        5
54: aconst_null
55: astore        6
57: getstatic     #37
60: astore        7
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_0
69: dastore
70: dup
71: iconst_1
72: ldc2_w        #10
75: dastore
76: dup
77: iconst_2
78: dconst_1
79: dastore
80: dup
81: iconst_3
82: dconst_0
83: dastore
84: dup
85: iconst_4
86: dconst_1
87: dastore
88: dup
89: iconst_5
90: ldc2_w        #21
93: dastore
94: astore        8
96: aload         8
98: invokestatic  #23
101: new           #96
104: dup
105: aload         8
107: invokespecial #97
110: astore        9
112: bipush        6
114: newarray       double
116: dup
117: iconst_0
118: dconst_0
119: dastore
120: dup
121: iconst_1
122: ldc2_w        #10
125: dastore
126: dup
127: iconst_2
128: dconst_1
129: dastore
130: dup
131: iconst_3
132: dconst_0
133: dastore
134: dup
135: iconst_4
136: dconst_1
137: dastore
138: dup
139: iconst_5
140: ldc2_w        #21
143: dastore
144: astore        10
146: aload         10
148: invokestatic  #23
151: new           #96
154: dup
155: aload         10
157: invokespecial #97
160: astore        11
162: new           #96
165: dup
166: aload         9
168: aload         11
170: invokespecial #99
173: astore        12
175: bipush        6
177: newarray       double
179: dup
180: iconst_0
181: dconst_0
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #10
188: dastore
189: dup
190: iconst_2
191: dconst_1
192: dastore
193: dup
194: iconst_3
195: dconst_0
196: dastore
197: dup
198: iconst_4
199: dconst_1
200: dastore
201: dup
202: iconst_5
203: ldc2_w        #21
206: dastore
207: astore        13
209: aload         13
211: invokestatic  #23
214: new           #96
217: dup
218: aload         13
220: invokespecial #97
223: astore        14
225: bipush        6
227: newarray       double
229: dup
230: iconst_0
231: dconst_0
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #10
238: dastore
239: dup
240: iconst_2
241: dconst_1
242: dastore
243: dup
244: iconst_3
245: dconst_0
246: dastore
247: dup
248: iconst_4
249: dconst_1
250: dastore
251: dup
252: iconst_5
253: ldc2_w        #21
256: dastore
257: astore        15
259: aload         15
261: invokestatic  #23
264: new           #96
267: dup
268: aload         15
270: invokespecial #97
273: astore        16
275: new           #96
278: dup
279: aload         14
281: aload         16
283: invokespecial #99
286: astore        17
288: bipush        6
290: newarray       double
292: dup
293: iconst_0
294: dconst_0
295: dastore
296: dup
297: iconst_1
298: ldc2_w        #10
301: dastore
302: dup
303: iconst_2
304: dconst_1
305: dastore
306: dup
307: iconst_3
308: dconst_0
309: dastore
310: dup
311: iconst_4
312: dconst_1
313: dastore
314: dup
315: iconst_5
316: ldc2_w        #21
319: dastore
320: astore        18
322: aload         18
324: invokestatic  #23
327: new           #96
330: dup
331: aload         18
333: invokespecial #97
336: astore        19
338: new           #96
341: dup
342: aload         16
344: aload         19
346: invokespecial #99
349: astore        20
351: aload         11
353: dconst_1
354: dconst_1
355: aload         19
357: invokevirtual #100
360: astore        21
362: aload         11
364: invokevirtual #101
367: astore        22
369: aload         22
371: invokestatic  #135
374: dstore        23
376: new           #107
379: dup
380: aload         22
382: ldc2_w        #143
385: invokestatic  #76
388: invokespecial #110
391: astore        25
393: aload_2
394: bipush        -10
396: aload         6
398: aload         7
400: aload         22
402: invokevirtual #12
405: astore        26
407: ldc           #13
409: invokestatic  #14
412: goto          417
415: astore        26
417: new           #39
420: dup
421: invokespecial #40
424: ldc           #41
426: invokevirtual #42
429: iload_3
430: invokevirtual #81
433: ldc           #44
435: invokevirtual #42
438: iconst_0
439: invokevirtual #81
442: ldc           #41
444: invokevirtual #42
447: invokevirtual #45
450: iload_3
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #47
462: aload         4
464: invokestatic  #16
467: aload         5
469: invokestatic  #16
472: new           #39
475: dup
476: invokespecial #40
479: ldc           #41
481: invokevirtual #42
484: aload         7
486: invokevirtual #43
489: ldc           #44
491: invokevirtual #42
494: getstatic     #37
497: invokevirtual #43
500: ldc           #41
502: invokevirtual #42
505: invokevirtual #45
508: aload         7
510: getstatic     #37
513: invokevirtual #46
516: invokestatic  #47
519: aload         8
521: invokestatic  #16
524: aload         8
526: invokestatic  #17
529: ldc           #26
531: invokestatic  #19
534: aload         10
536: invokestatic  #16
539: aload         10
541: invokestatic  #17
544: ldc           #26
546: invokestatic  #19
549: aload         13
551: invokestatic  #16
554: aload         13
556: invokestatic  #17
559: ldc           #26
561: invokestatic  #19
564: aload         15
566: invokestatic  #16
569: aload         15
571: invokestatic  #17
574: ldc           #26
576: invokestatic  #19
579: aload         18
581: invokestatic  #16
584: aload         18
586: invokestatic  #17
589: ldc           #26
591: invokestatic  #19
594: aload         21
596: invokestatic  #16
599: aload         22
601: invokestatic  #16
604: aload         22
606: invokestatic  #17
609: ldc           #105
611: invokestatic  #19
614: new           #39
617: dup
618: invokespecial #40
621: ldc           #41
623: invokevirtual #42
626: dload         23
628: invokevirtual #121
631: ldc           #44
633: invokevirtual #42
636: ldc2_w        #145
639: invokevirtual #121
642: ldc           #41
644: invokevirtual #42
647: invokevirtual #45
650: dload         23
652: ldc2_w        #145
655: dcmpl
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #47
667: return
Exception table:
from    to  target type
393   412   415   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 778
End line: 820
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray25 = new double[] { '4' };
        double[] doubleArray26 = new double[] {};
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix36 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix37 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26, doubleArray34);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair40 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray34, 1.401298464324817E-45d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair41 = cMAESOptimizer18.optimize(6, multivariateFunction22, goalType23, doubleArray34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
        org.junit.Assert.assertNotNull(realMatrix37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #53
111: astore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: ldc2_w        #70
129: dastore
130: astore        9
132: iconst_0
133: newarray       double
135: astore        10
137: aload         9
139: aload         10
141: invokestatic  #72
144: istore        11
146: bipush        6
148: newarray       double
150: dup
151: iconst_0
152: dconst_0
153: dastore
154: dup
155: iconst_1
156: ldc2_w        #10
159: dastore
160: dup
161: iconst_2
162: dconst_1
163: dastore
164: dup
165: iconst_3
166: dconst_0
167: dastore
168: dup
169: iconst_4
170: dconst_1
171: dastore
172: dup
173: iconst_5
174: ldc2_w        #21
177: dastore
178: astore        12
180: aload         12
182: invokestatic  #23
185: aload         12
187: invokestatic  #24
190: astore        13
192: aload         12
194: invokestatic  #24
197: astore        14
199: new           #96
202: dup
203: aload         10
205: aload         12
207: invokespecial #139
210: astore        15
212: new           #58
215: dup
216: aload         12
218: ldc2_w        #108
221: invokespecial #61
224: astore        16
226: aload         4
228: bipush        6
230: aload         7
232: aload         8
234: aload         12
236: invokevirtual #12
239: astore        17
241: ldc           #13
243: invokestatic  #14
246: goto          251
249: astore        17
251: aload_1
252: invokestatic  #16
255: aload_1
256: invokestatic  #17
259: ldc           #26
261: invokestatic  #19
264: aload         5
266: invokestatic  #16
269: aload         6
271: invokestatic  #16
274: new           #39
277: dup
278: invokespecial #40
281: ldc           #41
283: invokevirtual #42
286: aload         8
288: invokevirtual #43
291: ldc           #44
293: invokevirtual #42
296: getstatic     #37
299: invokevirtual #43
302: ldc           #41
304: invokevirtual #42
307: invokevirtual #45
310: aload         8
312: getstatic     #37
315: invokevirtual #46
318: invokestatic  #47
321: aload         9
323: invokestatic  #16
326: aload         9
328: invokestatic  #17
331: ldc           #82
333: invokestatic  #19
336: aload         10
338: invokestatic  #16
341: aload         10
343: invokestatic  #17
346: ldc           #83
348: invokestatic  #19
351: new           #39
354: dup
355: invokespecial #40
358: ldc           #41
360: invokevirtual #42
363: iload         11
365: invokevirtual #84
368: ldc           #44
370: invokevirtual #42
373: iconst_0
374: invokevirtual #84
377: ldc           #41
379: invokevirtual #42
382: invokevirtual #45
385: iload         11
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #47
398: aload         12
400: invokestatic  #16
403: aload         12
405: invokestatic  #17
408: ldc           #26
410: invokestatic  #19
413: aload         13
415: invokestatic  #16
418: aload         14
420: invokestatic  #16
423: return
Exception table:
from    to  target type
226   246   249   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 823
End line: 879
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        org.apache.commons.math3.optimization.GoalType goalType25 = cMAESOptimizer24.getGoalType();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction27 = null;
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math3.linear.RealVector realVector38 = arrayRealVector37.copy();
        org.apache.commons.math3.linear.RealVector realVector40 = arrayRealVector37.mapDivide((double) (-1.0f));
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.RealVector realVector51 = arrayRealVector49.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(realVector51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = arrayRealVector37.add(realVector51);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.RealMatrix realMatrix62 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray60);
        boolean boolean63 = arrayRealVector53.equals((java.lang.Object) doubleArray60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair64 = cMAESOptimizer24.optimize((int) (byte) 100, multivariateFunction27, goalType28, doubleArray60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertNull(goalType25);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: aload_1
62: invokestatic  #24
65: astore_2
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore_3
89: new           #32
92: dup
93: aload_3
94: invokespecial #112
97: astore        4
99: aload         4
101: invokevirtual #113
104: fstore        5
106: new           #34
109: dup
110: invokespecial #35
113: astore        6
115: new           #8
118: dup
119: bipush        32
121: aload_1
122: iconst_0
123: ldc2_w        #114
126: iconst_1
127: ldc           #38
129: bipush        100
131: aload         4
133: iconst_1
134: aload         6
136: invokespecial #36
139: astore        7
141: aload         7
143: invokevirtual #149
146: astore        8
148: aconst_null
149: astore        9
151: getstatic     #150
154: astore        10
156: bipush        6
158: newarray       double
160: dup
161: iconst_0
162: dconst_0
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #10
169: dastore
170: dup
171: iconst_2
172: dconst_1
173: dastore
174: dup
175: iconst_3
176: dconst_0
177: dastore
178: dup
179: iconst_4
180: dconst_1
181: dastore
182: dup
183: iconst_5
184: ldc2_w        #21
187: dastore
188: astore        11
190: aload         11
192: invokestatic  #23
195: new           #96
198: dup
199: aload         11
201: invokespecial #97
204: astore        12
206: aload         12
208: invokevirtual #98
211: astore        13
213: aload         12
215: ldc2_w        #59
218: invokevirtual #151
221: astore        14
223: bipush        6
225: newarray       double
227: dup
228: iconst_0
229: dconst_0
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #10
236: dastore
237: dup
238: iconst_2
239: dconst_1
240: dastore
241: dup
242: iconst_3
243: dconst_0
244: dastore
245: dup
246: iconst_4
247: dconst_1
248: dastore
249: dup
250: iconst_5
251: ldc2_w        #21
254: dastore
255: astore        15
257: aload         15
259: invokestatic  #23
262: new           #96
265: dup
266: aload         15
268: invokespecial #97
271: astore        16
273: aload         16
275: dconst_1
276: invokevirtual #151
279: astore        17
281: new           #96
284: dup
285: aload         17
287: invokespecial #152
290: astore        18
292: aload         12
294: aload         17
296: invokevirtual #153
299: astore        19
301: bipush        6
303: newarray       double
305: dup
306: iconst_0
307: dconst_0
308: dastore
309: dup
310: iconst_1
311: ldc2_w        #10
314: dastore
315: dup
316: iconst_2
317: dconst_1
318: dastore
319: dup
320: iconst_3
321: dconst_0
322: dastore
323: dup
324: iconst_4
325: dconst_1
326: dastore
327: dup
328: iconst_5
329: ldc2_w        #21
332: dastore
333: astore        20
335: aload         20
337: invokestatic  #23
340: aload         20
342: invokestatic  #24
345: astore        21
347: aload         19
349: aload         20
351: invokevirtual #154
354: istore        22
356: aload         7
358: bipush        100
360: aload         9
362: aload         10
364: aload         20
366: invokevirtual #12
369: astore        23
371: ldc           #13
373: invokestatic  #14
376: goto          381
379: astore        23
381: aload_1
382: invokestatic  #16
385: aload_1
386: invokestatic  #17
389: ldc           #26
391: invokestatic  #19
394: aload_2
395: invokestatic  #16
398: aload_3
399: invokestatic  #16
402: aload_3
403: invokestatic  #117
406: ldc           #118
408: invokestatic  #19
411: new           #39
414: dup
415: invokespecial #40
418: ldc           #41
420: invokevirtual #42
423: fload         5
425: invokevirtual #119
428: ldc           #44
430: invokevirtual #42
433: ldc           #120
435: invokevirtual #119
438: ldc           #41
440: invokevirtual #42
443: invokevirtual #45
446: fload         5
448: ldc           #120
450: fcmpl
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #47
462: aload         8
464: invokestatic  #155
467: new           #39
470: dup
471: invokespecial #40
474: ldc           #41
476: invokevirtual #42
479: aload         10
481: invokevirtual #43
484: ldc           #44
486: invokevirtual #42
489: getstatic     #150
492: invokevirtual #43
495: ldc           #41
497: invokevirtual #42
500: invokevirtual #45
503: aload         10
505: getstatic     #150
508: invokevirtual #46
511: invokestatic  #47
514: aload         11
516: invokestatic  #16
519: aload         11
521: invokestatic  #17
524: ldc           #26
526: invokestatic  #19
529: aload         13
531: invokestatic  #16
534: aload         14
536: invokestatic  #16
539: aload         15
541: invokestatic  #16
544: aload         15
546: invokestatic  #17
549: ldc           #26
551: invokestatic  #19
554: aload         17
556: invokestatic  #16
559: aload         19
561: invokestatic  #16
564: aload         20
566: invokestatic  #16
569: aload         20
571: invokestatic  #17
574: ldc           #26
576: invokestatic  #19
579: aload         21
581: invokestatic  #16
584: new           #39
587: dup
588: invokespecial #40
591: ldc           #41
593: invokevirtual #42
596: iload         22
598: invokevirtual #84
601: ldc           #44
603: invokevirtual #42
606: iconst_0
607: invokevirtual #84
610: ldc           #41
612: invokevirtual #42
615: invokevirtual #45
618: iload         22
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #47
631: return
Exception table:
from    to  target type
356   376   379   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 882
End line: 921
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray25 = new double[] { '4' };
        double[] doubleArray26 = new double[] {};
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray26);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection31 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException33 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection31, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection34 = nonMonotonicSequenceException33.getDirection();
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray25, orderDirection34, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = cMAESOptimizer18.optimize((int) (short) -10, multivariateFunction22, goalType23, doubleArray25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + orderDirection31 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection31.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection34 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection34.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #69
111: istore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: ldc2_w        #70
129: dastore
130: astore        9
132: iconst_0
133: newarray       double
135: astore        10
137: aload         9
139: aload         10
141: invokestatic  #72
144: istore        11
146: getstatic     #73
149: astore        12
151: new           #67
154: dup
155: ldc2_w        #74
158: invokestatic  #76
161: iconst_1
162: invokestatic  #77
165: bipush        100
167: aload         12
169: iconst_1
170: invokespecial #78
173: astore        13
175: aload         13
177: invokevirtual #79
180: astore        14
182: aload         9
184: aload         14
186: iconst_1
187: invokestatic  #157
190: istore        15
192: aload         4
194: bipush        -10
196: aload         7
198: aload         8
200: aload         9
202: invokevirtual #12
205: astore        16
207: ldc           #13
209: invokestatic  #14
212: goto          217
215: astore        16
217: aload_1
218: invokestatic  #16
221: aload_1
222: invokestatic  #17
225: ldc           #26
227: invokestatic  #19
230: aload         5
232: invokestatic  #16
235: new           #39
238: dup
239: invokespecial #40
242: ldc           #41
244: invokevirtual #42
247: iload         6
249: invokevirtual #81
252: ldc           #44
254: invokevirtual #42
257: iconst_0
258: invokevirtual #81
261: ldc           #41
263: invokevirtual #42
266: invokevirtual #45
269: iload         6
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #47
282: new           #39
285: dup
286: invokespecial #40
289: ldc           #41
291: invokevirtual #42
294: aload         8
296: invokevirtual #43
299: ldc           #44
301: invokevirtual #42
304: getstatic     #37
307: invokevirtual #43
310: ldc           #41
312: invokevirtual #42
315: invokevirtual #45
318: aload         8
320: getstatic     #37
323: invokevirtual #46
326: invokestatic  #47
329: aload         9
331: invokestatic  #16
334: aload         9
336: invokestatic  #17
339: ldc           #82
341: invokestatic  #19
344: aload         10
346: invokestatic  #16
349: aload         10
351: invokestatic  #17
354: ldc           #83
356: invokestatic  #19
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         11
373: invokevirtual #84
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #84
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         11
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #47
406: new           #39
409: dup
410: invokespecial #40
413: ldc           #41
415: invokevirtual #42
418: aload         12
420: invokevirtual #43
423: ldc           #44
425: invokevirtual #42
428: getstatic     #73
431: invokevirtual #43
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: aload         12
444: getstatic     #73
447: invokevirtual #85
450: invokestatic  #47
453: new           #39
456: dup
457: invokespecial #40
460: ldc           #41
462: invokevirtual #42
465: aload         14
467: invokevirtual #43
470: ldc           #44
472: invokevirtual #42
475: getstatic     #73
478: invokevirtual #43
481: ldc           #41
483: invokevirtual #42
486: invokevirtual #45
489: aload         14
491: getstatic     #73
494: invokevirtual #85
497: invokestatic  #47
500: new           #39
503: dup
504: invokespecial #40
507: ldc           #41
509: invokevirtual #42
512: iload         15
514: invokevirtual #84
517: ldc           #44
519: invokevirtual #42
522: iconst_1
523: invokevirtual #84
526: ldc           #41
528: invokevirtual #42
531: invokevirtual #45
534: iload         15
536: iconst_1
537: if_icmpne     544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #47
548: return
Exception table:
from    to  target type
192   212   215   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 924
End line: 962
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        org.apache.commons.math3.optimization.GoalType goalType25 = cMAESOptimizer24.getGoalType();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction27 = null;
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.RealMatrix realMatrix37 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray35);
        org.apache.commons.math3.linear.RealMatrix realMatrix38 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray35);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair40 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray35, (java.lang.Double) 1.401298464324817E-45d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair41 = cMAESOptimizer24.optimize(52, multivariateFunction27, goalType28, doubleArray35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertNull(goalType25);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(realMatrix38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #158
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: aload_1
62: invokestatic  #24
65: astore_2
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore_3
89: new           #32
92: dup
93: aload_3
94: invokespecial #112
97: astore        4
99: aload         4
101: invokevirtual #113
104: fstore        5
106: new           #34
109: dup
110: invokespecial #35
113: astore        6
115: new           #8
118: dup
119: bipush        32
121: aload_1
122: iconst_0
123: ldc2_w        #114
126: iconst_1
127: ldc           #38
129: bipush        100
131: aload         4
133: iconst_1
134: aload         6
136: invokespecial #36
139: astore        7
141: aload         7
143: invokevirtual #149
146: astore        8
148: aconst_null
149: astore        9
151: getstatic     #150
154: astore        10
156: bipush        6
158: newarray       double
160: dup
161: iconst_0
162: dconst_0
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #10
169: dastore
170: dup
171: iconst_2
172: dconst_1
173: dastore
174: dup
175: iconst_3
176: dconst_0
177: dastore
178: dup
179: iconst_4
180: dconst_1
181: dastore
182: dup
183: iconst_5
184: ldc2_w        #21
187: dastore
188: astore        11
190: aload         11
192: invokestatic  #23
195: aload         11
197: invokestatic  #24
200: astore        12
202: aload         11
204: invokestatic  #24
207: astore        13
209: new           #107
212: dup
213: aload         11
215: ldc2_w        #108
218: invokestatic  #76
221: invokespecial #110
224: astore        14
226: aload         7
228: bipush        52
230: aload         9
232: aload         10
234: aload         11
236: invokevirtual #12
239: astore        15
241: ldc           #13
243: invokestatic  #14
246: goto          251
249: astore        15
251: aload_1
252: invokestatic  #16
255: aload_1
256: invokestatic  #17
259: ldc           #26
261: invokestatic  #19
264: aload_2
265: invokestatic  #16
268: aload_3
269: invokestatic  #16
272: aload_3
273: invokestatic  #117
276: ldc           #118
278: invokestatic  #19
281: new           #39
284: dup
285: invokespecial #40
288: ldc           #41
290: invokevirtual #42
293: fload         5
295: invokevirtual #119
298: ldc           #44
300: invokevirtual #42
303: ldc           #120
305: invokevirtual #119
308: ldc           #41
310: invokevirtual #42
313: invokevirtual #45
316: fload         5
318: ldc           #120
320: fcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #47
332: aload         8
334: invokestatic  #155
337: new           #39
340: dup
341: invokespecial #40
344: ldc           #41
346: invokevirtual #42
349: aload         10
351: invokevirtual #43
354: ldc           #44
356: invokevirtual #42
359: getstatic     #150
362: invokevirtual #43
365: ldc           #41
367: invokevirtual #42
370: invokevirtual #45
373: aload         10
375: getstatic     #150
378: invokevirtual #46
381: invokestatic  #47
384: aload         11
386: invokestatic  #16
389: aload         11
391: invokestatic  #17
394: ldc           #26
396: invokestatic  #19
399: aload         12
401: invokestatic  #16
404: aload         13
406: invokestatic  #16
409: return
Exception table:
from    to  target type
226   246   249   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 965
End line: 983
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType22 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNull(goalType22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #69
111: istore        6
113: aload         4
115: invokevirtual #133
118: astore        7
120: aload         4
122: invokevirtual #149
125: astore        8
127: aload_1
128: invokestatic  #16
131: aload_1
132: invokestatic  #17
135: ldc           #26
137: invokestatic  #19
140: aload         5
142: invokestatic  #16
145: new           #39
148: dup
149: invokespecial #40
152: ldc           #41
154: invokevirtual #42
157: iload         6
159: invokevirtual #81
162: ldc           #44
164: invokevirtual #42
167: iconst_0
168: invokevirtual #81
171: ldc           #41
173: invokevirtual #42
176: invokevirtual #45
179: iload         6
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #47
192: aload         7
194: invokestatic  #16
197: aload         8
199: invokestatic  #155
202: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 986
End line: 997
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer2.getGoalType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(goalType5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aload_2
43: invokevirtual #53
46: astore        4
48: aload_2
49: invokevirtual #149
52: astore        5
54: new           #39
57: dup
58: invokespecial #40
61: ldc           #41
63: invokevirtual #42
66: iload_3
67: invokevirtual #81
70: ldc           #44
72: invokevirtual #42
75: iconst_0
76: invokevirtual #81
79: ldc           #41
81: invokevirtual #42
84: invokevirtual #45
87: iload_3
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #47
99: aload         4
101: invokestatic  #16
104: aload         5
106: invokestatic  #155
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1000
End line: 1014
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        double double19 = simpleValueChecker17.getAbsoluteThreshold();
        double double20 = simpleValueChecker17.getRelativeThreshold();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.2250738585072014E-306d + "'", double19 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.1102230246251565E-14d + "'", double20 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload_3
100: invokevirtual #116
103: dstore        5
105: aload_3
106: invokevirtual #162
109: dstore        7
111: aload_1
112: invokestatic  #16
115: aload_1
116: invokestatic  #17
119: ldc           #26
121: invokestatic  #19
124: new           #39
127: dup
128: invokespecial #40
131: ldc           #41
133: invokevirtual #42
136: dload         5
138: invokevirtual #121
141: ldc           #44
143: invokevirtual #42
146: ldc2_w        #122
149: invokevirtual #121
152: ldc           #41
154: invokevirtual #42
157: invokevirtual #45
160: dload         5
162: ldc2_w        #122
165: dcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #47
177: new           #39
180: dup
181: invokespecial #40
184: ldc           #41
186: invokevirtual #42
189: dload         7
191: invokevirtual #121
194: ldc           #44
196: invokevirtual #42
199: ldc2_w        #163
202: invokevirtual #121
205: ldc           #41
207: invokevirtual #42
210: invokevirtual #45
213: dload         7
215: ldc2_w        #163
218: dcmpl
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #47
230: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1017
End line: 1071
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        double[] doubleArray27 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27);
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector29.copy();
        org.apache.commons.math3.linear.RealVector realVector32 = arrayRealVector29.mapDivide((double) (-1.0f));
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math3.linear.RealVector realVector43 = arrayRealVector41.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(realVector43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = arrayRealVector29.add(realVector43);
        double[] doubleArray52 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray52);
        org.apache.commons.math3.linear.RealMatrix realMatrix54 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray52);
        boolean boolean55 = arrayRealVector45.equals((java.lang.Object) doubleArray52);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair57 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray52, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister64 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double65 = mersenneTwister64.nextGaussian();
        double double66 = mersenneTwister64.nextGaussian();
        mersenneTwister64.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray52, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister64, false);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = cMAESOptimizer18.computeObjectiveValue(doubleArray52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.7023867716137234d) + "'", double65 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.40343496390144584d + "'", double66 == 0.40343496390144584d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #165
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: bipush        6
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: ldc2_w        #10
119: dastore
120: dup
121: iconst_2
122: dconst_1
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_1
131: dastore
132: dup
133: iconst_5
134: ldc2_w        #21
137: dastore
138: astore        6
140: aload         6
142: invokestatic  #23
145: new           #96
148: dup
149: aload         6
151: invokespecial #97
154: astore        7
156: aload         7
158: invokevirtual #98
161: astore        8
163: aload         7
165: ldc2_w        #59
168: invokevirtual #151
171: astore        9
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: dconst_0
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #10
186: dastore
187: dup
188: iconst_2
189: dconst_1
190: dastore
191: dup
192: iconst_3
193: dconst_0
194: dastore
195: dup
196: iconst_4
197: dconst_1
198: dastore
199: dup
200: iconst_5
201: ldc2_w        #21
204: dastore
205: astore        10
207: aload         10
209: invokestatic  #23
212: new           #96
215: dup
216: aload         10
218: invokespecial #97
221: astore        11
223: aload         11
225: dconst_1
226: invokevirtual #151
229: astore        12
231: new           #96
234: dup
235: aload         12
237: invokespecial #152
240: astore        13
242: aload         7
244: aload         12
246: invokevirtual #153
249: astore        14
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: dconst_0
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #10
264: dastore
265: dup
266: iconst_2
267: dconst_1
268: dastore
269: dup
270: iconst_3
271: dconst_0
272: dastore
273: dup
274: iconst_4
275: dconst_1
276: dastore
277: dup
278: iconst_5
279: ldc2_w        #21
282: dastore
283: astore        15
285: aload         15
287: invokestatic  #23
290: aload         15
292: invokestatic  #24
295: astore        16
297: aload         14
299: aload         15
301: invokevirtual #154
304: istore        17
306: new           #58
309: dup
310: aload         15
312: ldc2_w        #166
315: invokespecial #61
318: astore        18
320: new           #32
323: dup
324: iconst_1
325: invokespecial #33
328: astore        19
330: aload         19
332: invokevirtual #168
335: dstore        20
337: aload         19
339: invokevirtual #168
342: dstore        22
344: aload         19
346: bipush        10
348: invokevirtual #169
351: new           #8
354: dup
355: iconst_1
356: aload         15
358: iconst_1
359: ldc2_w        #170
362: iconst_1
363: bipush        52
365: bipush        52
367: aload         19
369: iconst_0
370: invokespecial #172
373: astore        24
375: aload         4
377: aload         15
379: invokevirtual #173
382: dstore        25
384: ldc           #174
386: invokestatic  #14
389: goto          394
392: astore        25
394: aload_1
395: invokestatic  #16
398: aload_1
399: invokestatic  #17
402: ldc           #26
404: invokestatic  #19
407: aload         5
409: invokestatic  #16
412: aload         6
414: invokestatic  #16
417: aload         6
419: invokestatic  #17
422: ldc           #26
424: invokestatic  #19
427: aload         8
429: invokestatic  #16
432: aload         9
434: invokestatic  #16
437: aload         10
439: invokestatic  #16
442: aload         10
444: invokestatic  #17
447: ldc           #26
449: invokestatic  #19
452: aload         12
454: invokestatic  #16
457: aload         14
459: invokestatic  #16
462: aload         15
464: invokestatic  #16
467: aload         15
469: invokestatic  #17
472: ldc           #26
474: invokestatic  #19
477: aload         16
479: invokestatic  #16
482: new           #39
485: dup
486: invokespecial #40
489: ldc           #41
491: invokevirtual #42
494: iload         17
496: invokevirtual #84
499: ldc           #44
501: invokevirtual #42
504: iconst_0
505: invokevirtual #84
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: iload         17
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #47
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: dload         20
543: invokevirtual #121
546: ldc           #44
548: invokevirtual #42
551: ldc2_w        #74
554: invokevirtual #121
557: ldc           #41
559: invokevirtual #42
562: invokevirtual #45
565: dload         20
567: ldc2_w        #74
570: dcmpl
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #47
582: new           #39
585: dup
586: invokespecial #40
589: ldc           #41
591: invokevirtual #42
594: dload         22
596: invokevirtual #121
599: ldc           #44
601: invokevirtual #42
604: ldc2_w        #176
607: invokevirtual #121
610: ldc           #41
612: invokevirtual #42
615: invokevirtual #45
618: dload         22
620: ldc2_w        #176
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #47
635: return
Exception table:
from    to  target type
375   389   392   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1074
End line: 1088
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #130
41: astore_3
42: aload_2
43: invokevirtual #56
46: astore        4
48: ldc           #29
50: invokestatic  #14
53: goto          58
56: astore        4
58: aload_3
59: invokestatic  #16
62: return
Exception table:
from    to  target type
42    53    56   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1091
End line: 1105
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #130
41: astore_3
42: aload_2
43: invokevirtual #54
46: astore        4
48: ldc           #29
50: invokestatic  #14
53: goto          58
56: astore        4
58: aload_3
59: invokestatic  #16
62: return
Exception table:
from    to  target type
42    53    56   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1108
End line: 1138
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair34 = cMAESOptimizer18.optimize(0, multivariateFunction22, goalType23, doubleArray30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #53
111: astore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: bipush        6
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: ldc2_w        #10
134: dastore
135: dup
136: iconst_2
137: dconst_1
138: dastore
139: dup
140: iconst_3
141: dconst_0
142: dastore
143: dup
144: iconst_4
145: dconst_1
146: dastore
147: dup
148: iconst_5
149: ldc2_w        #21
152: dastore
153: astore        9
155: aload         9
157: invokestatic  #23
160: new           #96
163: dup
164: aload         9
166: invokespecial #97
169: astore        10
171: new           #96
174: dup
175: aload         9
177: invokespecial #97
180: astore        11
182: aload         4
184: iconst_0
185: aload         7
187: aload         8
189: aload         9
191: invokevirtual #12
194: astore        12
196: ldc           #13
198: invokestatic  #14
201: goto          206
204: astore        12
206: aload_1
207: invokestatic  #16
210: aload_1
211: invokestatic  #17
214: ldc           #26
216: invokestatic  #19
219: aload         5
221: invokestatic  #16
224: aload         6
226: invokestatic  #16
229: new           #39
232: dup
233: invokespecial #40
236: ldc           #41
238: invokevirtual #42
241: aload         8
243: invokevirtual #43
246: ldc           #44
248: invokevirtual #42
251: getstatic     #37
254: invokevirtual #43
257: ldc           #41
259: invokevirtual #42
262: invokevirtual #45
265: aload         8
267: getstatic     #37
270: invokevirtual #46
273: invokestatic  #47
276: aload         9
278: invokestatic  #16
281: aload         9
283: invokestatic  #17
286: ldc           #26
288: invokestatic  #19
291: return
Exception table:
from    to  target type
182   201   204   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1141
End line: 1195
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction26 = null;
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray31 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray32 = new double[][] { doubleArray31 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix34 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray32, true);
        int int35 = array2DRowRealMatrix34.getRowDimension();
        array2DRowRealMatrix34.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double40 = array2DRowRealMatrix34.getNorm();
        double[][] doubleArray41 = array2DRowRealMatrix34.getData();
        double[][] doubleArray42 = array2DRowRealMatrix34.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix43 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray42);
        double[] doubleArray45 = new double[] { '4' };
        double[] doubleArray46 = new double[] {};
        boolean boolean47 = org.apache.commons.math3.util.MathArrays.equals(doubleArray45, doubleArray46);
        double[] doubleArray48 = blockRealMatrix43.preMultiply(doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair49 = cMAESOptimizer24.optimize((int) (byte) 0, multivariateFunction26, goalType27, doubleArray48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[5200.0, -52.0, -52.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: aload_1
62: invokestatic  #24
65: astore_2
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore_3
89: new           #32
92: dup
93: aload_3
94: invokespecial #112
97: astore        4
99: aload         4
101: invokevirtual #113
104: fstore        5
106: new           #34
109: dup
110: invokespecial #35
113: astore        6
115: new           #8
118: dup
119: bipush        32
121: aload_1
122: iconst_0
123: ldc2_w        #114
126: iconst_1
127: ldc           #38
129: bipush        100
131: aload         4
133: iconst_1
134: aload         6
136: invokespecial #36
139: astore        7
141: aconst_null
142: astore        8
144: getstatic     #37
147: astore        9
149: iconst_3
150: newarray       double
152: dup
153: iconst_0
154: ldc2_w        #87
157: dastore
158: dup
159: iconst_1
160: ldc2_w        #59
163: dastore
164: dup
165: iconst_2
166: ldc2_w        #59
169: dastore
170: astore        10
172: iconst_1
173: anewarray     #89
176: dup
177: iconst_0
178: aload         10
180: aastore
181: astore        11
183: new           #90
186: dup
187: aload         11
189: iconst_1
190: invokespecial #91
193: astore        12
195: aload         12
197: invokevirtual #182
200: istore        13
202: aload         12
204: iconst_0
205: iconst_0
206: ldc2_w        #10
209: invokevirtual #183
212: aload         12
214: invokevirtual #184
217: dstore        14
219: aload         12
221: invokevirtual #92
224: astore        16
226: aload         12
228: invokevirtual #185
231: astore        17
233: new           #186
236: dup
237: aload         17
239: invokespecial #187
242: astore        18
244: iconst_1
245: newarray       double
247: dup
248: iconst_0
249: ldc2_w        #70
252: dastore
253: astore        19
255: iconst_0
256: newarray       double
258: astore        20
260: aload         19
262: aload         20
264: invokestatic  #72
267: istore        21
269: aload         18
271: aload         19
273: invokevirtual #188
276: astore        22
278: aload         7
280: iconst_0
281: aload         8
283: aload         9
285: aload         22
287: invokevirtual #12
290: astore        23
292: ldc           #13
294: invokestatic  #14
297: goto          302
300: astore        23
302: aload_1
303: invokestatic  #16
306: aload_1
307: invokestatic  #17
310: ldc           #26
312: invokestatic  #19
315: aload_2
316: invokestatic  #16
319: aload_3
320: invokestatic  #16
323: aload_3
324: invokestatic  #117
327: ldc           #118
329: invokestatic  #19
332: new           #39
335: dup
336: invokespecial #40
339: ldc           #41
341: invokevirtual #42
344: fload         5
346: invokevirtual #119
349: ldc           #44
351: invokevirtual #42
354: ldc           #120
356: invokevirtual #119
359: ldc           #41
361: invokevirtual #42
364: invokevirtual #45
367: fload         5
369: ldc           #120
371: fcmpl
372: ifne          379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #47
383: new           #39
386: dup
387: invokespecial #40
390: ldc           #41
392: invokevirtual #42
395: aload         9
397: invokevirtual #43
400: ldc           #44
402: invokevirtual #42
405: getstatic     #37
408: invokevirtual #43
411: ldc           #41
413: invokevirtual #42
416: invokevirtual #45
419: aload         9
421: getstatic     #37
424: invokevirtual #46
427: invokestatic  #47
430: aload         10
432: invokestatic  #16
435: aload         10
437: invokestatic  #17
440: ldc           #94
442: invokestatic  #19
445: aload         11
447: invokestatic  #16
450: new           #39
453: dup
454: invokespecial #40
457: ldc           #41
459: invokevirtual #42
462: iload         13
464: invokevirtual #81
467: ldc           #44
469: invokevirtual #42
472: iconst_1
473: invokevirtual #81
476: ldc           #41
478: invokevirtual #42
481: invokevirtual #45
484: iload         13
486: iconst_1
487: if_icmpne     494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #47
498: new           #39
501: dup
502: invokespecial #40
505: ldc           #41
507: invokevirtual #42
510: dload         14
512: invokevirtual #121
515: ldc           #44
517: invokevirtual #42
520: ldc2_w        #10
523: invokevirtual #121
526: ldc           #41
528: invokevirtual #42
531: invokevirtual #45
534: dload         14
536: ldc2_w        #10
539: dcmpl
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #47
551: aload         16
553: invokestatic  #16
556: aload         17
558: invokestatic  #16
561: aload         19
563: invokestatic  #16
566: aload         19
568: invokestatic  #17
571: ldc           #82
573: invokestatic  #19
576: aload         20
578: invokestatic  #16
581: aload         20
583: invokestatic  #17
586: ldc           #83
588: invokestatic  #19
591: new           #39
594: dup
595: invokespecial #40
598: ldc           #41
600: invokevirtual #42
603: iload         21
605: invokevirtual #84
608: ldc           #44
610: invokevirtual #42
613: iconst_0
614: invokevirtual #84
617: ldc           #41
619: invokevirtual #42
622: invokevirtual #45
625: iload         21
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #47
638: aload         22
640: invokestatic  #16
643: aload         22
645: invokestatic  #17
648: ldc           #189
650: invokestatic  #19
653: return
Exception table:
from    to  target type
278   297   300   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1198
End line: 1264
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix33 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray31);
        org.apache.commons.math3.linear.RealVector realVector35 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray31);
        double[] doubleArray37 = new double[] { '4' };
        double[] doubleArray38 = new double[] {};
        boolean boolean39 = org.apache.commons.math3.util.MathArrays.equals(doubleArray37, doubleArray38);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.RealMatrix realMatrix48 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37, doubleArray46);
        double[] doubleArray58 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray58);
        int[] intArray70 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister71 = new org.apache.commons.math3.random.MersenneTwister(intArray70);
        float float72 = mersenneTwister71.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker74 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray58, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister71, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair77 = cMAESOptimizer18.optimize((int) (byte) 1, multivariateFunction23, goalType24, doubleArray31, doubleArray37, doubleArray58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 1 != 6");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix33);
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix48);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float72 + "' != '" + 0.48016477f + "'", float72 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #190
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: getfield      #191
111: astore        6
113: aload         4
115: invokevirtual #125
118: istore        7
120: aconst_null
121: astore        8
123: getstatic     #150
126: astore        9
128: bipush        6
130: newarray       double
132: dup
133: iconst_0
134: dconst_0
135: dastore
136: dup
137: iconst_1
138: ldc2_w        #10
141: dastore
142: dup
143: iconst_2
144: dconst_1
145: dastore
146: dup
147: iconst_3
148: dconst_0
149: dastore
150: dup
151: iconst_4
152: dconst_1
153: dastore
154: dup
155: iconst_5
156: ldc2_w        #21
159: dastore
160: astore        10
162: aload         10
164: invokestatic  #23
167: aload         10
169: invokestatic  #24
172: astore        11
174: aload         10
176: invokestatic  #192
179: astore        12
181: aload         10
183: invokestatic  #193
186: astore        13
188: iconst_1
189: newarray       double
191: dup
192: iconst_0
193: ldc2_w        #70
196: dastore
197: astore        14
199: iconst_0
200: newarray       double
202: astore        15
204: aload         14
206: aload         15
208: invokestatic  #72
211: istore        16
213: bipush        6
215: newarray       double
217: dup
218: iconst_0
219: dconst_0
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #10
226: dastore
227: dup
228: iconst_2
229: dconst_1
230: dastore
231: dup
232: iconst_3
233: dconst_0
234: dastore
235: dup
236: iconst_4
237: dconst_1
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #21
244: dastore
245: astore        17
247: aload         17
249: invokestatic  #23
252: aload         17
254: invokestatic  #24
257: astore        18
259: new           #96
262: dup
263: aload         14
265: aload         17
267: invokespecial #139
270: astore        19
272: bipush        6
274: newarray       double
276: dup
277: iconst_0
278: dconst_0
279: dastore
280: dup
281: iconst_1
282: ldc2_w        #10
285: dastore
286: dup
287: iconst_2
288: dconst_1
289: dastore
290: dup
291: iconst_3
292: dconst_0
293: dastore
294: dup
295: iconst_4
296: dconst_1
297: dastore
298: dup
299: iconst_5
300: ldc2_w        #21
303: dastore
304: astore        20
306: aload         20
308: invokestatic  #23
311: aload         20
313: invokestatic  #24
316: astore        21
318: iconst_4
319: newarray       int
321: dup
322: iconst_0
323: bipush        100
325: iastore
326: dup
327: iconst_1
328: iconst_0
329: iastore
330: dup
331: iconst_2
332: bipush        100
334: iastore
335: dup
336: iconst_3
337: bipush        52
339: iastore
340: astore        22
342: new           #32
345: dup
346: aload         22
348: invokespecial #112
351: astore        23
353: aload         23
355: invokevirtual #113
358: fstore        24
360: new           #34
363: dup
364: invokespecial #35
367: astore        25
369: new           #8
372: dup
373: bipush        32
375: aload         20
377: iconst_0
378: ldc2_w        #114
381: iconst_1
382: ldc           #38
384: bipush        100
386: aload         23
388: iconst_1
389: aload         25
391: invokespecial #36
394: astore        26
396: new           #8
399: dup
400: iconst_m1
401: aload         20
403: invokespecial #9
406: astore        27
408: aload         4
410: iconst_1
411: aload         8
413: aload         9
415: aload         10
417: aload         14
419: aload         20
421: invokevirtual #25
424: astore        28
426: ldc           #194
428: invokestatic  #14
431: goto          436
434: astore        28
436: aload_1
437: invokestatic  #16
440: aload_1
441: invokestatic  #17
444: ldc           #26
446: invokestatic  #19
449: aload         5
451: invokestatic  #16
454: aload         6
456: invokestatic  #16
459: new           #39
462: dup
463: invokespecial #40
466: ldc           #41
468: invokevirtual #42
471: iload         7
473: invokevirtual #81
476: ldc           #44
478: invokevirtual #42
481: iconst_0
482: invokevirtual #81
485: ldc           #41
487: invokevirtual #42
490: invokevirtual #45
493: iload         7
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #47
506: new           #39
509: dup
510: invokespecial #40
513: ldc           #41
515: invokevirtual #42
518: aload         9
520: invokevirtual #43
523: ldc           #44
525: invokevirtual #42
528: getstatic     #150
531: invokevirtual #43
534: ldc           #41
536: invokevirtual #42
539: invokevirtual #45
542: aload         9
544: getstatic     #150
547: invokevirtual #46
550: invokestatic  #47
553: aload         10
555: invokestatic  #16
558: aload         10
560: invokestatic  #17
563: ldc           #26
565: invokestatic  #19
568: aload         11
570: invokestatic  #16
573: aload         12
575: invokestatic  #16
578: aload         13
580: invokestatic  #16
583: aload         14
585: invokestatic  #16
588: aload         14
590: invokestatic  #17
593: ldc           #82
595: invokestatic  #19
598: aload         15
600: invokestatic  #16
603: aload         15
605: invokestatic  #17
608: ldc           #83
610: invokestatic  #19
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: iload         16
627: invokevirtual #84
630: ldc           #44
632: invokevirtual #42
635: iconst_0
636: invokevirtual #84
639: ldc           #41
641: invokevirtual #42
644: invokevirtual #45
647: iload         16
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #47
660: aload         17
662: invokestatic  #16
665: aload         17
667: invokestatic  #17
670: ldc           #26
672: invokestatic  #19
675: aload         18
677: invokestatic  #16
680: aload         20
682: invokestatic  #16
685: aload         20
687: invokestatic  #17
690: ldc           #26
692: invokestatic  #19
695: aload         21
697: invokestatic  #16
700: aload         22
702: invokestatic  #16
705: aload         22
707: invokestatic  #117
710: ldc           #118
712: invokestatic  #19
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: fload         24
729: invokevirtual #119
732: ldc           #44
734: invokevirtual #42
737: ldc           #120
739: invokevirtual #119
742: ldc           #41
744: invokevirtual #42
747: invokevirtual #45
750: fload         24
752: ldc           #120
754: fcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #47
766: return
Exception table:
from    to  target type
408   431   434   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1267
End line: 1288
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        // The following exception was thrown during execution in test generation
        try {
            incrementor20.incrementCount();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MaxCountExceededException; message: illegal state: maximal count (0) exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #196
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: getfield      #191
111: astore        6
113: aload         6
115: invokevirtual #197
118: ldc           #198
120: invokestatic  #14
123: goto          128
126: astore        7
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: aload         5
143: invokestatic  #16
146: aload         6
148: invokestatic  #16
151: return
Exception table:
from    to  target type
113   123   126   Class org/apache/commons/math3/exception/MaxCountExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1291
End line: 1349
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        org.apache.commons.math3.optimization.GoalType goalType25 = cMAESOptimizer24.getGoalType();
        int int26 = cMAESOptimizer24.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray33 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray34 = new double[][] { doubleArray33 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix36 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray34, true);
        int int37 = array2DRowRealMatrix36.getRowDimension();
        array2DRowRealMatrix36.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double42 = array2DRowRealMatrix36.getNorm();
        double[][] doubleArray43 = array2DRowRealMatrix36.getData();
        double[][] doubleArray44 = array2DRowRealMatrix36.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix45 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray44);
        double[] doubleArray47 = new double[] { '4' };
        double[] doubleArray48 = new double[] {};
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray48);
        double[] doubleArray50 = blockRealMatrix45.preMultiply(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair51 = cMAESOptimizer24.optimize((int) (short) 100, multivariateFunction28, goalType29, doubleArray50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertNull(goalType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 100.0d + "'", double42 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[5200.0, -52.0, -52.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: aload_1
62: invokestatic  #24
65: astore_2
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore_3
89: new           #32
92: dup
93: aload_3
94: invokespecial #112
97: astore        4
99: aload         4
101: invokevirtual #113
104: fstore        5
106: new           #34
109: dup
110: invokespecial #35
113: astore        6
115: new           #8
118: dup
119: bipush        32
121: aload_1
122: iconst_0
123: ldc2_w        #114
126: iconst_1
127: ldc           #38
129: bipush        100
131: aload         4
133: iconst_1
134: aload         6
136: invokespecial #36
139: astore        7
141: aload         7
143: invokevirtual #149
146: astore        8
148: aload         7
150: invokevirtual #69
153: istore        9
155: aconst_null
156: astore        10
158: getstatic     #150
161: astore        11
163: iconst_3
164: newarray       double
166: dup
167: iconst_0
168: ldc2_w        #87
171: dastore
172: dup
173: iconst_1
174: ldc2_w        #59
177: dastore
178: dup
179: iconst_2
180: ldc2_w        #59
183: dastore
184: astore        12
186: iconst_1
187: anewarray     #89
190: dup
191: iconst_0
192: aload         12
194: aastore
195: astore        13
197: new           #90
200: dup
201: aload         13
203: iconst_1
204: invokespecial #91
207: astore        14
209: aload         14
211: invokevirtual #182
214: istore        15
216: aload         14
218: iconst_0
219: iconst_0
220: ldc2_w        #10
223: invokevirtual #183
226: aload         14
228: invokevirtual #184
231: dstore        16
233: aload         14
235: invokevirtual #92
238: astore        18
240: aload         14
242: invokevirtual #185
245: astore        19
247: new           #186
250: dup
251: aload         19
253: invokespecial #187
256: astore        20
258: iconst_1
259: newarray       double
261: dup
262: iconst_0
263: ldc2_w        #70
266: dastore
267: astore        21
269: iconst_0
270: newarray       double
272: astore        22
274: aload         21
276: aload         22
278: invokestatic  #72
281: istore        23
283: aload         20
285: aload         21
287: invokevirtual #188
290: astore        24
292: aload         7
294: bipush        100
296: aload         10
298: aload         11
300: aload         24
302: invokevirtual #12
305: astore        25
307: ldc           #13
309: invokestatic  #14
312: goto          317
315: astore        25
317: aload_1
318: invokestatic  #16
321: aload_1
322: invokestatic  #17
325: ldc           #26
327: invokestatic  #19
330: aload_2
331: invokestatic  #16
334: aload_3
335: invokestatic  #16
338: aload_3
339: invokestatic  #117
342: ldc           #118
344: invokestatic  #19
347: new           #39
350: dup
351: invokespecial #40
354: ldc           #41
356: invokevirtual #42
359: fload         5
361: invokevirtual #119
364: ldc           #44
366: invokevirtual #42
369: ldc           #120
371: invokevirtual #119
374: ldc           #41
376: invokevirtual #42
379: invokevirtual #45
382: fload         5
384: ldc           #120
386: fcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #47
398: aload         8
400: invokestatic  #155
403: new           #39
406: dup
407: invokespecial #40
410: ldc           #41
412: invokevirtual #42
415: iload         9
417: invokevirtual #81
420: ldc           #44
422: invokevirtual #42
425: iconst_0
426: invokevirtual #81
429: ldc           #41
431: invokevirtual #42
434: invokevirtual #45
437: iload         9
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #47
450: new           #39
453: dup
454: invokespecial #40
457: ldc           #41
459: invokevirtual #42
462: aload         11
464: invokevirtual #43
467: ldc           #44
469: invokevirtual #42
472: getstatic     #150
475: invokevirtual #43
478: ldc           #41
480: invokevirtual #42
483: invokevirtual #45
486: aload         11
488: getstatic     #150
491: invokevirtual #46
494: invokestatic  #47
497: aload         12
499: invokestatic  #16
502: aload         12
504: invokestatic  #17
507: ldc           #94
509: invokestatic  #19
512: aload         13
514: invokestatic  #16
517: new           #39
520: dup
521: invokespecial #40
524: ldc           #41
526: invokevirtual #42
529: iload         15
531: invokevirtual #81
534: ldc           #44
536: invokevirtual #42
539: iconst_1
540: invokevirtual #81
543: ldc           #41
545: invokevirtual #42
548: invokevirtual #45
551: iload         15
553: iconst_1
554: if_icmpne     561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #47
565: new           #39
568: dup
569: invokespecial #40
572: ldc           #41
574: invokevirtual #42
577: dload         16
579: invokevirtual #121
582: ldc           #44
584: invokevirtual #42
587: ldc2_w        #10
590: invokevirtual #121
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: dload         16
603: ldc2_w        #10
606: dcmpl
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #47
618: aload         18
620: invokestatic  #16
623: aload         19
625: invokestatic  #16
628: aload         21
630: invokestatic  #16
633: aload         21
635: invokestatic  #17
638: ldc           #82
640: invokestatic  #19
643: aload         22
645: invokestatic  #16
648: aload         22
650: invokestatic  #17
653: ldc           #83
655: invokestatic  #19
658: new           #39
661: dup
662: invokespecial #40
665: ldc           #41
667: invokevirtual #42
670: iload         23
672: invokevirtual #84
675: ldc           #44
677: invokevirtual #42
680: iconst_0
681: invokevirtual #84
684: ldc           #41
686: invokevirtual #42
689: invokevirtual #45
692: iload         23
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #47
705: aload         24
707: invokestatic  #16
710: aload         24
712: invokestatic  #17
715: ldc           #189
717: invokestatic  #19
720: return
Exception table:
from    to  target type
292   312   315   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1352
End line: 1371
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        incrementor20.resetCount();
        boolean boolean23 = incrementor20.canIncrement();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: getfield      #191
111: astore        6
113: aload         6
115: invokevirtual #202
118: istore        7
120: aload         6
122: invokevirtual #203
125: aload         6
127: invokevirtual #204
130: istore        8
132: aload_1
133: invokestatic  #16
136: aload_1
137: invokestatic  #17
140: ldc           #26
142: invokestatic  #19
145: aload         5
147: invokestatic  #16
150: aload         6
152: invokestatic  #16
155: new           #39
158: dup
159: invokespecial #40
162: ldc           #41
164: invokevirtual #42
167: iload         7
169: invokevirtual #81
172: ldc           #44
174: invokevirtual #42
177: iconst_0
178: invokevirtual #81
181: ldc           #41
183: invokevirtual #42
186: invokevirtual #45
189: iload         7
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #47
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: iload         8
216: invokevirtual #84
219: ldc           #44
221: invokevirtual #42
224: iconst_0
225: invokevirtual #84
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: iload         8
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #47
249: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1374
End line: 1441
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector8, arrayRealVector17);
        double[] doubleArray27 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector29, arrayRealVector38);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector38, arrayRealVector48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = arrayRealVector17.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector48);
        double[] doubleArray51 = arrayRealVector17.toArray();
        double[] doubleArray58 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray58);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair62 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray58, (double) (-1.0f));
        double double63 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray51, doubleArray58);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix65 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray58);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, 0.6557942026326724d);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray75);
        int[] intArray87 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister88 = new org.apache.commons.math3.random.MersenneTwister(intArray87);
        float float89 = mersenneTwister88.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker91 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray75, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister88, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker91);
        double double93 = org.apache.commons.math3.util.MathArrays.distance(doubleArray67, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 20204.0d + "'", double63 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 0.48016477f + "'", float89 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 99.92019692299296d + "'", double93 == 99.92019692299296d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #96
64: dup
65: aload_1
66: invokespecial #97
69: astore_2
70: bipush        6
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #10
83: dastore
84: dup
85: iconst_2
86: dconst_1
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #21
101: dastore
102: astore_3
103: aload_3
104: invokestatic  #23
107: new           #96
110: dup
111: aload_3
112: invokespecial #97
115: astore        4
117: new           #96
120: dup
121: aload_2
122: aload         4
124: invokespecial #99
127: astore        5
129: bipush        6
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #10
142: dastore
143: dup
144: iconst_2
145: dconst_1
146: dastore
147: dup
148: iconst_3
149: dconst_0
150: dastore
151: dup
152: iconst_4
153: dconst_1
154: dastore
155: dup
156: iconst_5
157: ldc2_w        #21
160: dastore
161: astore        6
163: aload         6
165: invokestatic  #23
168: new           #96
171: dup
172: aload         6
174: invokespecial #97
177: astore        7
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: dconst_0
186: dastore
187: dup
188: iconst_1
189: ldc2_w        #10
192: dastore
193: dup
194: iconst_2
195: dconst_1
196: dastore
197: dup
198: iconst_3
199: dconst_0
200: dastore
201: dup
202: iconst_4
203: dconst_1
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #21
210: dastore
211: astore        8
213: aload         8
215: invokestatic  #23
218: new           #96
221: dup
222: aload         8
224: invokespecial #97
227: astore        9
229: new           #96
232: dup
233: aload         7
235: aload         9
237: invokespecial #99
240: astore        10
242: bipush        6
244: newarray       double
246: dup
247: iconst_0
248: dconst_0
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #10
255: dastore
256: dup
257: iconst_2
258: dconst_1
259: dastore
260: dup
261: iconst_3
262: dconst_0
263: dastore
264: dup
265: iconst_4
266: dconst_1
267: dastore
268: dup
269: iconst_5
270: ldc2_w        #21
273: dastore
274: astore        11
276: aload         11
278: invokestatic  #23
281: new           #96
284: dup
285: aload         11
287: invokespecial #97
290: astore        12
292: new           #96
295: dup
296: aload         9
298: aload         12
300: invokespecial #99
303: astore        13
305: aload         4
307: dconst_1
308: dconst_1
309: aload         12
311: invokevirtual #100
314: astore        14
316: aload         4
318: invokevirtual #101
321: astore        15
323: bipush        6
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #10
336: dastore
337: dup
338: iconst_2
339: dconst_1
340: dastore
341: dup
342: iconst_3
343: dconst_0
344: dastore
345: dup
346: iconst_4
347: dconst_1
348: dastore
349: dup
350: iconst_5
351: ldc2_w        #21
354: dastore
355: astore        16
357: aload         16
359: invokestatic  #23
362: aload         16
364: invokestatic  #24
367: astore        17
369: new           #58
372: dup
373: aload         16
375: ldc2_w        #59
378: invokespecial #61
381: astore        18
383: aload         15
385: aload         16
387: invokestatic  #206
390: dstore        19
392: aload         16
394: invokestatic  #23
397: aload         16
399: invokestatic  #207
402: astore        21
404: aload         16
406: ldc2_w        #208
409: invokestatic  #210
412: astore        22
414: bipush        6
416: newarray       double
418: dup
419: iconst_0
420: dconst_0
421: dastore
422: dup
423: iconst_1
424: ldc2_w        #10
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: dup
437: iconst_4
438: dconst_1
439: dastore
440: dup
441: iconst_5
442: ldc2_w        #21
445: dastore
446: astore        23
448: aload         23
450: invokestatic  #23
453: aload         23
455: invokestatic  #24
458: astore        24
460: iconst_4
461: newarray       int
463: dup
464: iconst_0
465: bipush        100
467: iastore
468: dup
469: iconst_1
470: iconst_0
471: iastore
472: dup
473: iconst_2
474: bipush        100
476: iastore
477: dup
478: iconst_3
479: bipush        52
481: iastore
482: astore        25
484: new           #32
487: dup
488: aload         25
490: invokespecial #112
493: astore        26
495: aload         26
497: invokevirtual #113
500: fstore        27
502: new           #34
505: dup
506: invokespecial #35
509: astore        28
511: new           #8
514: dup
515: bipush        32
517: aload         23
519: iconst_0
520: ldc2_w        #114
523: iconst_1
524: ldc           #38
526: bipush        100
528: aload         26
530: iconst_1
531: aload         28
533: invokespecial #36
536: astore        29
538: aload         22
540: aload         23
542: invokestatic  #211
545: dstore        30
547: aload_1
548: invokestatic  #16
551: aload_1
552: invokestatic  #17
555: ldc           #26
557: invokestatic  #19
560: aload_3
561: invokestatic  #16
564: aload_3
565: invokestatic  #17
568: ldc           #26
570: invokestatic  #19
573: aload         6
575: invokestatic  #16
578: aload         6
580: invokestatic  #17
583: ldc           #26
585: invokestatic  #19
588: aload         8
590: invokestatic  #16
593: aload         8
595: invokestatic  #17
598: ldc           #26
600: invokestatic  #19
603: aload         11
605: invokestatic  #16
608: aload         11
610: invokestatic  #17
613: ldc           #26
615: invokestatic  #19
618: aload         14
620: invokestatic  #16
623: aload         15
625: invokestatic  #16
628: aload         15
630: invokestatic  #17
633: ldc           #105
635: invokestatic  #19
638: aload         16
640: invokestatic  #16
643: aload         16
645: invokestatic  #17
648: ldc           #26
650: invokestatic  #19
653: aload         17
655: invokestatic  #16
658: new           #39
661: dup
662: invokespecial #40
665: ldc           #41
667: invokevirtual #42
670: dload         19
672: invokevirtual #121
675: ldc           #44
677: invokevirtual #42
680: ldc2_w        #212
683: invokevirtual #121
686: ldc           #41
688: invokevirtual #42
691: invokevirtual #45
694: dload         19
696: ldc2_w        #212
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #47
711: aload         21
713: invokestatic  #16
716: aload         22
718: invokestatic  #16
721: aload         22
723: invokestatic  #17
726: ldc           #214
728: invokestatic  #19
731: aload         23
733: invokestatic  #16
736: aload         23
738: invokestatic  #17
741: ldc           #26
743: invokestatic  #19
746: aload         24
748: invokestatic  #16
751: aload         25
753: invokestatic  #16
756: aload         25
758: invokestatic  #117
761: ldc           #118
763: invokestatic  #19
766: new           #39
769: dup
770: invokespecial #40
773: ldc           #41
775: invokevirtual #42
778: fload         27
780: invokevirtual #119
783: ldc           #44
785: invokevirtual #42
788: ldc           #120
790: invokevirtual #119
793: ldc           #41
795: invokevirtual #42
798: invokevirtual #45
801: fload         27
803: ldc           #120
805: fcmpl
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #47
817: new           #39
820: dup
821: invokespecial #40
824: ldc           #41
826: invokevirtual #42
829: dload         30
831: invokevirtual #121
834: ldc           #44
836: invokevirtual #42
839: ldc2_w        #215
842: invokevirtual #121
845: ldc           #41
847: invokevirtual #42
850: invokevirtual #45
853: dload         30
855: ldc2_w        #215
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #47
870: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1444
End line: 1464
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: bipush        10
32: aload_1
33: invokespecial #9
36: astore_2
37: aload_2
38: invokevirtual #69
41: istore_3
42: aload_2
43: invokevirtual #53
46: astore        4
48: aload_2
49: invokevirtual #69
52: istore        5
54: aload_2
55: invokevirtual #125
58: istore        6
60: aload_2
61: invokevirtual #28
64: astore        7
66: ldc           #29
68: invokestatic  #14
71: goto          76
74: astore        7
76: new           #39
79: dup
80: invokespecial #40
83: ldc           #41
85: invokevirtual #42
88: iload_3
89: invokevirtual #81
92: ldc           #44
94: invokevirtual #42
97: iconst_0
98: invokevirtual #81
101: ldc           #41
103: invokevirtual #42
106: invokevirtual #45
109: iload_3
110: ifne          117
113: iconst_1
114: goto          118
117: iconst_0
118: invokestatic  #47
121: aload         4
123: invokestatic  #16
126: new           #39
129: dup
130: invokespecial #40
133: ldc           #41
135: invokevirtual #42
138: iload         5
140: invokevirtual #81
143: ldc           #44
145: invokevirtual #42
148: iconst_0
149: invokevirtual #81
152: ldc           #41
154: invokevirtual #42
157: invokevirtual #45
160: iload         5
162: ifne          169
165: iconst_1
166: goto          170
169: iconst_0
170: invokestatic  #47
173: new           #39
176: dup
177: invokespecial #40
180: ldc           #41
182: invokevirtual #42
185: iload         6
187: invokevirtual #81
190: ldc           #44
192: invokevirtual #42
195: iconst_0
196: invokevirtual #81
199: ldc           #41
201: invokevirtual #42
204: invokevirtual #45
207: iload         6
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #47
220: return
Exception table:
from    to  target type
60    71    74   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1467
End line: 1565
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction24 = null;
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray29 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix32 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray30, true);
        int int33 = array2DRowRealMatrix32.getRowDimension();
        array2DRowRealMatrix32.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double38 = array2DRowRealMatrix32.getNorm();
        double[][] doubleArray39 = array2DRowRealMatrix32.getData();
        double[][] doubleArray40 = array2DRowRealMatrix32.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix41 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray40);
        double[] doubleArray43 = new double[] { '4' };
        double[] doubleArray44 = new double[] {};
        boolean boolean45 = org.apache.commons.math3.util.MathArrays.equals(doubleArray43, doubleArray44);
        double[] doubleArray46 = blockRealMatrix41.preMultiply(doubleArray43);
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException50 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-1068072960), (java.lang.Number) 0, (int) '4');
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection51 = nonMonotonicSequenceException50.getDirection();
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection52 = nonMonotonicSequenceException50.getDirection();
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray46, orderDirection52, true, false);
        double[] doubleArray59 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray60 = new double[][] { doubleArray59 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix62 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray60, true);
        int int63 = array2DRowRealMatrix62.getRowDimension();
        array2DRowRealMatrix62.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double68 = array2DRowRealMatrix62.getNorm();
        double[][] doubleArray69 = array2DRowRealMatrix62.getData();
        double[][] doubleArray70 = array2DRowRealMatrix62.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix71 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray70);
        double[] doubleArray73 = new double[] { '4' };
        double[] doubleArray74 = new double[] {};
        boolean boolean75 = org.apache.commons.math3.util.MathArrays.equals(doubleArray73, doubleArray74);
        double[] doubleArray76 = blockRealMatrix71.preMultiply(doubleArray73);
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException80 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-1068072960), (java.lang.Number) 0, (int) '4');
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection81 = nonMonotonicSequenceException80.getDirection();
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection82 = nonMonotonicSequenceException80.getDirection();
        boolean boolean85 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray76, orderDirection82, true, false);
        boolean boolean87 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray46, orderDirection82, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair88 = cMAESOptimizer18.optimizeInternal((-2022633607), multivariateFunction24, goalType25, doubleArray46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[5200.0, -52.0, -52.0]");
        org.junit.Assert.assertTrue("'" + orderDirection51 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection51.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection52 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection52.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[5200.0, -52.0, -52.0]");
        org.junit.Assert.assertTrue("'" + orderDirection81 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection81.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection82 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection82.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #125
111: istore        6
113: aload         4
115: invokevirtual #149
118: astore        7
120: aload         4
122: invokevirtual #219
125: astore        8
127: aconst_null
128: astore        9
130: getstatic     #37
133: astore        10
135: iconst_3
136: newarray       double
138: dup
139: iconst_0
140: ldc2_w        #87
143: dastore
144: dup
145: iconst_1
146: ldc2_w        #59
149: dastore
150: dup
151: iconst_2
152: ldc2_w        #59
155: dastore
156: astore        11
158: iconst_1
159: anewarray     #89
162: dup
163: iconst_0
164: aload         11
166: aastore
167: astore        12
169: new           #90
172: dup
173: aload         12
175: iconst_1
176: invokespecial #91
179: astore        13
181: aload         13
183: invokevirtual #182
186: istore        14
188: aload         13
190: iconst_0
191: iconst_0
192: ldc2_w        #10
195: invokevirtual #183
198: aload         13
200: invokevirtual #184
203: dstore        15
205: aload         13
207: invokevirtual #92
210: astore        17
212: aload         13
214: invokevirtual #185
217: astore        18
219: new           #186
222: dup
223: aload         18
225: invokespecial #187
228: astore        19
230: iconst_1
231: newarray       double
233: dup
234: iconst_0
235: ldc2_w        #70
238: dastore
239: astore        20
241: iconst_0
242: newarray       double
244: astore        21
246: aload         20
248: aload         21
250: invokestatic  #72
253: istore        22
255: aload         19
257: aload         20
259: invokevirtual #188
262: astore        23
264: new           #67
267: dup
268: ldc           #38
270: invokestatic  #220
273: iconst_0
274: invokestatic  #220
277: bipush        52
279: invokespecial #221
282: astore        24
284: aload         24
286: invokevirtual #79
289: astore        25
291: aload         24
293: invokevirtual #79
296: astore        26
298: aload         23
300: aload         26
302: iconst_1
303: iconst_0
304: invokestatic  #222
307: istore        27
309: iconst_3
310: newarray       double
312: dup
313: iconst_0
314: ldc2_w        #87
317: dastore
318: dup
319: iconst_1
320: ldc2_w        #59
323: dastore
324: dup
325: iconst_2
326: ldc2_w        #59
329: dastore
330: astore        28
332: iconst_1
333: anewarray     #89
336: dup
337: iconst_0
338: aload         28
340: aastore
341: astore        29
343: new           #90
346: dup
347: aload         29
349: iconst_1
350: invokespecial #91
353: astore        30
355: aload         30
357: invokevirtual #182
360: istore        31
362: aload         30
364: iconst_0
365: iconst_0
366: ldc2_w        #10
369: invokevirtual #183
372: aload         30
374: invokevirtual #184
377: dstore        32
379: aload         30
381: invokevirtual #92
384: astore        34
386: aload         30
388: invokevirtual #185
391: astore        35
393: new           #186
396: dup
397: aload         35
399: invokespecial #187
402: astore        36
404: iconst_1
405: newarray       double
407: dup
408: iconst_0
409: ldc2_w        #70
412: dastore
413: astore        37
415: iconst_0
416: newarray       double
418: astore        38
420: aload         37
422: aload         38
424: invokestatic  #72
427: istore        39
429: aload         36
431: aload         37
433: invokevirtual #188
436: astore        40
438: new           #67
441: dup
442: ldc           #38
444: invokestatic  #220
447: iconst_0
448: invokestatic  #220
451: bipush        52
453: invokespecial #221
456: astore        41
458: aload         41
460: invokevirtual #79
463: astore        42
465: aload         41
467: invokevirtual #79
470: astore        43
472: aload         40
474: aload         43
476: iconst_1
477: iconst_0
478: invokestatic  #222
481: istore        44
483: aload         23
485: aload         43
487: iconst_0
488: invokestatic  #157
491: istore        45
493: aload         4
495: ldc           #223
497: aload         9
499: aload         10
501: aload         23
503: invokevirtual #126
506: astore        46
508: ldc           #13
510: invokestatic  #14
513: goto          518
516: astore        46
518: aload_1
519: invokestatic  #16
522: aload_1
523: invokestatic  #17
526: ldc           #26
528: invokestatic  #19
531: aload         5
533: invokestatic  #16
536: new           #39
539: dup
540: invokespecial #40
543: ldc           #41
545: invokevirtual #42
548: iload         6
550: invokevirtual #81
553: ldc           #44
555: invokevirtual #42
558: iconst_0
559: invokevirtual #81
562: ldc           #41
564: invokevirtual #42
567: invokevirtual #45
570: iload         6
572: ifne          579
575: iconst_1
576: goto          580
579: iconst_0
580: invokestatic  #47
583: aload         7
585: invokestatic  #155
588: aload         8
590: invokestatic  #16
593: new           #39
596: dup
597: invokespecial #40
600: ldc           #41
602: invokevirtual #42
605: aload         10
607: invokevirtual #43
610: ldc           #44
612: invokevirtual #42
615: getstatic     #37
618: invokevirtual #43
621: ldc           #41
623: invokevirtual #42
626: invokevirtual #45
629: aload         10
631: getstatic     #37
634: invokevirtual #46
637: invokestatic  #47
640: aload         11
642: invokestatic  #16
645: aload         11
647: invokestatic  #17
650: ldc           #94
652: invokestatic  #19
655: aload         12
657: invokestatic  #16
660: new           #39
663: dup
664: invokespecial #40
667: ldc           #41
669: invokevirtual #42
672: iload         14
674: invokevirtual #81
677: ldc           #44
679: invokevirtual #42
682: iconst_1
683: invokevirtual #81
686: ldc           #41
688: invokevirtual #42
691: invokevirtual #45
694: iload         14
696: iconst_1
697: if_icmpne     704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #47
708: new           #39
711: dup
712: invokespecial #40
715: ldc           #41
717: invokevirtual #42
720: dload         15
722: invokevirtual #121
725: ldc           #44
727: invokevirtual #42
730: ldc2_w        #10
733: invokevirtual #121
736: ldc           #41
738: invokevirtual #42
741: invokevirtual #45
744: dload         15
746: ldc2_w        #10
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #47
761: aload         17
763: invokestatic  #16
766: aload         18
768: invokestatic  #16
771: aload         20
773: invokestatic  #16
776: aload         20
778: invokestatic  #17
781: ldc           #82
783: invokestatic  #19
786: aload         21
788: invokestatic  #16
791: aload         21
793: invokestatic  #17
796: ldc           #83
798: invokestatic  #19
801: new           #39
804: dup
805: invokespecial #40
808: ldc           #41
810: invokevirtual #42
813: iload         22
815: invokevirtual #84
818: ldc           #44
820: invokevirtual #42
823: iconst_0
824: invokevirtual #84
827: ldc           #41
829: invokevirtual #42
832: invokevirtual #45
835: iload         22
837: ifne          844
840: iconst_1
841: goto          845
844: iconst_0
845: invokestatic  #47
848: aload         23
850: invokestatic  #16
853: aload         23
855: invokestatic  #17
858: ldc           #189
860: invokestatic  #19
863: new           #39
866: dup
867: invokespecial #40
870: ldc           #41
872: invokevirtual #42
875: aload         25
877: invokevirtual #43
880: ldc           #44
882: invokevirtual #42
885: getstatic     #73
888: invokevirtual #43
891: ldc           #41
893: invokevirtual #42
896: invokevirtual #45
899: aload         25
901: getstatic     #73
904: invokevirtual #85
907: invokestatic  #47
910: new           #39
913: dup
914: invokespecial #40
917: ldc           #41
919: invokevirtual #42
922: aload         26
924: invokevirtual #43
927: ldc           #44
929: invokevirtual #42
932: getstatic     #73
935: invokevirtual #43
938: ldc           #41
940: invokevirtual #42
943: invokevirtual #45
946: aload         26
948: getstatic     #73
951: invokevirtual #85
954: invokestatic  #47
957: new           #39
960: dup
961: invokespecial #40
964: ldc           #41
966: invokevirtual #42
969: iload         27
971: invokevirtual #84
974: ldc           #44
976: invokevirtual #42
979: iconst_0
980: invokevirtual #84
983: ldc           #41
985: invokevirtual #42
988: invokevirtual #45
991: iload         27
993: ifne          1000
996: iconst_1
997: goto          1001
1000: iconst_0
1001: invokestatic  #47
1004: aload         28
1006: invokestatic  #16
1009: aload         28
1011: invokestatic  #17
1014: ldc           #94
1016: invokestatic  #19
1019: aload         29
1021: invokestatic  #16
1024: new           #39
1027: dup
1028: invokespecial #40
1031: ldc           #41
1033: invokevirtual #42
1036: iload         31
1038: invokevirtual #81
1041: ldc           #44
1043: invokevirtual #42
1046: iconst_1
1047: invokevirtual #81
1050: ldc           #41
1052: invokevirtual #42
1055: invokevirtual #45
1058: iload         31
1060: iconst_1
1061: if_icmpne     1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #47
1072: new           #39
1075: dup
1076: invokespecial #40
1079: ldc           #41
1081: invokevirtual #42
1084: dload         32
1086: invokevirtual #121
1089: ldc           #44
1091: invokevirtual #42
1094: ldc2_w        #10
1097: invokevirtual #121
1100: ldc           #41
1102: invokevirtual #42
1105: invokevirtual #45
1108: dload         32
1110: ldc2_w        #10
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #47
1125: aload         34
1127: invokestatic  #16
1130: aload         35
1132: invokestatic  #16
1135: aload         37
1137: invokestatic  #16
1140: aload         37
1142: invokestatic  #17
1145: ldc           #82
1147: invokestatic  #19
1150: aload         38
1152: invokestatic  #16
1155: aload         38
1157: invokestatic  #17
1160: ldc           #83
1162: invokestatic  #19
1165: new           #39
1168: dup
1169: invokespecial #40
1172: ldc           #41
1174: invokevirtual #42
1177: iload         39
1179: invokevirtual #84
1182: ldc           #44
1184: invokevirtual #42
1187: iconst_0
1188: invokevirtual #84
1191: ldc           #41
1193: invokevirtual #42
1196: invokevirtual #45
1199: iload         39
1201: ifne          1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #47
1212: aload         40
1214: invokestatic  #16
1217: aload         40
1219: invokestatic  #17
1222: ldc           #189
1224: invokestatic  #19
1227: new           #39
1230: dup
1231: invokespecial #40
1234: ldc           #41
1236: invokevirtual #42
1239: aload         42
1241: invokevirtual #43
1244: ldc           #44
1246: invokevirtual #42
1249: getstatic     #73
1252: invokevirtual #43
1255: ldc           #41
1257: invokevirtual #42
1260: invokevirtual #45
1263: aload         42
1265: getstatic     #73
1268: invokevirtual #85
1271: invokestatic  #47
1274: new           #39
1277: dup
1278: invokespecial #40
1281: ldc           #41
1283: invokevirtual #42
1286: aload         43
1288: invokevirtual #43
1291: ldc           #44
1293: invokevirtual #42
1296: getstatic     #73
1299: invokevirtual #43
1302: ldc           #41
1304: invokevirtual #42
1307: invokevirtual #45
1310: aload         43
1312: getstatic     #73
1315: invokevirtual #85
1318: invokestatic  #47
1321: new           #39
1324: dup
1325: invokespecial #40
1328: ldc           #41
1330: invokevirtual #42
1333: iload         44
1335: invokevirtual #84
1338: ldc           #44
1340: invokevirtual #42
1343: iconst_0
1344: invokevirtual #84
1347: ldc           #41
1349: invokevirtual #42
1352: invokevirtual #45
1355: iload         44
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #47
1368: new           #39
1371: dup
1372: invokespecial #40
1375: ldc           #41
1377: invokevirtual #42
1380: iload         45
1382: invokevirtual #84
1385: ldc           #44
1387: invokevirtual #42
1390: iconst_0
1391: invokevirtual #84
1394: ldc           #41
1396: invokevirtual #42
1399: invokevirtual #45
1402: iload         45
1404: ifne          1411
1407: iconst_1
1408: goto          1412
1411: iconst_0
1412: invokestatic  #47
1415: return
Exception table:
from    to  target type
493   513   516   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 1568
End line: 1646
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix61 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray59);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair63 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray59, (double) (-1.0f));
        double double64 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray52, doubleArray59);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix66 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray59);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray59, 0.6557942026326724d);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister75 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double76 = mersenneTwister75.nextGaussian();
        int int78 = mersenneTwister75.nextInt((int) (short) 100);
        int[] intArray80 = new int[] { (-127) };
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray83 = new int[] { (-127) };
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister85 = new org.apache.commons.math3.random.MersenneTwister(intArray83);
        double double86 = org.apache.commons.math3.util.MathArrays.distance(intArray80, intArray83);
        mersenneTwister75.setSeed(intArray83);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker89 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        double double90 = simpleValueChecker89.getRelativeThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray68, (-127), 0.0d, true, (int) (byte) 100, (int) (short) 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister75, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker89);
        org.apache.commons.math3.optimization.GoalType goalType92 = cMAESOptimizer91.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 20204.0d + "'", double64 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix66);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.7023867716137234d) + "'", double76 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 31 + "'", int78 == 31);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-127]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-127]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-127]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-127]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.1102230246251565E-14d + "'", double90 == 1.1102230246251565E-14d);
        org.junit.Assert.assertNull(goalType92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #96
64: dup
65: aload_1
66: invokespecial #97
69: astore_2
70: bipush        6
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #10
83: dastore
84: dup
85: iconst_2
86: dconst_1
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #21
101: dastore
102: astore_3
103: aload_3
104: invokestatic  #23
107: new           #96
110: dup
111: aload_3
112: invokespecial #97
115: astore        4
117: new           #96
120: dup
121: aload_2
122: aload         4
124: invokespecial #99
127: astore        5
129: bipush        6
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #10
142: dastore
143: dup
144: iconst_2
145: dconst_1
146: dastore
147: dup
148: iconst_3
149: dconst_0
150: dastore
151: dup
152: iconst_4
153: dconst_1
154: dastore
155: dup
156: iconst_5
157: ldc2_w        #21
160: dastore
161: astore        6
163: aload         6
165: invokestatic  #23
168: new           #96
171: dup
172: aload         6
174: invokespecial #97
177: astore        7
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: dconst_0
186: dastore
187: dup
188: iconst_1
189: ldc2_w        #10
192: dastore
193: dup
194: iconst_2
195: dconst_1
196: dastore
197: dup
198: iconst_3
199: dconst_0
200: dastore
201: dup
202: iconst_4
203: dconst_1
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #21
210: dastore
211: astore        8
213: aload         8
215: invokestatic  #23
218: new           #96
221: dup
222: aload         8
224: invokespecial #97
227: astore        9
229: new           #96
232: dup
233: aload         7
235: aload         9
237: invokespecial #99
240: astore        10
242: bipush        6
244: newarray       double
246: dup
247: iconst_0
248: dconst_0
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #10
255: dastore
256: dup
257: iconst_2
258: dconst_1
259: dastore
260: dup
261: iconst_3
262: dconst_0
263: dastore
264: dup
265: iconst_4
266: dconst_1
267: dastore
268: dup
269: iconst_5
270: ldc2_w        #21
273: dastore
274: astore        11
276: aload         11
278: invokestatic  #23
281: new           #96
284: dup
285: aload         11
287: invokespecial #97
290: astore        12
292: new           #96
295: dup
296: aload         9
298: aload         12
300: invokespecial #99
303: astore        13
305: aload         4
307: dconst_1
308: dconst_1
309: aload         12
311: invokevirtual #100
314: astore        14
316: aload         4
318: invokevirtual #101
321: astore        15
323: bipush        6
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #10
336: dastore
337: dup
338: iconst_2
339: dconst_1
340: dastore
341: dup
342: iconst_3
343: dconst_0
344: dastore
345: dup
346: iconst_4
347: dconst_1
348: dastore
349: dup
350: iconst_5
351: ldc2_w        #21
354: dastore
355: astore        16
357: aload         16
359: invokestatic  #23
362: aload         16
364: invokestatic  #24
367: astore        17
369: new           #58
372: dup
373: aload         16
375: ldc2_w        #59
378: invokespecial #61
381: astore        18
383: aload         15
385: aload         16
387: invokestatic  #206
390: dstore        19
392: aload         16
394: invokestatic  #23
397: aload         16
399: invokestatic  #207
402: astore        21
404: aload         16
406: ldc2_w        #208
409: invokestatic  #210
412: astore        22
414: new           #32
417: dup
418: iconst_1
419: invokespecial #33
422: astore        23
424: aload         23
426: invokevirtual #168
429: dstore        24
431: aload         23
433: bipush        100
435: invokevirtual #225
438: istore        26
440: iconst_1
441: newarray       int
443: dup
444: iconst_0
445: bipush        -127
447: iastore
448: astore        27
450: aload         27
452: invokestatic  #226
455: astore        28
457: iconst_1
458: newarray       int
460: dup
461: iconst_0
462: bipush        -127
464: iastore
465: astore        29
467: aload         29
469: invokestatic  #226
472: astore        30
474: new           #32
477: dup
478: aload         29
480: invokespecial #112
483: astore        31
485: aload         27
487: aload         29
489: invokestatic  #227
492: dstore        32
494: aload         23
496: aload         29
498: invokevirtual #228
501: new           #34
504: dup
505: invokespecial #35
508: astore        34
510: aload         34
512: invokevirtual #162
515: dstore        35
517: new           #8
520: dup
521: sipush        30000
524: aload         22
526: bipush        -127
528: dconst_0
529: iconst_1
530: bipush        100
532: iconst_0
533: aload         23
535: iconst_0
536: aload         34
538: invokespecial #36
541: astore        37
543: aload         37
545: invokevirtual #149
548: astore        38
550: aload_1
551: invokestatic  #16
554: aload_1
555: invokestatic  #17
558: ldc           #26
560: invokestatic  #19
563: aload_3
564: invokestatic  #16
567: aload_3
568: invokestatic  #17
571: ldc           #26
573: invokestatic  #19
576: aload         6
578: invokestatic  #16
581: aload         6
583: invokestatic  #17
586: ldc           #26
588: invokestatic  #19
591: aload         8
593: invokestatic  #16
596: aload         8
598: invokestatic  #17
601: ldc           #26
603: invokestatic  #19
606: aload         11
608: invokestatic  #16
611: aload         11
613: invokestatic  #17
616: ldc           #26
618: invokestatic  #19
621: aload         14
623: invokestatic  #16
626: aload         15
628: invokestatic  #16
631: aload         15
633: invokestatic  #17
636: ldc           #105
638: invokestatic  #19
641: aload         16
643: invokestatic  #16
646: aload         16
648: invokestatic  #17
651: ldc           #26
653: invokestatic  #19
656: aload         17
658: invokestatic  #16
661: new           #39
664: dup
665: invokespecial #40
668: ldc           #41
670: invokevirtual #42
673: dload         19
675: invokevirtual #121
678: ldc           #44
680: invokevirtual #42
683: ldc2_w        #212
686: invokevirtual #121
689: ldc           #41
691: invokevirtual #42
694: invokevirtual #45
697: dload         19
699: ldc2_w        #212
702: dcmpl
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #47
714: aload         21
716: invokestatic  #16
719: aload         22
721: invokestatic  #16
724: aload         22
726: invokestatic  #17
729: ldc           #214
731: invokestatic  #19
734: new           #39
737: dup
738: invokespecial #40
741: ldc           #41
743: invokevirtual #42
746: dload         24
748: invokevirtual #121
751: ldc           #44
753: invokevirtual #42
756: ldc2_w        #74
759: invokevirtual #121
762: ldc           #41
764: invokevirtual #42
767: invokevirtual #45
770: dload         24
772: ldc2_w        #74
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #47
787: new           #39
790: dup
791: invokespecial #40
794: ldc           #41
796: invokevirtual #42
799: iload         26
801: invokevirtual #81
804: ldc           #44
806: invokevirtual #42
809: bipush        31
811: invokevirtual #81
814: ldc           #41
816: invokevirtual #42
819: invokevirtual #45
822: iload         26
824: bipush        31
826: if_icmpne     833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #47
837: aload         27
839: invokestatic  #16
842: aload         27
844: invokestatic  #117
847: ldc           #229
849: invokestatic  #19
852: aload         28
854: invokestatic  #16
857: aload         28
859: invokestatic  #117
862: ldc           #229
864: invokestatic  #19
867: aload         29
869: invokestatic  #16
872: aload         29
874: invokestatic  #117
877: ldc           #229
879: invokestatic  #19
882: aload         30
884: invokestatic  #16
887: aload         30
889: invokestatic  #117
892: ldc           #229
894: invokestatic  #19
897: new           #39
900: dup
901: invokespecial #40
904: ldc           #41
906: invokevirtual #42
909: dload         32
911: invokevirtual #121
914: ldc           #44
916: invokevirtual #42
919: dconst_0
920: invokevirtual #121
923: ldc           #41
925: invokevirtual #42
928: invokevirtual #45
931: dload         32
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #47
946: new           #39
949: dup
950: invokespecial #40
953: ldc           #41
955: invokevirtual #42
958: dload         35
960: invokevirtual #121
963: ldc           #44
965: invokevirtual #42
968: ldc2_w        #163
971: invokevirtual #121
974: ldc           #41
976: invokevirtual #42
979: invokevirtual #45
982: dload         35
984: ldc2_w        #163
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #47
999: aload         38
1001: invokestatic  #155
1004: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 1649
End line: 1716
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector32, arrayRealVector41);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray51);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector53, arrayRealVector62);
        double[] doubleArray70 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector62, arrayRealVector72);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = arrayRealVector41.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector72);
        double[] doubleArray75 = arrayRealVector41.toArray();
        double[] doubleArray82 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray82);
        org.apache.commons.math3.linear.RealMatrix realMatrix84 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray82);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair86 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray82, (double) (-1.0f));
        double double87 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray75, doubleArray82);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair89 = cMAESOptimizer18.optimize(36, multivariateFunction22, goalType23, doubleArray82);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix84);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 20204.0d + "'", double87 == 20204.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #125
111: istore        6
113: aconst_null
114: astore        7
116: getstatic     #37
119: astore        8
121: bipush        6
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: ldc2_w        #10
134: dastore
135: dup
136: iconst_2
137: dconst_1
138: dastore
139: dup
140: iconst_3
141: dconst_0
142: dastore
143: dup
144: iconst_4
145: dconst_1
146: dastore
147: dup
148: iconst_5
149: ldc2_w        #21
152: dastore
153: astore        9
155: aload         9
157: invokestatic  #23
160: new           #96
163: dup
164: aload         9
166: invokespecial #97
169: astore        10
171: bipush        6
173: newarray       double
175: dup
176: iconst_0
177: dconst_0
178: dastore
179: dup
180: iconst_1
181: ldc2_w        #10
184: dastore
185: dup
186: iconst_2
187: dconst_1
188: dastore
189: dup
190: iconst_3
191: dconst_0
192: dastore
193: dup
194: iconst_4
195: dconst_1
196: dastore
197: dup
198: iconst_5
199: ldc2_w        #21
202: dastore
203: astore        11
205: aload         11
207: invokestatic  #23
210: new           #96
213: dup
214: aload         11
216: invokespecial #97
219: astore        12
221: new           #96
224: dup
225: aload         10
227: aload         12
229: invokespecial #99
232: astore        13
234: bipush        6
236: newarray       double
238: dup
239: iconst_0
240: dconst_0
241: dastore
242: dup
243: iconst_1
244: ldc2_w        #10
247: dastore
248: dup
249: iconst_2
250: dconst_1
251: dastore
252: dup
253: iconst_3
254: dconst_0
255: dastore
256: dup
257: iconst_4
258: dconst_1
259: dastore
260: dup
261: iconst_5
262: ldc2_w        #21
265: dastore
266: astore        14
268: aload         14
270: invokestatic  #23
273: new           #96
276: dup
277: aload         14
279: invokespecial #97
282: astore        15
284: bipush        6
286: newarray       double
288: dup
289: iconst_0
290: dconst_0
291: dastore
292: dup
293: iconst_1
294: ldc2_w        #10
297: dastore
298: dup
299: iconst_2
300: dconst_1
301: dastore
302: dup
303: iconst_3
304: dconst_0
305: dastore
306: dup
307: iconst_4
308: dconst_1
309: dastore
310: dup
311: iconst_5
312: ldc2_w        #21
315: dastore
316: astore        16
318: aload         16
320: invokestatic  #23
323: new           #96
326: dup
327: aload         16
329: invokespecial #97
332: astore        17
334: new           #96
337: dup
338: aload         15
340: aload         17
342: invokespecial #99
345: astore        18
347: bipush        6
349: newarray       double
351: dup
352: iconst_0
353: dconst_0
354: dastore
355: dup
356: iconst_1
357: ldc2_w        #10
360: dastore
361: dup
362: iconst_2
363: dconst_1
364: dastore
365: dup
366: iconst_3
367: dconst_0
368: dastore
369: dup
370: iconst_4
371: dconst_1
372: dastore
373: dup
374: iconst_5
375: ldc2_w        #21
378: dastore
379: astore        19
381: aload         19
383: invokestatic  #23
386: new           #96
389: dup
390: aload         19
392: invokespecial #97
395: astore        20
397: new           #96
400: dup
401: aload         17
403: aload         20
405: invokespecial #99
408: astore        21
410: aload         12
412: dconst_1
413: dconst_1
414: aload         20
416: invokevirtual #100
419: astore        22
421: aload         12
423: invokevirtual #101
426: astore        23
428: bipush        6
430: newarray       double
432: dup
433: iconst_0
434: dconst_0
435: dastore
436: dup
437: iconst_1
438: ldc2_w        #10
441: dastore
442: dup
443: iconst_2
444: dconst_1
445: dastore
446: dup
447: iconst_3
448: dconst_0
449: dastore
450: dup
451: iconst_4
452: dconst_1
453: dastore
454: dup
455: iconst_5
456: ldc2_w        #21
459: dastore
460: astore        24
462: aload         24
464: invokestatic  #23
467: aload         24
469: invokestatic  #24
472: astore        25
474: new           #58
477: dup
478: aload         24
480: ldc2_w        #59
483: invokespecial #61
486: astore        26
488: aload         23
490: aload         24
492: invokestatic  #206
495: dstore        27
497: aload         24
499: invokestatic  #23
502: aload         4
504: bipush        36
506: aload         7
508: aload         8
510: aload         24
512: invokevirtual #12
515: astore        29
517: ldc           #13
519: invokestatic  #14
522: goto          527
525: astore        29
527: aload_1
528: invokestatic  #16
531: aload_1
532: invokestatic  #17
535: ldc           #26
537: invokestatic  #19
540: aload         5
542: invokestatic  #16
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: iload         6
559: invokevirtual #81
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #81
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         6
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #47
592: new           #39
595: dup
596: invokespecial #40
599: ldc           #41
601: invokevirtual #42
604: aload         8
606: invokevirtual #43
609: ldc           #44
611: invokevirtual #42
614: getstatic     #37
617: invokevirtual #43
620: ldc           #41
622: invokevirtual #42
625: invokevirtual #45
628: aload         8
630: getstatic     #37
633: invokevirtual #46
636: invokestatic  #47
639: aload         9
641: invokestatic  #16
644: aload         9
646: invokestatic  #17
649: ldc           #26
651: invokestatic  #19
654: aload         11
656: invokestatic  #16
659: aload         11
661: invokestatic  #17
664: ldc           #26
666: invokestatic  #19
669: aload         14
671: invokestatic  #16
674: aload         14
676: invokestatic  #17
679: ldc           #26
681: invokestatic  #19
684: aload         16
686: invokestatic  #16
689: aload         16
691: invokestatic  #17
694: ldc           #26
696: invokestatic  #19
699: aload         19
701: invokestatic  #16
704: aload         19
706: invokestatic  #17
709: ldc           #26
711: invokestatic  #19
714: aload         22
716: invokestatic  #16
719: aload         23
721: invokestatic  #16
724: aload         23
726: invokestatic  #17
729: ldc           #105
731: invokestatic  #19
734: aload         24
736: invokestatic  #16
739: aload         24
741: invokestatic  #17
744: ldc           #26
746: invokestatic  #19
749: aload         25
751: invokestatic  #16
754: new           #39
757: dup
758: invokespecial #40
761: ldc           #41
763: invokevirtual #42
766: dload         27
768: invokevirtual #121
771: ldc           #44
773: invokevirtual #42
776: ldc2_w        #212
779: invokevirtual #121
782: ldc           #41
784: invokevirtual #42
787: invokevirtual #45
790: dload         27
792: ldc2_w        #212
795: dcmpl
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #47
807: return
Exception table:
from    to  target type
502   522   525   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 1719
End line: 1731
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleList19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #232
104: astore        5
106: aload_1
107: invokestatic  #16
110: aload_1
111: invokestatic  #17
114: ldc           #26
116: invokestatic  #19
119: aload         5
121: invokestatic  #16
124: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 1734
End line: 1776
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = array2DRowRealMatrix6.createMatrix(10, (int) (byte) 10);
        org.apache.commons.math3.linear.RealVector realVector11 = array2DRowRealMatrix6.getRowVector(0);
        double[] doubleArray15 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray16 = new double[][] { doubleArray15 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix18 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray16, true);
        int int19 = array2DRowRealMatrix18.getRowDimension();
        org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor20 = new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor();
        defaultRealMatrixPreservingVisitor20.visit(31, (int) (short) 100, (double) 97);
        double double25 = array2DRowRealMatrix18.walkInRowOrder((org.apache.commons.math3.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor20);
        double double26 = array2DRowRealMatrix6.walkInRowOrder((org.apache.commons.math3.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor20);
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix36 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair38 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray34, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray40 = array2DRowRealMatrix6.operate(doubleArray34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 3");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #87
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #59
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #59
44: dastore
45: astore_1
46: iconst_1
47: anewarray     #89
50: dup
51: iconst_0
52: aload_1
53: aastore
54: astore_2
55: new           #90
58: dup
59: aload_2
60: iconst_1
61: invokespecial #91
64: astore_3
65: aload_3
66: bipush        10
68: bipush        10
70: invokevirtual #234
73: astore        4
75: aload_3
76: iconst_0
77: invokevirtual #235
80: astore        5
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #87
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #59
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #59
102: dastore
103: astore        6
105: iconst_1
106: anewarray     #89
109: dup
110: iconst_0
111: aload         6
113: aastore
114: astore        7
116: new           #90
119: dup
120: aload         7
122: iconst_1
123: invokespecial #91
126: astore        8
128: aload         8
130: invokevirtual #182
133: istore        9
135: new           #236
138: dup
139: invokespecial #237
142: astore        10
144: aload         10
146: bipush        31
148: bipush        100
150: ldc2_w        #238
153: invokevirtual #240
156: aload         8
158: aload         10
160: invokevirtual #241
163: dstore        11
165: aload_3
166: aload         10
168: invokevirtual #241
171: dstore        13
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: dconst_0
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #10
186: dastore
187: dup
188: iconst_2
189: dconst_1
190: dastore
191: dup
192: iconst_3
193: dconst_0
194: dastore
195: dup
196: iconst_4
197: dconst_1
198: dastore
199: dup
200: iconst_5
201: ldc2_w        #21
204: dastore
205: astore        15
207: aload         15
209: invokestatic  #23
212: aload         15
214: invokestatic  #24
217: astore        16
219: new           #58
222: dup
223: aload         15
225: ldc2_w        #59
228: invokespecial #61
231: astore        17
233: new           #8
236: dup
237: bipush        36
239: aload         15
241: invokespecial #9
244: astore        18
246: aload_3
247: aload         15
249: invokevirtual #242
252: astore        19
254: ldc           #243
256: invokestatic  #14
259: goto          264
262: astore        19
264: aload_1
265: invokestatic  #16
268: aload_1
269: invokestatic  #17
272: ldc           #94
274: invokestatic  #19
277: aload_2
278: invokestatic  #16
281: aload         4
283: invokestatic  #16
286: aload         5
288: invokestatic  #16
291: aload         6
293: invokestatic  #16
296: aload         6
298: invokestatic  #17
301: ldc           #94
303: invokestatic  #19
306: aload         7
308: invokestatic  #16
311: new           #39
314: dup
315: invokespecial #40
318: ldc           #41
320: invokevirtual #42
323: iload         9
325: invokevirtual #81
328: ldc           #44
330: invokevirtual #42
333: iconst_1
334: invokevirtual #81
337: ldc           #41
339: invokevirtual #42
342: invokevirtual #45
345: iload         9
347: iconst_1
348: if_icmpne     355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #47
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: dload         11
373: invokevirtual #121
376: ldc           #44
378: invokevirtual #42
381: dconst_0
382: invokevirtual #121
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: dload         11
395: dconst_0
396: dcmpl
397: ifne          404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #47
408: new           #39
411: dup
412: invokespecial #40
415: ldc           #41
417: invokevirtual #42
420: dload         13
422: invokevirtual #121
425: ldc           #44
427: invokevirtual #42
430: dconst_0
431: invokevirtual #121
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: dload         13
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #47
457: aload         15
459: invokestatic  #16
462: aload         15
464: invokestatic  #17
467: ldc           #26
469: invokestatic  #19
472: aload         16
474: invokestatic  #16
477: return
Exception table:
from    to  target type
246   259   262   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 1779
End line: 1791
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        double[] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = cMAESOptimizer1.computeObjectiveValue(doubleArray2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: bipush        35
30: invokespecial #245
33: astore_1
34: aconst_null
35: astore_2
36: aload_1
37: aload_2
38: invokevirtual #173
41: dstore_3
42: ldc           #174
44: invokestatic  #14
47: goto          51
50: astore_3
51: return
Exception table:
from    to  target type
36    47    50   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 1794
End line: 1860
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector8, arrayRealVector17);
        double[] doubleArray27 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector29, arrayRealVector38);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector38, arrayRealVector48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = arrayRealVector17.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector48);
        double[] doubleArray51 = arrayRealVector17.toArray();
        double[] doubleArray58 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray58);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair62 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray58, (double) (-1.0f));
        double double63 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray51, doubleArray58);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix65 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray58);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, 0.6557942026326724d);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister83 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker85 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray75, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister83, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker85);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector87 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray58, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray75);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 1 and 2 are not strictly increasing (100 >= 1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 20204.0d + "'", double63 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #96
64: dup
65: aload_1
66: invokespecial #97
69: astore_2
70: bipush        6
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #10
83: dastore
84: dup
85: iconst_2
86: dconst_1
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #21
101: dastore
102: astore_3
103: aload_3
104: invokestatic  #23
107: new           #96
110: dup
111: aload_3
112: invokespecial #97
115: astore        4
117: new           #96
120: dup
121: aload_2
122: aload         4
124: invokespecial #99
127: astore        5
129: bipush        6
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #10
142: dastore
143: dup
144: iconst_2
145: dconst_1
146: dastore
147: dup
148: iconst_3
149: dconst_0
150: dastore
151: dup
152: iconst_4
153: dconst_1
154: dastore
155: dup
156: iconst_5
157: ldc2_w        #21
160: dastore
161: astore        6
163: aload         6
165: invokestatic  #23
168: new           #96
171: dup
172: aload         6
174: invokespecial #97
177: astore        7
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: dconst_0
186: dastore
187: dup
188: iconst_1
189: ldc2_w        #10
192: dastore
193: dup
194: iconst_2
195: dconst_1
196: dastore
197: dup
198: iconst_3
199: dconst_0
200: dastore
201: dup
202: iconst_4
203: dconst_1
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #21
210: dastore
211: astore        8
213: aload         8
215: invokestatic  #23
218: new           #96
221: dup
222: aload         8
224: invokespecial #97
227: astore        9
229: new           #96
232: dup
233: aload         7
235: aload         9
237: invokespecial #99
240: astore        10
242: bipush        6
244: newarray       double
246: dup
247: iconst_0
248: dconst_0
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #10
255: dastore
256: dup
257: iconst_2
258: dconst_1
259: dastore
260: dup
261: iconst_3
262: dconst_0
263: dastore
264: dup
265: iconst_4
266: dconst_1
267: dastore
268: dup
269: iconst_5
270: ldc2_w        #21
273: dastore
274: astore        11
276: aload         11
278: invokestatic  #23
281: new           #96
284: dup
285: aload         11
287: invokespecial #97
290: astore        12
292: new           #96
295: dup
296: aload         9
298: aload         12
300: invokespecial #99
303: astore        13
305: aload         4
307: dconst_1
308: dconst_1
309: aload         12
311: invokevirtual #100
314: astore        14
316: aload         4
318: invokevirtual #101
321: astore        15
323: bipush        6
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #10
336: dastore
337: dup
338: iconst_2
339: dconst_1
340: dastore
341: dup
342: iconst_3
343: dconst_0
344: dastore
345: dup
346: iconst_4
347: dconst_1
348: dastore
349: dup
350: iconst_5
351: ldc2_w        #21
354: dastore
355: astore        16
357: aload         16
359: invokestatic  #23
362: aload         16
364: invokestatic  #24
367: astore        17
369: new           #58
372: dup
373: aload         16
375: ldc2_w        #59
378: invokespecial #61
381: astore        18
383: aload         15
385: aload         16
387: invokestatic  #206
390: dstore        19
392: aload         16
394: invokestatic  #23
397: aload         16
399: invokestatic  #207
402: astore        21
404: aload         16
406: ldc2_w        #208
409: invokestatic  #210
412: astore        22
414: bipush        6
416: newarray       double
418: dup
419: iconst_0
420: dconst_0
421: dastore
422: dup
423: iconst_1
424: ldc2_w        #10
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: dup
437: iconst_4
438: dconst_1
439: dastore
440: dup
441: iconst_5
442: ldc2_w        #21
445: dastore
446: astore        23
448: aload         23
450: invokestatic  #23
453: new           #32
456: dup
457: iconst_1
458: invokespecial #33
461: astore        24
463: new           #34
466: dup
467: invokespecial #35
470: astore        25
472: new           #8
475: dup
476: iconst_5
477: aload         23
479: bipush        100
481: dconst_0
482: iconst_0
483: iconst_0
484: bipush        100
486: aload         24
488: iconst_1
489: aload         25
491: invokespecial #36
494: astore        26
496: new           #96
499: dup
500: aload         16
502: aload         23
504: invokespecial #139
507: astore        27
509: aload         23
511: invokestatic  #65
514: ldc           #66
516: invokestatic  #14
519: goto          524
522: astore        28
524: aload_1
525: invokestatic  #16
528: aload_1
529: invokestatic  #17
532: ldc           #26
534: invokestatic  #19
537: aload_3
538: invokestatic  #16
541: aload_3
542: invokestatic  #17
545: ldc           #26
547: invokestatic  #19
550: aload         6
552: invokestatic  #16
555: aload         6
557: invokestatic  #17
560: ldc           #26
562: invokestatic  #19
565: aload         8
567: invokestatic  #16
570: aload         8
572: invokestatic  #17
575: ldc           #26
577: invokestatic  #19
580: aload         11
582: invokestatic  #16
585: aload         11
587: invokestatic  #17
590: ldc           #26
592: invokestatic  #19
595: aload         14
597: invokestatic  #16
600: aload         15
602: invokestatic  #16
605: aload         15
607: invokestatic  #17
610: ldc           #105
612: invokestatic  #19
615: aload         16
617: invokestatic  #16
620: aload         16
622: invokestatic  #17
625: ldc           #26
627: invokestatic  #19
630: aload         17
632: invokestatic  #16
635: new           #39
638: dup
639: invokespecial #40
642: ldc           #41
644: invokevirtual #42
647: dload         19
649: invokevirtual #121
652: ldc           #44
654: invokevirtual #42
657: ldc2_w        #212
660: invokevirtual #121
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: dload         19
673: ldc2_w        #212
676: dcmpl
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #47
688: aload         21
690: invokestatic  #16
693: aload         22
695: invokestatic  #16
698: aload         22
700: invokestatic  #17
703: ldc           #214
705: invokestatic  #19
708: aload         23
710: invokestatic  #16
713: aload         23
715: invokestatic  #17
718: ldc           #26
720: invokestatic  #19
723: return
Exception table:
from    to  target type
509   519   522   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 1863
End line: 1879
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #32
64: dup
65: iconst_1
66: invokespecial #33
69: astore_2
70: new           #34
73: dup
74: invokespecial #35
77: astore_3
78: new           #8
81: dup
82: iconst_5
83: aload_1
84: bipush        100
86: dconst_0
87: iconst_0
88: iconst_0
89: bipush        100
91: aload_2
92: iconst_1
93: aload_3
94: invokespecial #36
97: astore        4
99: aload         4
101: invokevirtual #53
104: astore        5
106: aload         4
108: invokevirtual #232
111: astore        6
113: aload         4
115: invokevirtual #219
118: astore        7
120: aload_1
121: invokestatic  #16
124: aload_1
125: invokestatic  #17
128: ldc           #26
130: invokestatic  #19
133: aload         5
135: invokestatic  #16
138: aload         6
140: invokestatic  #16
143: aload         7
145: invokestatic  #16
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 1882
End line: 1946
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        double[] doubleArray71 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix73 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix74 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealVector realVector75 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray71);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector79 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray71, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooLargeException; message: 62 is larger than the maximum (6)");
        } catch (org.apache.commons.math3.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix73);
        org.junit.Assert.assertNotNull(realMatrix74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #96
64: dup
65: aload_1
66: invokespecial #97
69: astore_2
70: aload_2
71: invokevirtual #98
74: astore_3
75: bipush        6
77: newarray       double
79: dup
80: iconst_0
81: dconst_0
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #10
88: dastore
89: dup
90: iconst_2
91: dconst_1
92: dastore
93: dup
94: iconst_3
95: dconst_0
96: dastore
97: dup
98: iconst_4
99: dconst_1
100: dastore
101: dup
102: iconst_5
103: ldc2_w        #21
106: dastore
107: astore        4
109: aload         4
111: invokestatic  #23
114: new           #96
117: dup
118: aload         4
120: invokespecial #97
123: astore        5
125: bipush        6
127: newarray       double
129: dup
130: iconst_0
131: dconst_0
132: dastore
133: dup
134: iconst_1
135: ldc2_w        #10
138: dastore
139: dup
140: iconst_2
141: dconst_1
142: dastore
143: dup
144: iconst_3
145: dconst_0
146: dastore
147: dup
148: iconst_4
149: dconst_1
150: dastore
151: dup
152: iconst_5
153: ldc2_w        #21
156: dastore
157: astore        6
159: aload         6
161: invokestatic  #23
164: new           #96
167: dup
168: aload         6
170: invokespecial #97
173: astore        7
175: new           #96
178: dup
179: aload         5
181: aload         7
183: invokespecial #99
186: astore        8
188: bipush        6
190: newarray       double
192: dup
193: iconst_0
194: dconst_0
195: dastore
196: dup
197: iconst_1
198: ldc2_w        #10
201: dastore
202: dup
203: iconst_2
204: dconst_1
205: dastore
206: dup
207: iconst_3
208: dconst_0
209: dastore
210: dup
211: iconst_4
212: dconst_1
213: dastore
214: dup
215: iconst_5
216: ldc2_w        #21
219: dastore
220: astore        9
222: aload         9
224: invokestatic  #23
227: new           #96
230: dup
231: aload         9
233: invokespecial #97
236: astore        10
238: bipush        6
240: newarray       double
242: dup
243: iconst_0
244: dconst_0
245: dastore
246: dup
247: iconst_1
248: ldc2_w        #10
251: dastore
252: dup
253: iconst_2
254: dconst_1
255: dastore
256: dup
257: iconst_3
258: dconst_0
259: dastore
260: dup
261: iconst_4
262: dconst_1
263: dastore
264: dup
265: iconst_5
266: ldc2_w        #21
269: dastore
270: astore        11
272: aload         11
274: invokestatic  #23
277: new           #96
280: dup
281: aload         11
283: invokespecial #97
286: astore        12
288: new           #96
291: dup
292: aload         10
294: aload         12
296: invokespecial #99
299: astore        13
301: bipush        6
303: newarray       double
305: dup
306: iconst_0
307: dconst_0
308: dastore
309: dup
310: iconst_1
311: ldc2_w        #10
314: dastore
315: dup
316: iconst_2
317: dconst_1
318: dastore
319: dup
320: iconst_3
321: dconst_0
322: dastore
323: dup
324: iconst_4
325: dconst_1
326: dastore
327: dup
328: iconst_5
329: ldc2_w        #21
332: dastore
333: astore        14
335: aload         14
337: invokestatic  #23
340: new           #96
343: dup
344: aload         14
346: invokespecial #97
349: astore        15
351: new           #96
354: dup
355: aload         12
357: aload         15
359: invokespecial #99
362: astore        16
364: aload         7
366: dconst_1
367: dconst_1
368: aload         15
370: invokevirtual #100
373: astore        17
375: aload         7
377: invokevirtual #101
380: astore        18
382: new           #96
385: dup
386: aload_2
387: aload         18
389: invokespecial #102
392: astore        19
394: new           #8
397: dup
398: bipush        100
400: aload         18
402: invokespecial #9
405: astore        20
407: bipush        6
409: newarray       double
411: dup
412: iconst_0
413: dconst_0
414: dastore
415: dup
416: iconst_1
417: ldc2_w        #10
420: dastore
421: dup
422: iconst_2
423: dconst_1
424: dastore
425: dup
426: iconst_3
427: dconst_0
428: dastore
429: dup
430: iconst_4
431: dconst_1
432: dastore
433: dup
434: iconst_5
435: ldc2_w        #21
438: dastore
439: astore        21
441: aload         21
443: invokestatic  #23
446: aload         21
448: invokestatic  #24
451: astore        22
453: aload         21
455: invokestatic  #192
458: astore        23
460: aload         21
462: invokestatic  #193
465: astore        24
467: aload         18
469: aload         21
471: invokestatic  #72
474: istore        25
476: new           #96
479: dup
480: aload         21
482: bipush        52
484: bipush        10
486: invokespecial #249
489: astore        26
491: ldc           #250
493: invokestatic  #14
496: goto          501
499: astore        26
501: aload_1
502: invokestatic  #16
505: aload_1
506: invokestatic  #17
509: ldc           #26
511: invokestatic  #19
514: aload_3
515: invokestatic  #16
518: aload         4
520: invokestatic  #16
523: aload         4
525: invokestatic  #17
528: ldc           #26
530: invokestatic  #19
533: aload         6
535: invokestatic  #16
538: aload         6
540: invokestatic  #17
543: ldc           #26
545: invokestatic  #19
548: aload         9
550: invokestatic  #16
553: aload         9
555: invokestatic  #17
558: ldc           #26
560: invokestatic  #19
563: aload         11
565: invokestatic  #16
568: aload         11
570: invokestatic  #17
573: ldc           #26
575: invokestatic  #19
578: aload         14
580: invokestatic  #16
583: aload         14
585: invokestatic  #17
588: ldc           #26
590: invokestatic  #19
593: aload         17
595: invokestatic  #16
598: aload         18
600: invokestatic  #16
603: aload         18
605: invokestatic  #17
608: ldc           #105
610: invokestatic  #19
613: aload         21
615: invokestatic  #16
618: aload         21
620: invokestatic  #17
623: ldc           #26
625: invokestatic  #19
628: aload         22
630: invokestatic  #16
633: aload         23
635: invokestatic  #16
638: aload         24
640: invokestatic  #16
643: new           #39
646: dup
647: invokespecial #40
650: ldc           #41
652: invokevirtual #42
655: iload         25
657: invokevirtual #84
660: ldc           #44
662: invokevirtual #42
665: iconst_0
666: invokevirtual #84
669: ldc           #41
671: invokevirtual #42
674: invokevirtual #45
677: iload         25
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #47
690: return
Exception table:
from    to  target type
476   496   499   Class org/apache/commons/math3/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 1949
End line: 2018
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException60 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-1068072960), (java.lang.Number) 0, (int) '4');
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection61 = nonMonotonicSequenceException60.getDirection();
        org.apache.commons.math3.exception.util.Localizable localizable62 = null;
        double[] doubleArray66 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray67 = new double[][] { doubleArray66 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix69 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray67, true);
        int int70 = array2DRowRealMatrix69.getRowDimension();
        array2DRowRealMatrix69.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double75 = array2DRowRealMatrix69.getNorm();
        double[][] doubleArray76 = array2DRowRealMatrix69.getData();
        double[][] doubleArray77 = array2DRowRealMatrix69.getDataRef();
        double[][] doubleArray78 = org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout(doubleArray77);
        org.apache.commons.math3.exception.ZeroException zeroException79 = new org.apache.commons.math3.exception.ZeroException(localizable62, (java.lang.Object[]) doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray52, orderDirection61, doubleArray78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 3 != 6");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertTrue("'" + orderDirection61 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection61.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 100.0d + "'", double75 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #10
37: dastore
38: dup
39: iconst_2
40: dconst_1
41: dastore
42: dup
43: iconst_3
44: dconst_0
45: dastore
46: dup
47: iconst_4
48: dconst_1
49: dastore
50: dup
51: iconst_5
52: ldc2_w        #21
55: dastore
56: astore_1
57: aload_1
58: invokestatic  #23
61: new           #96
64: dup
65: aload_1
66: invokespecial #97
69: astore_2
70: bipush        6
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #10
83: dastore
84: dup
85: iconst_2
86: dconst_1
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #21
101: dastore
102: astore_3
103: aload_3
104: invokestatic  #23
107: new           #96
110: dup
111: aload_3
112: invokespecial #97
115: astore        4
117: new           #96
120: dup
121: aload_2
122: aload         4
124: invokespecial #99
127: astore        5
129: bipush        6
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #10
142: dastore
143: dup
144: iconst_2
145: dconst_1
146: dastore
147: dup
148: iconst_3
149: dconst_0
150: dastore
151: dup
152: iconst_4
153: dconst_1
154: dastore
155: dup
156: iconst_5
157: ldc2_w        #21
160: dastore
161: astore        6
163: aload         6
165: invokestatic  #23
168: new           #96
171: dup
172: aload         6
174: invokespecial #97
177: astore        7
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: dconst_0
186: dastore
187: dup
188: iconst_1
189: ldc2_w        #10
192: dastore
193: dup
194: iconst_2
195: dconst_1
196: dastore
197: dup
198: iconst_3
199: dconst_0
200: dastore
201: dup
202: iconst_4
203: dconst_1
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #21
210: dastore
211: astore        8
213: aload         8
215: invokestatic  #23
218: new           #96
221: dup
222: aload         8
224: invokespecial #97
227: astore        9
229: new           #96
232: dup
233: aload         7
235: aload         9
237: invokespecial #99
240: astore        10
242: bipush        6
244: newarray       double
246: dup
247: iconst_0
248: dconst_0
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #10
255: dastore
256: dup
257: iconst_2
258: dconst_1
259: dastore
260: dup
261: iconst_3
262: dconst_0
263: dastore
264: dup
265: iconst_4
266: dconst_1
267: dastore
268: dup
269: iconst_5
270: ldc2_w        #21
273: dastore
274: astore        11
276: aload         11
278: invokestatic  #23
281: new           #96
284: dup
285: aload         11
287: invokespecial #97
290: astore        12
292: new           #96
295: dup
296: aload         9
298: aload         12
300: invokespecial #99
303: astore        13
305: aload         4
307: dconst_1
308: dconst_1
309: aload         12
311: invokevirtual #100
314: astore        14
316: aload         4
318: invokevirtual #101
321: astore        15
323: aload         15
325: invokestatic  #135
328: dstore        16
330: new           #107
333: dup
334: aload         15
336: ldc2_w        #143
339: invokestatic  #76
342: invokespecial #110
345: astore        18
347: new           #8
350: dup
351: bipush        -127
353: aload         15
355: invokespecial #9
358: astore        19
360: new           #67
363: dup
364: ldc           #38
366: invokestatic  #220
369: iconst_0
370: invokestatic  #220
373: bipush        52
375: invokespecial #221
378: astore        20
380: aload         20
382: invokevirtual #79
385: astore        21
387: aconst_null
388: astore        22
390: iconst_3
391: newarray       double
393: dup
394: iconst_0
395: ldc2_w        #87
398: dastore
399: dup
400: iconst_1
401: ldc2_w        #59
404: dastore
405: dup
406: iconst_2
407: ldc2_w        #59
410: dastore
411: astore        23
413: iconst_1
414: anewarray     #89
417: dup
418: iconst_0
419: aload         23
421: aastore
422: astore        24
424: new           #90
427: dup
428: aload         24
430: iconst_1
431: invokespecial #91
434: astore        25
436: aload         25
438: invokevirtual #182
441: istore        26
443: aload         25
445: iconst_0
446: iconst_0
447: ldc2_w        #10
450: invokevirtual #183
453: aload         25
455: invokevirtual #184
458: dstore        27
460: aload         25
462: invokevirtual #92
465: astore        29
467: aload         25
469: invokevirtual #185
472: astore        30
474: aload         30
476: invokestatic  #253
479: astore        31
481: new           #254
484: dup
485: aload         22
487: aload         31
489: checkcast     #255
492: invokespecial #256
495: astore        32
497: aload         15
499: aload         21
501: aload         31
503: invokestatic  #257
506: ldc_w         #258
509: invokestatic  #14
512: goto          517
515: astore        33
517: aload_1
518: invokestatic  #16
521: aload_1
522: invokestatic  #17
525: ldc           #26
527: invokestatic  #19
530: aload_3
531: invokestatic  #16
534: aload_3
535: invokestatic  #17
538: ldc           #26
540: invokestatic  #19
543: aload         6
545: invokestatic  #16
548: aload         6
550: invokestatic  #17
553: ldc           #26
555: invokestatic  #19
558: aload         8
560: invokestatic  #16
563: aload         8
565: invokestatic  #17
568: ldc           #26
570: invokestatic  #19
573: aload         11
575: invokestatic  #16
578: aload         11
580: invokestatic  #17
583: ldc           #26
585: invokestatic  #19
588: aload         14
590: invokestatic  #16
593: aload         15
595: invokestatic  #16
598: aload         15
600: invokestatic  #17
603: ldc           #105
605: invokestatic  #19
608: new           #39
611: dup
612: invokespecial #40
615: ldc           #41
617: invokevirtual #42
620: dload         16
622: invokevirtual #121
625: ldc           #44
627: invokevirtual #42
630: ldc2_w        #145
633: invokevirtual #121
636: ldc           #41
638: invokevirtual #42
641: invokevirtual #45
644: dload         16
646: ldc2_w        #145
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #47
661: new           #39
664: dup
665: invokespecial #40
668: ldc           #41
670: invokevirtual #42
673: aload         21
675: invokevirtual #43
678: ldc           #44
680: invokevirtual #42
683: getstatic     #73
686: invokevirtual #43
689: ldc           #41
691: invokevirtual #42
694: invokevirtual #45
697: aload         21
699: getstatic     #73
702: invokevirtual #85
705: invokestatic  #47
708: aload         23
710: invokestatic  #16
713: aload         23
715: invokestatic  #17
718: ldc           #94
720: invokestatic  #19
723: aload         24
725: invokestatic  #16
728: new           #39
731: dup
732: invokespecial #40
735: ldc           #41
737: invokevirtual #42
740: iload         26
742: invokevirtual #81
745: ldc           #44
747: invokevirtual #42
750: iconst_1
751: invokevirtual #81
754: ldc           #41
756: invokevirtual #42
759: invokevirtual #45
762: iload         26
764: iconst_1
765: if_icmpne     772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #47
776: new           #39
779: dup
780: invokespecial #40
783: ldc           #41
785: invokevirtual #42
788: dload         27
790: invokevirtual #121
793: ldc           #44
795: invokevirtual #42
798: ldc2_w        #10
801: invokevirtual #121
804: ldc           #41
806: invokevirtual #42
809: invokevirtual #45
812: dload         27
814: ldc2_w        #10
817: dcmpl
818: ifne          825
821: iconst_1
822: goto          826
825: iconst_0
826: invokestatic  #47
829: aload         29
831: invokestatic  #16
834: aload         30
836: invokestatic  #16
839: aload         31
841: invokestatic  #16
844: return
Exception table:
from    to  target type
497   512   515   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2021
End line: 2048
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        // The following exception was thrown during execution in test generation
        try {
            incrementor23.incrementCount(36);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MaxCountExceededException; message: illegal state: maximal count (0) exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         9
137: bipush        36
139: invokevirtual #260
142: ldc           #198
144: invokestatic  #14
147: goto          152
150: astore        10
152: aload_1
153: invokestatic  #16
156: aload_1
157: invokestatic  #17
160: ldc           #26
162: invokestatic  #19
165: aload         5
167: invokestatic  #16
170: aload         6
172: invokestatic  #16
175: new           #39
178: dup
179: invokespecial #40
182: ldc           #41
184: invokevirtual #42
187: iload         7
189: invokevirtual #81
192: ldc           #44
194: invokevirtual #42
197: iconst_0
198: invokevirtual #81
201: ldc           #41
203: invokevirtual #42
206: invokevirtual #45
209: iload         7
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #47
222: new           #39
225: dup
226: invokespecial #40
229: ldc           #41
231: invokevirtual #42
234: iload         8
236: invokevirtual #81
239: ldc           #44
241: invokevirtual #42
244: iconst_0
245: invokevirtual #81
248: ldc           #41
250: invokevirtual #42
253: invokevirtual #45
256: iload         8
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #47
269: aload         9
271: invokestatic  #16
274: return
Exception table:
from    to  target type
135   147   150   Class org/apache/commons/math3/exception/MaxCountExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2051
End line: 2130
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        double[] doubleArray71 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix73 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix74 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealVector realVector75 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray71);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray71);
        double[] doubleArray78 = new double[] { '4' };
        double[] doubleArray79 = new double[] {};
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray78, doubleArray79);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection84 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException86 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection84, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection87 = nonMonotonicSequenceException86.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray78, orderDirection87, true);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair92 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray78, (double) (byte) -1, false);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = org.apache.commons.math3.util.MathArrays.distance(doubleArray71, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix73);
        org.junit.Assert.assertNotNull(realMatrix74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + orderDirection84 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection84.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection87 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection87.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: bipush        6
410: newarray       double
412: dup
413: iconst_0
414: dconst_0
415: dastore
416: dup
417: iconst_1
418: ldc2_w        #10
421: dastore
422: dup
423: iconst_2
424: dconst_1
425: dastore
426: dup
427: iconst_3
428: dconst_0
429: dastore
430: dup
431: iconst_4
432: dconst_1
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #21
439: dastore
440: astore        21
442: aload         21
444: invokestatic  #23
447: aload         21
449: invokestatic  #24
452: astore        22
454: aload         21
456: invokestatic  #192
459: astore        23
461: aload         21
463: invokestatic  #193
466: astore        24
468: aload         18
470: aload         21
472: invokestatic  #72
475: istore        25
477: iconst_1
478: newarray       double
480: dup
481: iconst_0
482: ldc2_w        #70
485: dastore
486: astore        26
488: iconst_0
489: newarray       double
491: astore        27
493: aload         26
495: aload         27
497: invokestatic  #72
500: istore        28
502: getstatic     #73
505: astore        29
507: new           #67
510: dup
511: ldc2_w        #74
514: invokestatic  #76
517: iconst_1
518: invokestatic  #77
521: bipush        100
523: aload         29
525: iconst_1
526: invokespecial #78
529: astore        30
531: aload         30
533: invokevirtual #79
536: astore        31
538: aload         26
540: aload         31
542: iconst_1
543: invokestatic  #80
546: new           #58
549: dup
550: aload         26
552: ldc2_w        #59
555: iconst_0
556: invokespecial #262
559: astore        32
561: aload         21
563: aload         26
565: invokestatic  #211
568: dstore        33
570: ldc_w         #263
573: invokestatic  #14
576: goto          581
579: astore        33
581: aload_1
582: invokestatic  #16
585: aload_1
586: invokestatic  #17
589: ldc           #26
591: invokestatic  #19
594: aload_3
595: invokestatic  #16
598: aload         4
600: invokestatic  #16
603: aload         4
605: invokestatic  #17
608: ldc           #26
610: invokestatic  #19
613: aload         6
615: invokestatic  #16
618: aload         6
620: invokestatic  #17
623: ldc           #26
625: invokestatic  #19
628: aload         9
630: invokestatic  #16
633: aload         9
635: invokestatic  #17
638: ldc           #26
640: invokestatic  #19
643: aload         11
645: invokestatic  #16
648: aload         11
650: invokestatic  #17
653: ldc           #26
655: invokestatic  #19
658: aload         14
660: invokestatic  #16
663: aload         14
665: invokestatic  #17
668: ldc           #26
670: invokestatic  #19
673: aload         17
675: invokestatic  #16
678: aload         18
680: invokestatic  #16
683: aload         18
685: invokestatic  #17
688: ldc           #105
690: invokestatic  #19
693: aload         21
695: invokestatic  #16
698: aload         21
700: invokestatic  #17
703: ldc           #26
705: invokestatic  #19
708: aload         22
710: invokestatic  #16
713: aload         23
715: invokestatic  #16
718: aload         24
720: invokestatic  #16
723: new           #39
726: dup
727: invokespecial #40
730: ldc           #41
732: invokevirtual #42
735: iload         25
737: invokevirtual #84
740: ldc           #44
742: invokevirtual #42
745: iconst_0
746: invokevirtual #84
749: ldc           #41
751: invokevirtual #42
754: invokevirtual #45
757: iload         25
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #47
770: aload         26
772: invokestatic  #16
775: aload         26
777: invokestatic  #17
780: ldc           #82
782: invokestatic  #19
785: aload         27
787: invokestatic  #16
790: aload         27
792: invokestatic  #17
795: ldc           #83
797: invokestatic  #19
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         28
814: invokevirtual #84
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #84
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         28
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #47
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: aload         29
861: invokevirtual #43
864: ldc           #44
866: invokevirtual #42
869: getstatic     #73
872: invokevirtual #43
875: ldc           #41
877: invokevirtual #42
880: invokevirtual #45
883: aload         29
885: getstatic     #73
888: invokevirtual #85
891: invokestatic  #47
894: new           #39
897: dup
898: invokespecial #40
901: ldc           #41
903: invokevirtual #42
906: aload         31
908: invokevirtual #43
911: ldc           #44
913: invokevirtual #42
916: getstatic     #73
919: invokevirtual #43
922: ldc           #41
924: invokevirtual #42
927: invokevirtual #45
930: aload         31
932: getstatic     #73
935: invokevirtual #85
938: invokestatic  #47
941: return
Exception table:
from    to  target type
561   576   579   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2133
End line: 2159
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        org.apache.commons.math3.linear.RealVector realVector4 = blockRealMatrix2.getColumnVector(0);
        double[] doubleArray6 = blockRealMatrix2.getColumn((int) (byte) 10);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister23 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray15, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister23, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        double[] doubleArray27 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix2.setRow(97, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (97)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #265
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #267
42: astore_2
43: aload_1
44: bipush        10
46: invokevirtual #268
49: astore_3
50: bipush        6
52: newarray       double
54: dup
55: iconst_0
56: dconst_0
57: dastore
58: dup
59: iconst_1
60: ldc2_w        #10
63: dastore
64: dup
65: iconst_2
66: dconst_1
67: dastore
68: dup
69: iconst_3
70: dconst_0
71: dastore
72: dup
73: iconst_4
74: dconst_1
75: dastore
76: dup
77: iconst_5
78: ldc2_w        #21
81: dastore
82: astore        4
84: aload         4
86: invokestatic  #23
89: new           #32
92: dup
93: iconst_1
94: invokespecial #33
97: astore        5
99: new           #34
102: dup
103: invokespecial #35
106: astore        6
108: new           #8
111: dup
112: iconst_5
113: aload         4
115: bipush        100
117: dconst_0
118: iconst_0
119: iconst_0
120: bipush        100
122: aload         5
124: iconst_1
125: aload         6
127: invokespecial #36
130: astore        7
132: aload         4
134: invokestatic  #269
137: astore        8
139: aload_1
140: bipush        97
142: aload         4
144: invokevirtual #270
147: ldc_w         #271
150: invokestatic  #14
153: goto          158
156: astore        9
158: aload_2
159: invokestatic  #16
162: aload_3
163: invokestatic  #16
166: aload_3
167: invokestatic  #17
170: ldc_w         #272
173: invokestatic  #19
176: aload         4
178: invokestatic  #16
181: aload         4
183: invokestatic  #17
186: ldc           #26
188: invokestatic  #19
191: aload         8
193: invokestatic  #16
196: aload         8
198: invokestatic  #17
201: ldc           #26
203: invokestatic  #19
206: return
Exception table:
from    to  target type
139   153   156   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2162
End line: 2182
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        int[] intArray20 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray20);
        float float22 = mersenneTwister21.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker24 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        int int27 = cMAESOptimizer26.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.48016477f + "'", float22 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: aload         8
155: invokevirtual #69
158: istore        9
160: aload_1
161: invokestatic  #16
164: aload_1
165: invokestatic  #17
168: ldc           #26
170: invokestatic  #19
173: aload_2
174: invokestatic  #16
177: aload_3
178: invokestatic  #16
181: aload_3
182: invokestatic  #117
185: ldc           #118
187: invokestatic  #19
190: new           #39
193: dup
194: invokespecial #40
197: ldc           #41
199: invokevirtual #42
202: fload         5
204: invokevirtual #119
207: ldc           #44
209: invokevirtual #42
212: ldc           #120
214: invokevirtual #119
217: ldc           #41
219: invokevirtual #42
222: invokevirtual #45
225: fload         5
227: ldc           #120
229: fcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #47
241: new           #39
244: dup
245: invokespecial #40
248: ldc           #41
250: invokevirtual #42
253: iload         9
255: invokevirtual #81
258: ldc           #44
260: invokevirtual #42
263: iconst_0
264: invokevirtual #81
267: ldc           #41
269: invokevirtual #42
272: invokevirtual #45
275: iload         9
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #47
288: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2185
End line: 2222
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray16);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair20 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray16, (double) (-1.0f));
        double[] doubleArray21 = pointValuePair20.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister28 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double29 = mersenneTwister28.nextDouble();
        mersenneTwister28.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray21, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister28, false, pointValuePairConvergenceChecker33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair35 = cMAESOptimizer2.optimize((-700319654), multivariateFunction7, goalType8, doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.4170220046815991d + "'", double29 == 0.4170220046815991d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aconst_null
56: astore        6
58: getstatic     #37
61: astore        7
63: bipush        6
65: newarray       double
67: dup
68: iconst_0
69: dconst_0
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #10
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: dup
82: iconst_3
83: dconst_0
84: dastore
85: dup
86: iconst_4
87: dconst_1
88: dastore
89: dup
90: iconst_5
91: ldc2_w        #21
94: dastore
95: astore        8
97: aload         8
99: invokestatic  #23
102: aload         8
104: invokestatic  #24
107: astore        9
109: new           #58
112: dup
113: aload         8
115: ldc2_w        #59
118: invokespecial #61
121: astore        10
123: aload         10
125: invokevirtual #62
128: astore        11
130: new           #32
133: dup
134: iconst_1
135: invokespecial #33
138: astore        12
140: aload         12
142: invokevirtual #275
145: dstore        13
147: aload         12
149: ldc2_w        #276
152: invokevirtual #278
155: aconst_null
156: astore        15
158: new           #8
161: dup
162: sipush        30000
165: aload         11
167: bipush        35
169: ldc2_w        #279
172: iconst_1
173: sipush        30000
176: bipush        100
178: aload         12
180: iconst_0
181: aload         15
183: invokespecial #36
186: astore        16
188: aload_2
189: ldc_w         #281
192: aload         6
194: aload         7
196: aload         11
198: invokevirtual #12
201: astore        17
203: ldc           #13
205: invokestatic  #14
208: goto          213
211: astore        17
213: new           #39
216: dup
217: invokespecial #40
220: ldc           #41
222: invokevirtual #42
225: iload_3
226: invokevirtual #81
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #81
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload_3
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #47
258: aload         4
260: invokestatic  #16
263: aload         5
265: invokestatic  #16
268: new           #39
271: dup
272: invokespecial #40
275: ldc           #41
277: invokevirtual #42
280: aload         7
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: getstatic     #37
293: invokevirtual #43
296: ldc           #41
298: invokevirtual #42
301: invokevirtual #45
304: aload         7
306: getstatic     #37
309: invokevirtual #46
312: invokestatic  #47
315: aload         8
317: invokestatic  #16
320: aload         8
322: invokestatic  #17
325: ldc           #26
327: invokestatic  #19
330: aload         9
332: invokestatic  #16
335: aload         11
337: invokestatic  #16
340: aload         11
342: invokestatic  #17
345: ldc           #26
347: invokestatic  #19
350: new           #39
353: dup
354: invokespecial #40
357: ldc           #41
359: invokevirtual #42
362: dload         13
364: invokevirtual #121
367: ldc           #44
369: invokevirtual #42
372: ldc2_w        #282
375: invokevirtual #121
378: ldc           #41
380: invokevirtual #42
383: invokevirtual #45
386: dload         13
388: ldc2_w        #282
391: dcmpl
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #47
403: return
Exception table:
from    to  target type
188   208   211   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2225
End line: 2249
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        incrementor20.resetCount();
        // The following exception was thrown during execution in test generation
        try {
            incrementor20.incrementCount(5);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MaxCountExceededException; message: illegal state: maximal count (0) exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #203
126: aload         6
128: iconst_5
129: invokevirtual #260
132: ldc           #198
134: invokestatic  #14
137: goto          142
140: astore        8
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: return
Exception table:
from    to  target type
126   137   140   Class org/apache/commons/math3/exception/MaxCountExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2252
End line: 2310
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction67 = null;
        org.apache.commons.math3.optimization.GoalType goalType68 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair70 = cMAESOptimizer64.optimize((int) (short) -1, multivariateFunction67, goalType68, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + goalType68 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType68.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aconst_null
416: astore        22
418: getstatic     #150
421: astore        23
423: aconst_null
424: astore        24
426: aload         20
428: iconst_m1
429: aload         22
431: aload         23
433: aload         24
435: invokevirtual #12
438: astore        25
440: ldc           #29
442: invokestatic  #14
445: goto          450
448: astore        25
450: aload_1
451: invokestatic  #16
454: aload_1
455: invokestatic  #17
458: ldc           #26
460: invokestatic  #19
463: aload_3
464: invokestatic  #16
467: aload         4
469: invokestatic  #16
472: aload         4
474: invokestatic  #17
477: ldc           #26
479: invokestatic  #19
482: aload         6
484: invokestatic  #16
487: aload         6
489: invokestatic  #17
492: ldc           #26
494: invokestatic  #19
497: aload         9
499: invokestatic  #16
502: aload         9
504: invokestatic  #17
507: ldc           #26
509: invokestatic  #19
512: aload         11
514: invokestatic  #16
517: aload         11
519: invokestatic  #17
522: ldc           #26
524: invokestatic  #19
527: aload         14
529: invokestatic  #16
532: aload         14
534: invokestatic  #17
537: ldc           #26
539: invokestatic  #19
542: aload         17
544: invokestatic  #16
547: aload         18
549: invokestatic  #16
552: aload         18
554: invokestatic  #17
557: ldc           #105
559: invokestatic  #19
562: aload         21
564: invokestatic  #16
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: aload         23
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: getstatic     #150
592: invokevirtual #43
595: ldc           #41
597: invokevirtual #42
600: invokevirtual #45
603: aload         23
605: getstatic     #150
608: invokevirtual #46
611: invokestatic  #47
614: return
Exception table:
from    to  target type
426   445   448   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2313
End line: 2374
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector8, arrayRealVector17);
        double[] doubleArray27 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector29, arrayRealVector38);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector38, arrayRealVector48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = arrayRealVector17.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector48);
        double[] doubleArray51 = arrayRealVector17.toArray();
        double[] doubleArray58 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray58);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair62 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray58, (double) (-1.0f));
        double double63 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray51, doubleArray58);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix65 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray58);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, 0.6557942026326724d);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister83 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker85 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray75, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister83, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker85);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector87 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray58, doubleArray75);
        double double88 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 20204.0d + "'", double63 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.5087060905671d + "'", double88 == 100.5087060905671d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #10
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: dup
343: iconst_3
344: dconst_0
345: dastore
346: dup
347: iconst_4
348: dconst_1
349: dastore
350: dup
351: iconst_5
352: ldc2_w        #21
355: dastore
356: astore        16
358: aload         16
360: invokestatic  #23
363: aload         16
365: invokestatic  #24
368: astore        17
370: new           #58
373: dup
374: aload         16
376: ldc2_w        #59
379: invokespecial #61
382: astore        18
384: aload         15
386: aload         16
388: invokestatic  #206
391: dstore        19
393: aload         16
395: invokestatic  #23
398: aload         16
400: invokestatic  #207
403: astore        21
405: aload         16
407: ldc2_w        #208
410: invokestatic  #210
413: astore        22
415: bipush        6
417: newarray       double
419: dup
420: iconst_0
421: dconst_0
422: dastore
423: dup
424: iconst_1
425: ldc2_w        #10
428: dastore
429: dup
430: iconst_2
431: dconst_1
432: dastore
433: dup
434: iconst_3
435: dconst_0
436: dastore
437: dup
438: iconst_4
439: dconst_1
440: dastore
441: dup
442: iconst_5
443: ldc2_w        #21
446: dastore
447: astore        23
449: aload         23
451: invokestatic  #23
454: new           #32
457: dup
458: iconst_1
459: invokespecial #33
462: astore        24
464: new           #34
467: dup
468: invokespecial #35
471: astore        25
473: new           #8
476: dup
477: iconst_5
478: aload         23
480: bipush        100
482: dconst_0
483: iconst_0
484: iconst_0
485: bipush        100
487: aload         24
489: iconst_1
490: aload         25
492: invokespecial #36
495: astore        26
497: new           #96
500: dup
501: aload         16
503: aload         23
505: invokespecial #139
508: astore        27
510: aload         23
512: invokestatic  #135
515: dstore        28
517: aload_1
518: invokestatic  #16
521: aload_1
522: invokestatic  #17
525: ldc           #26
527: invokestatic  #19
530: aload_3
531: invokestatic  #16
534: aload_3
535: invokestatic  #17
538: ldc           #26
540: invokestatic  #19
543: aload         6
545: invokestatic  #16
548: aload         6
550: invokestatic  #17
553: ldc           #26
555: invokestatic  #19
558: aload         8
560: invokestatic  #16
563: aload         8
565: invokestatic  #17
568: ldc           #26
570: invokestatic  #19
573: aload         11
575: invokestatic  #16
578: aload         11
580: invokestatic  #17
583: ldc           #26
585: invokestatic  #19
588: aload         14
590: invokestatic  #16
593: aload         15
595: invokestatic  #16
598: aload         15
600: invokestatic  #17
603: ldc           #105
605: invokestatic  #19
608: aload         16
610: invokestatic  #16
613: aload         16
615: invokestatic  #17
618: ldc           #26
620: invokestatic  #19
623: aload         17
625: invokestatic  #16
628: new           #39
631: dup
632: invokespecial #40
635: ldc           #41
637: invokevirtual #42
640: dload         19
642: invokevirtual #121
645: ldc           #44
647: invokevirtual #42
650: ldc2_w        #212
653: invokevirtual #121
656: ldc           #41
658: invokevirtual #42
661: invokevirtual #45
664: dload         19
666: ldc2_w        #212
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #47
681: aload         21
683: invokestatic  #16
686: aload         22
688: invokestatic  #16
691: aload         22
693: invokestatic  #17
696: ldc           #214
698: invokestatic  #19
701: aload         23
703: invokestatic  #16
706: aload         23
708: invokestatic  #17
711: ldc           #26
713: invokestatic  #19
716: new           #39
719: dup
720: invokespecial #40
723: ldc           #41
725: invokevirtual #42
728: dload         28
730: invokevirtual #121
733: ldc           #44
735: invokevirtual #42
738: ldc2_w        #136
741: invokevirtual #121
744: ldc           #41
746: invokevirtual #42
749: invokevirtual #45
752: dload         28
754: ldc2_w        #136
757: dcmpl
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #47
769: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2377
End line: 2388
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #69
47: istore        4
49: aload_2
50: invokevirtual #232
53: astore        5
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_3
68: invokevirtual #81
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #81
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #47
100: new           #39
103: dup
104: invokespecial #40
107: ldc           #41
109: invokevirtual #42
112: iload         4
114: invokevirtual #81
117: ldc           #44
119: invokevirtual #42
122: iconst_0
123: invokevirtual #81
126: ldc           #41
128: invokevirtual #42
131: invokevirtual #45
134: iload         4
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #47
147: aload         5
149: invokestatic  #16
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2391
End line: 2416
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = cMAESOptimizer25.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = cMAESOptimizer25.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker27);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #53
155: astore        11
157: aload         9
159: invokevirtual #53
162: astore        12
164: aload_1
165: invokestatic  #16
168: aload_1
169: invokestatic  #17
172: ldc           #26
174: invokestatic  #19
177: aload_2
178: invokestatic  #16
181: aload         4
183: invokestatic  #16
186: aload         4
188: invokestatic  #17
191: ldc           #26
193: invokestatic  #19
196: new           #39
199: dup
200: invokespecial #40
203: ldc           #41
205: invokevirtual #42
208: dload         6
210: invokevirtual #121
213: ldc           #44
215: invokevirtual #42
218: ldc2_w        #282
221: invokevirtual #121
224: ldc           #41
226: invokevirtual #42
229: invokevirtual #45
232: dload         6
234: ldc2_w        #282
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #47
249: aload         10
251: invokestatic  #155
254: aload         11
256: invokestatic  #155
259: aload         12
261: invokestatic  #155
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2419
End line: 2456
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.RealMatrix realMatrix19 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray17);
        int[] intArray29 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister30 = new org.apache.commons.math3.random.MersenneTwister(intArray29);
        float float31 = mersenneTwister30.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker33 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray17, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister30, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair35 = cMAESOptimizer2.optimize(5, multivariateFunction8, goalType9, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + goalType9 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType9.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 0.48016477f + "'", float31 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aconst_null
62: astore        7
64: getstatic     #150
67: astore        8
69: bipush        6
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #10
82: dastore
83: dup
84: iconst_2
85: dconst_1
86: dastore
87: dup
88: iconst_3
89: dconst_0
90: dastore
91: dup
92: iconst_4
93: dconst_1
94: dastore
95: dup
96: iconst_5
97: ldc2_w        #21
100: dastore
101: astore        9
103: aload         9
105: invokestatic  #23
108: aload         9
110: invokestatic  #24
113: astore        10
115: iconst_4
116: newarray       int
118: dup
119: iconst_0
120: bipush        100
122: iastore
123: dup
124: iconst_1
125: iconst_0
126: iastore
127: dup
128: iconst_2
129: bipush        100
131: iastore
132: dup
133: iconst_3
134: bipush        52
136: iastore
137: astore        11
139: new           #32
142: dup
143: aload         11
145: invokespecial #112
148: astore        12
150: aload         12
152: invokevirtual #113
155: fstore        13
157: new           #34
160: dup
161: invokespecial #35
164: astore        14
166: new           #8
169: dup
170: bipush        32
172: aload         9
174: iconst_0
175: ldc2_w        #114
178: iconst_1
179: ldc           #38
181: bipush        100
183: aload         12
185: iconst_1
186: aload         14
188: invokespecial #36
191: astore        15
193: aload_2
194: iconst_5
195: aload         7
197: aload         8
199: aload         9
201: invokevirtual #12
204: astore        16
206: ldc           #13
208: invokestatic  #14
211: goto          216
214: astore        16
216: new           #39
219: dup
220: invokespecial #40
223: ldc           #41
225: invokevirtual #42
228: iload_3
229: invokevirtual #81
232: ldc           #44
234: invokevirtual #42
237: iconst_0
238: invokevirtual #81
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: iload_3
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #47
261: aload         4
263: invokestatic  #16
266: aload         5
268: invokestatic  #16
271: new           #39
274: dup
275: invokespecial #40
278: ldc           #41
280: invokevirtual #42
283: iload         6
285: invokevirtual #81
288: ldc           #44
290: invokevirtual #42
293: iconst_0
294: invokevirtual #81
297: ldc           #41
299: invokevirtual #42
302: invokevirtual #45
305: iload         6
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #47
318: new           #39
321: dup
322: invokespecial #40
325: ldc           #41
327: invokevirtual #42
330: aload         8
332: invokevirtual #43
335: ldc           #44
337: invokevirtual #42
340: getstatic     #150
343: invokevirtual #43
346: ldc           #41
348: invokevirtual #42
351: invokevirtual #45
354: aload         8
356: getstatic     #150
359: invokevirtual #46
362: invokestatic  #47
365: aload         9
367: invokestatic  #16
370: aload         9
372: invokestatic  #17
375: ldc           #26
377: invokestatic  #19
380: aload         10
382: invokestatic  #16
385: aload         11
387: invokestatic  #16
390: aload         11
392: invokestatic  #117
395: ldc           #118
397: invokestatic  #19
400: new           #39
403: dup
404: invokespecial #40
407: ldc           #41
409: invokevirtual #42
412: fload         13
414: invokevirtual #119
417: ldc           #44
419: invokevirtual #42
422: ldc           #120
424: invokevirtual #119
427: ldc           #41
429: invokevirtual #42
432: invokevirtual #45
435: fload         13
437: ldc           #120
439: fcmpl
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #47
451: return
Exception table:
from    to  target type
193   211   214   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2459
End line: 2468
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #232
47: astore        4
49: new           #39
52: dup
53: invokespecial #40
56: ldc           #41
58: invokevirtual #42
61: iload_3
62: invokevirtual #81
65: ldc           #44
67: invokevirtual #42
70: iconst_0
71: invokevirtual #81
74: ldc           #41
76: invokevirtual #42
79: invokevirtual #45
82: iload_3
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #47
94: aload         4
96: invokestatic  #16
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 2471
End line: 2489
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType22 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(goalType22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #149
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: aload         5
143: invokestatic  #16
146: aload         6
148: invokestatic  #16
151: new           #39
154: dup
155: invokespecial #40
158: ldc           #41
160: invokevirtual #42
163: iload         7
165: invokevirtual #81
168: ldc           #44
170: invokevirtual #42
173: iconst_0
174: invokevirtual #81
177: ldc           #41
179: invokevirtual #42
182: invokevirtual #45
185: iload         7
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #47
198: aload         8
200: invokestatic  #155
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 2492
End line: 2505
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        mersenneTwister15.setSeed(0);
        boolean boolean21 = mersenneTwister15.nextBoolean();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_2
101: iconst_0
102: invokevirtual #169
105: aload_2
106: invokevirtual #293
109: istore        5
111: aload_1
112: invokestatic  #16
115: aload_1
116: invokestatic  #17
119: ldc           #26
121: invokestatic  #19
124: new           #39
127: dup
128: invokespecial #40
131: ldc           #41
133: invokevirtual #42
136: iload         5
138: invokevirtual #84
141: ldc           #44
143: invokevirtual #42
146: iconst_1
147: invokevirtual #84
150: ldc           #41
152: invokevirtual #42
155: invokevirtual #45
158: iload         5
160: iconst_1
161: if_icmpne     168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #47
172: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 2508
End line: 2522
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        double double19 = simpleValueChecker17.getAbsoluteThreshold();
        double double20 = simpleValueChecker17.getAbsoluteThreshold();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2.2250738585072014E-306d + "'", double19 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.2250738585072014E-306d + "'", double20 == 2.2250738585072014E-306d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_3
101: invokevirtual #116
104: dstore        5
106: aload_3
107: invokevirtual #116
110: dstore        7
112: aload_1
113: invokestatic  #16
116: aload_1
117: invokestatic  #17
120: ldc           #26
122: invokestatic  #19
125: new           #39
128: dup
129: invokespecial #40
132: ldc           #41
134: invokevirtual #42
137: dload         5
139: invokevirtual #121
142: ldc           #44
144: invokevirtual #42
147: ldc2_w        #122
150: invokevirtual #121
153: ldc           #41
155: invokevirtual #42
158: invokevirtual #45
161: dload         5
163: ldc2_w        #122
166: dcmpl
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #47
178: new           #39
181: dup
182: invokespecial #40
185: ldc           #41
187: invokevirtual #42
190: dload         7
192: invokevirtual #121
195: ldc           #44
197: invokevirtual #42
200: ldc2_w        #122
203: invokevirtual #121
206: ldc           #41
208: invokevirtual #42
211: invokevirtual #45
214: dload         7
216: ldc2_w        #122
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #47
231: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 2525
End line: 2596
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        int[] intArray20 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray20);
        float float22 = mersenneTwister21.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker24 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray33 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray34 = new double[][] { doubleArray33 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix36 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray34, true);
        int int37 = array2DRowRealMatrix36.getRowDimension();
        array2DRowRealMatrix36.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double42 = array2DRowRealMatrix36.getNorm();
        double[][] doubleArray43 = array2DRowRealMatrix36.getData();
        double[][] doubleArray44 = array2DRowRealMatrix36.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix45 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray44);
        double[] doubleArray47 = new double[] { '4' };
        double[] doubleArray48 = new double[] {};
        boolean boolean49 = org.apache.commons.math3.util.MathArrays.equals(doubleArray47, doubleArray48);
        double[] doubleArray50 = blockRealMatrix45.preMultiply(doubleArray47);
        double[] doubleArray53 = new double[] { '4' };
        double[] doubleArray54 = new double[] {};
        boolean boolean55 = org.apache.commons.math3.util.MathArrays.equals(doubleArray53, doubleArray54);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException61 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection59, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection62 = nonMonotonicSequenceException61.getDirection();
        boolean boolean64 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray53, orderDirection62, true);
        blockRealMatrix45.setColumn(0, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair66 = cMAESOptimizer26.optimize((int) (byte) 10, multivariateFunction28, goalType29, doubleArray53);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.48016477f + "'", float22 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 100.0d + "'", double42 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[5200.0, -52.0, -52.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection62 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection62.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: aconst_null
154: astore        9
156: getstatic     #37
159: astore        10
161: iconst_3
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #87
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #59
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #59
181: dastore
182: astore        11
184: iconst_1
185: anewarray     #89
188: dup
189: iconst_0
190: aload         11
192: aastore
193: astore        12
195: new           #90
198: dup
199: aload         12
201: iconst_1
202: invokespecial #91
205: astore        13
207: aload         13
209: invokevirtual #182
212: istore        14
214: aload         13
216: iconst_0
217: iconst_0
218: ldc2_w        #10
221: invokevirtual #183
224: aload         13
226: invokevirtual #184
229: dstore        15
231: aload         13
233: invokevirtual #92
236: astore        17
238: aload         13
240: invokevirtual #185
243: astore        18
245: new           #186
248: dup
249: aload         18
251: invokespecial #187
254: astore        19
256: iconst_1
257: newarray       double
259: dup
260: iconst_0
261: ldc2_w        #70
264: dastore
265: astore        20
267: iconst_0
268: newarray       double
270: astore        21
272: aload         20
274: aload         21
276: invokestatic  #72
279: istore        22
281: aload         19
283: aload         20
285: invokevirtual #188
288: astore        23
290: iconst_1
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #70
298: dastore
299: astore        24
301: iconst_0
302: newarray       double
304: astore        25
306: aload         24
308: aload         25
310: invokestatic  #72
313: istore        26
315: getstatic     #73
318: astore        27
320: new           #67
323: dup
324: ldc2_w        #74
327: invokestatic  #76
330: iconst_1
331: invokestatic  #77
334: bipush        100
336: aload         27
338: iconst_1
339: invokespecial #78
342: astore        28
344: aload         28
346: invokevirtual #79
349: astore        29
351: aload         24
353: aload         29
355: iconst_1
356: invokestatic  #157
359: istore        30
361: aload         19
363: iconst_0
364: aload         24
366: invokevirtual #296
369: aload         8
371: bipush        10
373: aload         9
375: aload         10
377: aload         24
379: invokevirtual #12
382: astore        31
384: ldc           #13
386: invokestatic  #14
389: goto          394
392: astore        31
394: aload_1
395: invokestatic  #16
398: aload_1
399: invokestatic  #17
402: ldc           #26
404: invokestatic  #19
407: aload_2
408: invokestatic  #16
411: aload_3
412: invokestatic  #16
415: aload_3
416: invokestatic  #117
419: ldc           #118
421: invokestatic  #19
424: new           #39
427: dup
428: invokespecial #40
431: ldc           #41
433: invokevirtual #42
436: fload         5
438: invokevirtual #119
441: ldc           #44
443: invokevirtual #42
446: ldc           #120
448: invokevirtual #119
451: ldc           #41
453: invokevirtual #42
456: invokevirtual #45
459: fload         5
461: ldc           #120
463: fcmpl
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #47
475: new           #39
478: dup
479: invokespecial #40
482: ldc           #41
484: invokevirtual #42
487: aload         10
489: invokevirtual #43
492: ldc           #44
494: invokevirtual #42
497: getstatic     #37
500: invokevirtual #43
503: ldc           #41
505: invokevirtual #42
508: invokevirtual #45
511: aload         10
513: getstatic     #37
516: invokevirtual #46
519: invokestatic  #47
522: aload         11
524: invokestatic  #16
527: aload         11
529: invokestatic  #17
532: ldc           #94
534: invokestatic  #19
537: aload         12
539: invokestatic  #16
542: new           #39
545: dup
546: invokespecial #40
549: ldc           #41
551: invokevirtual #42
554: iload         14
556: invokevirtual #81
559: ldc           #44
561: invokevirtual #42
564: iconst_1
565: invokevirtual #81
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload         14
578: iconst_1
579: if_icmpne     586
582: iconst_1
583: goto          587
586: iconst_0
587: invokestatic  #47
590: new           #39
593: dup
594: invokespecial #40
597: ldc           #41
599: invokevirtual #42
602: dload         15
604: invokevirtual #121
607: ldc           #44
609: invokevirtual #42
612: ldc2_w        #10
615: invokevirtual #121
618: ldc           #41
620: invokevirtual #42
623: invokevirtual #45
626: dload         15
628: ldc2_w        #10
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #47
643: aload         17
645: invokestatic  #16
648: aload         18
650: invokestatic  #16
653: aload         20
655: invokestatic  #16
658: aload         20
660: invokestatic  #17
663: ldc           #82
665: invokestatic  #19
668: aload         21
670: invokestatic  #16
673: aload         21
675: invokestatic  #17
678: ldc           #83
680: invokestatic  #19
683: new           #39
686: dup
687: invokespecial #40
690: ldc           #41
692: invokevirtual #42
695: iload         22
697: invokevirtual #84
700: ldc           #44
702: invokevirtual #42
705: iconst_0
706: invokevirtual #84
709: ldc           #41
711: invokevirtual #42
714: invokevirtual #45
717: iload         22
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #47
730: aload         23
732: invokestatic  #16
735: aload         23
737: invokestatic  #17
740: ldc           #189
742: invokestatic  #19
745: aload         24
747: invokestatic  #16
750: aload         24
752: invokestatic  #17
755: ldc           #82
757: invokestatic  #19
760: aload         25
762: invokestatic  #16
765: aload         25
767: invokestatic  #17
770: ldc           #83
772: invokestatic  #19
775: new           #39
778: dup
779: invokespecial #40
782: ldc           #41
784: invokevirtual #42
787: iload         26
789: invokevirtual #84
792: ldc           #44
794: invokevirtual #42
797: iconst_0
798: invokevirtual #84
801: ldc           #41
803: invokevirtual #42
806: invokevirtual #45
809: iload         26
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #47
822: new           #39
825: dup
826: invokespecial #40
829: ldc           #41
831: invokevirtual #42
834: aload         27
836: invokevirtual #43
839: ldc           #44
841: invokevirtual #42
844: getstatic     #73
847: invokevirtual #43
850: ldc           #41
852: invokevirtual #42
855: invokevirtual #45
858: aload         27
860: getstatic     #73
863: invokevirtual #85
866: invokestatic  #47
869: new           #39
872: dup
873: invokespecial #40
876: ldc           #41
878: invokevirtual #42
881: aload         29
883: invokevirtual #43
886: ldc           #44
888: invokevirtual #42
891: getstatic     #73
894: invokevirtual #43
897: ldc           #41
899: invokevirtual #42
902: invokevirtual #45
905: aload         29
907: getstatic     #73
910: invokevirtual #85
913: invokestatic  #47
916: new           #39
919: dup
920: invokespecial #40
923: ldc           #41
925: invokevirtual #42
928: iload         30
930: invokevirtual #84
933: ldc           #44
935: invokevirtual #42
938: iconst_1
939: invokevirtual #84
942: ldc           #41
944: invokevirtual #42
947: invokevirtual #45
950: iload         30
952: iconst_1
953: if_icmpne     960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #47
964: return
Exception table:
from    to  target type
369   389   392   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 2599
End line: 2678
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        double[] doubleArray71 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix73 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix74 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealVector realVector75 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray71);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray71);
        double[] doubleArray78 = new double[] { '4' };
        double[] doubleArray79 = new double[] {};
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.equals(doubleArray78, doubleArray79);
        double[] doubleArray87 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray87);
        org.apache.commons.math3.linear.RealMatrix realMatrix89 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray87);
        org.apache.commons.math3.linear.RealMatrix realMatrix90 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray87);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector91 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray79, doubleArray87);
        org.apache.commons.math3.linear.RealMatrix realMatrix92 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray87);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair95 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray87, 0.0d, false);
        double double96 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray71, doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix73);
        org.junit.Assert.assertNotNull(realMatrix74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix89);
        org.junit.Assert.assertNotNull(realMatrix90);
        org.junit.Assert.assertNotNull(realMatrix92);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10102.0d + "'", double96 == 10102.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: bipush        6
410: newarray       double
412: dup
413: iconst_0
414: dconst_0
415: dastore
416: dup
417: iconst_1
418: ldc2_w        #10
421: dastore
422: dup
423: iconst_2
424: dconst_1
425: dastore
426: dup
427: iconst_3
428: dconst_0
429: dastore
430: dup
431: iconst_4
432: dconst_1
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #21
439: dastore
440: astore        21
442: aload         21
444: invokestatic  #23
447: aload         21
449: invokestatic  #24
452: astore        22
454: aload         21
456: invokestatic  #192
459: astore        23
461: aload         21
463: invokestatic  #193
466: astore        24
468: aload         18
470: aload         21
472: invokestatic  #72
475: istore        25
477: iconst_1
478: newarray       double
480: dup
481: iconst_0
482: ldc2_w        #70
485: dastore
486: astore        26
488: iconst_0
489: newarray       double
491: astore        27
493: aload         26
495: aload         27
497: invokestatic  #72
500: istore        28
502: bipush        6
504: newarray       double
506: dup
507: iconst_0
508: dconst_0
509: dastore
510: dup
511: iconst_1
512: ldc2_w        #10
515: dastore
516: dup
517: iconst_2
518: dconst_1
519: dastore
520: dup
521: iconst_3
522: dconst_0
523: dastore
524: dup
525: iconst_4
526: dconst_1
527: dastore
528: dup
529: iconst_5
530: ldc2_w        #21
533: dastore
534: astore        29
536: aload         29
538: invokestatic  #23
541: aload         29
543: invokestatic  #24
546: astore        30
548: aload         29
550: invokestatic  #24
553: astore        31
555: new           #96
558: dup
559: aload         27
561: aload         29
563: invokespecial #139
566: astore        32
568: aload         29
570: invokestatic  #24
573: astore        33
575: new           #58
578: dup
579: aload         29
581: dconst_0
582: iconst_0
583: invokespecial #262
586: astore        34
588: aload         21
590: aload         29
592: invokestatic  #206
595: dstore        35
597: aload_1
598: invokestatic  #16
601: aload_1
602: invokestatic  #17
605: ldc           #26
607: invokestatic  #19
610: aload_3
611: invokestatic  #16
614: aload         4
616: invokestatic  #16
619: aload         4
621: invokestatic  #17
624: ldc           #26
626: invokestatic  #19
629: aload         6
631: invokestatic  #16
634: aload         6
636: invokestatic  #17
639: ldc           #26
641: invokestatic  #19
644: aload         9
646: invokestatic  #16
649: aload         9
651: invokestatic  #17
654: ldc           #26
656: invokestatic  #19
659: aload         11
661: invokestatic  #16
664: aload         11
666: invokestatic  #17
669: ldc           #26
671: invokestatic  #19
674: aload         14
676: invokestatic  #16
679: aload         14
681: invokestatic  #17
684: ldc           #26
686: invokestatic  #19
689: aload         17
691: invokestatic  #16
694: aload         18
696: invokestatic  #16
699: aload         18
701: invokestatic  #17
704: ldc           #105
706: invokestatic  #19
709: aload         21
711: invokestatic  #16
714: aload         21
716: invokestatic  #17
719: ldc           #26
721: invokestatic  #19
724: aload         22
726: invokestatic  #16
729: aload         23
731: invokestatic  #16
734: aload         24
736: invokestatic  #16
739: new           #39
742: dup
743: invokespecial #40
746: ldc           #41
748: invokevirtual #42
751: iload         25
753: invokevirtual #84
756: ldc           #44
758: invokevirtual #42
761: iconst_0
762: invokevirtual #84
765: ldc           #41
767: invokevirtual #42
770: invokevirtual #45
773: iload         25
775: ifne          782
778: iconst_1
779: goto          783
782: iconst_0
783: invokestatic  #47
786: aload         26
788: invokestatic  #16
791: aload         26
793: invokestatic  #17
796: ldc           #82
798: invokestatic  #19
801: aload         27
803: invokestatic  #16
806: aload         27
808: invokestatic  #17
811: ldc           #83
813: invokestatic  #19
816: new           #39
819: dup
820: invokespecial #40
823: ldc           #41
825: invokevirtual #42
828: iload         28
830: invokevirtual #84
833: ldc           #44
835: invokevirtual #42
838: iconst_0
839: invokevirtual #84
842: ldc           #41
844: invokevirtual #42
847: invokevirtual #45
850: iload         28
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #47
863: aload         29
865: invokestatic  #16
868: aload         29
870: invokestatic  #17
873: ldc           #26
875: invokestatic  #19
878: aload         30
880: invokestatic  #16
883: aload         31
885: invokestatic  #16
888: aload         33
890: invokestatic  #16
893: new           #39
896: dup
897: invokespecial #40
900: ldc           #41
902: invokevirtual #42
905: dload         35
907: invokevirtual #121
910: ldc           #44
912: invokevirtual #42
915: ldc2_w        #298
918: invokevirtual #121
921: ldc           #41
923: invokevirtual #42
926: invokevirtual #45
929: dload         35
931: ldc2_w        #298
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #47
946: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 2681
End line: 2762
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        org.apache.commons.math3.linear.RealVector realVector4 = blockRealMatrix2.getColumnVector(0);
        double double5 = blockRealMatrix2.getFrobeniusNorm();
        int int6 = blockRealMatrix2.getRowDimension();
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = blockRealMatrix2.scalarMultiply(5.074960652843101E20d);
        int[] intArray9 = null;
        int[] intArray14 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(intArray14);
        int[] intArray16 = org.apache.commons.math3.util.MathArrays.copyOf(intArray14);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray16, intArray21);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister24 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair36 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (double) (-1.0f));
        double[] doubleArray37 = pointValuePair36.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextDouble();
        mersenneTwister44.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray37, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister52 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double53 = mersenneTwister52.nextGaussian();
        int int55 = mersenneTwister52.nextInt((int) (short) 100);
        mersenneTwister52.setSeed(0);
        mersenneTwister52.setSeed(100L);
        int[] intArray62 = new int[] { 6, 31 };
        mersenneTwister52.setSeed(intArray62);
        int int64 = mersenneTwister52.nextInt();
        int[] intArray66 = new int[] { (-127) };
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister68 = new org.apache.commons.math3.random.MersenneTwister(intArray66);
        mersenneTwister52.setSeed(intArray66);
        int[] intArray71 = org.apache.commons.math3.util.MathArrays.copyOf(intArray66, 100);
        mersenneTwister44.setSeed(intArray71);
        double double73 = org.apache.commons.math3.util.MathArrays.distance(intArray21, intArray71);
        org.apache.commons.math3.exception.util.Localizable localizable74 = null;
        double[][] doubleArray77 = org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout((int) (byte) 100, 0);
        org.apache.commons.math3.exception.MathInternalError mathInternalError78 = new org.apache.commons.math3.exception.MathInternalError(localizable74, (java.lang.Object[]) doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            realMatrix8.copySubMatrix(intArray9, intArray21, doubleArray77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realVector4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.4170220046815991d + "'", double45 == 0.4170220046815991d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.7023867716137234d) + "'", double53 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1213365404) + "'", int64 == (-1213365404));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-127]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-127]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 253.44230112591703d + "'", double73 == 253.44230112591703d);
        org.junit.Assert.assertNotNull(doubleArray77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: invokevirtual #267
42: astore_2
43: aload_1
44: invokevirtual #301
47: dstore_3
48: aload_1
49: invokevirtual #302
52: istore        5
54: aload_1
55: ldc2_w        #303
58: invokevirtual #305
61: astore        6
63: aconst_null
64: astore        7
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore        8
90: new           #32
93: dup
94: aload         8
96: invokespecial #112
99: astore        9
101: aload         8
103: invokestatic  #226
106: astore        10
108: iconst_4
109: newarray       int
111: dup
112: iconst_0
113: bipush        100
115: iastore
116: dup
117: iconst_1
118: iconst_0
119: iastore
120: dup
121: iconst_2
122: bipush        100
124: iastore
125: dup
126: iconst_3
127: bipush        52
129: iastore
130: astore        11
132: new           #32
135: dup
136: aload         11
138: invokespecial #112
141: astore        12
143: aload         10
145: aload         11
147: invokestatic  #306
150: istore        13
152: new           #32
155: dup
156: aload         11
158: invokespecial #112
161: astore        14
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #10
176: dastore
177: dup
178: iconst_2
179: dconst_1
180: dastore
181: dup
182: iconst_3
183: dconst_0
184: dastore
185: dup
186: iconst_4
187: dconst_1
188: dastore
189: dup
190: iconst_5
191: ldc2_w        #21
194: dastore
195: astore        15
197: aload         15
199: invokestatic  #23
202: aload         15
204: invokestatic  #24
207: astore        16
209: new           #58
212: dup
213: aload         15
215: ldc2_w        #59
218: invokespecial #61
221: astore        17
223: aload         17
225: invokevirtual #62
228: astore        18
230: new           #32
233: dup
234: iconst_1
235: invokespecial #33
238: astore        19
240: aload         19
242: invokevirtual #275
245: dstore        20
247: aload         19
249: ldc2_w        #276
252: invokevirtual #278
255: aconst_null
256: astore        22
258: new           #8
261: dup
262: sipush        30000
265: aload         18
267: bipush        35
269: ldc2_w        #279
272: iconst_1
273: sipush        30000
276: bipush        100
278: aload         19
280: iconst_0
281: aload         22
283: invokespecial #36
286: astore        23
288: new           #32
291: dup
292: iconst_1
293: invokespecial #33
296: astore        24
298: aload         24
300: invokevirtual #168
303: dstore        25
305: aload         24
307: bipush        100
309: invokevirtual #225
312: istore        27
314: aload         24
316: iconst_0
317: invokevirtual #169
320: aload         24
322: ldc2_w        #307
325: invokevirtual #278
328: iconst_2
329: newarray       int
331: dup
332: iconst_0
333: bipush        6
335: iastore
336: dup
337: iconst_1
338: bipush        31
340: iastore
341: astore        28
343: aload         24
345: aload         28
347: invokevirtual #228
350: aload         24
352: invokevirtual #309
355: istore        29
357: iconst_1
358: newarray       int
360: dup
361: iconst_0
362: bipush        -127
364: iastore
365: astore        30
367: aload         30
369: invokestatic  #226
372: astore        31
374: new           #32
377: dup
378: aload         30
380: invokespecial #112
383: astore        32
385: aload         24
387: aload         30
389: invokevirtual #228
392: aload         30
394: bipush        100
396: invokestatic  #310
399: astore        33
401: aload         19
403: aload         33
405: invokevirtual #228
408: aload         11
410: aload         33
412: invokestatic  #227
415: dstore        34
417: aconst_null
418: astore        36
420: bipush        100
422: iconst_0
423: invokestatic  #311
426: astore        37
428: new           #312
431: dup
432: aload         36
434: aload         37
436: checkcast     #255
439: invokespecial #313
442: astore        38
444: aload         6
446: aload         7
448: aload         11
450: aload         37
452: invokeinterface #314,  4
457: ldc           #13
459: invokestatic  #14
462: goto          467
465: astore        39
467: aload_2
468: invokestatic  #16
471: new           #39
474: dup
475: invokespecial #40
478: ldc           #41
480: invokevirtual #42
483: dload_3
484: invokevirtual #121
487: ldc           #44
489: invokevirtual #42
492: dconst_0
493: invokevirtual #121
496: ldc           #41
498: invokevirtual #42
501: invokevirtual #45
504: dload_3
505: dconst_0
506: dcmpl
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #47
518: new           #39
521: dup
522: invokespecial #40
525: ldc           #41
527: invokevirtual #42
530: iload         5
532: invokevirtual #81
535: ldc           #44
537: invokevirtual #42
540: iconst_5
541: invokevirtual #81
544: ldc           #41
546: invokevirtual #42
549: invokevirtual #45
552: iload         5
554: iconst_5
555: if_icmpne     562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #47
566: aload         6
568: invokestatic  #16
571: aload         8
573: invokestatic  #16
576: aload         8
578: invokestatic  #117
581: ldc           #118
583: invokestatic  #19
586: aload         10
588: invokestatic  #16
591: aload         10
593: invokestatic  #117
596: ldc           #118
598: invokestatic  #19
601: aload         11
603: invokestatic  #16
606: aload         11
608: invokestatic  #117
611: ldc           #118
613: invokestatic  #19
616: new           #39
619: dup
620: invokespecial #40
623: ldc           #41
625: invokevirtual #42
628: iload         13
630: invokevirtual #81
633: ldc           #44
635: invokevirtual #42
638: iconst_0
639: invokevirtual #81
642: ldc           #41
644: invokevirtual #42
647: invokevirtual #45
650: iload         13
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #47
663: aload         15
665: invokestatic  #16
668: aload         15
670: invokestatic  #17
673: ldc           #26
675: invokestatic  #19
678: aload         16
680: invokestatic  #16
683: aload         18
685: invokestatic  #16
688: aload         18
690: invokestatic  #17
693: ldc           #26
695: invokestatic  #19
698: new           #39
701: dup
702: invokespecial #40
705: ldc           #41
707: invokevirtual #42
710: dload         20
712: invokevirtual #121
715: ldc           #44
717: invokevirtual #42
720: ldc2_w        #282
723: invokevirtual #121
726: ldc           #41
728: invokevirtual #42
731: invokevirtual #45
734: dload         20
736: ldc2_w        #282
739: dcmpl
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #47
751: new           #39
754: dup
755: invokespecial #40
758: ldc           #41
760: invokevirtual #42
763: dload         25
765: invokevirtual #121
768: ldc           #44
770: invokevirtual #42
773: ldc2_w        #74
776: invokevirtual #121
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: dload         25
789: ldc2_w        #74
792: dcmpl
793: ifne          800
796: iconst_1
797: goto          801
800: iconst_0
801: invokestatic  #47
804: new           #39
807: dup
808: invokespecial #40
811: ldc           #41
813: invokevirtual #42
816: iload         27
818: invokevirtual #81
821: ldc           #44
823: invokevirtual #42
826: bipush        31
828: invokevirtual #81
831: ldc           #41
833: invokevirtual #42
836: invokevirtual #45
839: iload         27
841: bipush        31
843: if_icmpne     850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #47
854: aload         28
856: invokestatic  #16
859: aload         28
861: invokestatic  #117
864: ldc_w         #315
867: invokestatic  #19
870: new           #39
873: dup
874: invokespecial #40
877: ldc           #41
879: invokevirtual #42
882: iload         29
884: invokevirtual #81
887: ldc           #44
889: invokevirtual #42
892: ldc_w         #316
895: invokevirtual #81
898: ldc           #41
900: invokevirtual #42
903: invokevirtual #45
906: iload         29
908: ldc_w         #316
911: if_icmpne     918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #47
922: aload         30
924: invokestatic  #16
927: aload         30
929: invokestatic  #117
932: ldc           #229
934: invokestatic  #19
937: aload         31
939: invokestatic  #16
942: aload         31
944: invokestatic  #117
947: ldc           #229
949: invokestatic  #19
952: aload         33
954: invokestatic  #16
957: aload         33
959: invokestatic  #117
962: ldc_w         #317
965: invokestatic  #19
968: new           #39
971: dup
972: invokespecial #40
975: ldc           #41
977: invokevirtual #42
980: dload         34
982: invokevirtual #121
985: ldc           #44
987: invokevirtual #42
990: ldc2_w        #318
993: invokevirtual #121
996: ldc           #41
998: invokevirtual #42
1001: invokevirtual #45
1004: dload         34
1006: ldc2_w        #318
1009: dcmpl
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #47
1021: aload         37
1023: invokestatic  #16
1026: return
Exception table:
from    to  target type
444   462   465   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 2765
End line: 2814
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList66 = cMAESOptimizer64.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertNotNull(doubleList66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aload         20
417: invokevirtual #232
420: astore        22
422: aload_1
423: invokestatic  #16
426: aload_1
427: invokestatic  #17
430: ldc           #26
432: invokestatic  #19
435: aload_3
436: invokestatic  #16
439: aload         4
441: invokestatic  #16
444: aload         4
446: invokestatic  #17
449: ldc           #26
451: invokestatic  #19
454: aload         6
456: invokestatic  #16
459: aload         6
461: invokestatic  #17
464: ldc           #26
466: invokestatic  #19
469: aload         9
471: invokestatic  #16
474: aload         9
476: invokestatic  #17
479: ldc           #26
481: invokestatic  #19
484: aload         11
486: invokestatic  #16
489: aload         11
491: invokestatic  #17
494: ldc           #26
496: invokestatic  #19
499: aload         14
501: invokestatic  #16
504: aload         14
506: invokestatic  #17
509: ldc           #26
511: invokestatic  #19
514: aload         17
516: invokestatic  #16
519: aload         18
521: invokestatic  #16
524: aload         18
526: invokestatic  #17
529: ldc           #105
531: invokestatic  #19
534: aload         21
536: invokestatic  #16
539: aload         22
541: invokestatic  #16
544: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 2817
End line: 2906
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix61 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray59);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair63 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray59, (double) (-1.0f));
        double double64 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray52, doubleArray59);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix66 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray59);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray59, 0.6557942026326724d);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister75 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double76 = mersenneTwister75.nextGaussian();
        int int78 = mersenneTwister75.nextInt((int) (short) 100);
        int[] intArray80 = new int[] { (-127) };
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray83 = new int[] { (-127) };
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister85 = new org.apache.commons.math3.random.MersenneTwister(intArray83);
        double double86 = org.apache.commons.math3.util.MathArrays.distance(intArray80, intArray83);
        mersenneTwister75.setSeed(intArray83);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker89 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        double double90 = simpleValueChecker89.getRelativeThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray68, (-127), 0.0d, true, (int) (byte) 100, (int) (short) 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister75, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker89);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction93 = null;
        org.apache.commons.math3.optimization.GoalType goalType94 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray96 = new double[] { (-0.17095492566768808d) };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair97 = cMAESOptimizer91.optimize((int) (short) 0, multivariateFunction93, goalType94, doubleArray96);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 20204.0d + "'", double64 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix66);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.7023867716137234d) + "'", double76 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 31 + "'", int78 == 31);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-127]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-127]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-127]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-127]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.1102230246251565E-14d + "'", double90 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + goalType94 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType94.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-0.17095492566768808]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #321
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #10
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: dup
343: iconst_3
344: dconst_0
345: dastore
346: dup
347: iconst_4
348: dconst_1
349: dastore
350: dup
351: iconst_5
352: ldc2_w        #21
355: dastore
356: astore        16
358: aload         16
360: invokestatic  #23
363: aload         16
365: invokestatic  #24
368: astore        17
370: new           #58
373: dup
374: aload         16
376: ldc2_w        #59
379: invokespecial #61
382: astore        18
384: aload         15
386: aload         16
388: invokestatic  #206
391: dstore        19
393: aload         16
395: invokestatic  #23
398: aload         16
400: invokestatic  #207
403: astore        21
405: aload         16
407: ldc2_w        #208
410: invokestatic  #210
413: astore        22
415: new           #32
418: dup
419: iconst_1
420: invokespecial #33
423: astore        23
425: aload         23
427: invokevirtual #168
430: dstore        24
432: aload         23
434: bipush        100
436: invokevirtual #225
439: istore        26
441: iconst_1
442: newarray       int
444: dup
445: iconst_0
446: bipush        -127
448: iastore
449: astore        27
451: aload         27
453: invokestatic  #226
456: astore        28
458: iconst_1
459: newarray       int
461: dup
462: iconst_0
463: bipush        -127
465: iastore
466: astore        29
468: aload         29
470: invokestatic  #226
473: astore        30
475: new           #32
478: dup
479: aload         29
481: invokespecial #112
484: astore        31
486: aload         27
488: aload         29
490: invokestatic  #227
493: dstore        32
495: aload         23
497: aload         29
499: invokevirtual #228
502: new           #34
505: dup
506: invokespecial #35
509: astore        34
511: aload         34
513: invokevirtual #162
516: dstore        35
518: new           #8
521: dup
522: sipush        30000
525: aload         22
527: bipush        -127
529: dconst_0
530: iconst_1
531: bipush        100
533: iconst_0
534: aload         23
536: iconst_0
537: aload         34
539: invokespecial #36
542: astore        37
544: aconst_null
545: astore        38
547: getstatic     #37
550: astore        39
552: iconst_1
553: newarray       double
555: dup
556: iconst_0
557: ldc2_w        #322
560: dastore
561: astore        40
563: aload         37
565: iconst_0
566: aload         38
568: aload         39
570: aload         40
572: invokevirtual #12
575: astore        41
577: ldc           #13
579: invokestatic  #14
582: goto          587
585: astore        41
587: aload_1
588: invokestatic  #16
591: aload_1
592: invokestatic  #17
595: ldc           #26
597: invokestatic  #19
600: aload_3
601: invokestatic  #16
604: aload_3
605: invokestatic  #17
608: ldc           #26
610: invokestatic  #19
613: aload         6
615: invokestatic  #16
618: aload         6
620: invokestatic  #17
623: ldc           #26
625: invokestatic  #19
628: aload         8
630: invokestatic  #16
633: aload         8
635: invokestatic  #17
638: ldc           #26
640: invokestatic  #19
643: aload         11
645: invokestatic  #16
648: aload         11
650: invokestatic  #17
653: ldc           #26
655: invokestatic  #19
658: aload         14
660: invokestatic  #16
663: aload         15
665: invokestatic  #16
668: aload         15
670: invokestatic  #17
673: ldc           #105
675: invokestatic  #19
678: aload         16
680: invokestatic  #16
683: aload         16
685: invokestatic  #17
688: ldc           #26
690: invokestatic  #19
693: aload         17
695: invokestatic  #16
698: new           #39
701: dup
702: invokespecial #40
705: ldc           #41
707: invokevirtual #42
710: dload         19
712: invokevirtual #121
715: ldc           #44
717: invokevirtual #42
720: ldc2_w        #212
723: invokevirtual #121
726: ldc           #41
728: invokevirtual #42
731: invokevirtual #45
734: dload         19
736: ldc2_w        #212
739: dcmpl
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #47
751: aload         21
753: invokestatic  #16
756: aload         22
758: invokestatic  #16
761: aload         22
763: invokestatic  #17
766: ldc           #214
768: invokestatic  #19
771: new           #39
774: dup
775: invokespecial #40
778: ldc           #41
780: invokevirtual #42
783: dload         24
785: invokevirtual #121
788: ldc           #44
790: invokevirtual #42
793: ldc2_w        #74
796: invokevirtual #121
799: ldc           #41
801: invokevirtual #42
804: invokevirtual #45
807: dload         24
809: ldc2_w        #74
812: dcmpl
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #47
824: new           #39
827: dup
828: invokespecial #40
831: ldc           #41
833: invokevirtual #42
836: iload         26
838: invokevirtual #81
841: ldc           #44
843: invokevirtual #42
846: bipush        31
848: invokevirtual #81
851: ldc           #41
853: invokevirtual #42
856: invokevirtual #45
859: iload         26
861: bipush        31
863: if_icmpne     870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #47
874: aload         27
876: invokestatic  #16
879: aload         27
881: invokestatic  #117
884: ldc           #229
886: invokestatic  #19
889: aload         28
891: invokestatic  #16
894: aload         28
896: invokestatic  #117
899: ldc           #229
901: invokestatic  #19
904: aload         29
906: invokestatic  #16
909: aload         29
911: invokestatic  #117
914: ldc           #229
916: invokestatic  #19
919: aload         30
921: invokestatic  #16
924: aload         30
926: invokestatic  #117
929: ldc           #229
931: invokestatic  #19
934: new           #39
937: dup
938: invokespecial #40
941: ldc           #41
943: invokevirtual #42
946: dload         32
948: invokevirtual #121
951: ldc           #44
953: invokevirtual #42
956: dconst_0
957: invokevirtual #121
960: ldc           #41
962: invokevirtual #42
965: invokevirtual #45
968: dload         32
970: dconst_0
971: dcmpl
972: ifne          979
975: iconst_1
976: goto          980
979: iconst_0
980: invokestatic  #47
983: new           #39
986: dup
987: invokespecial #40
990: ldc           #41
992: invokevirtual #42
995: dload         35
997: invokevirtual #121
1000: ldc           #44
1002: invokevirtual #42
1005: ldc2_w        #163
1008: invokevirtual #121
1011: ldc           #41
1013: invokevirtual #42
1016: invokevirtual #45
1019: dload         35
1021: ldc2_w        #163
1024: dcmpl
1025: ifne          1032
1028: iconst_1
1029: goto          1033
1032: iconst_0
1033: invokestatic  #47
1036: new           #39
1039: dup
1040: invokespecial #40
1043: ldc           #41
1045: invokevirtual #42
1048: aload         39
1050: invokevirtual #43
1053: ldc           #44
1055: invokevirtual #42
1058: getstatic     #37
1061: invokevirtual #43
1064: ldc           #41
1066: invokevirtual #42
1069: invokevirtual #45
1072: aload         39
1074: getstatic     #37
1077: invokevirtual #46
1080: invokestatic  #47
1083: aload         40
1085: invokestatic  #16
1088: aload         40
1090: invokestatic  #17
1093: ldc_w         #324
1096: invokestatic  #19
1099: return
Exception table:
from    to  target type
563   582   585   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 2909
End line: 2952
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction26 = null;
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.RealMatrix realMatrix39 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray37);
        int[] intArray49 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister50 = new org.apache.commons.math3.random.MersenneTwister(intArray49);
        float float51 = mersenneTwister50.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker53 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray37, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister50, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker53);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray37);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair57 = cMAESOptimizer24.optimize((-1165482754), multivariateFunction26, goalType27, doubleArray37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.48016477f + "'", float51 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: aconst_null
143: astore        8
145: getstatic     #150
148: astore        9
150: bipush        6
152: newarray       double
154: dup
155: iconst_0
156: dconst_0
157: dastore
158: dup
159: iconst_1
160: ldc2_w        #10
163: dastore
164: dup
165: iconst_2
166: dconst_1
167: dastore
168: dup
169: iconst_3
170: dconst_0
171: dastore
172: dup
173: iconst_4
174: dconst_1
175: dastore
176: dup
177: iconst_5
178: ldc2_w        #21
181: dastore
182: astore        10
184: aload         10
186: invokestatic  #23
189: aload         10
191: invokestatic  #24
194: astore        11
196: iconst_4
197: newarray       int
199: dup
200: iconst_0
201: bipush        100
203: iastore
204: dup
205: iconst_1
206: iconst_0
207: iastore
208: dup
209: iconst_2
210: bipush        100
212: iastore
213: dup
214: iconst_3
215: bipush        52
217: iastore
218: astore        12
220: new           #32
223: dup
224: aload         12
226: invokespecial #112
229: astore        13
231: aload         13
233: invokevirtual #113
236: fstore        14
238: new           #34
241: dup
242: invokespecial #35
245: astore        15
247: new           #8
250: dup
251: bipush        32
253: aload         10
255: iconst_0
256: ldc2_w        #114
259: iconst_1
260: ldc           #38
262: bipush        100
264: aload         13
266: iconst_1
267: aload         15
269: invokespecial #36
272: astore        16
274: new           #8
277: dup
278: iconst_m1
279: aload         10
281: invokespecial #9
284: astore        17
286: new           #8
289: dup
290: iconst_0
291: aload         10
293: invokespecial #9
296: astore        18
298: aload         7
300: ldc_w         #326
303: aload         8
305: aload         9
307: aload         10
309: invokevirtual #12
312: astore        19
314: ldc           #13
316: invokestatic  #14
319: goto          324
322: astore        19
324: aload_1
325: invokestatic  #16
328: aload_1
329: invokestatic  #17
332: ldc           #26
334: invokestatic  #19
337: aload_2
338: invokestatic  #16
341: aload_3
342: invokestatic  #16
345: aload_3
346: invokestatic  #117
349: ldc           #118
351: invokestatic  #19
354: new           #39
357: dup
358: invokespecial #40
361: ldc           #41
363: invokevirtual #42
366: fload         5
368: invokevirtual #119
371: ldc           #44
373: invokevirtual #42
376: ldc           #120
378: invokevirtual #119
381: ldc           #41
383: invokevirtual #42
386: invokevirtual #45
389: fload         5
391: ldc           #120
393: fcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #47
405: new           #39
408: dup
409: invokespecial #40
412: ldc           #41
414: invokevirtual #42
417: aload         9
419: invokevirtual #43
422: ldc           #44
424: invokevirtual #42
427: getstatic     #150
430: invokevirtual #43
433: ldc           #41
435: invokevirtual #42
438: invokevirtual #45
441: aload         9
443: getstatic     #150
446: invokevirtual #46
449: invokestatic  #47
452: aload         10
454: invokestatic  #16
457: aload         10
459: invokestatic  #17
462: ldc           #26
464: invokestatic  #19
467: aload         11
469: invokestatic  #16
472: aload         12
474: invokestatic  #16
477: aload         12
479: invokestatic  #117
482: ldc           #118
484: invokestatic  #19
487: new           #39
490: dup
491: invokespecial #40
494: ldc           #41
496: invokevirtual #42
499: fload         14
501: invokevirtual #119
504: ldc           #44
506: invokevirtual #42
509: ldc           #120
511: invokevirtual #119
514: ldc           #41
516: invokevirtual #42
519: invokevirtual #45
522: fload         14
524: ldc           #120
526: fcmpl
527: ifne          534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #47
538: return
Exception table:
from    to  target type
298   319   322   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 2955
End line: 2976
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        double[] doubleArray9 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray9);
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        float float23 = mersenneTwister22.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        java.lang.Class<?> wildcardClass29 = doubleArray9.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.48016477f + "'", float23 == 0.48016477f);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: new           #8
156: dup
157: iconst_0
158: aload_1
159: invokespecial #9
162: astore        9
164: aload_1
165: invokevirtual #328
168: astore        10
170: aload_1
171: invokestatic  #16
174: aload_1
175: invokestatic  #17
178: ldc           #26
180: invokestatic  #19
183: aload_2
184: invokestatic  #16
187: aload_3
188: invokestatic  #16
191: aload_3
192: invokestatic  #117
195: ldc           #118
197: invokestatic  #19
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: fload         5
214: invokevirtual #119
217: ldc           #44
219: invokevirtual #42
222: ldc           #120
224: invokevirtual #119
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: fload         5
237: ldc           #120
239: fcmpl
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #47
251: aload         10
253: invokestatic  #16
256: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 2979
End line: 2983
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        36
31: invokespecial #245
34: astore_1
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 2986
End line: 3014
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray27 = cMAESOptimizer25.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #54
155: astore        11
157: ldc           #29
159: invokestatic  #14
162: goto          167
165: astore        11
167: aload_1
168: invokestatic  #16
171: aload_1
172: invokestatic  #17
175: ldc           #26
177: invokestatic  #19
180: aload_2
181: invokestatic  #16
184: aload         4
186: invokestatic  #16
189: aload         4
191: invokestatic  #17
194: ldc           #26
196: invokestatic  #19
199: new           #39
202: dup
203: invokespecial #40
206: ldc           #41
208: invokevirtual #42
211: dload         6
213: invokevirtual #121
216: ldc           #44
218: invokevirtual #42
221: ldc2_w        #282
224: invokevirtual #121
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: dload         6
237: ldc2_w        #282
240: dcmpl
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #47
252: aload         10
254: invokestatic  #155
257: return
Exception table:
from    to  target type
150   162   165   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 3017
End line: 3037
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        int int23 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #331
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #125
133: istore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         6
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         6
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: aload         7
202: invokestatic  #16
205: aload         8
207: invokestatic  #16
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload         9
224: invokevirtual #81
227: ldc           #44
229: invokevirtual #42
232: iconst_0
233: invokevirtual #81
236: ldc           #41
238: invokevirtual #42
241: invokevirtual #45
244: iload         9
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #47
257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 3040
End line: 3085
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray25 = new double[] { '4' };
        double[] doubleArray26 = new double[] {};
        boolean boolean27 = org.apache.commons.math3.util.MathArrays.equals(doubleArray25, doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix36 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix37 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26, doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix39 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray34);
        org.apache.commons.math3.linear.RealMatrix realMatrix40 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair41 = cMAESOptimizer18.optimize((-327406441), multivariateFunction22, goalType23, doubleArray34);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(realMatrix40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aconst_null
115: astore        7
117: getstatic     #37
120: astore        8
122: iconst_1
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #70
130: dastore
131: astore        9
133: iconst_0
134: newarray       double
136: astore        10
138: aload         9
140: aload         10
142: invokestatic  #72
145: istore        11
147: bipush        6
149: newarray       double
151: dup
152: iconst_0
153: dconst_0
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #10
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: dup
166: iconst_3
167: dconst_0
168: dastore
169: dup
170: iconst_4
171: dconst_1
172: dastore
173: dup
174: iconst_5
175: ldc2_w        #21
178: dastore
179: astore        12
181: aload         12
183: invokestatic  #23
186: aload         12
188: invokestatic  #24
191: astore        13
193: aload         12
195: invokestatic  #24
198: astore        14
200: new           #96
203: dup
204: aload         10
206: aload         12
208: invokespecial #139
211: astore        15
213: aload         12
215: invokestatic  #24
218: astore        16
220: aload         12
222: invokestatic  #207
225: astore        17
227: aload         4
229: ldc_w         #333
232: aload         7
234: aload         8
236: aload         12
238: invokevirtual #12
241: astore        18
243: ldc           #13
245: invokestatic  #14
248: goto          253
251: astore        18
253: aload_1
254: invokestatic  #16
257: aload_1
258: invokestatic  #17
261: ldc           #26
263: invokestatic  #19
266: aload         5
268: invokestatic  #16
271: aload         6
273: invokestatic  #16
276: new           #39
279: dup
280: invokespecial #40
283: ldc           #41
285: invokevirtual #42
288: aload         8
290: invokevirtual #43
293: ldc           #44
295: invokevirtual #42
298: getstatic     #37
301: invokevirtual #43
304: ldc           #41
306: invokevirtual #42
309: invokevirtual #45
312: aload         8
314: getstatic     #37
317: invokevirtual #46
320: invokestatic  #47
323: aload         9
325: invokestatic  #16
328: aload         9
330: invokestatic  #17
333: ldc           #82
335: invokestatic  #19
338: aload         10
340: invokestatic  #16
343: aload         10
345: invokestatic  #17
348: ldc           #83
350: invokestatic  #19
353: new           #39
356: dup
357: invokespecial #40
360: ldc           #41
362: invokevirtual #42
365: iload         11
367: invokevirtual #84
370: ldc           #44
372: invokevirtual #42
375: iconst_0
376: invokevirtual #84
379: ldc           #41
381: invokevirtual #42
384: invokevirtual #45
387: iload         11
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #47
400: aload         12
402: invokestatic  #16
405: aload         12
407: invokestatic  #17
410: ldc           #26
412: invokestatic  #19
415: aload         13
417: invokestatic  #16
420: aload         14
422: invokestatic  #16
425: aload         16
427: invokestatic  #16
430: aload         17
432: invokestatic  #16
435: return
Exception table:
from    to  target type
227   248   251   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 3088
End line: 3158
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        double[] doubleArray25 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray25);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray25);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector18, arrayRealVector27);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector48);
        double[] doubleArray56 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray56);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray56);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector48, arrayRealVector58);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = arrayRealVector27.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector58);
        double[] doubleArray61 = arrayRealVector27.toArray();
        double[] doubleArray68 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray68);
        org.apache.commons.math3.linear.RealMatrix realMatrix70 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray68);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair72 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray68, (double) (-1.0f));
        double double73 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray61, doubleArray68);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray68);
        org.apache.commons.math3.linear.RealMatrix realMatrix75 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray68);
        double[] doubleArray77 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray68, 0.6557942026326724d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair78 = cMAESOptimizer2.optimize(6, multivariateFunction8, goalType9, doubleArray68);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 20204.0d + "'", double73 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix75);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aconst_null
62: astore        7
64: aconst_null
65: astore        8
67: bipush        6
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: ldc2_w        #10
80: dastore
81: dup
82: iconst_2
83: dconst_1
84: dastore
85: dup
86: iconst_3
87: dconst_0
88: dastore
89: dup
90: iconst_4
91: dconst_1
92: dastore
93: dup
94: iconst_5
95: ldc2_w        #21
98: dastore
99: astore        9
101: aload         9
103: invokestatic  #23
106: new           #96
109: dup
110: aload         9
112: invokespecial #97
115: astore        10
117: bipush        6
119: newarray       double
121: dup
122: iconst_0
123: dconst_0
124: dastore
125: dup
126: iconst_1
127: ldc2_w        #10
130: dastore
131: dup
132: iconst_2
133: dconst_1
134: dastore
135: dup
136: iconst_3
137: dconst_0
138: dastore
139: dup
140: iconst_4
141: dconst_1
142: dastore
143: dup
144: iconst_5
145: ldc2_w        #21
148: dastore
149: astore        11
151: aload         11
153: invokestatic  #23
156: new           #96
159: dup
160: aload         11
162: invokespecial #97
165: astore        12
167: new           #96
170: dup
171: aload         10
173: aload         12
175: invokespecial #99
178: astore        13
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        14
214: aload         14
216: invokestatic  #23
219: new           #96
222: dup
223: aload         14
225: invokespecial #97
228: astore        15
230: bipush        6
232: newarray       double
234: dup
235: iconst_0
236: dconst_0
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #10
243: dastore
244: dup
245: iconst_2
246: dconst_1
247: dastore
248: dup
249: iconst_3
250: dconst_0
251: dastore
252: dup
253: iconst_4
254: dconst_1
255: dastore
256: dup
257: iconst_5
258: ldc2_w        #21
261: dastore
262: astore        16
264: aload         16
266: invokestatic  #23
269: new           #96
272: dup
273: aload         16
275: invokespecial #97
278: astore        17
280: new           #96
283: dup
284: aload         15
286: aload         17
288: invokespecial #99
291: astore        18
293: bipush        6
295: newarray       double
297: dup
298: iconst_0
299: dconst_0
300: dastore
301: dup
302: iconst_1
303: ldc2_w        #10
306: dastore
307: dup
308: iconst_2
309: dconst_1
310: dastore
311: dup
312: iconst_3
313: dconst_0
314: dastore
315: dup
316: iconst_4
317: dconst_1
318: dastore
319: dup
320: iconst_5
321: ldc2_w        #21
324: dastore
325: astore        19
327: aload         19
329: invokestatic  #23
332: new           #96
335: dup
336: aload         19
338: invokespecial #97
341: astore        20
343: new           #96
346: dup
347: aload         17
349: aload         20
351: invokespecial #99
354: astore        21
356: aload         12
358: dconst_1
359: dconst_1
360: aload         20
362: invokevirtual #100
365: astore        22
367: aload         12
369: invokevirtual #101
372: astore        23
374: bipush        6
376: newarray       double
378: dup
379: iconst_0
380: dconst_0
381: dastore
382: dup
383: iconst_1
384: ldc2_w        #10
387: dastore
388: dup
389: iconst_2
390: dconst_1
391: dastore
392: dup
393: iconst_3
394: dconst_0
395: dastore
396: dup
397: iconst_4
398: dconst_1
399: dastore
400: dup
401: iconst_5
402: ldc2_w        #21
405: dastore
406: astore        24
408: aload         24
410: invokestatic  #23
413: aload         24
415: invokestatic  #24
418: astore        25
420: new           #58
423: dup
424: aload         24
426: ldc2_w        #59
429: invokespecial #61
432: astore        26
434: aload         23
436: aload         24
438: invokestatic  #206
441: dstore        27
443: aload         24
445: invokestatic  #23
448: aload         24
450: invokestatic  #207
453: astore        29
455: aload         24
457: ldc2_w        #208
460: invokestatic  #210
463: astore        30
465: aload_2
466: bipush        6
468: aload         7
470: aload         8
472: aload         24
474: invokevirtual #12
477: astore        31
479: ldc           #13
481: invokestatic  #14
484: goto          489
487: astore        31
489: new           #39
492: dup
493: invokespecial #40
496: ldc           #41
498: invokevirtual #42
501: iload_3
502: invokevirtual #81
505: ldc           #44
507: invokevirtual #42
510: iconst_0
511: invokevirtual #81
514: ldc           #41
516: invokevirtual #42
519: invokevirtual #45
522: iload_3
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #47
534: aload         4
536: invokestatic  #16
539: aload         5
541: invokestatic  #16
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload         6
558: invokevirtual #81
561: ldc           #44
563: invokevirtual #42
566: iconst_0
567: invokevirtual #81
570: ldc           #41
572: invokevirtual #42
575: invokevirtual #45
578: iload         6
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #47
591: aload         9
593: invokestatic  #16
596: aload         9
598: invokestatic  #17
601: ldc           #26
603: invokestatic  #19
606: aload         11
608: invokestatic  #16
611: aload         11
613: invokestatic  #17
616: ldc           #26
618: invokestatic  #19
621: aload         14
623: invokestatic  #16
626: aload         14
628: invokestatic  #17
631: ldc           #26
633: invokestatic  #19
636: aload         16
638: invokestatic  #16
641: aload         16
643: invokestatic  #17
646: ldc           #26
648: invokestatic  #19
651: aload         19
653: invokestatic  #16
656: aload         19
658: invokestatic  #17
661: ldc           #26
663: invokestatic  #19
666: aload         22
668: invokestatic  #16
671: aload         23
673: invokestatic  #16
676: aload         23
678: invokestatic  #17
681: ldc           #105
683: invokestatic  #19
686: aload         24
688: invokestatic  #16
691: aload         24
693: invokestatic  #17
696: ldc           #26
698: invokestatic  #19
701: aload         25
703: invokestatic  #16
706: new           #39
709: dup
710: invokespecial #40
713: ldc           #41
715: invokevirtual #42
718: dload         27
720: invokevirtual #121
723: ldc           #44
725: invokevirtual #42
728: ldc2_w        #212
731: invokevirtual #121
734: ldc           #41
736: invokevirtual #42
739: invokevirtual #45
742: dload         27
744: ldc2_w        #212
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #47
759: aload         29
761: invokestatic  #16
764: aload         30
766: invokestatic  #16
769: aload         30
771: invokestatic  #17
774: ldc           #214
776: invokestatic  #19
779: return
Exception table:
from    to  target type
465   484   487   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3161
End line: 3199
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction20 = null;
        org.apache.commons.math3.optimization.GoalType goalType21 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray23 = new double[] { '4' };
        double[] doubleArray24 = new double[] {};
        boolean boolean25 = org.apache.commons.math3.util.MathArrays.equals(doubleArray23, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix35 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24, doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair38 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, 1.401298464324817E-45d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = cMAESOptimizer18.optimize(6, multivariateFunction20, goalType21, doubleArray32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + goalType21 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType21.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(realMatrix35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aconst_null
101: astore        5
103: getstatic     #150
106: astore        6
108: iconst_1
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #70
116: dastore
117: astore        7
119: iconst_0
120: newarray       double
122: astore        8
124: aload         7
126: aload         8
128: invokestatic  #72
131: istore        9
133: bipush        6
135: newarray       double
137: dup
138: iconst_0
139: dconst_0
140: dastore
141: dup
142: iconst_1
143: ldc2_w        #10
146: dastore
147: dup
148: iconst_2
149: dconst_1
150: dastore
151: dup
152: iconst_3
153: dconst_0
154: dastore
155: dup
156: iconst_4
157: dconst_1
158: dastore
159: dup
160: iconst_5
161: ldc2_w        #21
164: dastore
165: astore        10
167: aload         10
169: invokestatic  #23
172: aload         10
174: invokestatic  #24
177: astore        11
179: aload         10
181: invokestatic  #24
184: astore        12
186: new           #96
189: dup
190: aload         8
192: aload         10
194: invokespecial #139
197: astore        13
199: new           #58
202: dup
203: aload         10
205: ldc2_w        #108
208: invokespecial #61
211: astore        14
213: aload         4
215: bipush        6
217: aload         5
219: aload         6
221: aload         10
223: invokevirtual #12
226: astore        15
228: ldc           #13
230: invokestatic  #14
233: goto          238
236: astore        15
238: aload_1
239: invokestatic  #16
242: aload_1
243: invokestatic  #17
246: ldc           #26
248: invokestatic  #19
251: new           #39
254: dup
255: invokespecial #40
258: ldc           #41
260: invokevirtual #42
263: aload         6
265: invokevirtual #43
268: ldc           #44
270: invokevirtual #42
273: getstatic     #150
276: invokevirtual #43
279: ldc           #41
281: invokevirtual #42
284: invokevirtual #45
287: aload         6
289: getstatic     #150
292: invokevirtual #46
295: invokestatic  #47
298: aload         7
300: invokestatic  #16
303: aload         7
305: invokestatic  #17
308: ldc           #82
310: invokestatic  #19
313: aload         8
315: invokestatic  #16
318: aload         8
320: invokestatic  #17
323: ldc           #83
325: invokestatic  #19
328: new           #39
331: dup
332: invokespecial #40
335: ldc           #41
337: invokevirtual #42
340: iload         9
342: invokevirtual #84
345: ldc           #44
347: invokevirtual #42
350: iconst_0
351: invokevirtual #84
354: ldc           #41
356: invokevirtual #42
359: invokevirtual #45
362: iload         9
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #47
375: aload         10
377: invokestatic  #16
380: aload         10
382: invokestatic  #17
385: ldc           #26
387: invokestatic  #19
390: aload         11
392: invokestatic  #16
395: aload         12
397: invokestatic  #16
400: return
Exception table:
from    to  target type
213   233   236   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3202
End line: 3282
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix61 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray59);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair63 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray59, (double) (-1.0f));
        double double64 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray52, doubleArray59);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix66 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray59);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray59, 0.6557942026326724d);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister75 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double76 = mersenneTwister75.nextGaussian();
        int int78 = mersenneTwister75.nextInt((int) (short) 100);
        int[] intArray80 = new int[] { (-127) };
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray83 = new int[] { (-127) };
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister85 = new org.apache.commons.math3.random.MersenneTwister(intArray83);
        double double86 = org.apache.commons.math3.util.MathArrays.distance(intArray80, intArray83);
        mersenneTwister75.setSeed(intArray83);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker89 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        double double90 = simpleValueChecker89.getRelativeThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray68, (-127), 0.0d, true, (int) (byte) 100, (int) (short) 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister75, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker89);
        int[] intArray93 = new int[] { (short) -1 };
        mersenneTwister75.setSeed(intArray93);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 20204.0d + "'", double64 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix66);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.7023867716137234d) + "'", double76 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 31 + "'", int78 == 31);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-127]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-127]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-127]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-127]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.1102230246251565E-14d + "'", double90 == 1.1102230246251565E-14d);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #10
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: dup
343: iconst_3
344: dconst_0
345: dastore
346: dup
347: iconst_4
348: dconst_1
349: dastore
350: dup
351: iconst_5
352: ldc2_w        #21
355: dastore
356: astore        16
358: aload         16
360: invokestatic  #23
363: aload         16
365: invokestatic  #24
368: astore        17
370: new           #58
373: dup
374: aload         16
376: ldc2_w        #59
379: invokespecial #61
382: astore        18
384: aload         15
386: aload         16
388: invokestatic  #206
391: dstore        19
393: aload         16
395: invokestatic  #23
398: aload         16
400: invokestatic  #207
403: astore        21
405: aload         16
407: ldc2_w        #208
410: invokestatic  #210
413: astore        22
415: new           #32
418: dup
419: iconst_1
420: invokespecial #33
423: astore        23
425: aload         23
427: invokevirtual #168
430: dstore        24
432: aload         23
434: bipush        100
436: invokevirtual #225
439: istore        26
441: iconst_1
442: newarray       int
444: dup
445: iconst_0
446: bipush        -127
448: iastore
449: astore        27
451: aload         27
453: invokestatic  #226
456: astore        28
458: iconst_1
459: newarray       int
461: dup
462: iconst_0
463: bipush        -127
465: iastore
466: astore        29
468: aload         29
470: invokestatic  #226
473: astore        30
475: new           #32
478: dup
479: aload         29
481: invokespecial #112
484: astore        31
486: aload         27
488: aload         29
490: invokestatic  #227
493: dstore        32
495: aload         23
497: aload         29
499: invokevirtual #228
502: new           #34
505: dup
506: invokespecial #35
509: astore        34
511: aload         34
513: invokevirtual #162
516: dstore        35
518: new           #8
521: dup
522: sipush        30000
525: aload         22
527: bipush        -127
529: dconst_0
530: iconst_1
531: bipush        100
533: iconst_0
534: aload         23
536: iconst_0
537: aload         34
539: invokespecial #36
542: astore        37
544: iconst_1
545: newarray       int
547: dup
548: iconst_0
549: iconst_m1
550: iastore
551: astore        38
553: aload         23
555: aload         38
557: invokevirtual #228
560: aload_1
561: invokestatic  #16
564: aload_1
565: invokestatic  #17
568: ldc           #26
570: invokestatic  #19
573: aload_3
574: invokestatic  #16
577: aload_3
578: invokestatic  #17
581: ldc           #26
583: invokestatic  #19
586: aload         6
588: invokestatic  #16
591: aload         6
593: invokestatic  #17
596: ldc           #26
598: invokestatic  #19
601: aload         8
603: invokestatic  #16
606: aload         8
608: invokestatic  #17
611: ldc           #26
613: invokestatic  #19
616: aload         11
618: invokestatic  #16
621: aload         11
623: invokestatic  #17
626: ldc           #26
628: invokestatic  #19
631: aload         14
633: invokestatic  #16
636: aload         15
638: invokestatic  #16
641: aload         15
643: invokestatic  #17
646: ldc           #105
648: invokestatic  #19
651: aload         16
653: invokestatic  #16
656: aload         16
658: invokestatic  #17
661: ldc           #26
663: invokestatic  #19
666: aload         17
668: invokestatic  #16
671: new           #39
674: dup
675: invokespecial #40
678: ldc           #41
680: invokevirtual #42
683: dload         19
685: invokevirtual #121
688: ldc           #44
690: invokevirtual #42
693: ldc2_w        #212
696: invokevirtual #121
699: ldc           #41
701: invokevirtual #42
704: invokevirtual #45
707: dload         19
709: ldc2_w        #212
712: dcmpl
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #47
724: aload         21
726: invokestatic  #16
729: aload         22
731: invokestatic  #16
734: aload         22
736: invokestatic  #17
739: ldc           #214
741: invokestatic  #19
744: new           #39
747: dup
748: invokespecial #40
751: ldc           #41
753: invokevirtual #42
756: dload         24
758: invokevirtual #121
761: ldc           #44
763: invokevirtual #42
766: ldc2_w        #74
769: invokevirtual #121
772: ldc           #41
774: invokevirtual #42
777: invokevirtual #45
780: dload         24
782: ldc2_w        #74
785: dcmpl
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #47
797: new           #39
800: dup
801: invokespecial #40
804: ldc           #41
806: invokevirtual #42
809: iload         26
811: invokevirtual #81
814: ldc           #44
816: invokevirtual #42
819: bipush        31
821: invokevirtual #81
824: ldc           #41
826: invokevirtual #42
829: invokevirtual #45
832: iload         26
834: bipush        31
836: if_icmpne     843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #47
847: aload         27
849: invokestatic  #16
852: aload         27
854: invokestatic  #117
857: ldc           #229
859: invokestatic  #19
862: aload         28
864: invokestatic  #16
867: aload         28
869: invokestatic  #117
872: ldc           #229
874: invokestatic  #19
877: aload         29
879: invokestatic  #16
882: aload         29
884: invokestatic  #117
887: ldc           #229
889: invokestatic  #19
892: aload         30
894: invokestatic  #16
897: aload         30
899: invokestatic  #117
902: ldc           #229
904: invokestatic  #19
907: new           #39
910: dup
911: invokespecial #40
914: ldc           #41
916: invokevirtual #42
919: dload         32
921: invokevirtual #121
924: ldc           #44
926: invokevirtual #42
929: dconst_0
930: invokevirtual #121
933: ldc           #41
935: invokevirtual #42
938: invokevirtual #45
941: dload         32
943: dconst_0
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #47
956: new           #39
959: dup
960: invokespecial #40
963: ldc           #41
965: invokevirtual #42
968: dload         35
970: invokevirtual #121
973: ldc           #44
975: invokevirtual #42
978: ldc2_w        #163
981: invokevirtual #121
984: ldc           #41
986: invokevirtual #42
989: invokevirtual #45
992: dload         35
994: ldc2_w        #163
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #47
1009: aload         38
1011: invokestatic  #16
1014: aload         38
1016: invokestatic  #117
1019: ldc_w         #337
1022: invokestatic  #19
1025: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3285
End line: 3370
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        double[] doubleArray9 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray9);
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        float float23 = mersenneTwister22.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction30 = null;
        org.apache.commons.math3.optimization.GoalType goalType31 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector40.copy();
        org.apache.commons.math3.linear.RealVector realVector43 = arrayRealVector40.mapDivide((double) (-1.0f));
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray50);
        org.apache.commons.math3.linear.RealVector realVector54 = arrayRealVector52.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(realVector54);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = arrayRealVector40.add(realVector54);
        double[] doubleArray63 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray63);
        org.apache.commons.math3.linear.RealMatrix realMatrix65 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray63);
        boolean boolean66 = arrayRealVector56.equals((java.lang.Object) doubleArray63);
        double[] doubleArray70 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray71 = new double[][] { doubleArray70 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix73 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray71, true);
        int int74 = array2DRowRealMatrix73.getRowDimension();
        array2DRowRealMatrix73.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double79 = array2DRowRealMatrix73.getNorm();
        double[][] doubleArray80 = array2DRowRealMatrix73.getData();
        double[][] doubleArray81 = array2DRowRealMatrix73.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix82 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray81);
        double[] doubleArray84 = new double[] { '4' };
        double[] doubleArray85 = new double[] {};
        boolean boolean86 = org.apache.commons.math3.util.MathArrays.equals(doubleArray84, doubleArray85);
        double[] doubleArray87 = blockRealMatrix82.preMultiply(doubleArray84);
        boolean boolean88 = org.apache.commons.math3.util.MathArrays.equals(doubleArray63, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair89 = cMAESOptimizer28.optimize((int) (byte) 100, multivariateFunction30, goalType31, doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.48016477f + "'", float23 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + goalType31 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType31.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(arrayRealVector56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[5200.0, -52.0, -52.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: new           #8
156: dup
157: iconst_0
158: aload_1
159: invokespecial #9
162: astore        9
164: aconst_null
165: astore        10
167: getstatic     #37
170: astore        11
172: bipush        6
174: newarray       double
176: dup
177: iconst_0
178: dconst_0
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #10
185: dastore
186: dup
187: iconst_2
188: dconst_1
189: dastore
190: dup
191: iconst_3
192: dconst_0
193: dastore
194: dup
195: iconst_4
196: dconst_1
197: dastore
198: dup
199: iconst_5
200: ldc2_w        #21
203: dastore
204: astore        12
206: aload         12
208: invokestatic  #23
211: new           #96
214: dup
215: aload         12
217: invokespecial #97
220: astore        13
222: aload         13
224: invokevirtual #98
227: astore        14
229: aload         13
231: ldc2_w        #59
234: invokevirtual #151
237: astore        15
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        16
273: aload         16
275: invokestatic  #23
278: new           #96
281: dup
282: aload         16
284: invokespecial #97
287: astore        17
289: aload         17
291: dconst_1
292: invokevirtual #151
295: astore        18
297: new           #96
300: dup
301: aload         18
303: invokespecial #152
306: astore        19
308: aload         13
310: aload         18
312: invokevirtual #153
315: astore        20
317: bipush        6
319: newarray       double
321: dup
322: iconst_0
323: dconst_0
324: dastore
325: dup
326: iconst_1
327: ldc2_w        #10
330: dastore
331: dup
332: iconst_2
333: dconst_1
334: dastore
335: dup
336: iconst_3
337: dconst_0
338: dastore
339: dup
340: iconst_4
341: dconst_1
342: dastore
343: dup
344: iconst_5
345: ldc2_w        #21
348: dastore
349: astore        21
351: aload         21
353: invokestatic  #23
356: aload         21
358: invokestatic  #24
361: astore        22
363: aload         20
365: aload         21
367: invokevirtual #154
370: istore        23
372: iconst_3
373: newarray       double
375: dup
376: iconst_0
377: ldc2_w        #87
380: dastore
381: dup
382: iconst_1
383: ldc2_w        #59
386: dastore
387: dup
388: iconst_2
389: ldc2_w        #59
392: dastore
393: astore        24
395: iconst_1
396: anewarray     #89
399: dup
400: iconst_0
401: aload         24
403: aastore
404: astore        25
406: new           #90
409: dup
410: aload         25
412: iconst_1
413: invokespecial #91
416: astore        26
418: aload         26
420: invokevirtual #182
423: istore        27
425: aload         26
427: iconst_0
428: iconst_0
429: ldc2_w        #10
432: invokevirtual #183
435: aload         26
437: invokevirtual #184
440: dstore        28
442: aload         26
444: invokevirtual #92
447: astore        30
449: aload         26
451: invokevirtual #185
454: astore        31
456: new           #186
459: dup
460: aload         31
462: invokespecial #187
465: astore        32
467: iconst_1
468: newarray       double
470: dup
471: iconst_0
472: ldc2_w        #70
475: dastore
476: astore        33
478: iconst_0
479: newarray       double
481: astore        34
483: aload         33
485: aload         34
487: invokestatic  #72
490: istore        35
492: aload         32
494: aload         33
496: invokevirtual #188
499: astore        36
501: aload         21
503: aload         33
505: invokestatic  #72
508: istore        37
510: aload         9
512: bipush        100
514: aload         10
516: aload         11
518: aload         33
520: invokevirtual #12
523: astore        38
525: ldc           #13
527: invokestatic  #14
530: goto          535
533: astore        38
535: aload_1
536: invokestatic  #16
539: aload_1
540: invokestatic  #17
543: ldc           #26
545: invokestatic  #19
548: aload_2
549: invokestatic  #16
552: aload_3
553: invokestatic  #16
556: aload_3
557: invokestatic  #117
560: ldc           #118
562: invokestatic  #19
565: new           #39
568: dup
569: invokespecial #40
572: ldc           #41
574: invokevirtual #42
577: fload         5
579: invokevirtual #119
582: ldc           #44
584: invokevirtual #42
587: ldc           #120
589: invokevirtual #119
592: ldc           #41
594: invokevirtual #42
597: invokevirtual #45
600: fload         5
602: ldc           #120
604: fcmpl
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #47
616: new           #39
619: dup
620: invokespecial #40
623: ldc           #41
625: invokevirtual #42
628: aload         11
630: invokevirtual #43
633: ldc           #44
635: invokevirtual #42
638: getstatic     #37
641: invokevirtual #43
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: aload         11
654: getstatic     #37
657: invokevirtual #46
660: invokestatic  #47
663: aload         12
665: invokestatic  #16
668: aload         12
670: invokestatic  #17
673: ldc           #26
675: invokestatic  #19
678: aload         14
680: invokestatic  #16
683: aload         15
685: invokestatic  #16
688: aload         16
690: invokestatic  #16
693: aload         16
695: invokestatic  #17
698: ldc           #26
700: invokestatic  #19
703: aload         18
705: invokestatic  #16
708: aload         20
710: invokestatic  #16
713: aload         21
715: invokestatic  #16
718: aload         21
720: invokestatic  #17
723: ldc           #26
725: invokestatic  #19
728: aload         22
730: invokestatic  #16
733: new           #39
736: dup
737: invokespecial #40
740: ldc           #41
742: invokevirtual #42
745: iload         23
747: invokevirtual #84
750: ldc           #44
752: invokevirtual #42
755: iconst_0
756: invokevirtual #84
759: ldc           #41
761: invokevirtual #42
764: invokevirtual #45
767: iload         23
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #47
780: aload         24
782: invokestatic  #16
785: aload         24
787: invokestatic  #17
790: ldc           #94
792: invokestatic  #19
795: aload         25
797: invokestatic  #16
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         27
814: invokevirtual #81
817: ldc           #44
819: invokevirtual #42
822: iconst_1
823: invokevirtual #81
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         27
836: iconst_1
837: if_icmpne     844
840: iconst_1
841: goto          845
844: iconst_0
845: invokestatic  #47
848: new           #39
851: dup
852: invokespecial #40
855: ldc           #41
857: invokevirtual #42
860: dload         28
862: invokevirtual #121
865: ldc           #44
867: invokevirtual #42
870: ldc2_w        #10
873: invokevirtual #121
876: ldc           #41
878: invokevirtual #42
881: invokevirtual #45
884: dload         28
886: ldc2_w        #10
889: dcmpl
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #47
901: aload         30
903: invokestatic  #16
906: aload         31
908: invokestatic  #16
911: aload         33
913: invokestatic  #16
916: aload         33
918: invokestatic  #17
921: ldc           #82
923: invokestatic  #19
926: aload         34
928: invokestatic  #16
931: aload         34
933: invokestatic  #17
936: ldc           #83
938: invokestatic  #19
941: new           #39
944: dup
945: invokespecial #40
948: ldc           #41
950: invokevirtual #42
953: iload         35
955: invokevirtual #84
958: ldc           #44
960: invokevirtual #42
963: iconst_0
964: invokevirtual #84
967: ldc           #41
969: invokevirtual #42
972: invokevirtual #45
975: iload         35
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #47
988: aload         36
990: invokestatic  #16
993: aload         36
995: invokestatic  #17
998: ldc           #189
1000: invokestatic  #19
1003: new           #39
1006: dup
1007: invokespecial #40
1010: ldc           #41
1012: invokevirtual #42
1015: iload         37
1017: invokevirtual #84
1020: ldc           #44
1022: invokevirtual #42
1025: iconst_0
1026: invokevirtual #84
1029: ldc           #41
1031: invokevirtual #42
1034: invokevirtual #45
1037: iload         37
1039: ifne          1046
1042: iconst_1
1043: goto          1047
1046: iconst_0
1047: invokestatic  #47
1050: return
Exception table:
from    to  target type
510   530   533   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3373
End line: 3417
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction24 = null;
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.RealMatrix realMatrix37 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray35);
        int[] intArray47 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister48 = new org.apache.commons.math3.random.MersenneTwister(intArray47);
        float float49 = mersenneTwister48.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker51 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray35, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister48, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker51);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray35);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair55 = cMAESOptimizer18.optimize((-10), multivariateFunction24, goalType25, doubleArray35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 0.48016477f + "'", float49 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aconst_null
129: astore        9
131: getstatic     #37
134: astore        10
136: bipush        6
138: newarray       double
140: dup
141: iconst_0
142: dconst_0
143: dastore
144: dup
145: iconst_1
146: ldc2_w        #10
149: dastore
150: dup
151: iconst_2
152: dconst_1
153: dastore
154: dup
155: iconst_3
156: dconst_0
157: dastore
158: dup
159: iconst_4
160: dconst_1
161: dastore
162: dup
163: iconst_5
164: ldc2_w        #21
167: dastore
168: astore        11
170: aload         11
172: invokestatic  #23
175: aload         11
177: invokestatic  #24
180: astore        12
182: iconst_4
183: newarray       int
185: dup
186: iconst_0
187: bipush        100
189: iastore
190: dup
191: iconst_1
192: iconst_0
193: iastore
194: dup
195: iconst_2
196: bipush        100
198: iastore
199: dup
200: iconst_3
201: bipush        52
203: iastore
204: astore        13
206: new           #32
209: dup
210: aload         13
212: invokespecial #112
215: astore        14
217: aload         14
219: invokevirtual #113
222: fstore        15
224: new           #34
227: dup
228: invokespecial #35
231: astore        16
233: new           #8
236: dup
237: bipush        32
239: aload         11
241: iconst_0
242: ldc2_w        #114
245: iconst_1
246: ldc           #38
248: bipush        100
250: aload         14
252: iconst_1
253: aload         16
255: invokespecial #36
258: astore        17
260: new           #8
263: dup
264: iconst_m1
265: aload         11
267: invokespecial #9
270: astore        18
272: new           #8
275: dup
276: iconst_0
277: aload         11
279: invokespecial #9
282: astore        19
284: aload         4
286: bipush        -10
288: aload         9
290: aload         10
292: aload         11
294: invokevirtual #12
297: astore        20
299: ldc           #13
301: invokestatic  #14
304: goto          309
307: astore        20
309: aload_1
310: invokestatic  #16
313: aload_1
314: invokestatic  #17
317: ldc           #26
319: invokestatic  #19
322: aload         5
324: invokestatic  #16
327: new           #39
330: dup
331: invokespecial #40
334: ldc           #41
336: invokevirtual #42
339: iload         6
341: invokevirtual #81
344: ldc           #44
346: invokevirtual #42
349: iconst_0
350: invokevirtual #81
353: ldc           #41
355: invokevirtual #42
358: invokevirtual #45
361: iload         6
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #47
374: aload         7
376: invokestatic  #155
379: aload         8
381: invokestatic  #16
384: new           #39
387: dup
388: invokespecial #40
391: ldc           #41
393: invokevirtual #42
396: aload         10
398: invokevirtual #43
401: ldc           #44
403: invokevirtual #42
406: getstatic     #37
409: invokevirtual #43
412: ldc           #41
414: invokevirtual #42
417: invokevirtual #45
420: aload         10
422: getstatic     #37
425: invokevirtual #46
428: invokestatic  #47
431: aload         11
433: invokestatic  #16
436: aload         11
438: invokestatic  #17
441: ldc           #26
443: invokestatic  #19
446: aload         12
448: invokestatic  #16
451: aload         13
453: invokestatic  #16
456: aload         13
458: invokestatic  #117
461: ldc           #118
463: invokestatic  #19
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: fload         15
480: invokevirtual #119
483: ldc           #44
485: invokevirtual #42
488: ldc           #120
490: invokevirtual #119
493: ldc           #41
495: invokevirtual #42
498: invokevirtual #45
501: fload         15
503: ldc           #120
505: fcmpl
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #47
517: return
Exception table:
from    to  target type
284   304   307   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3420
End line: 3497
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        int int7 = array2DRowRealMatrix6.getRowDimension();
        org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor8 = new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor();
        double double9 = array2DRowRealMatrix6.walkInRowOrder((org.apache.commons.math3.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor8);
        org.apache.commons.math3.linear.RealMatrix realMatrix12 = array2DRowRealMatrix6.createMatrix(1, (int) (byte) 100);
        double[] doubleArray20 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray20);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray20);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector22.copy();
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector32, arrayRealVector41);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray51);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector53, arrayRealVector62);
        double[] doubleArray70 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector62, arrayRealVector72);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = arrayRealVector41.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector72);
        double[] doubleArray75 = arrayRealVector41.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector22, doubleArray75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray75);
        double[] doubleArray84 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray84);
        org.apache.commons.math3.linear.RealMatrix realMatrix86 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray84);
        org.apache.commons.math3.linear.RealMatrix realMatrix87 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray84);
        org.apache.commons.math3.linear.RealVector realVector88 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray84);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray75, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = array2DRowRealMatrix6.preMultiply(doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 1");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix86);
        org.junit.Assert.assertNotNull(realMatrix87);
        org.junit.Assert.assertNotNull(realVector88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #340
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #87
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #59
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #59
45: dastore
46: astore_1
47: iconst_1
48: anewarray     #89
51: dup
52: iconst_0
53: aload_1
54: aastore
55: astore_2
56: new           #90
59: dup
60: aload_2
61: iconst_1
62: invokespecial #91
65: astore_3
66: aload_3
67: invokevirtual #182
70: istore        4
72: new           #236
75: dup
76: invokespecial #237
79: astore        5
81: aload_3
82: aload         5
84: invokevirtual #241
87: dstore        6
89: aload_3
90: iconst_1
91: bipush        100
93: invokevirtual #234
96: astore        8
98: bipush        6
100: newarray       double
102: dup
103: iconst_0
104: dconst_0
105: dastore
106: dup
107: iconst_1
108: ldc2_w        #10
111: dastore
112: dup
113: iconst_2
114: dconst_1
115: dastore
116: dup
117: iconst_3
118: dconst_0
119: dastore
120: dup
121: iconst_4
122: dconst_1
123: dastore
124: dup
125: iconst_5
126: ldc2_w        #21
129: dastore
130: astore        9
132: aload         9
134: invokestatic  #23
137: new           #96
140: dup
141: aload         9
143: invokespecial #97
146: astore        10
148: aload         10
150: invokevirtual #98
153: astore        11
155: bipush        6
157: newarray       double
159: dup
160: iconst_0
161: dconst_0
162: dastore
163: dup
164: iconst_1
165: ldc2_w        #10
168: dastore
169: dup
170: iconst_2
171: dconst_1
172: dastore
173: dup
174: iconst_3
175: dconst_0
176: dastore
177: dup
178: iconst_4
179: dconst_1
180: dastore
181: dup
182: iconst_5
183: ldc2_w        #21
186: dastore
187: astore        12
189: aload         12
191: invokestatic  #23
194: new           #96
197: dup
198: aload         12
200: invokespecial #97
203: astore        13
205: bipush        6
207: newarray       double
209: dup
210: iconst_0
211: dconst_0
212: dastore
213: dup
214: iconst_1
215: ldc2_w        #10
218: dastore
219: dup
220: iconst_2
221: dconst_1
222: dastore
223: dup
224: iconst_3
225: dconst_0
226: dastore
227: dup
228: iconst_4
229: dconst_1
230: dastore
231: dup
232: iconst_5
233: ldc2_w        #21
236: dastore
237: astore        14
239: aload         14
241: invokestatic  #23
244: new           #96
247: dup
248: aload         14
250: invokespecial #97
253: astore        15
255: new           #96
258: dup
259: aload         13
261: aload         15
263: invokespecial #99
266: astore        16
268: bipush        6
270: newarray       double
272: dup
273: iconst_0
274: dconst_0
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #10
281: dastore
282: dup
283: iconst_2
284: dconst_1
285: dastore
286: dup
287: iconst_3
288: dconst_0
289: dastore
290: dup
291: iconst_4
292: dconst_1
293: dastore
294: dup
295: iconst_5
296: ldc2_w        #21
299: dastore
300: astore        17
302: aload         17
304: invokestatic  #23
307: new           #96
310: dup
311: aload         17
313: invokespecial #97
316: astore        18
318: bipush        6
320: newarray       double
322: dup
323: iconst_0
324: dconst_0
325: dastore
326: dup
327: iconst_1
328: ldc2_w        #10
331: dastore
332: dup
333: iconst_2
334: dconst_1
335: dastore
336: dup
337: iconst_3
338: dconst_0
339: dastore
340: dup
341: iconst_4
342: dconst_1
343: dastore
344: dup
345: iconst_5
346: ldc2_w        #21
349: dastore
350: astore        19
352: aload         19
354: invokestatic  #23
357: new           #96
360: dup
361: aload         19
363: invokespecial #97
366: astore        20
368: new           #96
371: dup
372: aload         18
374: aload         20
376: invokespecial #99
379: astore        21
381: bipush        6
383: newarray       double
385: dup
386: iconst_0
387: dconst_0
388: dastore
389: dup
390: iconst_1
391: ldc2_w        #10
394: dastore
395: dup
396: iconst_2
397: dconst_1
398: dastore
399: dup
400: iconst_3
401: dconst_0
402: dastore
403: dup
404: iconst_4
405: dconst_1
406: dastore
407: dup
408: iconst_5
409: ldc2_w        #21
412: dastore
413: astore        22
415: aload         22
417: invokestatic  #23
420: new           #96
423: dup
424: aload         22
426: invokespecial #97
429: astore        23
431: new           #96
434: dup
435: aload         20
437: aload         23
439: invokespecial #99
442: astore        24
444: aload         15
446: dconst_1
447: dconst_1
448: aload         23
450: invokevirtual #100
453: astore        25
455: aload         15
457: invokevirtual #101
460: astore        26
462: new           #96
465: dup
466: aload         10
468: aload         26
470: invokespecial #102
473: astore        27
475: new           #8
478: dup
479: bipush        100
481: aload         26
483: invokespecial #9
486: astore        28
488: bipush        6
490: newarray       double
492: dup
493: iconst_0
494: dconst_0
495: dastore
496: dup
497: iconst_1
498: ldc2_w        #10
501: dastore
502: dup
503: iconst_2
504: dconst_1
505: dastore
506: dup
507: iconst_3
508: dconst_0
509: dastore
510: dup
511: iconst_4
512: dconst_1
513: dastore
514: dup
515: iconst_5
516: ldc2_w        #21
519: dastore
520: astore        29
522: aload         29
524: invokestatic  #23
527: aload         29
529: invokestatic  #24
532: astore        30
534: aload         29
536: invokestatic  #192
539: astore        31
541: aload         29
543: invokestatic  #193
546: astore        32
548: aload         26
550: aload         29
552: invokestatic  #72
555: istore        33
557: aload_3
558: aload         29
560: invokevirtual #341
563: astore        34
565: ldc_w         #342
568: invokestatic  #14
571: goto          576
574: astore        34
576: aload_1
577: invokestatic  #16
580: aload_1
581: invokestatic  #17
584: ldc           #94
586: invokestatic  #19
589: aload_2
590: invokestatic  #16
593: new           #39
596: dup
597: invokespecial #40
600: ldc           #41
602: invokevirtual #42
605: iload         4
607: invokevirtual #81
610: ldc           #44
612: invokevirtual #42
615: iconst_1
616: invokevirtual #81
619: ldc           #41
621: invokevirtual #42
624: invokevirtual #45
627: iload         4
629: iconst_1
630: if_icmpne     637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #47
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: dload         6
655: invokevirtual #121
658: ldc           #44
660: invokevirtual #42
663: dconst_0
664: invokevirtual #121
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: dload         6
677: dconst_0
678: dcmpl
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #47
690: aload         8
692: invokestatic  #16
695: aload         9
697: invokestatic  #16
700: aload         9
702: invokestatic  #17
705: ldc           #26
707: invokestatic  #19
710: aload         11
712: invokestatic  #16
715: aload         12
717: invokestatic  #16
720: aload         12
722: invokestatic  #17
725: ldc           #26
727: invokestatic  #19
730: aload         14
732: invokestatic  #16
735: aload         14
737: invokestatic  #17
740: ldc           #26
742: invokestatic  #19
745: aload         17
747: invokestatic  #16
750: aload         17
752: invokestatic  #17
755: ldc           #26
757: invokestatic  #19
760: aload         19
762: invokestatic  #16
765: aload         19
767: invokestatic  #17
770: ldc           #26
772: invokestatic  #19
775: aload         22
777: invokestatic  #16
780: aload         22
782: invokestatic  #17
785: ldc           #26
787: invokestatic  #19
790: aload         25
792: invokestatic  #16
795: aload         26
797: invokestatic  #16
800: aload         26
802: invokestatic  #17
805: ldc           #105
807: invokestatic  #19
810: aload         29
812: invokestatic  #16
815: aload         29
817: invokestatic  #17
820: ldc           #26
822: invokestatic  #19
825: aload         30
827: invokestatic  #16
830: aload         31
832: invokestatic  #16
835: aload         32
837: invokestatic  #16
840: new           #39
843: dup
844: invokespecial #40
847: ldc           #41
849: invokevirtual #42
852: iload         33
854: invokevirtual #84
857: ldc           #44
859: invokevirtual #42
862: iconst_0
863: invokevirtual #84
866: ldc           #41
868: invokevirtual #42
871: invokevirtual #45
874: iload         33
876: ifne          883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #47
887: return
Exception table:
from    to  target type
557   571   574   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 3500
End line: 3522
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray7);
        int int13 = org.apache.commons.math3.util.MathUtils.hash(doubleArray7);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection14 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray7, orderDirection14, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not decreasing (0 < 100)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 419642177 + "'", int13 == 419642177);
        org.junit.Assert.assertTrue("'" + orderDirection14 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection14.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: new           #8
82: dup
83: bipush        36
85: aload_1
86: invokespecial #9
89: astore        4
91: aload_1
92: invokestatic  #344
95: istore        5
97: getstatic     #345
100: astore        6
102: aload_1
103: aload         6
105: iconst_0
106: invokestatic  #80
109: ldc_w         #346
112: invokestatic  #14
115: goto          120
118: astore        7
120: aload_1
121: invokestatic  #16
124: aload_1
125: invokestatic  #17
128: ldc           #26
130: invokestatic  #19
133: aload_2
134: invokestatic  #16
137: new           #39
140: dup
141: invokespecial #40
144: ldc           #41
146: invokevirtual #42
149: iload         5
151: invokevirtual #81
154: ldc           #44
156: invokevirtual #42
159: ldc_w         #347
162: invokevirtual #81
165: ldc           #41
167: invokevirtual #42
170: invokevirtual #45
173: iload         5
175: ldc_w         #347
178: if_icmpne     185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #47
189: new           #39
192: dup
193: invokespecial #40
196: ldc           #41
198: invokevirtual #42
201: aload         6
203: invokevirtual #43
206: ldc           #44
208: invokevirtual #42
211: getstatic     #345
214: invokevirtual #43
217: ldc           #41
219: invokevirtual #42
222: invokevirtual #45
225: aload         6
227: getstatic     #345
230: invokevirtual #85
233: invokestatic  #47
236: return
Exception table:
from    to  target type
102   115   118   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 3525
End line: 3571
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        double[] doubleArray9 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray9);
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        float float23 = mersenneTwister22.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction30 = null;
        org.apache.commons.math3.optimization.GoalType goalType31 = null;
        double[] doubleArray33 = new double[] { '4' };
        double[] doubleArray34 = new double[] {};
        boolean boolean35 = org.apache.commons.math3.util.MathArrays.equals(doubleArray33, doubleArray34);
        double[] doubleArray42 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix44 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix45 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34, doubleArray42);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair48 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray42, 1.401298464324817E-45d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair49 = cMAESOptimizer28.optimize(2146959360, multivariateFunction30, goalType31, doubleArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.48016477f + "'", float23 == 0.48016477f);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(realMatrix45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: new           #8
156: dup
157: iconst_0
158: aload_1
159: invokespecial #9
162: astore        9
164: aconst_null
165: astore        10
167: aconst_null
168: astore        11
170: iconst_1
171: newarray       double
173: dup
174: iconst_0
175: ldc2_w        #70
178: dastore
179: astore        12
181: iconst_0
182: newarray       double
184: astore        13
186: aload         12
188: aload         13
190: invokestatic  #72
193: istore        14
195: bipush        6
197: newarray       double
199: dup
200: iconst_0
201: dconst_0
202: dastore
203: dup
204: iconst_1
205: ldc2_w        #10
208: dastore
209: dup
210: iconst_2
211: dconst_1
212: dastore
213: dup
214: iconst_3
215: dconst_0
216: dastore
217: dup
218: iconst_4
219: dconst_1
220: dastore
221: dup
222: iconst_5
223: ldc2_w        #21
226: dastore
227: astore        15
229: aload         15
231: invokestatic  #23
234: aload         15
236: invokestatic  #24
239: astore        16
241: aload         15
243: invokestatic  #24
246: astore        17
248: new           #96
251: dup
252: aload         13
254: aload         15
256: invokespecial #139
259: astore        18
261: new           #58
264: dup
265: aload         15
267: ldc2_w        #108
270: invokespecial #61
273: astore        19
275: aload         9
277: ldc_w         #349
280: aload         10
282: aload         11
284: aload         15
286: invokevirtual #12
289: astore        20
291: ldc           #13
293: invokestatic  #14
296: goto          301
299: astore        20
301: aload_1
302: invokestatic  #16
305: aload_1
306: invokestatic  #17
309: ldc           #26
311: invokestatic  #19
314: aload_2
315: invokestatic  #16
318: aload_3
319: invokestatic  #16
322: aload_3
323: invokestatic  #117
326: ldc           #118
328: invokestatic  #19
331: new           #39
334: dup
335: invokespecial #40
338: ldc           #41
340: invokevirtual #42
343: fload         5
345: invokevirtual #119
348: ldc           #44
350: invokevirtual #42
353: ldc           #120
355: invokevirtual #119
358: ldc           #41
360: invokevirtual #42
363: invokevirtual #45
366: fload         5
368: ldc           #120
370: fcmpl
371: ifne          378
374: iconst_1
375: goto          379
378: iconst_0
379: invokestatic  #47
382: aload         12
384: invokestatic  #16
387: aload         12
389: invokestatic  #17
392: ldc           #82
394: invokestatic  #19
397: aload         13
399: invokestatic  #16
402: aload         13
404: invokestatic  #17
407: ldc           #83
409: invokestatic  #19
412: new           #39
415: dup
416: invokespecial #40
419: ldc           #41
421: invokevirtual #42
424: iload         14
426: invokevirtual #84
429: ldc           #44
431: invokevirtual #42
434: iconst_0
435: invokevirtual #84
438: ldc           #41
440: invokevirtual #42
443: invokevirtual #45
446: iload         14
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #47
459: aload         15
461: invokestatic  #16
464: aload         15
466: invokestatic  #17
469: ldc           #26
471: invokestatic  #19
474: aload         16
476: invokestatic  #16
479: aload         17
481: invokestatic  #16
484: return
Exception table:
from    to  target type
275   296   299   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 3574
End line: 3592
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(doubleList22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: new           #39
144: dup
145: invokespecial #40
148: ldc           #41
150: invokevirtual #42
153: iload         5
155: invokevirtual #81
158: ldc           #44
160: invokevirtual #42
163: iconst_0
164: invokevirtual #81
167: ldc           #41
169: invokevirtual #42
172: invokevirtual #45
175: iload         5
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #47
188: aload         6
190: invokestatic  #16
193: aload         7
195: invokestatic  #16
198: aload         8
200: invokestatic  #16
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 3595
End line: 3667
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector32, arrayRealVector41);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray51);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector53, arrayRealVector62);
        double[] doubleArray70 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray70);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector62, arrayRealVector72);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector74 = arrayRealVector41.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector72);
        double[] doubleArray75 = arrayRealVector41.toArray();
        double[] doubleArray82 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray82);
        org.apache.commons.math3.linear.RealMatrix realMatrix84 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray82);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair86 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray82, (double) (-1.0f));
        double double87 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray75, doubleArray82);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray82);
        org.apache.commons.math3.linear.RealMatrix realMatrix89 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray82);
        double[] doubleArray91 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray82, 0.6557942026326724d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair92 = cMAESOptimizer18.optimize((-2022633607), multivariateFunction22, goalType23, doubleArray82);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + goalType23 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType23.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix84);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 20204.0d + "'", double87 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix89);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aconst_null
115: astore        7
117: getstatic     #150
120: astore        8
122: bipush        6
124: newarray       double
126: dup
127: iconst_0
128: dconst_0
129: dastore
130: dup
131: iconst_1
132: ldc2_w        #10
135: dastore
136: dup
137: iconst_2
138: dconst_1
139: dastore
140: dup
141: iconst_3
142: dconst_0
143: dastore
144: dup
145: iconst_4
146: dconst_1
147: dastore
148: dup
149: iconst_5
150: ldc2_w        #21
153: dastore
154: astore        9
156: aload         9
158: invokestatic  #23
161: new           #96
164: dup
165: aload         9
167: invokespecial #97
170: astore        10
172: bipush        6
174: newarray       double
176: dup
177: iconst_0
178: dconst_0
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #10
185: dastore
186: dup
187: iconst_2
188: dconst_1
189: dastore
190: dup
191: iconst_3
192: dconst_0
193: dastore
194: dup
195: iconst_4
196: dconst_1
197: dastore
198: dup
199: iconst_5
200: ldc2_w        #21
203: dastore
204: astore        11
206: aload         11
208: invokestatic  #23
211: new           #96
214: dup
215: aload         11
217: invokespecial #97
220: astore        12
222: new           #96
225: dup
226: aload         10
228: aload         12
230: invokespecial #99
233: astore        13
235: bipush        6
237: newarray       double
239: dup
240: iconst_0
241: dconst_0
242: dastore
243: dup
244: iconst_1
245: ldc2_w        #10
248: dastore
249: dup
250: iconst_2
251: dconst_1
252: dastore
253: dup
254: iconst_3
255: dconst_0
256: dastore
257: dup
258: iconst_4
259: dconst_1
260: dastore
261: dup
262: iconst_5
263: ldc2_w        #21
266: dastore
267: astore        14
269: aload         14
271: invokestatic  #23
274: new           #96
277: dup
278: aload         14
280: invokespecial #97
283: astore        15
285: bipush        6
287: newarray       double
289: dup
290: iconst_0
291: dconst_0
292: dastore
293: dup
294: iconst_1
295: ldc2_w        #10
298: dastore
299: dup
300: iconst_2
301: dconst_1
302: dastore
303: dup
304: iconst_3
305: dconst_0
306: dastore
307: dup
308: iconst_4
309: dconst_1
310: dastore
311: dup
312: iconst_5
313: ldc2_w        #21
316: dastore
317: astore        16
319: aload         16
321: invokestatic  #23
324: new           #96
327: dup
328: aload         16
330: invokespecial #97
333: astore        17
335: new           #96
338: dup
339: aload         15
341: aload         17
343: invokespecial #99
346: astore        18
348: bipush        6
350: newarray       double
352: dup
353: iconst_0
354: dconst_0
355: dastore
356: dup
357: iconst_1
358: ldc2_w        #10
361: dastore
362: dup
363: iconst_2
364: dconst_1
365: dastore
366: dup
367: iconst_3
368: dconst_0
369: dastore
370: dup
371: iconst_4
372: dconst_1
373: dastore
374: dup
375: iconst_5
376: ldc2_w        #21
379: dastore
380: astore        19
382: aload         19
384: invokestatic  #23
387: new           #96
390: dup
391: aload         19
393: invokespecial #97
396: astore        20
398: new           #96
401: dup
402: aload         17
404: aload         20
406: invokespecial #99
409: astore        21
411: aload         12
413: dconst_1
414: dconst_1
415: aload         20
417: invokevirtual #100
420: astore        22
422: aload         12
424: invokevirtual #101
427: astore        23
429: bipush        6
431: newarray       double
433: dup
434: iconst_0
435: dconst_0
436: dastore
437: dup
438: iconst_1
439: ldc2_w        #10
442: dastore
443: dup
444: iconst_2
445: dconst_1
446: dastore
447: dup
448: iconst_3
449: dconst_0
450: dastore
451: dup
452: iconst_4
453: dconst_1
454: dastore
455: dup
456: iconst_5
457: ldc2_w        #21
460: dastore
461: astore        24
463: aload         24
465: invokestatic  #23
468: aload         24
470: invokestatic  #24
473: astore        25
475: new           #58
478: dup
479: aload         24
481: ldc2_w        #59
484: invokespecial #61
487: astore        26
489: aload         23
491: aload         24
493: invokestatic  #206
496: dstore        27
498: aload         24
500: invokestatic  #23
503: aload         24
505: invokestatic  #207
508: astore        29
510: aload         24
512: ldc2_w        #208
515: invokestatic  #210
518: astore        30
520: aload         4
522: ldc           #223
524: aload         7
526: aload         8
528: aload         24
530: invokevirtual #12
533: astore        31
535: ldc           #13
537: invokestatic  #14
540: goto          545
543: astore        31
545: aload_1
546: invokestatic  #16
549: aload_1
550: invokestatic  #17
553: ldc           #26
555: invokestatic  #19
558: aload         5
560: invokestatic  #16
563: aload         6
565: invokestatic  #16
568: new           #39
571: dup
572: invokespecial #40
575: ldc           #41
577: invokevirtual #42
580: aload         8
582: invokevirtual #43
585: ldc           #44
587: invokevirtual #42
590: getstatic     #150
593: invokevirtual #43
596: ldc           #41
598: invokevirtual #42
601: invokevirtual #45
604: aload         8
606: getstatic     #150
609: invokevirtual #46
612: invokestatic  #47
615: aload         9
617: invokestatic  #16
620: aload         9
622: invokestatic  #17
625: ldc           #26
627: invokestatic  #19
630: aload         11
632: invokestatic  #16
635: aload         11
637: invokestatic  #17
640: ldc           #26
642: invokestatic  #19
645: aload         14
647: invokestatic  #16
650: aload         14
652: invokestatic  #17
655: ldc           #26
657: invokestatic  #19
660: aload         16
662: invokestatic  #16
665: aload         16
667: invokestatic  #17
670: ldc           #26
672: invokestatic  #19
675: aload         19
677: invokestatic  #16
680: aload         19
682: invokestatic  #17
685: ldc           #26
687: invokestatic  #19
690: aload         22
692: invokestatic  #16
695: aload         23
697: invokestatic  #16
700: aload         23
702: invokestatic  #17
705: ldc           #105
707: invokestatic  #19
710: aload         24
712: invokestatic  #16
715: aload         24
717: invokestatic  #17
720: ldc           #26
722: invokestatic  #19
725: aload         25
727: invokestatic  #16
730: new           #39
733: dup
734: invokespecial #40
737: ldc           #41
739: invokevirtual #42
742: dload         27
744: invokevirtual #121
747: ldc           #44
749: invokevirtual #42
752: ldc2_w        #212
755: invokevirtual #121
758: ldc           #41
760: invokevirtual #42
763: invokevirtual #45
766: dload         27
768: ldc2_w        #212
771: dcmpl
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #47
783: aload         29
785: invokestatic  #16
788: aload         30
790: invokestatic  #16
793: aload         30
795: invokestatic  #17
798: ldc           #214
800: invokestatic  #19
803: return
Exception table:
from    to  target type
520   540   543   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 3670
End line: 3712
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        double double51 = mersenneTwister44.nextGaussian();
        int int52 = mersenneTwister44.nextInt();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.3718243240836017d + "'", double51 == 0.3718243240836017d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1573468864) + "'", int52 == (-1573468864));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #352
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         14
288: invokevirtual #168
291: dstore        20
293: aload         14
295: invokevirtual #309
298: istore        22
300: aload_1
301: invokestatic  #16
304: aload_1
305: invokestatic  #17
308: ldc           #26
310: invokestatic  #19
313: aload_3
314: invokestatic  #16
317: aload         4
319: invokestatic  #16
322: aload         5
324: invokestatic  #16
327: aload         5
329: invokestatic  #17
332: ldc           #26
334: invokestatic  #19
337: aload         7
339: invokestatic  #16
342: aload         9
344: invokestatic  #16
347: aload         10
349: invokestatic  #16
352: aload         10
354: invokestatic  #17
357: ldc           #26
359: invokestatic  #19
362: aload         11
364: invokestatic  #16
367: new           #39
370: dup
371: invokespecial #40
374: ldc           #41
376: invokevirtual #42
379: iload         12
381: invokevirtual #84
384: ldc           #44
386: invokevirtual #42
389: iconst_0
390: invokevirtual #84
393: ldc           #41
395: invokevirtual #42
398: invokevirtual #45
401: iload         12
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #47
414: new           #39
417: dup
418: invokespecial #40
421: ldc           #41
423: invokevirtual #42
426: dload         15
428: invokevirtual #121
431: ldc           #44
433: invokevirtual #42
436: ldc2_w        #74
439: invokevirtual #121
442: ldc           #41
444: invokevirtual #42
447: invokevirtual #45
450: dload         15
452: ldc2_w        #74
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #47
467: new           #39
470: dup
471: invokespecial #40
474: ldc           #41
476: invokevirtual #42
479: dload         17
481: invokevirtual #121
484: ldc           #44
486: invokevirtual #42
489: ldc2_w        #176
492: invokevirtual #121
495: ldc           #41
497: invokevirtual #42
500: invokevirtual #45
503: dload         17
505: ldc2_w        #176
508: dcmpl
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #47
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: dload         20
534: invokevirtual #121
537: ldc           #44
539: invokevirtual #42
542: ldc2_w        #353
545: invokevirtual #121
548: ldc           #41
550: invokevirtual #42
553: invokevirtual #45
556: dload         20
558: ldc2_w        #353
561: dcmpl
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #47
573: new           #39
576: dup
577: invokespecial #40
580: ldc           #41
582: invokevirtual #42
585: iload         22
587: invokevirtual #81
590: ldc           #44
592: invokevirtual #42
595: ldc_w         #355
598: invokevirtual #81
601: ldc           #41
603: invokevirtual #42
606: invokevirtual #45
609: iload         22
611: ldc_w         #355
614: if_icmpne     621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #47
625: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 3715
End line: 3774
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        double[] doubleArray7 = null;
        double[] doubleArray11 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray12 = new double[][] { doubleArray11 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix14 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray12, true);
        double[][] doubleArray15 = array2DRowRealMatrix14.getData();
        double[] doubleArray18 = new double[] { '4' };
        double[] doubleArray19 = new double[] {};
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray19);
        array2DRowRealMatrix14.setColumn((int) (short) 1, doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.RealMatrix realMatrix30 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray28);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair32 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray28, (double) (-1.0f));
        double[] doubleArray33 = pointValuePair32.getPoint();
        double double34 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray18, doubleArray33);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray33);
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray33);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) 0.52885604f, false);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.RealMatrix realMatrix48 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray46);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair50 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray46, (double) (-1.0f));
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46, true);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair54 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray46, (double) (-1.0f));
        boolean boolean55 = pointValuePairConvergenceChecker5.converged((int) (byte) -1, pointValuePair39, pointValuePair54);
        double[] doubleArray56 = pointValuePair39.getPointRef();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.5087060905671d + "'", double35 == 100.5087060905671d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(doubleArray56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aconst_null
56: astore        6
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #87
66: dastore
67: dup
68: iconst_1
69: ldc2_w        #59
72: dastore
73: dup
74: iconst_2
75: ldc2_w        #59
78: dastore
79: astore        7
81: iconst_1
82: anewarray     #89
85: dup
86: iconst_0
87: aload         7
89: aastore
90: astore        8
92: new           #90
95: dup
96: aload         8
98: iconst_1
99: invokespecial #91
102: astore        9
104: aload         9
106: invokevirtual #92
109: astore        10
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #70
119: dastore
120: astore        11
122: iconst_0
123: newarray       double
125: astore        12
127: aload         11
129: aload         12
131: invokestatic  #72
134: istore        13
136: aload         9
138: iconst_1
139: aload         11
141: invokevirtual #93
144: bipush        6
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #10
157: dastore
158: dup
159: iconst_2
160: dconst_1
161: dastore
162: dup
163: iconst_3
164: dconst_0
165: dastore
166: dup
167: iconst_4
168: dconst_1
169: dastore
170: dup
171: iconst_5
172: ldc2_w        #21
175: dastore
176: astore        14
178: aload         14
180: invokestatic  #23
183: aload         14
185: invokestatic  #24
188: astore        15
190: new           #58
193: dup
194: aload         14
196: ldc2_w        #59
199: invokespecial #61
202: astore        16
204: aload         16
206: invokevirtual #62
209: astore        17
211: aload         11
213: aload         17
215: invokestatic  #134
218: dstore        18
220: aload         17
222: invokestatic  #135
225: dstore        20
227: aload         6
229: aload         17
231: invokestatic  #72
234: istore        22
236: new           #58
239: dup
240: aload         6
242: ldc2_w        #357
245: iconst_0
246: invokespecial #262
249: astore        23
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: dconst_0
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #10
264: dastore
265: dup
266: iconst_2
267: dconst_1
268: dastore
269: dup
270: iconst_3
271: dconst_0
272: dastore
273: dup
274: iconst_4
275: dconst_1
276: dastore
277: dup
278: iconst_5
279: ldc2_w        #21
282: dastore
283: astore        24
285: aload         24
287: invokestatic  #23
290: aload         24
292: invokestatic  #24
295: astore        25
297: new           #58
300: dup
301: aload         24
303: ldc2_w        #59
306: invokespecial #61
309: astore        26
311: new           #96
314: dup
315: aload         24
317: iconst_1
318: invokespecial #359
321: astore        27
323: new           #58
326: dup
327: aload         24
329: ldc2_w        #59
332: invokespecial #61
335: astore        28
337: aload         5
339: iconst_m1
340: aload         23
342: aload         28
344: invokeinterface #63,  4
349: istore        29
351: aload         23
353: invokevirtual #360
356: astore        30
358: new           #39
361: dup
362: invokespecial #40
365: ldc           #41
367: invokevirtual #42
370: iload_3
371: invokevirtual #81
374: ldc           #44
376: invokevirtual #42
379: iconst_0
380: invokevirtual #81
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: iload_3
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #47
403: aload         4
405: invokestatic  #16
408: aload         5
410: invokestatic  #16
413: aload         7
415: invokestatic  #16
418: aload         7
420: invokestatic  #17
423: ldc           #94
425: invokestatic  #19
428: aload         8
430: invokestatic  #16
433: aload         10
435: invokestatic  #16
438: aload         11
440: invokestatic  #16
443: aload         11
445: invokestatic  #17
448: ldc           #82
450: invokestatic  #19
453: aload         12
455: invokestatic  #16
458: aload         12
460: invokestatic  #17
463: ldc           #83
465: invokestatic  #19
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: iload         13
482: invokevirtual #84
485: ldc           #44
487: invokevirtual #42
490: iconst_0
491: invokevirtual #84
494: ldc           #41
496: invokevirtual #42
499: invokevirtual #45
502: iload         13
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #47
515: aload         14
517: invokestatic  #16
520: aload         14
522: invokestatic  #17
525: ldc           #26
527: invokestatic  #19
530: aload         15
532: invokestatic  #16
535: aload         17
537: invokestatic  #16
540: aload         17
542: invokestatic  #17
545: ldc           #26
547: invokestatic  #19
550: new           #39
553: dup
554: invokespecial #40
557: ldc           #41
559: invokevirtual #42
562: dload         18
564: invokevirtual #121
567: ldc           #44
569: invokevirtual #42
572: ldc2_w        #70
575: invokevirtual #121
578: ldc           #41
580: invokevirtual #42
583: invokevirtual #45
586: dload         18
588: ldc2_w        #70
591: dcmpl
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #47
603: new           #39
606: dup
607: invokespecial #40
610: ldc           #41
612: invokevirtual #42
615: dload         20
617: invokevirtual #121
620: ldc           #44
622: invokevirtual #42
625: ldc2_w        #136
628: invokevirtual #121
631: ldc           #41
633: invokevirtual #42
636: invokevirtual #45
639: dload         20
641: ldc2_w        #136
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #47
656: new           #39
659: dup
660: invokespecial #40
663: ldc           #41
665: invokevirtual #42
668: iload         22
670: invokevirtual #84
673: ldc           #44
675: invokevirtual #42
678: iconst_0
679: invokevirtual #84
682: ldc           #41
684: invokevirtual #42
687: invokevirtual #45
690: iload         22
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #47
703: aload         24
705: invokestatic  #16
708: aload         24
710: invokestatic  #17
713: ldc           #26
715: invokestatic  #19
718: aload         25
720: invokestatic  #16
723: new           #39
726: dup
727: invokespecial #40
730: ldc           #41
732: invokevirtual #42
735: iload         29
737: invokevirtual #84
740: ldc           #44
742: invokevirtual #42
745: iconst_0
746: invokevirtual #84
749: ldc           #41
751: invokevirtual #42
754: invokevirtual #45
757: iload         29
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #47
770: aload         30
772: invokestatic  #155
775: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 3777
End line: 3791
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair4 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #125
42: istore_3
43: aload_2
44: invokevirtual #51
47: astore        4
49: ldc           #29
51: invokestatic  #14
54: goto          59
57: astore        4
59: new           #39
62: dup
63: invokespecial #40
66: ldc           #41
68: invokevirtual #42
71: iload_3
72: invokevirtual #81
75: ldc           #44
77: invokevirtual #42
80: iconst_0
81: invokevirtual #81
84: ldc           #41
86: invokevirtual #42
89: invokevirtual #45
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #47
104: return
Exception table:
from    to  target type
43    54    57   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 3794
End line: 3807
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        mersenneTwister15.setSeed(0);
        float float21 = mersenneTwister15.nextFloat();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.54881346f + "'", float21 == 0.54881346f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_2
101: iconst_0
102: invokevirtual #169
105: aload_2
106: invokevirtual #113
109: fstore        5
111: aload_1
112: invokestatic  #16
115: aload_1
116: invokestatic  #17
119: ldc           #26
121: invokestatic  #19
124: new           #39
127: dup
128: invokespecial #40
131: ldc           #41
133: invokevirtual #42
136: fload         5
138: invokevirtual #119
141: ldc           #44
143: invokevirtual #42
146: ldc_w         #363
149: invokevirtual #119
152: ldc           #41
154: invokevirtual #42
157: invokevirtual #45
160: fload         5
162: ldc_w         #363
165: fcmpl
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #47
177: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 3810
End line: 3838
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        mersenneTwister15.setSeed(0);
        double double21 = mersenneTwister15.nextGaussian();
        int[] intArray26 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(intArray26);
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26);
        int[] intArray33 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister34 = new org.apache.commons.math3.random.MersenneTwister(intArray33);
        int int35 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray28, intArray33);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister36 = new org.apache.commons.math3.random.MersenneTwister(intArray33);
        mersenneTwister15.setSeed(intArray33);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7805794640849414d) + "'", double21 == (-0.7805794640849414d));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_2
101: iconst_0
102: invokevirtual #169
105: aload_2
106: invokevirtual #168
109: dstore        5
111: iconst_4
112: newarray       int
114: dup
115: iconst_0
116: bipush        100
118: iastore
119: dup
120: iconst_1
121: iconst_0
122: iastore
123: dup
124: iconst_2
125: bipush        100
127: iastore
128: dup
129: iconst_3
130: bipush        52
132: iastore
133: astore        7
135: new           #32
138: dup
139: aload         7
141: invokespecial #112
144: astore        8
146: aload         7
148: invokestatic  #226
151: astore        9
153: iconst_4
154: newarray       int
156: dup
157: iconst_0
158: bipush        100
160: iastore
161: dup
162: iconst_1
163: iconst_0
164: iastore
165: dup
166: iconst_2
167: bipush        100
169: iastore
170: dup
171: iconst_3
172: bipush        52
174: iastore
175: astore        10
177: new           #32
180: dup
181: aload         10
183: invokespecial #112
186: astore        11
188: aload         9
190: aload         10
192: invokestatic  #306
195: istore        12
197: new           #32
200: dup
201: aload         10
203: invokespecial #112
206: astore        13
208: aload_2
209: aload         10
211: invokevirtual #228
214: aload_1
215: invokestatic  #16
218: aload_1
219: invokestatic  #17
222: ldc           #26
224: invokestatic  #19
227: new           #39
230: dup
231: invokespecial #40
234: ldc           #41
236: invokevirtual #42
239: dload         5
241: invokevirtual #121
244: ldc           #44
246: invokevirtual #42
249: ldc2_w        #365
252: invokevirtual #121
255: ldc           #41
257: invokevirtual #42
260: invokevirtual #45
263: dload         5
265: ldc2_w        #365
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #47
280: aload         7
282: invokestatic  #16
285: aload         7
287: invokestatic  #117
290: ldc           #118
292: invokestatic  #19
295: aload         9
297: invokestatic  #16
300: aload         9
302: invokestatic  #117
305: ldc           #118
307: invokestatic  #19
310: aload         10
312: invokestatic  #16
315: aload         10
317: invokestatic  #117
320: ldc           #118
322: invokestatic  #19
325: new           #39
328: dup
329: invokespecial #40
332: ldc           #41
334: invokevirtual #42
337: iload         12
339: invokevirtual #81
342: ldc           #44
344: invokevirtual #42
347: iconst_0
348: invokevirtual #81
351: ldc           #41
353: invokevirtual #42
356: invokevirtual #45
359: iload         12
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #47
372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 3841
End line: 3861
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aload_2
62: invokevirtual #56
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: new           #39
130: dup
131: invokespecial #40
134: ldc           #41
136: invokevirtual #42
139: iload         5
141: invokevirtual #81
144: ldc           #44
146: invokevirtual #42
149: iconst_0
150: invokevirtual #81
153: ldc           #41
155: invokevirtual #42
158: invokevirtual #45
161: iload         5
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #47
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         6
188: invokevirtual #81
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #81
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         6
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #47
221: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 3864
End line: 3882
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = cMAESOptimizer2.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #28
59: astore        6
61: ldc           #29
63: invokestatic  #14
66: goto          71
69: astore        6
71: new           #39
74: dup
75: invokespecial #40
78: ldc           #41
80: invokevirtual #42
83: iload_3
84: invokevirtual #81
87: ldc           #44
89: invokevirtual #42
92: iconst_0
93: invokevirtual #81
96: ldc           #41
98: invokevirtual #42
101: invokevirtual #45
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #47
116: aload         4
118: invokestatic  #16
121: new           #39
124: dup
125: invokespecial #40
128: ldc           #41
130: invokevirtual #42
133: iload         5
135: invokevirtual #81
138: ldc           #44
140: invokevirtual #42
143: iconst_0
144: invokevirtual #81
147: ldc           #41
149: invokevirtual #42
152: invokevirtual #45
155: iload         5
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #47
168: return
Exception table:
from    to  target type
55    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 3885
End line: 3934
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        int int66 = cMAESOptimizer64.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aload         20
417: invokevirtual #69
420: istore        22
422: aload_1
423: invokestatic  #16
426: aload_1
427: invokestatic  #17
430: ldc           #26
432: invokestatic  #19
435: aload_3
436: invokestatic  #16
439: aload         4
441: invokestatic  #16
444: aload         4
446: invokestatic  #17
449: ldc           #26
451: invokestatic  #19
454: aload         6
456: invokestatic  #16
459: aload         6
461: invokestatic  #17
464: ldc           #26
466: invokestatic  #19
469: aload         9
471: invokestatic  #16
474: aload         9
476: invokestatic  #17
479: ldc           #26
481: invokestatic  #19
484: aload         11
486: invokestatic  #16
489: aload         11
491: invokestatic  #17
494: ldc           #26
496: invokestatic  #19
499: aload         14
501: invokestatic  #16
504: aload         14
506: invokestatic  #17
509: ldc           #26
511: invokestatic  #19
514: aload         17
516: invokestatic  #16
519: aload         18
521: invokestatic  #16
524: aload         18
526: invokestatic  #17
529: ldc           #105
531: invokestatic  #19
534: aload         21
536: invokestatic  #16
539: new           #39
542: dup
543: invokespecial #40
546: ldc           #41
548: invokevirtual #42
551: iload         22
553: invokevirtual #81
556: ldc           #44
558: invokevirtual #42
561: iconst_0
562: invokevirtual #81
565: ldc           #41
567: invokevirtual #42
570: invokevirtual #45
573: iload         22
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #47
586: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 3937
End line: 3984
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        double double5 = blockRealMatrix2.getEntry(0, (int) '#');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix6 = blockRealMatrix2.transpose();
        int int7 = blockRealMatrix6.getColumnDimension();
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.RealMatrix realMatrix17 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair19 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray15, (double) (-1.0f));
        double[] doubleArray20 = pointValuePair19.getPoint();
        int[] intArray27 = new int[] { (-127) };
        int[] intArray28 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister29 = new org.apache.commons.math3.random.MersenneTwister(intArray27);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister46 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker48 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray38, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister46, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = cMAESOptimizer49.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray20, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister29, false, pointValuePairConvergenceChecker50);
        double[] doubleArray52 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray53 = blockRealMatrix6.preMultiply(doubleArray52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 30,000");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-127]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: bipush        35
41: invokevirtual #371
44: dstore_2
45: aload_1
46: invokevirtual #372
49: astore        4
51: aload         4
53: invokevirtual #373
56: istore        5
58: bipush        6
60: newarray       double
62: dup
63: iconst_0
64: dconst_0
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #10
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: dup
77: iconst_3
78: dconst_0
79: dastore
80: dup
81: iconst_4
82: dconst_1
83: dastore
84: dup
85: iconst_5
86: ldc2_w        #21
89: dastore
90: astore        6
92: aload         6
94: invokestatic  #23
97: aload         6
99: invokestatic  #24
102: astore        7
104: new           #58
107: dup
108: aload         6
110: ldc2_w        #59
113: invokespecial #61
116: astore        8
118: aload         8
120: invokevirtual #62
123: astore        9
125: iconst_1
126: newarray       int
128: dup
129: iconst_0
130: bipush        -127
132: iastore
133: astore        10
135: aload         10
137: invokestatic  #226
140: astore        11
142: new           #32
145: dup
146: aload         10
148: invokespecial #112
151: astore        12
153: bipush        6
155: newarray       double
157: dup
158: iconst_0
159: dconst_0
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #10
166: dastore
167: dup
168: iconst_2
169: dconst_1
170: dastore
171: dup
172: iconst_3
173: dconst_0
174: dastore
175: dup
176: iconst_4
177: dconst_1
178: dastore
179: dup
180: iconst_5
181: ldc2_w        #21
184: dastore
185: astore        13
187: aload         13
189: invokestatic  #23
192: new           #32
195: dup
196: iconst_1
197: invokespecial #33
200: astore        14
202: new           #34
205: dup
206: invokespecial #35
209: astore        15
211: new           #8
214: dup
215: iconst_5
216: aload         13
218: bipush        100
220: dconst_0
221: iconst_0
222: iconst_0
223: bipush        100
225: aload         14
227: iconst_1
228: aload         15
230: invokespecial #36
233: astore        16
235: aload         16
237: invokevirtual #53
240: astore        17
242: new           #8
245: dup
246: bipush        36
248: aload         9
250: bipush        97
252: ldc2_w        #374
255: iconst_1
256: iconst_0
257: bipush        10
259: aload         12
261: iconst_0
262: aload         17
264: invokespecial #36
267: astore        18
269: aload         9
271: invokestatic  #269
274: astore        19
276: aload         4
278: aload         19
280: invokevirtual #188
283: astore        20
285: ldc_w         #376
288: invokestatic  #14
291: goto          296
294: astore        20
296: new           #39
299: dup
300: invokespecial #40
303: ldc           #41
305: invokevirtual #42
308: dload_2
309: invokevirtual #121
312: ldc           #44
314: invokevirtual #42
317: dconst_0
318: invokevirtual #121
321: ldc           #41
323: invokevirtual #42
326: invokevirtual #45
329: dload_2
330: dconst_0
331: dcmpl
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #47
343: aload         4
345: invokestatic  #16
348: new           #39
351: dup
352: invokespecial #40
355: ldc           #41
357: invokevirtual #42
360: iload         5
362: invokevirtual #81
365: ldc           #44
367: invokevirtual #42
370: iconst_5
371: invokevirtual #81
374: ldc           #41
376: invokevirtual #42
379: invokevirtual #45
382: iload         5
384: iconst_5
385: if_icmpne     392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #47
396: aload         6
398: invokestatic  #16
401: aload         6
403: invokestatic  #17
406: ldc           #26
408: invokestatic  #19
411: aload         7
413: invokestatic  #16
416: aload         9
418: invokestatic  #16
421: aload         9
423: invokestatic  #17
426: ldc           #26
428: invokestatic  #19
431: aload         10
433: invokestatic  #16
436: aload         10
438: invokestatic  #117
441: ldc           #229
443: invokestatic  #19
446: aload         11
448: invokestatic  #16
451: aload         11
453: invokestatic  #117
456: ldc           #229
458: invokestatic  #19
461: aload         13
463: invokestatic  #16
466: aload         13
468: invokestatic  #17
471: ldc           #26
473: invokestatic  #19
476: aload         17
478: invokestatic  #16
481: aload         19
483: invokestatic  #16
486: aload         19
488: invokestatic  #17
491: ldc           #26
493: invokestatic  #19
496: return
Exception table:
from    to  target type
276   291   294   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 3987
End line: 4026
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         10
288: invokestatic  #23
291: aload_1
292: invokestatic  #16
295: aload_1
296: invokestatic  #17
299: ldc           #26
301: invokestatic  #19
304: aload_3
305: invokestatic  #16
308: aload         4
310: invokestatic  #16
313: aload         5
315: invokestatic  #16
318: aload         5
320: invokestatic  #17
323: ldc           #26
325: invokestatic  #19
328: aload         7
330: invokestatic  #16
333: aload         9
335: invokestatic  #16
338: aload         10
340: invokestatic  #16
343: aload         10
345: invokestatic  #17
348: ldc           #26
350: invokestatic  #19
353: aload         11
355: invokestatic  #16
358: new           #39
361: dup
362: invokespecial #40
365: ldc           #41
367: invokevirtual #42
370: iload         12
372: invokevirtual #84
375: ldc           #44
377: invokevirtual #42
380: iconst_0
381: invokevirtual #84
384: ldc           #41
386: invokevirtual #42
389: invokevirtual #45
392: iload         12
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #47
405: new           #39
408: dup
409: invokespecial #40
412: ldc           #41
414: invokevirtual #42
417: dload         15
419: invokevirtual #121
422: ldc           #44
424: invokevirtual #42
427: ldc2_w        #74
430: invokevirtual #121
433: ldc           #41
435: invokevirtual #42
438: invokevirtual #45
441: dload         15
443: ldc2_w        #74
446: dcmpl
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #47
458: new           #39
461: dup
462: invokespecial #40
465: ldc           #41
467: invokevirtual #42
470: dload         17
472: invokevirtual #121
475: ldc           #44
477: invokevirtual #42
480: ldc2_w        #176
483: invokevirtual #121
486: ldc           #41
488: invokevirtual #42
491: invokevirtual #45
494: dload         17
496: ldc2_w        #176
499: dcmpl
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #47
511: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 4029
End line: 4056
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair26 = cMAESOptimizer18.optimize(0, multivariateFunction23, goalType24, doubleArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aconst_null
122: astore        8
124: getstatic     #37
127: astore        9
129: aconst_null
130: astore        10
132: aload         4
134: iconst_0
135: aload         8
137: aload         9
139: aload         10
141: invokevirtual #12
144: astore        11
146: ldc           #29
148: invokestatic  #14
151: goto          156
154: astore        11
156: aload_1
157: invokestatic  #16
160: aload_1
161: invokestatic  #17
164: ldc           #26
166: invokestatic  #19
169: aload         5
171: invokestatic  #16
174: aload         6
176: invokestatic  #16
179: new           #39
182: dup
183: invokespecial #40
186: ldc           #41
188: invokevirtual #42
191: iload         7
193: invokevirtual #81
196: ldc           #44
198: invokevirtual #42
201: iconst_0
202: invokevirtual #81
205: ldc           #41
207: invokevirtual #42
210: invokevirtual #45
213: iload         7
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #47
226: new           #39
229: dup
230: invokespecial #40
233: ldc           #41
235: invokevirtual #42
238: aload         9
240: invokevirtual #43
243: ldc           #44
245: invokevirtual #42
248: getstatic     #37
251: invokevirtual #43
254: ldc           #41
256: invokevirtual #42
259: invokevirtual #45
262: aload         9
264: getstatic     #37
267: invokevirtual #46
270: invokestatic  #47
273: return
Exception table:
from    to  target type
132   151   154   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 4059
End line: 4124
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        double[] doubleArray71 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix73 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix74 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealVector realVector75 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray71);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray71);
        double[] doubleArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = org.apache.commons.math3.util.MathArrays.distance(doubleArray71, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix73);
        org.junit.Assert.assertNotNull(realMatrix74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: bipush        6
410: newarray       double
412: dup
413: iconst_0
414: dconst_0
415: dastore
416: dup
417: iconst_1
418: ldc2_w        #10
421: dastore
422: dup
423: iconst_2
424: dconst_1
425: dastore
426: dup
427: iconst_3
428: dconst_0
429: dastore
430: dup
431: iconst_4
432: dconst_1
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #21
439: dastore
440: astore        21
442: aload         21
444: invokestatic  #23
447: aload         21
449: invokestatic  #24
452: astore        22
454: aload         21
456: invokestatic  #192
459: astore        23
461: aload         21
463: invokestatic  #193
466: astore        24
468: aload         18
470: aload         21
472: invokestatic  #72
475: istore        25
477: aconst_null
478: astore        26
480: aload         21
482: aload         26
484: invokestatic  #211
487: dstore        27
489: ldc           #29
491: invokestatic  #14
494: goto          499
497: astore        27
499: aload_1
500: invokestatic  #16
503: aload_1
504: invokestatic  #17
507: ldc           #26
509: invokestatic  #19
512: aload_3
513: invokestatic  #16
516: aload         4
518: invokestatic  #16
521: aload         4
523: invokestatic  #17
526: ldc           #26
528: invokestatic  #19
531: aload         6
533: invokestatic  #16
536: aload         6
538: invokestatic  #17
541: ldc           #26
543: invokestatic  #19
546: aload         9
548: invokestatic  #16
551: aload         9
553: invokestatic  #17
556: ldc           #26
558: invokestatic  #19
561: aload         11
563: invokestatic  #16
566: aload         11
568: invokestatic  #17
571: ldc           #26
573: invokestatic  #19
576: aload         14
578: invokestatic  #16
581: aload         14
583: invokestatic  #17
586: ldc           #26
588: invokestatic  #19
591: aload         17
593: invokestatic  #16
596: aload         18
598: invokestatic  #16
601: aload         18
603: invokestatic  #17
606: ldc           #105
608: invokestatic  #19
611: aload         21
613: invokestatic  #16
616: aload         21
618: invokestatic  #17
621: ldc           #26
623: invokestatic  #19
626: aload         22
628: invokestatic  #16
631: aload         23
633: invokestatic  #16
636: aload         24
638: invokestatic  #16
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         25
655: invokevirtual #84
658: ldc           #44
660: invokevirtual #42
663: iconst_0
664: invokevirtual #84
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         25
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #47
688: return
Exception table:
from    to  target type
480   494   497   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 4127
End line: 4138
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #232
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_3
68: invokevirtual #81
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #81
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #47
100: aload         4
102: invokestatic  #16
105: aload         5
107: invokestatic  #16
110: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 4141
End line: 4165
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = cMAESOptimizer2.optimize((int) '4', multivariateFunction8, goalType9, doubleArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + goalType9 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType9.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #381
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aload_2
56: invokevirtual #130
59: astore        6
61: aconst_null
62: astore        7
64: getstatic     #37
67: astore        8
69: aconst_null
70: astore        9
72: aload_2
73: bipush        52
75: aload         7
77: aload         8
79: aload         9
81: invokevirtual #12
84: astore        10
86: ldc           #29
88: invokestatic  #14
91: goto          96
94: astore        10
96: new           #39
99: dup
100: invokespecial #40
103: ldc           #41
105: invokevirtual #42
108: iload_3
109: invokevirtual #81
112: ldc           #44
114: invokevirtual #42
117: iconst_0
118: invokevirtual #81
121: ldc           #41
123: invokevirtual #42
126: invokevirtual #45
129: iload_3
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #47
141: new           #39
144: dup
145: invokespecial #40
148: ldc           #41
150: invokevirtual #42
153: iload         4
155: invokevirtual #81
158: ldc           #44
160: invokevirtual #42
163: iconst_0
164: invokevirtual #81
167: ldc           #41
169: invokevirtual #42
172: invokevirtual #45
175: iload         4
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #47
188: new           #39
191: dup
192: invokespecial #40
195: ldc           #41
197: invokevirtual #42
200: iload         5
202: invokevirtual #81
205: ldc           #44
207: invokevirtual #42
210: iconst_0
211: invokevirtual #81
214: ldc           #41
216: invokevirtual #42
219: invokevirtual #45
222: iload         5
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #47
235: aload         6
237: invokestatic  #16
240: new           #39
243: dup
244: invokespecial #40
247: ldc           #41
249: invokevirtual #42
252: aload         8
254: invokevirtual #43
257: ldc           #44
259: invokevirtual #42
262: getstatic     #37
265: invokevirtual #43
268: ldc           #41
270: invokevirtual #42
273: invokevirtual #45
276: aload         8
278: getstatic     #37
281: invokevirtual #46
284: invokestatic  #47
287: return
Exception table:
from    to  target type
72    91    94   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 4168
End line: 4181
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #382
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aload_2
56: invokevirtual #53
59: astore        6
61: new           #39
64: dup
65: invokespecial #40
68: ldc           #41
70: invokevirtual #42
73: iload_3
74: invokevirtual #81
77: ldc           #44
79: invokevirtual #42
82: iconst_0
83: invokevirtual #81
86: ldc           #41
88: invokevirtual #42
91: invokevirtual #45
94: iload_3
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #47
106: new           #39
109: dup
110: invokespecial #40
113: ldc           #41
115: invokevirtual #42
118: iload         4
120: invokevirtual #81
123: ldc           #44
125: invokevirtual #42
128: iconst_0
129: invokevirtual #81
132: ldc           #41
134: invokevirtual #42
137: invokevirtual #45
140: iload         4
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #47
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         5
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         5
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: aload         6
202: invokestatic  #16
205: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 4184
End line: 4202
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor5 = cMAESOptimizer2.evaluations;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(incrementor5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #383
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: getfield      #191
53: astore        5
55: aload_2
56: invokevirtual #54
59: astore        6
61: ldc           #29
63: invokestatic  #14
66: goto          71
69: astore        6
71: new           #39
74: dup
75: invokespecial #40
78: ldc           #41
80: invokevirtual #42
83: iload_3
84: invokevirtual #81
87: ldc           #44
89: invokevirtual #42
92: iconst_0
93: invokevirtual #81
96: ldc           #41
98: invokevirtual #42
101: invokevirtual #45
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #47
116: new           #39
119: dup
120: invokespecial #40
123: ldc           #41
125: invokevirtual #42
128: iload         4
130: invokevirtual #81
133: ldc           #44
135: invokevirtual #42
138: iconst_0
139: invokevirtual #81
142: ldc           #41
144: invokevirtual #42
147: invokevirtual #45
150: iload         4
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #47
163: aload         5
165: invokestatic  #16
168: return
Exception table:
from    to  target type
55    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 4205
End line: 4225
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int23 = cMAESOptimizer18.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload         4
130: invokevirtual #69
133: istore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: aload         6
155: invokestatic  #16
158: new           #39
161: dup
162: invokespecial #40
165: ldc           #41
167: invokevirtual #42
170: iload         7
172: invokevirtual #81
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #81
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         7
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #47
205: aload         8
207: invokestatic  #16
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload         9
224: invokevirtual #81
227: ldc           #44
229: invokevirtual #42
232: iconst_0
233: invokevirtual #81
236: ldc           #41
238: invokevirtual #42
241: invokevirtual #45
244: iload         9
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #47
257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 4228
End line: 4260
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        int int7 = array2DRowRealMatrix6.getRowDimension();
        org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor8 = new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor();
        defaultRealMatrixPreservingVisitor8.visit(31, (int) (short) 100, (double) 97);
        double double13 = array2DRowRealMatrix6.walkInRowOrder((org.apache.commons.math3.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor8);
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray21);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair25 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray21, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray21);
        int int27 = org.apache.commons.math3.util.MathUtils.hash(doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray28 = array2DRowRealMatrix6.operate(doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 3");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 419642177 + "'", int27 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #385
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #87
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #59
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #59
45: dastore
46: astore_1
47: iconst_1
48: anewarray     #89
51: dup
52: iconst_0
53: aload_1
54: aastore
55: astore_2
56: new           #90
59: dup
60: aload_2
61: iconst_1
62: invokespecial #91
65: astore_3
66: aload_3
67: invokevirtual #182
70: istore        4
72: new           #236
75: dup
76: invokespecial #237
79: astore        5
81: aload         5
83: bipush        31
85: bipush        100
87: ldc2_w        #238
90: invokevirtual #240
93: aload_3
94: aload         5
96: invokevirtual #241
99: dstore        6
101: bipush        6
103: newarray       double
105: dup
106: iconst_0
107: dconst_0
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #10
114: dastore
115: dup
116: iconst_2
117: dconst_1
118: dastore
119: dup
120: iconst_3
121: dconst_0
122: dastore
123: dup
124: iconst_4
125: dconst_1
126: dastore
127: dup
128: iconst_5
129: ldc2_w        #21
132: dastore
133: astore        8
135: aload         8
137: invokestatic  #23
140: aload         8
142: invokestatic  #24
145: astore        9
147: new           #58
150: dup
151: aload         8
153: ldc2_w        #59
156: invokespecial #61
159: astore        10
161: new           #8
164: dup
165: bipush        36
167: aload         8
169: invokespecial #9
172: astore        11
174: aload         8
176: invokestatic  #344
179: istore        12
181: aload_3
182: aload         8
184: invokevirtual #242
187: astore        13
189: ldc           #243
191: invokestatic  #14
194: goto          199
197: astore        13
199: aload_1
200: invokestatic  #16
203: aload_1
204: invokestatic  #17
207: ldc           #94
209: invokestatic  #19
212: aload_2
213: invokestatic  #16
216: new           #39
219: dup
220: invokespecial #40
223: ldc           #41
225: invokevirtual #42
228: iload         4
230: invokevirtual #81
233: ldc           #44
235: invokevirtual #42
238: iconst_1
239: invokevirtual #81
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload         4
252: iconst_1
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #47
264: new           #39
267: dup
268: invokespecial #40
271: ldc           #41
273: invokevirtual #42
276: dload         6
278: invokevirtual #121
281: ldc           #44
283: invokevirtual #42
286: dconst_0
287: invokevirtual #121
290: ldc           #41
292: invokevirtual #42
295: invokevirtual #45
298: dload         6
300: dconst_0
301: dcmpl
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #47
313: aload         8
315: invokestatic  #16
318: aload         8
320: invokestatic  #17
323: ldc           #26
325: invokestatic  #19
328: aload         9
330: invokestatic  #16
333: new           #39
336: dup
337: invokespecial #40
340: ldc           #41
342: invokevirtual #42
345: iload         12
347: invokevirtual #81
350: ldc           #44
352: invokevirtual #42
355: ldc_w         #347
358: invokevirtual #81
361: ldc           #41
363: invokevirtual #42
366: invokevirtual #45
369: iload         12
371: ldc_w         #347
374: if_icmpne     381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #47
385: return
Exception table:
from    to  target type
181   194   197   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 4263
End line: 4313
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray52, 30.012577183478914d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray52, 100, 2146959360);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooLargeException; message: 2,146,959,460 is larger than the maximum (6)");
        } catch (org.apache.commons.math3.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: aload         15
326: invokestatic  #135
329: dstore        16
331: new           #107
334: dup
335: aload         15
337: ldc2_w        #143
340: invokestatic  #76
343: invokespecial #110
346: astore        18
348: new           #8
351: dup
352: bipush        -127
354: aload         15
356: invokespecial #9
359: astore        19
361: aload         15
363: ldc2_w        #387
366: invokestatic  #210
369: astore        20
371: new           #96
374: dup
375: aload         15
377: bipush        100
379: ldc_w         #349
382: invokespecial #249
385: astore        21
387: ldc_w         #389
390: invokestatic  #14
393: goto          398
396: astore        21
398: aload_1
399: invokestatic  #16
402: aload_1
403: invokestatic  #17
406: ldc           #26
408: invokestatic  #19
411: aload_3
412: invokestatic  #16
415: aload_3
416: invokestatic  #17
419: ldc           #26
421: invokestatic  #19
424: aload         6
426: invokestatic  #16
429: aload         6
431: invokestatic  #17
434: ldc           #26
436: invokestatic  #19
439: aload         8
441: invokestatic  #16
444: aload         8
446: invokestatic  #17
449: ldc           #26
451: invokestatic  #19
454: aload         11
456: invokestatic  #16
459: aload         11
461: invokestatic  #17
464: ldc           #26
466: invokestatic  #19
469: aload         14
471: invokestatic  #16
474: aload         15
476: invokestatic  #16
479: aload         15
481: invokestatic  #17
484: ldc           #105
486: invokestatic  #19
489: new           #39
492: dup
493: invokespecial #40
496: ldc           #41
498: invokevirtual #42
501: dload         16
503: invokevirtual #121
506: ldc           #44
508: invokevirtual #42
511: ldc2_w        #145
514: invokevirtual #121
517: ldc           #41
519: invokevirtual #42
522: invokevirtual #45
525: dload         16
527: ldc2_w        #145
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #47
542: aload         20
544: invokestatic  #16
547: aload         20
549: invokestatic  #17
552: ldc_w         #390
555: invokestatic  #19
558: return
Exception table:
from    to  target type
371   393   396   Class org/apache/commons/math3/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 4316
End line: 4389
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector18.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(realVector20);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        org.apache.commons.math3.linear.RealVector realVector31 = arrayRealVector30.copy();
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector30.mapDivide((double) (-1.0f));
        double[] doubleArray40 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray40);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray40);
        org.apache.commons.math3.linear.RealVector realVector44 = arrayRealVector42.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(realVector44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = arrayRealVector30.add(realVector44);
        double double47 = arrayRealVector21.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector30);
        double[] doubleArray50 = new double[] { '4' };
        double[] doubleArray51 = new double[] {};
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray51);
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix61 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray50, doubleArray59);
        double[] doubleArray69 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray69);
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray50, doubleArray69);
        arrayRealVector21.setSubVector(0, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair73 = cMAESOptimizer2.optimize(1, multivariateFunction8, goalType9, doubleArray69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(arrayRealVector46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10102.0d + "'", double47 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix61);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aload_2
56: invokevirtual #130
59: astore        6
61: aconst_null
62: astore        7
64: aconst_null
65: astore        8
67: bipush        6
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: ldc2_w        #10
80: dastore
81: dup
82: iconst_2
83: dconst_1
84: dastore
85: dup
86: iconst_3
87: dconst_0
88: dastore
89: dup
90: iconst_4
91: dconst_1
92: dastore
93: dup
94: iconst_5
95: ldc2_w        #21
98: dastore
99: astore        9
101: aload         9
103: invokestatic  #23
106: new           #96
109: dup
110: aload         9
112: invokespecial #97
115: astore        10
117: aload         10
119: dconst_1
120: invokevirtual #151
123: astore        11
125: new           #96
128: dup
129: aload         11
131: invokespecial #152
134: astore        12
136: bipush        6
138: newarray       double
140: dup
141: iconst_0
142: dconst_0
143: dastore
144: dup
145: iconst_1
146: ldc2_w        #10
149: dastore
150: dup
151: iconst_2
152: dconst_1
153: dastore
154: dup
155: iconst_3
156: dconst_0
157: dastore
158: dup
159: iconst_4
160: dconst_1
161: dastore
162: dup
163: iconst_5
164: ldc2_w        #21
167: dastore
168: astore        13
170: aload         13
172: invokestatic  #23
175: new           #96
178: dup
179: aload         13
181: invokespecial #97
184: astore        14
186: aload         14
188: invokevirtual #98
191: astore        15
193: aload         14
195: ldc2_w        #59
198: invokevirtual #151
201: astore        16
203: bipush        6
205: newarray       double
207: dup
208: iconst_0
209: dconst_0
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #10
216: dastore
217: dup
218: iconst_2
219: dconst_1
220: dastore
221: dup
222: iconst_3
223: dconst_0
224: dastore
225: dup
226: iconst_4
227: dconst_1
228: dastore
229: dup
230: iconst_5
231: ldc2_w        #21
234: dastore
235: astore        17
237: aload         17
239: invokestatic  #23
242: new           #96
245: dup
246: aload         17
248: invokespecial #97
251: astore        18
253: aload         18
255: dconst_1
256: invokevirtual #151
259: astore        19
261: new           #96
264: dup
265: aload         19
267: invokespecial #152
270: astore        20
272: aload         14
274: aload         19
276: invokevirtual #153
279: astore        21
281: aload         12
283: aload         14
285: invokevirtual #392
288: dstore        22
290: iconst_1
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #70
298: dastore
299: astore        24
301: iconst_0
302: newarray       double
304: astore        25
306: aload         24
308: aload         25
310: invokestatic  #72
313: istore        26
315: bipush        6
317: newarray       double
319: dup
320: iconst_0
321: dconst_0
322: dastore
323: dup
324: iconst_1
325: ldc2_w        #10
328: dastore
329: dup
330: iconst_2
331: dconst_1
332: dastore
333: dup
334: iconst_3
335: dconst_0
336: dastore
337: dup
338: iconst_4
339: dconst_1
340: dastore
341: dup
342: iconst_5
343: ldc2_w        #21
346: dastore
347: astore        27
349: aload         27
351: invokestatic  #23
354: aload         27
356: invokestatic  #24
359: astore        28
361: new           #96
364: dup
365: aload         24
367: aload         27
369: invokespecial #139
372: astore        29
374: bipush        6
376: newarray       double
378: dup
379: iconst_0
380: dconst_0
381: dastore
382: dup
383: iconst_1
384: ldc2_w        #10
387: dastore
388: dup
389: iconst_2
390: dconst_1
391: dastore
392: dup
393: iconst_3
394: dconst_0
395: dastore
396: dup
397: iconst_4
398: dconst_1
399: dastore
400: dup
401: iconst_5
402: ldc2_w        #21
405: dastore
406: astore        30
408: aload         30
410: invokestatic  #23
413: aload         24
415: aload         30
417: invokestatic  #140
420: istore        31
422: aload         12
424: iconst_0
425: aload         30
427: invokevirtual #393
430: aload_2
431: iconst_1
432: aload         7
434: aload         8
436: aload         30
438: invokevirtual #12
441: astore        32
443: ldc           #13
445: invokestatic  #14
448: goto          453
451: astore        32
453: new           #39
456: dup
457: invokespecial #40
460: ldc           #41
462: invokevirtual #42
465: iload_3
466: invokevirtual #81
469: ldc           #44
471: invokevirtual #42
474: iconst_0
475: invokevirtual #81
478: ldc           #41
480: invokevirtual #42
483: invokevirtual #45
486: iload_3
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #47
498: new           #39
501: dup
502: invokespecial #40
505: ldc           #41
507: invokevirtual #42
510: iload         4
512: invokevirtual #81
515: ldc           #44
517: invokevirtual #42
520: iconst_0
521: invokevirtual #81
524: ldc           #41
526: invokevirtual #42
529: invokevirtual #45
532: iload         4
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #47
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: iload         5
559: invokevirtual #81
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #81
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         5
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #47
592: aload         6
594: invokestatic  #16
597: aload         9
599: invokestatic  #16
602: aload         9
604: invokestatic  #17
607: ldc           #26
609: invokestatic  #19
612: aload         11
614: invokestatic  #16
617: aload         13
619: invokestatic  #16
622: aload         13
624: invokestatic  #17
627: ldc           #26
629: invokestatic  #19
632: aload         15
634: invokestatic  #16
637: aload         16
639: invokestatic  #16
642: aload         17
644: invokestatic  #16
647: aload         17
649: invokestatic  #17
652: ldc           #26
654: invokestatic  #19
657: aload         19
659: invokestatic  #16
662: aload         21
664: invokestatic  #16
667: new           #39
670: dup
671: invokespecial #40
674: ldc           #41
676: invokevirtual #42
679: dload         22
681: invokevirtual #121
684: ldc           #44
686: invokevirtual #42
689: ldc2_w        #298
692: invokevirtual #121
695: ldc           #41
697: invokevirtual #42
700: invokevirtual #45
703: dload         22
705: ldc2_w        #298
708: dcmpl
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #47
720: aload         24
722: invokestatic  #16
725: aload         24
727: invokestatic  #17
730: ldc           #82
732: invokestatic  #19
735: aload         25
737: invokestatic  #16
740: aload         25
742: invokestatic  #17
745: ldc           #83
747: invokestatic  #19
750: new           #39
753: dup
754: invokespecial #40
757: ldc           #41
759: invokevirtual #42
762: iload         26
764: invokevirtual #84
767: ldc           #44
769: invokevirtual #42
772: iconst_0
773: invokevirtual #84
776: ldc           #41
778: invokevirtual #42
781: invokevirtual #45
784: iload         26
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #47
797: aload         27
799: invokestatic  #16
802: aload         27
804: invokestatic  #17
807: ldc           #26
809: invokestatic  #19
812: aload         28
814: invokestatic  #16
817: aload         30
819: invokestatic  #16
822: aload         30
824: invokestatic  #17
827: ldc           #26
829: invokestatic  #19
832: new           #39
835: dup
836: invokespecial #40
839: ldc           #41
841: invokevirtual #42
844: iload         31
846: invokevirtual #84
849: ldc           #44
851: invokevirtual #42
854: iconst_0
855: invokevirtual #84
858: ldc           #41
860: invokevirtual #42
863: invokevirtual #45
866: iload         31
868: ifne          875
871: iconst_1
872: goto          876
875: iconst_0
876: invokestatic  #47
879: return
Exception table:
from    to  target type
430   448   451   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 4392
End line: 4426
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.util.Incrementor incrementor44 = cMAESOptimizer43.evaluations;
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer43.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(incrementor44);
        org.junit.Assert.assertNotNull(doubleList45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #394
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: aload         13
231: getfield      #191
234: astore        14
236: aload         13
238: invokevirtual #130
241: astore        15
243: aload_1
244: invokestatic  #16
247: aload_1
248: invokestatic  #17
251: ldc           #26
253: invokestatic  #19
256: aload_2
257: invokestatic  #16
260: aload         4
262: invokestatic  #16
265: aload         4
267: invokestatic  #17
270: ldc           #26
272: invokestatic  #19
275: aload         5
277: invokestatic  #16
280: aload         5
282: invokestatic  #117
285: ldc           #229
287: invokestatic  #19
290: aload         6
292: invokestatic  #16
295: aload         6
297: invokestatic  #117
300: ldc           #229
302: invokestatic  #19
305: aload         8
307: invokestatic  #16
310: aload         8
312: invokestatic  #17
315: ldc           #26
317: invokestatic  #19
320: aload         12
322: invokestatic  #16
325: aload         14
327: invokestatic  #16
330: aload         15
332: invokestatic  #16
335: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 4429
End line: 4459
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = cMAESOptimizer25.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair28 = cMAESOptimizer25.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #53
155: astore        11
157: aload         9
159: invokevirtual #51
162: astore        12
164: ldc           #29
166: invokestatic  #14
169: goto          174
172: astore        12
174: aload_1
175: invokestatic  #16
178: aload_1
179: invokestatic  #17
182: ldc           #26
184: invokestatic  #19
187: aload_2
188: invokestatic  #16
191: aload         4
193: invokestatic  #16
196: aload         4
198: invokestatic  #17
201: ldc           #26
203: invokestatic  #19
206: new           #39
209: dup
210: invokespecial #40
213: ldc           #41
215: invokevirtual #42
218: dload         6
220: invokevirtual #121
223: ldc           #44
225: invokevirtual #42
228: ldc2_w        #282
231: invokevirtual #121
234: ldc           #41
236: invokevirtual #42
239: invokevirtual #45
242: dload         6
244: ldc2_w        #282
247: dcmpl
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #47
259: aload         10
261: invokestatic  #155
264: aload         11
266: invokestatic  #155
269: return
Exception table:
from    to  target type
157   169   172   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 4462
End line: 4519
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        int[] intArray20 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray20);
        float float22 = mersenneTwister21.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker24 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray33 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray34 = new double[][] { doubleArray33 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix36 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray34, true);
        double[][] doubleArray37 = array2DRowRealMatrix36.getData();
        double[] doubleArray40 = new double[] { '4' };
        double[] doubleArray41 = new double[] {};
        boolean boolean42 = org.apache.commons.math3.util.MathArrays.equals(doubleArray40, doubleArray41);
        array2DRowRealMatrix36.setColumn((int) (short) 1, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.RealMatrix realMatrix52 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray50);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair54 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray50, (double) (-1.0f));
        double[] doubleArray55 = pointValuePair54.getPoint();
        double double56 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray40, doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair57 = cMAESOptimizer26.optimize((int) (byte) 0, multivariateFunction28, goalType29, doubleArray40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.48016477f + "'", float22 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 52.0d + "'", double56 == 52.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #396
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: aconst_null
154: astore        9
156: getstatic     #37
159: astore        10
161: iconst_3
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #87
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #59
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #59
181: dastore
182: astore        11
184: iconst_1
185: anewarray     #89
188: dup
189: iconst_0
190: aload         11
192: aastore
193: astore        12
195: new           #90
198: dup
199: aload         12
201: iconst_1
202: invokespecial #91
205: astore        13
207: aload         13
209: invokevirtual #92
212: astore        14
214: iconst_1
215: newarray       double
217: dup
218: iconst_0
219: ldc2_w        #70
222: dastore
223: astore        15
225: iconst_0
226: newarray       double
228: astore        16
230: aload         15
232: aload         16
234: invokestatic  #72
237: istore        17
239: aload         13
241: iconst_1
242: aload         15
244: invokevirtual #93
247: bipush        6
249: newarray       double
251: dup
252: iconst_0
253: dconst_0
254: dastore
255: dup
256: iconst_1
257: ldc2_w        #10
260: dastore
261: dup
262: iconst_2
263: dconst_1
264: dastore
265: dup
266: iconst_3
267: dconst_0
268: dastore
269: dup
270: iconst_4
271: dconst_1
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #21
278: dastore
279: astore        18
281: aload         18
283: invokestatic  #23
286: aload         18
288: invokestatic  #24
291: astore        19
293: new           #58
296: dup
297: aload         18
299: ldc2_w        #59
302: invokespecial #61
305: astore        20
307: aload         20
309: invokevirtual #62
312: astore        21
314: aload         15
316: aload         21
318: invokestatic  #134
321: dstore        22
323: aload         8
325: iconst_0
326: aload         9
328: aload         10
330: aload         15
332: invokevirtual #12
335: astore        24
337: ldc           #13
339: invokestatic  #14
342: goto          347
345: astore        24
347: aload_1
348: invokestatic  #16
351: aload_1
352: invokestatic  #17
355: ldc           #26
357: invokestatic  #19
360: aload_2
361: invokestatic  #16
364: aload_3
365: invokestatic  #16
368: aload_3
369: invokestatic  #117
372: ldc           #118
374: invokestatic  #19
377: new           #39
380: dup
381: invokespecial #40
384: ldc           #41
386: invokevirtual #42
389: fload         5
391: invokevirtual #119
394: ldc           #44
396: invokevirtual #42
399: ldc           #120
401: invokevirtual #119
404: ldc           #41
406: invokevirtual #42
409: invokevirtual #45
412: fload         5
414: ldc           #120
416: fcmpl
417: ifne          424
420: iconst_1
421: goto          425
424: iconst_0
425: invokestatic  #47
428: new           #39
431: dup
432: invokespecial #40
435: ldc           #41
437: invokevirtual #42
440: aload         10
442: invokevirtual #43
445: ldc           #44
447: invokevirtual #42
450: getstatic     #37
453: invokevirtual #43
456: ldc           #41
458: invokevirtual #42
461: invokevirtual #45
464: aload         10
466: getstatic     #37
469: invokevirtual #46
472: invokestatic  #47
475: aload         11
477: invokestatic  #16
480: aload         11
482: invokestatic  #17
485: ldc           #94
487: invokestatic  #19
490: aload         12
492: invokestatic  #16
495: aload         14
497: invokestatic  #16
500: aload         15
502: invokestatic  #16
505: aload         15
507: invokestatic  #17
510: ldc           #82
512: invokestatic  #19
515: aload         16
517: invokestatic  #16
520: aload         16
522: invokestatic  #17
525: ldc           #83
527: invokestatic  #19
530: new           #39
533: dup
534: invokespecial #40
537: ldc           #41
539: invokevirtual #42
542: iload         17
544: invokevirtual #84
547: ldc           #44
549: invokevirtual #42
552: iconst_0
553: invokevirtual #84
556: ldc           #41
558: invokevirtual #42
561: invokevirtual #45
564: iload         17
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #47
577: aload         18
579: invokestatic  #16
582: aload         18
584: invokestatic  #17
587: ldc           #26
589: invokestatic  #19
592: aload         19
594: invokestatic  #16
597: aload         21
599: invokestatic  #16
602: aload         21
604: invokestatic  #17
607: ldc           #26
609: invokestatic  #19
612: new           #39
615: dup
616: invokespecial #40
619: ldc           #41
621: invokevirtual #42
624: dload         22
626: invokevirtual #121
629: ldc           #44
631: invokevirtual #42
634: ldc2_w        #70
637: invokevirtual #121
640: ldc           #41
642: invokevirtual #42
645: invokevirtual #45
648: dload         22
650: ldc2_w        #70
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #47
665: return
Exception table:
from    to  target type
323   342   345   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 4522
End line: 4542
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        int int23 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #397
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #125
133: istore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: aload         6
155: invokestatic  #16
158: new           #39
161: dup
162: invokespecial #40
165: ldc           #41
167: invokevirtual #42
170: iload         7
172: invokevirtual #81
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #81
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         7
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #47
205: aload         8
207: invokestatic  #16
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload         9
224: invokevirtual #81
227: ldc           #44
229: invokevirtual #42
232: iconst_0
233: invokevirtual #81
236: ldc           #41
238: invokevirtual #42
241: invokevirtual #45
244: iload         9
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #47
257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 4545
End line: 4560
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker7 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #232
59: astore        6
61: aload_2
62: invokevirtual #53
65: astore        7
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_3
80: invokevirtual #81
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #81
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_3
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #47
112: aload         4
114: invokestatic  #16
117: aload         5
119: invokestatic  #16
122: aload         6
124: invokestatic  #16
127: aload         7
129: invokestatic  #16
132: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 4563
End line: 4574
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.apache.commons.math3.util.Incrementor incrementor5 = cMAESOptimizer2.evaluations;
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(incrementor5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #130
47: astore        4
49: aload_2
50: getfield      #191
53: astore        5
55: aload_3
56: invokestatic  #16
59: aload         4
61: invokestatic  #16
64: aload         5
66: invokestatic  #16
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 4577
End line: 4637
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        double[][] doubleArray7 = array2DRowRealMatrix6.getData();
        boolean boolean8 = array2DRowRealMatrix6.isSquare();
        double[] doubleArray12 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray13 = new double[][] { doubleArray12 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix15 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray13, true);
        int int16 = array2DRowRealMatrix15.getRowDimension();
        array2DRowRealMatrix15.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix21 = array2DRowRealMatrix6.subtract(array2DRowRealMatrix15);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.RealMatrix realMatrix32 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray30);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair34 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray30, (double) (-1.0f));
        double[] doubleArray35 = pointValuePair34.getPoint();
        int[] intArray42 = new int[] { (-127) };
        int[] intArray43 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(intArray42);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister61 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker63 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray53, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister61, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray35, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false, pointValuePairConvergenceChecker65);
        int int67 = org.apache.commons.math3.util.MathUtils.hash(doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            array2DRowRealMatrix21.setRow((-405924742), doubleArray35);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (-405,924,742)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(array2DRowRealMatrix21);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-127]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 419642177 + "'", int67 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #87
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #59
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #59
45: dastore
46: astore_1
47: iconst_1
48: anewarray     #89
51: dup
52: iconst_0
53: aload_1
54: aastore
55: astore_2
56: new           #90
59: dup
60: aload_2
61: iconst_1
62: invokespecial #91
65: astore_3
66: aload_3
67: invokevirtual #92
70: astore        4
72: aload_3
73: invokevirtual #401
76: istore        5
78: iconst_3
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #87
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #59
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #59
98: dastore
99: astore        6
101: iconst_1
102: anewarray     #89
105: dup
106: iconst_0
107: aload         6
109: aastore
110: astore        7
112: new           #90
115: dup
116: aload         7
118: iconst_1
119: invokespecial #91
122: astore        8
124: aload         8
126: invokevirtual #182
129: istore        9
131: aload         8
133: iconst_0
134: iconst_0
135: ldc2_w        #10
138: invokevirtual #183
141: aload_3
142: aload         8
144: invokevirtual #402
147: astore        10
149: bipush        6
151: newarray       double
153: dup
154: iconst_0
155: dconst_0
156: dastore
157: dup
158: iconst_1
159: ldc2_w        #10
162: dastore
163: dup
164: iconst_2
165: dconst_1
166: dastore
167: dup
168: iconst_3
169: dconst_0
170: dastore
171: dup
172: iconst_4
173: dconst_1
174: dastore
175: dup
176: iconst_5
177: ldc2_w        #21
180: dastore
181: astore        11
183: aload         11
185: invokestatic  #23
188: aload         11
190: invokestatic  #24
193: astore        12
195: new           #58
198: dup
199: aload         11
201: ldc2_w        #59
204: invokespecial #61
207: astore        13
209: aload         13
211: invokevirtual #62
214: astore        14
216: iconst_1
217: newarray       int
219: dup
220: iconst_0
221: bipush        -127
223: iastore
224: astore        15
226: aload         15
228: invokestatic  #226
231: astore        16
233: new           #32
236: dup
237: aload         15
239: invokespecial #112
242: astore        17
244: bipush        6
246: newarray       double
248: dup
249: iconst_0
250: dconst_0
251: dastore
252: dup
253: iconst_1
254: ldc2_w        #10
257: dastore
258: dup
259: iconst_2
260: dconst_1
261: dastore
262: dup
263: iconst_3
264: dconst_0
265: dastore
266: dup
267: iconst_4
268: dconst_1
269: dastore
270: dup
271: iconst_5
272: ldc2_w        #21
275: dastore
276: astore        18
278: aload         18
280: invokestatic  #23
283: new           #32
286: dup
287: iconst_1
288: invokespecial #33
291: astore        19
293: new           #34
296: dup
297: invokespecial #35
300: astore        20
302: new           #8
305: dup
306: iconst_5
307: aload         18
309: bipush        100
311: dconst_0
312: iconst_0
313: iconst_0
314: bipush        100
316: aload         19
318: iconst_1
319: aload         20
321: invokespecial #36
324: astore        21
326: aload         21
328: invokevirtual #53
331: astore        22
333: new           #8
336: dup
337: bipush        36
339: aload         14
341: bipush        97
343: ldc2_w        #374
346: iconst_1
347: iconst_0
348: bipush        10
350: aload         17
352: iconst_0
353: aload         22
355: invokespecial #36
358: astore        23
360: aload         14
362: invokestatic  #344
365: istore        24
367: aload         10
369: ldc_w         #403
372: aload         14
374: invokevirtual #404
377: ldc_w         #405
380: invokestatic  #14
383: goto          388
386: astore        25
388: aload_1
389: invokestatic  #16
392: aload_1
393: invokestatic  #17
396: ldc           #94
398: invokestatic  #19
401: aload_2
402: invokestatic  #16
405: aload         4
407: invokestatic  #16
410: new           #39
413: dup
414: invokespecial #40
417: ldc           #41
419: invokevirtual #42
422: iload         5
424: invokevirtual #84
427: ldc           #44
429: invokevirtual #42
432: iconst_0
433: invokevirtual #84
436: ldc           #41
438: invokevirtual #42
441: invokevirtual #45
444: iload         5
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #47
457: aload         6
459: invokestatic  #16
462: aload         6
464: invokestatic  #17
467: ldc           #94
469: invokestatic  #19
472: aload         7
474: invokestatic  #16
477: new           #39
480: dup
481: invokespecial #40
484: ldc           #41
486: invokevirtual #42
489: iload         9
491: invokevirtual #81
494: ldc           #44
496: invokevirtual #42
499: iconst_1
500: invokevirtual #81
503: ldc           #41
505: invokevirtual #42
508: invokevirtual #45
511: iload         9
513: iconst_1
514: if_icmpne     521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #47
525: aload         10
527: invokestatic  #16
530: aload         11
532: invokestatic  #16
535: aload         11
537: invokestatic  #17
540: ldc           #26
542: invokestatic  #19
545: aload         12
547: invokestatic  #16
550: aload         14
552: invokestatic  #16
555: aload         14
557: invokestatic  #17
560: ldc           #26
562: invokestatic  #19
565: aload         15
567: invokestatic  #16
570: aload         15
572: invokestatic  #117
575: ldc           #229
577: invokestatic  #19
580: aload         16
582: invokestatic  #16
585: aload         16
587: invokestatic  #117
590: ldc           #229
592: invokestatic  #19
595: aload         18
597: invokestatic  #16
600: aload         18
602: invokestatic  #17
605: ldc           #26
607: invokestatic  #19
610: aload         22
612: invokestatic  #16
615: new           #39
618: dup
619: invokespecial #40
622: ldc           #41
624: invokevirtual #42
627: iload         24
629: invokevirtual #81
632: ldc           #44
634: invokevirtual #42
637: ldc_w         #347
640: invokevirtual #81
643: ldc           #41
645: invokevirtual #42
648: invokevirtual #45
651: iload         24
653: ldc_w         #347
656: if_icmpne     663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #47
667: return
Exception table:
from    to  target type
367   383   386   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 4640
End line: 4714
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray13 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray13);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray22);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector15, arrayRealVector24);
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector36, arrayRealVector45);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector45, arrayRealVector55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = arrayRealVector24.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector55);
        double[] doubleArray58 = arrayRealVector24.toArray();
        double[] doubleArray65 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray65);
        org.apache.commons.math3.linear.RealMatrix realMatrix67 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray65);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair69 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray65, (double) (-1.0f));
        double double70 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray58, doubleArray65);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray65);
        org.apache.commons.math3.linear.RealMatrix realMatrix72 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray65);
        double[] doubleArray74 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray65, 0.6557942026326724d);
        double[] doubleArray82 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray82);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister90 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker92 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray82, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister90, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker92);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector94 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray65, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair95 = cMAESOptimizer1.optimize((-2022633607), multivariateFunction5, goalType6, doubleArray82);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 20204.0d + "'", double70 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #406
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        35
31: invokespecial #245
34: astore_1
35: aload_1
36: invokevirtual #125
39: istore_2
40: aload_1
41: invokevirtual #130
44: astore_3
45: aconst_null
46: astore        4
48: getstatic     #37
51: astore        5
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: dup
62: iconst_1
63: ldc2_w        #10
66: dastore
67: dup
68: iconst_2
69: dconst_1
70: dastore
71: dup
72: iconst_3
73: dconst_0
74: dastore
75: dup
76: iconst_4
77: dconst_1
78: dastore
79: dup
80: iconst_5
81: ldc2_w        #21
84: dastore
85: astore        6
87: aload         6
89: invokestatic  #23
92: new           #96
95: dup
96: aload         6
98: invokespecial #97
101: astore        7
103: bipush        6
105: newarray       double
107: dup
108: iconst_0
109: dconst_0
110: dastore
111: dup
112: iconst_1
113: ldc2_w        #10
116: dastore
117: dup
118: iconst_2
119: dconst_1
120: dastore
121: dup
122: iconst_3
123: dconst_0
124: dastore
125: dup
126: iconst_4
127: dconst_1
128: dastore
129: dup
130: iconst_5
131: ldc2_w        #21
134: dastore
135: astore        8
137: aload         8
139: invokestatic  #23
142: new           #96
145: dup
146: aload         8
148: invokespecial #97
151: astore        9
153: new           #96
156: dup
157: aload         7
159: aload         9
161: invokespecial #99
164: astore        10
166: bipush        6
168: newarray       double
170: dup
171: iconst_0
172: dconst_0
173: dastore
174: dup
175: iconst_1
176: ldc2_w        #10
179: dastore
180: dup
181: iconst_2
182: dconst_1
183: dastore
184: dup
185: iconst_3
186: dconst_0
187: dastore
188: dup
189: iconst_4
190: dconst_1
191: dastore
192: dup
193: iconst_5
194: ldc2_w        #21
197: dastore
198: astore        11
200: aload         11
202: invokestatic  #23
205: new           #96
208: dup
209: aload         11
211: invokespecial #97
214: astore        12
216: bipush        6
218: newarray       double
220: dup
221: iconst_0
222: dconst_0
223: dastore
224: dup
225: iconst_1
226: ldc2_w        #10
229: dastore
230: dup
231: iconst_2
232: dconst_1
233: dastore
234: dup
235: iconst_3
236: dconst_0
237: dastore
238: dup
239: iconst_4
240: dconst_1
241: dastore
242: dup
243: iconst_5
244: ldc2_w        #21
247: dastore
248: astore        13
250: aload         13
252: invokestatic  #23
255: new           #96
258: dup
259: aload         13
261: invokespecial #97
264: astore        14
266: new           #96
269: dup
270: aload         12
272: aload         14
274: invokespecial #99
277: astore        15
279: bipush        6
281: newarray       double
283: dup
284: iconst_0
285: dconst_0
286: dastore
287: dup
288: iconst_1
289: ldc2_w        #10
292: dastore
293: dup
294: iconst_2
295: dconst_1
296: dastore
297: dup
298: iconst_3
299: dconst_0
300: dastore
301: dup
302: iconst_4
303: dconst_1
304: dastore
305: dup
306: iconst_5
307: ldc2_w        #21
310: dastore
311: astore        16
313: aload         16
315: invokestatic  #23
318: new           #96
321: dup
322: aload         16
324: invokespecial #97
327: astore        17
329: new           #96
332: dup
333: aload         14
335: aload         17
337: invokespecial #99
340: astore        18
342: aload         9
344: dconst_1
345: dconst_1
346: aload         17
348: invokevirtual #100
351: astore        19
353: aload         9
355: invokevirtual #101
358: astore        20
360: bipush        6
362: newarray       double
364: dup
365: iconst_0
366: dconst_0
367: dastore
368: dup
369: iconst_1
370: ldc2_w        #10
373: dastore
374: dup
375: iconst_2
376: dconst_1
377: dastore
378: dup
379: iconst_3
380: dconst_0
381: dastore
382: dup
383: iconst_4
384: dconst_1
385: dastore
386: dup
387: iconst_5
388: ldc2_w        #21
391: dastore
392: astore        21
394: aload         21
396: invokestatic  #23
399: aload         21
401: invokestatic  #24
404: astore        22
406: new           #58
409: dup
410: aload         21
412: ldc2_w        #59
415: invokespecial #61
418: astore        23
420: aload         20
422: aload         21
424: invokestatic  #206
427: dstore        24
429: aload         21
431: invokestatic  #23
434: aload         21
436: invokestatic  #207
439: astore        26
441: aload         21
443: ldc2_w        #208
446: invokestatic  #210
449: astore        27
451: bipush        6
453: newarray       double
455: dup
456: iconst_0
457: dconst_0
458: dastore
459: dup
460: iconst_1
461: ldc2_w        #10
464: dastore
465: dup
466: iconst_2
467: dconst_1
468: dastore
469: dup
470: iconst_3
471: dconst_0
472: dastore
473: dup
474: iconst_4
475: dconst_1
476: dastore
477: dup
478: iconst_5
479: ldc2_w        #21
482: dastore
483: astore        28
485: aload         28
487: invokestatic  #23
490: new           #32
493: dup
494: iconst_1
495: invokespecial #33
498: astore        29
500: new           #34
503: dup
504: invokespecial #35
507: astore        30
509: new           #8
512: dup
513: iconst_5
514: aload         28
516: bipush        100
518: dconst_0
519: iconst_0
520: iconst_0
521: bipush        100
523: aload         29
525: iconst_1
526: aload         30
528: invokespecial #36
531: astore        31
533: new           #96
536: dup
537: aload         21
539: aload         28
541: invokespecial #139
544: astore        32
546: aload_1
547: ldc           #223
549: aload         4
551: aload         5
553: aload         28
555: invokevirtual #12
558: astore        33
560: ldc           #13
562: invokestatic  #14
565: goto          570
568: astore        33
570: new           #39
573: dup
574: invokespecial #40
577: ldc           #41
579: invokevirtual #42
582: iload_2
583: invokevirtual #81
586: ldc           #44
588: invokevirtual #42
591: iconst_0
592: invokevirtual #81
595: ldc           #41
597: invokevirtual #42
600: invokevirtual #45
603: iload_2
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #47
615: aload_3
616: invokestatic  #16
619: new           #39
622: dup
623: invokespecial #40
626: ldc           #41
628: invokevirtual #42
631: aload         5
633: invokevirtual #43
636: ldc           #44
638: invokevirtual #42
641: getstatic     #37
644: invokevirtual #43
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: aload         5
657: getstatic     #37
660: invokevirtual #46
663: invokestatic  #47
666: aload         6
668: invokestatic  #16
671: aload         6
673: invokestatic  #17
676: ldc           #26
678: invokestatic  #19
681: aload         8
683: invokestatic  #16
686: aload         8
688: invokestatic  #17
691: ldc           #26
693: invokestatic  #19
696: aload         11
698: invokestatic  #16
701: aload         11
703: invokestatic  #17
706: ldc           #26
708: invokestatic  #19
711: aload         13
713: invokestatic  #16
716: aload         13
718: invokestatic  #17
721: ldc           #26
723: invokestatic  #19
726: aload         16
728: invokestatic  #16
731: aload         16
733: invokestatic  #17
736: ldc           #26
738: invokestatic  #19
741: aload         19
743: invokestatic  #16
746: aload         20
748: invokestatic  #16
751: aload         20
753: invokestatic  #17
756: ldc           #105
758: invokestatic  #19
761: aload         21
763: invokestatic  #16
766: aload         21
768: invokestatic  #17
771: ldc           #26
773: invokestatic  #19
776: aload         22
778: invokestatic  #16
781: new           #39
784: dup
785: invokespecial #40
788: ldc           #41
790: invokevirtual #42
793: dload         24
795: invokevirtual #121
798: ldc           #44
800: invokevirtual #42
803: ldc2_w        #212
806: invokevirtual #121
809: ldc           #41
811: invokevirtual #42
814: invokevirtual #45
817: dload         24
819: ldc2_w        #212
822: dcmpl
823: ifne          830
826: iconst_1
827: goto          831
830: iconst_0
831: invokestatic  #47
834: aload         26
836: invokestatic  #16
839: aload         27
841: invokestatic  #16
844: aload         27
846: invokestatic  #17
849: ldc           #214
851: invokestatic  #19
854: aload         28
856: invokestatic  #16
859: aload         28
861: invokestatic  #17
864: ldc           #26
866: invokestatic  #19
869: return
Exception table:
from    to  target type
546   565   568   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 4717
End line: 4739
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        double double19 = simpleValueChecker17.getRelativeThreshold();
        double double20 = simpleValueChecker17.getRelativeThreshold();
        java.io.ObjectInputStream objectInputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.MatrixUtils.deserializeRealMatrix((java.lang.Object) simpleValueChecker17, "", objectInputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.1102230246251565E-14d + "'", double19 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.1102230246251565E-14d + "'", double20 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #407
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_3
101: invokevirtual #162
104: dstore        5
106: aload_3
107: invokevirtual #162
110: dstore        7
112: aconst_null
113: astore        9
115: aload_3
116: ldc_w         #408
119: aload         9
121: invokestatic  #409
124: ldc           #29
126: invokestatic  #14
129: goto          134
132: astore        10
134: aload_1
135: invokestatic  #16
138: aload_1
139: invokestatic  #17
142: ldc           #26
144: invokestatic  #19
147: new           #39
150: dup
151: invokespecial #40
154: ldc           #41
156: invokevirtual #42
159: dload         5
161: invokevirtual #121
164: ldc           #44
166: invokevirtual #42
169: ldc2_w        #163
172: invokevirtual #121
175: ldc           #41
177: invokevirtual #42
180: invokevirtual #45
183: dload         5
185: ldc2_w        #163
188: dcmpl
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: dload         7
214: invokevirtual #121
217: ldc           #44
219: invokevirtual #42
222: ldc2_w        #163
225: invokevirtual #121
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: dload         7
238: ldc2_w        #163
241: dcmpl
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #47
253: return
Exception table:
from    to  target type
115   129   132   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 4742
End line: 4774
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        int int44 = cMAESOptimizer43.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: aload         13
231: invokevirtual #69
234: istore        14
236: aload_1
237: invokestatic  #16
240: aload_1
241: invokestatic  #17
244: ldc           #26
246: invokestatic  #19
249: aload_2
250: invokestatic  #16
253: aload         4
255: invokestatic  #16
258: aload         4
260: invokestatic  #17
263: ldc           #26
265: invokestatic  #19
268: aload         5
270: invokestatic  #16
273: aload         5
275: invokestatic  #117
278: ldc           #229
280: invokestatic  #19
283: aload         6
285: invokestatic  #16
288: aload         6
290: invokestatic  #117
293: ldc           #229
295: invokestatic  #19
298: aload         8
300: invokestatic  #16
303: aload         8
305: invokestatic  #17
308: ldc           #26
310: invokestatic  #19
313: aload         12
315: invokestatic  #16
318: new           #39
321: dup
322: invokespecial #40
325: ldc           #41
327: invokevirtual #42
330: iload         14
332: invokevirtual #81
335: ldc           #44
337: invokevirtual #42
340: iconst_0
341: invokevirtual #81
344: ldc           #41
346: invokevirtual #42
349: invokevirtual #45
352: iload         14
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #47
365: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 4777
End line: 4801
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        int int24 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList25 = cMAESOptimizer18.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(realMatrixList25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #411
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         4
137: invokevirtual #125
140: istore        10
142: aload         4
144: invokevirtual #219
147: astore        11
149: aload_1
150: invokestatic  #16
153: aload_1
154: invokestatic  #17
157: ldc           #26
159: invokestatic  #19
162: aload         5
164: invokestatic  #16
167: aload         6
169: invokestatic  #16
172: new           #39
175: dup
176: invokespecial #40
179: ldc           #41
181: invokevirtual #42
184: iload         7
186: invokevirtual #81
189: ldc           #44
191: invokevirtual #42
194: iconst_0
195: invokevirtual #81
198: ldc           #41
200: invokevirtual #42
203: invokevirtual #45
206: iload         7
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #47
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         8
233: invokevirtual #81
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #81
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         8
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #47
266: aload         9
268: invokestatic  #16
271: new           #39
274: dup
275: invokespecial #40
278: ldc           #41
280: invokevirtual #42
283: iload         10
285: invokevirtual #81
288: ldc           #44
290: invokevirtual #42
293: iconst_0
294: invokevirtual #81
297: ldc           #41
299: invokevirtual #42
302: invokevirtual #45
305: iload         10
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #47
318: aload         11
320: invokestatic  #16
323: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 4804
End line: 4823
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        int int22 = incrementor20.getMaximalCount();
        incrementor20.setMaximalCount((-1929308310));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #413
126: istore        8
128: aload         6
130: ldc_w         #414
133: invokevirtual #415
136: aload_1
137: invokestatic  #16
140: aload_1
141: invokestatic  #17
144: ldc           #26
146: invokestatic  #19
149: aload         5
151: invokestatic  #16
154: aload         6
156: invokestatic  #16
159: new           #39
162: dup
163: invokespecial #40
166: ldc           #41
168: invokevirtual #42
171: iload         7
173: invokevirtual #81
176: ldc           #44
178: invokevirtual #42
181: iconst_0
182: invokevirtual #81
185: ldc           #41
187: invokevirtual #42
190: invokevirtual #45
193: iload         7
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #47
206: new           #39
209: dup
210: invokespecial #40
213: ldc           #41
215: invokevirtual #42
218: iload         8
220: invokevirtual #81
223: ldc           #44
225: invokevirtual #42
228: iconst_0
229: invokevirtual #81
232: ldc           #41
234: invokevirtual #42
237: invokevirtual #45
240: iload         8
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #47
253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 4826
End line: 4846
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        int int22 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType23 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(goalType23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #69
126: istore        8
128: aload         4
130: invokevirtual #149
133: astore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: new           #39
151: dup
152: invokespecial #40
155: ldc           #41
157: invokevirtual #42
160: iload         5
162: invokevirtual #81
165: ldc           #44
167: invokevirtual #42
170: iconst_0
171: invokevirtual #81
174: ldc           #41
176: invokevirtual #42
179: invokevirtual #45
182: iload         5
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #47
195: aload         6
197: invokestatic  #16
200: aload         7
202: invokestatic  #16
205: new           #39
208: dup
209: invokespecial #40
212: ldc           #41
214: invokevirtual #42
217: iload         8
219: invokevirtual #81
222: ldc           #44
224: invokevirtual #42
227: iconst_0
228: invokevirtual #81
231: ldc           #41
233: invokevirtual #42
236: invokevirtual #45
239: iload         8
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #47
252: aload         9
254: invokestatic  #155
257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 4849
End line: 4871
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList24 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNotNull(doubleList24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #232
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: new           #39
163: dup
164: invokespecial #40
167: ldc           #41
169: invokevirtual #42
172: iload         6
174: invokevirtual #81
177: ldc           #44
179: invokevirtual #42
182: iconst_0
183: invokevirtual #81
186: ldc           #41
188: invokevirtual #42
191: invokevirtual #45
194: iload         6
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #47
207: aload         7
209: invokestatic  #16
212: aload         8
214: invokestatic  #16
217: aload         9
219: invokestatic  #16
222: aload         10
224: invokestatic  #16
227: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 4874
End line: 4918
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray3 = blockRealMatrix2.getData();
        double double4 = blockRealMatrix2.getFrobeniusNorm();
        double double5 = blockRealMatrix2.getFrobeniusNorm();
        double[] doubleArray13 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray13);
        org.apache.commons.math3.linear.RealMatrix realMatrix15 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray13);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair17 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray13, (double) (-1.0f));
        double[] doubleArray18 = pointValuePair17.getPoint();
        int[] intArray25 = new int[] { (-127) };
        int[] intArray26 = org.apache.commons.math3.util.MathArrays.copyOf(intArray25);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(intArray25);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker46 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray36, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = cMAESOptimizer47.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray18, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister27, false, pointValuePairConvergenceChecker48);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray50 = blockRealMatrix2.preMultiply(doubleArray18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 31");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-127]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: bipush        31
31: bipush        52
33: invokespecial #266
36: astore_1
37: aload_1
38: invokevirtual #419
41: astore_2
42: aload_1
43: invokevirtual #301
46: dstore_3
47: aload_1
48: invokevirtual #301
51: dstore        5
53: bipush        6
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: dup
62: iconst_1
63: ldc2_w        #10
66: dastore
67: dup
68: iconst_2
69: dconst_1
70: dastore
71: dup
72: iconst_3
73: dconst_0
74: dastore
75: dup
76: iconst_4
77: dconst_1
78: dastore
79: dup
80: iconst_5
81: ldc2_w        #21
84: dastore
85: astore        7
87: aload         7
89: invokestatic  #23
92: aload         7
94: invokestatic  #24
97: astore        8
99: new           #58
102: dup
103: aload         7
105: ldc2_w        #59
108: invokespecial #61
111: astore        9
113: aload         9
115: invokevirtual #62
118: astore        10
120: iconst_1
121: newarray       int
123: dup
124: iconst_0
125: bipush        -127
127: iastore
128: astore        11
130: aload         11
132: invokestatic  #226
135: astore        12
137: new           #32
140: dup
141: aload         11
143: invokespecial #112
146: astore        13
148: bipush        6
150: newarray       double
152: dup
153: iconst_0
154: dconst_0
155: dastore
156: dup
157: iconst_1
158: ldc2_w        #10
161: dastore
162: dup
163: iconst_2
164: dconst_1
165: dastore
166: dup
167: iconst_3
168: dconst_0
169: dastore
170: dup
171: iconst_4
172: dconst_1
173: dastore
174: dup
175: iconst_5
176: ldc2_w        #21
179: dastore
180: astore        14
182: aload         14
184: invokestatic  #23
187: new           #32
190: dup
191: iconst_1
192: invokespecial #33
195: astore        15
197: new           #34
200: dup
201: invokespecial #35
204: astore        16
206: new           #8
209: dup
210: iconst_5
211: aload         14
213: bipush        100
215: dconst_0
216: iconst_0
217: iconst_0
218: bipush        100
220: aload         15
222: iconst_1
223: aload         16
225: invokespecial #36
228: astore        17
230: aload         17
232: invokevirtual #53
235: astore        18
237: new           #8
240: dup
241: bipush        36
243: aload         10
245: bipush        97
247: ldc2_w        #374
250: iconst_1
251: iconst_0
252: bipush        10
254: aload         13
256: iconst_0
257: aload         18
259: invokespecial #36
262: astore        19
264: aload_1
265: aload         10
267: invokevirtual #188
270: astore        20
272: ldc_w         #420
275: invokestatic  #14
278: goto          283
281: astore        20
283: aload_2
284: invokestatic  #16
287: new           #39
290: dup
291: invokespecial #40
294: ldc           #41
296: invokevirtual #42
299: dload_3
300: invokevirtual #121
303: ldc           #44
305: invokevirtual #42
308: dconst_0
309: invokevirtual #121
312: ldc           #41
314: invokevirtual #42
317: invokevirtual #45
320: dload_3
321: dconst_0
322: dcmpl
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #47
334: new           #39
337: dup
338: invokespecial #40
341: ldc           #41
343: invokevirtual #42
346: dload         5
348: invokevirtual #121
351: ldc           #44
353: invokevirtual #42
356: dconst_0
357: invokevirtual #121
360: ldc           #41
362: invokevirtual #42
365: invokevirtual #45
368: dload         5
370: dconst_0
371: dcmpl
372: ifne          379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #47
383: aload         7
385: invokestatic  #16
388: aload         7
390: invokestatic  #17
393: ldc           #26
395: invokestatic  #19
398: aload         8
400: invokestatic  #16
403: aload         10
405: invokestatic  #16
408: aload         10
410: invokestatic  #17
413: ldc           #26
415: invokestatic  #19
418: aload         11
420: invokestatic  #16
423: aload         11
425: invokestatic  #117
428: ldc           #229
430: invokestatic  #19
433: aload         12
435: invokestatic  #16
438: aload         12
440: invokestatic  #117
443: ldc           #229
445: invokestatic  #19
448: aload         14
450: invokestatic  #16
453: aload         14
455: invokestatic  #17
458: ldc           #26
460: invokestatic  #19
463: aload         18
465: invokestatic  #16
468: return
Exception table:
from    to  target type
264   278   281   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 4921
End line: 4939
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType22 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNull(goalType22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #149
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: aload         5
143: invokestatic  #16
146: new           #39
149: dup
150: invokespecial #40
153: ldc           #41
155: invokevirtual #42
158: iload         6
160: invokevirtual #81
163: ldc           #44
165: invokevirtual #42
168: iconst_0
169: invokevirtual #81
172: ldc           #41
174: invokevirtual #42
177: invokevirtual #45
180: iload         6
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #47
193: aload         7
195: invokestatic  #155
198: aload         8
200: invokestatic  #155
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 4942
End line: 5014
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair10 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException8, goalType9);
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector19.copy();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector19.mapDivide((double) (-1.0f));
        double[] doubleArray29 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray29);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray29);
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector(realVector33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = arrayRealVector19.add(realVector33);
        double[] doubleArray42 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix44 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        boolean boolean45 = arrayRealVector35.equals((java.lang.Object) doubleArray42);
        double[] doubleArray47 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray42, 5);
        double[] doubleArray48 = null;
        double[] doubleArray50 = new double[] { '4' };
        double[] doubleArray51 = new double[] {};
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray51);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection56 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException58 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection56, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = nonMonotonicSequenceException58.getDirection();
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray50, orderDirection59, true);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray50, 18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair64 = cMAESOptimizer2.optimize(10, multivariateFunction7, goalType9, doubleArray47, doubleArray48, doubleArray50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 1 != 5");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + goalType9 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType9.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(arrayRealVector35);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + orderDirection56 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection56.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #422
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aconst_null
56: astore        6
58: aconst_null
59: astore        7
61: getstatic     #37
64: astore        8
66: new           #107
69: dup
70: aload         7
72: aload         8
74: invokespecial #110
77: astore        9
79: bipush        6
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #10
92: dastore
93: dup
94: iconst_2
95: dconst_1
96: dastore
97: dup
98: iconst_3
99: dconst_0
100: dastore
101: dup
102: iconst_4
103: dconst_1
104: dastore
105: dup
106: iconst_5
107: ldc2_w        #21
110: dastore
111: astore        10
113: aload         10
115: invokestatic  #23
118: new           #96
121: dup
122: aload         10
124: invokespecial #97
127: astore        11
129: aload         11
131: invokevirtual #98
134: astore        12
136: aload         11
138: ldc2_w        #59
141: invokevirtual #151
144: astore        13
146: bipush        6
148: newarray       double
150: dup
151: iconst_0
152: dconst_0
153: dastore
154: dup
155: iconst_1
156: ldc2_w        #10
159: dastore
160: dup
161: iconst_2
162: dconst_1
163: dastore
164: dup
165: iconst_3
166: dconst_0
167: dastore
168: dup
169: iconst_4
170: dconst_1
171: dastore
172: dup
173: iconst_5
174: ldc2_w        #21
177: dastore
178: astore        14
180: aload         14
182: invokestatic  #23
185: new           #96
188: dup
189: aload         14
191: invokespecial #97
194: astore        15
196: aload         15
198: dconst_1
199: invokevirtual #151
202: astore        16
204: new           #96
207: dup
208: aload         16
210: invokespecial #152
213: astore        17
215: aload         11
217: aload         16
219: invokevirtual #153
222: astore        18
224: bipush        6
226: newarray       double
228: dup
229: iconst_0
230: dconst_0
231: dastore
232: dup
233: iconst_1
234: ldc2_w        #10
237: dastore
238: dup
239: iconst_2
240: dconst_1
241: dastore
242: dup
243: iconst_3
244: dconst_0
245: dastore
246: dup
247: iconst_4
248: dconst_1
249: dastore
250: dup
251: iconst_5
252: ldc2_w        #21
255: dastore
256: astore        19
258: aload         19
260: invokestatic  #23
263: aload         19
265: invokestatic  #24
268: astore        20
270: aload         18
272: aload         19
274: invokevirtual #154
277: istore        21
279: aload         19
281: iconst_5
282: invokestatic  #423
285: astore        22
287: aconst_null
288: astore        23
290: iconst_1
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #70
298: dastore
299: astore        24
301: iconst_0
302: newarray       double
304: astore        25
306: aload         24
308: aload         25
310: invokestatic  #72
313: istore        26
315: getstatic     #73
318: astore        27
320: new           #67
323: dup
324: ldc2_w        #74
327: invokestatic  #76
330: iconst_1
331: invokestatic  #77
334: bipush        100
336: aload         27
338: iconst_1
339: invokespecial #78
342: astore        28
344: aload         28
346: invokevirtual #79
349: astore        29
351: aload         24
353: aload         29
355: iconst_1
356: invokestatic  #157
359: istore        30
361: aload         24
363: bipush        18
365: invokestatic  #423
368: astore        31
370: aload_2
371: bipush        10
373: aload         6
375: aload         8
377: aload         22
379: aload         23
381: aload         24
383: invokevirtual #25
386: astore        32
388: ldc_w         #424
391: invokestatic  #14
394: goto          399
397: astore        32
399: new           #39
402: dup
403: invokespecial #40
406: ldc           #41
408: invokevirtual #42
411: iload_3
412: invokevirtual #81
415: ldc           #44
417: invokevirtual #42
420: iconst_0
421: invokevirtual #81
424: ldc           #41
426: invokevirtual #42
429: invokevirtual #45
432: iload_3
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #47
444: new           #39
447: dup
448: invokespecial #40
451: ldc           #41
453: invokevirtual #42
456: iload         4
458: invokevirtual #81
461: ldc           #44
463: invokevirtual #42
466: iconst_0
467: invokevirtual #81
470: ldc           #41
472: invokevirtual #42
475: invokevirtual #45
478: iload         4
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #47
491: new           #39
494: dup
495: invokespecial #40
498: ldc           #41
500: invokevirtual #42
503: iload         5
505: invokevirtual #81
508: ldc           #44
510: invokevirtual #42
513: iconst_0
514: invokevirtual #81
517: ldc           #41
519: invokevirtual #42
522: invokevirtual #45
525: iload         5
527: ifne          534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #47
538: new           #39
541: dup
542: invokespecial #40
545: ldc           #41
547: invokevirtual #42
550: aload         8
552: invokevirtual #43
555: ldc           #44
557: invokevirtual #42
560: getstatic     #37
563: invokevirtual #43
566: ldc           #41
568: invokevirtual #42
571: invokevirtual #45
574: aload         8
576: getstatic     #37
579: invokevirtual #46
582: invokestatic  #47
585: aload         10
587: invokestatic  #16
590: aload         10
592: invokestatic  #17
595: ldc           #26
597: invokestatic  #19
600: aload         12
602: invokestatic  #16
605: aload         13
607: invokestatic  #16
610: aload         14
612: invokestatic  #16
615: aload         14
617: invokestatic  #17
620: ldc           #26
622: invokestatic  #19
625: aload         16
627: invokestatic  #16
630: aload         18
632: invokestatic  #16
635: aload         19
637: invokestatic  #16
640: aload         19
642: invokestatic  #17
645: ldc           #26
647: invokestatic  #19
650: aload         20
652: invokestatic  #16
655: new           #39
658: dup
659: invokespecial #40
662: ldc           #41
664: invokevirtual #42
667: iload         21
669: invokevirtual #84
672: ldc           #44
674: invokevirtual #42
677: iconst_0
678: invokevirtual #84
681: ldc           #41
683: invokevirtual #42
686: invokevirtual #45
689: iload         21
691: ifne          698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #47
702: aload         22
704: invokestatic  #16
707: aload         22
709: invokestatic  #17
712: ldc_w         #425
715: invokestatic  #19
718: aload         24
720: invokestatic  #16
723: aload         24
725: invokestatic  #17
728: ldc           #82
730: invokestatic  #19
733: aload         25
735: invokestatic  #16
738: aload         25
740: invokestatic  #17
743: ldc           #83
745: invokestatic  #19
748: new           #39
751: dup
752: invokespecial #40
755: ldc           #41
757: invokevirtual #42
760: iload         26
762: invokevirtual #84
765: ldc           #44
767: invokevirtual #42
770: iconst_0
771: invokevirtual #84
774: ldc           #41
776: invokevirtual #42
779: invokevirtual #45
782: iload         26
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #47
795: new           #39
798: dup
799: invokespecial #40
802: ldc           #41
804: invokevirtual #42
807: aload         27
809: invokevirtual #43
812: ldc           #44
814: invokevirtual #42
817: getstatic     #73
820: invokevirtual #43
823: ldc           #41
825: invokevirtual #42
828: invokevirtual #45
831: aload         27
833: getstatic     #73
836: invokevirtual #85
839: invokestatic  #47
842: new           #39
845: dup
846: invokespecial #40
849: ldc           #41
851: invokevirtual #42
854: aload         29
856: invokevirtual #43
859: ldc           #44
861: invokevirtual #42
864: getstatic     #73
867: invokevirtual #43
870: ldc           #41
872: invokevirtual #42
875: invokevirtual #45
878: aload         29
880: getstatic     #73
883: invokevirtual #85
886: invokestatic  #47
889: new           #39
892: dup
893: invokespecial #40
896: ldc           #41
898: invokevirtual #42
901: iload         30
903: invokevirtual #84
906: ldc           #44
908: invokevirtual #42
911: iconst_1
912: invokevirtual #84
915: ldc           #41
917: invokevirtual #42
920: invokevirtual #45
923: iload         30
925: iconst_1
926: if_icmpne     933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #47
937: aload         31
939: invokestatic  #16
942: aload         31
944: invokestatic  #17
947: ldc_w         #426
950: invokestatic  #19
953: return
Exception table:
from    to  target type
370   394   397   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 5017
End line: 5092
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math3.random.MersenneTwister mersenneTwister1 = new org.apache.commons.math3.random.MersenneTwister(1);
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100, (byte) 1 };
        mersenneTwister1.nextBytes(byteArray5);
        int int8 = mersenneTwister1.nextInt(6);
        mersenneTwister1.setSeed(0L);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister12 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double13 = mersenneTwister12.nextGaussian();
        int int15 = mersenneTwister12.nextInt((int) (short) 100);
        mersenneTwister12.setSeed(0);
        boolean boolean18 = mersenneTwister12.nextBoolean();
        int[] intArray23 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister24 = new org.apache.commons.math3.random.MersenneTwister(intArray23);
        int[] intArray29 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister30 = new org.apache.commons.math3.random.MersenneTwister(intArray29);
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray29, 3);
        int int33 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray23, intArray29);
        int[] intArray38 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister39 = new org.apache.commons.math3.random.MersenneTwister(intArray38);
        int[] intArray40 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38);
        int int41 = org.apache.commons.math3.util.MathArrays.distance1(intArray23, intArray38);
        mersenneTwister12.setSeed(intArray23);
        mersenneTwister1.setSeed(intArray23);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.linear.RealMatrix realMatrix53 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray51);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair55 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray51, (double) (-1.0f));
        double[] doubleArray56 = pointValuePair55.getPoint();
        int[] intArray63 = new int[] { (-127) };
        int[] intArray64 = org.apache.commons.math3.util.MathArrays.copyOf(intArray63);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister65 = new org.apache.commons.math3.random.MersenneTwister(intArray63);
        double[] doubleArray74 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray74);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister82 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker84 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray74, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister82, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker84);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer85.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray56, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister65, false, pointValuePairConvergenceChecker86);
        byte[] byteArray90 = new byte[] { (byte) 0, (byte) 1 };
        mersenneTwister65.nextBytes(byteArray90);
        mersenneTwister1.nextBytes(byteArray90);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[37, -12, -63]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7023867716137234d) + "'", double13 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix53);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-127]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-88, 20]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #427
20: aastore
21: invokevirtual #7
24: pop
25: new           #32
28: dup
29: iconst_1
30: invokespecial #33
33: astore_1
34: iconst_3
35: newarray       byte
37: dup
38: iconst_0
39: iconst_m1
40: bastore
41: dup
42: iconst_1
43: bipush        100
45: bastore
46: dup
47: iconst_2
48: iconst_1
49: bastore
50: astore_2
51: aload_1
52: aload_2
53: invokevirtual #428
56: aload_1
57: bipush        6
59: invokevirtual #225
62: istore_3
63: aload_1
64: lconst_0
65: invokevirtual #278
68: new           #32
71: dup
72: iconst_1
73: invokespecial #33
76: astore        4
78: aload         4
80: invokevirtual #168
83: dstore        5
85: aload         4
87: bipush        100
89: invokevirtual #225
92: istore        7
94: aload         4
96: iconst_0
97: invokevirtual #169
100: aload         4
102: invokevirtual #293
105: istore        8
107: iconst_4
108: newarray       int
110: dup
111: iconst_0
112: bipush        100
114: iastore
115: dup
116: iconst_1
117: iconst_0
118: iastore
119: dup
120: iconst_2
121: bipush        100
123: iastore
124: dup
125: iconst_3
126: bipush        52
128: iastore
129: astore        9
131: new           #32
134: dup
135: aload         9
137: invokespecial #112
140: astore        10
142: iconst_4
143: newarray       int
145: dup
146: iconst_0
147: bipush        100
149: iastore
150: dup
151: iconst_1
152: iconst_0
153: iastore
154: dup
155: iconst_2
156: bipush        100
158: iastore
159: dup
160: iconst_3
161: bipush        52
163: iastore
164: astore        11
166: new           #32
169: dup
170: aload         11
172: invokespecial #112
175: astore        12
177: aload         11
179: iconst_3
180: invokestatic  #310
183: astore        13
185: aload         9
187: aload         11
189: invokestatic  #306
192: istore        14
194: iconst_4
195: newarray       int
197: dup
198: iconst_0
199: bipush        100
201: iastore
202: dup
203: iconst_1
204: iconst_0
205: iastore
206: dup
207: iconst_2
208: bipush        100
210: iastore
211: dup
212: iconst_3
213: bipush        52
215: iastore
216: astore        15
218: new           #32
221: dup
222: aload         15
224: invokespecial #112
227: astore        16
229: aload         15
231: invokestatic  #226
234: astore        17
236: aload         9
238: aload         15
240: invokestatic  #429
243: istore        18
245: aload         4
247: aload         9
249: invokevirtual #228
252: aload_1
253: aload         9
255: invokevirtual #228
258: bipush        6
260: newarray       double
262: dup
263: iconst_0
264: dconst_0
265: dastore
266: dup
267: iconst_1
268: ldc2_w        #10
271: dastore
272: dup
273: iconst_2
274: dconst_1
275: dastore
276: dup
277: iconst_3
278: dconst_0
279: dastore
280: dup
281: iconst_4
282: dconst_1
283: dastore
284: dup
285: iconst_5
286: ldc2_w        #21
289: dastore
290: astore        19
292: aload         19
294: invokestatic  #23
297: aload         19
299: invokestatic  #24
302: astore        20
304: new           #58
307: dup
308: aload         19
310: ldc2_w        #59
313: invokespecial #61
316: astore        21
318: aload         21
320: invokevirtual #62
323: astore        22
325: iconst_1
326: newarray       int
328: dup
329: iconst_0
330: bipush        -127
332: iastore
333: astore        23
335: aload         23
337: invokestatic  #226
340: astore        24
342: new           #32
345: dup
346: aload         23
348: invokespecial #112
351: astore        25
353: bipush        6
355: newarray       double
357: dup
358: iconst_0
359: dconst_0
360: dastore
361: dup
362: iconst_1
363: ldc2_w        #10
366: dastore
367: dup
368: iconst_2
369: dconst_1
370: dastore
371: dup
372: iconst_3
373: dconst_0
374: dastore
375: dup
376: iconst_4
377: dconst_1
378: dastore
379: dup
380: iconst_5
381: ldc2_w        #21
384: dastore
385: astore        26
387: aload         26
389: invokestatic  #23
392: new           #32
395: dup
396: iconst_1
397: invokespecial #33
400: astore        27
402: new           #34
405: dup
406: invokespecial #35
409: astore        28
411: new           #8
414: dup
415: iconst_5
416: aload         26
418: bipush        100
420: dconst_0
421: iconst_0
422: iconst_0
423: bipush        100
425: aload         27
427: iconst_1
428: aload         28
430: invokespecial #36
433: astore        29
435: aload         29
437: invokevirtual #53
440: astore        30
442: new           #8
445: dup
446: bipush        36
448: aload         22
450: bipush        97
452: ldc2_w        #374
455: iconst_1
456: iconst_0
457: bipush        10
459: aload         25
461: iconst_0
462: aload         30
464: invokespecial #36
467: astore        31
469: iconst_2
470: newarray       byte
472: dup
473: iconst_0
474: iconst_0
475: bastore
476: dup
477: iconst_1
478: iconst_1
479: bastore
480: astore        32
482: aload         25
484: aload         32
486: invokevirtual #428
489: aload_1
490: aload         32
492: invokevirtual #428
495: aload_2
496: invokestatic  #16
499: aload_2
500: invokestatic  #430
503: ldc_w         #431
506: invokestatic  #19
509: new           #39
512: dup
513: invokespecial #40
516: ldc           #41
518: invokevirtual #42
521: iload_3
522: invokevirtual #81
525: ldc           #44
527: invokevirtual #42
530: iconst_5
531: invokevirtual #81
534: ldc           #41
536: invokevirtual #42
539: invokevirtual #45
542: iload_3
543: iconst_5
544: if_icmpne     551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #47
555: new           #39
558: dup
559: invokespecial #40
562: ldc           #41
564: invokevirtual #42
567: dload         5
569: invokevirtual #121
572: ldc           #44
574: invokevirtual #42
577: ldc2_w        #74
580: invokevirtual #121
583: ldc           #41
585: invokevirtual #42
588: invokevirtual #45
591: dload         5
593: ldc2_w        #74
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #47
608: new           #39
611: dup
612: invokespecial #40
615: ldc           #41
617: invokevirtual #42
620: iload         7
622: invokevirtual #81
625: ldc           #44
627: invokevirtual #42
630: bipush        31
632: invokevirtual #81
635: ldc           #41
637: invokevirtual #42
640: invokevirtual #45
643: iload         7
645: bipush        31
647: if_icmpne     654
650: iconst_1
651: goto          655
654: iconst_0
655: invokestatic  #47
658: new           #39
661: dup
662: invokespecial #40
665: ldc           #41
667: invokevirtual #42
670: iload         8
672: invokevirtual #84
675: ldc           #44
677: invokevirtual #42
680: iconst_1
681: invokevirtual #84
684: ldc           #41
686: invokevirtual #42
689: invokevirtual #45
692: iload         8
694: iconst_1
695: if_icmpne     702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #47
706: aload         9
708: invokestatic  #16
711: aload         9
713: invokestatic  #117
716: ldc           #118
718: invokestatic  #19
721: aload         11
723: invokestatic  #16
726: aload         11
728: invokestatic  #117
731: ldc           #118
733: invokestatic  #19
736: aload         13
738: invokestatic  #16
741: aload         13
743: invokestatic  #117
746: ldc_w         #432
749: invokestatic  #19
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: iload         14
766: invokevirtual #81
769: ldc           #44
771: invokevirtual #42
774: iconst_0
775: invokevirtual #81
778: ldc           #41
780: invokevirtual #42
783: invokevirtual #45
786: iload         14
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #47
799: aload         15
801: invokestatic  #16
804: aload         15
806: invokestatic  #117
809: ldc           #118
811: invokestatic  #19
814: aload         17
816: invokestatic  #16
819: aload         17
821: invokestatic  #117
824: ldc           #118
826: invokestatic  #19
829: new           #39
832: dup
833: invokespecial #40
836: ldc           #41
838: invokevirtual #42
841: iload         18
843: invokevirtual #81
846: ldc           #44
848: invokevirtual #42
851: iconst_0
852: invokevirtual #81
855: ldc           #41
857: invokevirtual #42
860: invokevirtual #45
863: iload         18
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #47
876: aload         19
878: invokestatic  #16
881: aload         19
883: invokestatic  #17
886: ldc           #26
888: invokestatic  #19
891: aload         20
893: invokestatic  #16
896: aload         22
898: invokestatic  #16
901: aload         22
903: invokestatic  #17
906: ldc           #26
908: invokestatic  #19
911: aload         23
913: invokestatic  #16
916: aload         23
918: invokestatic  #117
921: ldc           #229
923: invokestatic  #19
926: aload         24
928: invokestatic  #16
931: aload         24
933: invokestatic  #117
936: ldc           #229
938: invokestatic  #19
941: aload         26
943: invokestatic  #16
946: aload         26
948: invokestatic  #17
951: ldc           #26
953: invokestatic  #19
956: aload         30
958: invokestatic  #16
961: aload         32
963: invokestatic  #16
966: aload         32
968: invokestatic  #430
971: ldc_w         #433
974: invokestatic  #19
977: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 5095
End line: 5161
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        double[] doubleArray1 = new double[] { '4' };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math3.util.MathArrays.equals(doubleArray1, doubleArray2);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException9 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection7, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = nonMonotonicSequenceException9.getDirection();
        boolean boolean12 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray1, orderDirection10, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray21);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector23, arrayRealVector32);
        double[] doubleArray42 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray42);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray42);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray51);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector44, arrayRealVector53);
        double[] doubleArray61 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray61);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray61);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector64 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector53, arrayRealVector63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = arrayRealVector32.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector63);
        double[] doubleArray66 = arrayRealVector32.toArray();
        double double67 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray66);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair69 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray66, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray66);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray1, doubleArray66);
        org.apache.commons.math3.linear.RealVectorChangingVisitor realVectorChangingVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double73 = arrayRealVector71.walkInDefaultOrder(realVectorChangingVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 201.0174121811342d + "'", double67 == 201.0174121811342d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: getstatic     #73
48: astore        4
50: new           #67
53: dup
54: ldc2_w        #74
57: invokestatic  #76
60: iconst_1
61: invokestatic  #77
64: bipush        100
66: aload         4
68: iconst_1
69: invokespecial #78
72: astore        5
74: aload         5
76: invokevirtual #79
79: astore        6
81: aload_1
82: aload         6
84: iconst_1
85: invokestatic  #157
88: istore        7
90: aload_1
91: invokestatic  #24
94: astore        8
96: bipush        6
98: newarray       double
100: dup
101: iconst_0
102: dconst_0
103: dastore
104: dup
105: iconst_1
106: ldc2_w        #10
109: dastore
110: dup
111: iconst_2
112: dconst_1
113: dastore
114: dup
115: iconst_3
116: dconst_0
117: dastore
118: dup
119: iconst_4
120: dconst_1
121: dastore
122: dup
123: iconst_5
124: ldc2_w        #21
127: dastore
128: astore        9
130: aload         9
132: invokestatic  #23
135: new           #96
138: dup
139: aload         9
141: invokespecial #97
144: astore        10
146: bipush        6
148: newarray       double
150: dup
151: iconst_0
152: dconst_0
153: dastore
154: dup
155: iconst_1
156: ldc2_w        #10
159: dastore
160: dup
161: iconst_2
162: dconst_1
163: dastore
164: dup
165: iconst_3
166: dconst_0
167: dastore
168: dup
169: iconst_4
170: dconst_1
171: dastore
172: dup
173: iconst_5
174: ldc2_w        #21
177: dastore
178: astore        11
180: aload         11
182: invokestatic  #23
185: new           #96
188: dup
189: aload         11
191: invokespecial #97
194: astore        12
196: new           #96
199: dup
200: aload         10
202: aload         12
204: invokespecial #99
207: astore        13
209: bipush        6
211: newarray       double
213: dup
214: iconst_0
215: dconst_0
216: dastore
217: dup
218: iconst_1
219: ldc2_w        #10
222: dastore
223: dup
224: iconst_2
225: dconst_1
226: dastore
227: dup
228: iconst_3
229: dconst_0
230: dastore
231: dup
232: iconst_4
233: dconst_1
234: dastore
235: dup
236: iconst_5
237: ldc2_w        #21
240: dastore
241: astore        14
243: aload         14
245: invokestatic  #23
248: new           #96
251: dup
252: aload         14
254: invokespecial #97
257: astore        15
259: bipush        6
261: newarray       double
263: dup
264: iconst_0
265: dconst_0
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #10
272: dastore
273: dup
274: iconst_2
275: dconst_1
276: dastore
277: dup
278: iconst_3
279: dconst_0
280: dastore
281: dup
282: iconst_4
283: dconst_1
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #21
290: dastore
291: astore        16
293: aload         16
295: invokestatic  #23
298: new           #96
301: dup
302: aload         16
304: invokespecial #97
307: astore        17
309: new           #96
312: dup
313: aload         15
315: aload         17
317: invokespecial #99
320: astore        18
322: bipush        6
324: newarray       double
326: dup
327: iconst_0
328: dconst_0
329: dastore
330: dup
331: iconst_1
332: ldc2_w        #10
335: dastore
336: dup
337: iconst_2
338: dconst_1
339: dastore
340: dup
341: iconst_3
342: dconst_0
343: dastore
344: dup
345: iconst_4
346: dconst_1
347: dastore
348: dup
349: iconst_5
350: ldc2_w        #21
353: dastore
354: astore        19
356: aload         19
358: invokestatic  #23
361: new           #96
364: dup
365: aload         19
367: invokespecial #97
370: astore        20
372: new           #96
375: dup
376: aload         17
378: aload         20
380: invokespecial #99
383: astore        21
385: aload         12
387: dconst_1
388: dconst_1
389: aload         20
391: invokevirtual #100
394: astore        22
396: aload         12
398: invokevirtual #101
401: astore        23
403: aload         23
405: invokestatic  #135
408: dstore        24
410: new           #107
413: dup
414: aload         23
416: ldc2_w        #143
419: invokestatic  #76
422: invokespecial #110
425: astore        26
427: new           #8
430: dup
431: bipush        -127
433: aload         23
435: invokespecial #9
438: astore        27
440: new           #96
443: dup
444: aload_1
445: aload         23
447: invokespecial #139
450: astore        28
452: aconst_null
453: astore        29
455: aload         28
457: aload         29
459: invokevirtual #435
462: dstore        30
464: ldc           #29
466: invokestatic  #14
469: goto          474
472: astore        30
474: aload_1
475: invokestatic  #16
478: aload_1
479: invokestatic  #17
482: ldc           #82
484: invokestatic  #19
487: aload_2
488: invokestatic  #16
491: aload_2
492: invokestatic  #17
495: ldc           #83
497: invokestatic  #19
500: new           #39
503: dup
504: invokespecial #40
507: ldc           #41
509: invokevirtual #42
512: iload_3
513: invokevirtual #84
516: ldc           #44
518: invokevirtual #42
521: iconst_0
522: invokevirtual #84
525: ldc           #41
527: invokevirtual #42
530: invokevirtual #45
533: iload_3
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #47
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: aload         4
559: invokevirtual #43
562: ldc           #44
564: invokevirtual #42
567: getstatic     #73
570: invokevirtual #43
573: ldc           #41
575: invokevirtual #42
578: invokevirtual #45
581: aload         4
583: getstatic     #73
586: invokevirtual #85
589: invokestatic  #47
592: new           #39
595: dup
596: invokespecial #40
599: ldc           #41
601: invokevirtual #42
604: aload         6
606: invokevirtual #43
609: ldc           #44
611: invokevirtual #42
614: getstatic     #73
617: invokevirtual #43
620: ldc           #41
622: invokevirtual #42
625: invokevirtual #45
628: aload         6
630: getstatic     #73
633: invokevirtual #85
636: invokestatic  #47
639: new           #39
642: dup
643: invokespecial #40
646: ldc           #41
648: invokevirtual #42
651: iload         7
653: invokevirtual #84
656: ldc           #44
658: invokevirtual #42
661: iconst_1
662: invokevirtual #84
665: ldc           #41
667: invokevirtual #42
670: invokevirtual #45
673: iload         7
675: iconst_1
676: if_icmpne     683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #47
687: aload         8
689: invokestatic  #16
692: aload         9
694: invokestatic  #16
697: aload         9
699: invokestatic  #17
702: ldc           #26
704: invokestatic  #19
707: aload         11
709: invokestatic  #16
712: aload         11
714: invokestatic  #17
717: ldc           #26
719: invokestatic  #19
722: aload         14
724: invokestatic  #16
727: aload         14
729: invokestatic  #17
732: ldc           #26
734: invokestatic  #19
737: aload         16
739: invokestatic  #16
742: aload         16
744: invokestatic  #17
747: ldc           #26
749: invokestatic  #19
752: aload         19
754: invokestatic  #16
757: aload         19
759: invokestatic  #17
762: ldc           #26
764: invokestatic  #19
767: aload         22
769: invokestatic  #16
772: aload         23
774: invokestatic  #16
777: aload         23
779: invokestatic  #17
782: ldc           #105
784: invokestatic  #19
787: new           #39
790: dup
791: invokespecial #40
794: ldc           #41
796: invokevirtual #42
799: dload         24
801: invokevirtual #121
804: ldc           #44
806: invokevirtual #42
809: ldc2_w        #145
812: invokevirtual #121
815: ldc           #41
817: invokevirtual #42
820: invokevirtual #45
823: dload         24
825: ldc2_w        #145
828: dcmpl
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #47
840: return
Exception table:
from    to  target type
455   469   472   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 5164
End line: 5218
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray3 = blockRealMatrix2.getData();
        double double4 = blockRealMatrix2.getFrobeniusNorm();
        org.apache.commons.math3.linear.RealMatrix realMatrix6 = blockRealMatrix2.scalarMultiply(0.0d);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = blockRealMatrix2.scalarMultiply(0.08696317672729492d);
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        org.apache.commons.math3.linear.RealVector realVector20 = arrayRealVector19.copy();
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector19.mapDivide((double) (-1.0f));
        double[] doubleArray29 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray29);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray29);
        org.apache.commons.math3.linear.RealVector realVector33 = arrayRealVector31.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math3.linear.ArrayRealVector(realVector33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = arrayRealVector19.add(realVector33);
        double[] doubleArray42 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray42);
        org.apache.commons.math3.linear.RealMatrix realMatrix44 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray42);
        boolean boolean45 = arrayRealVector35.equals((java.lang.Object) doubleArray42);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair47 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray42, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister54 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double55 = mersenneTwister54.nextGaussian();
        double double56 = mersenneTwister54.nextGaussian();
        mersenneTwister54.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray42, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister54, false);
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix2.setColumn((int) '#', doubleArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.linear.MatrixDimensionMismatchException; message: got 6x1 but expected 31x1");
        } catch (org.apache.commons.math3.linear.MatrixDimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix6);
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertNotNull(arrayRealVector35);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.7023867716137234d) + "'", double55 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.40343496390144584d + "'", double56 == 0.40343496390144584d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: bipush        31
31: bipush        52
33: invokespecial #266
36: astore_1
37: aload_1
38: invokevirtual #419
41: astore_2
42: aload_1
43: invokevirtual #301
46: dstore_3
47: aload_1
48: dconst_0
49: invokevirtual #305
52: astore        5
54: aload_1
55: ldc2_w        #374
58: invokevirtual #305
61: astore        6
63: bipush        6
65: newarray       double
67: dup
68: iconst_0
69: dconst_0
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #10
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: dup
82: iconst_3
83: dconst_0
84: dastore
85: dup
86: iconst_4
87: dconst_1
88: dastore
89: dup
90: iconst_5
91: ldc2_w        #21
94: dastore
95: astore        7
97: aload         7
99: invokestatic  #23
102: new           #96
105: dup
106: aload         7
108: invokespecial #97
111: astore        8
113: aload         8
115: invokevirtual #98
118: astore        9
120: aload         8
122: ldc2_w        #59
125: invokevirtual #151
128: astore        10
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        11
164: aload         11
166: invokestatic  #23
169: new           #96
172: dup
173: aload         11
175: invokespecial #97
178: astore        12
180: aload         12
182: dconst_1
183: invokevirtual #151
186: astore        13
188: new           #96
191: dup
192: aload         13
194: invokespecial #152
197: astore        14
199: aload         8
201: aload         13
203: invokevirtual #153
206: astore        15
208: bipush        6
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #10
221: dastore
222: dup
223: iconst_2
224: dconst_1
225: dastore
226: dup
227: iconst_3
228: dconst_0
229: dastore
230: dup
231: iconst_4
232: dconst_1
233: dastore
234: dup
235: iconst_5
236: ldc2_w        #21
239: dastore
240: astore        16
242: aload         16
244: invokestatic  #23
247: aload         16
249: invokestatic  #24
252: astore        17
254: aload         15
256: aload         16
258: invokevirtual #154
261: istore        18
263: new           #58
266: dup
267: aload         16
269: ldc2_w        #166
272: invokespecial #61
275: astore        19
277: new           #32
280: dup
281: iconst_1
282: invokespecial #33
285: astore        20
287: aload         20
289: invokevirtual #168
292: dstore        21
294: aload         20
296: invokevirtual #168
299: dstore        23
301: aload         20
303: bipush        10
305: invokevirtual #169
308: new           #8
311: dup
312: iconst_1
313: aload         16
315: iconst_1
316: ldc2_w        #170
319: iconst_1
320: bipush        52
322: bipush        52
324: aload         20
326: iconst_0
327: invokespecial #172
330: astore        25
332: aload_1
333: bipush        35
335: aload         16
337: invokevirtual #296
340: ldc_w         #437
343: invokestatic  #14
346: goto          351
349: astore        26
351: aload_2
352: invokestatic  #16
355: new           #39
358: dup
359: invokespecial #40
362: ldc           #41
364: invokevirtual #42
367: dload_3
368: invokevirtual #121
371: ldc           #44
373: invokevirtual #42
376: dconst_0
377: invokevirtual #121
380: ldc           #41
382: invokevirtual #42
385: invokevirtual #45
388: dload_3
389: dconst_0
390: dcmpl
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #47
402: aload         5
404: invokestatic  #16
407: aload         6
409: invokestatic  #16
412: aload         7
414: invokestatic  #16
417: aload         7
419: invokestatic  #17
422: ldc           #26
424: invokestatic  #19
427: aload         9
429: invokestatic  #16
432: aload         10
434: invokestatic  #16
437: aload         11
439: invokestatic  #16
442: aload         11
444: invokestatic  #17
447: ldc           #26
449: invokestatic  #19
452: aload         13
454: invokestatic  #16
457: aload         15
459: invokestatic  #16
462: aload         16
464: invokestatic  #16
467: aload         16
469: invokestatic  #17
472: ldc           #26
474: invokestatic  #19
477: aload         17
479: invokestatic  #16
482: new           #39
485: dup
486: invokespecial #40
489: ldc           #41
491: invokevirtual #42
494: iload         18
496: invokevirtual #84
499: ldc           #44
501: invokevirtual #42
504: iconst_0
505: invokevirtual #84
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: iload         18
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #47
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: dload         21
543: invokevirtual #121
546: ldc           #44
548: invokevirtual #42
551: ldc2_w        #74
554: invokevirtual #121
557: ldc           #41
559: invokevirtual #42
562: invokevirtual #45
565: dload         21
567: ldc2_w        #74
570: dcmpl
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #47
582: new           #39
585: dup
586: invokespecial #40
589: ldc           #41
591: invokevirtual #42
594: dload         23
596: invokevirtual #121
599: ldc           #44
601: invokevirtual #42
604: ldc2_w        #176
607: invokevirtual #121
610: ldc           #41
612: invokevirtual #42
615: invokevirtual #45
618: dload         23
620: ldc2_w        #176
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #47
635: return
Exception table:
from    to  target type
332   346   349   Class org/apache/commons/math3/linear/MatrixDimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 5221
End line: 5252
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray16);
        org.apache.commons.math3.linear.RealMatrix realMatrix19 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair20 = cMAESOptimizer2.optimize((int) (byte) 0, multivariateFunction8, goalType9, doubleArray16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + goalType9 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType9.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(realMatrix19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #232
59: astore        6
61: aconst_null
62: astore        7
64: getstatic     #150
67: astore        8
69: bipush        6
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #10
82: dastore
83: dup
84: iconst_2
85: dconst_1
86: dastore
87: dup
88: iconst_3
89: dconst_0
90: dastore
91: dup
92: iconst_4
93: dconst_1
94: dastore
95: dup
96: iconst_5
97: ldc2_w        #21
100: dastore
101: astore        9
103: aload         9
105: invokestatic  #23
108: aload         9
110: invokestatic  #24
113: astore        10
115: aload         9
117: invokestatic  #192
120: astore        11
122: aload_2
123: iconst_0
124: aload         7
126: aload         8
128: aload         9
130: invokevirtual #12
133: astore        12
135: ldc           #13
137: invokestatic  #14
140: goto          145
143: astore        12
145: new           #39
148: dup
149: invokespecial #40
152: ldc           #41
154: invokevirtual #42
157: iload_3
158: invokevirtual #81
161: ldc           #44
163: invokevirtual #42
166: iconst_0
167: invokevirtual #81
170: ldc           #41
172: invokevirtual #42
175: invokevirtual #45
178: iload_3
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #47
190: aload         4
192: invokestatic  #16
195: aload         5
197: invokestatic  #16
200: aload         6
202: invokestatic  #16
205: new           #39
208: dup
209: invokespecial #40
212: ldc           #41
214: invokevirtual #42
217: aload         8
219: invokevirtual #43
222: ldc           #44
224: invokevirtual #42
227: getstatic     #150
230: invokevirtual #43
233: ldc           #41
235: invokevirtual #42
238: invokevirtual #45
241: aload         8
243: getstatic     #150
246: invokevirtual #46
249: invokestatic  #47
252: aload         9
254: invokestatic  #16
257: aload         9
259: invokestatic  #17
262: ldc           #26
264: invokestatic  #19
267: aload         10
269: invokestatic  #16
272: aload         11
274: invokestatic  #16
277: return
Exception table:
from    to  target type
122   140   143   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 5255
End line: 5300
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray7);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction14 = null;
        org.apache.commons.math3.optimization.GoalType goalType15 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray19 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray20 = new double[][] { doubleArray19 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix22 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray20, true);
        double[][] doubleArray23 = array2DRowRealMatrix22.getData();
        double[] doubleArray26 = new double[] { '4' };
        double[] doubleArray27 = new double[] {};
        boolean boolean28 = org.apache.commons.math3.util.MathArrays.equals(doubleArray26, doubleArray27);
        array2DRowRealMatrix22.setColumn((int) (short) 1, doubleArray26);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException35 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection33, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection36 = nonMonotonicSequenceException35.getDirection();
        boolean boolean38 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray26, orderDirection36, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = cMAESOptimizer12.optimize(6, multivariateFunction14, goalType15, doubleArray26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertTrue("'" + goalType15 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType15.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection36 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection36.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #440
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: new           #8
82: dup
83: bipush        36
85: aload_1
86: invokespecial #9
89: astore        4
91: aconst_null
92: astore        5
94: getstatic     #150
97: astore        6
99: iconst_3
100: newarray       double
102: dup
103: iconst_0
104: ldc2_w        #87
107: dastore
108: dup
109: iconst_1
110: ldc2_w        #59
113: dastore
114: dup
115: iconst_2
116: ldc2_w        #59
119: dastore
120: astore        7
122: iconst_1
123: anewarray     #89
126: dup
127: iconst_0
128: aload         7
130: aastore
131: astore        8
133: new           #90
136: dup
137: aload         8
139: iconst_1
140: invokespecial #91
143: astore        9
145: aload         9
147: invokevirtual #92
150: astore        10
152: iconst_1
153: newarray       double
155: dup
156: iconst_0
157: ldc2_w        #70
160: dastore
161: astore        11
163: iconst_0
164: newarray       double
166: astore        12
168: aload         11
170: aload         12
172: invokestatic  #72
175: istore        13
177: aload         9
179: iconst_1
180: aload         11
182: invokevirtual #93
185: getstatic     #73
188: astore        14
190: new           #67
193: dup
194: ldc2_w        #74
197: invokestatic  #76
200: iconst_1
201: invokestatic  #77
204: bipush        100
206: aload         14
208: iconst_1
209: invokespecial #78
212: astore        15
214: aload         15
216: invokevirtual #79
219: astore        16
221: aload         11
223: aload         16
225: iconst_0
226: invokestatic  #157
229: istore        17
231: aload         4
233: bipush        6
235: aload         5
237: aload         6
239: aload         11
241: invokevirtual #12
244: astore        18
246: ldc           #13
248: invokestatic  #14
251: goto          256
254: astore        18
256: aload_1
257: invokestatic  #16
260: aload_1
261: invokestatic  #17
264: ldc           #26
266: invokestatic  #19
269: aload_2
270: invokestatic  #16
273: new           #39
276: dup
277: invokespecial #40
280: ldc           #41
282: invokevirtual #42
285: aload         6
287: invokevirtual #43
290: ldc           #44
292: invokevirtual #42
295: getstatic     #150
298: invokevirtual #43
301: ldc           #41
303: invokevirtual #42
306: invokevirtual #45
309: aload         6
311: getstatic     #150
314: invokevirtual #46
317: invokestatic  #47
320: aload         7
322: invokestatic  #16
325: aload         7
327: invokestatic  #17
330: ldc           #94
332: invokestatic  #19
335: aload         8
337: invokestatic  #16
340: aload         10
342: invokestatic  #16
345: aload         11
347: invokestatic  #16
350: aload         11
352: invokestatic  #17
355: ldc           #82
357: invokestatic  #19
360: aload         12
362: invokestatic  #16
365: aload         12
367: invokestatic  #17
370: ldc           #83
372: invokestatic  #19
375: new           #39
378: dup
379: invokespecial #40
382: ldc           #41
384: invokevirtual #42
387: iload         13
389: invokevirtual #84
392: ldc           #44
394: invokevirtual #42
397: iconst_0
398: invokevirtual #84
401: ldc           #41
403: invokevirtual #42
406: invokevirtual #45
409: iload         13
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #47
422: new           #39
425: dup
426: invokespecial #40
429: ldc           #41
431: invokevirtual #42
434: aload         14
436: invokevirtual #43
439: ldc           #44
441: invokevirtual #42
444: getstatic     #73
447: invokevirtual #43
450: ldc           #41
452: invokevirtual #42
455: invokevirtual #45
458: aload         14
460: getstatic     #73
463: invokevirtual #85
466: invokestatic  #47
469: new           #39
472: dup
473: invokespecial #40
476: ldc           #41
478: invokevirtual #42
481: aload         16
483: invokevirtual #43
486: ldc           #44
488: invokevirtual #42
491: getstatic     #73
494: invokevirtual #43
497: ldc           #41
499: invokevirtual #42
502: invokevirtual #45
505: aload         16
507: getstatic     #73
510: invokevirtual #85
513: invokestatic  #47
516: new           #39
519: dup
520: invokespecial #40
523: ldc           #41
525: invokevirtual #42
528: iload         17
530: invokevirtual #84
533: ldc           #44
535: invokevirtual #42
538: iconst_1
539: invokevirtual #84
542: ldc           #41
544: invokevirtual #42
547: invokevirtual #45
550: iload         17
552: iconst_1
553: if_icmpne     560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #47
564: return
Exception table:
from    to  target type
231   251   254   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 5303
End line: 5325
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        int int24 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #441
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #125
140: istore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: new           #39
163: dup
164: invokespecial #40
167: ldc           #41
169: invokevirtual #42
172: iload         6
174: invokevirtual #81
177: ldc           #44
179: invokevirtual #42
182: iconst_0
183: invokevirtual #81
186: ldc           #41
188: invokevirtual #42
191: invokevirtual #45
194: iload         6
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #47
207: aload         7
209: invokestatic  #155
212: aload         8
214: invokestatic  #16
217: aload         9
219: invokestatic  #16
222: new           #39
225: dup
226: invokespecial #40
229: ldc           #41
231: invokevirtual #42
234: iload         10
236: invokevirtual #81
239: ldc           #44
241: invokevirtual #42
244: iconst_0
245: invokevirtual #81
248: ldc           #41
250: invokevirtual #42
253: invokevirtual #45
256: iload         10
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #47
269: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 5328
End line: 5334
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #442
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        35
31: invokespecial #245
34: astore_1
35: aload_1
36: invokevirtual #125
39: istore_2
40: new           #39
43: dup
44: invokespecial #40
47: ldc           #41
49: invokevirtual #42
52: iload_2
53: invokevirtual #81
56: ldc           #44
58: invokevirtual #42
61: iconst_0
62: invokevirtual #81
65: ldc           #41
67: invokevirtual #42
70: invokevirtual #45
73: iload_2
74: ifne          81
77: iconst_1
78: goto          82
81: iconst_0
82: invokestatic  #47
85: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 5337
End line: 5371
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.util.Incrementor incrementor44 = cMAESOptimizer43.evaluations;
        int int45 = cMAESOptimizer43.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(incrementor44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #443
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: aload         13
231: getfield      #191
234: astore        14
236: aload         13
238: invokevirtual #125
241: istore        15
243: aload_1
244: invokestatic  #16
247: aload_1
248: invokestatic  #17
251: ldc           #26
253: invokestatic  #19
256: aload_2
257: invokestatic  #16
260: aload         4
262: invokestatic  #16
265: aload         4
267: invokestatic  #17
270: ldc           #26
272: invokestatic  #19
275: aload         5
277: invokestatic  #16
280: aload         5
282: invokestatic  #117
285: ldc           #229
287: invokestatic  #19
290: aload         6
292: invokestatic  #16
295: aload         6
297: invokestatic  #117
300: ldc           #229
302: invokestatic  #19
305: aload         8
307: invokestatic  #16
310: aload         8
312: invokestatic  #17
315: ldc           #26
317: invokestatic  #19
320: aload         12
322: invokestatic  #16
325: aload         14
327: invokestatic  #16
330: new           #39
333: dup
334: invokespecial #40
337: ldc           #41
339: invokevirtual #42
342: iload         15
344: invokevirtual #81
347: ldc           #44
349: invokevirtual #42
352: iconst_0
353: invokevirtual #81
356: ldc           #41
358: invokevirtual #42
361: invokevirtual #45
364: iload         15
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #47
377: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 5374
End line: 5437
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(realVector10);
        double[] doubleArray18 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector20.copy();
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector20.mapDivide((double) (-1.0f));
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(realVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = arrayRealVector20.add(realVector34);
        double double37 = arrayRealVector11.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        double[] doubleArray44 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray44);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector46, arrayRealVector55);
        double[] doubleArray63 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector55, arrayRealVector65);
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector11.subtract((org.apache.commons.math3.linear.RealVector) arrayRealVector55);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray75);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair79 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray75, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray75);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, doubleArray75);
        double[] doubleArray83 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray75, 30000.000000000004d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10102.0d + "'", double37 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 26785.71428571429, 267.8571428571429, 0.0, 267.8571428571429, 2678.571428571429]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #10
254: dastore
255: dup
256: iconst_2
257: dconst_1
258: dastore
259: dup
260: iconst_3
261: dconst_0
262: dastore
263: dup
264: iconst_4
265: dconst_1
266: dastore
267: dup
268: iconst_5
269: ldc2_w        #21
272: dastore
273: astore        16
275: aload         16
277: invokestatic  #23
280: new           #96
283: dup
284: aload         16
286: invokespecial #97
289: astore        17
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: ldc2_w        #10
304: dastore
305: dup
306: iconst_2
307: dconst_1
308: dastore
309: dup
310: iconst_3
311: dconst_0
312: dastore
313: dup
314: iconst_4
315: dconst_1
316: dastore
317: dup
318: iconst_5
319: ldc2_w        #21
322: dastore
323: astore        18
325: aload         18
327: invokestatic  #23
330: new           #96
333: dup
334: aload         18
336: invokespecial #97
339: astore        19
341: new           #96
344: dup
345: aload         17
347: aload         19
349: invokespecial #99
352: astore        20
354: bipush        6
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #10
367: dastore
368: dup
369: iconst_2
370: dconst_1
371: dastore
372: dup
373: iconst_3
374: dconst_0
375: dastore
376: dup
377: iconst_4
378: dconst_1
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #21
385: dastore
386: astore        21
388: aload         21
390: invokestatic  #23
393: new           #96
396: dup
397: aload         21
399: invokespecial #97
402: astore        22
404: new           #96
407: dup
408: aload         19
410: aload         22
412: invokespecial #99
415: astore        23
417: aload         4
419: aload         19
421: invokevirtual #445
424: astore        24
426: bipush        6
428: newarray       double
430: dup
431: iconst_0
432: dconst_0
433: dastore
434: dup
435: iconst_1
436: ldc2_w        #10
439: dastore
440: dup
441: iconst_2
442: dconst_1
443: dastore
444: dup
445: iconst_3
446: dconst_0
447: dastore
448: dup
449: iconst_4
450: dconst_1
451: dastore
452: dup
453: iconst_5
454: ldc2_w        #21
457: dastore
458: astore        25
460: aload         25
462: invokestatic  #23
465: aload         25
467: invokestatic  #24
470: astore        26
472: new           #58
475: dup
476: aload         25
478: ldc2_w        #59
481: invokespecial #61
484: astore        27
486: new           #8
489: dup
490: bipush        36
492: aload         25
494: invokespecial #9
497: astore        28
499: new           #96
502: dup
503: aload         4
505: aload         25
507: invokespecial #102
510: astore        29
512: aload         25
514: ldc2_w        #446
517: invokestatic  #210
520: astore        30
522: aload_1
523: invokestatic  #16
526: aload_1
527: invokestatic  #17
530: ldc           #26
532: invokestatic  #19
535: aload_3
536: invokestatic  #16
539: aload         5
541: invokestatic  #16
544: aload         5
546: invokestatic  #17
549: ldc           #26
551: invokestatic  #19
554: aload         7
556: invokestatic  #16
559: aload         8
561: invokestatic  #16
564: aload         9
566: invokestatic  #16
569: aload         9
571: invokestatic  #17
574: ldc           #26
576: invokestatic  #19
579: aload         11
581: invokestatic  #16
584: aload         13
586: invokestatic  #16
589: new           #39
592: dup
593: invokespecial #40
596: ldc           #41
598: invokevirtual #42
601: dload         14
603: invokevirtual #121
606: ldc           #44
608: invokevirtual #42
611: ldc2_w        #298
614: invokevirtual #121
617: ldc           #41
619: invokevirtual #42
622: invokevirtual #45
625: dload         14
627: ldc2_w        #298
630: dcmpl
631: ifne          638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #47
642: aload         16
644: invokestatic  #16
647: aload         16
649: invokestatic  #17
652: ldc           #26
654: invokestatic  #19
657: aload         18
659: invokestatic  #16
662: aload         18
664: invokestatic  #17
667: ldc           #26
669: invokestatic  #19
672: aload         21
674: invokestatic  #16
677: aload         21
679: invokestatic  #17
682: ldc           #26
684: invokestatic  #19
687: aload         24
689: invokestatic  #16
692: aload         25
694: invokestatic  #16
697: aload         25
699: invokestatic  #17
702: ldc           #26
704: invokestatic  #19
707: aload         26
709: invokestatic  #16
712: aload         30
714: invokestatic  #16
717: aload         30
719: invokestatic  #17
722: ldc_w         #448
725: invokestatic  #19
728: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 5440
End line: 5505
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        int[] intArray0 = null;
        int[] intArray5 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister6 = new org.apache.commons.math3.random.MersenneTwister(intArray5);
        int[] intArray8 = org.apache.commons.math3.util.MathArrays.copyOf(intArray5, 3);
        int[] intArray13 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister14 = new org.apache.commons.math3.random.MersenneTwister(intArray13);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19, 3);
        int int23 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray13, intArray19);
        int[] intArray28 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister29 = new org.apache.commons.math3.random.MersenneTwister(intArray28);
        int[] intArray30 = org.apache.commons.math3.util.MathArrays.copyOf(intArray28);
        int int31 = org.apache.commons.math3.util.MathArrays.distance1(intArray13, intArray28);
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray28);
        double[] doubleArray40 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray40);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister48 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker50 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray40, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister48, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker50);
        int[] intArray56 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister57 = new org.apache.commons.math3.random.MersenneTwister(intArray56);
        int[] intArray58 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56);
        int[] intArray63 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister64 = new org.apache.commons.math3.random.MersenneTwister(intArray63);
        int int65 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray58, intArray63);
        mersenneTwister48.setSeed(intArray58);
        int int67 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray8, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = org.apache.commons.math3.util.MathArrays.distance(intArray0, intArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, 0, 100]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_4
28: newarray       int
30: dup
31: iconst_0
32: bipush        100
34: iastore
35: dup
36: iconst_1
37: iconst_0
38: iastore
39: dup
40: iconst_2
41: bipush        100
43: iastore
44: dup
45: iconst_3
46: bipush        52
48: iastore
49: astore_2
50: new           #32
53: dup
54: aload_2
55: invokespecial #112
58: astore_3
59: aload_2
60: iconst_3
61: invokestatic  #310
64: astore        4
66: iconst_4
67: newarray       int
69: dup
70: iconst_0
71: bipush        100
73: iastore
74: dup
75: iconst_1
76: iconst_0
77: iastore
78: dup
79: iconst_2
80: bipush        100
82: iastore
83: dup
84: iconst_3
85: bipush        52
87: iastore
88: astore        5
90: new           #32
93: dup
94: aload         5
96: invokespecial #112
99: astore        6
101: iconst_4
102: newarray       int
104: dup
105: iconst_0
106: bipush        100
108: iastore
109: dup
110: iconst_1
111: iconst_0
112: iastore
113: dup
114: iconst_2
115: bipush        100
117: iastore
118: dup
119: iconst_3
120: bipush        52
122: iastore
123: astore        7
125: new           #32
128: dup
129: aload         7
131: invokespecial #112
134: astore        8
136: aload         7
138: iconst_3
139: invokestatic  #310
142: astore        9
144: aload         5
146: aload         7
148: invokestatic  #306
151: istore        10
153: iconst_4
154: newarray       int
156: dup
157: iconst_0
158: bipush        100
160: iastore
161: dup
162: iconst_1
163: iconst_0
164: iastore
165: dup
166: iconst_2
167: bipush        100
169: iastore
170: dup
171: iconst_3
172: bipush        52
174: iastore
175: astore        11
177: new           #32
180: dup
181: aload         11
183: invokespecial #112
186: astore        12
188: aload         11
190: invokestatic  #226
193: astore        13
195: aload         5
197: aload         11
199: invokestatic  #429
202: istore        14
204: aload         4
206: aload         11
208: invokestatic  #306
211: istore        15
213: bipush        6
215: newarray       double
217: dup
218: iconst_0
219: dconst_0
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #10
226: dastore
227: dup
228: iconst_2
229: dconst_1
230: dastore
231: dup
232: iconst_3
233: dconst_0
234: dastore
235: dup
236: iconst_4
237: dconst_1
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #21
244: dastore
245: astore        16
247: aload         16
249: invokestatic  #23
252: new           #32
255: dup
256: iconst_1
257: invokespecial #33
260: astore        17
262: new           #34
265: dup
266: invokespecial #35
269: astore        18
271: new           #8
274: dup
275: iconst_5
276: aload         16
278: bipush        100
280: dconst_0
281: iconst_0
282: iconst_0
283: bipush        100
285: aload         17
287: iconst_1
288: aload         18
290: invokespecial #36
293: astore        19
295: iconst_4
296: newarray       int
298: dup
299: iconst_0
300: bipush        100
302: iastore
303: dup
304: iconst_1
305: iconst_0
306: iastore
307: dup
308: iconst_2
309: bipush        100
311: iastore
312: dup
313: iconst_3
314: bipush        52
316: iastore
317: astore        20
319: new           #32
322: dup
323: aload         20
325: invokespecial #112
328: astore        21
330: aload         20
332: invokestatic  #226
335: astore        22
337: iconst_4
338: newarray       int
340: dup
341: iconst_0
342: bipush        100
344: iastore
345: dup
346: iconst_1
347: iconst_0
348: iastore
349: dup
350: iconst_2
351: bipush        100
353: iastore
354: dup
355: iconst_3
356: bipush        52
358: iastore
359: astore        23
361: new           #32
364: dup
365: aload         23
367: invokespecial #112
370: astore        24
372: aload         22
374: aload         23
376: invokestatic  #306
379: istore        25
381: aload         17
383: aload         22
385: invokevirtual #228
388: aload         4
390: aload         22
392: invokestatic  #306
395: istore        26
397: aload_1
398: aload         4
400: invokestatic  #227
403: dstore        27
405: ldc           #29
407: invokestatic  #14
410: goto          415
413: astore        27
415: aload_2
416: invokestatic  #16
419: aload_2
420: invokestatic  #117
423: ldc           #118
425: invokestatic  #19
428: aload         4
430: invokestatic  #16
433: aload         4
435: invokestatic  #117
438: ldc_w         #432
441: invokestatic  #19
444: aload         5
446: invokestatic  #16
449: aload         5
451: invokestatic  #117
454: ldc           #118
456: invokestatic  #19
459: aload         7
461: invokestatic  #16
464: aload         7
466: invokestatic  #117
469: ldc           #118
471: invokestatic  #19
474: aload         9
476: invokestatic  #16
479: aload         9
481: invokestatic  #117
484: ldc_w         #432
487: invokestatic  #19
490: new           #39
493: dup
494: invokespecial #40
497: ldc           #41
499: invokevirtual #42
502: iload         10
504: invokevirtual #81
507: ldc           #44
509: invokevirtual #42
512: iconst_0
513: invokevirtual #81
516: ldc           #41
518: invokevirtual #42
521: invokevirtual #45
524: iload         10
526: ifne          533
529: iconst_1
530: goto          534
533: iconst_0
534: invokestatic  #47
537: aload         11
539: invokestatic  #16
542: aload         11
544: invokestatic  #117
547: ldc           #118
549: invokestatic  #19
552: aload         13
554: invokestatic  #16
557: aload         13
559: invokestatic  #117
562: ldc           #118
564: invokestatic  #19
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         14
581: invokevirtual #81
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #81
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         14
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #47
614: new           #39
617: dup
618: invokespecial #40
621: ldc           #41
623: invokevirtual #42
626: iload         15
628: invokevirtual #81
631: ldc           #44
633: invokevirtual #42
636: iconst_0
637: invokevirtual #81
640: ldc           #41
642: invokevirtual #42
645: invokevirtual #45
648: iload         15
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #47
661: aload         16
663: invokestatic  #16
666: aload         16
668: invokestatic  #17
671: ldc           #26
673: invokestatic  #19
676: aload         20
678: invokestatic  #16
681: aload         20
683: invokestatic  #117
686: ldc           #118
688: invokestatic  #19
691: aload         22
693: invokestatic  #16
696: aload         22
698: invokestatic  #117
701: ldc           #118
703: invokestatic  #19
706: aload         23
708: invokestatic  #16
711: aload         23
713: invokestatic  #117
716: ldc           #118
718: invokestatic  #19
721: new           #39
724: dup
725: invokespecial #40
728: ldc           #41
730: invokevirtual #42
733: iload         25
735: invokevirtual #81
738: ldc           #44
740: invokevirtual #42
743: iconst_0
744: invokevirtual #81
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         25
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #47
768: new           #39
771: dup
772: invokespecial #40
775: ldc           #41
777: invokevirtual #42
780: iload         26
782: invokevirtual #81
785: ldc           #44
787: invokevirtual #42
790: iconst_0
791: invokevirtual #81
794: ldc           #41
796: invokevirtual #42
799: invokevirtual #45
802: iload         26
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #47
815: return
Exception table:
from    to  target type
397   410   413   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 5508
End line: 5522
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType20 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(goalType20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #450
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #149
112: astore        6
114: aload_1
115: invokestatic  #16
118: aload_1
119: invokestatic  #17
122: ldc           #26
124: invokestatic  #19
127: new           #39
130: dup
131: invokespecial #40
134: ldc           #41
136: invokevirtual #42
139: iload         5
141: invokevirtual #81
144: ldc           #44
146: invokevirtual #42
149: iconst_0
150: invokevirtual #81
153: ldc           #41
155: invokevirtual #42
158: invokevirtual #45
161: iload         5
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #47
174: aload         6
176: invokestatic  #155
179: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 5525
End line: 5547
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType23 = cMAESOptimizer18.getGoalType();
        int int24 = cMAESOptimizer18.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(goalType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: invokevirtual #149
133: astore        9
135: aload         4
137: invokevirtual #69
140: istore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         8
226: invokevirtual #81
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #81
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         8
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #47
259: aload         9
261: invokestatic  #155
264: new           #39
267: dup
268: invokespecial #40
271: ldc           #41
273: invokevirtual #42
276: iload         10
278: invokevirtual #81
281: ldc           #44
283: invokevirtual #42
286: iconst_0
287: invokevirtual #81
290: ldc           #41
292: invokevirtual #42
295: invokevirtual #45
298: iload         10
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #47
311: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 5550
End line: 5581
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction24 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException25 = null;
        org.apache.commons.math3.optimization.GoalType goalType26 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair27 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException25, goalType26);
        double[] doubleArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair29 = cMAESOptimizer18.optimizeInternal((int) ' ', multivariateFunction24, goalType26, doubleArray28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + goalType26 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType26.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aconst_null
129: astore        9
131: aconst_null
132: astore        10
134: getstatic     #37
137: astore        11
139: new           #107
142: dup
143: aload         10
145: aload         11
147: invokespecial #110
150: astore        12
152: aconst_null
153: astore        13
155: aload         4
157: bipush        32
159: aload         9
161: aload         11
163: aload         13
165: invokevirtual #126
168: astore        14
170: ldc           #13
172: invokestatic  #14
175: goto          180
178: astore        14
180: aload_1
181: invokestatic  #16
184: aload_1
185: invokestatic  #17
188: ldc           #26
190: invokestatic  #19
193: aload         5
195: invokestatic  #16
198: aload         6
200: invokestatic  #16
203: new           #39
206: dup
207: invokespecial #40
210: ldc           #41
212: invokevirtual #42
215: iload         7
217: invokevirtual #81
220: ldc           #44
222: invokevirtual #42
225: iconst_0
226: invokevirtual #81
229: ldc           #41
231: invokevirtual #42
234: invokevirtual #45
237: iload         7
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #47
250: new           #39
253: dup
254: invokespecial #40
257: ldc           #41
259: invokevirtual #42
262: iload         8
264: invokevirtual #81
267: ldc           #44
269: invokevirtual #42
272: iconst_0
273: invokevirtual #81
276: ldc           #41
278: invokevirtual #42
281: invokevirtual #45
284: iload         8
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #47
297: new           #39
300: dup
301: invokespecial #40
304: ldc           #41
306: invokevirtual #42
309: aload         11
311: invokevirtual #43
314: ldc           #44
316: invokevirtual #42
319: getstatic     #37
322: invokevirtual #43
325: ldc           #41
327: invokevirtual #42
330: invokevirtual #45
333: aload         11
335: getstatic     #37
338: invokevirtual #46
341: invokestatic  #47
344: return
Exception table:
from    to  target type
155   175   178   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 5584
End line: 5661
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction25 = null;
        org.apache.commons.math3.optimization.GoalType goalType26 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray30 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray31 = new double[][] { doubleArray30 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix33 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray31, true);
        int int34 = array2DRowRealMatrix33.getRowDimension();
        array2DRowRealMatrix33.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double39 = array2DRowRealMatrix33.getNorm();
        double[][] doubleArray40 = array2DRowRealMatrix33.getData();
        double[][] doubleArray41 = array2DRowRealMatrix33.getDataRef();
        int int42 = array2DRowRealMatrix33.getColumnDimension();
        int int43 = array2DRowRealMatrix33.getColumnDimension();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix46 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix47 = blockRealMatrix46.copy();
        boolean boolean48 = array2DRowRealMatrix33.equals((java.lang.Object) blockRealMatrix46);
        double[] doubleArray50 = new double[] { '4' };
        double[] doubleArray51 = new double[] {};
        boolean boolean52 = org.apache.commons.math3.util.MathArrays.equals(doubleArray50, doubleArray51);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection56 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException58 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection56, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection59 = nonMonotonicSequenceException58.getDirection();
        boolean boolean61 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray50, orderDirection59, true);
        double[] doubleArray63 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray50, 18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray50);
        double[] doubleArray65 = array2DRowRealMatrix33.preMultiply(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair67 = cMAESOptimizer18.optimizeInternal(2146959360, multivariateFunction25, goalType26, doubleArray50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + goalType26 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType26.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(blockRealMatrix47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + orderDirection56 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection56.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection59 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection59.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[5200.0, -52.0, -52.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aconst_null
136: astore        10
138: getstatic     #37
141: astore        11
143: iconst_3
144: newarray       double
146: dup
147: iconst_0
148: ldc2_w        #87
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #59
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #59
163: dastore
164: astore        12
166: iconst_1
167: anewarray     #89
170: dup
171: iconst_0
172: aload         12
174: aastore
175: astore        13
177: new           #90
180: dup
181: aload         13
183: iconst_1
184: invokespecial #91
187: astore        14
189: aload         14
191: invokevirtual #182
194: istore        15
196: aload         14
198: iconst_0
199: iconst_0
200: ldc2_w        #10
203: invokevirtual #183
206: aload         14
208: invokevirtual #184
211: dstore        16
213: aload         14
215: invokevirtual #92
218: astore        18
220: aload         14
222: invokevirtual #185
225: astore        19
227: aload         14
229: invokevirtual #454
232: istore        20
234: aload         14
236: invokevirtual #454
239: istore        21
241: new           #186
244: dup
245: bipush        31
247: bipush        52
249: invokespecial #266
252: astore        22
254: aload         22
256: invokevirtual #455
259: astore        23
261: aload         14
263: aload         22
265: invokevirtual #456
268: istore        24
270: iconst_1
271: newarray       double
273: dup
274: iconst_0
275: ldc2_w        #70
278: dastore
279: astore        25
281: iconst_0
282: newarray       double
284: astore        26
286: aload         25
288: aload         26
290: invokestatic  #72
293: istore        27
295: getstatic     #73
298: astore        28
300: new           #67
303: dup
304: ldc2_w        #74
307: invokestatic  #76
310: iconst_1
311: invokestatic  #77
314: bipush        100
316: aload         28
318: iconst_1
319: invokespecial #78
322: astore        29
324: aload         29
326: invokevirtual #79
329: astore        30
331: aload         25
333: aload         30
335: iconst_1
336: invokestatic  #157
339: istore        31
341: aload         25
343: bipush        18
345: invokestatic  #423
348: astore        32
350: aload         25
352: invokestatic  #65
355: aload         14
357: aload         25
359: invokevirtual #341
362: astore        33
364: new           #96
367: dup
368: aload         25
370: invokespecial #97
373: astore        34
375: aload         4
377: ldc_w         #349
380: aload         10
382: aload         11
384: aload         25
386: invokevirtual #126
389: astore        35
391: ldc           #13
393: invokestatic  #14
396: goto          401
399: astore        35
401: aload_1
402: invokestatic  #16
405: aload_1
406: invokestatic  #17
409: ldc           #26
411: invokestatic  #19
414: aload         5
416: invokestatic  #16
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload         6
433: invokevirtual #81
436: ldc           #44
438: invokevirtual #42
441: iconst_0
442: invokevirtual #81
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: iload         6
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #47
466: aload         7
468: invokestatic  #16
471: aload         8
473: invokestatic  #16
476: aload         9
478: invokestatic  #16
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: aload         11
495: invokevirtual #43
498: ldc           #44
500: invokevirtual #42
503: getstatic     #37
506: invokevirtual #43
509: ldc           #41
511: invokevirtual #42
514: invokevirtual #45
517: aload         11
519: getstatic     #37
522: invokevirtual #46
525: invokestatic  #47
528: aload         12
530: invokestatic  #16
533: aload         12
535: invokestatic  #17
538: ldc           #94
540: invokestatic  #19
543: aload         13
545: invokestatic  #16
548: new           #39
551: dup
552: invokespecial #40
555: ldc           #41
557: invokevirtual #42
560: iload         15
562: invokevirtual #81
565: ldc           #44
567: invokevirtual #42
570: iconst_1
571: invokevirtual #81
574: ldc           #41
576: invokevirtual #42
579: invokevirtual #45
582: iload         15
584: iconst_1
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #47
596: new           #39
599: dup
600: invokespecial #40
603: ldc           #41
605: invokevirtual #42
608: dload         16
610: invokevirtual #121
613: ldc           #44
615: invokevirtual #42
618: ldc2_w        #10
621: invokevirtual #121
624: ldc           #41
626: invokevirtual #42
629: invokevirtual #45
632: dload         16
634: ldc2_w        #10
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #47
649: aload         18
651: invokestatic  #16
654: aload         19
656: invokestatic  #16
659: new           #39
662: dup
663: invokespecial #40
666: ldc           #41
668: invokevirtual #42
671: iload         20
673: invokevirtual #81
676: ldc           #44
678: invokevirtual #42
681: iconst_3
682: invokevirtual #81
685: ldc           #41
687: invokevirtual #42
690: invokevirtual #45
693: iload         20
695: iconst_3
696: if_icmpne     703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #47
707: new           #39
710: dup
711: invokespecial #40
714: ldc           #41
716: invokevirtual #42
719: iload         21
721: invokevirtual #81
724: ldc           #44
726: invokevirtual #42
729: iconst_3
730: invokevirtual #81
733: ldc           #41
735: invokevirtual #42
738: invokevirtual #45
741: iload         21
743: iconst_3
744: if_icmpne     751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #47
755: aload         23
757: invokestatic  #16
760: new           #39
763: dup
764: invokespecial #40
767: ldc           #41
769: invokevirtual #42
772: iload         24
774: invokevirtual #84
777: ldc           #44
779: invokevirtual #42
782: iconst_0
783: invokevirtual #84
786: ldc           #41
788: invokevirtual #42
791: invokevirtual #45
794: iload         24
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #47
807: aload         25
809: invokestatic  #16
812: aload         25
814: invokestatic  #17
817: ldc           #82
819: invokestatic  #19
822: aload         26
824: invokestatic  #16
827: aload         26
829: invokestatic  #17
832: ldc           #83
834: invokestatic  #19
837: new           #39
840: dup
841: invokespecial #40
844: ldc           #41
846: invokevirtual #42
849: iload         27
851: invokevirtual #84
854: ldc           #44
856: invokevirtual #42
859: iconst_0
860: invokevirtual #84
863: ldc           #41
865: invokevirtual #42
868: invokevirtual #45
871: iload         27
873: ifne          880
876: iconst_1
877: goto          881
880: iconst_0
881: invokestatic  #47
884: new           #39
887: dup
888: invokespecial #40
891: ldc           #41
893: invokevirtual #42
896: aload         28
898: invokevirtual #43
901: ldc           #44
903: invokevirtual #42
906: getstatic     #73
909: invokevirtual #43
912: ldc           #41
914: invokevirtual #42
917: invokevirtual #45
920: aload         28
922: getstatic     #73
925: invokevirtual #85
928: invokestatic  #47
931: new           #39
934: dup
935: invokespecial #40
938: ldc           #41
940: invokevirtual #42
943: aload         30
945: invokevirtual #43
948: ldc           #44
950: invokevirtual #42
953: getstatic     #73
956: invokevirtual #43
959: ldc           #41
961: invokevirtual #42
964: invokevirtual #45
967: aload         30
969: getstatic     #73
972: invokevirtual #85
975: invokestatic  #47
978: new           #39
981: dup
982: invokespecial #40
985: ldc           #41
987: invokevirtual #42
990: iload         31
992: invokevirtual #84
995: ldc           #44
997: invokevirtual #42
1000: iconst_1
1001: invokevirtual #84
1004: ldc           #41
1006: invokevirtual #42
1009: invokevirtual #45
1012: iload         31
1014: iconst_1
1015: if_icmpne     1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #47
1026: aload         32
1028: invokestatic  #16
1031: aload         32
1033: invokestatic  #17
1036: ldc_w         #426
1039: invokestatic  #19
1042: aload         33
1044: invokestatic  #16
1047: aload         33
1049: invokestatic  #17
1052: ldc           #189
1054: invokestatic  #19
1057: return
Exception table:
from    to  target type
375   396   399   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 5664
End line: 5684
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        int int22 = incrementor20.getCount();
        boolean boolean23 = incrementor20.canIncrement();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #202
126: istore        8
128: aload         6
130: invokevirtual #204
133: istore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: aload         6
155: invokestatic  #16
158: new           #39
161: dup
162: invokespecial #40
165: ldc           #41
167: invokevirtual #42
170: iload         7
172: invokevirtual #81
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #81
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         7
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #47
205: new           #39
208: dup
209: invokespecial #40
212: ldc           #41
214: invokevirtual #42
217: iload         8
219: invokevirtual #81
222: ldc           #44
224: invokevirtual #42
227: iconst_0
228: invokevirtual #81
231: ldc           #41
233: invokevirtual #42
236: invokevirtual #45
239: iload         8
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #47
252: new           #39
255: dup
256: invokespecial #40
259: ldc           #41
261: invokevirtual #42
264: iload         9
266: invokevirtual #84
269: ldc           #44
271: invokevirtual #42
274: iconst_0
275: invokevirtual #84
278: ldc           #41
280: invokevirtual #42
283: invokevirtual #45
286: iload         9
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #47
299: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 5687
End line: 5693
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.util.Incrementor incrementor1 = cMAESOptimizer0.evaluations;
        org.junit.Assert.assertNotNull(incrementor1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #459
32: astore_1
33: aload_1
34: getfield      #191
37: astore_2
38: aload_2
39: invokestatic  #16
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 5696
End line: 5722
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int[] intArray23 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister24 = new org.apache.commons.math3.random.MersenneTwister(intArray23);
        int[] intArray25 = org.apache.commons.math3.util.MathArrays.copyOf(intArray23);
        int[] intArray30 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister31 = new org.apache.commons.math3.random.MersenneTwister(intArray30);
        int int32 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray25, intArray30);
        mersenneTwister15.setSeed(intArray25);
        long long34 = mersenneTwister15.nextLong();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 8857477280127303434L + "'", long34 == 8857477280127303434L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: iconst_4
101: newarray       int
103: dup
104: iconst_0
105: bipush        100
107: iastore
108: dup
109: iconst_1
110: iconst_0
111: iastore
112: dup
113: iconst_2
114: bipush        100
116: iastore
117: dup
118: iconst_3
119: bipush        52
121: iastore
122: astore        5
124: new           #32
127: dup
128: aload         5
130: invokespecial #112
133: astore        6
135: aload         5
137: invokestatic  #226
140: astore        7
142: iconst_4
143: newarray       int
145: dup
146: iconst_0
147: bipush        100
149: iastore
150: dup
151: iconst_1
152: iconst_0
153: iastore
154: dup
155: iconst_2
156: bipush        100
158: iastore
159: dup
160: iconst_3
161: bipush        52
163: iastore
164: astore        8
166: new           #32
169: dup
170: aload         8
172: invokespecial #112
175: astore        9
177: aload         7
179: aload         8
181: invokestatic  #306
184: istore        10
186: aload_2
187: aload         7
189: invokevirtual #228
192: aload_2
193: invokevirtual #461
196: lstore        11
198: aload_1
199: invokestatic  #16
202: aload_1
203: invokestatic  #17
206: ldc           #26
208: invokestatic  #19
211: aload         5
213: invokestatic  #16
216: aload         5
218: invokestatic  #117
221: ldc           #118
223: invokestatic  #19
226: aload         7
228: invokestatic  #16
231: aload         7
233: invokestatic  #117
236: ldc           #118
238: invokestatic  #19
241: aload         8
243: invokestatic  #16
246: aload         8
248: invokestatic  #117
251: ldc           #118
253: invokestatic  #19
256: new           #39
259: dup
260: invokespecial #40
263: ldc           #41
265: invokevirtual #42
268: iload         10
270: invokevirtual #81
273: ldc           #44
275: invokevirtual #42
278: iconst_0
279: invokevirtual #81
282: ldc           #41
284: invokevirtual #42
287: invokevirtual #45
290: iload         10
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #47
303: new           #39
306: dup
307: invokespecial #40
310: ldc           #41
312: invokevirtual #42
315: lload         11
317: invokevirtual #462
320: ldc           #44
322: invokevirtual #42
325: ldc2_w        #463
328: invokevirtual #462
331: ldc           #41
333: invokevirtual #42
336: invokevirtual #45
339: lload         11
341: ldc2_w        #463
344: lcmp
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #47
356: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 5725
End line: 5741
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertNull(goalType21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload_1
122: invokestatic  #16
125: aload_1
126: invokestatic  #17
129: ldc           #26
131: invokestatic  #19
134: aload         5
136: invokestatic  #16
139: aload         6
141: invokestatic  #16
144: aload         7
146: invokestatic  #155
149: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 5744
End line: 5788
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        double[] doubleArray2 = new double[] { '4' };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math3.util.MathArrays.equals(doubleArray2, doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister23 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double24 = mersenneTwister23.nextGaussian();
        mersenneTwister23.setSeed(0L);
        mersenneTwister23.clear();
        double[] doubleArray30 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = null;
        double[] doubleArray39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray39);
        int int41 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray30, (int) ' ', 1024.0d, false, (int) (byte) -1, 3, randomGenerator36, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray11, 36, 4.15912713462618d, true, (int) (byte) -1, (int) (short) 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister23, false, pointValuePairConvergenceChecker42);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray45 = cMAESOptimizer44.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.7023867716137234d) + "'", double24 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: bipush        6
47: newarray       double
49: dup
50: iconst_0
51: dconst_0
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: dup
64: iconst_3
65: dconst_0
66: dastore
67: dup
68: iconst_4
69: dconst_1
70: dastore
71: dup
72: iconst_5
73: ldc2_w        #21
76: dastore
77: astore        4
79: aload         4
81: invokestatic  #23
84: aload         4
86: invokestatic  #24
89: astore        5
91: aload         4
93: invokestatic  #24
96: astore        6
98: new           #96
101: dup
102: aload_2
103: aload         4
105: invokespecial #139
108: astore        7
110: aload         4
112: invokestatic  #24
115: astore        8
117: new           #32
120: dup
121: iconst_1
122: invokespecial #33
125: astore        9
127: aload         9
129: invokevirtual #168
132: dstore        10
134: aload         9
136: lconst_0
137: invokevirtual #278
140: aload         9
142: invokevirtual #467
145: aconst_null
146: astore        12
148: aconst_null
149: astore        13
151: aconst_null
152: astore        14
154: new           #8
157: dup
158: bipush        10
160: aload         14
162: invokespecial #9
165: astore        15
167: aload         15
169: invokevirtual #69
172: istore        16
174: aload         15
176: invokevirtual #53
179: astore        17
181: new           #8
184: dup
185: iconst_0
186: aload         12
188: bipush        32
190: ldc2_w        #468
193: iconst_0
194: iconst_m1
195: iconst_3
196: aload         13
198: iconst_0
199: aload         17
201: invokespecial #36
204: astore        18
206: new           #8
209: dup
210: bipush        100
212: aload         4
214: bipush        36
216: ldc2_w        #470
219: iconst_1
220: iconst_m1
221: bipush        10
223: aload         9
225: iconst_0
226: aload         17
228: invokespecial #36
231: astore        19
233: aload         19
235: invokevirtual #56
238: astore        20
240: ldc           #29
242: invokestatic  #14
245: goto          250
248: astore        20
250: aload_1
251: invokestatic  #16
254: aload_1
255: invokestatic  #17
258: ldc           #82
260: invokestatic  #19
263: aload_2
264: invokestatic  #16
267: aload_2
268: invokestatic  #17
271: ldc           #83
273: invokestatic  #19
276: new           #39
279: dup
280: invokespecial #40
283: ldc           #41
285: invokevirtual #42
288: iload_3
289: invokevirtual #84
292: ldc           #44
294: invokevirtual #42
297: iconst_0
298: invokevirtual #84
301: ldc           #41
303: invokevirtual #42
306: invokevirtual #45
309: iload_3
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #47
321: aload         4
323: invokestatic  #16
326: aload         4
328: invokestatic  #17
331: ldc           #26
333: invokestatic  #19
336: aload         5
338: invokestatic  #16
341: aload         6
343: invokestatic  #16
346: aload         8
348: invokestatic  #16
351: new           #39
354: dup
355: invokespecial #40
358: ldc           #41
360: invokevirtual #42
363: dload         10
365: invokevirtual #121
368: ldc           #44
370: invokevirtual #42
373: ldc2_w        #74
376: invokevirtual #121
379: ldc           #41
381: invokevirtual #42
384: invokevirtual #45
387: dload         10
389: ldc2_w        #74
392: dcmpl
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #47
404: new           #39
407: dup
408: invokespecial #40
411: ldc           #41
413: invokevirtual #42
416: iload         16
418: invokevirtual #81
421: ldc           #44
423: invokevirtual #42
426: iconst_0
427: invokevirtual #81
430: ldc           #41
432: invokevirtual #42
435: invokevirtual #45
438: iload         16
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #47
451: aload         17
453: invokestatic  #16
456: return
Exception table:
from    to  target type
233   245   248   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 5791
End line: 5836
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray52, 30.012577183478914d);
        double double59 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 26.933261599595912d + "'", double59 == 26.933261599595912d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #472
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: aload         15
326: invokestatic  #135
329: dstore        16
331: new           #107
334: dup
335: aload         15
337: ldc2_w        #143
340: invokestatic  #76
343: invokespecial #110
346: astore        18
348: new           #8
351: dup
352: bipush        -127
354: aload         15
356: invokespecial #9
359: astore        19
361: aload         15
363: ldc2_w        #387
366: invokestatic  #210
369: astore        20
371: aload         20
373: invokestatic  #135
376: dstore        21
378: aload_1
379: invokestatic  #16
382: aload_1
383: invokestatic  #17
386: ldc           #26
388: invokestatic  #19
391: aload_3
392: invokestatic  #16
395: aload_3
396: invokestatic  #17
399: ldc           #26
401: invokestatic  #19
404: aload         6
406: invokestatic  #16
409: aload         6
411: invokestatic  #17
414: ldc           #26
416: invokestatic  #19
419: aload         8
421: invokestatic  #16
424: aload         8
426: invokestatic  #17
429: ldc           #26
431: invokestatic  #19
434: aload         11
436: invokestatic  #16
439: aload         11
441: invokestatic  #17
444: ldc           #26
446: invokestatic  #19
449: aload         14
451: invokestatic  #16
454: aload         15
456: invokestatic  #16
459: aload         15
461: invokestatic  #17
464: ldc           #105
466: invokestatic  #19
469: new           #39
472: dup
473: invokespecial #40
476: ldc           #41
478: invokevirtual #42
481: dload         16
483: invokevirtual #121
486: ldc           #44
488: invokevirtual #42
491: ldc2_w        #145
494: invokevirtual #121
497: ldc           #41
499: invokevirtual #42
502: invokevirtual #45
505: dload         16
507: ldc2_w        #145
510: dcmpl
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #47
522: aload         20
524: invokestatic  #16
527: aload         20
529: invokestatic  #17
532: ldc_w         #390
535: invokestatic  #19
538: new           #39
541: dup
542: invokespecial #40
545: ldc           #41
547: invokevirtual #42
550: dload         21
552: invokevirtual #121
555: ldc           #44
557: invokevirtual #42
560: ldc2_w        #473
563: invokevirtual #121
566: ldc           #41
568: invokevirtual #42
571: invokevirtual #45
574: dload         21
576: ldc2_w        #473
579: dcmpl
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #47
591: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 5839
End line: 5864
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix3 = blockRealMatrix2.copy();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix4 = blockRealMatrix2.copy();
        double[] doubleArray12 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray12);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray12);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair16 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray12, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12);
        int int18 = org.apache.commons.math3.util.MathUtils.hash(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray19 = blockRealMatrix4.preMultiply(doubleArray12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 31");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(blockRealMatrix3);
        org.junit.Assert.assertNotNull(blockRealMatrix4);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 419642177 + "'", int18 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: bipush        31
31: bipush        52
33: invokespecial #266
36: astore_1
37: aload_1
38: invokevirtual #455
41: astore_2
42: aload_1
43: invokevirtual #455
46: astore_3
47: bipush        6
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #10
60: dastore
61: dup
62: iconst_2
63: dconst_1
64: dastore
65: dup
66: iconst_3
67: dconst_0
68: dastore
69: dup
70: iconst_4
71: dconst_1
72: dastore
73: dup
74: iconst_5
75: ldc2_w        #21
78: dastore
79: astore        4
81: aload         4
83: invokestatic  #23
86: aload         4
88: invokestatic  #24
91: astore        5
93: new           #58
96: dup
97: aload         4
99: ldc2_w        #59
102: invokespecial #61
105: astore        6
107: new           #8
110: dup
111: bipush        36
113: aload         4
115: invokespecial #9
118: astore        7
120: aload         4
122: invokestatic  #344
125: istore        8
127: aload_3
128: aload         4
130: invokevirtual #188
133: astore        9
135: ldc_w         #420
138: invokestatic  #14
141: goto          146
144: astore        9
146: aload_2
147: invokestatic  #16
150: aload_3
151: invokestatic  #16
154: aload         4
156: invokestatic  #16
159: aload         4
161: invokestatic  #17
164: ldc           #26
166: invokestatic  #19
169: aload         5
171: invokestatic  #16
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         8
188: invokevirtual #81
191: ldc           #44
193: invokevirtual #42
196: ldc_w         #347
199: invokevirtual #81
202: ldc           #41
204: invokevirtual #42
207: invokevirtual #45
210: iload         8
212: ldc_w         #347
215: if_icmpne     222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #47
226: return
Exception table:
from    to  target type
127   141   144   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 5867
End line: 5914
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer25.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction29 = null;
        org.apache.commons.math3.optimization.GoalType goalType30 = null;
        double[] doubleArray32 = new double[] { '4' };
        double[] doubleArray33 = new double[] {};
        boolean boolean34 = org.apache.commons.math3.util.MathArrays.equals(doubleArray32, doubleArray33);
        double[] doubleArray41 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray41);
        org.apache.commons.math3.linear.RealMatrix realMatrix43 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray41);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray32, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair45 = cMAESOptimizer25.optimize((int) 'a', multivariateFunction29, goalType30, doubleArray32);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #130
155: astore        11
157: aconst_null
158: astore        12
160: aconst_null
161: astore        13
163: iconst_1
164: newarray       double
166: dup
167: iconst_0
168: ldc2_w        #70
171: dastore
172: astore        14
174: iconst_0
175: newarray       double
177: astore        15
179: aload         14
181: aload         15
183: invokestatic  #72
186: istore        16
188: bipush        6
190: newarray       double
192: dup
193: iconst_0
194: dconst_0
195: dastore
196: dup
197: iconst_1
198: ldc2_w        #10
201: dastore
202: dup
203: iconst_2
204: dconst_1
205: dastore
206: dup
207: iconst_3
208: dconst_0
209: dastore
210: dup
211: iconst_4
212: dconst_1
213: dastore
214: dup
215: iconst_5
216: ldc2_w        #21
219: dastore
220: astore        17
222: aload         17
224: invokestatic  #23
227: aload         17
229: invokestatic  #24
232: astore        18
234: new           #96
237: dup
238: aload         14
240: aload         17
242: invokespecial #139
245: astore        19
247: aload         9
249: bipush        97
251: aload         12
253: aload         13
255: aload         14
257: invokevirtual #12
260: astore        20
262: ldc           #13
264: invokestatic  #14
267: goto          272
270: astore        20
272: aload_1
273: invokestatic  #16
276: aload_1
277: invokestatic  #17
280: ldc           #26
282: invokestatic  #19
285: aload_2
286: invokestatic  #16
289: aload         4
291: invokestatic  #16
294: aload         4
296: invokestatic  #17
299: ldc           #26
301: invokestatic  #19
304: new           #39
307: dup
308: invokespecial #40
311: ldc           #41
313: invokevirtual #42
316: dload         6
318: invokevirtual #121
321: ldc           #44
323: invokevirtual #42
326: ldc2_w        #282
329: invokevirtual #121
332: ldc           #41
334: invokevirtual #42
337: invokevirtual #45
340: dload         6
342: ldc2_w        #282
345: dcmpl
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #47
357: aload         10
359: invokestatic  #155
362: aload         11
364: invokestatic  #16
367: aload         14
369: invokestatic  #16
372: aload         14
374: invokestatic  #17
377: ldc           #82
379: invokestatic  #19
382: aload         15
384: invokestatic  #16
387: aload         15
389: invokestatic  #17
392: ldc           #83
394: invokestatic  #19
397: new           #39
400: dup
401: invokespecial #40
404: ldc           #41
406: invokevirtual #42
409: iload         16
411: invokevirtual #84
414: ldc           #44
416: invokevirtual #42
419: iconst_0
420: invokevirtual #84
423: ldc           #41
425: invokevirtual #42
428: invokevirtual #45
431: iload         16
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #47
444: aload         17
446: invokestatic  #16
449: aload         17
451: invokestatic  #17
454: ldc           #26
456: invokestatic  #19
459: aload         18
461: invokestatic  #16
464: return
Exception table:
from    to  target type
247   267   270   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 5917
End line: 5935
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor5 = cMAESOptimizer2.evaluations;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair6 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(incrementor5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #477
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: getfield      #191
53: astore        5
55: aload_2
56: invokevirtual #51
59: astore        6
61: ldc           #29
63: invokestatic  #14
66: goto          71
69: astore        6
71: new           #39
74: dup
75: invokespecial #40
78: ldc           #41
80: invokevirtual #42
83: iload_3
84: invokevirtual #81
87: ldc           #44
89: invokevirtual #42
92: iconst_0
93: invokevirtual #81
96: ldc           #41
98: invokevirtual #42
101: invokevirtual #45
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #47
116: new           #39
119: dup
120: invokespecial #40
123: ldc           #41
125: invokevirtual #42
128: iload         4
130: invokevirtual #81
133: ldc           #44
135: invokevirtual #42
138: iconst_0
139: invokevirtual #81
142: ldc           #41
144: invokevirtual #42
147: invokevirtual #45
150: iload         4
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #47
163: aload         5
165: invokestatic  #16
168: return
Exception table:
from    to  target type
55    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 5938
End line: 5954
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload_1
122: invokestatic  #16
125: aload_1
126: invokestatic  #17
129: ldc           #26
131: invokestatic  #19
134: aload         5
136: invokestatic  #16
139: aload         6
141: invokestatic  #16
144: new           #39
147: dup
148: invokespecial #40
151: ldc           #41
153: invokevirtual #42
156: iload         7
158: invokevirtual #81
161: ldc           #44
163: invokevirtual #42
166: iconst_0
167: invokevirtual #81
170: ldc           #41
172: invokevirtual #42
175: invokevirtual #45
178: iload         7
180: ifne          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #47
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 5957
End line: 5996
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.getDataRef();
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray52, (int) (byte) 1, 100.00999950005d, true, (-327406441), 0, randomGenerator58, true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #480
322: astore        15
324: getstatic     #481
327: astore        16
329: new           #8
332: dup
333: iconst_0
334: aload         15
336: iconst_1
337: ldc2_w        #482
340: iconst_1
341: ldc_w         #333
344: iconst_0
345: aload         16
347: iconst_1
348: invokespecial #172
351: astore        17
353: aload_1
354: invokestatic  #16
357: aload_1
358: invokestatic  #17
361: ldc           #26
363: invokestatic  #19
366: aload_3
367: invokestatic  #16
370: aload_3
371: invokestatic  #17
374: ldc           #26
376: invokestatic  #19
379: aload         6
381: invokestatic  #16
384: aload         6
386: invokestatic  #17
389: ldc           #26
391: invokestatic  #19
394: aload         8
396: invokestatic  #16
399: aload         8
401: invokestatic  #17
404: ldc           #26
406: invokestatic  #19
409: aload         11
411: invokestatic  #16
414: aload         11
416: invokestatic  #17
419: ldc           #26
421: invokestatic  #19
424: aload         14
426: invokestatic  #16
429: aload         15
431: invokestatic  #16
434: aload         15
436: invokestatic  #17
439: ldc           #105
441: invokestatic  #19
444: aload         16
446: invokestatic  #16
449: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 5999
End line: 6019
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(doubleList23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #484
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #130
133: astore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         6
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         6
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: aload         7
202: invokestatic  #16
205: aload         8
207: invokestatic  #16
210: aload         9
212: invokestatic  #16
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 6022
End line: 6082
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math3.random.MersenneTwister mersenneTwister1 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double2 = mersenneTwister1.nextGaussian();
        int int4 = mersenneTwister1.nextInt((int) (short) 100);
        mersenneTwister1.setSeed(0);
        mersenneTwister1.setSeed(100L);
        int[] intArray11 = new int[] { 6, 31 };
        mersenneTwister1.setSeed(intArray11);
        int int13 = mersenneTwister1.nextInt();
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray21);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair25 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray21, (double) (-1.0f));
        double[] doubleArray26 = pointValuePair25.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister33 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double34 = mersenneTwister33.nextDouble();
        mersenneTwister33.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister33, false, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister41 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double42 = mersenneTwister41.nextGaussian();
        int int44 = mersenneTwister41.nextInt((int) (short) 100);
        mersenneTwister41.setSeed(0);
        mersenneTwister41.setSeed(100L);
        int[] intArray51 = new int[] { 6, 31 };
        mersenneTwister41.setSeed(intArray51);
        int int53 = mersenneTwister41.nextInt();
        int[] intArray55 = new int[] { (-127) };
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister57 = new org.apache.commons.math3.random.MersenneTwister(intArray55);
        mersenneTwister41.setSeed(intArray55);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, 100);
        mersenneTwister33.setSeed(intArray60);
        mersenneTwister1.setSeed(intArray60);
        double double63 = mersenneTwister1.nextDouble();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-0.7023867716137234d) + "'", double2 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 31 + "'", int4 == 31);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1213365404) + "'", int13 == (-1213365404));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.4170220046815991d + "'", double34 == 0.4170220046815991d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.7023867716137234d) + "'", double42 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 31 + "'", int44 == 31);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1213365404) + "'", int53 == (-1213365404));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-127]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-127]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.534267970448908d + "'", double63 == 0.534267970448908d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #485
20: aastore
21: invokevirtual #7
24: pop
25: new           #32
28: dup
29: iconst_1
30: invokespecial #33
33: astore_1
34: aload_1
35: invokevirtual #168
38: dstore_2
39: aload_1
40: bipush        100
42: invokevirtual #225
45: istore        4
47: aload_1
48: iconst_0
49: invokevirtual #169
52: aload_1
53: ldc2_w        #307
56: invokevirtual #278
59: iconst_2
60: newarray       int
62: dup
63: iconst_0
64: bipush        6
66: iastore
67: dup
68: iconst_1
69: bipush        31
71: iastore
72: astore        5
74: aload_1
75: aload         5
77: invokevirtual #228
80: aload_1
81: invokevirtual #309
84: istore        6
86: bipush        6
88: newarray       double
90: dup
91: iconst_0
92: dconst_0
93: dastore
94: dup
95: iconst_1
96: ldc2_w        #10
99: dastore
100: dup
101: iconst_2
102: dconst_1
103: dastore
104: dup
105: iconst_3
106: dconst_0
107: dastore
108: dup
109: iconst_4
110: dconst_1
111: dastore
112: dup
113: iconst_5
114: ldc2_w        #21
117: dastore
118: astore        7
120: aload         7
122: invokestatic  #23
125: aload         7
127: invokestatic  #24
130: astore        8
132: new           #58
135: dup
136: aload         7
138: ldc2_w        #59
141: invokespecial #61
144: astore        9
146: aload         9
148: invokevirtual #62
151: astore        10
153: new           #32
156: dup
157: iconst_1
158: invokespecial #33
161: astore        11
163: aload         11
165: invokevirtual #275
168: dstore        12
170: aload         11
172: ldc2_w        #276
175: invokevirtual #278
178: aconst_null
179: astore        14
181: new           #8
184: dup
185: sipush        30000
188: aload         10
190: bipush        35
192: ldc2_w        #279
195: iconst_1
196: sipush        30000
199: bipush        100
201: aload         11
203: iconst_0
204: aload         14
206: invokespecial #36
209: astore        15
211: new           #32
214: dup
215: iconst_1
216: invokespecial #33
219: astore        16
221: aload         16
223: invokevirtual #168
226: dstore        17
228: aload         16
230: bipush        100
232: invokevirtual #225
235: istore        19
237: aload         16
239: iconst_0
240: invokevirtual #169
243: aload         16
245: ldc2_w        #307
248: invokevirtual #278
251: iconst_2
252: newarray       int
254: dup
255: iconst_0
256: bipush        6
258: iastore
259: dup
260: iconst_1
261: bipush        31
263: iastore
264: astore        20
266: aload         16
268: aload         20
270: invokevirtual #228
273: aload         16
275: invokevirtual #309
278: istore        21
280: iconst_1
281: newarray       int
283: dup
284: iconst_0
285: bipush        -127
287: iastore
288: astore        22
290: aload         22
292: invokestatic  #226
295: astore        23
297: new           #32
300: dup
301: aload         22
303: invokespecial #112
306: astore        24
308: aload         16
310: aload         22
312: invokevirtual #228
315: aload         22
317: bipush        100
319: invokestatic  #310
322: astore        25
324: aload         11
326: aload         25
328: invokevirtual #228
331: aload_1
332: aload         25
334: invokevirtual #228
337: aload_1
338: invokevirtual #275
341: dstore        26
343: new           #39
346: dup
347: invokespecial #40
350: ldc           #41
352: invokevirtual #42
355: dload_2
356: invokevirtual #121
359: ldc           #44
361: invokevirtual #42
364: ldc2_w        #74
367: invokevirtual #121
370: ldc           #41
372: invokevirtual #42
375: invokevirtual #45
378: dload_2
379: ldc2_w        #74
382: dcmpl
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #47
394: new           #39
397: dup
398: invokespecial #40
401: ldc           #41
403: invokevirtual #42
406: iload         4
408: invokevirtual #81
411: ldc           #44
413: invokevirtual #42
416: bipush        31
418: invokevirtual #81
421: ldc           #41
423: invokevirtual #42
426: invokevirtual #45
429: iload         4
431: bipush        31
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #47
444: aload         5
446: invokestatic  #16
449: aload         5
451: invokestatic  #117
454: ldc_w         #315
457: invokestatic  #19
460: new           #39
463: dup
464: invokespecial #40
467: ldc           #41
469: invokevirtual #42
472: iload         6
474: invokevirtual #81
477: ldc           #44
479: invokevirtual #42
482: ldc_w         #316
485: invokevirtual #81
488: ldc           #41
490: invokevirtual #42
493: invokevirtual #45
496: iload         6
498: ldc_w         #316
501: if_icmpne     508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #47
512: aload         7
514: invokestatic  #16
517: aload         7
519: invokestatic  #17
522: ldc           #26
524: invokestatic  #19
527: aload         8
529: invokestatic  #16
532: aload         10
534: invokestatic  #16
537: aload         10
539: invokestatic  #17
542: ldc           #26
544: invokestatic  #19
547: new           #39
550: dup
551: invokespecial #40
554: ldc           #41
556: invokevirtual #42
559: dload         12
561: invokevirtual #121
564: ldc           #44
566: invokevirtual #42
569: ldc2_w        #282
572: invokevirtual #121
575: ldc           #41
577: invokevirtual #42
580: invokevirtual #45
583: dload         12
585: ldc2_w        #282
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #47
600: new           #39
603: dup
604: invokespecial #40
607: ldc           #41
609: invokevirtual #42
612: dload         17
614: invokevirtual #121
617: ldc           #44
619: invokevirtual #42
622: ldc2_w        #74
625: invokevirtual #121
628: ldc           #41
630: invokevirtual #42
633: invokevirtual #45
636: dload         17
638: ldc2_w        #74
641: dcmpl
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #47
653: new           #39
656: dup
657: invokespecial #40
660: ldc           #41
662: invokevirtual #42
665: iload         19
667: invokevirtual #81
670: ldc           #44
672: invokevirtual #42
675: bipush        31
677: invokevirtual #81
680: ldc           #41
682: invokevirtual #42
685: invokevirtual #45
688: iload         19
690: bipush        31
692: if_icmpne     699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #47
703: aload         20
705: invokestatic  #16
708: aload         20
710: invokestatic  #117
713: ldc_w         #315
716: invokestatic  #19
719: new           #39
722: dup
723: invokespecial #40
726: ldc           #41
728: invokevirtual #42
731: iload         21
733: invokevirtual #81
736: ldc           #44
738: invokevirtual #42
741: ldc_w         #316
744: invokevirtual #81
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         21
757: ldc_w         #316
760: if_icmpne     767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #47
771: aload         22
773: invokestatic  #16
776: aload         22
778: invokestatic  #117
781: ldc           #229
783: invokestatic  #19
786: aload         23
788: invokestatic  #16
791: aload         23
793: invokestatic  #117
796: ldc           #229
798: invokestatic  #19
801: aload         25
803: invokestatic  #16
806: aload         25
808: invokestatic  #117
811: ldc_w         #317
814: invokestatic  #19
817: new           #39
820: dup
821: invokespecial #40
824: ldc           #41
826: invokevirtual #42
829: dload         26
831: invokevirtual #121
834: ldc           #44
836: invokevirtual #42
839: ldc2_w        #486
842: invokevirtual #121
845: ldc           #41
847: invokevirtual #42
850: invokevirtual #45
853: dload         26
855: ldc2_w        #486
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #47
870: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 6085
End line: 6129
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray26 = new double[] { '4' };
        double[] doubleArray27 = new double[] {};
        boolean boolean28 = org.apache.commons.math3.util.MathArrays.equals(doubleArray26, doubleArray27);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection32 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException34 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection32, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection35 = nonMonotonicSequenceException34.getDirection();
        boolean boolean37 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray26, orderDirection35, true);
        double[] doubleArray39 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray26, 18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair40 = cMAESOptimizer18.optimize((-1682431419), multivariateFunction23, goalType24, doubleArray39);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + orderDirection32 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection32.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection35 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection35.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aconst_null
122: astore        8
124: getstatic     #37
127: astore        9
129: iconst_1
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #70
137: dastore
138: astore        10
140: iconst_0
141: newarray       double
143: astore        11
145: aload         10
147: aload         11
149: invokestatic  #72
152: istore        12
154: getstatic     #73
157: astore        13
159: new           #67
162: dup
163: ldc2_w        #74
166: invokestatic  #76
169: iconst_1
170: invokestatic  #77
173: bipush        100
175: aload         13
177: iconst_1
178: invokespecial #78
181: astore        14
183: aload         14
185: invokevirtual #79
188: astore        15
190: aload         10
192: aload         15
194: iconst_1
195: invokestatic  #157
198: istore        16
200: aload         10
202: bipush        18
204: invokestatic  #423
207: astore        17
209: aload         4
211: ldc_w         #489
214: aload         8
216: aload         9
218: aload         17
220: invokevirtual #12
223: astore        18
225: ldc           #13
227: invokestatic  #14
230: goto          235
233: astore        18
235: aload_1
236: invokestatic  #16
239: aload_1
240: invokestatic  #17
243: ldc           #26
245: invokestatic  #19
248: aload         5
250: invokestatic  #16
253: aload         6
255: invokestatic  #16
258: new           #39
261: dup
262: invokespecial #40
265: ldc           #41
267: invokevirtual #42
270: iload         7
272: invokevirtual #81
275: ldc           #44
277: invokevirtual #42
280: iconst_0
281: invokevirtual #81
284: ldc           #41
286: invokevirtual #42
289: invokevirtual #45
292: iload         7
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #47
305: new           #39
308: dup
309: invokespecial #40
312: ldc           #41
314: invokevirtual #42
317: aload         9
319: invokevirtual #43
322: ldc           #44
324: invokevirtual #42
327: getstatic     #37
330: invokevirtual #43
333: ldc           #41
335: invokevirtual #42
338: invokevirtual #45
341: aload         9
343: getstatic     #37
346: invokevirtual #46
349: invokestatic  #47
352: aload         10
354: invokestatic  #16
357: aload         10
359: invokestatic  #17
362: ldc           #82
364: invokestatic  #19
367: aload         11
369: invokestatic  #16
372: aload         11
374: invokestatic  #17
377: ldc           #83
379: invokestatic  #19
382: new           #39
385: dup
386: invokespecial #40
389: ldc           #41
391: invokevirtual #42
394: iload         12
396: invokevirtual #84
399: ldc           #44
401: invokevirtual #42
404: iconst_0
405: invokevirtual #84
408: ldc           #41
410: invokevirtual #42
413: invokevirtual #45
416: iload         12
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #47
429: new           #39
432: dup
433: invokespecial #40
436: ldc           #41
438: invokevirtual #42
441: aload         13
443: invokevirtual #43
446: ldc           #44
448: invokevirtual #42
451: getstatic     #73
454: invokevirtual #43
457: ldc           #41
459: invokevirtual #42
462: invokevirtual #45
465: aload         13
467: getstatic     #73
470: invokevirtual #85
473: invokestatic  #47
476: new           #39
479: dup
480: invokespecial #40
483: ldc           #41
485: invokevirtual #42
488: aload         15
490: invokevirtual #43
493: ldc           #44
495: invokevirtual #42
498: getstatic     #73
501: invokevirtual #43
504: ldc           #41
506: invokevirtual #42
509: invokevirtual #45
512: aload         15
514: getstatic     #73
517: invokevirtual #85
520: invokestatic  #47
523: new           #39
526: dup
527: invokespecial #40
530: ldc           #41
532: invokevirtual #42
535: iload         16
537: invokevirtual #84
540: ldc           #44
542: invokevirtual #42
545: iconst_1
546: invokevirtual #84
549: ldc           #41
551: invokevirtual #42
554: invokevirtual #45
557: iload         16
559: iconst_1
560: if_icmpne     567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #47
571: aload         17
573: invokestatic  #16
576: aload         17
578: invokestatic  #17
581: ldc_w         #426
584: invokestatic  #19
587: return
Exception table:
from    to  target type
209   230   233   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 6132
End line: 6147
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor7 = cMAESOptimizer2.evaluations;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(incrementor7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aload_2
62: getfield      #191
65: astore        7
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_3
80: invokevirtual #81
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #81
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_3
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #47
112: aload         4
114: invokestatic  #16
117: aload         5
119: invokestatic  #16
122: new           #39
125: dup
126: invokespecial #40
129: ldc           #41
131: invokevirtual #42
134: iload         6
136: invokevirtual #81
139: ldc           #44
141: invokevirtual #42
144: iconst_0
145: invokevirtual #81
148: ldc           #41
150: invokevirtual #42
153: invokevirtual #45
156: iload         6
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #47
169: aload         7
171: invokestatic  #16
174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 6150
End line: 6170
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aload_2
62: invokevirtual #54
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: aload         5
129: invokestatic  #16
132: new           #39
135: dup
136: invokespecial #40
139: ldc           #41
141: invokevirtual #42
144: iload         6
146: invokevirtual #81
149: ldc           #44
151: invokevirtual #42
154: iconst_0
155: invokevirtual #81
158: ldc           #41
160: invokevirtual #42
163: invokevirtual #45
166: iload         6
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #47
179: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 6173
End line: 6194
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        int int22 = incrementor20.getMaximalCount();
        incrementor20.incrementCount((-700319654));
        int int25 = incrementor20.getCount();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #492
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #413
126: istore        8
128: aload         6
130: ldc_w         #281
133: invokevirtual #260
136: aload         6
138: invokevirtual #202
141: istore        9
143: aload_1
144: invokestatic  #16
147: aload_1
148: invokestatic  #17
151: ldc           #26
153: invokestatic  #19
156: aload         5
158: invokestatic  #16
161: aload         6
163: invokestatic  #16
166: new           #39
169: dup
170: invokespecial #40
173: ldc           #41
175: invokevirtual #42
178: iload         7
180: invokevirtual #81
183: ldc           #44
185: invokevirtual #42
188: iconst_0
189: invokevirtual #81
192: ldc           #41
194: invokevirtual #42
197: invokevirtual #45
200: iload         7
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #47
213: new           #39
216: dup
217: invokespecial #40
220: ldc           #41
222: invokevirtual #42
225: iload         8
227: invokevirtual #81
230: ldc           #44
232: invokevirtual #42
235: iconst_0
236: invokevirtual #81
239: ldc           #41
241: invokevirtual #42
244: invokevirtual #45
247: iload         8
249: ifne          256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #47
260: new           #39
263: dup
264: invokespecial #40
267: ldc           #41
269: invokevirtual #42
272: iload         9
274: invokevirtual #81
277: ldc           #44
279: invokevirtual #42
282: iconst_0
283: invokevirtual #81
286: ldc           #41
288: invokevirtual #42
291: invokevirtual #45
294: iload         9
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #47
307: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 6197
End line: 6215
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType22 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(goalType22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #493
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #149
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: aload         5
143: invokestatic  #16
146: aload         6
148: invokestatic  #16
151: new           #39
154: dup
155: invokespecial #40
158: ldc           #41
160: invokevirtual #42
163: iload         7
165: invokevirtual #81
168: ldc           #44
170: invokevirtual #42
173: iconst_0
174: invokevirtual #81
177: ldc           #41
179: invokevirtual #42
182: invokevirtual #45
185: iload         7
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #47
198: aload         8
200: invokestatic  #155
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 6218
End line: 6251
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction25 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException26 = null;
        org.apache.commons.math3.optimization.GoalType goalType27 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair28 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException26, goalType27);
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair30 = cMAESOptimizer18.optimizeInternal((-1165482754), multivariateFunction25, goalType27, doubleArray29);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertTrue("'" + goalType27 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType27.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #494
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #130
133: astore        9
135: aconst_null
136: astore        10
138: aconst_null
139: astore        11
141: getstatic     #37
144: astore        12
146: new           #107
149: dup
150: aload         11
152: aload         12
154: invokespecial #110
157: astore        13
159: aconst_null
160: astore        14
162: aload         4
164: ldc_w         #326
167: aload         10
169: aload         12
171: aload         14
173: invokevirtual #126
176: astore        15
178: ldc           #13
180: invokestatic  #14
183: goto          188
186: astore        15
188: aload_1
189: invokestatic  #16
192: aload_1
193: invokestatic  #17
196: ldc           #26
198: invokestatic  #19
201: new           #39
204: dup
205: invokespecial #40
208: ldc           #41
210: invokevirtual #42
213: iload         5
215: invokevirtual #81
218: ldc           #44
220: invokevirtual #42
223: iconst_0
224: invokevirtual #81
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: iload         5
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #47
248: aload         6
250: invokestatic  #16
253: aload         7
255: invokestatic  #16
258: aload         8
260: invokestatic  #16
263: aload         9
265: invokestatic  #16
268: new           #39
271: dup
272: invokespecial #40
275: ldc           #41
277: invokevirtual #42
280: aload         12
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: getstatic     #37
293: invokevirtual #43
296: ldc           #41
298: invokevirtual #42
301: invokevirtual #45
304: aload         12
306: getstatic     #37
309: invokevirtual #46
312: invokestatic  #47
315: return
Exception table:
from    to  target type
162   183   186   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 6254
End line: 6282
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        double[] doubleArray2 = new double[] { '4' };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math3.util.MathArrays.equals(doubleArray2, doubleArray3);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection8 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException10 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection8, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection11 = nonMonotonicSequenceException10.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray2, orderDirection11, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray2);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix14, 0);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition18 = new org.apache.commons.math3.linear.EigenDecomposition(realMatrix14, 2.449489742783178d);
        double[] doubleArray19 = eigenDecomposition18.getRealEigenvalues();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister26 = new org.apache.commons.math3.random.MersenneTwister((long) 5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-327406441), doubleArray19, 30000, 2.4193054276345222E45d, false, 30000, 30, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister26, false);
        int int29 = mersenneTwister26.nextInt();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + orderDirection8 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection8.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection11 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection11.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1716293427) + "'", int29 == (-1716293427));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: getstatic     #73
48: astore        4
50: new           #67
53: dup
54: ldc2_w        #74
57: invokestatic  #76
60: iconst_1
61: invokestatic  #77
64: bipush        100
66: aload         4
68: iconst_1
69: invokespecial #78
72: astore        5
74: aload         5
76: invokevirtual #79
79: astore        6
81: aload_1
82: aload         6
84: iconst_1
85: invokestatic  #80
88: aload_1
89: invokestatic  #24
92: astore        7
94: aload         7
96: iconst_0
97: invokestatic  #496
100: new           #497
103: dup
104: aload         7
106: ldc2_w        #498
109: invokespecial #500
112: astore        8
114: aload         8
116: invokevirtual #501
119: astore        9
121: new           #32
124: dup
125: ldc2_w        #502
128: invokespecial #504
131: astore        10
133: new           #8
136: dup
137: ldc_w         #333
140: aload         9
142: sipush        30000
145: ldc2_w        #505
148: iconst_0
149: sipush        30000
152: bipush        30
154: aload         10
156: iconst_0
157: invokespecial #172
160: astore        11
162: aload         10
164: invokevirtual #309
167: istore        12
169: aload_1
170: invokestatic  #16
173: aload_1
174: invokestatic  #17
177: ldc           #82
179: invokestatic  #19
182: aload_2
183: invokestatic  #16
186: aload_2
187: invokestatic  #17
190: ldc           #83
192: invokestatic  #19
195: new           #39
198: dup
199: invokespecial #40
202: ldc           #41
204: invokevirtual #42
207: iload_3
208: invokevirtual #84
211: ldc           #44
213: invokevirtual #42
216: iconst_0
217: invokevirtual #84
220: ldc           #41
222: invokevirtual #42
225: invokevirtual #45
228: iload_3
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #47
240: new           #39
243: dup
244: invokespecial #40
247: ldc           #41
249: invokevirtual #42
252: aload         4
254: invokevirtual #43
257: ldc           #44
259: invokevirtual #42
262: getstatic     #73
265: invokevirtual #43
268: ldc           #41
270: invokevirtual #42
273: invokevirtual #45
276: aload         4
278: getstatic     #73
281: invokevirtual #85
284: invokestatic  #47
287: new           #39
290: dup
291: invokespecial #40
294: ldc           #41
296: invokevirtual #42
299: aload         6
301: invokevirtual #43
304: ldc           #44
306: invokevirtual #42
309: getstatic     #73
312: invokevirtual #43
315: ldc           #41
317: invokevirtual #42
320: invokevirtual #45
323: aload         6
325: getstatic     #73
328: invokevirtual #85
331: invokestatic  #47
334: aload         7
336: invokestatic  #16
339: aload         9
341: invokestatic  #16
344: aload         9
346: invokestatic  #17
349: ldc           #82
351: invokestatic  #19
354: new           #39
357: dup
358: invokespecial #40
361: ldc           #41
363: invokevirtual #42
366: iload         12
368: invokevirtual #81
371: ldc           #44
373: invokevirtual #42
376: ldc_w         #507
379: invokevirtual #81
382: ldc           #41
384: invokevirtual #42
387: invokevirtual #45
390: iload         12
392: ldc_w         #507
395: if_icmpne     402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #47
406: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 6285
End line: 6311
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        double[] doubleArray9 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray9);
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        float float23 = mersenneTwister22.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray9, (-1682431419), (-2022633607));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NumberIsTooLargeException; message: 589,902,270 is larger than the maximum (6)");
        } catch (org.apache.commons.math3.exception.NumberIsTooLargeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.48016477f + "'", float23 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #508
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: new           #8
156: dup
157: iconst_0
158: aload_1
159: invokespecial #9
162: astore        9
164: new           #96
167: dup
168: aload_1
169: ldc_w         #489
172: ldc           #223
174: invokespecial #249
177: astore        10
179: ldc_w         #509
182: invokestatic  #14
185: goto          190
188: astore        10
190: aload_1
191: invokestatic  #16
194: aload_1
195: invokestatic  #17
198: ldc           #26
200: invokestatic  #19
203: aload_2
204: invokestatic  #16
207: aload_3
208: invokestatic  #16
211: aload_3
212: invokestatic  #117
215: ldc           #118
217: invokestatic  #19
220: new           #39
223: dup
224: invokespecial #40
227: ldc           #41
229: invokevirtual #42
232: fload         5
234: invokevirtual #119
237: ldc           #44
239: invokevirtual #42
242: ldc           #120
244: invokevirtual #119
247: ldc           #41
249: invokevirtual #42
252: invokevirtual #45
255: fload         5
257: ldc           #120
259: fcmpl
260: ifne          267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #47
271: return
Exception table:
from    to  target type
164   185   188   Class org/apache/commons/math3/exception/NumberIsTooLargeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 6314
End line: 6319
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(32, doubleArray1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #510
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        32
33: aload_1
34: invokespecial #9
37: astore_2
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 6322
End line: 6342
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #511
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aload_2
62: invokevirtual #54
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: new           #39
130: dup
131: invokespecial #40
134: ldc           #41
136: invokevirtual #42
139: iload         5
141: invokevirtual #81
144: ldc           #44
146: invokevirtual #42
149: iconst_0
150: invokevirtual #81
153: ldc           #41
155: invokevirtual #42
158: invokevirtual #45
161: iload         5
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #47
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         6
188: invokevirtual #81
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #81
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         6
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #47
221: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 6345
End line: 6384
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        mersenneTwister44.setSeed(0);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #512
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         14
288: iconst_0
289: invokevirtual #169
292: aload_1
293: invokestatic  #16
296: aload_1
297: invokestatic  #17
300: ldc           #26
302: invokestatic  #19
305: aload_3
306: invokestatic  #16
309: aload         4
311: invokestatic  #16
314: aload         5
316: invokestatic  #16
319: aload         5
321: invokestatic  #17
324: ldc           #26
326: invokestatic  #19
329: aload         7
331: invokestatic  #16
334: aload         9
336: invokestatic  #16
339: aload         10
341: invokestatic  #16
344: aload         10
346: invokestatic  #17
349: ldc           #26
351: invokestatic  #19
354: aload         11
356: invokestatic  #16
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         12
373: invokevirtual #84
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #84
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         12
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #47
406: new           #39
409: dup
410: invokespecial #40
413: ldc           #41
415: invokevirtual #42
418: dload         15
420: invokevirtual #121
423: ldc           #44
425: invokevirtual #42
428: ldc2_w        #74
431: invokevirtual #121
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: dload         15
444: ldc2_w        #74
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #47
459: new           #39
462: dup
463: invokespecial #40
466: ldc           #41
468: invokevirtual #42
471: dload         17
473: invokevirtual #121
476: ldc           #44
478: invokevirtual #42
481: ldc2_w        #176
484: invokevirtual #121
487: ldc           #41
489: invokevirtual #42
492: invokevirtual #45
495: dload         17
497: ldc2_w        #176
500: dcmpl
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #47
512: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 6387
End line: 6405
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray6 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #513
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #56
59: astore        6
61: ldc           #29
63: invokestatic  #14
66: goto          71
69: astore        6
71: new           #39
74: dup
75: invokespecial #40
78: ldc           #41
80: invokevirtual #42
83: iload_3
84: invokevirtual #81
87: ldc           #44
89: invokevirtual #42
92: iconst_0
93: invokevirtual #81
96: ldc           #41
98: invokevirtual #42
101: invokevirtual #45
104: iload_3
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #47
116: aload         4
118: invokestatic  #16
121: new           #39
124: dup
125: invokespecial #40
128: ldc           #41
130: invokevirtual #42
133: iload         5
135: invokevirtual #81
138: ldc           #44
140: invokevirtual #42
143: iconst_0
144: invokevirtual #81
147: ldc           #41
149: invokevirtual #42
152: invokevirtual #45
155: iload         5
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #47
168: return
Exception table:
from    to  target type
55    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 6408
End line: 6435
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        double[] doubleArray23 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray23);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister31 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker33 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray23, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister31, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        double double35 = simpleValueChecker33.getRelativeThreshold();
        double double36 = simpleValueChecker33.getRelativeThreshold();
        double double37 = simpleValueChecker33.getAbsoluteThreshold();
        double double38 = simpleValueChecker33.getAbsoluteThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray7, 0, (double) 52, false, 13220, 0, randomGenerator14, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        int int40 = cMAESOptimizer39.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.1102230246251565E-14d + "'", double35 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.1102230246251565E-14d + "'", double36 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.2250738585072014E-306d + "'", double37 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.2250738585072014E-306d + "'", double38 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: getstatic     #481
65: astore_2
66: bipush        6
68: newarray       double
70: dup
71: iconst_0
72: dconst_0
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #10
79: dastore
80: dup
81: iconst_2
82: dconst_1
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #21
97: dastore
98: astore_3
99: aload_3
100: invokestatic  #23
103: new           #32
106: dup
107: iconst_1
108: invokespecial #33
111: astore        4
113: new           #34
116: dup
117: invokespecial #35
120: astore        5
122: new           #8
125: dup
126: iconst_5
127: aload_3
128: bipush        100
130: dconst_0
131: iconst_0
132: iconst_0
133: bipush        100
135: aload         4
137: iconst_1
138: aload         5
140: invokespecial #36
143: astore        6
145: aload         5
147: invokevirtual #162
150: dstore        7
152: aload         5
154: invokevirtual #162
157: dstore        9
159: aload         5
161: invokevirtual #116
164: dstore        11
166: aload         5
168: invokevirtual #116
171: dstore        13
173: new           #8
176: dup
177: bipush        100
179: aload_1
180: iconst_0
181: ldc2_w        #70
184: iconst_0
185: sipush        13220
188: iconst_0
189: aload_2
190: iconst_0
191: aload         5
193: invokespecial #36
196: astore        15
198: aload         15
200: invokevirtual #69
203: istore        16
205: aload_1
206: invokestatic  #16
209: aload_1
210: invokestatic  #17
213: ldc           #26
215: invokestatic  #19
218: aload_2
219: invokestatic  #16
222: aload_3
223: invokestatic  #16
226: aload_3
227: invokestatic  #17
230: ldc           #26
232: invokestatic  #19
235: new           #39
238: dup
239: invokespecial #40
242: ldc           #41
244: invokevirtual #42
247: dload         7
249: invokevirtual #121
252: ldc           #44
254: invokevirtual #42
257: ldc2_w        #163
260: invokevirtual #121
263: ldc           #41
265: invokevirtual #42
268: invokevirtual #45
271: dload         7
273: ldc2_w        #163
276: dcmpl
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #47
288: new           #39
291: dup
292: invokespecial #40
295: ldc           #41
297: invokevirtual #42
300: dload         9
302: invokevirtual #121
305: ldc           #44
307: invokevirtual #42
310: ldc2_w        #163
313: invokevirtual #121
316: ldc           #41
318: invokevirtual #42
321: invokevirtual #45
324: dload         9
326: ldc2_w        #163
329: dcmpl
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #47
341: new           #39
344: dup
345: invokespecial #40
348: ldc           #41
350: invokevirtual #42
353: dload         11
355: invokevirtual #121
358: ldc           #44
360: invokevirtual #42
363: ldc2_w        #122
366: invokevirtual #121
369: ldc           #41
371: invokevirtual #42
374: invokevirtual #45
377: dload         11
379: ldc2_w        #122
382: dcmpl
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #47
394: new           #39
397: dup
398: invokespecial #40
401: ldc           #41
403: invokevirtual #42
406: dload         13
408: invokevirtual #121
411: ldc           #44
413: invokevirtual #42
416: ldc2_w        #122
419: invokevirtual #121
422: ldc           #41
424: invokevirtual #42
427: invokevirtual #45
430: dload         13
432: ldc2_w        #122
435: dcmpl
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #47
447: new           #39
450: dup
451: invokespecial #40
454: ldc           #41
456: invokevirtual #42
459: iload         16
461: invokevirtual #81
464: ldc           #44
466: invokevirtual #42
469: iconst_0
470: invokevirtual #81
473: ldc           #41
475: invokevirtual #42
478: invokevirtual #45
481: iload         16
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #47
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 6438
End line: 6502
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        double[] doubleArray71 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix73 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealMatrix realMatrix74 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray71);
        org.apache.commons.math3.linear.RealVector realVector75 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray71);
        boolean boolean76 = org.apache.commons.math3.util.MathArrays.equals(doubleArray62, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray71);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 1 and 2 are not strictly increasing (100 >= 1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix73);
        org.junit.Assert.assertNotNull(realMatrix74);
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: bipush        6
410: newarray       double
412: dup
413: iconst_0
414: dconst_0
415: dastore
416: dup
417: iconst_1
418: ldc2_w        #10
421: dastore
422: dup
423: iconst_2
424: dconst_1
425: dastore
426: dup
427: iconst_3
428: dconst_0
429: dastore
430: dup
431: iconst_4
432: dconst_1
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #21
439: dastore
440: astore        21
442: aload         21
444: invokestatic  #23
447: aload         21
449: invokestatic  #24
452: astore        22
454: aload         21
456: invokestatic  #192
459: astore        23
461: aload         21
463: invokestatic  #193
466: astore        24
468: aload         18
470: aload         21
472: invokestatic  #72
475: istore        25
477: aload         21
479: invokestatic  #65
482: ldc           #66
484: invokestatic  #14
487: goto          492
490: astore        26
492: aload_1
493: invokestatic  #16
496: aload_1
497: invokestatic  #17
500: ldc           #26
502: invokestatic  #19
505: aload_3
506: invokestatic  #16
509: aload         4
511: invokestatic  #16
514: aload         4
516: invokestatic  #17
519: ldc           #26
521: invokestatic  #19
524: aload         6
526: invokestatic  #16
529: aload         6
531: invokestatic  #17
534: ldc           #26
536: invokestatic  #19
539: aload         9
541: invokestatic  #16
544: aload         9
546: invokestatic  #17
549: ldc           #26
551: invokestatic  #19
554: aload         11
556: invokestatic  #16
559: aload         11
561: invokestatic  #17
564: ldc           #26
566: invokestatic  #19
569: aload         14
571: invokestatic  #16
574: aload         14
576: invokestatic  #17
579: ldc           #26
581: invokestatic  #19
584: aload         17
586: invokestatic  #16
589: aload         18
591: invokestatic  #16
594: aload         18
596: invokestatic  #17
599: ldc           #105
601: invokestatic  #19
604: aload         21
606: invokestatic  #16
609: aload         21
611: invokestatic  #17
614: ldc           #26
616: invokestatic  #19
619: aload         22
621: invokestatic  #16
624: aload         23
626: invokestatic  #16
629: aload         24
631: invokestatic  #16
634: new           #39
637: dup
638: invokespecial #40
641: ldc           #41
643: invokevirtual #42
646: iload         25
648: invokevirtual #84
651: ldc           #44
653: invokevirtual #42
656: iconst_0
657: invokevirtual #84
660: ldc           #41
662: invokevirtual #42
665: invokevirtual #45
668: iload         25
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #47
681: return
Exception table:
from    to  target type
477   487   490   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 6505
End line: 6589
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException9 = null;
        org.apache.commons.math3.optimization.GoalType goalType10 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair11 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException9, goalType10);
        double[] doubleArray18 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector20.copy();
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector20.mapDivide((double) (-1.0f));
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(realVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = arrayRealVector20.add(realVector34);
        double[] doubleArray43 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray43);
        org.apache.commons.math3.linear.RealMatrix realMatrix45 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray43);
        boolean boolean46 = arrayRealVector36.equals((java.lang.Object) doubleArray43);
        double[] doubleArray50 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray51 = new double[][] { doubleArray50 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix53 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray51, true);
        int int54 = array2DRowRealMatrix53.getRowDimension();
        array2DRowRealMatrix53.setEntry((int) (byte) 0, (int) (short) 0, (double) (byte) 100);
        double double59 = array2DRowRealMatrix53.getNorm();
        double[][] doubleArray60 = array2DRowRealMatrix53.getData();
        double[][] doubleArray61 = array2DRowRealMatrix53.getDataRef();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix62 = new org.apache.commons.math3.linear.BlockRealMatrix(doubleArray61);
        double[] doubleArray64 = new double[] { '4' };
        double[] doubleArray65 = new double[] {};
        boolean boolean66 = org.apache.commons.math3.util.MathArrays.equals(doubleArray64, doubleArray65);
        double[] doubleArray67 = blockRealMatrix62.preMultiply(doubleArray64);
        boolean boolean68 = org.apache.commons.math3.util.MathArrays.equals(doubleArray43, doubleArray64);
        double double69 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray64);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair71 = cMAESOptimizer2.optimize(339302072, multivariateFunction8, goalType10, doubleArray64);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + goalType10 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType10.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[5200.0, -52.0, -52.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aconst_null
62: astore        7
64: aconst_null
65: astore        8
67: getstatic     #37
70: astore        9
72: new           #107
75: dup
76: aload         8
78: aload         9
80: invokespecial #110
83: astore        10
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        11
119: aload         11
121: invokestatic  #23
124: new           #96
127: dup
128: aload         11
130: invokespecial #97
133: astore        12
135: aload         12
137: invokevirtual #98
140: astore        13
142: aload         12
144: ldc2_w        #59
147: invokevirtual #151
150: astore        14
152: bipush        6
154: newarray       double
156: dup
157: iconst_0
158: dconst_0
159: dastore
160: dup
161: iconst_1
162: ldc2_w        #10
165: dastore
166: dup
167: iconst_2
168: dconst_1
169: dastore
170: dup
171: iconst_3
172: dconst_0
173: dastore
174: dup
175: iconst_4
176: dconst_1
177: dastore
178: dup
179: iconst_5
180: ldc2_w        #21
183: dastore
184: astore        15
186: aload         15
188: invokestatic  #23
191: new           #96
194: dup
195: aload         15
197: invokespecial #97
200: astore        16
202: aload         16
204: dconst_1
205: invokevirtual #151
208: astore        17
210: new           #96
213: dup
214: aload         17
216: invokespecial #152
219: astore        18
221: aload         12
223: aload         17
225: invokevirtual #153
228: astore        19
230: bipush        6
232: newarray       double
234: dup
235: iconst_0
236: dconst_0
237: dastore
238: dup
239: iconst_1
240: ldc2_w        #10
243: dastore
244: dup
245: iconst_2
246: dconst_1
247: dastore
248: dup
249: iconst_3
250: dconst_0
251: dastore
252: dup
253: iconst_4
254: dconst_1
255: dastore
256: dup
257: iconst_5
258: ldc2_w        #21
261: dastore
262: astore        20
264: aload         20
266: invokestatic  #23
269: aload         20
271: invokestatic  #24
274: astore        21
276: aload         19
278: aload         20
280: invokevirtual #154
283: istore        22
285: iconst_3
286: newarray       double
288: dup
289: iconst_0
290: ldc2_w        #87
293: dastore
294: dup
295: iconst_1
296: ldc2_w        #59
299: dastore
300: dup
301: iconst_2
302: ldc2_w        #59
305: dastore
306: astore        23
308: iconst_1
309: anewarray     #89
312: dup
313: iconst_0
314: aload         23
316: aastore
317: astore        24
319: new           #90
322: dup
323: aload         24
325: iconst_1
326: invokespecial #91
329: astore        25
331: aload         25
333: invokevirtual #182
336: istore        26
338: aload         25
340: iconst_0
341: iconst_0
342: ldc2_w        #10
345: invokevirtual #183
348: aload         25
350: invokevirtual #184
353: dstore        27
355: aload         25
357: invokevirtual #92
360: astore        29
362: aload         25
364: invokevirtual #185
367: astore        30
369: new           #186
372: dup
373: aload         30
375: invokespecial #187
378: astore        31
380: iconst_1
381: newarray       double
383: dup
384: iconst_0
385: ldc2_w        #70
388: dastore
389: astore        32
391: iconst_0
392: newarray       double
394: astore        33
396: aload         32
398: aload         33
400: invokestatic  #72
403: istore        34
405: aload         31
407: aload         32
409: invokevirtual #188
412: astore        35
414: aload         20
416: aload         32
418: invokestatic  #72
421: istore        36
423: aload         32
425: invokestatic  #135
428: dstore        37
430: aload         32
432: invokestatic  #23
435: aload_2
436: ldc_w         #517
439: aload         7
441: aload         9
443: aload         32
445: invokevirtual #12
448: astore        39
450: ldc           #13
452: invokestatic  #14
455: goto          460
458: astore        39
460: new           #39
463: dup
464: invokespecial #40
467: ldc           #41
469: invokevirtual #42
472: iload_3
473: invokevirtual #81
476: ldc           #44
478: invokevirtual #42
481: iconst_0
482: invokevirtual #81
485: ldc           #41
487: invokevirtual #42
490: invokevirtual #45
493: iload_3
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #47
505: aload         4
507: invokestatic  #16
510: new           #39
513: dup
514: invokespecial #40
517: ldc           #41
519: invokevirtual #42
522: iload         5
524: invokevirtual #81
527: ldc           #44
529: invokevirtual #42
532: iconst_0
533: invokevirtual #81
536: ldc           #41
538: invokevirtual #42
541: invokevirtual #45
544: iload         5
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #47
557: new           #39
560: dup
561: invokespecial #40
564: ldc           #41
566: invokevirtual #42
569: iload         6
571: invokevirtual #81
574: ldc           #44
576: invokevirtual #42
579: iconst_0
580: invokevirtual #81
583: ldc           #41
585: invokevirtual #42
588: invokevirtual #45
591: iload         6
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #47
604: new           #39
607: dup
608: invokespecial #40
611: ldc           #41
613: invokevirtual #42
616: aload         9
618: invokevirtual #43
621: ldc           #44
623: invokevirtual #42
626: getstatic     #37
629: invokevirtual #43
632: ldc           #41
634: invokevirtual #42
637: invokevirtual #45
640: aload         9
642: getstatic     #37
645: invokevirtual #46
648: invokestatic  #47
651: aload         11
653: invokestatic  #16
656: aload         11
658: invokestatic  #17
661: ldc           #26
663: invokestatic  #19
666: aload         13
668: invokestatic  #16
671: aload         14
673: invokestatic  #16
676: aload         15
678: invokestatic  #16
681: aload         15
683: invokestatic  #17
686: ldc           #26
688: invokestatic  #19
691: aload         17
693: invokestatic  #16
696: aload         19
698: invokestatic  #16
701: aload         20
703: invokestatic  #16
706: aload         20
708: invokestatic  #17
711: ldc           #26
713: invokestatic  #19
716: aload         21
718: invokestatic  #16
721: new           #39
724: dup
725: invokespecial #40
728: ldc           #41
730: invokevirtual #42
733: iload         22
735: invokevirtual #84
738: ldc           #44
740: invokevirtual #42
743: iconst_0
744: invokevirtual #84
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         22
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #47
768: aload         23
770: invokestatic  #16
773: aload         23
775: invokestatic  #17
778: ldc           #94
780: invokestatic  #19
783: aload         24
785: invokestatic  #16
788: new           #39
791: dup
792: invokespecial #40
795: ldc           #41
797: invokevirtual #42
800: iload         26
802: invokevirtual #81
805: ldc           #44
807: invokevirtual #42
810: iconst_1
811: invokevirtual #81
814: ldc           #41
816: invokevirtual #42
819: invokevirtual #45
822: iload         26
824: iconst_1
825: if_icmpne     832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #47
836: new           #39
839: dup
840: invokespecial #40
843: ldc           #41
845: invokevirtual #42
848: dload         27
850: invokevirtual #121
853: ldc           #44
855: invokevirtual #42
858: ldc2_w        #10
861: invokevirtual #121
864: ldc           #41
866: invokevirtual #42
869: invokevirtual #45
872: dload         27
874: ldc2_w        #10
877: dcmpl
878: ifne          885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #47
889: aload         29
891: invokestatic  #16
894: aload         30
896: invokestatic  #16
899: aload         32
901: invokestatic  #16
904: aload         32
906: invokestatic  #17
909: ldc           #82
911: invokestatic  #19
914: aload         33
916: invokestatic  #16
919: aload         33
921: invokestatic  #17
924: ldc           #83
926: invokestatic  #19
929: new           #39
932: dup
933: invokespecial #40
936: ldc           #41
938: invokevirtual #42
941: iload         34
943: invokevirtual #84
946: ldc           #44
948: invokevirtual #42
951: iconst_0
952: invokevirtual #84
955: ldc           #41
957: invokevirtual #42
960: invokevirtual #45
963: iload         34
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #47
976: aload         35
978: invokestatic  #16
981: aload         35
983: invokestatic  #17
986: ldc           #189
988: invokestatic  #19
991: new           #39
994: dup
995: invokespecial #40
998: ldc           #41
1000: invokevirtual #42
1003: iload         36
1005: invokevirtual #84
1008: ldc           #44
1010: invokevirtual #42
1013: iconst_0
1014: invokevirtual #84
1017: ldc           #41
1019: invokevirtual #42
1022: invokevirtual #45
1025: iload         36
1027: ifne          1034
1030: iconst_1
1031: goto          1035
1034: iconst_0
1035: invokestatic  #47
1038: new           #39
1041: dup
1042: invokespecial #40
1045: ldc           #41
1047: invokevirtual #42
1050: dload         37
1052: invokevirtual #121
1055: ldc           #44
1057: invokevirtual #42
1060: ldc2_w        #70
1063: invokevirtual #121
1066: ldc           #41
1068: invokevirtual #42
1071: invokevirtual #45
1074: dload         37
1076: ldc2_w        #70
1079: dcmpl
1080: ifne          1087
1083: iconst_1
1084: goto          1088
1087: iconst_0
1088: invokestatic  #47
1091: return
Exception table:
from    to  target type
435   455   458   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 6592
End line: 6630
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 1 };
        mersenneTwister21.nextBytes(byteArray46);
        double double48 = mersenneTwister21.nextDouble();
        int int49 = mersenneTwister21.nextInt();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-91, -41]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.03699670215747686d + "'", double48 == 0.03699670215747686d);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1446576480) + "'", int49 == (-1446576480));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #518
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: iconst_2
230: newarray       byte
232: dup
233: iconst_0
234: iconst_0
235: bastore
236: dup
237: iconst_1
238: iconst_1
239: bastore
240: astore        14
242: aload         7
244: aload         14
246: invokevirtual #428
249: aload         7
251: invokevirtual #275
254: dstore        15
256: aload         7
258: invokevirtual #309
261: istore        17
263: aload_1
264: invokestatic  #16
267: aload_1
268: invokestatic  #17
271: ldc           #26
273: invokestatic  #19
276: aload_2
277: invokestatic  #16
280: aload         4
282: invokestatic  #16
285: aload         4
287: invokestatic  #17
290: ldc           #26
292: invokestatic  #19
295: aload         5
297: invokestatic  #16
300: aload         5
302: invokestatic  #117
305: ldc           #229
307: invokestatic  #19
310: aload         6
312: invokestatic  #16
315: aload         6
317: invokestatic  #117
320: ldc           #229
322: invokestatic  #19
325: aload         8
327: invokestatic  #16
330: aload         8
332: invokestatic  #17
335: ldc           #26
337: invokestatic  #19
340: aload         12
342: invokestatic  #16
345: aload         14
347: invokestatic  #16
350: aload         14
352: invokestatic  #430
355: ldc_w         #519
358: invokestatic  #19
361: new           #39
364: dup
365: invokespecial #40
368: ldc           #41
370: invokevirtual #42
373: dload         15
375: invokevirtual #121
378: ldc           #44
380: invokevirtual #42
383: ldc2_w        #520
386: invokevirtual #121
389: ldc           #41
391: invokevirtual #42
394: invokevirtual #45
397: dload         15
399: ldc2_w        #520
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #47
414: new           #39
417: dup
418: invokespecial #40
421: ldc           #41
423: invokevirtual #42
426: iload         17
428: invokevirtual #81
431: ldc           #44
433: invokevirtual #42
436: ldc_w         #522
439: invokevirtual #81
442: ldc           #41
444: invokevirtual #42
447: invokevirtual #45
450: iload         17
452: ldc_w         #522
455: if_icmpne     462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #47
466: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 6633
End line: 6647
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getEvaluations();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #523
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #69
105: istore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload_1
115: invokestatic  #16
118: aload_1
119: invokestatic  #17
122: ldc           #26
124: invokestatic  #19
127: new           #39
130: dup
131: invokespecial #40
134: ldc           #41
136: invokevirtual #42
139: iload         5
141: invokevirtual #81
144: ldc           #44
146: invokevirtual #42
149: iconst_0
150: invokevirtual #81
153: ldc           #41
155: invokevirtual #42
158: invokevirtual #45
161: iload         5
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #47
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         6
188: invokevirtual #81
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #81
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         6
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #47
221: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 6650
End line: 6666
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #524
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload_1
122: invokestatic  #16
125: aload_1
126: invokestatic  #17
129: ldc           #26
131: invokestatic  #19
134: aload         5
136: invokestatic  #16
139: new           #39
142: dup
143: invokespecial #40
146: ldc           #41
148: invokevirtual #42
151: iload         6
153: invokevirtual #81
156: ldc           #44
158: invokevirtual #42
161: iconst_0
162: invokevirtual #81
165: ldc           #41
167: invokevirtual #42
170: invokevirtual #45
173: iload         6
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #47
186: aload         7
188: invokestatic  #16
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 6669
End line: 6709
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = null;
        double[] doubleArray33 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray33);
        org.apache.commons.math3.linear.RealMatrix realMatrix35 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray33);
        int[] intArray45 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister46 = new org.apache.commons.math3.random.MersenneTwister(intArray45);
        float float47 = mersenneTwister46.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker49 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray33, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister46, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker49);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair52 = cMAESOptimizer18.optimize(30, multivariateFunction23, goalType24, doubleArray33);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix35);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 0.48016477f + "'", float47 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aconst_null
122: astore        8
124: aconst_null
125: astore        9
127: bipush        6
129: newarray       double
131: dup
132: iconst_0
133: dconst_0
134: dastore
135: dup
136: iconst_1
137: ldc2_w        #10
140: dastore
141: dup
142: iconst_2
143: dconst_1
144: dastore
145: dup
146: iconst_3
147: dconst_0
148: dastore
149: dup
150: iconst_4
151: dconst_1
152: dastore
153: dup
154: iconst_5
155: ldc2_w        #21
158: dastore
159: astore        10
161: aload         10
163: invokestatic  #23
166: aload         10
168: invokestatic  #24
171: astore        11
173: iconst_4
174: newarray       int
176: dup
177: iconst_0
178: bipush        100
180: iastore
181: dup
182: iconst_1
183: iconst_0
184: iastore
185: dup
186: iconst_2
187: bipush        100
189: iastore
190: dup
191: iconst_3
192: bipush        52
194: iastore
195: astore        12
197: new           #32
200: dup
201: aload         12
203: invokespecial #112
206: astore        13
208: aload         13
210: invokevirtual #113
213: fstore        14
215: new           #34
218: dup
219: invokespecial #35
222: astore        15
224: new           #8
227: dup
228: bipush        32
230: aload         10
232: iconst_0
233: ldc2_w        #114
236: iconst_1
237: ldc           #38
239: bipush        100
241: aload         13
243: iconst_1
244: aload         15
246: invokespecial #36
249: astore        16
251: new           #8
254: dup
255: iconst_m1
256: aload         10
258: invokespecial #9
261: astore        17
263: aload         4
265: bipush        30
267: aload         8
269: aload         9
271: aload         10
273: invokevirtual #12
276: astore        18
278: ldc           #13
280: invokestatic  #14
283: goto          288
286: astore        18
288: aload_1
289: invokestatic  #16
292: aload_1
293: invokestatic  #17
296: ldc           #26
298: invokestatic  #19
301: aload         5
303: invokestatic  #16
306: new           #39
309: dup
310: invokespecial #40
313: ldc           #41
315: invokevirtual #42
318: iload         6
320: invokevirtual #81
323: ldc           #44
325: invokevirtual #42
328: iconst_0
329: invokevirtual #81
332: ldc           #41
334: invokevirtual #42
337: invokevirtual #45
340: iload         6
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #47
353: aload         7
355: invokestatic  #16
358: aload         10
360: invokestatic  #16
363: aload         10
365: invokestatic  #17
368: ldc           #26
370: invokestatic  #19
373: aload         11
375: invokestatic  #16
378: aload         12
380: invokestatic  #16
383: aload         12
385: invokestatic  #117
388: ldc           #118
390: invokestatic  #19
393: new           #39
396: dup
397: invokespecial #40
400: ldc           #41
402: invokevirtual #42
405: fload         14
407: invokevirtual #119
410: ldc           #44
412: invokevirtual #42
415: ldc           #120
417: invokevirtual #119
420: ldc           #41
422: invokevirtual #42
425: invokevirtual #45
428: fload         14
430: ldc           #120
432: fcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #47
444: return
Exception table:
from    to  target type
263   283   286   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 6712
End line: 6795
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction58 = null;
        org.apache.commons.math3.optimization.GoalType goalType59 = null;
        double[] doubleArray60 = null;
        double[] doubleArray64 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray65 = new double[][] { doubleArray64 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix67 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray65, true);
        double[][] doubleArray68 = array2DRowRealMatrix67.getData();
        double[] doubleArray71 = new double[] { '4' };
        double[] doubleArray72 = new double[] {};
        boolean boolean73 = org.apache.commons.math3.util.MathArrays.equals(doubleArray71, doubleArray72);
        array2DRowRealMatrix67.setColumn((int) (short) 1, doubleArray71);
        double[] doubleArray81 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray81);
        org.apache.commons.math3.linear.RealMatrix realMatrix83 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray81);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair85 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray81, (double) (-1.0f));
        double[] doubleArray86 = pointValuePair85.getPoint();
        double double87 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray71, doubleArray86);
        double double88 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray86);
        boolean boolean89 = org.apache.commons.math3.util.MathArrays.equals(doubleArray60, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair90 = cMAESOptimizer56.optimize(30000, multivariateFunction58, goalType59, doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 52.0d + "'", double87 == 52.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.5087060905671d + "'", double88 == 100.5087060905671d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: aload         15
326: invokestatic  #135
329: dstore        16
331: new           #107
334: dup
335: aload         15
337: ldc2_w        #143
340: invokestatic  #76
343: invokespecial #110
346: astore        18
348: new           #8
351: dup
352: bipush        -127
354: aload         15
356: invokespecial #9
359: astore        19
361: aconst_null
362: astore        20
364: aconst_null
365: astore        21
367: aconst_null
368: astore        22
370: iconst_3
371: newarray       double
373: dup
374: iconst_0
375: ldc2_w        #87
378: dastore
379: dup
380: iconst_1
381: ldc2_w        #59
384: dastore
385: dup
386: iconst_2
387: ldc2_w        #59
390: dastore
391: astore        23
393: iconst_1
394: anewarray     #89
397: dup
398: iconst_0
399: aload         23
401: aastore
402: astore        24
404: new           #90
407: dup
408: aload         24
410: iconst_1
411: invokespecial #91
414: astore        25
416: aload         25
418: invokevirtual #92
421: astore        26
423: iconst_1
424: newarray       double
426: dup
427: iconst_0
428: ldc2_w        #70
431: dastore
432: astore        27
434: iconst_0
435: newarray       double
437: astore        28
439: aload         27
441: aload         28
443: invokestatic  #72
446: istore        29
448: aload         25
450: iconst_1
451: aload         27
453: invokevirtual #93
456: bipush        6
458: newarray       double
460: dup
461: iconst_0
462: dconst_0
463: dastore
464: dup
465: iconst_1
466: ldc2_w        #10
469: dastore
470: dup
471: iconst_2
472: dconst_1
473: dastore
474: dup
475: iconst_3
476: dconst_0
477: dastore
478: dup
479: iconst_4
480: dconst_1
481: dastore
482: dup
483: iconst_5
484: ldc2_w        #21
487: dastore
488: astore        30
490: aload         30
492: invokestatic  #23
495: aload         30
497: invokestatic  #24
500: astore        31
502: new           #58
505: dup
506: aload         30
508: ldc2_w        #59
511: invokespecial #61
514: astore        32
516: aload         32
518: invokevirtual #62
521: astore        33
523: aload         27
525: aload         33
527: invokestatic  #134
530: dstore        34
532: aload         33
534: invokestatic  #135
537: dstore        36
539: aload         22
541: aload         33
543: invokestatic  #72
546: istore        38
548: aload         19
550: sipush        30000
553: aload         20
555: aload         21
557: aload         22
559: invokevirtual #12
562: astore        39
564: ldc           #29
566: invokestatic  #14
569: goto          574
572: astore        39
574: aload_1
575: invokestatic  #16
578: aload_1
579: invokestatic  #17
582: ldc           #26
584: invokestatic  #19
587: aload_3
588: invokestatic  #16
591: aload_3
592: invokestatic  #17
595: ldc           #26
597: invokestatic  #19
600: aload         6
602: invokestatic  #16
605: aload         6
607: invokestatic  #17
610: ldc           #26
612: invokestatic  #19
615: aload         8
617: invokestatic  #16
620: aload         8
622: invokestatic  #17
625: ldc           #26
627: invokestatic  #19
630: aload         11
632: invokestatic  #16
635: aload         11
637: invokestatic  #17
640: ldc           #26
642: invokestatic  #19
645: aload         14
647: invokestatic  #16
650: aload         15
652: invokestatic  #16
655: aload         15
657: invokestatic  #17
660: ldc           #105
662: invokestatic  #19
665: new           #39
668: dup
669: invokespecial #40
672: ldc           #41
674: invokevirtual #42
677: dload         16
679: invokevirtual #121
682: ldc           #44
684: invokevirtual #42
687: ldc2_w        #145
690: invokevirtual #121
693: ldc           #41
695: invokevirtual #42
698: invokevirtual #45
701: dload         16
703: ldc2_w        #145
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #47
718: aload         23
720: invokestatic  #16
723: aload         23
725: invokestatic  #17
728: ldc           #94
730: invokestatic  #19
733: aload         24
735: invokestatic  #16
738: aload         26
740: invokestatic  #16
743: aload         27
745: invokestatic  #16
748: aload         27
750: invokestatic  #17
753: ldc           #82
755: invokestatic  #19
758: aload         28
760: invokestatic  #16
763: aload         28
765: invokestatic  #17
768: ldc           #83
770: invokestatic  #19
773: new           #39
776: dup
777: invokespecial #40
780: ldc           #41
782: invokevirtual #42
785: iload         29
787: invokevirtual #84
790: ldc           #44
792: invokevirtual #42
795: iconst_0
796: invokevirtual #84
799: ldc           #41
801: invokevirtual #42
804: invokevirtual #45
807: iload         29
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #47
820: aload         30
822: invokestatic  #16
825: aload         30
827: invokestatic  #17
830: ldc           #26
832: invokestatic  #19
835: aload         31
837: invokestatic  #16
840: aload         33
842: invokestatic  #16
845: aload         33
847: invokestatic  #17
850: ldc           #26
852: invokestatic  #19
855: new           #39
858: dup
859: invokespecial #40
862: ldc           #41
864: invokevirtual #42
867: dload         34
869: invokevirtual #121
872: ldc           #44
874: invokevirtual #42
877: ldc2_w        #70
880: invokevirtual #121
883: ldc           #41
885: invokevirtual #42
888: invokevirtual #45
891: dload         34
893: ldc2_w        #70
896: dcmpl
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #47
908: new           #39
911: dup
912: invokespecial #40
915: ldc           #41
917: invokevirtual #42
920: dload         36
922: invokevirtual #121
925: ldc           #44
927: invokevirtual #42
930: ldc2_w        #136
933: invokevirtual #121
936: ldc           #41
938: invokevirtual #42
941: invokevirtual #45
944: dload         36
946: ldc2_w        #136
949: dcmpl
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #47
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         38
975: invokevirtual #84
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #84
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         38
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #47
1008: return
Exception table:
from    to  target type
548   569   572   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 6798
End line: 6802
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        31
31: invokespecial #245
34: astore_1
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 6805
End line: 6814
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(35, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #528
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        35
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: new           #39
52: dup
53: invokespecial #40
56: ldc           #41
58: invokevirtual #42
61: iload_3
62: invokevirtual #81
65: ldc           #44
67: invokevirtual #42
70: iconst_0
71: invokevirtual #81
74: ldc           #41
76: invokevirtual #42
79: invokevirtual #45
82: iload_3
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #47
94: aload         4
96: invokestatic  #16
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 6817
End line: 6899
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        double[] doubleArray3 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray4, true);
        int int7 = array2DRowRealMatrix6.getRowDimension();
        org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor8 = new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor();
        defaultRealMatrixPreservingVisitor8.visit(31, (int) (short) 100, (double) 97);
        double double13 = array2DRowRealMatrix6.walkInRowOrder((org.apache.commons.math3.linear.RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor8);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = array2DRowRealMatrix6.copy();
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        int[] intArray22 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19, 3);
        int[] intArray27 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister28 = new org.apache.commons.math3.random.MersenneTwister(intArray27);
        int[] intArray33 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister34 = new org.apache.commons.math3.random.MersenneTwister(intArray33);
        int[] intArray36 = org.apache.commons.math3.util.MathArrays.copyOf(intArray33, 3);
        int int37 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray27, intArray33);
        int[] intArray42 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister43 = new org.apache.commons.math3.random.MersenneTwister(intArray42);
        int[] intArray44 = org.apache.commons.math3.util.MathArrays.copyOf(intArray42);
        int int45 = org.apache.commons.math3.util.MathArrays.distance1(intArray27, intArray42);
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray22, intArray42);
        double[] doubleArray54 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray54);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister62 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker64 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray54, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister62, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker64);
        int[] intArray70 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister71 = new org.apache.commons.math3.random.MersenneTwister(intArray70);
        int[] intArray72 = org.apache.commons.math3.util.MathArrays.copyOf(intArray70);
        int[] intArray77 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister78 = new org.apache.commons.math3.random.MersenneTwister(intArray77);
        int int79 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray72, intArray77);
        mersenneTwister62.setSeed(intArray72);
        int int81 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray22, intArray72);
        boolean boolean82 = array2DRowRealMatrix6.equals((java.lang.Object) int81);
        org.apache.commons.math3.linear.RealMatrix realMatrix83 = array2DRowRealMatrix6.transpose();
        // The following exception was thrown during execution in test generation
        try {
            double double86 = array2DRowRealMatrix6.getEntry((-1023), 1433601405);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (-1,023)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 0, 100]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(realMatrix83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #529
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #87
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #59
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #59
45: dastore
46: astore_1
47: iconst_1
48: anewarray     #89
51: dup
52: iconst_0
53: aload_1
54: aastore
55: astore_2
56: new           #90
59: dup
60: aload_2
61: iconst_1
62: invokespecial #91
65: astore_3
66: aload_3
67: invokevirtual #182
70: istore        4
72: new           #236
75: dup
76: invokespecial #237
79: astore        5
81: aload         5
83: bipush        31
85: bipush        100
87: ldc2_w        #238
90: invokevirtual #240
93: aload_3
94: aload         5
96: invokevirtual #241
99: dstore        6
101: aload_3
102: invokevirtual #530
105: astore        8
107: iconst_4
108: newarray       int
110: dup
111: iconst_0
112: bipush        100
114: iastore
115: dup
116: iconst_1
117: iconst_0
118: iastore
119: dup
120: iconst_2
121: bipush        100
123: iastore
124: dup
125: iconst_3
126: bipush        52
128: iastore
129: astore        9
131: new           #32
134: dup
135: aload         9
137: invokespecial #112
140: astore        10
142: aload         9
144: iconst_3
145: invokestatic  #310
148: astore        11
150: iconst_4
151: newarray       int
153: dup
154: iconst_0
155: bipush        100
157: iastore
158: dup
159: iconst_1
160: iconst_0
161: iastore
162: dup
163: iconst_2
164: bipush        100
166: iastore
167: dup
168: iconst_3
169: bipush        52
171: iastore
172: astore        12
174: new           #32
177: dup
178: aload         12
180: invokespecial #112
183: astore        13
185: iconst_4
186: newarray       int
188: dup
189: iconst_0
190: bipush        100
192: iastore
193: dup
194: iconst_1
195: iconst_0
196: iastore
197: dup
198: iconst_2
199: bipush        100
201: iastore
202: dup
203: iconst_3
204: bipush        52
206: iastore
207: astore        14
209: new           #32
212: dup
213: aload         14
215: invokespecial #112
218: astore        15
220: aload         14
222: iconst_3
223: invokestatic  #310
226: astore        16
228: aload         12
230: aload         14
232: invokestatic  #306
235: istore        17
237: iconst_4
238: newarray       int
240: dup
241: iconst_0
242: bipush        100
244: iastore
245: dup
246: iconst_1
247: iconst_0
248: iastore
249: dup
250: iconst_2
251: bipush        100
253: iastore
254: dup
255: iconst_3
256: bipush        52
258: iastore
259: astore        18
261: new           #32
264: dup
265: aload         18
267: invokespecial #112
270: astore        19
272: aload         18
274: invokestatic  #226
277: astore        20
279: aload         12
281: aload         18
283: invokestatic  #429
286: istore        21
288: aload         11
290: aload         18
292: invokestatic  #306
295: istore        22
297: bipush        6
299: newarray       double
301: dup
302: iconst_0
303: dconst_0
304: dastore
305: dup
306: iconst_1
307: ldc2_w        #10
310: dastore
311: dup
312: iconst_2
313: dconst_1
314: dastore
315: dup
316: iconst_3
317: dconst_0
318: dastore
319: dup
320: iconst_4
321: dconst_1
322: dastore
323: dup
324: iconst_5
325: ldc2_w        #21
328: dastore
329: astore        23
331: aload         23
333: invokestatic  #23
336: new           #32
339: dup
340: iconst_1
341: invokespecial #33
344: astore        24
346: new           #34
349: dup
350: invokespecial #35
353: astore        25
355: new           #8
358: dup
359: iconst_5
360: aload         23
362: bipush        100
364: dconst_0
365: iconst_0
366: iconst_0
367: bipush        100
369: aload         24
371: iconst_1
372: aload         25
374: invokespecial #36
377: astore        26
379: iconst_4
380: newarray       int
382: dup
383: iconst_0
384: bipush        100
386: iastore
387: dup
388: iconst_1
389: iconst_0
390: iastore
391: dup
392: iconst_2
393: bipush        100
395: iastore
396: dup
397: iconst_3
398: bipush        52
400: iastore
401: astore        27
403: new           #32
406: dup
407: aload         27
409: invokespecial #112
412: astore        28
414: aload         27
416: invokestatic  #226
419: astore        29
421: iconst_4
422: newarray       int
424: dup
425: iconst_0
426: bipush        100
428: iastore
429: dup
430: iconst_1
431: iconst_0
432: iastore
433: dup
434: iconst_2
435: bipush        100
437: iastore
438: dup
439: iconst_3
440: bipush        52
442: iastore
443: astore        30
445: new           #32
448: dup
449: aload         30
451: invokespecial #112
454: astore        31
456: aload         29
458: aload         30
460: invokestatic  #306
463: istore        32
465: aload         24
467: aload         29
469: invokevirtual #228
472: aload         11
474: aload         29
476: invokestatic  #306
479: istore        33
481: aload_3
482: iload         33
484: invokestatic  #220
487: invokevirtual #456
490: istore        34
492: aload_3
493: invokevirtual #531
496: astore        35
498: aload_3
499: sipush        -1023
502: ldc_w         #532
505: invokevirtual #533
508: dstore        36
510: ldc_w         #534
513: invokestatic  #14
516: goto          521
519: astore        36
521: aload_1
522: invokestatic  #16
525: aload_1
526: invokestatic  #17
529: ldc           #94
531: invokestatic  #19
534: aload_2
535: invokestatic  #16
538: new           #39
541: dup
542: invokespecial #40
545: ldc           #41
547: invokevirtual #42
550: iload         4
552: invokevirtual #81
555: ldc           #44
557: invokevirtual #42
560: iconst_1
561: invokevirtual #81
564: ldc           #41
566: invokevirtual #42
569: invokevirtual #45
572: iload         4
574: iconst_1
575: if_icmpne     582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #47
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: dload         6
600: invokevirtual #121
603: ldc           #44
605: invokevirtual #42
608: dconst_0
609: invokevirtual #121
612: ldc           #41
614: invokevirtual #42
617: invokevirtual #45
620: dload         6
622: dconst_0
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #47
635: aload         8
637: invokestatic  #16
640: aload         9
642: invokestatic  #16
645: aload         9
647: invokestatic  #117
650: ldc           #118
652: invokestatic  #19
655: aload         11
657: invokestatic  #16
660: aload         11
662: invokestatic  #117
665: ldc_w         #432
668: invokestatic  #19
671: aload         12
673: invokestatic  #16
676: aload         12
678: invokestatic  #117
681: ldc           #118
683: invokestatic  #19
686: aload         14
688: invokestatic  #16
691: aload         14
693: invokestatic  #117
696: ldc           #118
698: invokestatic  #19
701: aload         16
703: invokestatic  #16
706: aload         16
708: invokestatic  #117
711: ldc_w         #432
714: invokestatic  #19
717: new           #39
720: dup
721: invokespecial #40
724: ldc           #41
726: invokevirtual #42
729: iload         17
731: invokevirtual #81
734: ldc           #44
736: invokevirtual #42
739: iconst_0
740: invokevirtual #81
743: ldc           #41
745: invokevirtual #42
748: invokevirtual #45
751: iload         17
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #47
764: aload         18
766: invokestatic  #16
769: aload         18
771: invokestatic  #117
774: ldc           #118
776: invokestatic  #19
779: aload         20
781: invokestatic  #16
784: aload         20
786: invokestatic  #117
789: ldc           #118
791: invokestatic  #19
794: new           #39
797: dup
798: invokespecial #40
801: ldc           #41
803: invokevirtual #42
806: iload         21
808: invokevirtual #81
811: ldc           #44
813: invokevirtual #42
816: iconst_0
817: invokevirtual #81
820: ldc           #41
822: invokevirtual #42
825: invokevirtual #45
828: iload         21
830: ifne          837
833: iconst_1
834: goto          838
837: iconst_0
838: invokestatic  #47
841: new           #39
844: dup
845: invokespecial #40
848: ldc           #41
850: invokevirtual #42
853: iload         22
855: invokevirtual #81
858: ldc           #44
860: invokevirtual #42
863: iconst_0
864: invokevirtual #81
867: ldc           #41
869: invokevirtual #42
872: invokevirtual #45
875: iload         22
877: ifne          884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #47
888: aload         23
890: invokestatic  #16
893: aload         23
895: invokestatic  #17
898: ldc           #26
900: invokestatic  #19
903: aload         27
905: invokestatic  #16
908: aload         27
910: invokestatic  #117
913: ldc           #118
915: invokestatic  #19
918: aload         29
920: invokestatic  #16
923: aload         29
925: invokestatic  #117
928: ldc           #118
930: invokestatic  #19
933: aload         30
935: invokestatic  #16
938: aload         30
940: invokestatic  #117
943: ldc           #118
945: invokestatic  #19
948: new           #39
951: dup
952: invokespecial #40
955: ldc           #41
957: invokevirtual #42
960: iload         32
962: invokevirtual #81
965: ldc           #44
967: invokevirtual #42
970: iconst_0
971: invokevirtual #81
974: ldc           #41
976: invokevirtual #42
979: invokevirtual #45
982: iload         32
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #47
995: new           #39
998: dup
999: invokespecial #40
1002: ldc           #41
1004: invokevirtual #42
1007: iload         33
1009: invokevirtual #81
1012: ldc           #44
1014: invokevirtual #42
1017: iconst_0
1018: invokevirtual #81
1021: ldc           #41
1023: invokevirtual #42
1026: invokevirtual #45
1029: iload         33
1031: ifne          1038
1034: iconst_1
1035: goto          1039
1038: iconst_0
1039: invokestatic  #47
1042: new           #39
1045: dup
1046: invokespecial #40
1049: ldc           #41
1051: invokevirtual #42
1054: iload         34
1056: invokevirtual #84
1059: ldc           #44
1061: invokevirtual #42
1064: iconst_0
1065: invokevirtual #84
1068: ldc           #41
1070: invokevirtual #42
1073: invokevirtual #45
1076: iload         34
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #47
1089: aload         35
1091: invokestatic  #16
1094: return
Exception table:
from    to  target type
498   516   519   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 6902
End line: 6972
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        double[] doubleArray25 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray25);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray25);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector18, arrayRealVector27);
        org.apache.commons.math3.linear.RealVector realVector30 = arrayRealVector27.mapMultiplyToSelf((double) (-9.999999f));
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.RealVector realVector41 = arrayRealVector39.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(realVector41);
        double[] doubleArray49 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray49);
        org.apache.commons.math3.linear.RealVector realVector52 = arrayRealVector51.copy();
        org.apache.commons.math3.linear.RealVector realVector54 = arrayRealVector51.mapDivide((double) (-1.0f));
        double[] doubleArray61 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray61);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray61);
        org.apache.commons.math3.linear.RealVector realVector65 = arrayRealVector63.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(realVector65);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = arrayRealVector51.add(realVector65);
        double double68 = arrayRealVector42.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector51);
        double double69 = arrayRealVector27.getDistance((org.apache.commons.math3.linear.RealVector) arrayRealVector51);
        double[] doubleArray70 = arrayRealVector27.toArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair71 = cMAESOptimizer2.optimize((int) (short) -10, multivariateFunction8, goalType9, doubleArray70);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + goalType9 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType9.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector52);
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(arrayRealVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10102.0d + "'", double68 == 10102.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1105.5956711436666d + "'", double69 == 1105.5956711436666d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-0.0, -999.9999046325684, -9.999999046325684, -0.0, -9.999999046325684, -99.99999046325684]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #535
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aconst_null
62: astore        7
64: getstatic     #37
67: astore        8
69: bipush        6
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #10
82: dastore
83: dup
84: iconst_2
85: dconst_1
86: dastore
87: dup
88: iconst_3
89: dconst_0
90: dastore
91: dup
92: iconst_4
93: dconst_1
94: dastore
95: dup
96: iconst_5
97: ldc2_w        #21
100: dastore
101: astore        9
103: aload         9
105: invokestatic  #23
108: new           #96
111: dup
112: aload         9
114: invokespecial #97
117: astore        10
119: bipush        6
121: newarray       double
123: dup
124: iconst_0
125: dconst_0
126: dastore
127: dup
128: iconst_1
129: ldc2_w        #10
132: dastore
133: dup
134: iconst_2
135: dconst_1
136: dastore
137: dup
138: iconst_3
139: dconst_0
140: dastore
141: dup
142: iconst_4
143: dconst_1
144: dastore
145: dup
146: iconst_5
147: ldc2_w        #21
150: dastore
151: astore        11
153: aload         11
155: invokestatic  #23
158: new           #96
161: dup
162: aload         11
164: invokespecial #97
167: astore        12
169: new           #96
172: dup
173: aload         10
175: aload         12
177: invokespecial #99
180: astore        13
182: aload         12
184: ldc2_w        #536
187: invokevirtual #538
190: astore        14
192: bipush        6
194: newarray       double
196: dup
197: iconst_0
198: dconst_0
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #10
205: dastore
206: dup
207: iconst_2
208: dconst_1
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: ldc2_w        #21
223: dastore
224: astore        15
226: aload         15
228: invokestatic  #23
231: new           #96
234: dup
235: aload         15
237: invokespecial #97
240: astore        16
242: aload         16
244: dconst_1
245: invokevirtual #151
248: astore        17
250: new           #96
253: dup
254: aload         17
256: invokespecial #152
259: astore        18
261: bipush        6
263: newarray       double
265: dup
266: iconst_0
267: dconst_0
268: dastore
269: dup
270: iconst_1
271: ldc2_w        #10
274: dastore
275: dup
276: iconst_2
277: dconst_1
278: dastore
279: dup
280: iconst_3
281: dconst_0
282: dastore
283: dup
284: iconst_4
285: dconst_1
286: dastore
287: dup
288: iconst_5
289: ldc2_w        #21
292: dastore
293: astore        19
295: aload         19
297: invokestatic  #23
300: new           #96
303: dup
304: aload         19
306: invokespecial #97
309: astore        20
311: aload         20
313: invokevirtual #98
316: astore        21
318: aload         20
320: ldc2_w        #59
323: invokevirtual #151
326: astore        22
328: bipush        6
330: newarray       double
332: dup
333: iconst_0
334: dconst_0
335: dastore
336: dup
337: iconst_1
338: ldc2_w        #10
341: dastore
342: dup
343: iconst_2
344: dconst_1
345: dastore
346: dup
347: iconst_3
348: dconst_0
349: dastore
350: dup
351: iconst_4
352: dconst_1
353: dastore
354: dup
355: iconst_5
356: ldc2_w        #21
359: dastore
360: astore        23
362: aload         23
364: invokestatic  #23
367: new           #96
370: dup
371: aload         23
373: invokespecial #97
376: astore        24
378: aload         24
380: dconst_1
381: invokevirtual #151
384: astore        25
386: new           #96
389: dup
390: aload         25
392: invokespecial #152
395: astore        26
397: aload         20
399: aload         25
401: invokevirtual #153
404: astore        27
406: aload         18
408: aload         20
410: invokevirtual #392
413: dstore        28
415: aload         12
417: aload         20
419: invokevirtual #539
422: dstore        30
424: aload         12
426: invokevirtual #101
429: astore        32
431: aload_2
432: bipush        -10
434: aload         7
436: aload         8
438: aload         32
440: invokevirtual #12
443: astore        33
445: ldc           #13
447: invokestatic  #14
450: goto          455
453: astore        33
455: new           #39
458: dup
459: invokespecial #40
462: ldc           #41
464: invokevirtual #42
467: iload_3
468: invokevirtual #81
471: ldc           #44
473: invokevirtual #42
476: iconst_0
477: invokevirtual #81
480: ldc           #41
482: invokevirtual #42
485: invokevirtual #45
488: iload_3
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #47
500: aload         4
502: invokestatic  #16
505: aload         5
507: invokestatic  #16
510: new           #39
513: dup
514: invokespecial #40
517: ldc           #41
519: invokevirtual #42
522: iload         6
524: invokevirtual #81
527: ldc           #44
529: invokevirtual #42
532: iconst_0
533: invokevirtual #81
536: ldc           #41
538: invokevirtual #42
541: invokevirtual #45
544: iload         6
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #47
557: new           #39
560: dup
561: invokespecial #40
564: ldc           #41
566: invokevirtual #42
569: aload         8
571: invokevirtual #43
574: ldc           #44
576: invokevirtual #42
579: getstatic     #37
582: invokevirtual #43
585: ldc           #41
587: invokevirtual #42
590: invokevirtual #45
593: aload         8
595: getstatic     #37
598: invokevirtual #46
601: invokestatic  #47
604: aload         9
606: invokestatic  #16
609: aload         9
611: invokestatic  #17
614: ldc           #26
616: invokestatic  #19
619: aload         11
621: invokestatic  #16
624: aload         11
626: invokestatic  #17
629: ldc           #26
631: invokestatic  #19
634: aload         14
636: invokestatic  #16
639: aload         15
641: invokestatic  #16
644: aload         15
646: invokestatic  #17
649: ldc           #26
651: invokestatic  #19
654: aload         17
656: invokestatic  #16
659: aload         19
661: invokestatic  #16
664: aload         19
666: invokestatic  #17
669: ldc           #26
671: invokestatic  #19
674: aload         21
676: invokestatic  #16
679: aload         22
681: invokestatic  #16
684: aload         23
686: invokestatic  #16
689: aload         23
691: invokestatic  #17
694: ldc           #26
696: invokestatic  #19
699: aload         25
701: invokestatic  #16
704: aload         27
706: invokestatic  #16
709: new           #39
712: dup
713: invokespecial #40
716: ldc           #41
718: invokevirtual #42
721: dload         28
723: invokevirtual #121
726: ldc           #44
728: invokevirtual #42
731: ldc2_w        #298
734: invokevirtual #121
737: ldc           #41
739: invokevirtual #42
742: invokevirtual #45
745: dload         28
747: ldc2_w        #298
750: dcmpl
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #47
762: new           #39
765: dup
766: invokespecial #40
769: ldc           #41
771: invokevirtual #42
774: dload         30
776: invokevirtual #121
779: ldc           #44
781: invokevirtual #42
784: ldc2_w        #540
787: invokevirtual #121
790: ldc           #41
792: invokevirtual #42
795: invokevirtual #45
798: dload         30
800: ldc2_w        #540
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #47
815: aload         32
817: invokestatic  #16
820: aload         32
822: invokestatic  #17
825: ldc_w         #542
828: invokestatic  #19
831: return
Exception table:
from    to  target type
431   450   453   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 6975
End line: 6991
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        double double19 = simpleValueChecker17.getRelativeThreshold();
        double double20 = simpleValueChecker17.getRelativeThreshold();
        double double21 = simpleValueChecker17.getRelativeThreshold();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.1102230246251565E-14d + "'", double19 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.1102230246251565E-14d + "'", double20 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.1102230246251565E-14d + "'", double21 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #543
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_3
101: invokevirtual #162
104: dstore        5
106: aload_3
107: invokevirtual #162
110: dstore        7
112: aload_3
113: invokevirtual #162
116: dstore        9
118: aload_1
119: invokestatic  #16
122: aload_1
123: invokestatic  #17
126: ldc           #26
128: invokestatic  #19
131: new           #39
134: dup
135: invokespecial #40
138: ldc           #41
140: invokevirtual #42
143: dload         5
145: invokevirtual #121
148: ldc           #44
150: invokevirtual #42
153: ldc2_w        #163
156: invokevirtual #121
159: ldc           #41
161: invokevirtual #42
164: invokevirtual #45
167: dload         5
169: ldc2_w        #163
172: dcmpl
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #47
184: new           #39
187: dup
188: invokespecial #40
191: ldc           #41
193: invokevirtual #42
196: dload         7
198: invokevirtual #121
201: ldc           #44
203: invokevirtual #42
206: ldc2_w        #163
209: invokevirtual #121
212: ldc           #41
214: invokevirtual #42
217: invokevirtual #45
220: dload         7
222: ldc2_w        #163
225: dcmpl
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #47
237: new           #39
240: dup
241: invokespecial #40
244: ldc           #41
246: invokevirtual #42
249: dload         9
251: invokevirtual #121
254: ldc           #44
256: invokevirtual #42
259: ldc2_w        #163
262: invokevirtual #121
265: ldc           #41
267: invokevirtual #42
270: invokevirtual #45
273: dload         9
275: ldc2_w        #163
278: dcmpl
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #47
290: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 6994
End line: 7072
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        double[] doubleArray1 = new double[] { '4' };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math3.util.MathArrays.equals(doubleArray1, doubleArray2);
        double[] doubleArray10 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray10);
        org.apache.commons.math3.linear.RealMatrix realMatrix12 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray2, doubleArray10);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair16 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray10, 1.401298464324817E-45d);
        double[] doubleArray24 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector26.copy();
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector36, arrayRealVector45);
        double[] doubleArray55 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray55);
        double[] doubleArray64 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray64);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray64);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector57, arrayRealVector66);
        double[] doubleArray74 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray74);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray74);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector66, arrayRealVector76);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = arrayRealVector45.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector76);
        double[] doubleArray79 = arrayRealVector45.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector80 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector26, doubleArray79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray79);
        double[] doubleArray88 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray88);
        org.apache.commons.math3.linear.RealMatrix realMatrix90 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray88);
        org.apache.commons.math3.linear.RealMatrix realMatrix91 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray88);
        org.apache.commons.math3.linear.RealVector realVector92 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray88);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(doubleArray79, doubleArray88);
        double double94 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray10, doubleArray88);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair96 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray88, 9.120836514821213E51d);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix90);
        org.junit.Assert.assertNotNull(realMatrix91);
        org.junit.Assert.assertNotNull(realVector92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #544
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: bipush        6
47: newarray       double
49: dup
50: iconst_0
51: dconst_0
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: dup
64: iconst_3
65: dconst_0
66: dastore
67: dup
68: iconst_4
69: dconst_1
70: dastore
71: dup
72: iconst_5
73: ldc2_w        #21
76: dastore
77: astore        4
79: aload         4
81: invokestatic  #23
84: aload         4
86: invokestatic  #24
89: astore        5
91: aload         4
93: invokestatic  #24
96: astore        6
98: new           #96
101: dup
102: aload_2
103: aload         4
105: invokespecial #139
108: astore        7
110: new           #58
113: dup
114: aload         4
116: ldc2_w        #108
119: invokespecial #61
122: astore        8
124: bipush        6
126: newarray       double
128: dup
129: iconst_0
130: dconst_0
131: dastore
132: dup
133: iconst_1
134: ldc2_w        #10
137: dastore
138: dup
139: iconst_2
140: dconst_1
141: dastore
142: dup
143: iconst_3
144: dconst_0
145: dastore
146: dup
147: iconst_4
148: dconst_1
149: dastore
150: dup
151: iconst_5
152: ldc2_w        #21
155: dastore
156: astore        9
158: aload         9
160: invokestatic  #23
163: new           #96
166: dup
167: aload         9
169: invokespecial #97
172: astore        10
174: aload         10
176: invokevirtual #98
179: astore        11
181: bipush        6
183: newarray       double
185: dup
186: iconst_0
187: dconst_0
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #10
194: dastore
195: dup
196: iconst_2
197: dconst_1
198: dastore
199: dup
200: iconst_3
201: dconst_0
202: dastore
203: dup
204: iconst_4
205: dconst_1
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #21
212: dastore
213: astore        12
215: aload         12
217: invokestatic  #23
220: new           #96
223: dup
224: aload         12
226: invokespecial #97
229: astore        13
231: bipush        6
233: newarray       double
235: dup
236: iconst_0
237: dconst_0
238: dastore
239: dup
240: iconst_1
241: ldc2_w        #10
244: dastore
245: dup
246: iconst_2
247: dconst_1
248: dastore
249: dup
250: iconst_3
251: dconst_0
252: dastore
253: dup
254: iconst_4
255: dconst_1
256: dastore
257: dup
258: iconst_5
259: ldc2_w        #21
262: dastore
263: astore        14
265: aload         14
267: invokestatic  #23
270: new           #96
273: dup
274: aload         14
276: invokespecial #97
279: astore        15
281: new           #96
284: dup
285: aload         13
287: aload         15
289: invokespecial #99
292: astore        16
294: bipush        6
296: newarray       double
298: dup
299: iconst_0
300: dconst_0
301: dastore
302: dup
303: iconst_1
304: ldc2_w        #10
307: dastore
308: dup
309: iconst_2
310: dconst_1
311: dastore
312: dup
313: iconst_3
314: dconst_0
315: dastore
316: dup
317: iconst_4
318: dconst_1
319: dastore
320: dup
321: iconst_5
322: ldc2_w        #21
325: dastore
326: astore        17
328: aload         17
330: invokestatic  #23
333: new           #96
336: dup
337: aload         17
339: invokespecial #97
342: astore        18
344: bipush        6
346: newarray       double
348: dup
349: iconst_0
350: dconst_0
351: dastore
352: dup
353: iconst_1
354: ldc2_w        #10
357: dastore
358: dup
359: iconst_2
360: dconst_1
361: dastore
362: dup
363: iconst_3
364: dconst_0
365: dastore
366: dup
367: iconst_4
368: dconst_1
369: dastore
370: dup
371: iconst_5
372: ldc2_w        #21
375: dastore
376: astore        19
378: aload         19
380: invokestatic  #23
383: new           #96
386: dup
387: aload         19
389: invokespecial #97
392: astore        20
394: new           #96
397: dup
398: aload         18
400: aload         20
402: invokespecial #99
405: astore        21
407: bipush        6
409: newarray       double
411: dup
412: iconst_0
413: dconst_0
414: dastore
415: dup
416: iconst_1
417: ldc2_w        #10
420: dastore
421: dup
422: iconst_2
423: dconst_1
424: dastore
425: dup
426: iconst_3
427: dconst_0
428: dastore
429: dup
430: iconst_4
431: dconst_1
432: dastore
433: dup
434: iconst_5
435: ldc2_w        #21
438: dastore
439: astore        22
441: aload         22
443: invokestatic  #23
446: new           #96
449: dup
450: aload         22
452: invokespecial #97
455: astore        23
457: new           #96
460: dup
461: aload         20
463: aload         23
465: invokespecial #99
468: astore        24
470: aload         15
472: dconst_1
473: dconst_1
474: aload         23
476: invokevirtual #100
479: astore        25
481: aload         15
483: invokevirtual #101
486: astore        26
488: new           #96
491: dup
492: aload         10
494: aload         26
496: invokespecial #102
499: astore        27
501: new           #8
504: dup
505: bipush        100
507: aload         26
509: invokespecial #9
512: astore        28
514: bipush        6
516: newarray       double
518: dup
519: iconst_0
520: dconst_0
521: dastore
522: dup
523: iconst_1
524: ldc2_w        #10
527: dastore
528: dup
529: iconst_2
530: dconst_1
531: dastore
532: dup
533: iconst_3
534: dconst_0
535: dastore
536: dup
537: iconst_4
538: dconst_1
539: dastore
540: dup
541: iconst_5
542: ldc2_w        #21
545: dastore
546: astore        29
548: aload         29
550: invokestatic  #23
553: aload         29
555: invokestatic  #24
558: astore        30
560: aload         29
562: invokestatic  #192
565: astore        31
567: aload         29
569: invokestatic  #193
572: astore        32
574: aload         26
576: aload         29
578: invokestatic  #72
581: istore        33
583: aload         4
585: aload         29
587: invokestatic  #545
590: dstore        34
592: new           #58
595: dup
596: aload         29
598: ldc2_w        #546
601: invokespecial #61
604: astore        36
606: aload_1
607: invokestatic  #16
610: aload_1
611: invokestatic  #17
614: ldc           #82
616: invokestatic  #19
619: aload_2
620: invokestatic  #16
623: aload_2
624: invokestatic  #17
627: ldc           #83
629: invokestatic  #19
632: new           #39
635: dup
636: invokespecial #40
639: ldc           #41
641: invokevirtual #42
644: iload_3
645: invokevirtual #84
648: ldc           #44
650: invokevirtual #42
653: iconst_0
654: invokevirtual #84
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: iload_3
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #47
677: aload         4
679: invokestatic  #16
682: aload         4
684: invokestatic  #17
687: ldc           #26
689: invokestatic  #19
692: aload         5
694: invokestatic  #16
697: aload         6
699: invokestatic  #16
702: aload         9
704: invokestatic  #16
707: aload         9
709: invokestatic  #17
712: ldc           #26
714: invokestatic  #19
717: aload         11
719: invokestatic  #16
722: aload         12
724: invokestatic  #16
727: aload         12
729: invokestatic  #17
732: ldc           #26
734: invokestatic  #19
737: aload         14
739: invokestatic  #16
742: aload         14
744: invokestatic  #17
747: ldc           #26
749: invokestatic  #19
752: aload         17
754: invokestatic  #16
757: aload         17
759: invokestatic  #17
762: ldc           #26
764: invokestatic  #19
767: aload         19
769: invokestatic  #16
772: aload         19
774: invokestatic  #17
777: ldc           #26
779: invokestatic  #19
782: aload         22
784: invokestatic  #16
787: aload         22
789: invokestatic  #17
792: ldc           #26
794: invokestatic  #19
797: aload         25
799: invokestatic  #16
802: aload         26
804: invokestatic  #16
807: aload         26
809: invokestatic  #17
812: ldc           #105
814: invokestatic  #19
817: aload         29
819: invokestatic  #16
822: aload         29
824: invokestatic  #17
827: ldc           #26
829: invokestatic  #19
832: aload         30
834: invokestatic  #16
837: aload         31
839: invokestatic  #16
842: aload         32
844: invokestatic  #16
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: iload         33
861: invokevirtual #84
864: ldc           #44
866: invokevirtual #42
869: iconst_0
870: invokevirtual #84
873: ldc           #41
875: invokevirtual #42
878: invokevirtual #45
881: iload         33
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #47
894: new           #39
897: dup
898: invokespecial #40
901: ldc           #41
903: invokevirtual #42
906: dload         34
908: invokevirtual #121
911: ldc           #44
913: invokevirtual #42
916: dconst_0
917: invokevirtual #121
920: ldc           #41
922: invokevirtual #42
925: invokevirtual #45
928: dload         34
930: dconst_0
931: dcmpl
932: ifne          939
935: iconst_1
936: goto          940
939: iconst_0
940: invokestatic  #47
943: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 7075
End line: 7097
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        int int23 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = cMAESOptimizer18.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #548
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload         4
130: invokevirtual #125
133: istore        9
135: aload         4
137: invokevirtual #53
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: new           #39
163: dup
164: invokespecial #40
167: ldc           #41
169: invokevirtual #42
172: iload         6
174: invokevirtual #81
177: ldc           #44
179: invokevirtual #42
182: iconst_0
183: invokevirtual #81
186: ldc           #41
188: invokevirtual #42
191: invokevirtual #45
194: iload         6
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #47
207: aload         7
209: invokestatic  #155
212: aload         8
214: invokestatic  #16
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload         9
231: invokevirtual #81
234: ldc           #44
236: invokevirtual #42
239: iconst_0
240: invokevirtual #81
243: ldc           #41
245: invokevirtual #42
248: invokevirtual #45
251: iload         9
253: ifne          260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #47
264: aload         10
266: invokestatic  #16
269: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 7100
End line: 7127
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        double double5 = blockRealMatrix2.getEntry(0, (int) '#');
        double double6 = blockRealMatrix2.getNorm();
        org.apache.commons.math3.linear.RealVector realVector8 = blockRealMatrix2.getRowVector(1);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray16);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair20 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray16, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray16);
        int int22 = org.apache.commons.math3.util.MathUtils.hash(doubleArray16);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray23 = blockRealMatrix2.operate(doubleArray16);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 30,000");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 419642177 + "'", int22 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #549
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: bipush        35
41: invokevirtual #371
44: dstore_2
45: aload_1
46: invokevirtual #550
49: dstore        4
51: aload_1
52: iconst_1
53: invokevirtual #551
56: astore        6
58: bipush        6
60: newarray       double
62: dup
63: iconst_0
64: dconst_0
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #10
71: dastore
72: dup
73: iconst_2
74: dconst_1
75: dastore
76: dup
77: iconst_3
78: dconst_0
79: dastore
80: dup
81: iconst_4
82: dconst_1
83: dastore
84: dup
85: iconst_5
86: ldc2_w        #21
89: dastore
90: astore        7
92: aload         7
94: invokestatic  #23
97: aload         7
99: invokestatic  #24
102: astore        8
104: new           #58
107: dup
108: aload         7
110: ldc2_w        #59
113: invokespecial #61
116: astore        9
118: new           #8
121: dup
122: bipush        36
124: aload         7
126: invokespecial #9
129: astore        10
131: aload         7
133: invokestatic  #344
136: istore        11
138: aload_1
139: aload         7
141: invokevirtual #552
144: astore        12
146: ldc_w         #376
149: invokestatic  #14
152: goto          157
155: astore        12
157: new           #39
160: dup
161: invokespecial #40
164: ldc           #41
166: invokevirtual #42
169: dload_2
170: invokevirtual #121
173: ldc           #44
175: invokevirtual #42
178: dconst_0
179: invokevirtual #121
182: ldc           #41
184: invokevirtual #42
187: invokevirtual #45
190: dload_2
191: dconst_0
192: dcmpl
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #47
204: new           #39
207: dup
208: invokespecial #40
211: ldc           #41
213: invokevirtual #42
216: dload         4
218: invokevirtual #121
221: ldc           #44
223: invokevirtual #42
226: dconst_0
227: invokevirtual #121
230: ldc           #41
232: invokevirtual #42
235: invokevirtual #45
238: dload         4
240: dconst_0
241: dcmpl
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #47
253: aload         6
255: invokestatic  #16
258: aload         7
260: invokestatic  #16
263: aload         7
265: invokestatic  #17
268: ldc           #26
270: invokestatic  #19
273: aload         8
275: invokestatic  #16
278: new           #39
281: dup
282: invokespecial #40
285: ldc           #41
287: invokevirtual #42
290: iload         11
292: invokevirtual #81
295: ldc           #44
297: invokevirtual #42
300: ldc_w         #347
303: invokevirtual #81
306: ldc           #41
308: invokevirtual #42
311: invokevirtual #45
314: iload         11
316: ldc_w         #347
319: if_icmpne     326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #47
330: return
Exception table:
from    to  target type
138   152   155   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 7130
End line: 7216
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        double[] doubleArray1 = new double[] { '4' };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math3.util.MathArrays.equals(doubleArray1, doubleArray2);
        double[] doubleArray10 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray10);
        org.apache.commons.math3.linear.RealMatrix realMatrix12 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray10);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray2, doubleArray10);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair16 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray10, 1.401298464324817E-45d);
        double[] doubleArray24 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.linear.RealVector realVector27 = arrayRealVector26.copy();
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray43);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector36, arrayRealVector45);
        double[] doubleArray55 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray55);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray55);
        double[] doubleArray64 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray64);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray64);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector57, arrayRealVector66);
        double[] doubleArray74 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray74);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray74);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector66, arrayRealVector76);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = arrayRealVector45.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector76);
        double[] doubleArray79 = arrayRealVector45.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector80 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector26, doubleArray79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray79);
        double[] doubleArray88 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray88);
        org.apache.commons.math3.linear.RealMatrix realMatrix90 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray88);
        org.apache.commons.math3.linear.RealMatrix realMatrix91 = org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix(doubleArray88);
        org.apache.commons.math3.linear.RealVector realVector92 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray88);
        boolean boolean93 = org.apache.commons.math3.util.MathArrays.equals(doubleArray79, doubleArray88);
        double double94 = org.apache.commons.math3.util.MathArrays.distance1(doubleArray10, doubleArray88);
        org.apache.commons.math3.linear.RealMatrix realMatrix95 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            realMatrix95.multiplyEntry(3, (-405924742), (double) 0.68214476f);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: column index (-405,924,742)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix90);
        org.junit.Assert.assertNotNull(realMatrix91);
        org.junit.Assert.assertNotNull(realVector92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #553
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: bipush        6
47: newarray       double
49: dup
50: iconst_0
51: dconst_0
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: dup
64: iconst_3
65: dconst_0
66: dastore
67: dup
68: iconst_4
69: dconst_1
70: dastore
71: dup
72: iconst_5
73: ldc2_w        #21
76: dastore
77: astore        4
79: aload         4
81: invokestatic  #23
84: aload         4
86: invokestatic  #24
89: astore        5
91: aload         4
93: invokestatic  #24
96: astore        6
98: new           #96
101: dup
102: aload_2
103: aload         4
105: invokespecial #139
108: astore        7
110: new           #58
113: dup
114: aload         4
116: ldc2_w        #108
119: invokespecial #61
122: astore        8
124: bipush        6
126: newarray       double
128: dup
129: iconst_0
130: dconst_0
131: dastore
132: dup
133: iconst_1
134: ldc2_w        #10
137: dastore
138: dup
139: iconst_2
140: dconst_1
141: dastore
142: dup
143: iconst_3
144: dconst_0
145: dastore
146: dup
147: iconst_4
148: dconst_1
149: dastore
150: dup
151: iconst_5
152: ldc2_w        #21
155: dastore
156: astore        9
158: aload         9
160: invokestatic  #23
163: new           #96
166: dup
167: aload         9
169: invokespecial #97
172: astore        10
174: aload         10
176: invokevirtual #98
179: astore        11
181: bipush        6
183: newarray       double
185: dup
186: iconst_0
187: dconst_0
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #10
194: dastore
195: dup
196: iconst_2
197: dconst_1
198: dastore
199: dup
200: iconst_3
201: dconst_0
202: dastore
203: dup
204: iconst_4
205: dconst_1
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #21
212: dastore
213: astore        12
215: aload         12
217: invokestatic  #23
220: new           #96
223: dup
224: aload         12
226: invokespecial #97
229: astore        13
231: bipush        6
233: newarray       double
235: dup
236: iconst_0
237: dconst_0
238: dastore
239: dup
240: iconst_1
241: ldc2_w        #10
244: dastore
245: dup
246: iconst_2
247: dconst_1
248: dastore
249: dup
250: iconst_3
251: dconst_0
252: dastore
253: dup
254: iconst_4
255: dconst_1
256: dastore
257: dup
258: iconst_5
259: ldc2_w        #21
262: dastore
263: astore        14
265: aload         14
267: invokestatic  #23
270: new           #96
273: dup
274: aload         14
276: invokespecial #97
279: astore        15
281: new           #96
284: dup
285: aload         13
287: aload         15
289: invokespecial #99
292: astore        16
294: bipush        6
296: newarray       double
298: dup
299: iconst_0
300: dconst_0
301: dastore
302: dup
303: iconst_1
304: ldc2_w        #10
307: dastore
308: dup
309: iconst_2
310: dconst_1
311: dastore
312: dup
313: iconst_3
314: dconst_0
315: dastore
316: dup
317: iconst_4
318: dconst_1
319: dastore
320: dup
321: iconst_5
322: ldc2_w        #21
325: dastore
326: astore        17
328: aload         17
330: invokestatic  #23
333: new           #96
336: dup
337: aload         17
339: invokespecial #97
342: astore        18
344: bipush        6
346: newarray       double
348: dup
349: iconst_0
350: dconst_0
351: dastore
352: dup
353: iconst_1
354: ldc2_w        #10
357: dastore
358: dup
359: iconst_2
360: dconst_1
361: dastore
362: dup
363: iconst_3
364: dconst_0
365: dastore
366: dup
367: iconst_4
368: dconst_1
369: dastore
370: dup
371: iconst_5
372: ldc2_w        #21
375: dastore
376: astore        19
378: aload         19
380: invokestatic  #23
383: new           #96
386: dup
387: aload         19
389: invokespecial #97
392: astore        20
394: new           #96
397: dup
398: aload         18
400: aload         20
402: invokespecial #99
405: astore        21
407: bipush        6
409: newarray       double
411: dup
412: iconst_0
413: dconst_0
414: dastore
415: dup
416: iconst_1
417: ldc2_w        #10
420: dastore
421: dup
422: iconst_2
423: dconst_1
424: dastore
425: dup
426: iconst_3
427: dconst_0
428: dastore
429: dup
430: iconst_4
431: dconst_1
432: dastore
433: dup
434: iconst_5
435: ldc2_w        #21
438: dastore
439: astore        22
441: aload         22
443: invokestatic  #23
446: new           #96
449: dup
450: aload         22
452: invokespecial #97
455: astore        23
457: new           #96
460: dup
461: aload         20
463: aload         23
465: invokespecial #99
468: astore        24
470: aload         15
472: dconst_1
473: dconst_1
474: aload         23
476: invokevirtual #100
479: astore        25
481: aload         15
483: invokevirtual #101
486: astore        26
488: new           #96
491: dup
492: aload         10
494: aload         26
496: invokespecial #102
499: astore        27
501: new           #8
504: dup
505: bipush        100
507: aload         26
509: invokespecial #9
512: astore        28
514: bipush        6
516: newarray       double
518: dup
519: iconst_0
520: dconst_0
521: dastore
522: dup
523: iconst_1
524: ldc2_w        #10
527: dastore
528: dup
529: iconst_2
530: dconst_1
531: dastore
532: dup
533: iconst_3
534: dconst_0
535: dastore
536: dup
537: iconst_4
538: dconst_1
539: dastore
540: dup
541: iconst_5
542: ldc2_w        #21
545: dastore
546: astore        29
548: aload         29
550: invokestatic  #23
553: aload         29
555: invokestatic  #24
558: astore        30
560: aload         29
562: invokestatic  #192
565: astore        31
567: aload         29
569: invokestatic  #193
572: astore        32
574: aload         26
576: aload         29
578: invokestatic  #72
581: istore        33
583: aload         4
585: aload         29
587: invokestatic  #545
590: dstore        34
592: aload         29
594: invokestatic  #24
597: astore        36
599: aload         36
601: iconst_3
602: ldc_w         #403
605: ldc2_w        #554
608: invokeinterface #556,  5
613: ldc_w         #557
616: invokestatic  #14
619: goto          624
622: astore        37
624: aload_1
625: invokestatic  #16
628: aload_1
629: invokestatic  #17
632: ldc           #82
634: invokestatic  #19
637: aload_2
638: invokestatic  #16
641: aload_2
642: invokestatic  #17
645: ldc           #83
647: invokestatic  #19
650: new           #39
653: dup
654: invokespecial #40
657: ldc           #41
659: invokevirtual #42
662: iload_3
663: invokevirtual #84
666: ldc           #44
668: invokevirtual #42
671: iconst_0
672: invokevirtual #84
675: ldc           #41
677: invokevirtual #42
680: invokevirtual #45
683: iload_3
684: ifne          691
687: iconst_1
688: goto          692
691: iconst_0
692: invokestatic  #47
695: aload         4
697: invokestatic  #16
700: aload         4
702: invokestatic  #17
705: ldc           #26
707: invokestatic  #19
710: aload         5
712: invokestatic  #16
715: aload         6
717: invokestatic  #16
720: aload         9
722: invokestatic  #16
725: aload         9
727: invokestatic  #17
730: ldc           #26
732: invokestatic  #19
735: aload         11
737: invokestatic  #16
740: aload         12
742: invokestatic  #16
745: aload         12
747: invokestatic  #17
750: ldc           #26
752: invokestatic  #19
755: aload         14
757: invokestatic  #16
760: aload         14
762: invokestatic  #17
765: ldc           #26
767: invokestatic  #19
770: aload         17
772: invokestatic  #16
775: aload         17
777: invokestatic  #17
780: ldc           #26
782: invokestatic  #19
785: aload         19
787: invokestatic  #16
790: aload         19
792: invokestatic  #17
795: ldc           #26
797: invokestatic  #19
800: aload         22
802: invokestatic  #16
805: aload         22
807: invokestatic  #17
810: ldc           #26
812: invokestatic  #19
815: aload         25
817: invokestatic  #16
820: aload         26
822: invokestatic  #16
825: aload         26
827: invokestatic  #17
830: ldc           #105
832: invokestatic  #19
835: aload         29
837: invokestatic  #16
840: aload         29
842: invokestatic  #17
845: ldc           #26
847: invokestatic  #19
850: aload         30
852: invokestatic  #16
855: aload         31
857: invokestatic  #16
860: aload         32
862: invokestatic  #16
865: new           #39
868: dup
869: invokespecial #40
872: ldc           #41
874: invokevirtual #42
877: iload         33
879: invokevirtual #84
882: ldc           #44
884: invokevirtual #42
887: iconst_0
888: invokevirtual #84
891: ldc           #41
893: invokevirtual #42
896: invokevirtual #45
899: iload         33
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #47
912: new           #39
915: dup
916: invokespecial #40
919: ldc           #41
921: invokevirtual #42
924: dload         34
926: invokevirtual #121
929: ldc           #44
931: invokevirtual #42
934: dconst_0
935: invokevirtual #121
938: ldc           #41
940: invokevirtual #42
943: invokevirtual #45
946: dload         34
948: dconst_0
949: dcmpl
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #47
961: aload         36
963: invokestatic  #16
966: return
Exception table:
from    to  target type
599   619   622   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 7219
End line: 7244
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer25.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = cMAESOptimizer25.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #558
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #130
155: astore        11
157: aload         9
159: invokevirtual #53
162: astore        12
164: aload_1
165: invokestatic  #16
168: aload_1
169: invokestatic  #17
172: ldc           #26
174: invokestatic  #19
177: aload_2
178: invokestatic  #16
181: aload         4
183: invokestatic  #16
186: aload         4
188: invokestatic  #17
191: ldc           #26
193: invokestatic  #19
196: new           #39
199: dup
200: invokespecial #40
203: ldc           #41
205: invokevirtual #42
208: dload         6
210: invokevirtual #121
213: ldc           #44
215: invokevirtual #42
218: ldc2_w        #282
221: invokevirtual #121
224: ldc           #41
226: invokevirtual #42
229: invokevirtual #45
232: dload         6
234: ldc2_w        #282
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #47
249: aload         10
251: invokestatic  #155
254: aload         11
256: invokestatic  #16
259: aload         12
261: invokestatic  #155
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 7247
End line: 7291
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray32, 5);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister43 = new org.apache.commons.math3.random.MersenneTwister();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister45 = new org.apache.commons.math3.random.MersenneTwister(1);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100, (byte) 1 };
        mersenneTwister45.nextBytes(byteArray49);
        mersenneTwister43.nextBytes(byteArray49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-405924742), doubleArray37, (int) (short) 1, 5.916079783099616d, true, 1356265037, 5, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister43, false, pointValuePairConvergenceChecker53);
        int int56 = mersenneTwister43.nextInt(31);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray49);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-115, 35, -93]");
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 23 + "'", int56 == 23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #559
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: aload         10
219: iconst_5
220: invokestatic  #423
223: astore        13
225: new           #32
228: dup
229: invokespecial #560
232: astore        14
234: new           #32
237: dup
238: iconst_1
239: invokespecial #33
242: astore        15
244: iconst_3
245: newarray       byte
247: dup
248: iconst_0
249: iconst_m1
250: bastore
251: dup
252: iconst_1
253: bipush        100
255: bastore
256: dup
257: iconst_2
258: iconst_1
259: bastore
260: astore        16
262: aload         15
264: aload         16
266: invokevirtual #428
269: aload         14
271: aload         16
273: invokevirtual #428
276: aconst_null
277: astore        17
279: new           #8
282: dup
283: ldc_w         #403
286: aload         13
288: iconst_1
289: ldc2_w        #561
292: iconst_1
293: ldc_w         #563
296: iconst_5
297: aload         14
299: iconst_0
300: aload         17
302: invokespecial #36
305: astore        18
307: aload         14
309: bipush        31
311: invokevirtual #225
314: istore        19
316: aload_1
317: invokestatic  #16
320: aload_1
321: invokestatic  #17
324: ldc           #26
326: invokestatic  #19
329: aload_3
330: invokestatic  #16
333: aload         4
335: invokestatic  #16
338: aload         5
340: invokestatic  #16
343: aload         5
345: invokestatic  #17
348: ldc           #26
350: invokestatic  #19
353: aload         7
355: invokestatic  #16
358: aload         9
360: invokestatic  #16
363: aload         10
365: invokestatic  #16
368: aload         10
370: invokestatic  #17
373: ldc           #26
375: invokestatic  #19
378: aload         11
380: invokestatic  #16
383: new           #39
386: dup
387: invokespecial #40
390: ldc           #41
392: invokevirtual #42
395: iload         12
397: invokevirtual #84
400: ldc           #44
402: invokevirtual #42
405: iconst_0
406: invokevirtual #84
409: ldc           #41
411: invokevirtual #42
414: invokevirtual #45
417: iload         12
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #47
430: aload         13
432: invokestatic  #16
435: aload         13
437: invokestatic  #17
440: ldc_w         #425
443: invokestatic  #19
446: aload         16
448: invokestatic  #16
451: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 7294
End line: 7351
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector(realVector11);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector21.copy();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector21.mapDivide((double) (-1.0f));
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray31);
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(realVector35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = arrayRealVector21.add(realVector35);
        double double38 = arrayRealVector12.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector21);
        double[] doubleArray41 = new double[] { '4' };
        double[] doubleArray42 = new double[] {};
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray42);
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.RealMatrix realMatrix52 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray41, doubleArray50);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray41, doubleArray60);
        arrayRealVector12.setSubVector(0, doubleArray60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(32, doubleArray60);
        org.apache.commons.math3.optimization.GoalType goalType65 = cMAESOptimizer64.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10102.0d + "'", double38 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(goalType65);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #564
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: iconst_1
242: newarray       double
244: dup
245: iconst_0
246: ldc2_w        #70
249: dastore
250: astore        16
252: iconst_0
253: newarray       double
255: astore        17
257: aload         16
259: aload         17
261: invokestatic  #72
264: istore        18
266: bipush        6
268: newarray       double
270: dup
271: iconst_0
272: dconst_0
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #10
279: dastore
280: dup
281: iconst_2
282: dconst_1
283: dastore
284: dup
285: iconst_3
286: dconst_0
287: dastore
288: dup
289: iconst_4
290: dconst_1
291: dastore
292: dup
293: iconst_5
294: ldc2_w        #21
297: dastore
298: astore        19
300: aload         19
302: invokestatic  #23
305: aload         19
307: invokestatic  #24
310: astore        20
312: new           #96
315: dup
316: aload         16
318: aload         19
320: invokespecial #139
323: astore        21
325: bipush        6
327: newarray       double
329: dup
330: iconst_0
331: dconst_0
332: dastore
333: dup
334: iconst_1
335: ldc2_w        #10
338: dastore
339: dup
340: iconst_2
341: dconst_1
342: dastore
343: dup
344: iconst_3
345: dconst_0
346: dastore
347: dup
348: iconst_4
349: dconst_1
350: dastore
351: dup
352: iconst_5
353: ldc2_w        #21
356: dastore
357: astore        22
359: aload         22
361: invokestatic  #23
364: aload         16
366: aload         22
368: invokestatic  #140
371: istore        23
373: aload         4
375: iconst_0
376: aload         22
378: invokevirtual #393
381: new           #8
384: dup
385: bipush        32
387: aload         22
389: invokespecial #9
392: astore        24
394: aload         24
396: invokevirtual #149
399: astore        25
401: aload_1
402: invokestatic  #16
405: aload_1
406: invokestatic  #17
409: ldc           #26
411: invokestatic  #19
414: aload_3
415: invokestatic  #16
418: aload         5
420: invokestatic  #16
423: aload         5
425: invokestatic  #17
428: ldc           #26
430: invokestatic  #19
433: aload         7
435: invokestatic  #16
438: aload         8
440: invokestatic  #16
443: aload         9
445: invokestatic  #16
448: aload         9
450: invokestatic  #17
453: ldc           #26
455: invokestatic  #19
458: aload         11
460: invokestatic  #16
463: aload         13
465: invokestatic  #16
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: dload         14
482: invokevirtual #121
485: ldc           #44
487: invokevirtual #42
490: ldc2_w        #298
493: invokevirtual #121
496: ldc           #41
498: invokevirtual #42
501: invokevirtual #45
504: dload         14
506: ldc2_w        #298
509: dcmpl
510: ifne          517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #47
521: aload         16
523: invokestatic  #16
526: aload         16
528: invokestatic  #17
531: ldc           #82
533: invokestatic  #19
536: aload         17
538: invokestatic  #16
541: aload         17
543: invokestatic  #17
546: ldc           #83
548: invokestatic  #19
551: new           #39
554: dup
555: invokespecial #40
558: ldc           #41
560: invokevirtual #42
563: iload         18
565: invokevirtual #84
568: ldc           #44
570: invokevirtual #42
573: iconst_0
574: invokevirtual #84
577: ldc           #41
579: invokevirtual #42
582: invokevirtual #45
585: iload         18
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #47
598: aload         19
600: invokestatic  #16
603: aload         19
605: invokestatic  #17
608: ldc           #26
610: invokestatic  #19
613: aload         20
615: invokestatic  #16
618: aload         22
620: invokestatic  #16
623: aload         22
625: invokestatic  #17
628: ldc           #26
630: invokestatic  #19
633: new           #39
636: dup
637: invokespecial #40
640: ldc           #41
642: invokevirtual #42
645: iload         23
647: invokevirtual #84
650: ldc           #44
652: invokevirtual #42
655: iconst_0
656: invokevirtual #84
659: ldc           #41
661: invokevirtual #42
664: invokevirtual #45
667: iload         23
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #47
680: aload         25
682: invokestatic  #155
685: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 7354
End line: 7369
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        int int5 = cMAESOptimizer2.getEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleList7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aload_2
62: invokevirtual #130
65: astore        7
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_3
80: invokevirtual #81
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #81
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_3
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #47
112: aload         4
114: invokestatic  #16
117: new           #39
120: dup
121: invokespecial #40
124: ldc           #41
126: invokevirtual #42
129: iload         5
131: invokevirtual #81
134: ldc           #44
136: invokevirtual #42
139: iconst_0
140: invokevirtual #81
143: ldc           #41
145: invokevirtual #42
148: invokevirtual #45
151: iload         5
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #47
164: new           #39
167: dup
168: invokespecial #40
171: ldc           #41
173: invokevirtual #42
176: iload         6
178: invokevirtual #81
181: ldc           #44
183: invokevirtual #42
186: iconst_0
187: invokevirtual #81
190: ldc           #41
192: invokevirtual #42
195: invokevirtual #45
198: iload         6
200: ifne          207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #47
211: aload         7
213: invokestatic  #16
216: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 7372
End line: 7416
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        double[] doubleArray2 = new double[] { '4' };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math3.util.MathArrays.equals(doubleArray2, doubleArray3);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection8 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException10 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection8, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection11 = nonMonotonicSequenceException10.getDirection();
        boolean boolean13 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray2, orderDirection11, true);
        double[] doubleArray15 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray2, 18);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double23 = mersenneTwister22.nextGaussian();
        mersenneTwister22.setSeed(0L);
        mersenneTwister22.clear();
        mersenneTwister22.clear();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister29 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double30 = mersenneTwister29.nextGaussian();
        int int32 = mersenneTwister29.nextInt((int) (short) 100);
        mersenneTwister29.setSeed(0);
        mersenneTwister29.setSeed(100L);
        int[] intArray39 = new int[] { 6, 31 };
        mersenneTwister29.setSeed(intArray39);
        mersenneTwister22.setSeed(intArray39);
        mersenneTwister22.setSeed(0);
        mersenneTwister22.setSeed((long) (-1016));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(32, doubleArray15, (int) '4', 1.762747174039086d, true, 18, (-1071382528), (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, false);
        int int49 = mersenneTwister22.nextInt(1510627198);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + orderDirection8 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection8.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection11 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection11.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.7023867716137234d) + "'", double23 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-0.7023867716137234d) + "'", double30 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 31 + "'", int32 == 31);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1503821746 + "'", int49 == 1503821746);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: getstatic     #73
48: astore        4
50: new           #67
53: dup
54: ldc2_w        #74
57: invokestatic  #76
60: iconst_1
61: invokestatic  #77
64: bipush        100
66: aload         4
68: iconst_1
69: invokespecial #78
72: astore        5
74: aload         5
76: invokevirtual #79
79: astore        6
81: aload_1
82: aload         6
84: iconst_1
85: invokestatic  #157
88: istore        7
90: aload_1
91: bipush        18
93: invokestatic  #423
96: astore        8
98: new           #32
101: dup
102: iconst_1
103: invokespecial #33
106: astore        9
108: aload         9
110: invokevirtual #168
113: dstore        10
115: aload         9
117: lconst_0
118: invokevirtual #278
121: aload         9
123: invokevirtual #467
126: aload         9
128: invokevirtual #467
131: new           #32
134: dup
135: iconst_1
136: invokespecial #33
139: astore        12
141: aload         12
143: invokevirtual #168
146: dstore        13
148: aload         12
150: bipush        100
152: invokevirtual #225
155: istore        15
157: aload         12
159: iconst_0
160: invokevirtual #169
163: aload         12
165: ldc2_w        #307
168: invokevirtual #278
171: iconst_2
172: newarray       int
174: dup
175: iconst_0
176: bipush        6
178: iastore
179: dup
180: iconst_1
181: bipush        31
183: iastore
184: astore        16
186: aload         12
188: aload         16
190: invokevirtual #228
193: aload         9
195: aload         16
197: invokevirtual #228
200: aload         9
202: iconst_0
203: invokevirtual #169
206: aload         9
208: ldc2_w        #567
211: invokevirtual #278
214: new           #8
217: dup
218: bipush        32
220: aload         8
222: bipush        52
224: ldc2_w        #569
227: iconst_1
228: bipush        18
230: ldc_w         #571
233: aload         9
235: iconst_0
236: invokespecial #172
239: astore        17
241: aload         9
243: ldc_w         #572
246: invokevirtual #225
249: istore        18
251: aload_1
252: invokestatic  #16
255: aload_1
256: invokestatic  #17
259: ldc           #82
261: invokestatic  #19
264: aload_2
265: invokestatic  #16
268: aload_2
269: invokestatic  #17
272: ldc           #83
274: invokestatic  #19
277: new           #39
280: dup
281: invokespecial #40
284: ldc           #41
286: invokevirtual #42
289: iload_3
290: invokevirtual #84
293: ldc           #44
295: invokevirtual #42
298: iconst_0
299: invokevirtual #84
302: ldc           #41
304: invokevirtual #42
307: invokevirtual #45
310: iload_3
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #47
322: new           #39
325: dup
326: invokespecial #40
329: ldc           #41
331: invokevirtual #42
334: aload         4
336: invokevirtual #43
339: ldc           #44
341: invokevirtual #42
344: getstatic     #73
347: invokevirtual #43
350: ldc           #41
352: invokevirtual #42
355: invokevirtual #45
358: aload         4
360: getstatic     #73
363: invokevirtual #85
366: invokestatic  #47
369: new           #39
372: dup
373: invokespecial #40
376: ldc           #41
378: invokevirtual #42
381: aload         6
383: invokevirtual #43
386: ldc           #44
388: invokevirtual #42
391: getstatic     #73
394: invokevirtual #43
397: ldc           #41
399: invokevirtual #42
402: invokevirtual #45
405: aload         6
407: getstatic     #73
410: invokevirtual #85
413: invokestatic  #47
416: new           #39
419: dup
420: invokespecial #40
423: ldc           #41
425: invokevirtual #42
428: iload         7
430: invokevirtual #84
433: ldc           #44
435: invokevirtual #42
438: iconst_1
439: invokevirtual #84
442: ldc           #41
444: invokevirtual #42
447: invokevirtual #45
450: iload         7
452: iconst_1
453: if_icmpne     460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #47
464: aload         8
466: invokestatic  #16
469: aload         8
471: invokestatic  #17
474: ldc_w         #426
477: invokestatic  #19
480: new           #39
483: dup
484: invokespecial #40
487: ldc           #41
489: invokevirtual #42
492: dload         10
494: invokevirtual #121
497: ldc           #44
499: invokevirtual #42
502: ldc2_w        #74
505: invokevirtual #121
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: dload         10
518: ldc2_w        #74
521: dcmpl
522: ifne          529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #47
533: new           #39
536: dup
537: invokespecial #40
540: ldc           #41
542: invokevirtual #42
545: dload         13
547: invokevirtual #121
550: ldc           #44
552: invokevirtual #42
555: ldc2_w        #74
558: invokevirtual #121
561: ldc           #41
563: invokevirtual #42
566: invokevirtual #45
569: dload         13
571: ldc2_w        #74
574: dcmpl
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #47
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: iload         15
600: invokevirtual #81
603: ldc           #44
605: invokevirtual #42
608: bipush        31
610: invokevirtual #81
613: ldc           #41
615: invokevirtual #42
618: invokevirtual #45
621: iload         15
623: bipush        31
625: if_icmpne     632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #47
636: aload         16
638: invokestatic  #16
641: aload         16
643: invokestatic  #117
646: ldc_w         #315
649: invokestatic  #19
652: new           #39
655: dup
656: invokespecial #40
659: ldc           #41
661: invokevirtual #42
664: iload         18
666: invokevirtual #81
669: ldc           #44
671: invokevirtual #42
674: ldc_w         #573
677: invokevirtual #81
680: ldc           #41
682: invokevirtual #42
685: invokevirtual #45
688: iload         18
690: ldc_w         #573
693: if_icmpne     700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #47
704: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 7419
End line: 7441
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        int int24 = cMAESOptimizer18.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #69
140: istore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         8
226: invokevirtual #81
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #81
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         8
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #47
259: aload         9
261: invokestatic  #16
264: new           #39
267: dup
268: invokespecial #40
271: ldc           #41
273: invokevirtual #42
276: iload         10
278: invokevirtual #81
281: ldc           #44
283: invokevirtual #42
286: iconst_0
287: invokevirtual #81
290: ldc           #41
292: invokevirtual #42
295: invokevirtual #45
298: iload         10
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #47
311: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 7444
End line: 7506
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(realVector10);
        double[] doubleArray18 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector20.copy();
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector20.mapDivide((double) (-1.0f));
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(realVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = arrayRealVector20.add(realVector34);
        double double37 = arrayRealVector11.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        double[] doubleArray44 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray44);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector46, arrayRealVector55);
        double[] doubleArray63 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector55, arrayRealVector65);
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector11.subtract((org.apache.commons.math3.linear.RealVector) arrayRealVector55);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray75);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair79 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray75, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray75);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, doubleArray75);
        double double83 = arrayRealVector81.getEntry(4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10102.0d + "'", double37 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #575
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #10
254: dastore
255: dup
256: iconst_2
257: dconst_1
258: dastore
259: dup
260: iconst_3
261: dconst_0
262: dastore
263: dup
264: iconst_4
265: dconst_1
266: dastore
267: dup
268: iconst_5
269: ldc2_w        #21
272: dastore
273: astore        16
275: aload         16
277: invokestatic  #23
280: new           #96
283: dup
284: aload         16
286: invokespecial #97
289: astore        17
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: ldc2_w        #10
304: dastore
305: dup
306: iconst_2
307: dconst_1
308: dastore
309: dup
310: iconst_3
311: dconst_0
312: dastore
313: dup
314: iconst_4
315: dconst_1
316: dastore
317: dup
318: iconst_5
319: ldc2_w        #21
322: dastore
323: astore        18
325: aload         18
327: invokestatic  #23
330: new           #96
333: dup
334: aload         18
336: invokespecial #97
339: astore        19
341: new           #96
344: dup
345: aload         17
347: aload         19
349: invokespecial #99
352: astore        20
354: bipush        6
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #10
367: dastore
368: dup
369: iconst_2
370: dconst_1
371: dastore
372: dup
373: iconst_3
374: dconst_0
375: dastore
376: dup
377: iconst_4
378: dconst_1
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #21
385: dastore
386: astore        21
388: aload         21
390: invokestatic  #23
393: new           #96
396: dup
397: aload         21
399: invokespecial #97
402: astore        22
404: new           #96
407: dup
408: aload         19
410: aload         22
412: invokespecial #99
415: astore        23
417: aload         4
419: aload         19
421: invokevirtual #445
424: astore        24
426: bipush        6
428: newarray       double
430: dup
431: iconst_0
432: dconst_0
433: dastore
434: dup
435: iconst_1
436: ldc2_w        #10
439: dastore
440: dup
441: iconst_2
442: dconst_1
443: dastore
444: dup
445: iconst_3
446: dconst_0
447: dastore
448: dup
449: iconst_4
450: dconst_1
451: dastore
452: dup
453: iconst_5
454: ldc2_w        #21
457: dastore
458: astore        25
460: aload         25
462: invokestatic  #23
465: aload         25
467: invokestatic  #24
470: astore        26
472: new           #58
475: dup
476: aload         25
478: ldc2_w        #59
481: invokespecial #61
484: astore        27
486: new           #8
489: dup
490: bipush        36
492: aload         25
494: invokespecial #9
497: astore        28
499: new           #96
502: dup
503: aload         4
505: aload         25
507: invokespecial #102
510: astore        29
512: aload         29
514: iconst_4
515: invokevirtual #576
518: dstore        30
520: aload_1
521: invokestatic  #16
524: aload_1
525: invokestatic  #17
528: ldc           #26
530: invokestatic  #19
533: aload_3
534: invokestatic  #16
537: aload         5
539: invokestatic  #16
542: aload         5
544: invokestatic  #17
547: ldc           #26
549: invokestatic  #19
552: aload         7
554: invokestatic  #16
557: aload         8
559: invokestatic  #16
562: aload         9
564: invokestatic  #16
567: aload         9
569: invokestatic  #17
572: ldc           #26
574: invokestatic  #19
577: aload         11
579: invokestatic  #16
582: aload         13
584: invokestatic  #16
587: new           #39
590: dup
591: invokespecial #40
594: ldc           #41
596: invokevirtual #42
599: dload         14
601: invokevirtual #121
604: ldc           #44
606: invokevirtual #42
609: ldc2_w        #298
612: invokevirtual #121
615: ldc           #41
617: invokevirtual #42
620: invokevirtual #45
623: dload         14
625: ldc2_w        #298
628: dcmpl
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #47
640: aload         16
642: invokestatic  #16
645: aload         16
647: invokestatic  #17
650: ldc           #26
652: invokestatic  #19
655: aload         18
657: invokestatic  #16
660: aload         18
662: invokestatic  #17
665: ldc           #26
667: invokestatic  #19
670: aload         21
672: invokestatic  #16
675: aload         21
677: invokestatic  #17
680: ldc           #26
682: invokestatic  #19
685: aload         24
687: invokestatic  #16
690: aload         25
692: invokestatic  #16
695: aload         25
697: invokestatic  #17
700: ldc           #26
702: invokestatic  #19
705: aload         26
707: invokestatic  #16
710: new           #39
713: dup
714: invokespecial #40
717: ldc           #41
719: invokevirtual #42
722: dload         30
724: invokevirtual #121
727: ldc           #44
729: invokevirtual #42
732: dconst_1
733: invokevirtual #121
736: ldc           #41
738: invokevirtual #42
741: invokevirtual #45
744: dload         30
746: dconst_1
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #47
759: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 7509
End line: 7529
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer2.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #53
59: astore        6
61: aload_2
62: invokevirtual #56
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: aload         5
129: invokestatic  #16
132: aload         6
134: invokestatic  #16
137: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 7532
End line: 7592
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        int[] intArray4 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister5 = new org.apache.commons.math3.random.MersenneTwister(intArray4);
        int[] intArray7 = org.apache.commons.math3.util.MathArrays.copyOf(intArray4, 3);
        int[] intArray12 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister13 = new org.apache.commons.math3.random.MersenneTwister(intArray12);
        int[] intArray18 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(intArray18);
        int[] intArray21 = org.apache.commons.math3.util.MathArrays.copyOf(intArray18, 3);
        int int22 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray12, intArray18);
        int[] intArray27 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister28 = new org.apache.commons.math3.random.MersenneTwister(intArray27);
        int[] intArray29 = org.apache.commons.math3.util.MathArrays.copyOf(intArray27);
        int int30 = org.apache.commons.math3.util.MathArrays.distance1(intArray12, intArray27);
        int int31 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray27);
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister47 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker49 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray39, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister47, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker49);
        int[] intArray55 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister56 = new org.apache.commons.math3.random.MersenneTwister(intArray55);
        int[] intArray57 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55);
        int[] intArray62 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister63 = new org.apache.commons.math3.random.MersenneTwister(intArray62);
        int int64 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray57, intArray62);
        mersenneTwister47.setSeed(intArray57);
        int int66 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray7, intArray57);
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray57);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 0, 100]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 0, 100, 52]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #578
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       int
28: dup
29: iconst_0
30: bipush        100
32: iastore
33: dup
34: iconst_1
35: iconst_0
36: iastore
37: dup
38: iconst_2
39: bipush        100
41: iastore
42: dup
43: iconst_3
44: bipush        52
46: iastore
47: astore_1
48: new           #32
51: dup
52: aload_1
53: invokespecial #112
56: astore_2
57: aload_1
58: iconst_3
59: invokestatic  #310
62: astore_3
63: iconst_4
64: newarray       int
66: dup
67: iconst_0
68: bipush        100
70: iastore
71: dup
72: iconst_1
73: iconst_0
74: iastore
75: dup
76: iconst_2
77: bipush        100
79: iastore
80: dup
81: iconst_3
82: bipush        52
84: iastore
85: astore        4
87: new           #32
90: dup
91: aload         4
93: invokespecial #112
96: astore        5
98: iconst_4
99: newarray       int
101: dup
102: iconst_0
103: bipush        100
105: iastore
106: dup
107: iconst_1
108: iconst_0
109: iastore
110: dup
111: iconst_2
112: bipush        100
114: iastore
115: dup
116: iconst_3
117: bipush        52
119: iastore
120: astore        6
122: new           #32
125: dup
126: aload         6
128: invokespecial #112
131: astore        7
133: aload         6
135: iconst_3
136: invokestatic  #310
139: astore        8
141: aload         4
143: aload         6
145: invokestatic  #306
148: istore        9
150: iconst_4
151: newarray       int
153: dup
154: iconst_0
155: bipush        100
157: iastore
158: dup
159: iconst_1
160: iconst_0
161: iastore
162: dup
163: iconst_2
164: bipush        100
166: iastore
167: dup
168: iconst_3
169: bipush        52
171: iastore
172: astore        10
174: new           #32
177: dup
178: aload         10
180: invokespecial #112
183: astore        11
185: aload         10
187: invokestatic  #226
190: astore        12
192: aload         4
194: aload         10
196: invokestatic  #429
199: istore        13
201: aload_3
202: aload         10
204: invokestatic  #306
207: istore        14
209: bipush        6
211: newarray       double
213: dup
214: iconst_0
215: dconst_0
216: dastore
217: dup
218: iconst_1
219: ldc2_w        #10
222: dastore
223: dup
224: iconst_2
225: dconst_1
226: dastore
227: dup
228: iconst_3
229: dconst_0
230: dastore
231: dup
232: iconst_4
233: dconst_1
234: dastore
235: dup
236: iconst_5
237: ldc2_w        #21
240: dastore
241: astore        15
243: aload         15
245: invokestatic  #23
248: new           #32
251: dup
252: iconst_1
253: invokespecial #33
256: astore        16
258: new           #34
261: dup
262: invokespecial #35
265: astore        17
267: new           #8
270: dup
271: iconst_5
272: aload         15
274: bipush        100
276: dconst_0
277: iconst_0
278: iconst_0
279: bipush        100
281: aload         16
283: iconst_1
284: aload         17
286: invokespecial #36
289: astore        18
291: iconst_4
292: newarray       int
294: dup
295: iconst_0
296: bipush        100
298: iastore
299: dup
300: iconst_1
301: iconst_0
302: iastore
303: dup
304: iconst_2
305: bipush        100
307: iastore
308: dup
309: iconst_3
310: bipush        52
312: iastore
313: astore        19
315: new           #32
318: dup
319: aload         19
321: invokespecial #112
324: astore        20
326: aload         19
328: invokestatic  #226
331: astore        21
333: iconst_4
334: newarray       int
336: dup
337: iconst_0
338: bipush        100
340: iastore
341: dup
342: iconst_1
343: iconst_0
344: iastore
345: dup
346: iconst_2
347: bipush        100
349: iastore
350: dup
351: iconst_3
352: bipush        52
354: iastore
355: astore        22
357: new           #32
360: dup
361: aload         22
363: invokespecial #112
366: astore        23
368: aload         21
370: aload         22
372: invokestatic  #306
375: istore        24
377: aload         16
379: aload         21
381: invokevirtual #228
384: aload_3
385: aload         21
387: invokestatic  #306
390: istore        25
392: aload         21
394: invokestatic  #226
397: astore        26
399: aload_1
400: invokestatic  #16
403: aload_1
404: invokestatic  #117
407: ldc           #118
409: invokestatic  #19
412: aload_3
413: invokestatic  #16
416: aload_3
417: invokestatic  #117
420: ldc_w         #432
423: invokestatic  #19
426: aload         4
428: invokestatic  #16
431: aload         4
433: invokestatic  #117
436: ldc           #118
438: invokestatic  #19
441: aload         6
443: invokestatic  #16
446: aload         6
448: invokestatic  #117
451: ldc           #118
453: invokestatic  #19
456: aload         8
458: invokestatic  #16
461: aload         8
463: invokestatic  #117
466: ldc_w         #432
469: invokestatic  #19
472: new           #39
475: dup
476: invokespecial #40
479: ldc           #41
481: invokevirtual #42
484: iload         9
486: invokevirtual #81
489: ldc           #44
491: invokevirtual #42
494: iconst_0
495: invokevirtual #81
498: ldc           #41
500: invokevirtual #42
503: invokevirtual #45
506: iload         9
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #47
519: aload         10
521: invokestatic  #16
524: aload         10
526: invokestatic  #117
529: ldc           #118
531: invokestatic  #19
534: aload         12
536: invokestatic  #16
539: aload         12
541: invokestatic  #117
544: ldc           #118
546: invokestatic  #19
549: new           #39
552: dup
553: invokespecial #40
556: ldc           #41
558: invokevirtual #42
561: iload         13
563: invokevirtual #81
566: ldc           #44
568: invokevirtual #42
571: iconst_0
572: invokevirtual #81
575: ldc           #41
577: invokevirtual #42
580: invokevirtual #45
583: iload         13
585: ifne          592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #47
596: new           #39
599: dup
600: invokespecial #40
603: ldc           #41
605: invokevirtual #42
608: iload         14
610: invokevirtual #81
613: ldc           #44
615: invokevirtual #42
618: iconst_0
619: invokevirtual #81
622: ldc           #41
624: invokevirtual #42
627: invokevirtual #45
630: iload         14
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #47
643: aload         15
645: invokestatic  #16
648: aload         15
650: invokestatic  #17
653: ldc           #26
655: invokestatic  #19
658: aload         19
660: invokestatic  #16
663: aload         19
665: invokestatic  #117
668: ldc           #118
670: invokestatic  #19
673: aload         21
675: invokestatic  #16
678: aload         21
680: invokestatic  #117
683: ldc           #118
685: invokestatic  #19
688: aload         22
690: invokestatic  #16
693: aload         22
695: invokestatic  #117
698: ldc           #118
700: invokestatic  #19
703: new           #39
706: dup
707: invokespecial #40
710: ldc           #41
712: invokevirtual #42
715: iload         24
717: invokevirtual #81
720: ldc           #44
722: invokevirtual #42
725: iconst_0
726: invokevirtual #81
729: ldc           #41
731: invokevirtual #42
734: invokevirtual #45
737: iload         24
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #47
750: new           #39
753: dup
754: invokespecial #40
757: ldc           #41
759: invokevirtual #42
762: iload         25
764: invokevirtual #81
767: ldc           #44
769: invokevirtual #42
772: iconst_0
773: invokevirtual #81
776: ldc           #41
778: invokevirtual #42
781: invokevirtual #45
784: iload         25
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #47
797: aload         26
799: invokestatic  #16
802: aload         26
804: invokestatic  #117
807: ldc           #118
809: invokestatic  #19
812: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 7595
End line: 7633
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 1 };
        mersenneTwister21.nextBytes(byteArray46);
        double double48 = mersenneTwister21.nextDouble();
        boolean boolean49 = mersenneTwister21.nextBoolean();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-91, -41]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.03699670215747686d + "'", double48 == 0.03699670215747686d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: iconst_2
230: newarray       byte
232: dup
233: iconst_0
234: iconst_0
235: bastore
236: dup
237: iconst_1
238: iconst_1
239: bastore
240: astore        14
242: aload         7
244: aload         14
246: invokevirtual #428
249: aload         7
251: invokevirtual #275
254: dstore        15
256: aload         7
258: invokevirtual #293
261: istore        17
263: aload_1
264: invokestatic  #16
267: aload_1
268: invokestatic  #17
271: ldc           #26
273: invokestatic  #19
276: aload_2
277: invokestatic  #16
280: aload         4
282: invokestatic  #16
285: aload         4
287: invokestatic  #17
290: ldc           #26
292: invokestatic  #19
295: aload         5
297: invokestatic  #16
300: aload         5
302: invokestatic  #117
305: ldc           #229
307: invokestatic  #19
310: aload         6
312: invokestatic  #16
315: aload         6
317: invokestatic  #117
320: ldc           #229
322: invokestatic  #19
325: aload         8
327: invokestatic  #16
330: aload         8
332: invokestatic  #17
335: ldc           #26
337: invokestatic  #19
340: aload         12
342: invokestatic  #16
345: aload         14
347: invokestatic  #16
350: aload         14
352: invokestatic  #430
355: ldc_w         #519
358: invokestatic  #19
361: new           #39
364: dup
365: invokespecial #40
368: ldc           #41
370: invokevirtual #42
373: dload         15
375: invokevirtual #121
378: ldc           #44
380: invokevirtual #42
383: ldc2_w        #520
386: invokevirtual #121
389: ldc           #41
391: invokevirtual #42
394: invokevirtual #45
397: dload         15
399: ldc2_w        #520
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #47
414: new           #39
417: dup
418: invokespecial #40
421: ldc           #41
423: invokevirtual #42
426: iload         17
428: invokevirtual #84
431: ldc           #44
433: invokevirtual #42
436: iconst_1
437: invokevirtual #84
440: ldc           #41
442: invokevirtual #42
445: invokevirtual #45
448: iload         17
450: iconst_1
451: if_icmpne     458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #47
462: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 7636
End line: 7660
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray6, 2.718281828459045d);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker29 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray19, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister27, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker29);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition32 = new org.apache.commons.math3.linear.EigenDecomposition(doubleArray6, doubleArray19, (double) (-18));
        org.apache.commons.math3.linear.RealMatrix realMatrix33 = eigenDecomposition32.getD();
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = eigenDecomposition32.getVT();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix33);
        org.junit.Assert.assertNotNull(realMatrix34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #580
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: aload_1
68: invokestatic  #24
71: astore_3
72: new           #58
75: dup
76: aload_1
77: ldc2_w        #581
80: invokespecial #61
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #32
127: dup
128: iconst_1
129: invokespecial #33
132: astore        6
134: new           #34
137: dup
138: invokespecial #35
141: astore        7
143: new           #8
146: dup
147: iconst_5
148: aload         5
150: bipush        100
152: dconst_0
153: iconst_0
154: iconst_0
155: bipush        100
157: aload         6
159: iconst_1
160: aload         7
162: invokespecial #36
165: astore        8
167: new           #497
170: dup
171: aload_1
172: aload         5
174: ldc2_w        #583
177: invokespecial #585
180: astore        9
182: aload         9
184: invokevirtual #586
187: astore        10
189: aload         9
191: invokevirtual #587
194: astore        11
196: aload_1
197: invokestatic  #16
200: aload_1
201: invokestatic  #17
204: ldc           #26
206: invokestatic  #19
209: aload_2
210: invokestatic  #16
213: aload_3
214: invokestatic  #16
217: aload         5
219: invokestatic  #16
222: aload         5
224: invokestatic  #17
227: ldc           #26
229: invokestatic  #19
232: aload         10
234: invokestatic  #16
237: aload         11
239: invokestatic  #16
242: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 7663
End line: 7694
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction24 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException25 = null;
        org.apache.commons.math3.optimization.GoalType goalType26 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair27 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException25, goalType26);
        double[] doubleArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair29 = cMAESOptimizer18.optimizeInternal(1291558011, multivariateFunction24, goalType26, doubleArray28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + goalType26 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType26.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #588
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aconst_null
129: astore        9
131: aconst_null
132: astore        10
134: getstatic     #37
137: astore        11
139: new           #107
142: dup
143: aload         10
145: aload         11
147: invokespecial #110
150: astore        12
152: aconst_null
153: astore        13
155: aload         4
157: ldc_w         #589
160: aload         9
162: aload         11
164: aload         13
166: invokevirtual #126
169: astore        14
171: ldc           #13
173: invokestatic  #14
176: goto          181
179: astore        14
181: aload_1
182: invokestatic  #16
185: aload_1
186: invokestatic  #17
189: ldc           #26
191: invokestatic  #19
194: aload         5
196: invokestatic  #16
199: new           #39
202: dup
203: invokespecial #40
206: ldc           #41
208: invokevirtual #42
211: iload         6
213: invokevirtual #81
216: ldc           #44
218: invokevirtual #42
221: iconst_0
222: invokevirtual #81
225: ldc           #41
227: invokevirtual #42
230: invokevirtual #45
233: iload         6
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #47
246: aload         7
248: invokestatic  #16
251: aload         8
253: invokestatic  #16
256: new           #39
259: dup
260: invokespecial #40
263: ldc           #41
265: invokevirtual #42
268: aload         11
270: invokevirtual #43
273: ldc           #44
275: invokevirtual #42
278: getstatic     #37
281: invokevirtual #43
284: ldc           #41
286: invokevirtual #42
289: invokevirtual #45
292: aload         11
294: getstatic     #37
297: invokevirtual #46
300: invokestatic  #47
303: return
Exception table:
from    to  target type
155   176   179   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 7697
End line: 7713
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair5 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(doubleList4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #590
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #130
47: astore        4
49: aload_2
50: invokevirtual #51
53: astore        5
55: ldc           #29
57: invokestatic  #14
60: goto          65
63: astore        5
65: aload_3
66: invokestatic  #16
69: aload         4
71: invokestatic  #16
74: return
Exception table:
from    to  target type
49    60    63   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 7716
End line: 7750
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        double[] doubleArray6 = new double[] { '4' };
        double[] doubleArray7 = new double[] {};
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equals(doubleArray6, doubleArray7);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection12 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException14 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection12, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection15 = nonMonotonicSequenceException14.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray6, orderDirection15, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix18, 0);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition22 = new org.apache.commons.math3.linear.EigenDecomposition(realMatrix18, 2.449489742783178d);
        double[] doubleArray23 = eigenDecomposition22.getRealEigenvalues();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister30 = new org.apache.commons.math3.random.MersenneTwister((long) 5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-327406441), doubleArray23, 30000, 2.4193054276345222E45d, false, 30000, 30, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister30, false);
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix2.setRow((-1), doubleArray23);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (-1)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + orderDirection12 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection12.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection15 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection15.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[52.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #591
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: iconst_1
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #70
45: dastore
46: astore_2
47: iconst_0
48: newarray       double
50: astore_3
51: aload_2
52: aload_3
53: invokestatic  #72
56: istore        4
58: getstatic     #73
61: astore        5
63: new           #67
66: dup
67: ldc2_w        #74
70: invokestatic  #76
73: iconst_1
74: invokestatic  #77
77: bipush        100
79: aload         5
81: iconst_1
82: invokespecial #78
85: astore        6
87: aload         6
89: invokevirtual #79
92: astore        7
94: aload_2
95: aload         7
97: iconst_1
98: invokestatic  #80
101: aload_2
102: invokestatic  #24
105: astore        8
107: aload         8
109: iconst_0
110: invokestatic  #496
113: new           #497
116: dup
117: aload         8
119: ldc2_w        #498
122: invokespecial #500
125: astore        9
127: aload         9
129: invokevirtual #501
132: astore        10
134: new           #32
137: dup
138: ldc2_w        #502
141: invokespecial #504
144: astore        11
146: new           #8
149: dup
150: ldc_w         #333
153: aload         10
155: sipush        30000
158: ldc2_w        #505
161: iconst_0
162: sipush        30000
165: bipush        30
167: aload         11
169: iconst_0
170: invokespecial #172
173: astore        12
175: aload_1
176: iconst_m1
177: aload         10
179: invokevirtual #270
182: ldc_w         #592
185: invokestatic  #14
188: goto          193
191: astore        13
193: aload_2
194: invokestatic  #16
197: aload_2
198: invokestatic  #17
201: ldc           #82
203: invokestatic  #19
206: aload_3
207: invokestatic  #16
210: aload_3
211: invokestatic  #17
214: ldc           #83
216: invokestatic  #19
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         4
233: invokevirtual #84
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #84
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         4
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #47
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: aload         5
280: invokevirtual #43
283: ldc           #44
285: invokevirtual #42
288: getstatic     #73
291: invokevirtual #43
294: ldc           #41
296: invokevirtual #42
299: invokevirtual #45
302: aload         5
304: getstatic     #73
307: invokevirtual #85
310: invokestatic  #47
313: new           #39
316: dup
317: invokespecial #40
320: ldc           #41
322: invokevirtual #42
325: aload         7
327: invokevirtual #43
330: ldc           #44
332: invokevirtual #42
335: getstatic     #73
338: invokevirtual #43
341: ldc           #41
343: invokevirtual #42
346: invokevirtual #45
349: aload         7
351: getstatic     #73
354: invokevirtual #85
357: invokestatic  #47
360: aload         8
362: invokestatic  #16
365: aload         10
367: invokestatic  #16
370: aload         10
372: invokestatic  #17
375: ldc           #82
377: invokestatic  #19
380: return
Exception table:
from    to  target type
175   188   191   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 7753
End line: 7771
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair21 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, 2.6881171418161356E43d, true);
        java.lang.Number number22 = null;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException25 = new org.apache.commons.math3.exception.NonMonotonicSequenceException(number22, (java.lang.Number) 1.570792512097631d, 5);
        boolean boolean26 = pointValuePair21.equals((java.lang.Object) 5);
        double[] doubleArray27 = pointValuePair21.getKey();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: new           #58
103: dup
104: aload_1
105: ldc2_w        #594
108: iconst_1
109: invokespecial #262
112: astore        5
114: aconst_null
115: astore        6
117: new           #67
120: dup
121: aload         6
123: ldc2_w        #596
126: invokestatic  #76
129: iconst_5
130: invokespecial #221
133: astore        7
135: aload         5
137: iconst_5
138: invokestatic  #220
141: invokevirtual #598
144: istore        8
146: aload         5
148: invokevirtual #599
151: checkcast     #89
154: astore        9
156: aload_1
157: invokestatic  #16
160: aload_1
161: invokestatic  #17
164: ldc           #26
166: invokestatic  #19
169: new           #39
172: dup
173: invokespecial #40
176: ldc           #41
178: invokevirtual #42
181: iload         8
183: invokevirtual #84
186: ldc           #44
188: invokevirtual #42
191: iconst_0
192: invokevirtual #84
195: ldc           #41
197: invokevirtual #42
200: invokevirtual #45
203: iload         8
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #47
216: aload         9
218: invokestatic  #16
221: aload         9
223: invokestatic  #17
226: ldc           #26
228: invokestatic  #19
231: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 7774
End line: 7839
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.math3.random.MersenneTwister mersenneTwister1 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double2 = mersenneTwister1.nextGaussian();
        int int4 = mersenneTwister1.nextInt((int) (short) 100);
        mersenneTwister1.setSeed(0);
        mersenneTwister1.setSeed(100L);
        int[] intArray11 = new int[] { 6, 31 };
        mersenneTwister1.setSeed(intArray11);
        int int13 = mersenneTwister1.nextInt();
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.linear.RealMatrix realMatrix23 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray21);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair25 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray21, (double) (-1.0f));
        double[] doubleArray26 = pointValuePair25.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister33 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double34 = mersenneTwister33.nextDouble();
        mersenneTwister33.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister33, false, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister41 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double42 = mersenneTwister41.nextGaussian();
        int int44 = mersenneTwister41.nextInt((int) (short) 100);
        mersenneTwister41.setSeed(0);
        mersenneTwister41.setSeed(100L);
        int[] intArray51 = new int[] { 6, 31 };
        mersenneTwister41.setSeed(intArray51);
        int int53 = mersenneTwister41.nextInt();
        int[] intArray55 = new int[] { (-127) };
        int[] intArray56 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister57 = new org.apache.commons.math3.random.MersenneTwister(intArray55);
        mersenneTwister41.setSeed(intArray55);
        int[] intArray60 = org.apache.commons.math3.util.MathArrays.copyOf(intArray55, 100);
        mersenneTwister33.setSeed(intArray60);
        mersenneTwister1.setSeed(intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = mersenneTwister1.nextInt((-18));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NotStrictlyPositiveException; message: -18 is smaller than, or equal to, the minimum (0)");
        } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-0.7023867716137234d) + "'", double2 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 31 + "'", int4 == 31);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1213365404) + "'", int13 == (-1213365404));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix23);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.4170220046815991d + "'", double34 == 0.4170220046815991d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.7023867716137234d) + "'", double42 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 31 + "'", int44 == 31);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[6, 31]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1213365404) + "'", int53 == (-1213365404));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-127]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-127]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #600
20: aastore
21: invokevirtual #7
24: pop
25: new           #32
28: dup
29: iconst_1
30: invokespecial #33
33: astore_1
34: aload_1
35: invokevirtual #168
38: dstore_2
39: aload_1
40: bipush        100
42: invokevirtual #225
45: istore        4
47: aload_1
48: iconst_0
49: invokevirtual #169
52: aload_1
53: ldc2_w        #307
56: invokevirtual #278
59: iconst_2
60: newarray       int
62: dup
63: iconst_0
64: bipush        6
66: iastore
67: dup
68: iconst_1
69: bipush        31
71: iastore
72: astore        5
74: aload_1
75: aload         5
77: invokevirtual #228
80: aload_1
81: invokevirtual #309
84: istore        6
86: bipush        6
88: newarray       double
90: dup
91: iconst_0
92: dconst_0
93: dastore
94: dup
95: iconst_1
96: ldc2_w        #10
99: dastore
100: dup
101: iconst_2
102: dconst_1
103: dastore
104: dup
105: iconst_3
106: dconst_0
107: dastore
108: dup
109: iconst_4
110: dconst_1
111: dastore
112: dup
113: iconst_5
114: ldc2_w        #21
117: dastore
118: astore        7
120: aload         7
122: invokestatic  #23
125: aload         7
127: invokestatic  #24
130: astore        8
132: new           #58
135: dup
136: aload         7
138: ldc2_w        #59
141: invokespecial #61
144: astore        9
146: aload         9
148: invokevirtual #62
151: astore        10
153: new           #32
156: dup
157: iconst_1
158: invokespecial #33
161: astore        11
163: aload         11
165: invokevirtual #275
168: dstore        12
170: aload         11
172: ldc2_w        #276
175: invokevirtual #278
178: aconst_null
179: astore        14
181: new           #8
184: dup
185: sipush        30000
188: aload         10
190: bipush        35
192: ldc2_w        #279
195: iconst_1
196: sipush        30000
199: bipush        100
201: aload         11
203: iconst_0
204: aload         14
206: invokespecial #36
209: astore        15
211: new           #32
214: dup
215: iconst_1
216: invokespecial #33
219: astore        16
221: aload         16
223: invokevirtual #168
226: dstore        17
228: aload         16
230: bipush        100
232: invokevirtual #225
235: istore        19
237: aload         16
239: iconst_0
240: invokevirtual #169
243: aload         16
245: ldc2_w        #307
248: invokevirtual #278
251: iconst_2
252: newarray       int
254: dup
255: iconst_0
256: bipush        6
258: iastore
259: dup
260: iconst_1
261: bipush        31
263: iastore
264: astore        20
266: aload         16
268: aload         20
270: invokevirtual #228
273: aload         16
275: invokevirtual #309
278: istore        21
280: iconst_1
281: newarray       int
283: dup
284: iconst_0
285: bipush        -127
287: iastore
288: astore        22
290: aload         22
292: invokestatic  #226
295: astore        23
297: new           #32
300: dup
301: aload         22
303: invokespecial #112
306: astore        24
308: aload         16
310: aload         22
312: invokevirtual #228
315: aload         22
317: bipush        100
319: invokestatic  #310
322: astore        25
324: aload         11
326: aload         25
328: invokevirtual #228
331: aload_1
332: aload         25
334: invokevirtual #228
337: aload_1
338: bipush        -18
340: invokevirtual #225
343: istore        26
345: ldc_w         #601
348: invokestatic  #14
351: goto          356
354: astore        26
356: new           #39
359: dup
360: invokespecial #40
363: ldc           #41
365: invokevirtual #42
368: dload_2
369: invokevirtual #121
372: ldc           #44
374: invokevirtual #42
377: ldc2_w        #74
380: invokevirtual #121
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: dload_2
392: ldc2_w        #74
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #47
407: new           #39
410: dup
411: invokespecial #40
414: ldc           #41
416: invokevirtual #42
419: iload         4
421: invokevirtual #81
424: ldc           #44
426: invokevirtual #42
429: bipush        31
431: invokevirtual #81
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: iload         4
444: bipush        31
446: if_icmpne     453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #47
457: aload         5
459: invokestatic  #16
462: aload         5
464: invokestatic  #117
467: ldc_w         #315
470: invokestatic  #19
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         6
487: invokevirtual #81
490: ldc           #44
492: invokevirtual #42
495: ldc_w         #316
498: invokevirtual #81
501: ldc           #41
503: invokevirtual #42
506: invokevirtual #45
509: iload         6
511: ldc_w         #316
514: if_icmpne     521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #47
525: aload         7
527: invokestatic  #16
530: aload         7
532: invokestatic  #17
535: ldc           #26
537: invokestatic  #19
540: aload         8
542: invokestatic  #16
545: aload         10
547: invokestatic  #16
550: aload         10
552: invokestatic  #17
555: ldc           #26
557: invokestatic  #19
560: new           #39
563: dup
564: invokespecial #40
567: ldc           #41
569: invokevirtual #42
572: dload         12
574: invokevirtual #121
577: ldc           #44
579: invokevirtual #42
582: ldc2_w        #282
585: invokevirtual #121
588: ldc           #41
590: invokevirtual #42
593: invokevirtual #45
596: dload         12
598: ldc2_w        #282
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #47
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: dload         17
627: invokevirtual #121
630: ldc           #44
632: invokevirtual #42
635: ldc2_w        #74
638: invokevirtual #121
641: ldc           #41
643: invokevirtual #42
646: invokevirtual #45
649: dload         17
651: ldc2_w        #74
654: dcmpl
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #47
666: new           #39
669: dup
670: invokespecial #40
673: ldc           #41
675: invokevirtual #42
678: iload         19
680: invokevirtual #81
683: ldc           #44
685: invokevirtual #42
688: bipush        31
690: invokevirtual #81
693: ldc           #41
695: invokevirtual #42
698: invokevirtual #45
701: iload         19
703: bipush        31
705: if_icmpne     712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #47
716: aload         20
718: invokestatic  #16
721: aload         20
723: invokestatic  #117
726: ldc_w         #315
729: invokestatic  #19
732: new           #39
735: dup
736: invokespecial #40
739: ldc           #41
741: invokevirtual #42
744: iload         21
746: invokevirtual #81
749: ldc           #44
751: invokevirtual #42
754: ldc_w         #316
757: invokevirtual #81
760: ldc           #41
762: invokevirtual #42
765: invokevirtual #45
768: iload         21
770: ldc_w         #316
773: if_icmpne     780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #47
784: aload         22
786: invokestatic  #16
789: aload         22
791: invokestatic  #117
794: ldc           #229
796: invokestatic  #19
799: aload         23
801: invokestatic  #16
804: aload         23
806: invokestatic  #117
809: ldc           #229
811: invokestatic  #19
814: aload         25
816: invokestatic  #16
819: aload         25
821: invokestatic  #117
824: ldc_w         #317
827: invokestatic  #19
830: return
Exception table:
from    to  target type
337   351   354   Class org/apache/commons/math3/exception/NotStrictlyPositiveException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 7842
End line: 7870
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer2.getStatisticsDHistory();
        double[] doubleArray13 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray13);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray13, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        double[] doubleArray25 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = cMAESOptimizer2.computeObjectiveValue(doubleArray13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.TooManyEvaluationsException; message: illegal state: maximal count (0) exceeded: evaluations");
        } catch (org.apache.commons.math3.exception.TooManyEvaluationsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #603
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #232
47: astore        4
49: aload_2
50: invokevirtual #219
53: astore        5
55: bipush        6
57: newarray       double
59: dup
60: iconst_0
61: dconst_0
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #10
68: dastore
69: dup
70: iconst_2
71: dconst_1
72: dastore
73: dup
74: iconst_3
75: dconst_0
76: dastore
77: dup
78: iconst_4
79: dconst_1
80: dastore
81: dup
82: iconst_5
83: ldc2_w        #21
86: dastore
87: astore        6
89: aload         6
91: invokestatic  #23
94: new           #32
97: dup
98: iconst_1
99: invokespecial #33
102: astore        7
104: new           #34
107: dup
108: invokespecial #35
111: astore        8
113: new           #8
116: dup
117: iconst_5
118: aload         6
120: bipush        100
122: dconst_0
123: iconst_0
124: iconst_0
125: bipush        100
127: aload         7
129: iconst_1
130: aload         8
132: invokespecial #36
135: astore        9
137: aload         6
139: invokestatic  #269
142: astore        10
144: aload_2
145: aload         6
147: invokevirtual #173
150: dstore        11
152: ldc           #174
154: invokestatic  #14
157: goto          162
160: astore        11
162: new           #39
165: dup
166: invokespecial #40
169: ldc           #41
171: invokevirtual #42
174: iload_3
175: invokevirtual #81
178: ldc           #44
180: invokevirtual #42
183: iconst_0
184: invokevirtual #81
187: ldc           #41
189: invokevirtual #42
192: invokevirtual #45
195: iload_3
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #47
207: aload         4
209: invokestatic  #16
212: aload         5
214: invokestatic  #16
217: aload         6
219: invokestatic  #16
222: aload         6
224: invokestatic  #17
227: ldc           #26
229: invokestatic  #19
232: aload         10
234: invokestatic  #16
237: aload         10
239: invokestatic  #17
242: ldc           #26
244: invokestatic  #19
247: return
Exception table:
from    to  target type
144   157   160   Class org/apache/commons/math3/exception/TooManyEvaluationsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 7873
End line: 7893
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair7 = cMAESOptimizer2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #604
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: aload_2
62: invokevirtual #51
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: aload         5
129: invokestatic  #16
132: new           #39
135: dup
136: invokespecial #40
139: ldc           #41
141: invokevirtual #42
144: iload         6
146: invokevirtual #81
149: ldc           #44
151: invokevirtual #42
154: iconst_0
155: invokevirtual #81
158: ldc           #41
160: invokevirtual #42
163: invokevirtual #45
166: iload         6
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #47
179: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 7896
End line: 7933
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        int int24 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList25 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair31 = cMAESOptimizer18.optimize((int) (short) -10, multivariateFunction28, goalType29, doubleArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #605
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         4
137: invokevirtual #125
140: istore        10
142: aload         4
144: invokevirtual #232
147: astore        11
149: aload         4
151: invokevirtual #53
154: astore        12
156: aconst_null
157: astore        13
159: getstatic     #150
162: astore        14
164: aconst_null
165: astore        15
167: aload         4
169: bipush        -10
171: aload         13
173: aload         14
175: aload         15
177: invokevirtual #12
180: astore        16
182: ldc           #29
184: invokestatic  #14
187: goto          192
190: astore        16
192: aload_1
193: invokestatic  #16
196: aload_1
197: invokestatic  #17
200: ldc           #26
202: invokestatic  #19
205: aload         5
207: invokestatic  #16
210: aload         6
212: invokestatic  #16
215: new           #39
218: dup
219: invokespecial #40
222: ldc           #41
224: invokevirtual #42
227: iload         7
229: invokevirtual #81
232: ldc           #44
234: invokevirtual #42
237: iconst_0
238: invokevirtual #81
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: iload         7
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #47
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload         8
276: invokevirtual #81
279: ldc           #44
281: invokevirtual #42
284: iconst_0
285: invokevirtual #81
288: ldc           #41
290: invokevirtual #42
293: invokevirtual #45
296: iload         8
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #47
309: aload         9
311: invokestatic  #16
314: new           #39
317: dup
318: invokespecial #40
321: ldc           #41
323: invokevirtual #42
326: iload         10
328: invokevirtual #81
331: ldc           #44
333: invokevirtual #42
336: iconst_0
337: invokevirtual #81
340: ldc           #41
342: invokevirtual #42
345: invokevirtual #45
348: iload         10
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #47
361: aload         11
363: invokestatic  #16
366: aload         12
368: invokestatic  #16
371: new           #39
374: dup
375: invokespecial #40
378: ldc           #41
380: invokevirtual #42
383: aload         14
385: invokevirtual #43
388: ldc           #44
390: invokevirtual #42
393: getstatic     #150
396: invokevirtual #43
399: ldc           #41
401: invokevirtual #42
404: invokevirtual #45
407: aload         14
409: getstatic     #150
412: invokevirtual #46
415: invokestatic  #47
418: return
Exception table:
from    to  target type
167   187   190   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 7936
End line: 7943
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(35, doubleArray1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer2.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(realMatrixList3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #606
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        35
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #133
42: astore_3
43: aload_3
44: invokestatic  #16
47: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 7946
End line: 8008
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(realVector10);
        double[] doubleArray18 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector20.copy();
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector20.mapDivide((double) (-1.0f));
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(realVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = arrayRealVector20.add(realVector34);
        double double37 = arrayRealVector11.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        double[] doubleArray44 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray44);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector46, arrayRealVector55);
        double[] doubleArray63 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray63);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector55, arrayRealVector65);
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector11.subtract((org.apache.commons.math3.linear.RealVector) arrayRealVector55);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray75);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair79 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray75, (double) (-1.0f));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray75);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, doubleArray75);
        boolean boolean82 = arrayRealVector81.isInfinite();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10102.0d + "'", double37 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #607
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #10
254: dastore
255: dup
256: iconst_2
257: dconst_1
258: dastore
259: dup
260: iconst_3
261: dconst_0
262: dastore
263: dup
264: iconst_4
265: dconst_1
266: dastore
267: dup
268: iconst_5
269: ldc2_w        #21
272: dastore
273: astore        16
275: aload         16
277: invokestatic  #23
280: new           #96
283: dup
284: aload         16
286: invokespecial #97
289: astore        17
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: ldc2_w        #10
304: dastore
305: dup
306: iconst_2
307: dconst_1
308: dastore
309: dup
310: iconst_3
311: dconst_0
312: dastore
313: dup
314: iconst_4
315: dconst_1
316: dastore
317: dup
318: iconst_5
319: ldc2_w        #21
322: dastore
323: astore        18
325: aload         18
327: invokestatic  #23
330: new           #96
333: dup
334: aload         18
336: invokespecial #97
339: astore        19
341: new           #96
344: dup
345: aload         17
347: aload         19
349: invokespecial #99
352: astore        20
354: bipush        6
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #10
367: dastore
368: dup
369: iconst_2
370: dconst_1
371: dastore
372: dup
373: iconst_3
374: dconst_0
375: dastore
376: dup
377: iconst_4
378: dconst_1
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #21
385: dastore
386: astore        21
388: aload         21
390: invokestatic  #23
393: new           #96
396: dup
397: aload         21
399: invokespecial #97
402: astore        22
404: new           #96
407: dup
408: aload         19
410: aload         22
412: invokespecial #99
415: astore        23
417: aload         4
419: aload         19
421: invokevirtual #445
424: astore        24
426: bipush        6
428: newarray       double
430: dup
431: iconst_0
432: dconst_0
433: dastore
434: dup
435: iconst_1
436: ldc2_w        #10
439: dastore
440: dup
441: iconst_2
442: dconst_1
443: dastore
444: dup
445: iconst_3
446: dconst_0
447: dastore
448: dup
449: iconst_4
450: dconst_1
451: dastore
452: dup
453: iconst_5
454: ldc2_w        #21
457: dastore
458: astore        25
460: aload         25
462: invokestatic  #23
465: aload         25
467: invokestatic  #24
470: astore        26
472: new           #58
475: dup
476: aload         25
478: ldc2_w        #59
481: invokespecial #61
484: astore        27
486: new           #8
489: dup
490: bipush        36
492: aload         25
494: invokespecial #9
497: astore        28
499: new           #96
502: dup
503: aload         4
505: aload         25
507: invokespecial #102
510: astore        29
512: aload         29
514: invokevirtual #608
517: istore        30
519: aload_1
520: invokestatic  #16
523: aload_1
524: invokestatic  #17
527: ldc           #26
529: invokestatic  #19
532: aload_3
533: invokestatic  #16
536: aload         5
538: invokestatic  #16
541: aload         5
543: invokestatic  #17
546: ldc           #26
548: invokestatic  #19
551: aload         7
553: invokestatic  #16
556: aload         8
558: invokestatic  #16
561: aload         9
563: invokestatic  #16
566: aload         9
568: invokestatic  #17
571: ldc           #26
573: invokestatic  #19
576: aload         11
578: invokestatic  #16
581: aload         13
583: invokestatic  #16
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: dload         14
600: invokevirtual #121
603: ldc           #44
605: invokevirtual #42
608: ldc2_w        #298
611: invokevirtual #121
614: ldc           #41
616: invokevirtual #42
619: invokevirtual #45
622: dload         14
624: ldc2_w        #298
627: dcmpl
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #47
639: aload         16
641: invokestatic  #16
644: aload         16
646: invokestatic  #17
649: ldc           #26
651: invokestatic  #19
654: aload         18
656: invokestatic  #16
659: aload         18
661: invokestatic  #17
664: ldc           #26
666: invokestatic  #19
669: aload         21
671: invokestatic  #16
674: aload         21
676: invokestatic  #17
679: ldc           #26
681: invokestatic  #19
684: aload         24
686: invokestatic  #16
689: aload         25
691: invokestatic  #16
694: aload         25
696: invokestatic  #17
699: ldc           #26
701: invokestatic  #19
704: aload         26
706: invokestatic  #16
709: new           #39
712: dup
713: invokespecial #40
716: ldc           #41
718: invokevirtual #42
721: iload         30
723: invokevirtual #84
726: ldc           #44
728: invokevirtual #42
731: iconst_0
732: invokevirtual #84
735: ldc           #41
737: invokevirtual #42
740: invokevirtual #45
743: iload         30
745: ifne          752
748: iconst_1
749: goto          753
752: iconst_0
753: invokestatic  #47
756: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 8011
End line: 8078
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        double double5 = blockRealMatrix2.getEntry(0, (int) '#');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix6 = blockRealMatrix2.transpose();
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = blockRealMatrix2.scalarMultiply(2979.3805346802806d);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix10 = blockRealMatrix2.scalarAdd(1.1484630505472706E60d);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix11 = blockRealMatrix2.copy();
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker29 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray19, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister27, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker29);
        int[] intArray35 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister36 = new org.apache.commons.math3.random.MersenneTwister(intArray35);
        int[] intArray37 = org.apache.commons.math3.util.MathArrays.copyOf(intArray35);
        int[] intArray42 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister43 = new org.apache.commons.math3.random.MersenneTwister(intArray42);
        int int44 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray37, intArray42);
        mersenneTwister27.setSeed(intArray37);
        int[] intArray50 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister51 = new org.apache.commons.math3.random.MersenneTwister(intArray50);
        int[] intArray56 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister57 = new org.apache.commons.math3.random.MersenneTwister(intArray56);
        int[] intArray59 = org.apache.commons.math3.util.MathArrays.copyOf(intArray56, 3);
        int int60 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray50, intArray56);
        int[] intArray65 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister66 = new org.apache.commons.math3.random.MersenneTwister(intArray65);
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65);
        int int68 = org.apache.commons.math3.util.MathArrays.distance1(intArray50, intArray65);
        int[] intArray70 = org.apache.commons.math3.util.MathArrays.copyOf(intArray65, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.RealMatrix realMatrix71 = blockRealMatrix11.getSubMatrix(intArray37, intArray65);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: row index (100)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix6);
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(blockRealMatrix10);
        org.junit.Assert.assertNotNull(blockRealMatrix11);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #609
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: bipush        35
41: invokevirtual #371
44: dstore_2
45: aload_1
46: invokevirtual #372
49: astore        4
51: aload_1
52: ldc2_w        #610
55: invokevirtual #305
58: astore        5
60: aload_1
61: ldc2_w        #612
64: invokevirtual #614
67: astore        6
69: aload_1
70: invokevirtual #455
73: astore        7
75: bipush        6
77: newarray       double
79: dup
80: iconst_0
81: dconst_0
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #10
88: dastore
89: dup
90: iconst_2
91: dconst_1
92: dastore
93: dup
94: iconst_3
95: dconst_0
96: dastore
97: dup
98: iconst_4
99: dconst_1
100: dastore
101: dup
102: iconst_5
103: ldc2_w        #21
106: dastore
107: astore        8
109: aload         8
111: invokestatic  #23
114: new           #32
117: dup
118: iconst_1
119: invokespecial #33
122: astore        9
124: new           #34
127: dup
128: invokespecial #35
131: astore        10
133: new           #8
136: dup
137: iconst_5
138: aload         8
140: bipush        100
142: dconst_0
143: iconst_0
144: iconst_0
145: bipush        100
147: aload         9
149: iconst_1
150: aload         10
152: invokespecial #36
155: astore        11
157: iconst_4
158: newarray       int
160: dup
161: iconst_0
162: bipush        100
164: iastore
165: dup
166: iconst_1
167: iconst_0
168: iastore
169: dup
170: iconst_2
171: bipush        100
173: iastore
174: dup
175: iconst_3
176: bipush        52
178: iastore
179: astore        12
181: new           #32
184: dup
185: aload         12
187: invokespecial #112
190: astore        13
192: aload         12
194: invokestatic  #226
197: astore        14
199: iconst_4
200: newarray       int
202: dup
203: iconst_0
204: bipush        100
206: iastore
207: dup
208: iconst_1
209: iconst_0
210: iastore
211: dup
212: iconst_2
213: bipush        100
215: iastore
216: dup
217: iconst_3
218: bipush        52
220: iastore
221: astore        15
223: new           #32
226: dup
227: aload         15
229: invokespecial #112
232: astore        16
234: aload         14
236: aload         15
238: invokestatic  #306
241: istore        17
243: aload         9
245: aload         14
247: invokevirtual #228
250: iconst_4
251: newarray       int
253: dup
254: iconst_0
255: bipush        100
257: iastore
258: dup
259: iconst_1
260: iconst_0
261: iastore
262: dup
263: iconst_2
264: bipush        100
266: iastore
267: dup
268: iconst_3
269: bipush        52
271: iastore
272: astore        18
274: new           #32
277: dup
278: aload         18
280: invokespecial #112
283: astore        19
285: iconst_4
286: newarray       int
288: dup
289: iconst_0
290: bipush        100
292: iastore
293: dup
294: iconst_1
295: iconst_0
296: iastore
297: dup
298: iconst_2
299: bipush        100
301: iastore
302: dup
303: iconst_3
304: bipush        52
306: iastore
307: astore        20
309: new           #32
312: dup
313: aload         20
315: invokespecial #112
318: astore        21
320: aload         20
322: iconst_3
323: invokestatic  #310
326: astore        22
328: aload         18
330: aload         20
332: invokestatic  #306
335: istore        23
337: iconst_4
338: newarray       int
340: dup
341: iconst_0
342: bipush        100
344: iastore
345: dup
346: iconst_1
347: iconst_0
348: iastore
349: dup
350: iconst_2
351: bipush        100
353: iastore
354: dup
355: iconst_3
356: bipush        52
358: iastore
359: astore        24
361: new           #32
364: dup
365: aload         24
367: invokespecial #112
370: astore        25
372: aload         24
374: invokestatic  #226
377: astore        26
379: aload         18
381: aload         24
383: invokestatic  #429
386: istore        27
388: aload         24
390: iconst_0
391: invokestatic  #310
394: astore        28
396: aload         7
398: aload         14
400: aload         24
402: invokevirtual #615
405: astore        29
407: ldc_w         #616
410: invokestatic  #14
413: goto          418
416: astore        29
418: new           #39
421: dup
422: invokespecial #40
425: ldc           #41
427: invokevirtual #42
430: dload_2
431: invokevirtual #121
434: ldc           #44
436: invokevirtual #42
439: dconst_0
440: invokevirtual #121
443: ldc           #41
445: invokevirtual #42
448: invokevirtual #45
451: dload_2
452: dconst_0
453: dcmpl
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #47
465: aload         4
467: invokestatic  #16
470: aload         5
472: invokestatic  #16
475: aload         6
477: invokestatic  #16
480: aload         7
482: invokestatic  #16
485: aload         8
487: invokestatic  #16
490: aload         8
492: invokestatic  #17
495: ldc           #26
497: invokestatic  #19
500: aload         12
502: invokestatic  #16
505: aload         12
507: invokestatic  #117
510: ldc           #118
512: invokestatic  #19
515: aload         14
517: invokestatic  #16
520: aload         14
522: invokestatic  #117
525: ldc           #118
527: invokestatic  #19
530: aload         15
532: invokestatic  #16
535: aload         15
537: invokestatic  #117
540: ldc           #118
542: invokestatic  #19
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: iload         17
559: invokevirtual #81
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #81
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         17
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #47
592: aload         18
594: invokestatic  #16
597: aload         18
599: invokestatic  #117
602: ldc           #118
604: invokestatic  #19
607: aload         20
609: invokestatic  #16
612: aload         20
614: invokestatic  #117
617: ldc           #118
619: invokestatic  #19
622: aload         22
624: invokestatic  #16
627: aload         22
629: invokestatic  #117
632: ldc_w         #432
635: invokestatic  #19
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         23
652: invokevirtual #81
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #81
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         23
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #47
685: aload         24
687: invokestatic  #16
690: aload         24
692: invokestatic  #117
695: ldc           #118
697: invokestatic  #19
700: aload         26
702: invokestatic  #16
705: aload         26
707: invokestatic  #117
710: ldc           #118
712: invokestatic  #19
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: iload         27
729: invokevirtual #81
732: ldc           #44
734: invokevirtual #42
737: iconst_0
738: invokevirtual #81
741: ldc           #41
743: invokevirtual #42
746: invokevirtual #45
749: iload         27
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #47
762: aload         28
764: invokestatic  #16
767: aload         28
769: invokestatic  #117
772: ldc           #83
774: invokestatic  #19
777: return
Exception table:
from    to  target type
396   413   416   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 8081
End line: 8105
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor24 = cMAESOptimizer18.evaluations;
        incrementor24.resetCount();
        incrementor24.incrementCount((-1446576480));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNotNull(incrementor24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #617
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: getfield      #191
140: astore        10
142: aload         10
144: invokevirtual #203
147: aload         10
149: ldc_w         #522
152: invokevirtual #260
155: aload_1
156: invokestatic  #16
159: aload_1
160: invokestatic  #17
163: ldc           #26
165: invokestatic  #19
168: aload         5
170: invokestatic  #16
173: new           #39
176: dup
177: invokespecial #40
180: ldc           #41
182: invokevirtual #42
185: iload         6
187: invokevirtual #81
190: ldc           #44
192: invokevirtual #42
195: iconst_0
196: invokevirtual #81
199: ldc           #41
201: invokevirtual #42
204: invokevirtual #45
207: iload         6
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #47
220: aload         7
222: invokestatic  #155
225: aload         8
227: invokestatic  #16
230: aload         9
232: invokestatic  #16
235: aload         10
237: invokestatic  #16
240: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 8108
End line: 8123
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleList7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #618
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aload_2
62: invokevirtual #130
65: astore        7
67: new           #39
70: dup
71: invokespecial #40
74: ldc           #41
76: invokevirtual #42
79: iload_3
80: invokevirtual #81
83: ldc           #44
85: invokevirtual #42
88: iconst_0
89: invokevirtual #81
92: ldc           #41
94: invokevirtual #42
97: invokevirtual #45
100: iload_3
101: ifne          108
104: iconst_1
105: goto          109
108: iconst_0
109: invokestatic  #47
112: aload         4
114: invokestatic  #16
117: aload         5
119: invokestatic  #16
122: new           #39
125: dup
126: invokespecial #40
129: ldc           #41
131: invokevirtual #42
134: iload         6
136: invokevirtual #81
139: ldc           #44
141: invokevirtual #42
144: iconst_0
145: invokevirtual #81
148: ldc           #41
150: invokevirtual #42
153: invokevirtual #45
156: iload         6
158: ifne          165
161: iconst_1
162: goto          166
165: iconst_0
166: invokestatic  #47
169: aload         7
171: invokestatic  #16
174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 8126
End line: 8150
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        int int22 = incrementor20.getCount();
        int int23 = incrementor20.getCount();
        int int24 = incrementor20.getCount();
        int int25 = incrementor20.getMaximalCount();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #619
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #202
126: istore        8
128: aload         6
130: invokevirtual #202
133: istore        9
135: aload         6
137: invokevirtual #202
140: istore        10
142: aload         6
144: invokevirtual #413
147: istore        11
149: aload_1
150: invokestatic  #16
153: aload_1
154: invokestatic  #17
157: ldc           #26
159: invokestatic  #19
162: aload         5
164: invokestatic  #16
167: aload         6
169: invokestatic  #16
172: new           #39
175: dup
176: invokespecial #40
179: ldc           #41
181: invokevirtual #42
184: iload         7
186: invokevirtual #81
189: ldc           #44
191: invokevirtual #42
194: iconst_0
195: invokevirtual #81
198: ldc           #41
200: invokevirtual #42
203: invokevirtual #45
206: iload         7
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #47
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         8
233: invokevirtual #81
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #81
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         8
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #47
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: iload         9
280: invokevirtual #81
283: ldc           #44
285: invokevirtual #42
288: iconst_0
289: invokevirtual #81
292: ldc           #41
294: invokevirtual #42
297: invokevirtual #45
300: iload         9
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #47
313: new           #39
316: dup
317: invokespecial #40
320: ldc           #41
322: invokevirtual #42
325: iload         10
327: invokevirtual #81
330: ldc           #44
332: invokevirtual #42
335: iconst_0
336: invokevirtual #81
339: ldc           #41
341: invokevirtual #42
344: invokevirtual #45
347: iload         10
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #47
360: new           #39
363: dup
364: invokespecial #40
367: ldc           #41
369: invokevirtual #42
372: iload         11
374: invokevirtual #81
377: ldc           #44
379: invokevirtual #42
382: iconst_0
383: invokevirtual #81
386: ldc           #41
388: invokevirtual #42
391: invokevirtual #45
394: iload         11
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #47
407: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 8153
End line: 8183
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        int int9 = org.apache.commons.math3.util.MathUtils.hash(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister16 = new org.apache.commons.math3.random.MersenneTwister(3);
        double double17 = mersenneTwister16.nextGaussian();
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister34 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker36 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray26, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister34, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = cMAESOptimizer37.getConvergenceChecker();
        int int39 = cMAESOptimizer37.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList40 = cMAESOptimizer37.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker41 = cMAESOptimizer37.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer37.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray7, 93740670, (double) 10.000001f, true, 13220, 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister16, true, pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 419642177 + "'", int9 == 419642177);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.7888271513218789d) + "'", double17 == (-0.7888271513218789d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(realMatrixList40);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker41);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #620
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #344
66: istore_2
67: new           #32
70: dup
71: iconst_3
72: invokespecial #33
75: astore_3
76: aload_3
77: invokevirtual #168
80: dstore        4
82: bipush        6
84: newarray       double
86: dup
87: iconst_0
88: dconst_0
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #10
95: dastore
96: dup
97: iconst_2
98: dconst_1
99: dastore
100: dup
101: iconst_3
102: dconst_0
103: dastore
104: dup
105: iconst_4
106: dconst_1
107: dastore
108: dup
109: iconst_5
110: ldc2_w        #21
113: dastore
114: astore        6
116: aload         6
118: invokestatic  #23
121: new           #32
124: dup
125: iconst_1
126: invokespecial #33
129: astore        7
131: new           #34
134: dup
135: invokespecial #35
138: astore        8
140: new           #8
143: dup
144: iconst_5
145: aload         6
147: bipush        100
149: dconst_0
150: iconst_0
151: iconst_0
152: bipush        100
154: aload         7
156: iconst_1
157: aload         8
159: invokespecial #36
162: astore        9
164: aload         9
166: invokevirtual #53
169: astore        10
171: aload         9
173: invokevirtual #69
176: istore        11
178: aload         9
180: invokevirtual #133
183: astore        12
185: aload         9
187: invokevirtual #53
190: astore        13
192: aload         9
194: invokevirtual #53
197: astore        14
199: new           #8
202: dup
203: bipush        -127
205: aload_1
206: ldc_w         #621
209: ldc2_w        #114
212: iconst_1
213: sipush        13220
216: iconst_0
217: aload_3
218: iconst_1
219: aload         14
221: invokespecial #36
224: astore        15
226: aload_1
227: invokestatic  #16
230: aload_1
231: invokestatic  #17
234: ldc           #26
236: invokestatic  #19
239: new           #39
242: dup
243: invokespecial #40
246: ldc           #41
248: invokevirtual #42
251: iload_2
252: invokevirtual #81
255: ldc           #44
257: invokevirtual #42
260: ldc_w         #347
263: invokevirtual #81
266: ldc           #41
268: invokevirtual #42
271: invokevirtual #45
274: iload_2
275: ldc_w         #347
278: if_icmpne     285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #47
289: new           #39
292: dup
293: invokespecial #40
296: ldc           #41
298: invokevirtual #42
301: dload         4
303: invokevirtual #121
306: ldc           #44
308: invokevirtual #42
311: ldc2_w        #622
314: invokevirtual #121
317: ldc           #41
319: invokevirtual #42
322: invokevirtual #45
325: dload         4
327: ldc2_w        #622
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #47
342: aload         6
344: invokestatic  #16
347: aload         6
349: invokestatic  #17
352: ldc           #26
354: invokestatic  #19
357: aload         10
359: invokestatic  #16
362: new           #39
365: dup
366: invokespecial #40
369: ldc           #41
371: invokevirtual #42
374: iload         11
376: invokevirtual #81
379: ldc           #44
381: invokevirtual #42
384: iconst_0
385: invokevirtual #81
388: ldc           #41
390: invokevirtual #42
393: invokevirtual #45
396: iload         11
398: ifne          405
401: iconst_1
402: goto          406
405: iconst_0
406: invokestatic  #47
409: aload         12
411: invokestatic  #16
414: aload         13
416: invokestatic  #16
419: aload         14
421: invokestatic  #16
424: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 8186
End line: 8190
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #624
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: iconst_0
30: invokespecial #245
33: astore_1
34: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 8193
End line: 8224
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        double double5 = blockRealMatrix2.getEntry(0, (int) '#');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix6 = blockRealMatrix2.transpose();
        double[] doubleArray14 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray14);
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray14);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair18 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray14, (double) (-1.0f));
        double[] doubleArray19 = pointValuePair18.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister26 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double27 = mersenneTwister26.nextDouble();
        mersenneTwister26.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray19, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister26, false, pointValuePairConvergenceChecker31);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = blockRealMatrix2.operate(doubleArray19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 6 != 30,000");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix6);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.4170220046815991d + "'", double27 == 0.4170220046815991d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #625
20: aastore
21: invokevirtual #7
24: pop
25: new           #186
28: dup
29: iconst_5
30: sipush        30000
33: invokespecial #266
36: astore_1
37: aload_1
38: iconst_0
39: bipush        35
41: invokevirtual #371
44: dstore_2
45: aload_1
46: invokevirtual #372
49: astore        4
51: bipush        6
53: newarray       double
55: dup
56: iconst_0
57: dconst_0
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #10
64: dastore
65: dup
66: iconst_2
67: dconst_1
68: dastore
69: dup
70: iconst_3
71: dconst_0
72: dastore
73: dup
74: iconst_4
75: dconst_1
76: dastore
77: dup
78: iconst_5
79: ldc2_w        #21
82: dastore
83: astore        5
85: aload         5
87: invokestatic  #23
90: aload         5
92: invokestatic  #24
95: astore        6
97: new           #58
100: dup
101: aload         5
103: ldc2_w        #59
106: invokespecial #61
109: astore        7
111: aload         7
113: invokevirtual #62
116: astore        8
118: new           #32
121: dup
122: iconst_1
123: invokespecial #33
126: astore        9
128: aload         9
130: invokevirtual #275
133: dstore        10
135: aload         9
137: ldc2_w        #276
140: invokevirtual #278
143: aconst_null
144: astore        12
146: new           #8
149: dup
150: sipush        30000
153: aload         8
155: bipush        35
157: ldc2_w        #279
160: iconst_1
161: sipush        30000
164: bipush        100
166: aload         9
168: iconst_0
169: aload         12
171: invokespecial #36
174: astore        13
176: aload_1
177: aload         8
179: invokevirtual #552
182: astore        14
184: ldc_w         #376
187: invokestatic  #14
190: goto          195
193: astore        14
195: new           #39
198: dup
199: invokespecial #40
202: ldc           #41
204: invokevirtual #42
207: dload_2
208: invokevirtual #121
211: ldc           #44
213: invokevirtual #42
216: dconst_0
217: invokevirtual #121
220: ldc           #41
222: invokevirtual #42
225: invokevirtual #45
228: dload_2
229: dconst_0
230: dcmpl
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #47
242: aload         4
244: invokestatic  #16
247: aload         5
249: invokestatic  #16
252: aload         5
254: invokestatic  #17
257: ldc           #26
259: invokestatic  #19
262: aload         6
264: invokestatic  #16
267: aload         8
269: invokestatic  #16
272: aload         8
274: invokestatic  #17
277: ldc           #26
279: invokestatic  #19
282: new           #39
285: dup
286: invokespecial #40
289: ldc           #41
291: invokevirtual #42
294: dload         10
296: invokevirtual #121
299: ldc           #44
301: invokevirtual #42
304: ldc2_w        #282
307: invokevirtual #121
310: ldc           #41
312: invokevirtual #42
315: invokevirtual #45
318: dload         10
320: ldc2_w        #282
323: dcmpl
324: ifne          331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #47
335: return
Exception table:
from    to  target type
176   190   193   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 8227
End line: 8278
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector8.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math3.linear.ArrayRealVector(realVector10);
        double[] doubleArray18 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray18);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray18);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector20.copy();
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector20.mapDivide((double) (-1.0f));
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray30);
        org.apache.commons.math3.linear.RealVector realVector34 = arrayRealVector32.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(realVector34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = arrayRealVector20.add(realVector34);
        double double37 = arrayRealVector11.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector20);
        org.apache.commons.math3.linear.RealVector realVector39 = arrayRealVector11.mapAddToSelf((double) 100L);
        double double40 = arrayRealVector11.getNorm();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector11, true);
        double[] doubleArray51 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray51);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister59 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker61 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray51, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister59, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker61);
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector42.setSubVector(7, doubleArray51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: index (7)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10102.0d + "'", double37 == 10102.0d);
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 304.1414144768844d + "'", double40 == 304.1414144768844d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #626
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: aload         4
243: ldc2_w        #10
246: invokevirtual #627
249: astore        16
251: aload         4
253: invokevirtual #628
256: dstore        17
258: new           #96
261: dup
262: aload         4
264: iconst_1
265: invokespecial #629
268: astore        19
270: bipush        6
272: newarray       double
274: dup
275: iconst_0
276: dconst_0
277: dastore
278: dup
279: iconst_1
280: ldc2_w        #10
283: dastore
284: dup
285: iconst_2
286: dconst_1
287: dastore
288: dup
289: iconst_3
290: dconst_0
291: dastore
292: dup
293: iconst_4
294: dconst_1
295: dastore
296: dup
297: iconst_5
298: ldc2_w        #21
301: dastore
302: astore        20
304: aload         20
306: invokestatic  #23
309: new           #32
312: dup
313: iconst_1
314: invokespecial #33
317: astore        21
319: new           #34
322: dup
323: invokespecial #35
326: astore        22
328: new           #8
331: dup
332: iconst_5
333: aload         20
335: bipush        100
337: dconst_0
338: iconst_0
339: iconst_0
340: bipush        100
342: aload         21
344: iconst_1
345: aload         22
347: invokespecial #36
350: astore        23
352: aload         19
354: bipush        7
356: aload         20
358: invokevirtual #393
361: ldc_w         #630
364: invokestatic  #14
367: goto          372
370: astore        24
372: aload_1
373: invokestatic  #16
376: aload_1
377: invokestatic  #17
380: ldc           #26
382: invokestatic  #19
385: aload_3
386: invokestatic  #16
389: aload         5
391: invokestatic  #16
394: aload         5
396: invokestatic  #17
399: ldc           #26
401: invokestatic  #19
404: aload         7
406: invokestatic  #16
409: aload         8
411: invokestatic  #16
414: aload         9
416: invokestatic  #16
419: aload         9
421: invokestatic  #17
424: ldc           #26
426: invokestatic  #19
429: aload         11
431: invokestatic  #16
434: aload         13
436: invokestatic  #16
439: new           #39
442: dup
443: invokespecial #40
446: ldc           #41
448: invokevirtual #42
451: dload         14
453: invokevirtual #121
456: ldc           #44
458: invokevirtual #42
461: ldc2_w        #298
464: invokevirtual #121
467: ldc           #41
469: invokevirtual #42
472: invokevirtual #45
475: dload         14
477: ldc2_w        #298
480: dcmpl
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #47
492: aload         16
494: invokestatic  #16
497: new           #39
500: dup
501: invokespecial #40
504: ldc           #41
506: invokevirtual #42
509: dload         17
511: invokevirtual #121
514: ldc           #44
516: invokevirtual #42
519: ldc2_w        #170
522: invokevirtual #121
525: ldc           #41
527: invokevirtual #42
530: invokevirtual #45
533: dload         17
535: ldc2_w        #170
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #47
550: aload         20
552: invokestatic  #16
555: aload         20
557: invokestatic  #17
560: ldc           #26
562: invokestatic  #19
565: return
Exception table:
from    to  target type
352   367   370   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 8281
End line: 8307
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer2.getStatisticsMeanHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction6 = null;
        org.apache.commons.math3.optimization.GoalType goalType7 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray12 = new double[] { 10, (-708.3964185322641d), 30000.000000000004d, 0.021822224830581258d };
        org.apache.commons.math3.optimization.PointValuePair pointValuePair14 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray12, (double) (-1.0f));
        double[] doubleArray16 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray12, (double) (-127));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair17 = cMAESOptimizer2.optimizeInternal((-1716293427), multivariateFunction6, goalType7, doubleArray12);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertTrue("'" + goalType7 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType7.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, -708.3964185322641, 30000.000000000004, 0.021822224830581258]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-0.043342305503637886, 3.0703533989708314, -130.02691651091368, -9.458255353761254E-5]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #631
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #133
47: astore        4
49: aconst_null
50: astore        5
52: getstatic     #37
55: astore        6
57: iconst_4
58: newarray       double
60: dup
61: iconst_0
62: ldc2_w        #21
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #632
71: dastore
72: dup
73: iconst_2
74: ldc2_w        #446
77: dastore
78: dup
79: iconst_3
80: ldc2_w        #634
83: dastore
84: astore        7
86: new           #58
89: dup
90: aload         7
92: ldc2_w        #59
95: invokespecial #61
98: astore        8
100: aload         7
102: ldc2_w        #636
105: invokestatic  #210
108: astore        9
110: aload_2
111: ldc_w         #507
114: aload         5
116: aload         6
118: aload         7
120: invokevirtual #126
123: astore        10
125: ldc           #13
127: invokestatic  #14
130: goto          135
133: astore        10
135: aload_3
136: invokestatic  #16
139: aload         4
141: invokestatic  #16
144: new           #39
147: dup
148: invokespecial #40
151: ldc           #41
153: invokevirtual #42
156: aload         6
158: invokevirtual #43
161: ldc           #44
163: invokevirtual #42
166: getstatic     #37
169: invokevirtual #43
172: ldc           #41
174: invokevirtual #42
177: invokevirtual #45
180: aload         6
182: getstatic     #37
185: invokevirtual #46
188: invokestatic  #47
191: aload         7
193: invokestatic  #16
196: aload         7
198: invokestatic  #17
201: ldc_w         #638
204: invokestatic  #19
207: aload         9
209: invokestatic  #16
212: aload         9
214: invokestatic  #17
217: ldc_w         #639
220: invokestatic  #19
223: return
Exception table:
from    to  target type
110   130   133   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 8310
End line: 8363
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        int int66 = cMAESOptimizer64.getMaxEvaluations();
        int int67 = cMAESOptimizer64.getMaxEvaluations();
        int int68 = cMAESOptimizer64.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #640
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aload         20
417: invokevirtual #125
420: istore        22
422: aload         20
424: invokevirtual #125
427: istore        23
429: aload         20
431: invokevirtual #125
434: istore        24
436: aload_1
437: invokestatic  #16
440: aload_1
441: invokestatic  #17
444: ldc           #26
446: invokestatic  #19
449: aload_3
450: invokestatic  #16
453: aload         4
455: invokestatic  #16
458: aload         4
460: invokestatic  #17
463: ldc           #26
465: invokestatic  #19
468: aload         6
470: invokestatic  #16
473: aload         6
475: invokestatic  #17
478: ldc           #26
480: invokestatic  #19
483: aload         9
485: invokestatic  #16
488: aload         9
490: invokestatic  #17
493: ldc           #26
495: invokestatic  #19
498: aload         11
500: invokestatic  #16
503: aload         11
505: invokestatic  #17
508: ldc           #26
510: invokestatic  #19
513: aload         14
515: invokestatic  #16
518: aload         14
520: invokestatic  #17
523: ldc           #26
525: invokestatic  #19
528: aload         17
530: invokestatic  #16
533: aload         18
535: invokestatic  #16
538: aload         18
540: invokestatic  #17
543: ldc           #105
545: invokestatic  #19
548: aload         21
550: invokestatic  #16
553: new           #39
556: dup
557: invokespecial #40
560: ldc           #41
562: invokevirtual #42
565: iload         22
567: invokevirtual #81
570: ldc           #44
572: invokevirtual #42
575: iconst_0
576: invokevirtual #81
579: ldc           #41
581: invokevirtual #42
584: invokevirtual #45
587: iload         22
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #47
600: new           #39
603: dup
604: invokespecial #40
607: ldc           #41
609: invokevirtual #42
612: iload         23
614: invokevirtual #81
617: ldc           #44
619: invokevirtual #42
622: iconst_0
623: invokevirtual #81
626: ldc           #41
628: invokevirtual #42
631: invokevirtual #45
634: iload         23
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #47
647: new           #39
650: dup
651: invokespecial #40
654: ldc           #41
656: invokevirtual #42
659: iload         24
661: invokevirtual #81
664: ldc           #44
666: invokevirtual #42
669: iconst_0
670: invokevirtual #81
673: ldc           #41
675: invokevirtual #42
678: invokevirtual #45
681: iload         24
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #47
694: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 8366
End line: 8418
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        double[] doubleArray27 = new double[] { '4' };
        double[] doubleArray28 = new double[] {};
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray27, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException35 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection33, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection36 = nonMonotonicSequenceException35.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray27, orderDirection36, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix39 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray27);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix39, 0);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition43 = new org.apache.commons.math3.linear.EigenDecomposition(realMatrix39, 2.449489742783178d);
        double[] doubleArray44 = eigenDecomposition43.getImagEigenvalues();
        org.apache.commons.math3.linear.RealMatrix realMatrix45 = eigenDecomposition43.getV();
        double[] doubleArray47 = realMatrix45.getColumn(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition48 = new org.apache.commons.math3.linear.EigenDecomposition(doubleArray12, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection36 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection36.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #641
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: iconst_1
144: newarray       double
146: dup
147: iconst_0
148: ldc2_w        #70
151: dastore
152: astore        10
154: iconst_0
155: newarray       double
157: astore        11
159: aload         10
161: aload         11
163: invokestatic  #72
166: istore        12
168: getstatic     #73
171: astore        13
173: new           #67
176: dup
177: ldc2_w        #74
180: invokestatic  #76
183: iconst_1
184: invokestatic  #77
187: bipush        100
189: aload         13
191: iconst_1
192: invokespecial #78
195: astore        14
197: aload         14
199: invokevirtual #79
202: astore        15
204: aload         10
206: aload         15
208: iconst_1
209: invokestatic  #80
212: aload         10
214: invokestatic  #24
217: astore        16
219: aload         16
221: iconst_0
222: invokestatic  #496
225: new           #497
228: dup
229: aload         16
231: ldc2_w        #498
234: invokespecial #500
237: astore        17
239: aload         17
241: invokevirtual #642
244: astore        18
246: aload         17
248: invokevirtual #643
251: astore        19
253: aload         19
255: iconst_0
256: invokeinterface #644,  2
261: astore        20
263: new           #497
266: dup
267: aload         4
269: aload         20
271: invokespecial #645
274: astore        21
276: ldc_w         #263
279: invokestatic  #14
282: goto          287
285: astore        21
287: aload_1
288: invokestatic  #16
291: aload_1
292: invokestatic  #17
295: ldc           #26
297: invokestatic  #19
300: aload_2
301: invokestatic  #16
304: aload         4
306: invokestatic  #16
309: aload         4
311: invokestatic  #17
314: ldc           #26
316: invokestatic  #19
319: new           #39
322: dup
323: invokespecial #40
326: ldc           #41
328: invokevirtual #42
331: dload         6
333: invokevirtual #121
336: ldc           #44
338: invokevirtual #42
341: ldc2_w        #282
344: invokevirtual #121
347: ldc           #41
349: invokevirtual #42
352: invokevirtual #45
355: dload         6
357: ldc2_w        #282
360: dcmpl
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #47
372: aload         10
374: invokestatic  #16
377: aload         10
379: invokestatic  #17
382: ldc           #82
384: invokestatic  #19
387: aload         11
389: invokestatic  #16
392: aload         11
394: invokestatic  #17
397: ldc           #83
399: invokestatic  #19
402: new           #39
405: dup
406: invokespecial #40
409: ldc           #41
411: invokevirtual #42
414: iload         12
416: invokevirtual #84
419: ldc           #44
421: invokevirtual #42
424: iconst_0
425: invokevirtual #84
428: ldc           #41
430: invokevirtual #42
433: invokevirtual #45
436: iload         12
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #47
449: new           #39
452: dup
453: invokespecial #40
456: ldc           #41
458: invokevirtual #42
461: aload         13
463: invokevirtual #43
466: ldc           #44
468: invokevirtual #42
471: getstatic     #73
474: invokevirtual #43
477: ldc           #41
479: invokevirtual #42
482: invokevirtual #45
485: aload         13
487: getstatic     #73
490: invokevirtual #85
493: invokestatic  #47
496: new           #39
499: dup
500: invokespecial #40
503: ldc           #41
505: invokevirtual #42
508: aload         15
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: getstatic     #73
521: invokevirtual #43
524: ldc           #41
526: invokevirtual #42
529: invokevirtual #45
532: aload         15
534: getstatic     #73
537: invokevirtual #85
540: invokestatic  #47
543: aload         16
545: invokestatic  #16
548: aload         18
550: invokestatic  #16
553: aload         18
555: invokestatic  #17
558: ldc_w         #646
561: invokestatic  #19
564: aload         19
566: invokestatic  #16
569: aload         20
571: invokestatic  #16
574: aload         20
576: invokestatic  #17
579: ldc_w         #647
582: invokestatic  #19
585: return
Exception table:
from    to  target type
263   282   285   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 8421
End line: 8446
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer18.getGoalType();
        int int25 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.MathUtils.checkNotNull((java.lang.Object) cMAESOptimizer18);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNull(goalType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #648
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #149
140: astore        10
142: aload         4
144: invokevirtual #125
147: istore        11
149: aload         4
151: invokestatic  #649
154: aload_1
155: invokestatic  #16
158: aload_1
159: invokestatic  #17
162: ldc           #26
164: invokestatic  #19
167: aload         5
169: invokestatic  #16
172: aload         6
174: invokestatic  #16
177: new           #39
180: dup
181: invokespecial #40
184: ldc           #41
186: invokevirtual #42
189: iload         7
191: invokevirtual #81
194: ldc           #44
196: invokevirtual #42
199: iconst_0
200: invokevirtual #81
203: ldc           #41
205: invokevirtual #42
208: invokevirtual #45
211: iload         7
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #47
224: aload         8
226: invokestatic  #16
229: aload         9
231: invokestatic  #16
234: aload         10
236: invokestatic  #155
239: new           #39
242: dup
243: invokespecial #40
246: ldc           #41
248: invokevirtual #42
251: iload         11
253: invokevirtual #81
256: ldc           #44
258: invokevirtual #42
261: iconst_0
262: invokevirtual #81
265: ldc           #41
267: invokevirtual #42
270: invokevirtual #45
273: iload         11
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #47
286: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 8449
End line: 8474
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = cMAESOptimizer25.getConvergenceChecker();
        int int28 = cMAESOptimizer25.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #650
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #53
155: astore        11
157: aload         9
159: invokevirtual #125
162: istore        12
164: aload_1
165: invokestatic  #16
168: aload_1
169: invokestatic  #17
172: ldc           #26
174: invokestatic  #19
177: aload_2
178: invokestatic  #16
181: aload         4
183: invokestatic  #16
186: aload         4
188: invokestatic  #17
191: ldc           #26
193: invokestatic  #19
196: new           #39
199: dup
200: invokespecial #40
203: ldc           #41
205: invokevirtual #42
208: dload         6
210: invokevirtual #121
213: ldc           #44
215: invokevirtual #42
218: ldc2_w        #282
221: invokevirtual #121
224: ldc           #41
226: invokevirtual #42
229: invokevirtual #45
232: dload         6
234: ldc2_w        #282
237: dcmpl
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #47
249: aload         10
251: invokestatic  #155
254: aload         11
256: invokestatic  #155
259: new           #39
262: dup
263: invokespecial #40
266: ldc           #41
268: invokevirtual #42
271: iload         12
273: invokevirtual #81
276: ldc           #44
278: invokevirtual #42
281: iconst_0
282: invokevirtual #81
285: ldc           #41
287: invokevirtual #42
290: invokevirtual #45
293: iload         12
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #47
306: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 8477
End line: 8494
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType6 = cMAESOptimizer2.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker7 = cMAESOptimizer2.getConvergenceChecker();
        int int8 = cMAESOptimizer2.getEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNull(goalType6);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #651
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #149
59: astore        6
61: aload_2
62: invokevirtual #53
65: astore        7
67: aload_2
68: invokevirtual #69
71: istore        8
73: new           #39
76: dup
77: invokespecial #40
80: ldc           #41
82: invokevirtual #42
85: iload_3
86: invokevirtual #81
89: ldc           #44
91: invokevirtual #42
94: iconst_0
95: invokevirtual #81
98: ldc           #41
100: invokevirtual #42
103: invokevirtual #45
106: iload_3
107: ifne          114
110: iconst_1
111: goto          115
114: iconst_0
115: invokestatic  #47
118: aload         4
120: invokestatic  #16
123: aload         5
125: invokestatic  #16
128: aload         6
130: invokestatic  #155
133: aload         7
135: invokestatic  #16
138: new           #39
141: dup
142: invokespecial #40
145: ldc           #41
147: invokevirtual #42
150: iload         8
152: invokevirtual #81
155: ldc           #44
157: invokevirtual #42
160: iconst_0
161: invokevirtual #81
164: ldc           #41
166: invokevirtual #42
169: invokevirtual #45
172: iload         8
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #47
185: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 8497
End line: 8581
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        double[] doubleArray0 = null;
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray8);
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector10, arrayRealVector19);
        double[] doubleArray29 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray29);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray29);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector31, arrayRealVector40);
        double[] doubleArray48 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = arrayRealVector19.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector50);
        double[] doubleArray53 = arrayRealVector19.toArray();
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.RealMatrix realMatrix62 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray60);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair64 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray60, (double) (-1.0f));
        double double65 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray53, doubleArray60);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.RealMatrix realMatrix67 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray60);
        double[] doubleArray69 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray60, 0.6557942026326724d);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister76 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double77 = mersenneTwister76.nextGaussian();
        int int79 = mersenneTwister76.nextInt((int) (short) 100);
        int[] intArray81 = new int[] { (-127) };
        int[] intArray82 = org.apache.commons.math3.util.MathArrays.copyOf(intArray81);
        int[] intArray84 = new int[] { (-127) };
        int[] intArray85 = org.apache.commons.math3.util.MathArrays.copyOf(intArray84);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister86 = new org.apache.commons.math3.random.MersenneTwister(intArray84);
        double double87 = org.apache.commons.math3.util.MathArrays.distance(intArray81, intArray84);
        mersenneTwister76.setSeed(intArray84);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker90 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        double double91 = simpleValueChecker90.getRelativeThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray69, (-127), 0.0d, true, (int) (byte) 100, (int) (short) 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister76, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker90);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray0, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix62);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 20204.0d + "'", double65 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.7023867716137234d) + "'", double77 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 31 + "'", int79 == 31);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-127]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-127]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-127]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-127]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.1102230246251565E-14d + "'", double91 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #652
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: bipush        6
29: newarray       double
31: dup
32: iconst_0
33: dconst_0
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #10
40: dastore
41: dup
42: iconst_2
43: dconst_1
44: dastore
45: dup
46: iconst_3
47: dconst_0
48: dastore
49: dup
50: iconst_4
51: dconst_1
52: dastore
53: dup
54: iconst_5
55: ldc2_w        #21
58: dastore
59: astore_2
60: aload_2
61: invokestatic  #23
64: new           #96
67: dup
68: aload_2
69: invokespecial #97
72: astore_3
73: bipush        6
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #10
86: dastore
87: dup
88: iconst_2
89: dconst_1
90: dastore
91: dup
92: iconst_3
93: dconst_0
94: dastore
95: dup
96: iconst_4
97: dconst_1
98: dastore
99: dup
100: iconst_5
101: ldc2_w        #21
104: dastore
105: astore        4
107: aload         4
109: invokestatic  #23
112: new           #96
115: dup
116: aload         4
118: invokespecial #97
121: astore        5
123: new           #96
126: dup
127: aload_3
128: aload         5
130: invokespecial #99
133: astore        6
135: bipush        6
137: newarray       double
139: dup
140: iconst_0
141: dconst_0
142: dastore
143: dup
144: iconst_1
145: ldc2_w        #10
148: dastore
149: dup
150: iconst_2
151: dconst_1
152: dastore
153: dup
154: iconst_3
155: dconst_0
156: dastore
157: dup
158: iconst_4
159: dconst_1
160: dastore
161: dup
162: iconst_5
163: ldc2_w        #21
166: dastore
167: astore        7
169: aload         7
171: invokestatic  #23
174: new           #96
177: dup
178: aload         7
180: invokespecial #97
183: astore        8
185: bipush        6
187: newarray       double
189: dup
190: iconst_0
191: dconst_0
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #10
198: dastore
199: dup
200: iconst_2
201: dconst_1
202: dastore
203: dup
204: iconst_3
205: dconst_0
206: dastore
207: dup
208: iconst_4
209: dconst_1
210: dastore
211: dup
212: iconst_5
213: ldc2_w        #21
216: dastore
217: astore        9
219: aload         9
221: invokestatic  #23
224: new           #96
227: dup
228: aload         9
230: invokespecial #97
233: astore        10
235: new           #96
238: dup
239: aload         8
241: aload         10
243: invokespecial #99
246: astore        11
248: bipush        6
250: newarray       double
252: dup
253: iconst_0
254: dconst_0
255: dastore
256: dup
257: iconst_1
258: ldc2_w        #10
261: dastore
262: dup
263: iconst_2
264: dconst_1
265: dastore
266: dup
267: iconst_3
268: dconst_0
269: dastore
270: dup
271: iconst_4
272: dconst_1
273: dastore
274: dup
275: iconst_5
276: ldc2_w        #21
279: dastore
280: astore        12
282: aload         12
284: invokestatic  #23
287: new           #96
290: dup
291: aload         12
293: invokespecial #97
296: astore        13
298: new           #96
301: dup
302: aload         10
304: aload         13
306: invokespecial #99
309: astore        14
311: aload         5
313: dconst_1
314: dconst_1
315: aload         13
317: invokevirtual #100
320: astore        15
322: aload         5
324: invokevirtual #101
327: astore        16
329: bipush        6
331: newarray       double
333: dup
334: iconst_0
335: dconst_0
336: dastore
337: dup
338: iconst_1
339: ldc2_w        #10
342: dastore
343: dup
344: iconst_2
345: dconst_1
346: dastore
347: dup
348: iconst_3
349: dconst_0
350: dastore
351: dup
352: iconst_4
353: dconst_1
354: dastore
355: dup
356: iconst_5
357: ldc2_w        #21
360: dastore
361: astore        17
363: aload         17
365: invokestatic  #23
368: aload         17
370: invokestatic  #24
373: astore        18
375: new           #58
378: dup
379: aload         17
381: ldc2_w        #59
384: invokespecial #61
387: astore        19
389: aload         16
391: aload         17
393: invokestatic  #206
396: dstore        20
398: aload         17
400: invokestatic  #23
403: aload         17
405: invokestatic  #207
408: astore        22
410: aload         17
412: ldc2_w        #208
415: invokestatic  #210
418: astore        23
420: new           #32
423: dup
424: iconst_1
425: invokespecial #33
428: astore        24
430: aload         24
432: invokevirtual #168
435: dstore        25
437: aload         24
439: bipush        100
441: invokevirtual #225
444: istore        27
446: iconst_1
447: newarray       int
449: dup
450: iconst_0
451: bipush        -127
453: iastore
454: astore        28
456: aload         28
458: invokestatic  #226
461: astore        29
463: iconst_1
464: newarray       int
466: dup
467: iconst_0
468: bipush        -127
470: iastore
471: astore        30
473: aload         30
475: invokestatic  #226
478: astore        31
480: new           #32
483: dup
484: aload         30
486: invokespecial #112
489: astore        32
491: aload         28
493: aload         30
495: invokestatic  #227
498: dstore        33
500: aload         24
502: aload         30
504: invokevirtual #228
507: new           #34
510: dup
511: invokespecial #35
514: astore        35
516: aload         35
518: invokevirtual #162
521: dstore        36
523: new           #8
526: dup
527: sipush        30000
530: aload         23
532: bipush        -127
534: dconst_0
535: iconst_1
536: bipush        100
538: iconst_0
539: aload         24
541: iconst_0
542: aload         35
544: invokespecial #36
547: astore        38
549: aload_1
550: aload         23
552: invokestatic  #206
555: dstore        39
557: ldc           #29
559: invokestatic  #14
562: goto          567
565: astore        39
567: aload_2
568: invokestatic  #16
571: aload_2
572: invokestatic  #17
575: ldc           #26
577: invokestatic  #19
580: aload         4
582: invokestatic  #16
585: aload         4
587: invokestatic  #17
590: ldc           #26
592: invokestatic  #19
595: aload         7
597: invokestatic  #16
600: aload         7
602: invokestatic  #17
605: ldc           #26
607: invokestatic  #19
610: aload         9
612: invokestatic  #16
615: aload         9
617: invokestatic  #17
620: ldc           #26
622: invokestatic  #19
625: aload         12
627: invokestatic  #16
630: aload         12
632: invokestatic  #17
635: ldc           #26
637: invokestatic  #19
640: aload         15
642: invokestatic  #16
645: aload         16
647: invokestatic  #16
650: aload         16
652: invokestatic  #17
655: ldc           #105
657: invokestatic  #19
660: aload         17
662: invokestatic  #16
665: aload         17
667: invokestatic  #17
670: ldc           #26
672: invokestatic  #19
675: aload         18
677: invokestatic  #16
680: new           #39
683: dup
684: invokespecial #40
687: ldc           #41
689: invokevirtual #42
692: dload         20
694: invokevirtual #121
697: ldc           #44
699: invokevirtual #42
702: ldc2_w        #212
705: invokevirtual #121
708: ldc           #41
710: invokevirtual #42
713: invokevirtual #45
716: dload         20
718: ldc2_w        #212
721: dcmpl
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #47
733: aload         22
735: invokestatic  #16
738: aload         23
740: invokestatic  #16
743: aload         23
745: invokestatic  #17
748: ldc           #214
750: invokestatic  #19
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: dload         25
767: invokevirtual #121
770: ldc           #44
772: invokevirtual #42
775: ldc2_w        #74
778: invokevirtual #121
781: ldc           #41
783: invokevirtual #42
786: invokevirtual #45
789: dload         25
791: ldc2_w        #74
794: dcmpl
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #47
806: new           #39
809: dup
810: invokespecial #40
813: ldc           #41
815: invokevirtual #42
818: iload         27
820: invokevirtual #81
823: ldc           #44
825: invokevirtual #42
828: bipush        31
830: invokevirtual #81
833: ldc           #41
835: invokevirtual #42
838: invokevirtual #45
841: iload         27
843: bipush        31
845: if_icmpne     852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #47
856: aload         28
858: invokestatic  #16
861: aload         28
863: invokestatic  #117
866: ldc           #229
868: invokestatic  #19
871: aload         29
873: invokestatic  #16
876: aload         29
878: invokestatic  #117
881: ldc           #229
883: invokestatic  #19
886: aload         30
888: invokestatic  #16
891: aload         30
893: invokestatic  #117
896: ldc           #229
898: invokestatic  #19
901: aload         31
903: invokestatic  #16
906: aload         31
908: invokestatic  #117
911: ldc           #229
913: invokestatic  #19
916: new           #39
919: dup
920: invokespecial #40
923: ldc           #41
925: invokevirtual #42
928: dload         33
930: invokevirtual #121
933: ldc           #44
935: invokevirtual #42
938: dconst_0
939: invokevirtual #121
942: ldc           #41
944: invokevirtual #42
947: invokevirtual #45
950: dload         33
952: dconst_0
953: dcmpl
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #47
965: new           #39
968: dup
969: invokespecial #40
972: ldc           #41
974: invokevirtual #42
977: dload         36
979: invokevirtual #121
982: ldc           #44
984: invokevirtual #42
987: ldc2_w        #163
990: invokevirtual #121
993: ldc           #41
995: invokevirtual #42
998: invokevirtual #45
1001: dload         36
1003: ldc2_w        #163
1006: dcmpl
1007: ifne          1014
1010: iconst_1
1011: goto          1015
1014: iconst_0
1015: invokestatic  #47
1018: return
Exception table:
from    to  target type
549   562   565   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 8584
End line: 8608
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer18.getGoalType();
        int int25 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
        org.junit.Assert.assertNull(goalType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #653
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         4
137: invokevirtual #149
140: astore        10
142: aload         4
144: invokevirtual #125
147: istore        11
149: aload_1
150: invokestatic  #16
153: aload_1
154: invokestatic  #17
157: ldc           #26
159: invokestatic  #19
162: aload         5
164: invokestatic  #16
167: aload         6
169: invokestatic  #16
172: new           #39
175: dup
176: invokespecial #40
179: ldc           #41
181: invokevirtual #42
184: iload         7
186: invokevirtual #81
189: ldc           #44
191: invokevirtual #42
194: iconst_0
195: invokevirtual #81
198: ldc           #41
200: invokevirtual #42
203: invokevirtual #45
206: iload         7
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #47
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         8
233: invokevirtual #81
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #81
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         8
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #47
266: aload         9
268: invokestatic  #16
271: aload         10
273: invokestatic  #155
276: new           #39
279: dup
280: invokespecial #40
283: ldc           #41
285: invokevirtual #42
288: iload         11
290: invokevirtual #81
293: ldc           #44
295: invokevirtual #42
298: iconst_0
299: invokevirtual #81
302: ldc           #41
304: invokevirtual #42
307: invokevirtual #45
310: iload         11
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #47
323: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 8611
End line: 8631
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(doubleList23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #654
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #130
133: astore        9
135: aload_1
136: invokestatic  #16
139: aload_1
140: invokestatic  #17
143: ldc           #26
145: invokestatic  #19
148: aload         5
150: invokestatic  #16
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         6
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         6
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: aload         7
202: invokestatic  #16
205: aload         8
207: invokestatic  #16
210: aload         9
212: invokestatic  #16
215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 8634
End line: 8706
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        double[] doubleArray1 = new double[] { '4' };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math3.util.MathArrays.equals(doubleArray1, doubleArray2);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection7 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException9 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection7, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection10 = nonMonotonicSequenceException9.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray1, orderDirection10, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray1);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix13, 0);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition17 = new org.apache.commons.math3.linear.EigenDecomposition(realMatrix13, 2.449489742783178d);
        double double18 = eigenDecomposition17.getDeterminant();
        boolean boolean19 = eigenDecomposition17.hasComplexEigenvalues();
        double[] doubleArray20 = eigenDecomposition17.getImagEigenvalues();
        double[] doubleArray21 = eigenDecomposition17.getRealEigenvalues();
        double[] doubleArray29 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray29);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray29);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector31, arrayRealVector40);
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray50);
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector52, arrayRealVector61);
        double[] doubleArray69 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector61, arrayRealVector71);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector73 = arrayRealVector40.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector71);
        double[] doubleArray74 = arrayRealVector40.toArray();
        double double75 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray74);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair77 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray74, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray74);
        double[] doubleArray80 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray74, 30.012577183478914d);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition81 = new org.apache.commons.math3.linear.EigenDecomposition(doubleArray21, doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + orderDirection7 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection7.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection10 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection10.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0174121811342d + "'", double75 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #655
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: getstatic     #73
48: astore        4
50: new           #67
53: dup
54: ldc2_w        #74
57: invokestatic  #76
60: iconst_1
61: invokestatic  #77
64: bipush        100
66: aload         4
68: iconst_1
69: invokespecial #78
72: astore        5
74: aload         5
76: invokevirtual #79
79: astore        6
81: aload_1
82: aload         6
84: iconst_1
85: invokestatic  #80
88: aload_1
89: invokestatic  #24
92: astore        7
94: aload         7
96: iconst_0
97: invokestatic  #496
100: new           #497
103: dup
104: aload         7
106: ldc2_w        #498
109: invokespecial #500
112: astore        8
114: aload         8
116: invokevirtual #656
119: dstore        9
121: aload         8
123: invokevirtual #657
126: istore        11
128: aload         8
130: invokevirtual #642
133: astore        12
135: aload         8
137: invokevirtual #501
140: astore        13
142: bipush        6
144: newarray       double
146: dup
147: iconst_0
148: dconst_0
149: dastore
150: dup
151: iconst_1
152: ldc2_w        #10
155: dastore
156: dup
157: iconst_2
158: dconst_1
159: dastore
160: dup
161: iconst_3
162: dconst_0
163: dastore
164: dup
165: iconst_4
166: dconst_1
167: dastore
168: dup
169: iconst_5
170: ldc2_w        #21
173: dastore
174: astore        14
176: aload         14
178: invokestatic  #23
181: new           #96
184: dup
185: aload         14
187: invokespecial #97
190: astore        15
192: bipush        6
194: newarray       double
196: dup
197: iconst_0
198: dconst_0
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #10
205: dastore
206: dup
207: iconst_2
208: dconst_1
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: ldc2_w        #21
223: dastore
224: astore        16
226: aload         16
228: invokestatic  #23
231: new           #96
234: dup
235: aload         16
237: invokespecial #97
240: astore        17
242: new           #96
245: dup
246: aload         15
248: aload         17
250: invokespecial #99
253: astore        18
255: bipush        6
257: newarray       double
259: dup
260: iconst_0
261: dconst_0
262: dastore
263: dup
264: iconst_1
265: ldc2_w        #10
268: dastore
269: dup
270: iconst_2
271: dconst_1
272: dastore
273: dup
274: iconst_3
275: dconst_0
276: dastore
277: dup
278: iconst_4
279: dconst_1
280: dastore
281: dup
282: iconst_5
283: ldc2_w        #21
286: dastore
287: astore        19
289: aload         19
291: invokestatic  #23
294: new           #96
297: dup
298: aload         19
300: invokespecial #97
303: astore        20
305: bipush        6
307: newarray       double
309: dup
310: iconst_0
311: dconst_0
312: dastore
313: dup
314: iconst_1
315: ldc2_w        #10
318: dastore
319: dup
320: iconst_2
321: dconst_1
322: dastore
323: dup
324: iconst_3
325: dconst_0
326: dastore
327: dup
328: iconst_4
329: dconst_1
330: dastore
331: dup
332: iconst_5
333: ldc2_w        #21
336: dastore
337: astore        21
339: aload         21
341: invokestatic  #23
344: new           #96
347: dup
348: aload         21
350: invokespecial #97
353: astore        22
355: new           #96
358: dup
359: aload         20
361: aload         22
363: invokespecial #99
366: astore        23
368: bipush        6
370: newarray       double
372: dup
373: iconst_0
374: dconst_0
375: dastore
376: dup
377: iconst_1
378: ldc2_w        #10
381: dastore
382: dup
383: iconst_2
384: dconst_1
385: dastore
386: dup
387: iconst_3
388: dconst_0
389: dastore
390: dup
391: iconst_4
392: dconst_1
393: dastore
394: dup
395: iconst_5
396: ldc2_w        #21
399: dastore
400: astore        24
402: aload         24
404: invokestatic  #23
407: new           #96
410: dup
411: aload         24
413: invokespecial #97
416: astore        25
418: new           #96
421: dup
422: aload         22
424: aload         25
426: invokespecial #99
429: astore        26
431: aload         17
433: dconst_1
434: dconst_1
435: aload         25
437: invokevirtual #100
440: astore        27
442: aload         17
444: invokevirtual #101
447: astore        28
449: aload         28
451: invokestatic  #135
454: dstore        29
456: new           #107
459: dup
460: aload         28
462: ldc2_w        #143
465: invokestatic  #76
468: invokespecial #110
471: astore        31
473: new           #8
476: dup
477: bipush        -127
479: aload         28
481: invokespecial #9
484: astore        32
486: aload         28
488: ldc2_w        #387
491: invokestatic  #210
494: astore        33
496: new           #497
499: dup
500: aload         13
502: aload         33
504: invokespecial #645
507: astore        34
509: aload_1
510: invokestatic  #16
513: aload_1
514: invokestatic  #17
517: ldc           #82
519: invokestatic  #19
522: aload_2
523: invokestatic  #16
526: aload_2
527: invokestatic  #17
530: ldc           #83
532: invokestatic  #19
535: new           #39
538: dup
539: invokespecial #40
542: ldc           #41
544: invokevirtual #42
547: iload_3
548: invokevirtual #84
551: ldc           #44
553: invokevirtual #42
556: iconst_0
557: invokevirtual #84
560: ldc           #41
562: invokevirtual #42
565: invokevirtual #45
568: iload_3
569: ifne          576
572: iconst_1
573: goto          577
576: iconst_0
577: invokestatic  #47
580: new           #39
583: dup
584: invokespecial #40
587: ldc           #41
589: invokevirtual #42
592: aload         4
594: invokevirtual #43
597: ldc           #44
599: invokevirtual #42
602: getstatic     #73
605: invokevirtual #43
608: ldc           #41
610: invokevirtual #42
613: invokevirtual #45
616: aload         4
618: getstatic     #73
621: invokevirtual #85
624: invokestatic  #47
627: new           #39
630: dup
631: invokespecial #40
634: ldc           #41
636: invokevirtual #42
639: aload         6
641: invokevirtual #43
644: ldc           #44
646: invokevirtual #42
649: getstatic     #73
652: invokevirtual #43
655: ldc           #41
657: invokevirtual #42
660: invokevirtual #45
663: aload         6
665: getstatic     #73
668: invokevirtual #85
671: invokestatic  #47
674: aload         7
676: invokestatic  #16
679: new           #39
682: dup
683: invokespecial #40
686: ldc           #41
688: invokevirtual #42
691: dload         9
693: invokevirtual #121
696: ldc           #44
698: invokevirtual #42
701: ldc2_w        #70
704: invokevirtual #121
707: ldc           #41
709: invokevirtual #42
712: invokevirtual #45
715: dload         9
717: ldc2_w        #70
720: dcmpl
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #47
732: new           #39
735: dup
736: invokespecial #40
739: ldc           #41
741: invokevirtual #42
744: iload         11
746: invokevirtual #84
749: ldc           #44
751: invokevirtual #42
754: iconst_0
755: invokevirtual #84
758: ldc           #41
760: invokevirtual #42
763: invokevirtual #45
766: iload         11
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #47
779: aload         12
781: invokestatic  #16
784: aload         12
786: invokestatic  #17
789: ldc_w         #646
792: invokestatic  #19
795: aload         13
797: invokestatic  #16
800: aload         13
802: invokestatic  #17
805: ldc           #82
807: invokestatic  #19
810: aload         14
812: invokestatic  #16
815: aload         14
817: invokestatic  #17
820: ldc           #26
822: invokestatic  #19
825: aload         16
827: invokestatic  #16
830: aload         16
832: invokestatic  #17
835: ldc           #26
837: invokestatic  #19
840: aload         19
842: invokestatic  #16
845: aload         19
847: invokestatic  #17
850: ldc           #26
852: invokestatic  #19
855: aload         21
857: invokestatic  #16
860: aload         21
862: invokestatic  #17
865: ldc           #26
867: invokestatic  #19
870: aload         24
872: invokestatic  #16
875: aload         24
877: invokestatic  #17
880: ldc           #26
882: invokestatic  #19
885: aload         27
887: invokestatic  #16
890: aload         28
892: invokestatic  #16
895: aload         28
897: invokestatic  #17
900: ldc           #105
902: invokestatic  #19
905: new           #39
908: dup
909: invokespecial #40
912: ldc           #41
914: invokevirtual #42
917: dload         29
919: invokevirtual #121
922: ldc           #44
924: invokevirtual #42
927: ldc2_w        #145
930: invokevirtual #121
933: ldc           #41
935: invokevirtual #42
938: invokevirtual #45
941: dload         29
943: ldc2_w        #145
946: dcmpl
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #47
958: aload         33
960: invokestatic  #16
963: aload         33
965: invokestatic  #17
968: ldc_w         #390
971: invokestatic  #19
974: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 8709
End line: 8766
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector(realVector11);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector21.copy();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector21.mapDivide((double) (-1.0f));
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray31);
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(realVector35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = arrayRealVector21.add(realVector35);
        double double38 = arrayRealVector12.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector21);
        double[] doubleArray41 = new double[] { '4' };
        double[] doubleArray42 = new double[] {};
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray42);
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.RealMatrix realMatrix52 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray41, doubleArray50);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray41, doubleArray60);
        arrayRealVector12.setSubVector(0, doubleArray60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(32, doubleArray60);
        int int65 = cMAESOptimizer64.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10102.0d + "'", double38 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #658
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: iconst_1
242: newarray       double
244: dup
245: iconst_0
246: ldc2_w        #70
249: dastore
250: astore        16
252: iconst_0
253: newarray       double
255: astore        17
257: aload         16
259: aload         17
261: invokestatic  #72
264: istore        18
266: bipush        6
268: newarray       double
270: dup
271: iconst_0
272: dconst_0
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #10
279: dastore
280: dup
281: iconst_2
282: dconst_1
283: dastore
284: dup
285: iconst_3
286: dconst_0
287: dastore
288: dup
289: iconst_4
290: dconst_1
291: dastore
292: dup
293: iconst_5
294: ldc2_w        #21
297: dastore
298: astore        19
300: aload         19
302: invokestatic  #23
305: aload         19
307: invokestatic  #24
310: astore        20
312: new           #96
315: dup
316: aload         16
318: aload         19
320: invokespecial #139
323: astore        21
325: bipush        6
327: newarray       double
329: dup
330: iconst_0
331: dconst_0
332: dastore
333: dup
334: iconst_1
335: ldc2_w        #10
338: dastore
339: dup
340: iconst_2
341: dconst_1
342: dastore
343: dup
344: iconst_3
345: dconst_0
346: dastore
347: dup
348: iconst_4
349: dconst_1
350: dastore
351: dup
352: iconst_5
353: ldc2_w        #21
356: dastore
357: astore        22
359: aload         22
361: invokestatic  #23
364: aload         16
366: aload         22
368: invokestatic  #140
371: istore        23
373: aload         4
375: iconst_0
376: aload         22
378: invokevirtual #393
381: new           #8
384: dup
385: bipush        32
387: aload         22
389: invokespecial #9
392: astore        24
394: aload         24
396: invokevirtual #125
399: istore        25
401: aload_1
402: invokestatic  #16
405: aload_1
406: invokestatic  #17
409: ldc           #26
411: invokestatic  #19
414: aload_3
415: invokestatic  #16
418: aload         5
420: invokestatic  #16
423: aload         5
425: invokestatic  #17
428: ldc           #26
430: invokestatic  #19
433: aload         7
435: invokestatic  #16
438: aload         8
440: invokestatic  #16
443: aload         9
445: invokestatic  #16
448: aload         9
450: invokestatic  #17
453: ldc           #26
455: invokestatic  #19
458: aload         11
460: invokestatic  #16
463: aload         13
465: invokestatic  #16
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: dload         14
482: invokevirtual #121
485: ldc           #44
487: invokevirtual #42
490: ldc2_w        #298
493: invokevirtual #121
496: ldc           #41
498: invokevirtual #42
501: invokevirtual #45
504: dload         14
506: ldc2_w        #298
509: dcmpl
510: ifne          517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #47
521: aload         16
523: invokestatic  #16
526: aload         16
528: invokestatic  #17
531: ldc           #82
533: invokestatic  #19
536: aload         17
538: invokestatic  #16
541: aload         17
543: invokestatic  #17
546: ldc           #83
548: invokestatic  #19
551: new           #39
554: dup
555: invokespecial #40
558: ldc           #41
560: invokevirtual #42
563: iload         18
565: invokevirtual #84
568: ldc           #44
570: invokevirtual #42
573: iconst_0
574: invokevirtual #84
577: ldc           #41
579: invokevirtual #42
582: invokevirtual #45
585: iload         18
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #47
598: aload         19
600: invokestatic  #16
603: aload         19
605: invokestatic  #17
608: ldc           #26
610: invokestatic  #19
613: aload         20
615: invokestatic  #16
618: aload         22
620: invokestatic  #16
623: aload         22
625: invokestatic  #17
628: ldc           #26
630: invokestatic  #19
633: new           #39
636: dup
637: invokespecial #40
640: ldc           #41
642: invokevirtual #42
645: iload         23
647: invokevirtual #84
650: ldc           #44
652: invokevirtual #42
655: iconst_0
656: invokevirtual #84
659: ldc           #41
661: invokevirtual #42
664: invokevirtual #45
667: iload         23
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #47
680: new           #39
683: dup
684: invokespecial #40
687: ldc           #41
689: invokevirtual #42
692: iload         25
694: invokevirtual #81
697: ldc           #44
699: invokevirtual #42
702: iconst_0
703: invokevirtual #81
706: ldc           #41
708: invokevirtual #42
711: invokevirtual #45
714: iload         25
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #47
727: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 8769
End line: 8805
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray6, 2.718281828459045d);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker29 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray19, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister27, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker29);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition32 = new org.apache.commons.math3.linear.EigenDecomposition(doubleArray6, doubleArray19, (double) (-18));
        double[] doubleArray34 = new double[] { '4' };
        double[] doubleArray35 = new double[] {};
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(doubleArray34, doubleArray35);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection40 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException42 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection40, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection43 = nonMonotonicSequenceException42.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray34, orderDirection43, true);
        boolean boolean46 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray6, doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + orderDirection40 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection40.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection43 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection43.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #659
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: aload_1
68: invokestatic  #24
71: astore_3
72: new           #58
75: dup
76: aload_1
77: ldc2_w        #581
80: invokespecial #61
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #32
127: dup
128: iconst_1
129: invokespecial #33
132: astore        6
134: new           #34
137: dup
138: invokespecial #35
141: astore        7
143: new           #8
146: dup
147: iconst_5
148: aload         5
150: bipush        100
152: dconst_0
153: iconst_0
154: iconst_0
155: bipush        100
157: aload         6
159: iconst_1
160: aload         7
162: invokespecial #36
165: astore        8
167: new           #497
170: dup
171: aload_1
172: aload         5
174: ldc2_w        #583
177: invokespecial #585
180: astore        9
182: iconst_1
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #70
190: dastore
191: astore        10
193: iconst_0
194: newarray       double
196: astore        11
198: aload         10
200: aload         11
202: invokestatic  #72
205: istore        12
207: getstatic     #73
210: astore        13
212: new           #67
215: dup
216: ldc2_w        #74
219: invokestatic  #76
222: iconst_1
223: invokestatic  #77
226: bipush        100
228: aload         13
230: iconst_1
231: invokespecial #78
234: astore        14
236: aload         14
238: invokevirtual #79
241: astore        15
243: aload         10
245: aload         15
247: iconst_1
248: invokestatic  #80
251: aload_1
252: aload         10
254: invokestatic  #140
257: istore        16
259: aload_1
260: invokestatic  #16
263: aload_1
264: invokestatic  #17
267: ldc           #26
269: invokestatic  #19
272: aload_2
273: invokestatic  #16
276: aload_3
277: invokestatic  #16
280: aload         5
282: invokestatic  #16
285: aload         5
287: invokestatic  #17
290: ldc           #26
292: invokestatic  #19
295: aload         10
297: invokestatic  #16
300: aload         10
302: invokestatic  #17
305: ldc           #82
307: invokestatic  #19
310: aload         11
312: invokestatic  #16
315: aload         11
317: invokestatic  #17
320: ldc           #83
322: invokestatic  #19
325: new           #39
328: dup
329: invokespecial #40
332: ldc           #41
334: invokevirtual #42
337: iload         12
339: invokevirtual #84
342: ldc           #44
344: invokevirtual #42
347: iconst_0
348: invokevirtual #84
351: ldc           #41
353: invokevirtual #42
356: invokevirtual #45
359: iload         12
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #47
372: new           #39
375: dup
376: invokespecial #40
379: ldc           #41
381: invokevirtual #42
384: aload         13
386: invokevirtual #43
389: ldc           #44
391: invokevirtual #42
394: getstatic     #73
397: invokevirtual #43
400: ldc           #41
402: invokevirtual #42
405: invokevirtual #45
408: aload         13
410: getstatic     #73
413: invokevirtual #85
416: invokestatic  #47
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: aload         15
433: invokevirtual #43
436: ldc           #44
438: invokevirtual #42
441: getstatic     #73
444: invokevirtual #43
447: ldc           #41
449: invokevirtual #42
452: invokevirtual #45
455: aload         15
457: getstatic     #73
460: invokevirtual #85
463: invokestatic  #47
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: iload         16
480: invokevirtual #84
483: ldc           #44
485: invokevirtual #42
488: iconst_0
489: invokevirtual #84
492: ldc           #41
494: invokevirtual #42
497: invokevirtual #45
500: iload         16
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #47
513: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 8808
End line: 8852
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        org.apache.commons.math3.optimization.GoalType goalType51 = cMAESOptimizer50.getGoalType();
        org.apache.commons.math3.util.Incrementor incrementor52 = cMAESOptimizer50.evaluations;
        incrementor52.setMaximalCount(1291558011);
        incrementor52.resetCount();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
        org.junit.Assert.assertNull(goalType51);
        org.junit.Assert.assertNotNull(incrementor52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #660
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         19
288: invokevirtual #149
291: astore        20
293: aload         19
295: getfield      #191
298: astore        21
300: aload         21
302: ldc_w         #589
305: invokevirtual #415
308: aload         21
310: invokevirtual #203
313: aload_1
314: invokestatic  #16
317: aload_1
318: invokestatic  #17
321: ldc           #26
323: invokestatic  #19
326: aload_3
327: invokestatic  #16
330: aload         4
332: invokestatic  #16
335: aload         5
337: invokestatic  #16
340: aload         5
342: invokestatic  #17
345: ldc           #26
347: invokestatic  #19
350: aload         7
352: invokestatic  #16
355: aload         9
357: invokestatic  #16
360: aload         10
362: invokestatic  #16
365: aload         10
367: invokestatic  #17
370: ldc           #26
372: invokestatic  #19
375: aload         11
377: invokestatic  #16
380: new           #39
383: dup
384: invokespecial #40
387: ldc           #41
389: invokevirtual #42
392: iload         12
394: invokevirtual #84
397: ldc           #44
399: invokevirtual #42
402: iconst_0
403: invokevirtual #84
406: ldc           #41
408: invokevirtual #42
411: invokevirtual #45
414: iload         12
416: ifne          423
419: iconst_1
420: goto          424
423: iconst_0
424: invokestatic  #47
427: new           #39
430: dup
431: invokespecial #40
434: ldc           #41
436: invokevirtual #42
439: dload         15
441: invokevirtual #121
444: ldc           #44
446: invokevirtual #42
449: ldc2_w        #74
452: invokevirtual #121
455: ldc           #41
457: invokevirtual #42
460: invokevirtual #45
463: dload         15
465: ldc2_w        #74
468: dcmpl
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #47
480: new           #39
483: dup
484: invokespecial #40
487: ldc           #41
489: invokevirtual #42
492: dload         17
494: invokevirtual #121
497: ldc           #44
499: invokevirtual #42
502: ldc2_w        #176
505: invokevirtual #121
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: dload         17
518: ldc2_w        #176
521: dcmpl
522: ifne          529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #47
533: aload         20
535: invokestatic  #155
538: aload         21
540: invokestatic  #16
543: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 8855
End line: 8919
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor24 = cMAESOptimizer18.evaluations;
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction26 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException27 = null;
        org.apache.commons.math3.optimization.GoalType goalType28 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair29 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException27, goalType28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.RealMatrix realMatrix39 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray37);
        int[] intArray49 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister50 = new org.apache.commons.math3.random.MersenneTwister(intArray49);
        float float51 = mersenneTwister50.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker53 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray37, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister50, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker53);
        double[] doubleArray61 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray61);
        org.apache.commons.math3.linear.RealMatrix realMatrix63 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray61);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair65 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray61, (double) (-1.0f));
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray61, true);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair69 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray61, (double) (-1.0f));
        double[] doubleArray74 = new double[] { 10, (-708.3964185322641d), 30000.000000000004d, 0.021822224830581258d };
        org.apache.commons.math3.optimization.PointValuePair pointValuePair76 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray74, (double) (-1.0f));
        double[] doubleArray78 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray74, (double) (-127));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair79 = cMAESOptimizer18.optimize(1291558011, multivariateFunction26, goalType28, doubleArray37, doubleArray61, doubleArray78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.DimensionMismatchException; message: 4 != 6");
        } catch (org.apache.commons.math3.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNotNull(incrementor24);
        org.junit.Assert.assertTrue("'" + goalType28 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType28.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.48016477f + "'", float51 == 0.48016477f);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix63);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, -708.3964185322641, 30000.000000000004, 0.021822224830581258]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.043342305503637886, 3.0703533989708314, -130.02691651091368, -9.458255353761254E-5]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #661
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: getfield      #191
140: astore        10
142: aconst_null
143: astore        11
145: aconst_null
146: astore        12
148: getstatic     #37
151: astore        13
153: new           #107
156: dup
157: aload         12
159: aload         13
161: invokespecial #110
164: astore        14
166: bipush        6
168: newarray       double
170: dup
171: iconst_0
172: dconst_0
173: dastore
174: dup
175: iconst_1
176: ldc2_w        #10
179: dastore
180: dup
181: iconst_2
182: dconst_1
183: dastore
184: dup
185: iconst_3
186: dconst_0
187: dastore
188: dup
189: iconst_4
190: dconst_1
191: dastore
192: dup
193: iconst_5
194: ldc2_w        #21
197: dastore
198: astore        15
200: aload         15
202: invokestatic  #23
205: aload         15
207: invokestatic  #24
210: astore        16
212: iconst_4
213: newarray       int
215: dup
216: iconst_0
217: bipush        100
219: iastore
220: dup
221: iconst_1
222: iconst_0
223: iastore
224: dup
225: iconst_2
226: bipush        100
228: iastore
229: dup
230: iconst_3
231: bipush        52
233: iastore
234: astore        17
236: new           #32
239: dup
240: aload         17
242: invokespecial #112
245: astore        18
247: aload         18
249: invokevirtual #113
252: fstore        19
254: new           #34
257: dup
258: invokespecial #35
261: astore        20
263: new           #8
266: dup
267: bipush        32
269: aload         15
271: iconst_0
272: ldc2_w        #114
275: iconst_1
276: ldc           #38
278: bipush        100
280: aload         18
282: iconst_1
283: aload         20
285: invokespecial #36
288: astore        21
290: bipush        6
292: newarray       double
294: dup
295: iconst_0
296: dconst_0
297: dastore
298: dup
299: iconst_1
300: ldc2_w        #10
303: dastore
304: dup
305: iconst_2
306: dconst_1
307: dastore
308: dup
309: iconst_3
310: dconst_0
311: dastore
312: dup
313: iconst_4
314: dconst_1
315: dastore
316: dup
317: iconst_5
318: ldc2_w        #21
321: dastore
322: astore        22
324: aload         22
326: invokestatic  #23
329: aload         22
331: invokestatic  #24
334: astore        23
336: new           #58
339: dup
340: aload         22
342: ldc2_w        #59
345: invokespecial #61
348: astore        24
350: new           #96
353: dup
354: aload         22
356: iconst_1
357: invokespecial #359
360: astore        25
362: new           #58
365: dup
366: aload         22
368: ldc2_w        #59
371: invokespecial #61
374: astore        26
376: iconst_4
377: newarray       double
379: dup
380: iconst_0
381: ldc2_w        #21
384: dastore
385: dup
386: iconst_1
387: ldc2_w        #632
390: dastore
391: dup
392: iconst_2
393: ldc2_w        #446
396: dastore
397: dup
398: iconst_3
399: ldc2_w        #634
402: dastore
403: astore        27
405: new           #58
408: dup
409: aload         27
411: ldc2_w        #59
414: invokespecial #61
417: astore        28
419: aload         27
421: ldc2_w        #636
424: invokestatic  #210
427: astore        29
429: aload         4
431: ldc_w         #589
434: aload         11
436: aload         13
438: aload         15
440: aload         22
442: aload         29
444: invokevirtual #25
447: astore        30
449: ldc_w         #662
452: invokestatic  #14
455: goto          460
458: astore        30
460: aload_1
461: invokestatic  #16
464: aload_1
465: invokestatic  #17
468: ldc           #26
470: invokestatic  #19
473: aload         5
475: invokestatic  #16
478: new           #39
481: dup
482: invokespecial #40
485: ldc           #41
487: invokevirtual #42
490: iload         6
492: invokevirtual #81
495: ldc           #44
497: invokevirtual #42
500: iconst_0
501: invokevirtual #81
504: ldc           #41
506: invokevirtual #42
509: invokevirtual #45
512: iload         6
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #47
525: aload         7
527: invokestatic  #155
530: aload         8
532: invokestatic  #16
535: aload         9
537: invokestatic  #16
540: aload         10
542: invokestatic  #16
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: aload         13
559: invokevirtual #43
562: ldc           #44
564: invokevirtual #42
567: getstatic     #37
570: invokevirtual #43
573: ldc           #41
575: invokevirtual #42
578: invokevirtual #45
581: aload         13
583: getstatic     #37
586: invokevirtual #46
589: invokestatic  #47
592: aload         15
594: invokestatic  #16
597: aload         15
599: invokestatic  #17
602: ldc           #26
604: invokestatic  #19
607: aload         16
609: invokestatic  #16
612: aload         17
614: invokestatic  #16
617: aload         17
619: invokestatic  #117
622: ldc           #118
624: invokestatic  #19
627: new           #39
630: dup
631: invokespecial #40
634: ldc           #41
636: invokevirtual #42
639: fload         19
641: invokevirtual #119
644: ldc           #44
646: invokevirtual #42
649: ldc           #120
651: invokevirtual #119
654: ldc           #41
656: invokevirtual #42
659: invokevirtual #45
662: fload         19
664: ldc           #120
666: fcmpl
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #47
678: aload         22
680: invokestatic  #16
683: aload         22
685: invokestatic  #17
688: ldc           #26
690: invokestatic  #19
693: aload         23
695: invokestatic  #16
698: aload         27
700: invokestatic  #16
703: aload         27
705: invokestatic  #17
708: ldc_w         #638
711: invokestatic  #19
714: aload         29
716: invokestatic  #16
719: aload         29
721: invokestatic  #17
724: ldc_w         #639
727: invokestatic  #19
730: return
Exception table:
from    to  target type
429   455   458   Class org/apache/commons/math3/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 8922
End line: 8971
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        double[] doubleArray37 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray32, 5);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister43 = new org.apache.commons.math3.random.MersenneTwister();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister45 = new org.apache.commons.math3.random.MersenneTwister(1);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100, (byte) 1 };
        mersenneTwister45.nextBytes(byteArray49);
        mersenneTwister43.nextBytes(byteArray49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-405924742), doubleArray37, (int) (short) 1, 5.916079783099616d, true, 1356265037, 5, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister43, false, pointValuePairConvergenceChecker53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair55 = cMAESOptimizer54.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(byteArray49);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 44, 103]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #663
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: aload         10
219: iconst_5
220: invokestatic  #423
223: astore        13
225: new           #32
228: dup
229: invokespecial #560
232: astore        14
234: new           #32
237: dup
238: iconst_1
239: invokespecial #33
242: astore        15
244: iconst_3
245: newarray       byte
247: dup
248: iconst_0
249: iconst_m1
250: bastore
251: dup
252: iconst_1
253: bipush        100
255: bastore
256: dup
257: iconst_2
258: iconst_1
259: bastore
260: astore        16
262: aload         15
264: aload         16
266: invokevirtual #428
269: aload         14
271: aload         16
273: invokevirtual #428
276: aconst_null
277: astore        17
279: new           #8
282: dup
283: ldc_w         #403
286: aload         13
288: iconst_1
289: ldc2_w        #561
292: iconst_1
293: ldc_w         #563
296: iconst_5
297: aload         14
299: iconst_0
300: aload         17
302: invokespecial #36
305: astore        18
307: aload         18
309: invokevirtual #51
312: astore        19
314: ldc           #29
316: invokestatic  #14
319: goto          324
322: astore        19
324: aload_1
325: invokestatic  #16
328: aload_1
329: invokestatic  #17
332: ldc           #26
334: invokestatic  #19
337: aload_3
338: invokestatic  #16
341: aload         4
343: invokestatic  #16
346: aload         5
348: invokestatic  #16
351: aload         5
353: invokestatic  #17
356: ldc           #26
358: invokestatic  #19
361: aload         7
363: invokestatic  #16
366: aload         9
368: invokestatic  #16
371: aload         10
373: invokestatic  #16
376: aload         10
378: invokestatic  #17
381: ldc           #26
383: invokestatic  #19
386: aload         11
388: invokestatic  #16
391: new           #39
394: dup
395: invokespecial #40
398: ldc           #41
400: invokevirtual #42
403: iload         12
405: invokevirtual #84
408: ldc           #44
410: invokevirtual #42
413: iconst_0
414: invokevirtual #84
417: ldc           #41
419: invokevirtual #42
422: invokevirtual #45
425: iload         12
427: ifne          434
430: iconst_1
431: goto          435
434: iconst_0
435: invokestatic  #47
438: aload         13
440: invokestatic  #16
443: aload         13
445: invokestatic  #17
448: ldc_w         #425
451: invokestatic  #19
454: aload         16
456: invokestatic  #16
459: return
Exception table:
from    to  target type
307   319   322   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 8974
End line: 9002
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer25.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray27 = cMAESOptimizer25.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #664
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: aload         9
145: invokevirtual #53
148: astore        10
150: aload         9
152: invokevirtual #28
155: astore        11
157: ldc           #29
159: invokestatic  #14
162: goto          167
165: astore        11
167: aload_1
168: invokestatic  #16
171: aload_1
172: invokestatic  #17
175: ldc           #26
177: invokestatic  #19
180: aload_2
181: invokestatic  #16
184: aload         4
186: invokestatic  #16
189: aload         4
191: invokestatic  #17
194: ldc           #26
196: invokestatic  #19
199: new           #39
202: dup
203: invokespecial #40
206: ldc           #41
208: invokevirtual #42
211: dload         6
213: invokevirtual #121
216: ldc           #44
218: invokevirtual #42
221: ldc2_w        #282
224: invokevirtual #121
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: dload         6
237: ldc2_w        #282
240: dcmpl
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #47
252: aload         10
254: invokestatic  #155
257: return
Exception table:
from    to  target type
150   162   165   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 9005
End line: 9045
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        long long51 = mersenneTwister44.nextLong();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-4218389569722409859L) + "'", long51 == (-4218389569722409859L));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #665
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         14
288: invokevirtual #461
291: lstore        20
293: aload_1
294: invokestatic  #16
297: aload_1
298: invokestatic  #17
301: ldc           #26
303: invokestatic  #19
306: aload_3
307: invokestatic  #16
310: aload         4
312: invokestatic  #16
315: aload         5
317: invokestatic  #16
320: aload         5
322: invokestatic  #17
325: ldc           #26
327: invokestatic  #19
330: aload         7
332: invokestatic  #16
335: aload         9
337: invokestatic  #16
340: aload         10
342: invokestatic  #16
345: aload         10
347: invokestatic  #17
350: ldc           #26
352: invokestatic  #19
355: aload         11
357: invokestatic  #16
360: new           #39
363: dup
364: invokespecial #40
367: ldc           #41
369: invokevirtual #42
372: iload         12
374: invokevirtual #84
377: ldc           #44
379: invokevirtual #42
382: iconst_0
383: invokevirtual #84
386: ldc           #41
388: invokevirtual #42
391: invokevirtual #45
394: iload         12
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #47
407: new           #39
410: dup
411: invokespecial #40
414: ldc           #41
416: invokevirtual #42
419: dload         15
421: invokevirtual #121
424: ldc           #44
426: invokevirtual #42
429: ldc2_w        #74
432: invokevirtual #121
435: ldc           #41
437: invokevirtual #42
440: invokevirtual #45
443: dload         15
445: ldc2_w        #74
448: dcmpl
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #47
460: new           #39
463: dup
464: invokespecial #40
467: ldc           #41
469: invokevirtual #42
472: dload         17
474: invokevirtual #121
477: ldc           #44
479: invokevirtual #42
482: ldc2_w        #176
485: invokevirtual #121
488: ldc           #41
490: invokevirtual #42
493: invokevirtual #45
496: dload         17
498: ldc2_w        #176
501: dcmpl
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #47
513: new           #39
516: dup
517: invokespecial #40
520: ldc           #41
522: invokevirtual #42
525: lload         20
527: invokevirtual #462
530: ldc           #44
532: invokevirtual #42
535: ldc2_w        #666
538: invokevirtual #462
541: ldc           #41
543: invokevirtual #42
546: invokevirtual #45
549: lload         20
551: ldc2_w        #666
554: lcmp
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #47
566: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 9048
End line: 9069
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        double[] doubleArray9 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray9);
        org.apache.commons.math3.linear.RealMatrix realMatrix11 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray9);
        int[] intArray21 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister22 = new org.apache.commons.math3.random.MersenneTwister(intArray21);
        float float23 = mersenneTwister22.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister22, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        int int29 = cMAESOptimizer28.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.48016477f + "'", float23 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #668
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: new           #8
156: dup
157: iconst_0
158: aload_1
159: invokespecial #9
162: astore        9
164: aload         9
166: invokevirtual #125
169: istore        10
171: aload_1
172: invokestatic  #16
175: aload_1
176: invokestatic  #17
179: ldc           #26
181: invokestatic  #19
184: aload_2
185: invokestatic  #16
188: aload_3
189: invokestatic  #16
192: aload_3
193: invokestatic  #117
196: ldc           #118
198: invokestatic  #19
201: new           #39
204: dup
205: invokespecial #40
208: ldc           #41
210: invokevirtual #42
213: fload         5
215: invokevirtual #119
218: ldc           #44
220: invokevirtual #42
223: ldc           #120
225: invokevirtual #119
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: fload         5
238: ldc           #120
240: fcmpl
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #47
252: new           #39
255: dup
256: invokespecial #40
259: ldc           #41
261: invokevirtual #42
264: iload         10
266: invokevirtual #81
269: ldc           #44
271: invokevirtual #42
274: iconst_0
275: invokevirtual #81
278: ldc           #41
280: invokevirtual #42
283: invokevirtual #45
286: iload         10
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #47
299: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 9072
End line: 9079
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(35, doubleArray1);
        org.apache.commons.math3.util.Incrementor incrementor3 = cMAESOptimizer2.evaluations;
        org.junit.Assert.assertNotNull(incrementor3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #669
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        35
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: getfield      #191
42: astore_3
43: aload_3
44: invokestatic  #16
47: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 9082
End line: 9088
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(6);
        org.apache.commons.math3.util.Incrementor incrementor2 = cMAESOptimizer1.evaluations;
        org.junit.Assert.assertNotNull(incrementor2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #670
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        6
31: invokespecial #245
34: astore_1
35: aload_1
36: getfield      #191
39: astore_2
40: aload_2
41: invokestatic  #16
44: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 9091
End line: 9095
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1071382528));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #671
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #571
32: invokespecial #245
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 9098
End line: 9132
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        double[] doubleArray23 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray23);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister31 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker33 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray23, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister31, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        double double35 = simpleValueChecker33.getRelativeThreshold();
        double double36 = simpleValueChecker33.getRelativeThreshold();
        double double37 = simpleValueChecker33.getAbsoluteThreshold();
        double double38 = simpleValueChecker33.getAbsoluteThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray7, 0, (double) 52, false, 13220, 0, randomGenerator14, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVectorChangingVisitor realVectorChangingVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double44 = arrayRealVector40.walkInDefaultOrder(realVectorChangingVisitor41, 0, (-1682431419));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.OutOfRangeException; message: index (-1,682,431,419)");
        } catch (org.apache.commons.math3.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.1102230246251565E-14d + "'", double35 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.1102230246251565E-14d + "'", double36 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.2250738585072014E-306d + "'", double37 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.2250738585072014E-306d + "'", double38 == 2.2250738585072014E-306d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #672
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: getstatic     #481
65: astore_2
66: bipush        6
68: newarray       double
70: dup
71: iconst_0
72: dconst_0
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #10
79: dastore
80: dup
81: iconst_2
82: dconst_1
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #21
97: dastore
98: astore_3
99: aload_3
100: invokestatic  #23
103: new           #32
106: dup
107: iconst_1
108: invokespecial #33
111: astore        4
113: new           #34
116: dup
117: invokespecial #35
120: astore        5
122: new           #8
125: dup
126: iconst_5
127: aload_3
128: bipush        100
130: dconst_0
131: iconst_0
132: iconst_0
133: bipush        100
135: aload         4
137: iconst_1
138: aload         5
140: invokespecial #36
143: astore        6
145: aload         5
147: invokevirtual #162
150: dstore        7
152: aload         5
154: invokevirtual #162
157: dstore        9
159: aload         5
161: invokevirtual #116
164: dstore        11
166: aload         5
168: invokevirtual #116
171: dstore        13
173: new           #8
176: dup
177: bipush        100
179: aload_1
180: iconst_0
181: ldc2_w        #70
184: iconst_0
185: sipush        13220
188: iconst_0
189: aload_2
190: iconst_0
191: aload         5
193: invokespecial #36
196: astore        15
198: new           #96
201: dup
202: aload_1
203: invokespecial #97
206: astore        16
208: aconst_null
209: astore        17
211: aload         16
213: aload         17
215: iconst_0
216: ldc_w         #489
219: invokevirtual #673
222: dstore        18
224: ldc_w         #674
227: invokestatic  #14
230: goto          235
233: astore        18
235: aload_1
236: invokestatic  #16
239: aload_1
240: invokestatic  #17
243: ldc           #26
245: invokestatic  #19
248: aload_2
249: invokestatic  #16
252: aload_3
253: invokestatic  #16
256: aload_3
257: invokestatic  #17
260: ldc           #26
262: invokestatic  #19
265: new           #39
268: dup
269: invokespecial #40
272: ldc           #41
274: invokevirtual #42
277: dload         7
279: invokevirtual #121
282: ldc           #44
284: invokevirtual #42
287: ldc2_w        #163
290: invokevirtual #121
293: ldc           #41
295: invokevirtual #42
298: invokevirtual #45
301: dload         7
303: ldc2_w        #163
306: dcmpl
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #47
318: new           #39
321: dup
322: invokespecial #40
325: ldc           #41
327: invokevirtual #42
330: dload         9
332: invokevirtual #121
335: ldc           #44
337: invokevirtual #42
340: ldc2_w        #163
343: invokevirtual #121
346: ldc           #41
348: invokevirtual #42
351: invokevirtual #45
354: dload         9
356: ldc2_w        #163
359: dcmpl
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #47
371: new           #39
374: dup
375: invokespecial #40
378: ldc           #41
380: invokevirtual #42
383: dload         11
385: invokevirtual #121
388: ldc           #44
390: invokevirtual #42
393: ldc2_w        #122
396: invokevirtual #121
399: ldc           #41
401: invokevirtual #42
404: invokevirtual #45
407: dload         11
409: ldc2_w        #122
412: dcmpl
413: ifne          420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #47
424: new           #39
427: dup
428: invokespecial #40
431: ldc           #41
433: invokevirtual #42
436: dload         13
438: invokevirtual #121
441: ldc           #44
443: invokevirtual #42
446: ldc2_w        #122
449: invokevirtual #121
452: ldc           #41
454: invokevirtual #42
457: invokevirtual #45
460: dload         13
462: ldc2_w        #122
465: dcmpl
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #47
477: return
Exception table:
from    to  target type
211   230   233   Class org/apache/commons/math3/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 9135
End line: 9189
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.math3.random.MersenneTwister mersenneTwister1 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double2 = mersenneTwister1.nextGaussian();
        mersenneTwister1.setSeed(0L);
        mersenneTwister1.clear();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister7 = new org.apache.commons.math3.random.MersenneTwister(1);
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100, (byte) 1 };
        mersenneTwister7.nextBytes(byteArray11);
        mersenneTwister1.nextBytes(byteArray11);
        double[] doubleArray21 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray21);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister29 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker31 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray21, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister29, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker31);
        int[] intArray37 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(intArray37);
        int[] intArray39 = org.apache.commons.math3.util.MathArrays.copyOf(intArray37);
        int[] intArray44 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister45 = new org.apache.commons.math3.random.MersenneTwister(intArray44);
        int int46 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray39, intArray44);
        mersenneTwister29.setSeed(intArray39);
        mersenneTwister1.setSeed(intArray39);
        int[] intArray49 = new int[] {};
        int[] intArray51 = new int[] { (-127) };
        int[] intArray52 = org.apache.commons.math3.util.MathArrays.copyOf(intArray51);
        int int53 = org.apache.commons.math3.util.MathArrays.distance1(intArray49, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = org.apache.commons.math3.util.MathArrays.distance1(intArray39, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-0.7023867716137234d) + "'", double2 == (-0.7023867716137234d));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-23, 103, -107]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-127]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-127]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #675
20: aastore
21: invokevirtual #7
24: pop
25: new           #32
28: dup
29: iconst_1
30: invokespecial #33
33: astore_1
34: aload_1
35: invokevirtual #168
38: dstore_2
39: aload_1
40: lconst_0
41: invokevirtual #278
44: aload_1
45: invokevirtual #467
48: new           #32
51: dup
52: iconst_1
53: invokespecial #33
56: astore        4
58: iconst_3
59: newarray       byte
61: dup
62: iconst_0
63: iconst_m1
64: bastore
65: dup
66: iconst_1
67: bipush        100
69: bastore
70: dup
71: iconst_2
72: iconst_1
73: bastore
74: astore        5
76: aload         4
78: aload         5
80: invokevirtual #428
83: aload_1
84: aload         5
86: invokevirtual #428
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: dconst_0
96: dastore
97: dup
98: iconst_1
99: ldc2_w        #10
102: dastore
103: dup
104: iconst_2
105: dconst_1
106: dastore
107: dup
108: iconst_3
109: dconst_0
110: dastore
111: dup
112: iconst_4
113: dconst_1
114: dastore
115: dup
116: iconst_5
117: ldc2_w        #21
120: dastore
121: astore        6
123: aload         6
125: invokestatic  #23
128: new           #32
131: dup
132: iconst_1
133: invokespecial #33
136: astore        7
138: new           #34
141: dup
142: invokespecial #35
145: astore        8
147: new           #8
150: dup
151: iconst_5
152: aload         6
154: bipush        100
156: dconst_0
157: iconst_0
158: iconst_0
159: bipush        100
161: aload         7
163: iconst_1
164: aload         8
166: invokespecial #36
169: astore        9
171: iconst_4
172: newarray       int
174: dup
175: iconst_0
176: bipush        100
178: iastore
179: dup
180: iconst_1
181: iconst_0
182: iastore
183: dup
184: iconst_2
185: bipush        100
187: iastore
188: dup
189: iconst_3
190: bipush        52
192: iastore
193: astore        10
195: new           #32
198: dup
199: aload         10
201: invokespecial #112
204: astore        11
206: aload         10
208: invokestatic  #226
211: astore        12
213: iconst_4
214: newarray       int
216: dup
217: iconst_0
218: bipush        100
220: iastore
221: dup
222: iconst_1
223: iconst_0
224: iastore
225: dup
226: iconst_2
227: bipush        100
229: iastore
230: dup
231: iconst_3
232: bipush        52
234: iastore
235: astore        13
237: new           #32
240: dup
241: aload         13
243: invokespecial #112
246: astore        14
248: aload         12
250: aload         13
252: invokestatic  #306
255: istore        15
257: aload         7
259: aload         12
261: invokevirtual #228
264: aload_1
265: aload         12
267: invokevirtual #228
270: iconst_0
271: newarray       int
273: astore        16
275: iconst_1
276: newarray       int
278: dup
279: iconst_0
280: bipush        -127
282: iastore
283: astore        17
285: aload         17
287: invokestatic  #226
290: astore        18
292: aload         16
294: aload         18
296: invokestatic  #429
299: istore        19
301: aload         12
303: aload         18
305: invokestatic  #429
308: istore        20
310: ldc_w         #263
313: invokestatic  #14
316: goto          321
319: astore        20
321: new           #39
324: dup
325: invokespecial #40
328: ldc           #41
330: invokevirtual #42
333: dload_2
334: invokevirtual #121
337: ldc           #44
339: invokevirtual #42
342: ldc2_w        #74
345: invokevirtual #121
348: ldc           #41
350: invokevirtual #42
353: invokevirtual #45
356: dload_2
357: ldc2_w        #74
360: dcmpl
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #47
372: aload         5
374: invokestatic  #16
377: aload         5
379: invokestatic  #430
382: ldc_w         #676
385: invokestatic  #19
388: aload         6
390: invokestatic  #16
393: aload         6
395: invokestatic  #17
398: ldc           #26
400: invokestatic  #19
403: aload         10
405: invokestatic  #16
408: aload         10
410: invokestatic  #117
413: ldc           #118
415: invokestatic  #19
418: aload         12
420: invokestatic  #16
423: aload         12
425: invokestatic  #117
428: ldc           #118
430: invokestatic  #19
433: aload         13
435: invokestatic  #16
438: aload         13
440: invokestatic  #117
443: ldc           #118
445: invokestatic  #19
448: new           #39
451: dup
452: invokespecial #40
455: ldc           #41
457: invokevirtual #42
460: iload         15
462: invokevirtual #81
465: ldc           #44
467: invokevirtual #42
470: iconst_0
471: invokevirtual #81
474: ldc           #41
476: invokevirtual #42
479: invokevirtual #45
482: iload         15
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #47
495: aload         16
497: invokestatic  #16
500: aload         16
502: invokestatic  #117
505: ldc           #83
507: invokestatic  #19
510: aload         17
512: invokestatic  #16
515: aload         17
517: invokestatic  #117
520: ldc           #229
522: invokestatic  #19
525: aload         18
527: invokestatic  #16
530: aload         18
532: invokestatic  #117
535: ldc           #229
537: invokestatic  #19
540: new           #39
543: dup
544: invokespecial #40
547: ldc           #41
549: invokevirtual #42
552: iload         19
554: invokevirtual #81
557: ldc           #44
559: invokevirtual #42
562: iconst_0
563: invokevirtual #81
566: ldc           #41
568: invokevirtual #42
571: invokevirtual #45
574: iload         19
576: ifne          583
579: iconst_1
580: goto          584
583: iconst_0
584: invokestatic  #47
587: return
Exception table:
from    to  target type
301   316   319   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 9192
End line: 9218
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction6 = null;
        org.apache.commons.math3.optimization.GoalType goalType7 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister23 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker25 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray15, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister23, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair27 = cMAESOptimizer2.optimize(1, multivariateFunction6, goalType7, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + goalType7 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType7.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #677
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aconst_null
50: astore        5
52: getstatic     #150
55: astore        6
57: bipush        6
59: newarray       double
61: dup
62: iconst_0
63: dconst_0
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #10
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: dup
76: iconst_3
77: dconst_0
78: dastore
79: dup
80: iconst_4
81: dconst_1
82: dastore
83: dup
84: iconst_5
85: ldc2_w        #21
88: dastore
89: astore        7
91: aload         7
93: invokestatic  #23
96: new           #32
99: dup
100: iconst_1
101: invokespecial #33
104: astore        8
106: new           #34
109: dup
110: invokespecial #35
113: astore        9
115: new           #8
118: dup
119: iconst_5
120: aload         7
122: bipush        100
124: dconst_0
125: iconst_0
126: iconst_0
127: bipush        100
129: aload         8
131: iconst_1
132: aload         9
134: invokespecial #36
137: astore        10
139: aload_2
140: iconst_1
141: aload         5
143: aload         6
145: aload         7
147: invokevirtual #12
150: astore        11
152: ldc           #13
154: invokestatic  #14
157: goto          162
160: astore        11
162: aload_3
163: invokestatic  #16
166: new           #39
169: dup
170: invokespecial #40
173: ldc           #41
175: invokevirtual #42
178: iload         4
180: invokevirtual #81
183: ldc           #44
185: invokevirtual #42
188: iconst_0
189: invokevirtual #81
192: ldc           #41
194: invokevirtual #42
197: invokevirtual #45
200: iload         4
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #47
213: new           #39
216: dup
217: invokespecial #40
220: ldc           #41
222: invokevirtual #42
225: aload         6
227: invokevirtual #43
230: ldc           #44
232: invokevirtual #42
235: getstatic     #150
238: invokevirtual #43
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: aload         6
251: getstatic     #150
254: invokevirtual #46
257: invokestatic  #47
260: aload         7
262: invokestatic  #16
265: aload         7
267: invokestatic  #17
270: ldc           #26
272: invokestatic  #19
275: return
Exception table:
from    to  target type
139   157   160   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 9221
End line: 9302
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        mersenneTwister15.setSeed(0);
        double double21 = mersenneTwister15.nextGaussian();
        mersenneTwister15.setSeed((long) (-700319654));
        int[] intArray24 = new int[] {};
        int[] intArray26 = new int[] { (-127) };
        int[] intArray27 = org.apache.commons.math3.util.MathArrays.copyOf(intArray26);
        int int28 = org.apache.commons.math3.util.MathArrays.distance1(intArray24, intArray27);
        int[] intArray29 = new int[] {};
        int[] intArray31 = new int[] { (-127) };
        int[] intArray32 = org.apache.commons.math3.util.MathArrays.copyOf(intArray31);
        int int33 = org.apache.commons.math3.util.MathArrays.distance1(intArray29, intArray32);
        int[] intArray38 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister39 = new org.apache.commons.math3.random.MersenneTwister(intArray38);
        int[] intArray41 = org.apache.commons.math3.util.MathArrays.copyOf(intArray38, 3);
        int[] intArray46 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister47 = new org.apache.commons.math3.random.MersenneTwister(intArray46);
        int[] intArray52 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister53 = new org.apache.commons.math3.random.MersenneTwister(intArray52);
        int[] intArray55 = org.apache.commons.math3.util.MathArrays.copyOf(intArray52, 3);
        int int56 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray46, intArray52);
        int[] intArray61 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister62 = new org.apache.commons.math3.random.MersenneTwister(intArray61);
        int[] intArray63 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        int int64 = org.apache.commons.math3.util.MathArrays.distance1(intArray46, intArray61);
        int int65 = org.apache.commons.math3.util.MathArrays.distanceInf(intArray41, intArray61);
        int int66 = org.apache.commons.math3.util.MathArrays.distance1(intArray32, intArray61);
        int[] intArray67 = org.apache.commons.math3.util.MathArrays.copyOf(intArray61);
        double double68 = org.apache.commons.math3.util.MathArrays.distance(intArray24, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            mersenneTwister15.setSeed(intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7805794640849414d) + "'", double21 == (-0.7805794640849414d));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-127]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-127]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-127]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-127]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 0, 100]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 0, 100]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 0, 100, 52]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 227 + "'", int66 == 227);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #678
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_2
101: iconst_0
102: invokevirtual #169
105: aload_2
106: invokevirtual #168
109: dstore        5
111: aload_2
112: ldc2_w        #679
115: invokevirtual #278
118: iconst_0
119: newarray       int
121: astore        7
123: iconst_1
124: newarray       int
126: dup
127: iconst_0
128: bipush        -127
130: iastore
131: astore        8
133: aload         8
135: invokestatic  #226
138: astore        9
140: aload         7
142: aload         9
144: invokestatic  #429
147: istore        10
149: iconst_0
150: newarray       int
152: astore        11
154: iconst_1
155: newarray       int
157: dup
158: iconst_0
159: bipush        -127
161: iastore
162: astore        12
164: aload         12
166: invokestatic  #226
169: astore        13
171: aload         11
173: aload         13
175: invokestatic  #429
178: istore        14
180: iconst_4
181: newarray       int
183: dup
184: iconst_0
185: bipush        100
187: iastore
188: dup
189: iconst_1
190: iconst_0
191: iastore
192: dup
193: iconst_2
194: bipush        100
196: iastore
197: dup
198: iconst_3
199: bipush        52
201: iastore
202: astore        15
204: new           #32
207: dup
208: aload         15
210: invokespecial #112
213: astore        16
215: aload         15
217: iconst_3
218: invokestatic  #310
221: astore        17
223: iconst_4
224: newarray       int
226: dup
227: iconst_0
228: bipush        100
230: iastore
231: dup
232: iconst_1
233: iconst_0
234: iastore
235: dup
236: iconst_2
237: bipush        100
239: iastore
240: dup
241: iconst_3
242: bipush        52
244: iastore
245: astore        18
247: new           #32
250: dup
251: aload         18
253: invokespecial #112
256: astore        19
258: iconst_4
259: newarray       int
261: dup
262: iconst_0
263: bipush        100
265: iastore
266: dup
267: iconst_1
268: iconst_0
269: iastore
270: dup
271: iconst_2
272: bipush        100
274: iastore
275: dup
276: iconst_3
277: bipush        52
279: iastore
280: astore        20
282: new           #32
285: dup
286: aload         20
288: invokespecial #112
291: astore        21
293: aload         20
295: iconst_3
296: invokestatic  #310
299: astore        22
301: aload         18
303: aload         20
305: invokestatic  #306
308: istore        23
310: iconst_4
311: newarray       int
313: dup
314: iconst_0
315: bipush        100
317: iastore
318: dup
319: iconst_1
320: iconst_0
321: iastore
322: dup
323: iconst_2
324: bipush        100
326: iastore
327: dup
328: iconst_3
329: bipush        52
331: iastore
332: astore        24
334: new           #32
337: dup
338: aload         24
340: invokespecial #112
343: astore        25
345: aload         24
347: invokestatic  #226
350: astore        26
352: aload         18
354: aload         24
356: invokestatic  #429
359: istore        27
361: aload         17
363: aload         24
365: invokestatic  #306
368: istore        28
370: aload         13
372: aload         24
374: invokestatic  #429
377: istore        29
379: aload         24
381: invokestatic  #226
384: astore        30
386: aload         7
388: aload         24
390: invokestatic  #227
393: dstore        31
395: aload_2
396: aload         7
398: invokevirtual #228
401: ldc_w         #681
404: invokestatic  #14
407: goto          412
410: astore        33
412: aload_1
413: invokestatic  #16
416: aload_1
417: invokestatic  #17
420: ldc           #26
422: invokestatic  #19
425: new           #39
428: dup
429: invokespecial #40
432: ldc           #41
434: invokevirtual #42
437: dload         5
439: invokevirtual #121
442: ldc           #44
444: invokevirtual #42
447: ldc2_w        #365
450: invokevirtual #121
453: ldc           #41
455: invokevirtual #42
458: invokevirtual #45
461: dload         5
463: ldc2_w        #365
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #47
478: aload         7
480: invokestatic  #16
483: aload         7
485: invokestatic  #117
488: ldc           #83
490: invokestatic  #19
493: aload         8
495: invokestatic  #16
498: aload         8
500: invokestatic  #117
503: ldc           #229
505: invokestatic  #19
508: aload         9
510: invokestatic  #16
513: aload         9
515: invokestatic  #117
518: ldc           #229
520: invokestatic  #19
523: new           #39
526: dup
527: invokespecial #40
530: ldc           #41
532: invokevirtual #42
535: iload         10
537: invokevirtual #81
540: ldc           #44
542: invokevirtual #42
545: iconst_0
546: invokevirtual #81
549: ldc           #41
551: invokevirtual #42
554: invokevirtual #45
557: iload         10
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #47
570: aload         11
572: invokestatic  #16
575: aload         11
577: invokestatic  #117
580: ldc           #83
582: invokestatic  #19
585: aload         12
587: invokestatic  #16
590: aload         12
592: invokestatic  #117
595: ldc           #229
597: invokestatic  #19
600: aload         13
602: invokestatic  #16
605: aload         13
607: invokestatic  #117
610: ldc           #229
612: invokestatic  #19
615: new           #39
618: dup
619: invokespecial #40
622: ldc           #41
624: invokevirtual #42
627: iload         14
629: invokevirtual #81
632: ldc           #44
634: invokevirtual #42
637: iconst_0
638: invokevirtual #81
641: ldc           #41
643: invokevirtual #42
646: invokevirtual #45
649: iload         14
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #47
662: aload         15
664: invokestatic  #16
667: aload         15
669: invokestatic  #117
672: ldc           #118
674: invokestatic  #19
677: aload         17
679: invokestatic  #16
682: aload         17
684: invokestatic  #117
687: ldc_w         #432
690: invokestatic  #19
693: aload         18
695: invokestatic  #16
698: aload         18
700: invokestatic  #117
703: ldc           #118
705: invokestatic  #19
708: aload         20
710: invokestatic  #16
713: aload         20
715: invokestatic  #117
718: ldc           #118
720: invokestatic  #19
723: aload         22
725: invokestatic  #16
728: aload         22
730: invokestatic  #117
733: ldc_w         #432
736: invokestatic  #19
739: new           #39
742: dup
743: invokespecial #40
746: ldc           #41
748: invokevirtual #42
751: iload         23
753: invokevirtual #81
756: ldc           #44
758: invokevirtual #42
761: iconst_0
762: invokevirtual #81
765: ldc           #41
767: invokevirtual #42
770: invokevirtual #45
773: iload         23
775: ifne          782
778: iconst_1
779: goto          783
782: iconst_0
783: invokestatic  #47
786: aload         24
788: invokestatic  #16
791: aload         24
793: invokestatic  #117
796: ldc           #118
798: invokestatic  #19
801: aload         26
803: invokestatic  #16
806: aload         26
808: invokestatic  #117
811: ldc           #118
813: invokestatic  #19
816: new           #39
819: dup
820: invokespecial #40
823: ldc           #41
825: invokevirtual #42
828: iload         27
830: invokevirtual #81
833: ldc           #44
835: invokevirtual #42
838: iconst_0
839: invokevirtual #81
842: ldc           #41
844: invokevirtual #42
847: invokevirtual #45
850: iload         27
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #47
863: new           #39
866: dup
867: invokespecial #40
870: ldc           #41
872: invokevirtual #42
875: iload         28
877: invokevirtual #81
880: ldc           #44
882: invokevirtual #42
885: iconst_0
886: invokevirtual #81
889: ldc           #41
891: invokevirtual #42
894: invokevirtual #45
897: iload         28
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #47
910: new           #39
913: dup
914: invokespecial #40
917: ldc           #41
919: invokevirtual #42
922: iload         29
924: invokevirtual #81
927: ldc           #44
929: invokevirtual #42
932: sipush        227
935: invokevirtual #81
938: ldc           #41
940: invokevirtual #42
943: invokevirtual #45
946: iload         29
948: sipush        227
951: if_icmpne     958
954: iconst_1
955: goto          959
958: iconst_0
959: invokestatic  #47
962: aload         30
964: invokestatic  #16
967: aload         30
969: invokestatic  #117
972: ldc           #118
974: invokestatic  #19
977: new           #39
980: dup
981: invokespecial #40
984: ldc           #41
986: invokevirtual #42
989: dload         31
991: invokevirtual #121
994: ldc           #44
996: invokevirtual #42
999: dconst_0
1000: invokevirtual #121
1003: ldc           #41
1005: invokevirtual #42
1008: invokevirtual #45
1011: dload         31
1013: dconst_0
1014: dcmpl
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #47
1026: return
Exception table:
from    to  target type
395   407   410   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 9305
End line: 9372
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray6);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector8, arrayRealVector17);
        double[] doubleArray27 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray27);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray27);
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray36);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector29, arrayRealVector38);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector38, arrayRealVector48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = arrayRealVector17.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector48);
        double[] doubleArray51 = arrayRealVector17.toArray();
        double[] doubleArray58 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix60 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray58);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair62 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray58, (double) (-1.0f));
        double double63 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray51, doubleArray58);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray58);
        org.apache.commons.math3.linear.RealMatrix realMatrix65 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray58);
        double[] doubleArray67 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray58, 0.6557942026326724d);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister83 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker85 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray75, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister83, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker85);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector87 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray58, doubleArray75);
        double[] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = org.apache.commons.math3.util.MathArrays.distance(doubleArray75, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 20204.0d + "'", double63 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #682
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #10
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: dup
343: iconst_3
344: dconst_0
345: dastore
346: dup
347: iconst_4
348: dconst_1
349: dastore
350: dup
351: iconst_5
352: ldc2_w        #21
355: dastore
356: astore        16
358: aload         16
360: invokestatic  #23
363: aload         16
365: invokestatic  #24
368: astore        17
370: new           #58
373: dup
374: aload         16
376: ldc2_w        #59
379: invokespecial #61
382: astore        18
384: aload         15
386: aload         16
388: invokestatic  #206
391: dstore        19
393: aload         16
395: invokestatic  #23
398: aload         16
400: invokestatic  #207
403: astore        21
405: aload         16
407: ldc2_w        #208
410: invokestatic  #210
413: astore        22
415: bipush        6
417: newarray       double
419: dup
420: iconst_0
421: dconst_0
422: dastore
423: dup
424: iconst_1
425: ldc2_w        #10
428: dastore
429: dup
430: iconst_2
431: dconst_1
432: dastore
433: dup
434: iconst_3
435: dconst_0
436: dastore
437: dup
438: iconst_4
439: dconst_1
440: dastore
441: dup
442: iconst_5
443: ldc2_w        #21
446: dastore
447: astore        23
449: aload         23
451: invokestatic  #23
454: new           #32
457: dup
458: iconst_1
459: invokespecial #33
462: astore        24
464: new           #34
467: dup
468: invokespecial #35
471: astore        25
473: new           #8
476: dup
477: iconst_5
478: aload         23
480: bipush        100
482: dconst_0
483: iconst_0
484: iconst_0
485: bipush        100
487: aload         24
489: iconst_1
490: aload         25
492: invokespecial #36
495: astore        26
497: new           #96
500: dup
501: aload         16
503: aload         23
505: invokespecial #139
508: astore        27
510: aconst_null
511: astore        28
513: aload         23
515: aload         28
517: invokestatic  #211
520: dstore        29
522: ldc           #29
524: invokestatic  #14
527: goto          532
530: astore        29
532: aload_1
533: invokestatic  #16
536: aload_1
537: invokestatic  #17
540: ldc           #26
542: invokestatic  #19
545: aload_3
546: invokestatic  #16
549: aload_3
550: invokestatic  #17
553: ldc           #26
555: invokestatic  #19
558: aload         6
560: invokestatic  #16
563: aload         6
565: invokestatic  #17
568: ldc           #26
570: invokestatic  #19
573: aload         8
575: invokestatic  #16
578: aload         8
580: invokestatic  #17
583: ldc           #26
585: invokestatic  #19
588: aload         11
590: invokestatic  #16
593: aload         11
595: invokestatic  #17
598: ldc           #26
600: invokestatic  #19
603: aload         14
605: invokestatic  #16
608: aload         15
610: invokestatic  #16
613: aload         15
615: invokestatic  #17
618: ldc           #105
620: invokestatic  #19
623: aload         16
625: invokestatic  #16
628: aload         16
630: invokestatic  #17
633: ldc           #26
635: invokestatic  #19
638: aload         17
640: invokestatic  #16
643: new           #39
646: dup
647: invokespecial #40
650: ldc           #41
652: invokevirtual #42
655: dload         19
657: invokevirtual #121
660: ldc           #44
662: invokevirtual #42
665: ldc2_w        #212
668: invokevirtual #121
671: ldc           #41
673: invokevirtual #42
676: invokevirtual #45
679: dload         19
681: ldc2_w        #212
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #47
696: aload         21
698: invokestatic  #16
701: aload         22
703: invokestatic  #16
706: aload         22
708: invokestatic  #17
711: ldc           #214
713: invokestatic  #19
716: aload         23
718: invokestatic  #16
721: aload         23
723: invokestatic  #17
726: ldc           #26
728: invokestatic  #19
731: return
Exception table:
from    to  target type
513   527   530   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 9375
End line: 9409
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.util.Incrementor incrementor44 = cMAESOptimizer43.evaluations;
        int int45 = cMAESOptimizer43.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(incrementor44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #683
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: aload         13
231: getfield      #191
234: astore        14
236: aload         13
238: invokevirtual #69
241: istore        15
243: aload_1
244: invokestatic  #16
247: aload_1
248: invokestatic  #17
251: ldc           #26
253: invokestatic  #19
256: aload_2
257: invokestatic  #16
260: aload         4
262: invokestatic  #16
265: aload         4
267: invokestatic  #17
270: ldc           #26
272: invokestatic  #19
275: aload         5
277: invokestatic  #16
280: aload         5
282: invokestatic  #117
285: ldc           #229
287: invokestatic  #19
290: aload         6
292: invokestatic  #16
295: aload         6
297: invokestatic  #117
300: ldc           #229
302: invokestatic  #19
305: aload         8
307: invokestatic  #16
310: aload         8
312: invokestatic  #17
315: ldc           #26
317: invokestatic  #19
320: aload         12
322: invokestatic  #16
325: aload         14
327: invokestatic  #16
330: new           #39
333: dup
334: invokespecial #40
337: ldc           #41
339: invokevirtual #42
342: iload         15
344: invokevirtual #81
347: ldc           #44
349: invokevirtual #42
352: iconst_0
353: invokevirtual #81
356: ldc           #41
358: invokevirtual #42
361: invokevirtual #45
364: iload         15
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #47
377: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 9412
End line: 9428
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = null;
        double[] doubleArray10 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray10);
        int int12 = cMAESOptimizer11.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker13 = cMAESOptimizer11.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray1, (int) ' ', 1024.0d, false, (int) (byte) -1, 3, randomGenerator7, false, pointValuePairConvergenceChecker13);
        java.util.List<java.lang.Double> doubleList15 = cMAESOptimizer14.getStatisticsSigmaHistory();
        int int16 = cMAESOptimizer14.getEvaluations();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker13);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #684
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aconst_null
30: astore_3
31: new           #8
34: dup
35: bipush        10
37: aload_3
38: invokespecial #9
41: astore        4
43: aload         4
45: invokevirtual #69
48: istore        5
50: aload         4
52: invokevirtual #53
55: astore        6
57: new           #8
60: dup
61: iconst_0
62: aload_1
63: bipush        32
65: ldc2_w        #468
68: iconst_0
69: iconst_m1
70: iconst_3
71: aload_2
72: iconst_0
73: aload         6
75: invokespecial #36
78: astore        7
80: aload         7
82: invokevirtual #130
85: astore        8
87: aload         7
89: invokevirtual #69
92: istore        9
94: new           #39
97: dup
98: invokespecial #40
101: ldc           #41
103: invokevirtual #42
106: iload         5
108: invokevirtual #81
111: ldc           #44
113: invokevirtual #42
116: iconst_0
117: invokevirtual #81
120: ldc           #41
122: invokevirtual #42
125: invokevirtual #45
128: iload         5
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #47
141: aload         6
143: invokestatic  #16
146: aload         8
148: invokestatic  #16
151: new           #39
154: dup
155: invokespecial #40
158: ldc           #41
160: invokevirtual #42
163: iload         9
165: invokevirtual #81
168: ldc           #44
170: invokevirtual #42
173: iconst_0
174: invokevirtual #81
177: ldc           #41
179: invokevirtual #42
182: invokevirtual #45
185: iload         9
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #47
198: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 9431
End line: 9450
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair12 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, 2.718281828459045d);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray7, (int) '4');
        org.apache.commons.math3.random.RandomGenerator randomGenerator20 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer22 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(419642177, doubleArray7, (int) (byte) 10, 3.051757812500014E-5d, false, (-2146959360), 30000, randomGenerator20, false);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer22.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #685
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: aload_1
68: invokestatic  #24
71: astore_3
72: new           #58
75: dup
76: aload_1
77: ldc2_w        #581
80: invokespecial #61
83: astore        4
85: aload_1
86: bipush        52
88: invokestatic  #423
91: astore        5
93: aconst_null
94: astore        6
96: new           #8
99: dup
100: ldc_w         #347
103: aload_1
104: bipush        10
106: ldc2_w        #686
109: iconst_0
110: ldc_w         #688
113: sipush        30000
116: aload         6
118: iconst_0
119: invokespecial #172
122: astore        7
124: aload         7
126: invokevirtual #53
129: astore        8
131: aload_1
132: invokestatic  #16
135: aload_1
136: invokestatic  #17
139: ldc           #26
141: invokestatic  #19
144: aload_2
145: invokestatic  #16
148: aload_3
149: invokestatic  #16
152: aload         5
154: invokestatic  #16
157: aload         5
159: invokestatic  #17
162: ldc_w         #689
165: invokestatic  #19
168: aload         8
170: invokestatic  #16
173: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 9453
End line: 9475
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNull(goalType24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #690
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #69
126: istore        8
128: aload         4
130: invokevirtual #232
133: astore        9
135: aload         4
137: invokevirtual #149
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         8
226: invokevirtual #81
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #81
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         8
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #47
259: aload         9
261: invokestatic  #16
264: aload         10
266: invokestatic  #155
269: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 9478
End line: 9549
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction6 = null;
        org.apache.commons.math3.optimization.GoalType goalType7 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix10 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray11 = blockRealMatrix10.getData();
        double double12 = blockRealMatrix10.getFrobeniusNorm();
        double double13 = blockRealMatrix10.getFrobeniusNorm();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix15 = blockRealMatrix10.getColumnMatrix((int) (short) 10);
        boolean boolean16 = blockRealMatrix10.isTransposable();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix19 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix20 = blockRealMatrix19.copy();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix21 = blockRealMatrix19.copy();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix24 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray25 = blockRealMatrix24.getData();
        double double26 = blockRealMatrix24.getFrobeniusNorm();
        org.apache.commons.math3.linear.RealMatrix realMatrix28 = blockRealMatrix24.scalarMultiply(0.0d);
        org.apache.commons.math3.linear.RealMatrix realMatrix30 = blockRealMatrix24.scalarMultiply(Double.NEGATIVE_INFINITY);
        double double31 = blockRealMatrix24.getFrobeniusNorm();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix32 = blockRealMatrix21.add((org.apache.commons.math3.linear.RealMatrix) blockRealMatrix24);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix33 = blockRealMatrix10.add((org.apache.commons.math3.linear.RealMatrix) blockRealMatrix21);
        org.apache.commons.math3.linear.RealVector realVector35 = blockRealMatrix21.getRowVector(0);
        double[] doubleArray37 = blockRealMatrix21.getColumn((int) (short) 1);
        double[] doubleArray39 = new double[] { '4' };
        double[] doubleArray40 = new double[] {};
        boolean boolean41 = org.apache.commons.math3.util.MathArrays.equals(doubleArray39, doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray48);
        org.apache.commons.math3.linear.RealMatrix realMatrix50 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39, doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair53 = cMAESOptimizer2.optimize((int) (short) 10, multivariateFunction6, goalType7, doubleArray37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + goalType7 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType7.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(blockRealMatrix20);
        org.junit.Assert.assertNotNull(blockRealMatrix21);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix28);
        org.junit.Assert.assertNotNull(realMatrix30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix32);
        org.junit.Assert.assertNotNull(blockRealMatrix33);
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #691
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aconst_null
50: astore        5
52: getstatic     #37
55: astore        6
57: new           #186
60: dup
61: bipush        31
63: bipush        52
65: invokespecial #266
68: astore        7
70: aload         7
72: invokevirtual #419
75: astore        8
77: aload         7
79: invokevirtual #301
82: dstore        9
84: aload         7
86: invokevirtual #301
89: dstore        11
91: aload         7
93: bipush        10
95: invokevirtual #692
98: astore        13
100: aload         7
102: invokevirtual #693
105: istore        14
107: new           #186
110: dup
111: bipush        31
113: bipush        52
115: invokespecial #266
118: astore        15
120: aload         15
122: invokevirtual #455
125: astore        16
127: aload         15
129: invokevirtual #455
132: astore        17
134: new           #186
137: dup
138: bipush        31
140: bipush        52
142: invokespecial #266
145: astore        18
147: aload         18
149: invokevirtual #419
152: astore        19
154: aload         18
156: invokevirtual #301
159: dstore        20
161: aload         18
163: dconst_0
164: invokevirtual #305
167: astore        22
169: aload         18
171: ldc2_w        #695
174: invokevirtual #305
177: astore        23
179: aload         18
181: invokevirtual #301
184: dstore        24
186: aload         17
188: aload         18
190: invokevirtual #697
193: astore        26
195: aload         7
197: aload         17
199: invokevirtual #697
202: astore        27
204: aload         17
206: iconst_0
207: invokevirtual #551
210: astore        28
212: aload         17
214: iconst_1
215: invokevirtual #268
218: astore        29
220: iconst_1
221: newarray       double
223: dup
224: iconst_0
225: ldc2_w        #70
228: dastore
229: astore        30
231: iconst_0
232: newarray       double
234: astore        31
236: aload         30
238: aload         31
240: invokestatic  #72
243: istore        32
245: bipush        6
247: newarray       double
249: dup
250: iconst_0
251: dconst_0
252: dastore
253: dup
254: iconst_1
255: ldc2_w        #10
258: dastore
259: dup
260: iconst_2
261: dconst_1
262: dastore
263: dup
264: iconst_3
265: dconst_0
266: dastore
267: dup
268: iconst_4
269: dconst_1
270: dastore
271: dup
272: iconst_5
273: ldc2_w        #21
276: dastore
277: astore        33
279: aload         33
281: invokestatic  #23
284: aload         33
286: invokestatic  #24
289: astore        34
291: new           #96
294: dup
295: aload         30
297: aload         33
299: invokespecial #139
302: astore        35
304: new           #96
307: dup
308: aload         29
310: aload         33
312: invokespecial #139
315: astore        36
317: aload_2
318: bipush        10
320: aload         5
322: aload         6
324: aload         29
326: invokevirtual #12
329: astore        37
331: ldc           #13
333: invokestatic  #14
336: goto          341
339: astore        37
341: aload_3
342: invokestatic  #16
345: new           #39
348: dup
349: invokespecial #40
352: ldc           #41
354: invokevirtual #42
357: iload         4
359: invokevirtual #81
362: ldc           #44
364: invokevirtual #42
367: iconst_0
368: invokevirtual #81
371: ldc           #41
373: invokevirtual #42
376: invokevirtual #45
379: iload         4
381: ifne          388
384: iconst_1
385: goto          389
388: iconst_0
389: invokestatic  #47
392: new           #39
395: dup
396: invokespecial #40
399: ldc           #41
401: invokevirtual #42
404: aload         6
406: invokevirtual #43
409: ldc           #44
411: invokevirtual #42
414: getstatic     #37
417: invokevirtual #43
420: ldc           #41
422: invokevirtual #42
425: invokevirtual #45
428: aload         6
430: getstatic     #37
433: invokevirtual #46
436: invokestatic  #47
439: aload         8
441: invokestatic  #16
444: new           #39
447: dup
448: invokespecial #40
451: ldc           #41
453: invokevirtual #42
456: dload         9
458: invokevirtual #121
461: ldc           #44
463: invokevirtual #42
466: dconst_0
467: invokevirtual #121
470: ldc           #41
472: invokevirtual #42
475: invokevirtual #45
478: dload         9
480: dconst_0
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #47
493: new           #39
496: dup
497: invokespecial #40
500: ldc           #41
502: invokevirtual #42
505: dload         11
507: invokevirtual #121
510: ldc           #44
512: invokevirtual #42
515: dconst_0
516: invokevirtual #121
519: ldc           #41
521: invokevirtual #42
524: invokevirtual #45
527: dload         11
529: dconst_0
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #47
542: aload         13
544: invokestatic  #16
547: new           #39
550: dup
551: invokespecial #40
554: ldc           #41
556: invokevirtual #42
559: iload         14
561: invokevirtual #84
564: ldc           #44
566: invokevirtual #42
569: iconst_0
570: invokevirtual #84
573: ldc           #41
575: invokevirtual #42
578: invokevirtual #45
581: iload         14
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #47
594: aload         16
596: invokestatic  #16
599: aload         17
601: invokestatic  #16
604: aload         19
606: invokestatic  #16
609: new           #39
612: dup
613: invokespecial #40
616: ldc           #41
618: invokevirtual #42
621: dload         20
623: invokevirtual #121
626: ldc           #44
628: invokevirtual #42
631: dconst_0
632: invokevirtual #121
635: ldc           #41
637: invokevirtual #42
640: invokevirtual #45
643: dload         20
645: dconst_0
646: dcmpl
647: ifne          654
650: iconst_1
651: goto          655
654: iconst_0
655: invokestatic  #47
658: aload         22
660: invokestatic  #16
663: aload         23
665: invokestatic  #16
668: new           #39
671: dup
672: invokespecial #40
675: ldc           #41
677: invokevirtual #42
680: dload         24
682: invokevirtual #121
685: ldc           #44
687: invokevirtual #42
690: dconst_0
691: invokevirtual #121
694: ldc           #41
696: invokevirtual #42
699: invokevirtual #45
702: dload         24
704: dconst_0
705: dcmpl
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #47
717: aload         26
719: invokestatic  #16
722: aload         27
724: invokestatic  #16
727: aload         28
729: invokestatic  #16
732: aload         29
734: invokestatic  #16
737: aload         29
739: invokestatic  #17
742: ldc_w         #698
745: invokestatic  #19
748: aload         30
750: invokestatic  #16
753: aload         30
755: invokestatic  #17
758: ldc           #82
760: invokestatic  #19
763: aload         31
765: invokestatic  #16
768: aload         31
770: invokestatic  #17
773: ldc           #83
775: invokestatic  #19
778: new           #39
781: dup
782: invokespecial #40
785: ldc           #41
787: invokevirtual #42
790: iload         32
792: invokevirtual #84
795: ldc           #44
797: invokevirtual #42
800: iconst_0
801: invokevirtual #84
804: ldc           #41
806: invokevirtual #42
809: invokevirtual #45
812: iload         32
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #47
825: aload         33
827: invokestatic  #16
830: aload         33
832: invokestatic  #17
835: ldc           #26
837: invokestatic  #19
840: aload         34
842: invokestatic  #16
845: return
Exception table:
from    to  target type
317   336   339   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test243
Start line: 9552
End line: 9572
Method source code: 
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        int[] intArray20 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray20);
        float float22 = mersenneTwister21.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker24 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = cMAESOptimizer26.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.48016477f + "'", float22 == 0.48016477f);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #699
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: aload         8
155: invokevirtual #53
158: astore        9
160: aload_1
161: invokestatic  #16
164: aload_1
165: invokestatic  #17
168: ldc           #26
170: invokestatic  #19
173: aload_2
174: invokestatic  #16
177: aload_3
178: invokestatic  #16
181: aload_3
182: invokestatic  #117
185: ldc           #118
187: invokestatic  #19
190: new           #39
193: dup
194: invokespecial #40
197: ldc           #41
199: invokevirtual #42
202: fload         5
204: invokevirtual #119
207: ldc           #44
209: invokevirtual #42
212: ldc           #120
214: invokevirtual #119
217: ldc           #41
219: invokevirtual #42
222: invokevirtual #45
225: fload         5
227: ldc           #120
229: fcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #47
241: aload         9
243: invokestatic  #16
246: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test244
Start line: 9575
End line: 9655
Method source code: 
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double[] doubleArray59 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix61 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray59);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair63 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray59, (double) (-1.0f));
        double double64 = org.apache.commons.math3.util.MathArrays.linearCombination(doubleArray52, doubleArray59);
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray59);
        org.apache.commons.math3.linear.RealMatrix realMatrix66 = org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix(doubleArray59);
        double[] doubleArray68 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray59, 0.6557942026326724d);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister75 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double76 = mersenneTwister75.nextGaussian();
        int int78 = mersenneTwister75.nextInt((int) (short) 100);
        int[] intArray80 = new int[] { (-127) };
        int[] intArray81 = org.apache.commons.math3.util.MathArrays.copyOf(intArray80);
        int[] intArray83 = new int[] { (-127) };
        int[] intArray84 = org.apache.commons.math3.util.MathArrays.copyOf(intArray83);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister85 = new org.apache.commons.math3.random.MersenneTwister(intArray83);
        double double86 = org.apache.commons.math3.util.MathArrays.distance(intArray80, intArray83);
        mersenneTwister75.setSeed(intArray83);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker89 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        double double90 = simpleValueChecker89.getRelativeThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray68, (-127), 0.0d, true, (int) (byte) 100, (int) (short) 0, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister75, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker89);
        double double92 = simpleValueChecker89.getRelativeThreshold();
        double double93 = simpleValueChecker89.getRelativeThreshold();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 20204.0d + "'", double64 == 20204.0d);
        org.junit.Assert.assertNotNull(realMatrix66);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.5855305380648861, 0.00585530538064886, 0.0, 0.00585530538064886, 0.05855305380648861]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.7023867716137234d) + "'", double76 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 31 + "'", int78 == 31);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-127]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-127]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-127]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-127]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.1102230246251565E-14d + "'", double90 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.1102230246251565E-14d + "'", double92 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.1102230246251565E-14d + "'", double93 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #700
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #10
337: dastore
338: dup
339: iconst_2
340: dconst_1
341: dastore
342: dup
343: iconst_3
344: dconst_0
345: dastore
346: dup
347: iconst_4
348: dconst_1
349: dastore
350: dup
351: iconst_5
352: ldc2_w        #21
355: dastore
356: astore        16
358: aload         16
360: invokestatic  #23
363: aload         16
365: invokestatic  #24
368: astore        17
370: new           #58
373: dup
374: aload         16
376: ldc2_w        #59
379: invokespecial #61
382: astore        18
384: aload         15
386: aload         16
388: invokestatic  #206
391: dstore        19
393: aload         16
395: invokestatic  #23
398: aload         16
400: invokestatic  #207
403: astore        21
405: aload         16
407: ldc2_w        #208
410: invokestatic  #210
413: astore        22
415: new           #32
418: dup
419: iconst_1
420: invokespecial #33
423: astore        23
425: aload         23
427: invokevirtual #168
430: dstore        24
432: aload         23
434: bipush        100
436: invokevirtual #225
439: istore        26
441: iconst_1
442: newarray       int
444: dup
445: iconst_0
446: bipush        -127
448: iastore
449: astore        27
451: aload         27
453: invokestatic  #226
456: astore        28
458: iconst_1
459: newarray       int
461: dup
462: iconst_0
463: bipush        -127
465: iastore
466: astore        29
468: aload         29
470: invokestatic  #226
473: astore        30
475: new           #32
478: dup
479: aload         29
481: invokespecial #112
484: astore        31
486: aload         27
488: aload         29
490: invokestatic  #227
493: dstore        32
495: aload         23
497: aload         29
499: invokevirtual #228
502: new           #34
505: dup
506: invokespecial #35
509: astore        34
511: aload         34
513: invokevirtual #162
516: dstore        35
518: new           #8
521: dup
522: sipush        30000
525: aload         22
527: bipush        -127
529: dconst_0
530: iconst_1
531: bipush        100
533: iconst_0
534: aload         23
536: iconst_0
537: aload         34
539: invokespecial #36
542: astore        37
544: aload         34
546: invokevirtual #162
549: dstore        38
551: aload         34
553: invokevirtual #162
556: dstore        40
558: aload_1
559: invokestatic  #16
562: aload_1
563: invokestatic  #17
566: ldc           #26
568: invokestatic  #19
571: aload_3
572: invokestatic  #16
575: aload_3
576: invokestatic  #17
579: ldc           #26
581: invokestatic  #19
584: aload         6
586: invokestatic  #16
589: aload         6
591: invokestatic  #17
594: ldc           #26
596: invokestatic  #19
599: aload         8
601: invokestatic  #16
604: aload         8
606: invokestatic  #17
609: ldc           #26
611: invokestatic  #19
614: aload         11
616: invokestatic  #16
619: aload         11
621: invokestatic  #17
624: ldc           #26
626: invokestatic  #19
629: aload         14
631: invokestatic  #16
634: aload         15
636: invokestatic  #16
639: aload         15
641: invokestatic  #17
644: ldc           #105
646: invokestatic  #19
649: aload         16
651: invokestatic  #16
654: aload         16
656: invokestatic  #17
659: ldc           #26
661: invokestatic  #19
664: aload         17
666: invokestatic  #16
669: new           #39
672: dup
673: invokespecial #40
676: ldc           #41
678: invokevirtual #42
681: dload         19
683: invokevirtual #121
686: ldc           #44
688: invokevirtual #42
691: ldc2_w        #212
694: invokevirtual #121
697: ldc           #41
699: invokevirtual #42
702: invokevirtual #45
705: dload         19
707: ldc2_w        #212
710: dcmpl
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #47
722: aload         21
724: invokestatic  #16
727: aload         22
729: invokestatic  #16
732: aload         22
734: invokestatic  #17
737: ldc           #214
739: invokestatic  #19
742: new           #39
745: dup
746: invokespecial #40
749: ldc           #41
751: invokevirtual #42
754: dload         24
756: invokevirtual #121
759: ldc           #44
761: invokevirtual #42
764: ldc2_w        #74
767: invokevirtual #121
770: ldc           #41
772: invokevirtual #42
775: invokevirtual #45
778: dload         24
780: ldc2_w        #74
783: dcmpl
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #47
795: new           #39
798: dup
799: invokespecial #40
802: ldc           #41
804: invokevirtual #42
807: iload         26
809: invokevirtual #81
812: ldc           #44
814: invokevirtual #42
817: bipush        31
819: invokevirtual #81
822: ldc           #41
824: invokevirtual #42
827: invokevirtual #45
830: iload         26
832: bipush        31
834: if_icmpne     841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #47
845: aload         27
847: invokestatic  #16
850: aload         27
852: invokestatic  #117
855: ldc           #229
857: invokestatic  #19
860: aload         28
862: invokestatic  #16
865: aload         28
867: invokestatic  #117
870: ldc           #229
872: invokestatic  #19
875: aload         29
877: invokestatic  #16
880: aload         29
882: invokestatic  #117
885: ldc           #229
887: invokestatic  #19
890: aload         30
892: invokestatic  #16
895: aload         30
897: invokestatic  #117
900: ldc           #229
902: invokestatic  #19
905: new           #39
908: dup
909: invokespecial #40
912: ldc           #41
914: invokevirtual #42
917: dload         32
919: invokevirtual #121
922: ldc           #44
924: invokevirtual #42
927: dconst_0
928: invokevirtual #121
931: ldc           #41
933: invokevirtual #42
936: invokevirtual #45
939: dload         32
941: dconst_0
942: dcmpl
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #47
954: new           #39
957: dup
958: invokespecial #40
961: ldc           #41
963: invokevirtual #42
966: dload         35
968: invokevirtual #121
971: ldc           #44
973: invokevirtual #42
976: ldc2_w        #163
979: invokevirtual #121
982: ldc           #41
984: invokevirtual #42
987: invokevirtual #45
990: dload         35
992: ldc2_w        #163
995: dcmpl
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #47
1007: new           #39
1010: dup
1011: invokespecial #40
1014: ldc           #41
1016: invokevirtual #42
1019: dload         38
1021: invokevirtual #121
1024: ldc           #44
1026: invokevirtual #42
1029: ldc2_w        #163
1032: invokevirtual #121
1035: ldc           #41
1037: invokevirtual #42
1040: invokevirtual #45
1043: dload         38
1045: ldc2_w        #163
1048: dcmpl
1049: ifne          1056
1052: iconst_1
1053: goto          1057
1056: iconst_0
1057: invokestatic  #47
1060: new           #39
1063: dup
1064: invokespecial #40
1067: ldc           #41
1069: invokevirtual #42
1072: dload         40
1074: invokevirtual #121
1077: ldc           #44
1079: invokevirtual #42
1082: ldc2_w        #163
1085: invokevirtual #121
1088: ldc           #41
1090: invokevirtual #42
1093: invokevirtual #45
1096: dload         40
1098: ldc2_w        #163
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #47
1113: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test245
Start line: 9658
End line: 9709
Method source code: 
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        int int66 = cMAESOptimizer64.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = cMAESOptimizer64.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #701
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aload         20
417: invokevirtual #125
420: istore        22
422: aload         20
424: invokevirtual #53
427: astore        23
429: aload_1
430: invokestatic  #16
433: aload_1
434: invokestatic  #17
437: ldc           #26
439: invokestatic  #19
442: aload_3
443: invokestatic  #16
446: aload         4
448: invokestatic  #16
451: aload         4
453: invokestatic  #17
456: ldc           #26
458: invokestatic  #19
461: aload         6
463: invokestatic  #16
466: aload         6
468: invokestatic  #17
471: ldc           #26
473: invokestatic  #19
476: aload         9
478: invokestatic  #16
481: aload         9
483: invokestatic  #17
486: ldc           #26
488: invokestatic  #19
491: aload         11
493: invokestatic  #16
496: aload         11
498: invokestatic  #17
501: ldc           #26
503: invokestatic  #19
506: aload         14
508: invokestatic  #16
511: aload         14
513: invokestatic  #17
516: ldc           #26
518: invokestatic  #19
521: aload         17
523: invokestatic  #16
526: aload         18
528: invokestatic  #16
531: aload         18
533: invokestatic  #17
536: ldc           #105
538: invokestatic  #19
541: aload         21
543: invokestatic  #16
546: new           #39
549: dup
550: invokespecial #40
553: ldc           #41
555: invokevirtual #42
558: iload         22
560: invokevirtual #81
563: ldc           #44
565: invokevirtual #42
568: iconst_0
569: invokevirtual #81
572: ldc           #41
574: invokevirtual #42
577: invokevirtual #45
580: iload         22
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #47
593: aload         23
595: invokestatic  #16
598: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test246
Start line: 9712
End line: 9735
Method source code: 
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        // The following exception was thrown during execution in test generation
        try {
            incrementor20.incrementCount();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MaxCountExceededException; message: illegal state: maximal count (0) exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #702
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #197
126: ldc           #198
128: invokestatic  #14
131: goto          136
134: astore        8
136: aload_1
137: invokestatic  #16
140: aload_1
141: invokestatic  #17
144: ldc           #26
146: invokestatic  #19
149: aload         5
151: invokestatic  #16
154: aload         6
156: invokestatic  #16
159: new           #39
162: dup
163: invokespecial #40
166: ldc           #41
168: invokevirtual #42
171: iload         7
173: invokevirtual #81
176: ldc           #44
178: invokevirtual #42
181: iconst_0
182: invokevirtual #81
185: ldc           #41
187: invokevirtual #42
190: invokevirtual #45
193: iload         7
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #47
206: return
Exception table:
from    to  target type
121   131   134   Class org/apache/commons/math3/exception/MaxCountExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test247
Start line: 9738
End line: 9760
Method source code: 
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer18.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = cMAESOptimizer18.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(goalType21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #703
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #125
112: istore        6
114: aload         4
116: invokevirtual #149
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #53
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: new           #39
163: dup
164: invokespecial #40
167: ldc           #41
169: invokevirtual #42
172: iload         6
174: invokevirtual #81
177: ldc           #44
179: invokevirtual #42
182: iconst_0
183: invokevirtual #81
186: ldc           #41
188: invokevirtual #42
191: invokevirtual #45
194: iload         6
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #47
207: aload         7
209: invokestatic  #155
212: aload         8
214: invokestatic  #16
217: aload         9
219: invokestatic  #16
222: aload         10
224: invokestatic  #16
227: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test248
Start line: 9763
End line: 9783
Method source code: 
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        double[] doubleArray8 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray8);
        int[] intArray20 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray20);
        float float22 = mersenneTwister21.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker24 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 0.48016477f + "'", float22 == 0.48016477f);
        org.junit.Assert.assertNotNull(doubleList27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #704
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: new           #8
145: dup
146: iconst_m1
147: aload_1
148: invokespecial #9
151: astore        8
153: aload         8
155: invokevirtual #130
158: astore        9
160: aload_1
161: invokestatic  #16
164: aload_1
165: invokestatic  #17
168: ldc           #26
170: invokestatic  #19
173: aload_2
174: invokestatic  #16
177: aload_3
178: invokestatic  #16
181: aload_3
182: invokestatic  #117
185: ldc           #118
187: invokestatic  #19
190: new           #39
193: dup
194: invokespecial #40
197: ldc           #41
199: invokevirtual #42
202: fload         5
204: invokevirtual #119
207: ldc           #44
209: invokevirtual #42
212: ldc           #120
214: invokevirtual #119
217: ldc           #41
219: invokevirtual #42
222: invokevirtual #45
225: fload         5
227: ldc           #120
229: fcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #47
241: aload         9
243: invokestatic  #16
246: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test249
Start line: 9786
End line: 9790
Method source code: 
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1446576480));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #705
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #522
32: invokespecial #245
35: astore_1
36: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test250
Start line: 9793
End line: 9814
Method source code: 
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        int[] intArray19 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister20 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        float float21 = mersenneTwister20.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker23 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray7, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister20, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker23);
        int int25 = cMAESOptimizer24.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer24.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.48016477f + "'", float21 == 0.48016477f);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #706
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: iconst_4
68: newarray       int
70: dup
71: iconst_0
72: bipush        100
74: iastore
75: dup
76: iconst_1
77: iconst_0
78: iastore
79: dup
80: iconst_2
81: bipush        100
83: iastore
84: dup
85: iconst_3
86: bipush        52
88: iastore
89: astore_3
90: new           #32
93: dup
94: aload_3
95: invokespecial #112
98: astore        4
100: aload         4
102: invokevirtual #113
105: fstore        5
107: new           #34
110: dup
111: invokespecial #35
114: astore        6
116: new           #8
119: dup
120: bipush        32
122: aload_1
123: iconst_0
124: ldc2_w        #114
127: iconst_1
128: ldc           #38
130: bipush        100
132: aload         4
134: iconst_1
135: aload         6
137: invokespecial #36
140: astore        7
142: aload         7
144: invokevirtual #125
147: istore        8
149: aload         7
151: invokevirtual #53
154: astore        9
156: aload_1
157: invokestatic  #16
160: aload_1
161: invokestatic  #17
164: ldc           #26
166: invokestatic  #19
169: aload_2
170: invokestatic  #16
173: aload_3
174: invokestatic  #16
177: aload_3
178: invokestatic  #117
181: ldc           #118
183: invokestatic  #19
186: new           #39
189: dup
190: invokespecial #40
193: ldc           #41
195: invokevirtual #42
198: fload         5
200: invokevirtual #119
203: ldc           #44
205: invokevirtual #42
208: ldc           #120
210: invokevirtual #119
213: ldc           #41
215: invokevirtual #42
218: invokevirtual #45
221: fload         5
223: ldc           #120
225: fcmpl
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #47
237: new           #39
240: dup
241: invokespecial #40
244: ldc           #41
246: invokevirtual #42
249: iload         8
251: invokevirtual #81
254: ldc           #44
256: invokevirtual #42
259: iconst_0
260: invokevirtual #81
263: ldc           #41
265: invokevirtual #42
268: invokevirtual #45
271: iload         8
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #47
284: aload         9
286: invokestatic  #16
289: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test251
Start line: 9817
End line: 9832
Method source code: 
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor5 = cMAESOptimizer2.evaluations;
        int int6 = incrementor5.getCount();
        int int7 = incrementor5.getCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(incrementor5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #707
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: getfield      #191
53: astore        5
55: aload         5
57: invokevirtual #202
60: istore        6
62: aload         5
64: invokevirtual #202
67: istore        7
69: new           #39
72: dup
73: invokespecial #40
76: ldc           #41
78: invokevirtual #42
81: iload_3
82: invokevirtual #81
85: ldc           #44
87: invokevirtual #42
90: iconst_0
91: invokevirtual #81
94: ldc           #41
96: invokevirtual #42
99: invokevirtual #45
102: iload_3
103: ifne          110
106: iconst_1
107: goto          111
110: iconst_0
111: invokestatic  #47
114: new           #39
117: dup
118: invokespecial #40
121: ldc           #41
123: invokevirtual #42
126: iload         4
128: invokevirtual #81
131: ldc           #44
133: invokevirtual #42
136: iconst_0
137: invokevirtual #81
140: ldc           #41
142: invokevirtual #42
145: invokevirtual #45
148: iload         4
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #47
161: aload         5
163: invokestatic  #16
166: new           #39
169: dup
170: invokespecial #40
173: ldc           #41
175: invokevirtual #42
178: iload         6
180: invokevirtual #81
183: ldc           #44
185: invokevirtual #42
188: iconst_0
189: invokevirtual #81
192: ldc           #41
194: invokevirtual #42
197: invokevirtual #45
200: iload         6
202: ifne          209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #47
213: new           #39
216: dup
217: invokespecial #40
220: ldc           #41
222: invokevirtual #42
225: iload         7
227: invokevirtual #81
230: ldc           #44
232: invokevirtual #42
235: iconst_0
236: invokevirtual #81
239: ldc           #41
241: invokevirtual #42
244: invokevirtual #45
247: iload         7
249: ifne          256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #47
260: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test252
Start line: 9835
End line: 9846
Method source code: 
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #708
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #69
47: istore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_3
68: invokevirtual #81
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #81
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #47
100: new           #39
103: dup
104: invokespecial #40
107: ldc           #41
109: invokevirtual #42
112: iload         4
114: invokevirtual #81
117: ldc           #44
119: invokevirtual #42
122: iconst_0
123: invokevirtual #81
126: ldc           #41
128: invokevirtual #42
131: invokevirtual #45
134: iload         4
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #47
147: aload         5
149: invokestatic  #16
152: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test253
Start line: 9849
End line: 9862
Method source code: 
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer2.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType6 = cMAESOptimizer2.getGoalType();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNull(goalType6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #709
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #53
42: astore_3
43: aload_2
44: invokevirtual #133
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #149
59: astore        6
61: aload_3
62: invokestatic  #16
65: aload         4
67: invokestatic  #16
70: aload         5
72: invokestatic  #16
75: aload         6
77: invokestatic  #155
80: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test254
Start line: 9865
End line: 9896
Method source code: 
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair7 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException5, goalType6);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix10 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray11 = blockRealMatrix10.getData();
        double double12 = blockRealMatrix10.getFrobeniusNorm();
        double double13 = blockRealMatrix10.getFrobeniusNorm();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix15 = blockRealMatrix10.getColumnMatrix((int) (short) 10);
        double[] doubleArray17 = blockRealMatrix10.getRow(6);
        double[] doubleArray18 = null;
        double[] doubleArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair20 = cMAESOptimizer2.optimize(1433601405, multivariateFunction4, goalType6, doubleArray17, doubleArray18, doubleArray19);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #710
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aconst_null
39: astore_3
40: aconst_null
41: astore        4
43: getstatic     #37
46: astore        5
48: new           #107
51: dup
52: aload         4
54: aload         5
56: invokespecial #110
59: astore        6
61: new           #186
64: dup
65: bipush        31
67: bipush        52
69: invokespecial #266
72: astore        7
74: aload         7
76: invokevirtual #419
79: astore        8
81: aload         7
83: invokevirtual #301
86: dstore        9
88: aload         7
90: invokevirtual #301
93: dstore        11
95: aload         7
97: bipush        10
99: invokevirtual #692
102: astore        13
104: aload         7
106: bipush        6
108: invokevirtual #711
111: astore        14
113: aconst_null
114: astore        15
116: aconst_null
117: astore        16
119: aload_2
120: ldc_w         #532
123: aload_3
124: aload         5
126: aload         14
128: aload         15
130: aload         16
132: invokevirtual #25
135: astore        17
137: ldc           #13
139: invokestatic  #14
142: goto          147
145: astore        17
147: new           #39
150: dup
151: invokespecial #40
154: ldc           #41
156: invokevirtual #42
159: aload         5
161: invokevirtual #43
164: ldc           #44
166: invokevirtual #42
169: getstatic     #37
172: invokevirtual #43
175: ldc           #41
177: invokevirtual #42
180: invokevirtual #45
183: aload         5
185: getstatic     #37
188: invokevirtual #46
191: invokestatic  #47
194: aload         8
196: invokestatic  #16
199: new           #39
202: dup
203: invokespecial #40
206: ldc           #41
208: invokevirtual #42
211: dload         9
213: invokevirtual #121
216: ldc           #44
218: invokevirtual #42
221: dconst_0
222: invokevirtual #121
225: ldc           #41
227: invokevirtual #42
230: invokevirtual #45
233: dload         9
235: dconst_0
236: dcmpl
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #47
248: new           #39
251: dup
252: invokespecial #40
255: ldc           #41
257: invokevirtual #42
260: dload         11
262: invokevirtual #121
265: ldc           #44
267: invokevirtual #42
270: dconst_0
271: invokevirtual #121
274: ldc           #41
276: invokevirtual #42
279: invokevirtual #45
282: dload         11
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #47
297: aload         13
299: invokestatic  #16
302: aload         14
304: invokestatic  #16
307: aload         14
309: invokestatic  #17
312: ldc_w         #712
315: invokestatic  #19
318: return
Exception table:
from    to  target type
119   142   145   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test255
Start line: 9899
End line: 9917
Method source code: 
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer18.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertNotNull(realMatrixList22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #713
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         4
116: invokevirtual #53
119: astore        7
121: aload         4
123: invokevirtual #219
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: aload         5
143: invokestatic  #16
146: aload         6
148: invokestatic  #16
151: aload         7
153: invokestatic  #16
156: aload         8
158: invokestatic  #16
161: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test256
Start line: 9920
End line: 9958
Method source code: 
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction23 = null;
        org.apache.commons.math3.optimization.GoalType goalType24 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix33 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray31);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair36 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray31, 2.718281828459045d);
        double[] doubleArray38 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray31, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = cMAESOptimizer18.optimize((int) ' ', multivariateFunction23, goalType24, doubleArray31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + goalType24 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType24.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix33);
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #714
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #125
119: istore        7
121: aconst_null
122: astore        8
124: getstatic     #37
127: astore        9
129: bipush        6
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #10
142: dastore
143: dup
144: iconst_2
145: dconst_1
146: dastore
147: dup
148: iconst_3
149: dconst_0
150: dastore
151: dup
152: iconst_4
153: dconst_1
154: dastore
155: dup
156: iconst_5
157: ldc2_w        #21
160: dastore
161: astore        10
163: aload         10
165: invokestatic  #23
168: aload         10
170: invokestatic  #24
173: astore        11
175: aload         10
177: invokestatic  #24
180: astore        12
182: new           #58
185: dup
186: aload         10
188: ldc2_w        #581
191: invokespecial #61
194: astore        13
196: aload         10
198: bipush        52
200: invokestatic  #423
203: astore        14
205: aload         4
207: bipush        32
209: aload         8
211: aload         9
213: aload         10
215: invokevirtual #12
218: astore        15
220: ldc           #13
222: invokestatic  #14
225: goto          230
228: astore        15
230: aload_1
231: invokestatic  #16
234: aload_1
235: invokestatic  #17
238: ldc           #26
240: invokestatic  #19
243: aload         5
245: invokestatic  #16
248: aload         6
250: invokestatic  #16
253: new           #39
256: dup
257: invokespecial #40
260: ldc           #41
262: invokevirtual #42
265: iload         7
267: invokevirtual #81
270: ldc           #44
272: invokevirtual #42
275: iconst_0
276: invokevirtual #81
279: ldc           #41
281: invokevirtual #42
284: invokevirtual #45
287: iload         7
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #47
300: new           #39
303: dup
304: invokespecial #40
307: ldc           #41
309: invokevirtual #42
312: aload         9
314: invokevirtual #43
317: ldc           #44
319: invokevirtual #42
322: getstatic     #37
325: invokevirtual #43
328: ldc           #41
330: invokevirtual #42
333: invokevirtual #45
336: aload         9
338: getstatic     #37
341: invokevirtual #46
344: invokestatic  #47
347: aload         10
349: invokestatic  #16
352: aload         10
354: invokestatic  #17
357: ldc           #26
359: invokestatic  #19
362: aload         11
364: invokestatic  #16
367: aload         12
369: invokestatic  #16
372: aload         14
374: invokestatic  #16
377: aload         14
379: invokestatic  #17
382: ldc_w         #689
385: invokestatic  #19
388: return
Exception table:
from    to  target type
205   225   228   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test257
Start line: 9961
End line: 10039
Method source code: 
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector11 = arrayRealVector9.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math3.linear.ArrayRealVector(realVector11);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector22 = arrayRealVector21.copy();
        org.apache.commons.math3.linear.RealVector realVector24 = arrayRealVector21.mapDivide((double) (-1.0f));
        double[] doubleArray31 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray31);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray31);
        org.apache.commons.math3.linear.RealVector realVector35 = arrayRealVector33.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(realVector35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = arrayRealVector21.add(realVector35);
        double double38 = arrayRealVector12.dotProduct((org.apache.commons.math3.linear.RealVector) arrayRealVector21);
        double[] doubleArray41 = new double[] { '4' };
        double[] doubleArray42 = new double[] {};
        boolean boolean43 = org.apache.commons.math3.util.MathArrays.equals(doubleArray41, doubleArray42);
        double[] doubleArray50 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray50);
        org.apache.commons.math3.linear.RealMatrix realMatrix52 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray50);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray41, doubleArray50);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        boolean boolean62 = org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(doubleArray41, doubleArray60);
        arrayRealVector12.setSubVector(0, doubleArray60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(32, doubleArray60);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction66 = null;
        org.apache.commons.math3.optimization.GoalType goalType67 = null;
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.RealMatrix realMatrix77 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray75);
        int[] intArray87 = new int[] { (short) 100, 0, (byte) 100, '4' };
        org.apache.commons.math3.random.MersenneTwister mersenneTwister88 = new org.apache.commons.math3.random.MersenneTwister(intArray87);
        float float89 = mersenneTwister88.nextFloat();
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker91 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray75, 0, (double) 10.000001f, true, (-1068072960), (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister88, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair93 = cMAESOptimizer64.optimize((int) (byte) -100, multivariateFunction66, goalType67, doubleArray75);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10102.0d + "'", double38 == 10102.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix52);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix77);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 0, 100, 52]");
        org.junit.Assert.assertTrue("'" + float89 + "' != '" + 0.48016477f + "'", float89 == 0.48016477f);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #715
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: dconst_1
73: invokevirtual #151
76: astore_3
77: new           #96
80: dup
81: aload_3
82: invokespecial #152
85: astore        4
87: bipush        6
89: newarray       double
91: dup
92: iconst_0
93: dconst_0
94: dastore
95: dup
96: iconst_1
97: ldc2_w        #10
100: dastore
101: dup
102: iconst_2
103: dconst_1
104: dastore
105: dup
106: iconst_3
107: dconst_0
108: dastore
109: dup
110: iconst_4
111: dconst_1
112: dastore
113: dup
114: iconst_5
115: ldc2_w        #21
118: dastore
119: astore        5
121: aload         5
123: invokestatic  #23
126: new           #96
129: dup
130: aload         5
132: invokespecial #97
135: astore        6
137: aload         6
139: invokevirtual #98
142: astore        7
144: aload         6
146: ldc2_w        #59
149: invokevirtual #151
152: astore        8
154: bipush        6
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #10
167: dastore
168: dup
169: iconst_2
170: dconst_1
171: dastore
172: dup
173: iconst_3
174: dconst_0
175: dastore
176: dup
177: iconst_4
178: dconst_1
179: dastore
180: dup
181: iconst_5
182: ldc2_w        #21
185: dastore
186: astore        9
188: aload         9
190: invokestatic  #23
193: new           #96
196: dup
197: aload         9
199: invokespecial #97
202: astore        10
204: aload         10
206: dconst_1
207: invokevirtual #151
210: astore        11
212: new           #96
215: dup
216: aload         11
218: invokespecial #152
221: astore        12
223: aload         6
225: aload         11
227: invokevirtual #153
230: astore        13
232: aload         4
234: aload         6
236: invokevirtual #392
239: dstore        14
241: iconst_1
242: newarray       double
244: dup
245: iconst_0
246: ldc2_w        #70
249: dastore
250: astore        16
252: iconst_0
253: newarray       double
255: astore        17
257: aload         16
259: aload         17
261: invokestatic  #72
264: istore        18
266: bipush        6
268: newarray       double
270: dup
271: iconst_0
272: dconst_0
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #10
279: dastore
280: dup
281: iconst_2
282: dconst_1
283: dastore
284: dup
285: iconst_3
286: dconst_0
287: dastore
288: dup
289: iconst_4
290: dconst_1
291: dastore
292: dup
293: iconst_5
294: ldc2_w        #21
297: dastore
298: astore        19
300: aload         19
302: invokestatic  #23
305: aload         19
307: invokestatic  #24
310: astore        20
312: new           #96
315: dup
316: aload         16
318: aload         19
320: invokespecial #139
323: astore        21
325: bipush        6
327: newarray       double
329: dup
330: iconst_0
331: dconst_0
332: dastore
333: dup
334: iconst_1
335: ldc2_w        #10
338: dastore
339: dup
340: iconst_2
341: dconst_1
342: dastore
343: dup
344: iconst_3
345: dconst_0
346: dastore
347: dup
348: iconst_4
349: dconst_1
350: dastore
351: dup
352: iconst_5
353: ldc2_w        #21
356: dastore
357: astore        22
359: aload         22
361: invokestatic  #23
364: aload         16
366: aload         22
368: invokestatic  #140
371: istore        23
373: aload         4
375: iconst_0
376: aload         22
378: invokevirtual #393
381: new           #8
384: dup
385: bipush        32
387: aload         22
389: invokespecial #9
392: astore        24
394: aconst_null
395: astore        25
397: aconst_null
398: astore        26
400: bipush        6
402: newarray       double
404: dup
405: iconst_0
406: dconst_0
407: dastore
408: dup
409: iconst_1
410: ldc2_w        #10
413: dastore
414: dup
415: iconst_2
416: dconst_1
417: dastore
418: dup
419: iconst_3
420: dconst_0
421: dastore
422: dup
423: iconst_4
424: dconst_1
425: dastore
426: dup
427: iconst_5
428: ldc2_w        #21
431: dastore
432: astore        27
434: aload         27
436: invokestatic  #23
439: aload         27
441: invokestatic  #24
444: astore        28
446: iconst_4
447: newarray       int
449: dup
450: iconst_0
451: bipush        100
453: iastore
454: dup
455: iconst_1
456: iconst_0
457: iastore
458: dup
459: iconst_2
460: bipush        100
462: iastore
463: dup
464: iconst_3
465: bipush        52
467: iastore
468: astore        29
470: new           #32
473: dup
474: aload         29
476: invokespecial #112
479: astore        30
481: aload         30
483: invokevirtual #113
486: fstore        31
488: new           #34
491: dup
492: invokespecial #35
495: astore        32
497: new           #8
500: dup
501: bipush        32
503: aload         27
505: iconst_0
506: ldc2_w        #114
509: iconst_1
510: ldc           #38
512: bipush        100
514: aload         30
516: iconst_1
517: aload         32
519: invokespecial #36
522: astore        33
524: aload         24
526: bipush        -100
528: aload         25
530: aload         26
532: aload         27
534: invokevirtual #12
537: astore        34
539: ldc           #13
541: invokestatic  #14
544: goto          549
547: astore        34
549: aload_1
550: invokestatic  #16
553: aload_1
554: invokestatic  #17
557: ldc           #26
559: invokestatic  #19
562: aload_3
563: invokestatic  #16
566: aload         5
568: invokestatic  #16
571: aload         5
573: invokestatic  #17
576: ldc           #26
578: invokestatic  #19
581: aload         7
583: invokestatic  #16
586: aload         8
588: invokestatic  #16
591: aload         9
593: invokestatic  #16
596: aload         9
598: invokestatic  #17
601: ldc           #26
603: invokestatic  #19
606: aload         11
608: invokestatic  #16
611: aload         13
613: invokestatic  #16
616: new           #39
619: dup
620: invokespecial #40
623: ldc           #41
625: invokevirtual #42
628: dload         14
630: invokevirtual #121
633: ldc           #44
635: invokevirtual #42
638: ldc2_w        #298
641: invokevirtual #121
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: dload         14
654: ldc2_w        #298
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #47
669: aload         16
671: invokestatic  #16
674: aload         16
676: invokestatic  #17
679: ldc           #82
681: invokestatic  #19
684: aload         17
686: invokestatic  #16
689: aload         17
691: invokestatic  #17
694: ldc           #83
696: invokestatic  #19
699: new           #39
702: dup
703: invokespecial #40
706: ldc           #41
708: invokevirtual #42
711: iload         18
713: invokevirtual #84
716: ldc           #44
718: invokevirtual #42
721: iconst_0
722: invokevirtual #84
725: ldc           #41
727: invokevirtual #42
730: invokevirtual #45
733: iload         18
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #47
746: aload         19
748: invokestatic  #16
751: aload         19
753: invokestatic  #17
756: ldc           #26
758: invokestatic  #19
761: aload         20
763: invokestatic  #16
766: aload         22
768: invokestatic  #16
771: aload         22
773: invokestatic  #17
776: ldc           #26
778: invokestatic  #19
781: new           #39
784: dup
785: invokespecial #40
788: ldc           #41
790: invokevirtual #42
793: iload         23
795: invokevirtual #84
798: ldc           #44
800: invokevirtual #42
803: iconst_0
804: invokevirtual #84
807: ldc           #41
809: invokevirtual #42
812: invokevirtual #45
815: iload         23
817: ifne          824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #47
828: aload         27
830: invokestatic  #16
833: aload         27
835: invokestatic  #17
838: ldc           #26
840: invokestatic  #19
843: aload         28
845: invokestatic  #16
848: aload         29
850: invokestatic  #16
853: aload         29
855: invokestatic  #117
858: ldc           #118
860: invokestatic  #19
863: new           #39
866: dup
867: invokespecial #40
870: ldc           #41
872: invokevirtual #42
875: fload         31
877: invokevirtual #119
880: ldc           #44
882: invokevirtual #42
885: ldc           #120
887: invokevirtual #119
890: ldc           #41
892: invokevirtual #42
895: invokevirtual #45
898: fload         31
900: ldc           #120
902: fcmpl
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #47
914: return
Exception table:
from    to  target type
524   544   547   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test258
Start line: 10042
End line: 10085
Method source code: 
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        int int24 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList25 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = null;
        double[] doubleArray36 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray36);
        int int38 = org.apache.commons.math3.util.MathUtils.hash(doubleArray36);
        double[] doubleArray39 = null;
        double[] doubleArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair41 = cMAESOptimizer18.optimize(36, multivariateFunction28, goalType29, doubleArray36, doubleArray39, doubleArray40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 419642177 + "'", int38 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #716
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         4
137: invokevirtual #125
140: istore        10
142: aload         4
144: invokevirtual #232
147: astore        11
149: aload         4
151: invokevirtual #53
154: astore        12
156: aconst_null
157: astore        13
159: aconst_null
160: astore        14
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        15
196: aload         15
198: invokestatic  #23
201: aload         15
203: invokestatic  #344
206: istore        16
208: aconst_null
209: astore        17
211: aconst_null
212: astore        18
214: aload         4
216: bipush        36
218: aload         13
220: aload         14
222: aload         15
224: aload         17
226: aload         18
228: invokevirtual #25
231: astore        19
233: ldc           #13
235: invokestatic  #14
238: goto          243
241: astore        19
243: aload_1
244: invokestatic  #16
247: aload_1
248: invokestatic  #17
251: ldc           #26
253: invokestatic  #19
256: aload         5
258: invokestatic  #16
261: aload         6
263: invokestatic  #16
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: iload         7
280: invokevirtual #81
283: ldc           #44
285: invokevirtual #42
288: iconst_0
289: invokevirtual #81
292: ldc           #41
294: invokevirtual #42
297: invokevirtual #45
300: iload         7
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #47
313: new           #39
316: dup
317: invokespecial #40
320: ldc           #41
322: invokevirtual #42
325: iload         8
327: invokevirtual #81
330: ldc           #44
332: invokevirtual #42
335: iconst_0
336: invokevirtual #81
339: ldc           #41
341: invokevirtual #42
344: invokevirtual #45
347: iload         8
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #47
360: aload         9
362: invokestatic  #16
365: new           #39
368: dup
369: invokespecial #40
372: ldc           #41
374: invokevirtual #42
377: iload         10
379: invokevirtual #81
382: ldc           #44
384: invokevirtual #42
387: iconst_0
388: invokevirtual #81
391: ldc           #41
393: invokevirtual #42
396: invokevirtual #45
399: iload         10
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #47
412: aload         11
414: invokestatic  #16
417: aload         12
419: invokestatic  #16
422: aload         15
424: invokestatic  #16
427: aload         15
429: invokestatic  #17
432: ldc           #26
434: invokestatic  #19
437: new           #39
440: dup
441: invokespecial #40
444: ldc           #41
446: invokevirtual #42
449: iload         16
451: invokevirtual #81
454: ldc           #44
456: invokevirtual #42
459: ldc_w         #347
462: invokevirtual #81
465: ldc           #41
467: invokevirtual #42
470: invokevirtual #45
473: iload         16
475: ldc_w         #347
478: if_icmpne     485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #47
489: return
Exception table:
from    to  target type
214   238   241   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test259
Start line: 10088
End line: 10099
Method source code: 
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        int int5 = cMAESOptimizer2.getEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #717
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: invokevirtual #69
53: istore        5
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_3
68: invokevirtual #81
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #81
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #47
100: new           #39
103: dup
104: invokespecial #40
107: ldc           #41
109: invokevirtual #42
112: iload         4
114: invokevirtual #81
117: ldc           #44
119: invokevirtual #42
122: iconst_0
123: invokevirtual #81
126: ldc           #41
128: invokevirtual #42
131: invokevirtual #45
134: iload         4
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #47
147: new           #39
150: dup
151: invokespecial #40
154: ldc           #41
156: invokevirtual #42
159: iload         5
161: invokevirtual #81
164: ldc           #44
166: invokevirtual #42
169: iconst_0
170: invokevirtual #81
173: ldc           #41
175: invokevirtual #42
178: invokevirtual #45
181: iload         5
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #47
194: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test260
Start line: 10102
End line: 10138
Method source code: 
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        int[] intArray19 = new int[] { (-127) };
        int[] intArray20 = org.apache.commons.math3.util.MathArrays.copyOf(intArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister21 = new org.apache.commons.math3.random.MersenneTwister(intArray19);
        double[] doubleArray30 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray30);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister38 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker40 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray30, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister38, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker40);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer41.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(36, doubleArray12, 97, 0.08696317672729492d, true, 0, 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister21, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.util.Incrementor incrementor44 = cMAESOptimizer43.evaluations;
        int int45 = cMAESOptimizer43.getMaxEvaluations();
        int int46 = cMAESOptimizer43.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-127]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-127]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(incrementor44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #718
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: iconst_1
86: newarray       int
88: dup
89: iconst_0
90: bipush        -127
92: iastore
93: astore        5
95: aload         5
97: invokestatic  #226
100: astore        6
102: new           #32
105: dup
106: aload         5
108: invokespecial #112
111: astore        7
113: bipush        6
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #10
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: dconst_0
134: dastore
135: dup
136: iconst_4
137: dconst_1
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #21
144: dastore
145: astore        8
147: aload         8
149: invokestatic  #23
152: new           #32
155: dup
156: iconst_1
157: invokespecial #33
160: astore        9
162: new           #34
165: dup
166: invokespecial #35
169: astore        10
171: new           #8
174: dup
175: iconst_5
176: aload         8
178: bipush        100
180: dconst_0
181: iconst_0
182: iconst_0
183: bipush        100
185: aload         9
187: iconst_1
188: aload         10
190: invokespecial #36
193: astore        11
195: aload         11
197: invokevirtual #53
200: astore        12
202: new           #8
205: dup
206: bipush        36
208: aload         4
210: bipush        97
212: ldc2_w        #374
215: iconst_1
216: iconst_0
217: bipush        10
219: aload         7
221: iconst_0
222: aload         12
224: invokespecial #36
227: astore        13
229: aload         13
231: getfield      #191
234: astore        14
236: aload         13
238: invokevirtual #125
241: istore        15
243: aload         13
245: invokevirtual #69
248: istore        16
250: aload_1
251: invokestatic  #16
254: aload_1
255: invokestatic  #17
258: ldc           #26
260: invokestatic  #19
263: aload_2
264: invokestatic  #16
267: aload         4
269: invokestatic  #16
272: aload         4
274: invokestatic  #17
277: ldc           #26
279: invokestatic  #19
282: aload         5
284: invokestatic  #16
287: aload         5
289: invokestatic  #117
292: ldc           #229
294: invokestatic  #19
297: aload         6
299: invokestatic  #16
302: aload         6
304: invokestatic  #117
307: ldc           #229
309: invokestatic  #19
312: aload         8
314: invokestatic  #16
317: aload         8
319: invokestatic  #17
322: ldc           #26
324: invokestatic  #19
327: aload         12
329: invokestatic  #16
332: aload         14
334: invokestatic  #16
337: new           #39
340: dup
341: invokespecial #40
344: ldc           #41
346: invokevirtual #42
349: iload         15
351: invokevirtual #81
354: ldc           #44
356: invokevirtual #42
359: iconst_0
360: invokevirtual #81
363: ldc           #41
365: invokevirtual #42
368: invokevirtual #45
371: iload         15
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #47
384: new           #39
387: dup
388: invokespecial #40
391: ldc           #41
393: invokevirtual #42
396: iload         16
398: invokevirtual #81
401: ldc           #44
403: invokevirtual #42
406: iconst_0
407: invokevirtual #81
410: ldc           #41
412: invokevirtual #42
415: invokevirtual #45
418: iload         16
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #47
431: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test261
Start line: 10141
End line: 10185
Method source code: 
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        org.apache.commons.math3.linear.RealVector realVector12 = arrayRealVector9.mapDivide((double) (-1.0f));
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math3.linear.RealVector realVector23 = arrayRealVector21.mapDivide((double) (short) 1);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math3.linear.ArrayRealVector(realVector23);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = arrayRealVector9.add(realVector23);
        double[] doubleArray32 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray32);
        org.apache.commons.math3.linear.RealMatrix realMatrix34 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray32);
        boolean boolean35 = arrayRealVector25.equals((java.lang.Object) doubleArray32);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray32, (-0.27666253204073926d));
        org.apache.commons.math3.random.MersenneTwister mersenneTwister44 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double45 = mersenneTwister44.nextGaussian();
        double double46 = mersenneTwister44.nextGaussian();
        mersenneTwister44.setSeed(10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray32, 1, 304.1414144768844d, true, (int) '4', (int) '4', (org.apache.commons.math3.random.RandomGenerator) mersenneTwister44, false);
        org.apache.commons.math3.optimization.GoalType goalType51 = cMAESOptimizer50.getGoalType();
        org.apache.commons.math3.util.Incrementor incrementor52 = cMAESOptimizer50.evaluations;
        boolean boolean53 = incrementor52.canIncrement();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.7023867716137234d) + "'", double45 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.40343496390144584d + "'", double46 == 0.40343496390144584d);
        org.junit.Assert.assertNull(goalType51);
        org.junit.Assert.assertNotNull(incrementor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #719
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: aload_2
77: ldc2_w        #59
80: invokevirtual #151
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #96
127: dup
128: aload         5
130: invokespecial #97
133: astore        6
135: aload         6
137: dconst_1
138: invokevirtual #151
141: astore        7
143: new           #96
146: dup
147: aload         7
149: invokespecial #152
152: astore        8
154: aload_2
155: aload         7
157: invokevirtual #153
160: astore        9
162: bipush        6
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #10
175: dastore
176: dup
177: iconst_2
178: dconst_1
179: dastore
180: dup
181: iconst_3
182: dconst_0
183: dastore
184: dup
185: iconst_4
186: dconst_1
187: dastore
188: dup
189: iconst_5
190: ldc2_w        #21
193: dastore
194: astore        10
196: aload         10
198: invokestatic  #23
201: aload         10
203: invokestatic  #24
206: astore        11
208: aload         9
210: aload         10
212: invokevirtual #154
215: istore        12
217: new           #58
220: dup
221: aload         10
223: ldc2_w        #166
226: invokespecial #61
229: astore        13
231: new           #32
234: dup
235: iconst_1
236: invokespecial #33
239: astore        14
241: aload         14
243: invokevirtual #168
246: dstore        15
248: aload         14
250: invokevirtual #168
253: dstore        17
255: aload         14
257: bipush        10
259: invokevirtual #169
262: new           #8
265: dup
266: iconst_1
267: aload         10
269: iconst_1
270: ldc2_w        #170
273: iconst_1
274: bipush        52
276: bipush        52
278: aload         14
280: iconst_0
281: invokespecial #172
284: astore        19
286: aload         19
288: invokevirtual #149
291: astore        20
293: aload         19
295: getfield      #191
298: astore        21
300: aload         21
302: invokevirtual #204
305: istore        22
307: aload_1
308: invokestatic  #16
311: aload_1
312: invokestatic  #17
315: ldc           #26
317: invokestatic  #19
320: aload_3
321: invokestatic  #16
324: aload         4
326: invokestatic  #16
329: aload         5
331: invokestatic  #16
334: aload         5
336: invokestatic  #17
339: ldc           #26
341: invokestatic  #19
344: aload         7
346: invokestatic  #16
349: aload         9
351: invokestatic  #16
354: aload         10
356: invokestatic  #16
359: aload         10
361: invokestatic  #17
364: ldc           #26
366: invokestatic  #19
369: aload         11
371: invokestatic  #16
374: new           #39
377: dup
378: invokespecial #40
381: ldc           #41
383: invokevirtual #42
386: iload         12
388: invokevirtual #84
391: ldc           #44
393: invokevirtual #42
396: iconst_0
397: invokevirtual #84
400: ldc           #41
402: invokevirtual #42
405: invokevirtual #45
408: iload         12
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #47
421: new           #39
424: dup
425: invokespecial #40
428: ldc           #41
430: invokevirtual #42
433: dload         15
435: invokevirtual #121
438: ldc           #44
440: invokevirtual #42
443: ldc2_w        #74
446: invokevirtual #121
449: ldc           #41
451: invokevirtual #42
454: invokevirtual #45
457: dload         15
459: ldc2_w        #74
462: dcmpl
463: ifne          470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #47
474: new           #39
477: dup
478: invokespecial #40
481: ldc           #41
483: invokevirtual #42
486: dload         17
488: invokevirtual #121
491: ldc           #44
493: invokevirtual #42
496: ldc2_w        #176
499: invokevirtual #121
502: ldc           #41
504: invokevirtual #42
507: invokevirtual #45
510: dload         17
512: ldc2_w        #176
515: dcmpl
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #47
527: aload         20
529: invokestatic  #155
532: aload         21
534: invokestatic  #16
537: new           #39
540: dup
541: invokespecial #40
544: ldc           #41
546: invokevirtual #42
549: iload         22
551: invokevirtual #84
554: ldc           #44
556: invokevirtual #42
559: iconst_0
560: invokevirtual #84
563: ldc           #41
565: invokevirtual #42
568: invokevirtual #45
571: iload         22
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #47
584: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test262
Start line: 10188
End line: 10241
Method source code: 
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray52, 30.012577183478914d);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection62 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException64 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection62, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray52, orderDirection62, true);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 1 and 2 are not strictly increasing (200 >= 2)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
        org.junit.Assert.assertTrue("'" + orderDirection62 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection62.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #720
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: aload         15
326: invokestatic  #135
329: dstore        16
331: new           #107
334: dup
335: aload         15
337: ldc2_w        #143
340: invokestatic  #76
343: invokespecial #110
346: astore        18
348: new           #8
351: dup
352: bipush        -127
354: aload         15
356: invokespecial #9
359: astore        19
361: aload         15
363: ldc2_w        #387
366: invokestatic  #210
369: astore        20
371: getstatic     #73
374: astore        21
376: new           #67
379: dup
380: ldc2_w        #74
383: invokestatic  #76
386: iconst_1
387: invokestatic  #77
390: bipush        100
392: aload         21
394: iconst_1
395: invokespecial #78
398: astore        22
400: aload         15
402: aload         21
404: iconst_1
405: invokestatic  #80
408: ldc_w         #721
411: invokestatic  #14
414: goto          419
417: astore        23
419: aload_1
420: invokestatic  #16
423: aload_1
424: invokestatic  #17
427: ldc           #26
429: invokestatic  #19
432: aload_3
433: invokestatic  #16
436: aload_3
437: invokestatic  #17
440: ldc           #26
442: invokestatic  #19
445: aload         6
447: invokestatic  #16
450: aload         6
452: invokestatic  #17
455: ldc           #26
457: invokestatic  #19
460: aload         8
462: invokestatic  #16
465: aload         8
467: invokestatic  #17
470: ldc           #26
472: invokestatic  #19
475: aload         11
477: invokestatic  #16
480: aload         11
482: invokestatic  #17
485: ldc           #26
487: invokestatic  #19
490: aload         14
492: invokestatic  #16
495: aload         15
497: invokestatic  #16
500: aload         15
502: invokestatic  #17
505: ldc           #105
507: invokestatic  #19
510: new           #39
513: dup
514: invokespecial #40
517: ldc           #41
519: invokevirtual #42
522: dload         16
524: invokevirtual #121
527: ldc           #44
529: invokevirtual #42
532: ldc2_w        #145
535: invokevirtual #121
538: ldc           #41
540: invokevirtual #42
543: invokevirtual #45
546: dload         16
548: ldc2_w        #145
551: dcmpl
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #47
563: aload         20
565: invokestatic  #16
568: aload         20
570: invokestatic  #17
573: ldc_w         #390
576: invokestatic  #19
579: new           #39
582: dup
583: invokespecial #40
586: ldc           #41
588: invokevirtual #42
591: aload         21
593: invokevirtual #43
596: ldc           #44
598: invokevirtual #42
601: getstatic     #73
604: invokevirtual #43
607: ldc           #41
609: invokevirtual #42
612: invokevirtual #45
615: aload         21
617: getstatic     #73
620: invokevirtual #85
623: invokestatic  #47
626: return
Exception table:
from    to  target type
400   414   417   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test263
Start line: 10244
End line: 10262
Method source code: 
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.util.Incrementor incrementor22 = cMAESOptimizer18.evaluations;
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(incrementor22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #722
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: getfield      #191
126: astore        8
128: aload_1
129: invokestatic  #16
132: aload_1
133: invokestatic  #17
136: ldc           #26
138: invokestatic  #19
141: new           #39
144: dup
145: invokespecial #40
148: ldc           #41
150: invokevirtual #42
153: iload         5
155: invokevirtual #81
158: ldc           #44
160: invokevirtual #42
163: iconst_0
164: invokevirtual #81
167: ldc           #41
169: invokevirtual #42
172: invokevirtual #45
175: iload         5
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #47
188: aload         6
190: invokestatic  #16
193: aload         7
195: invokestatic  #16
198: aload         8
200: invokestatic  #16
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test264
Start line: 10265
End line: 10278
Method source code: 
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #723
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #69
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: new           #39
64: dup
65: invokespecial #40
68: ldc           #41
70: invokevirtual #42
73: iload_3
74: invokevirtual #81
77: ldc           #44
79: invokevirtual #42
82: iconst_0
83: invokevirtual #81
86: ldc           #41
88: invokevirtual #42
91: invokevirtual #45
94: iload_3
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #47
106: new           #39
109: dup
110: invokespecial #40
113: ldc           #41
115: invokevirtual #42
118: iload         4
120: invokevirtual #81
123: ldc           #44
125: invokevirtual #42
128: iconst_0
129: invokevirtual #81
132: ldc           #41
134: invokevirtual #42
137: invokevirtual #45
140: iload         4
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #47
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         5
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         5
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: iload         6
214: invokevirtual #81
217: ldc           #44
219: invokevirtual #42
222: iconst_0
223: invokevirtual #81
226: ldc           #41
228: invokevirtual #42
231: invokevirtual #45
234: iload         6
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #47
247: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test265
Start line: 10281
End line: 10324
Method source code: 
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) (-1.0f));
        double[] doubleArray12 = pointValuePair11.getPoint();
        org.apache.commons.math3.random.MersenneTwister mersenneTwister19 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double20 = mersenneTwister19.nextDouble();
        mersenneTwister19.setSeed((long) (short) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12, 35, (-1.570796325858631d), true, 30000, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister19, false, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix28 = new org.apache.commons.math3.linear.BlockRealMatrix(31, (int) '4');
        double[][] doubleArray29 = blockRealMatrix28.getData();
        double double30 = blockRealMatrix28.getFrobeniusNorm();
        double double31 = blockRealMatrix28.getFrobeniusNorm();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix33 = blockRealMatrix28.getColumnMatrix((int) (short) 10);
        double[] doubleArray35 = blockRealMatrix28.getRow(6);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection39 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException41 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection39, true);
        boolean boolean44 = org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray35, orderDirection39, false, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray12, orderDirection39, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 1 and 2 are not increasing (100 > 1)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.4170220046815991d + "'", double20 == 0.4170220046815991d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(blockRealMatrix33);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + orderDirection39 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection39.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #724
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: new           #58
70: dup
71: aload_1
72: ldc2_w        #59
75: invokespecial #61
78: astore_3
79: aload_3
80: invokevirtual #62
83: astore        4
85: new           #32
88: dup
89: iconst_1
90: invokespecial #33
93: astore        5
95: aload         5
97: invokevirtual #275
100: dstore        6
102: aload         5
104: ldc2_w        #276
107: invokevirtual #278
110: aconst_null
111: astore        8
113: new           #8
116: dup
117: sipush        30000
120: aload         4
122: bipush        35
124: ldc2_w        #279
127: iconst_1
128: sipush        30000
131: bipush        100
133: aload         5
135: iconst_0
136: aload         8
138: invokespecial #36
141: astore        9
143: new           #186
146: dup
147: bipush        31
149: bipush        52
151: invokespecial #266
154: astore        10
156: aload         10
158: invokevirtual #419
161: astore        11
163: aload         10
165: invokevirtual #301
168: dstore        12
170: aload         10
172: invokevirtual #301
175: dstore        14
177: aload         10
179: bipush        10
181: invokevirtual #692
184: astore        16
186: aload         10
188: bipush        6
190: invokevirtual #711
193: astore        17
195: getstatic     #73
198: astore        18
200: new           #67
203: dup
204: ldc2_w        #74
207: invokestatic  #76
210: iconst_1
211: invokestatic  #77
214: bipush        100
216: aload         18
218: iconst_1
219: invokespecial #78
222: astore        19
224: aload         17
226: aload         18
228: iconst_0
229: iconst_1
230: invokestatic  #222
233: istore        20
235: aload         4
237: aload         18
239: iconst_0
240: invokestatic  #80
243: ldc_w         #725
246: invokestatic  #14
249: goto          254
252: astore        21
254: aload_1
255: invokestatic  #16
258: aload_1
259: invokestatic  #17
262: ldc           #26
264: invokestatic  #19
267: aload_2
268: invokestatic  #16
271: aload         4
273: invokestatic  #16
276: aload         4
278: invokestatic  #17
281: ldc           #26
283: invokestatic  #19
286: new           #39
289: dup
290: invokespecial #40
293: ldc           #41
295: invokevirtual #42
298: dload         6
300: invokevirtual #121
303: ldc           #44
305: invokevirtual #42
308: ldc2_w        #282
311: invokevirtual #121
314: ldc           #41
316: invokevirtual #42
319: invokevirtual #45
322: dload         6
324: ldc2_w        #282
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #47
339: aload         11
341: invokestatic  #16
344: new           #39
347: dup
348: invokespecial #40
351: ldc           #41
353: invokevirtual #42
356: dload         12
358: invokevirtual #121
361: ldc           #44
363: invokevirtual #42
366: dconst_0
367: invokevirtual #121
370: ldc           #41
372: invokevirtual #42
375: invokevirtual #45
378: dload         12
380: dconst_0
381: dcmpl
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #47
393: new           #39
396: dup
397: invokespecial #40
400: ldc           #41
402: invokevirtual #42
405: dload         14
407: invokevirtual #121
410: ldc           #44
412: invokevirtual #42
415: dconst_0
416: invokevirtual #121
419: ldc           #41
421: invokevirtual #42
424: invokevirtual #45
427: dload         14
429: dconst_0
430: dcmpl
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #47
442: aload         16
444: invokestatic  #16
447: aload         17
449: invokestatic  #16
452: aload         17
454: invokestatic  #17
457: ldc_w         #712
460: invokestatic  #19
463: new           #39
466: dup
467: invokespecial #40
470: ldc           #41
472: invokevirtual #42
475: aload         18
477: invokevirtual #43
480: ldc           #44
482: invokevirtual #42
485: getstatic     #73
488: invokevirtual #43
491: ldc           #41
493: invokevirtual #42
496: invokevirtual #45
499: aload         18
501: getstatic     #73
504: invokevirtual #85
507: invokestatic  #47
510: new           #39
513: dup
514: invokespecial #40
517: ldc           #41
519: invokevirtual #42
522: iload         20
524: invokevirtual #84
527: ldc           #44
529: invokevirtual #42
532: iconst_1
533: invokevirtual #84
536: ldc           #41
538: invokevirtual #42
541: invokevirtual #45
544: iload         20
546: iconst_1
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #47
558: return
Exception table:
from    to  target type
235   249   252   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test266
Start line: 10327
End line: 10338
Method source code: 
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #726
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #232
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: new           #39
58: dup
59: invokespecial #40
62: ldc           #41
64: invokevirtual #42
67: iload_3
68: invokevirtual #81
71: ldc           #44
73: invokevirtual #42
76: iconst_0
77: invokevirtual #81
80: ldc           #41
82: invokevirtual #42
85: invokevirtual #45
88: iload_3
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #47
100: aload         4
102: invokestatic  #16
105: aload         5
107: invokestatic  #16
110: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test267
Start line: 10341
End line: 10357
Method source code: 
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        int int20 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor21 = cMAESOptimizer18.evaluations;
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(incrementor21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #727
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #69
112: istore        6
114: aload         4
116: getfield      #191
119: astore        7
121: aload_1
122: invokestatic  #16
125: aload_1
126: invokestatic  #17
129: ldc           #26
131: invokestatic  #19
134: aload         5
136: invokestatic  #16
139: new           #39
142: dup
143: invokespecial #40
146: ldc           #41
148: invokevirtual #42
151: iload         6
153: invokevirtual #81
156: ldc           #44
158: invokevirtual #42
161: iconst_0
162: invokevirtual #81
165: ldc           #41
167: invokevirtual #42
170: invokevirtual #45
173: iload         6
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #47
186: aload         7
188: invokestatic  #16
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test268
Start line: 10360
End line: 10379
Method source code: 
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.util.Incrementor incrementor20 = cMAESOptimizer18.evaluations;
        int int21 = incrementor20.getCount();
        int int22 = incrementor20.getMaximalCount();
        incrementor20.incrementCount(0);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(incrementor20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #728
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: getfield      #191
112: astore        6
114: aload         6
116: invokevirtual #202
119: istore        7
121: aload         6
123: invokevirtual #413
126: istore        8
128: aload         6
130: iconst_0
131: invokevirtual #260
134: aload_1
135: invokestatic  #16
138: aload_1
139: invokestatic  #17
142: ldc           #26
144: invokestatic  #19
147: aload         5
149: invokestatic  #16
152: aload         6
154: invokestatic  #16
157: new           #39
160: dup
161: invokespecial #40
164: ldc           #41
166: invokevirtual #42
169: iload         7
171: invokevirtual #81
174: ldc           #44
176: invokevirtual #42
179: iconst_0
180: invokevirtual #81
183: ldc           #41
185: invokevirtual #42
188: invokevirtual #45
191: iload         7
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #47
204: new           #39
207: dup
208: invokespecial #40
211: ldc           #41
213: invokevirtual #42
216: iload         8
218: invokevirtual #81
221: ldc           #44
223: invokevirtual #42
226: iconst_0
227: invokevirtual #81
230: ldc           #41
232: invokevirtual #42
235: invokevirtual #45
238: iload         8
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #47
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test269
Start line: 10382
End line: 10463
Method source code: 
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor5 = cMAESOptimizer2.evaluations;
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray15);
        double[] doubleArray24 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector17, arrayRealVector26);
        double[] doubleArray34 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray34);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector26, arrayRealVector36);
        double[] doubleArray44 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray44);
        double[] doubleArray53 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector46, arrayRealVector55);
        arrayRealVector55.unitize();
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection61 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException63 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection61, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection64 = nonMonotonicSequenceException63.getDirection();
        boolean boolean65 = arrayRealVector55.equals((java.lang.Object) orderDirection64);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector66 = arrayRealVector36.append(arrayRealVector55);
        org.apache.commons.math3.linear.RealVector realVector67 = arrayRealVector66.unitVector();
        double[] doubleArray69 = new double[] { '4' };
        double[] doubleArray70 = new double[] {};
        boolean boolean71 = org.apache.commons.math3.util.MathArrays.equals(doubleArray69, doubleArray70);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection75 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException77 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection75, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection78 = nonMonotonicSequenceException77.getDirection();
        boolean boolean80 = org.apache.commons.math3.util.MathArrays.isMonotonic(doubleArray69, orderDirection78, true);
        double[] doubleArray82 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray69, 18);
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray69);
        boolean boolean84 = arrayRealVector66.equals((java.lang.Object) doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair85 = cMAESOptimizer2.optimize((int) (short) 0, multivariateFunction7, goalType8, doubleArray69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(incrementor5);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + orderDirection61 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection61.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection64 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection64.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(arrayRealVector66);
        org.junit.Assert.assertNotNull(realVector67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + orderDirection75 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection75.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection78 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection78.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #729
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #125
47: istore        4
49: aload_2
50: getfield      #191
53: astore        5
55: aconst_null
56: astore        6
58: aconst_null
59: astore        7
61: bipush        6
63: newarray       double
65: dup
66: iconst_0
67: dconst_0
68: dastore
69: dup
70: iconst_1
71: ldc2_w        #10
74: dastore
75: dup
76: iconst_2
77: dconst_1
78: dastore
79: dup
80: iconst_3
81: dconst_0
82: dastore
83: dup
84: iconst_4
85: dconst_1
86: dastore
87: dup
88: iconst_5
89: ldc2_w        #21
92: dastore
93: astore        8
95: aload         8
97: invokestatic  #23
100: new           #96
103: dup
104: aload         8
106: invokespecial #97
109: astore        9
111: bipush        6
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: dup
120: iconst_1
121: ldc2_w        #10
124: dastore
125: dup
126: iconst_2
127: dconst_1
128: dastore
129: dup
130: iconst_3
131: dconst_0
132: dastore
133: dup
134: iconst_4
135: dconst_1
136: dastore
137: dup
138: iconst_5
139: ldc2_w        #21
142: dastore
143: astore        10
145: aload         10
147: invokestatic  #23
150: new           #96
153: dup
154: aload         10
156: invokespecial #97
159: astore        11
161: new           #96
164: dup
165: aload         9
167: aload         11
169: invokespecial #99
172: astore        12
174: bipush        6
176: newarray       double
178: dup
179: iconst_0
180: dconst_0
181: dastore
182: dup
183: iconst_1
184: ldc2_w        #10
187: dastore
188: dup
189: iconst_2
190: dconst_1
191: dastore
192: dup
193: iconst_3
194: dconst_0
195: dastore
196: dup
197: iconst_4
198: dconst_1
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #21
205: dastore
206: astore        13
208: aload         13
210: invokestatic  #23
213: new           #96
216: dup
217: aload         13
219: invokespecial #97
222: astore        14
224: new           #96
227: dup
228: aload         11
230: aload         14
232: invokespecial #99
235: astore        15
237: bipush        6
239: newarray       double
241: dup
242: iconst_0
243: dconst_0
244: dastore
245: dup
246: iconst_1
247: ldc2_w        #10
250: dastore
251: dup
252: iconst_2
253: dconst_1
254: dastore
255: dup
256: iconst_3
257: dconst_0
258: dastore
259: dup
260: iconst_4
261: dconst_1
262: dastore
263: dup
264: iconst_5
265: ldc2_w        #21
268: dastore
269: astore        16
271: aload         16
273: invokestatic  #23
276: new           #96
279: dup
280: aload         16
282: invokespecial #97
285: astore        17
287: bipush        6
289: newarray       double
291: dup
292: iconst_0
293: dconst_0
294: dastore
295: dup
296: iconst_1
297: ldc2_w        #10
300: dastore
301: dup
302: iconst_2
303: dconst_1
304: dastore
305: dup
306: iconst_3
307: dconst_0
308: dastore
309: dup
310: iconst_4
311: dconst_1
312: dastore
313: dup
314: iconst_5
315: ldc2_w        #21
318: dastore
319: astore        18
321: aload         18
323: invokestatic  #23
326: new           #96
329: dup
330: aload         18
332: invokespecial #97
335: astore        19
337: new           #96
340: dup
341: aload         17
343: aload         19
345: invokespecial #99
348: astore        20
350: aload         19
352: invokevirtual #730
355: getstatic     #73
358: astore        21
360: new           #67
363: dup
364: ldc2_w        #74
367: invokestatic  #76
370: iconst_1
371: invokestatic  #77
374: bipush        100
376: aload         21
378: iconst_1
379: invokespecial #78
382: astore        22
384: aload         22
386: invokevirtual #79
389: astore        23
391: aload         19
393: aload         23
395: invokevirtual #154
398: istore        24
400: aload         14
402: aload         19
404: invokevirtual #731
407: astore        25
409: aload         25
411: invokevirtual #732
414: astore        26
416: iconst_1
417: newarray       double
419: dup
420: iconst_0
421: ldc2_w        #70
424: dastore
425: astore        27
427: iconst_0
428: newarray       double
430: astore        28
432: aload         27
434: aload         28
436: invokestatic  #72
439: istore        29
441: getstatic     #73
444: astore        30
446: new           #67
449: dup
450: ldc2_w        #74
453: invokestatic  #76
456: iconst_1
457: invokestatic  #77
460: bipush        100
462: aload         30
464: iconst_1
465: invokespecial #78
468: astore        31
470: aload         31
472: invokevirtual #79
475: astore        32
477: aload         27
479: aload         32
481: iconst_1
482: invokestatic  #157
485: istore        33
487: aload         27
489: bipush        18
491: invokestatic  #423
494: astore        34
496: aload         27
498: invokestatic  #65
501: aload         25
503: aload         27
505: invokevirtual #154
508: istore        35
510: aload_2
511: iconst_0
512: aload         6
514: aload         7
516: aload         27
518: invokevirtual #12
521: astore        36
523: ldc           #13
525: invokestatic  #14
528: goto          533
531: astore        36
533: new           #39
536: dup
537: invokespecial #40
540: ldc           #41
542: invokevirtual #42
545: iload_3
546: invokevirtual #81
549: ldc           #44
551: invokevirtual #42
554: iconst_0
555: invokevirtual #81
558: ldc           #41
560: invokevirtual #42
563: invokevirtual #45
566: iload_3
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #47
578: new           #39
581: dup
582: invokespecial #40
585: ldc           #41
587: invokevirtual #42
590: iload         4
592: invokevirtual #81
595: ldc           #44
597: invokevirtual #42
600: iconst_0
601: invokevirtual #81
604: ldc           #41
606: invokevirtual #42
609: invokevirtual #45
612: iload         4
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #47
625: aload         5
627: invokestatic  #16
630: aload         8
632: invokestatic  #16
635: aload         8
637: invokestatic  #17
640: ldc           #26
642: invokestatic  #19
645: aload         10
647: invokestatic  #16
650: aload         10
652: invokestatic  #17
655: ldc           #26
657: invokestatic  #19
660: aload         13
662: invokestatic  #16
665: aload         13
667: invokestatic  #17
670: ldc           #26
672: invokestatic  #19
675: aload         16
677: invokestatic  #16
680: aload         16
682: invokestatic  #17
685: ldc           #26
687: invokestatic  #19
690: aload         18
692: invokestatic  #16
695: aload         18
697: invokestatic  #17
700: ldc           #26
702: invokestatic  #19
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: aload         21
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: getstatic     #73
730: invokevirtual #43
733: ldc           #41
735: invokevirtual #42
738: invokevirtual #45
741: aload         21
743: getstatic     #73
746: invokevirtual #85
749: invokestatic  #47
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: aload         23
766: invokevirtual #43
769: ldc           #44
771: invokevirtual #42
774: getstatic     #73
777: invokevirtual #43
780: ldc           #41
782: invokevirtual #42
785: invokevirtual #45
788: aload         23
790: getstatic     #73
793: invokevirtual #85
796: invokestatic  #47
799: new           #39
802: dup
803: invokespecial #40
806: ldc           #41
808: invokevirtual #42
811: iload         24
813: invokevirtual #84
816: ldc           #44
818: invokevirtual #42
821: iconst_0
822: invokevirtual #84
825: ldc           #41
827: invokevirtual #42
830: invokevirtual #45
833: iload         24
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #47
846: aload         25
848: invokestatic  #16
851: aload         26
853: invokestatic  #16
856: aload         27
858: invokestatic  #16
861: aload         27
863: invokestatic  #17
866: ldc           #82
868: invokestatic  #19
871: aload         28
873: invokestatic  #16
876: aload         28
878: invokestatic  #17
881: ldc           #83
883: invokestatic  #19
886: new           #39
889: dup
890: invokespecial #40
893: ldc           #41
895: invokevirtual #42
898: iload         29
900: invokevirtual #84
903: ldc           #44
905: invokevirtual #42
908: iconst_0
909: invokevirtual #84
912: ldc           #41
914: invokevirtual #42
917: invokevirtual #45
920: iload         29
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #47
933: new           #39
936: dup
937: invokespecial #40
940: ldc           #41
942: invokevirtual #42
945: aload         30
947: invokevirtual #43
950: ldc           #44
952: invokevirtual #42
955: getstatic     #73
958: invokevirtual #43
961: ldc           #41
963: invokevirtual #42
966: invokevirtual #45
969: aload         30
971: getstatic     #73
974: invokevirtual #85
977: invokestatic  #47
980: new           #39
983: dup
984: invokespecial #40
987: ldc           #41
989: invokevirtual #42
992: aload         32
994: invokevirtual #43
997: ldc           #44
999: invokevirtual #42
1002: getstatic     #73
1005: invokevirtual #43
1008: ldc           #41
1010: invokevirtual #42
1013: invokevirtual #45
1016: aload         32
1018: getstatic     #73
1021: invokevirtual #85
1024: invokestatic  #47
1027: new           #39
1030: dup
1031: invokespecial #40
1034: ldc           #41
1036: invokevirtual #42
1039: iload         33
1041: invokevirtual #84
1044: ldc           #44
1046: invokevirtual #42
1049: iconst_1
1050: invokevirtual #84
1053: ldc           #41
1055: invokevirtual #42
1058: invokevirtual #45
1061: iload         33
1063: iconst_1
1064: if_icmpne     1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #47
1075: aload         34
1077: invokestatic  #16
1080: aload         34
1082: invokestatic  #17
1085: ldc_w         #426
1088: invokestatic  #19
1091: new           #39
1094: dup
1095: invokespecial #40
1098: ldc           #41
1100: invokevirtual #42
1103: iload         35
1105: invokevirtual #84
1108: ldc           #44
1110: invokevirtual #42
1113: iconst_0
1114: invokevirtual #84
1117: ldc           #41
1119: invokevirtual #42
1122: invokevirtual #45
1125: iload         35
1127: ifne          1134
1130: iconst_1
1131: goto          1135
1134: iconst_0
1135: invokestatic  #47
1138: return
Exception table:
from    to  target type
510   528   531   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test270
Start line: 10466
End line: 10488
Method source code: 
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNotNull(realMatrixList24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #733
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #133
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: aload         8
214: invokestatic  #16
217: aload         9
219: invokestatic  #16
222: aload         10
224: invokestatic  #16
227: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test271
Start line: 10491
End line: 10521
Method source code: 
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        double[] doubleArray6 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix8 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray6);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair11 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray6, 2.718281828459045d);
        double[] doubleArray19 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray19);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister27 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker29 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray19, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister27, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker29);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition32 = new org.apache.commons.math3.linear.EigenDecomposition(doubleArray6, doubleArray19, (double) (-18));
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection36 = org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException38 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) 10.0f, (java.lang.Number) 9.536743164062499E-7d, (-1869155408), orderDirection36, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray6, orderDirection36, false);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NonMonotonicSequenceException; message: points 0 and 1 are not decreasing (0 < 100)");
        } catch (org.apache.commons.math3.exception.NonMonotonicSequenceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix8);
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + orderDirection36 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING + "'", orderDirection36.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.DECREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #734
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: aload_1
68: invokestatic  #24
71: astore_3
72: new           #58
75: dup
76: aload_1
77: ldc2_w        #581
80: invokespecial #61
83: astore        4
85: bipush        6
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #10
98: dastore
99: dup
100: iconst_2
101: dconst_1
102: dastore
103: dup
104: iconst_3
105: dconst_0
106: dastore
107: dup
108: iconst_4
109: dconst_1
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #21
116: dastore
117: astore        5
119: aload         5
121: invokestatic  #23
124: new           #32
127: dup
128: iconst_1
129: invokespecial #33
132: astore        6
134: new           #34
137: dup
138: invokespecial #35
141: astore        7
143: new           #8
146: dup
147: iconst_5
148: aload         5
150: bipush        100
152: dconst_0
153: iconst_0
154: iconst_0
155: bipush        100
157: aload         6
159: iconst_1
160: aload         7
162: invokespecial #36
165: astore        8
167: new           #497
170: dup
171: aload_1
172: aload         5
174: ldc2_w        #583
177: invokespecial #585
180: astore        9
182: getstatic     #345
185: astore        10
187: new           #67
190: dup
191: ldc_w         #735
194: invokestatic  #736
197: ldc2_w        #737
200: invokestatic  #76
203: ldc_w         #739
206: aload         10
208: iconst_0
209: invokespecial #78
212: astore        11
214: aload_1
215: aload         10
217: iconst_0
218: invokestatic  #80
221: ldc_w         #346
224: invokestatic  #14
227: goto          232
230: astore        12
232: aload_1
233: invokestatic  #16
236: aload_1
237: invokestatic  #17
240: ldc           #26
242: invokestatic  #19
245: aload_2
246: invokestatic  #16
249: aload_3
250: invokestatic  #16
253: aload         5
255: invokestatic  #16
258: aload         5
260: invokestatic  #17
263: ldc           #26
265: invokestatic  #19
268: new           #39
271: dup
272: invokespecial #40
275: ldc           #41
277: invokevirtual #42
280: aload         10
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: getstatic     #345
293: invokevirtual #43
296: ldc           #41
298: invokevirtual #42
301: invokevirtual #45
304: aload         10
306: getstatic     #345
309: invokevirtual #85
312: invokestatic  #47
315: return
Exception table:
from    to  target type
214   227   230   Class org/apache/commons/math3/exception/NonMonotonicSequenceException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test272
Start line: 10524
End line: 10537
Method source code: 
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        int int4 = cMAESOptimizer2.getEvaluations();
        int int5 = cMAESOptimizer2.getMaxEvaluations();
        int int6 = cMAESOptimizer2.getEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #740
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #69
47: istore        4
49: aload_2
50: invokevirtual #125
53: istore        5
55: aload_2
56: invokevirtual #69
59: istore        6
61: new           #39
64: dup
65: invokespecial #40
68: ldc           #41
70: invokevirtual #42
73: iload_3
74: invokevirtual #81
77: ldc           #44
79: invokevirtual #42
82: iconst_0
83: invokevirtual #81
86: ldc           #41
88: invokevirtual #42
91: invokevirtual #45
94: iload_3
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #47
106: new           #39
109: dup
110: invokespecial #40
113: ldc           #41
115: invokevirtual #42
118: iload         4
120: invokevirtual #81
123: ldc           #44
125: invokevirtual #42
128: iconst_0
129: invokevirtual #81
132: ldc           #41
134: invokevirtual #42
137: invokevirtual #45
140: iload         4
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #47
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         5
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         5
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: iload         6
214: invokevirtual #81
217: ldc           #44
219: invokevirtual #42
222: iconst_0
223: invokevirtual #81
226: ldc           #41
228: invokevirtual #42
231: invokevirtual #45
234: iload         6
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #47
247: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test273
Start line: 10540
End line: 10606
Method source code: 
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix9 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.linear.RealMatrix realMatrix10 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray7);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair12 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, 2.718281828459045d);
        double[] doubleArray14 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray7, (int) '4');
        org.apache.commons.math3.random.RandomGenerator randomGenerator20 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer22 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(419642177, doubleArray7, (int) (byte) 10, 3.051757812500014E-5d, false, (-2146959360), 30000, randomGenerator20, false);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction24 = null;
        org.apache.commons.math3.optimization.GoalType goalType25 = org.apache.commons.math3.optimization.GoalType.MINIMIZE;
        double[] doubleArray27 = new double[] { '4' };
        double[] doubleArray28 = new double[] {};
        boolean boolean29 = org.apache.commons.math3.util.MathArrays.equals(doubleArray27, doubleArray28);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection33 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException35 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection33, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection36 = nonMonotonicSequenceException35.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray27, orderDirection36, true);
        org.apache.commons.math3.linear.RealMatrix realMatrix39 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray27);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex((org.apache.commons.math3.linear.AnyMatrix) realMatrix39, 0);
        org.apache.commons.math3.linear.EigenDecomposition eigenDecomposition43 = new org.apache.commons.math3.linear.EigenDecomposition(realMatrix39, 2.449489742783178d);
        double[] doubleArray44 = eigenDecomposition43.getImagEigenvalues();
        org.apache.commons.math3.linear.RealMatrix realMatrix45 = eigenDecomposition43.getVT();
        double[] doubleArray46 = eigenDecomposition43.getImagEigenvalues();
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix49 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        org.apache.commons.math3.linear.RealVector realVector51 = blockRealMatrix49.getColumnVector(0);
        double[] doubleArray53 = blockRealMatrix49.getColumn((int) (byte) 10);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix54 = blockRealMatrix49.transpose();
        org.apache.commons.math3.exception.util.Localizable localizable55 = null;
        double[][] doubleArray58 = org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout((int) (byte) 100, 0);
        org.apache.commons.math3.util.MathUtils.checkNotNull((java.lang.Object) blockRealMatrix54, localizable55, (java.lang.Object[]) doubleArray58);
        org.apache.commons.math3.util.MathArrays.sortInPlace(doubleArray46, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair61 = cMAESOptimizer22.optimize(13220, multivariateFunction24, goalType25, doubleArray46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertNotNull(realMatrix10);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + goalType25 + "' != '" + org.apache.commons.math3.optimization.GoalType.MINIMIZE + "'", goalType25.equals(org.apache.commons.math3.optimization.GoalType.MINIMIZE));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + orderDirection33 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection33.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection36 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection36.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(realMatrix39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(blockRealMatrix54);
        org.junit.Assert.assertNotNull(doubleArray58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #741
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: aload_1
63: invokestatic  #24
66: astore_2
67: aload_1
68: invokestatic  #24
71: astore_3
72: new           #58
75: dup
76: aload_1
77: ldc2_w        #581
80: invokespecial #61
83: astore        4
85: aload_1
86: bipush        52
88: invokestatic  #423
91: astore        5
93: aconst_null
94: astore        6
96: new           #8
99: dup
100: ldc_w         #347
103: aload_1
104: bipush        10
106: ldc2_w        #686
109: iconst_0
110: ldc_w         #688
113: sipush        30000
116: aload         6
118: iconst_0
119: invokespecial #172
122: astore        7
124: aconst_null
125: astore        8
127: getstatic     #150
130: astore        9
132: iconst_1
133: newarray       double
135: dup
136: iconst_0
137: ldc2_w        #70
140: dastore
141: astore        10
143: iconst_0
144: newarray       double
146: astore        11
148: aload         10
150: aload         11
152: invokestatic  #72
155: istore        12
157: getstatic     #73
160: astore        13
162: new           #67
165: dup
166: ldc2_w        #74
169: invokestatic  #76
172: iconst_1
173: invokestatic  #77
176: bipush        100
178: aload         13
180: iconst_1
181: invokespecial #78
184: astore        14
186: aload         14
188: invokevirtual #79
191: astore        15
193: aload         10
195: aload         15
197: iconst_1
198: invokestatic  #80
201: aload         10
203: invokestatic  #24
206: astore        16
208: aload         16
210: iconst_0
211: invokestatic  #496
214: new           #497
217: dup
218: aload         16
220: ldc2_w        #498
223: invokespecial #500
226: astore        17
228: aload         17
230: invokevirtual #642
233: astore        18
235: aload         17
237: invokevirtual #587
240: astore        19
242: aload         17
244: invokevirtual #642
247: astore        20
249: new           #186
252: dup
253: iconst_5
254: sipush        30000
257: invokespecial #266
260: astore        21
262: aload         21
264: iconst_0
265: invokevirtual #267
268: astore        22
270: aload         21
272: bipush        10
274: invokevirtual #268
277: astore        23
279: aload         21
281: invokevirtual #372
284: astore        24
286: aconst_null
287: astore        25
289: bipush        100
291: iconst_0
292: invokestatic  #311
295: astore        26
297: aload         24
299: aload         25
301: aload         26
303: checkcast     #255
306: invokestatic  #742
309: aload         20
311: aload         26
313: invokestatic  #743
316: aload         7
318: sipush        13220
321: aload         8
323: aload         9
325: aload         20
327: invokevirtual #12
330: astore        27
332: ldc           #13
334: invokestatic  #14
337: goto          342
340: astore        27
342: aload_1
343: invokestatic  #16
346: aload_1
347: invokestatic  #17
350: ldc           #26
352: invokestatic  #19
355: aload_2
356: invokestatic  #16
359: aload_3
360: invokestatic  #16
363: aload         5
365: invokestatic  #16
368: aload         5
370: invokestatic  #17
373: ldc_w         #689
376: invokestatic  #19
379: new           #39
382: dup
383: invokespecial #40
386: ldc           #41
388: invokevirtual #42
391: aload         9
393: invokevirtual #43
396: ldc           #44
398: invokevirtual #42
401: getstatic     #150
404: invokevirtual #43
407: ldc           #41
409: invokevirtual #42
412: invokevirtual #45
415: aload         9
417: getstatic     #150
420: invokevirtual #46
423: invokestatic  #47
426: aload         10
428: invokestatic  #16
431: aload         10
433: invokestatic  #17
436: ldc           #82
438: invokestatic  #19
441: aload         11
443: invokestatic  #16
446: aload         11
448: invokestatic  #17
451: ldc           #83
453: invokestatic  #19
456: new           #39
459: dup
460: invokespecial #40
463: ldc           #41
465: invokevirtual #42
468: iload         12
470: invokevirtual #84
473: ldc           #44
475: invokevirtual #42
478: iconst_0
479: invokevirtual #84
482: ldc           #41
484: invokevirtual #42
487: invokevirtual #45
490: iload         12
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #47
503: new           #39
506: dup
507: invokespecial #40
510: ldc           #41
512: invokevirtual #42
515: aload         13
517: invokevirtual #43
520: ldc           #44
522: invokevirtual #42
525: getstatic     #73
528: invokevirtual #43
531: ldc           #41
533: invokevirtual #42
536: invokevirtual #45
539: aload         13
541: getstatic     #73
544: invokevirtual #85
547: invokestatic  #47
550: new           #39
553: dup
554: invokespecial #40
557: ldc           #41
559: invokevirtual #42
562: aload         15
564: invokevirtual #43
567: ldc           #44
569: invokevirtual #42
572: getstatic     #73
575: invokevirtual #43
578: ldc           #41
580: invokevirtual #42
583: invokevirtual #45
586: aload         15
588: getstatic     #73
591: invokevirtual #85
594: invokestatic  #47
597: aload         16
599: invokestatic  #16
602: aload         18
604: invokestatic  #16
607: aload         18
609: invokestatic  #17
612: ldc_w         #646
615: invokestatic  #19
618: aload         19
620: invokestatic  #16
623: aload         20
625: invokestatic  #16
628: aload         20
630: invokestatic  #17
633: ldc_w         #646
636: invokestatic  #19
639: aload         22
641: invokestatic  #16
644: aload         23
646: invokestatic  #16
649: aload         23
651: invokestatic  #17
654: ldc_w         #272
657: invokestatic  #19
660: aload         24
662: invokestatic  #16
665: aload         26
667: invokestatic  #16
670: return
Exception table:
from    to  target type
316   337   340   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test274
Start line: 10609
End line: 10648
Method source code: 
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        double[] doubleArray2 = new double[] { '4' };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math3.util.MathArrays.equals(doubleArray2, doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix13 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix14 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray3, doubleArray11);
        org.apache.commons.math3.linear.RealMatrix realMatrix16 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray11);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister23 = new org.apache.commons.math3.random.MersenneTwister(1);
        double double24 = mersenneTwister23.nextGaussian();
        mersenneTwister23.setSeed(0L);
        mersenneTwister23.clear();
        double[] doubleArray30 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = null;
        double[] doubleArray39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray39);
        int int41 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray30, (int) ' ', 1024.0d, false, (int) (byte) -1, 3, randomGenerator36, false, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray11, 36, 4.15912713462618d, true, (int) (byte) -1, (int) (short) 10, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister23, false, pointValuePairConvergenceChecker42);
        long long45 = mersenneTwister23.nextLong();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix13);
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.7023867716137234d) + "'", double24 == (-0.7023867716137234d));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2780242596957121269L + "'", long45 == 2780242596957121269L);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #744
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #70
33: dastore
34: astore_1
35: iconst_0
36: newarray       double
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #72
44: istore_3
45: bipush        6
47: newarray       double
49: dup
50: iconst_0
51: dconst_0
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_2
61: dconst_1
62: dastore
63: dup
64: iconst_3
65: dconst_0
66: dastore
67: dup
68: iconst_4
69: dconst_1
70: dastore
71: dup
72: iconst_5
73: ldc2_w        #21
76: dastore
77: astore        4
79: aload         4
81: invokestatic  #23
84: aload         4
86: invokestatic  #24
89: astore        5
91: aload         4
93: invokestatic  #24
96: astore        6
98: new           #96
101: dup
102: aload_2
103: aload         4
105: invokespecial #139
108: astore        7
110: aload         4
112: invokestatic  #24
115: astore        8
117: new           #32
120: dup
121: iconst_1
122: invokespecial #33
125: astore        9
127: aload         9
129: invokevirtual #168
132: dstore        10
134: aload         9
136: lconst_0
137: invokevirtual #278
140: aload         9
142: invokevirtual #467
145: aconst_null
146: astore        12
148: aconst_null
149: astore        13
151: aconst_null
152: astore        14
154: new           #8
157: dup
158: bipush        10
160: aload         14
162: invokespecial #9
165: astore        15
167: aload         15
169: invokevirtual #69
172: istore        16
174: aload         15
176: invokevirtual #53
179: astore        17
181: new           #8
184: dup
185: iconst_0
186: aload         12
188: bipush        32
190: ldc2_w        #468
193: iconst_0
194: iconst_m1
195: iconst_3
196: aload         13
198: iconst_0
199: aload         17
201: invokespecial #36
204: astore        18
206: new           #8
209: dup
210: bipush        100
212: aload         4
214: bipush        36
216: ldc2_w        #470
219: iconst_1
220: iconst_m1
221: bipush        10
223: aload         9
225: iconst_0
226: aload         17
228: invokespecial #36
231: astore        19
233: aload         9
235: invokevirtual #461
238: lstore        20
240: aload_1
241: invokestatic  #16
244: aload_1
245: invokestatic  #17
248: ldc           #82
250: invokestatic  #19
253: aload_2
254: invokestatic  #16
257: aload_2
258: invokestatic  #17
261: ldc           #83
263: invokestatic  #19
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: iload_3
279: invokevirtual #84
282: ldc           #44
284: invokevirtual #42
287: iconst_0
288: invokevirtual #84
291: ldc           #41
293: invokevirtual #42
296: invokevirtual #45
299: iload_3
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #47
311: aload         4
313: invokestatic  #16
316: aload         4
318: invokestatic  #17
321: ldc           #26
323: invokestatic  #19
326: aload         5
328: invokestatic  #16
331: aload         6
333: invokestatic  #16
336: aload         8
338: invokestatic  #16
341: new           #39
344: dup
345: invokespecial #40
348: ldc           #41
350: invokevirtual #42
353: dload         10
355: invokevirtual #121
358: ldc           #44
360: invokevirtual #42
363: ldc2_w        #74
366: invokevirtual #121
369: ldc           #41
371: invokevirtual #42
374: invokevirtual #45
377: dload         10
379: ldc2_w        #74
382: dcmpl
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #47
394: new           #39
397: dup
398: invokespecial #40
401: ldc           #41
403: invokevirtual #42
406: iload         16
408: invokevirtual #81
411: ldc           #44
413: invokevirtual #42
416: iconst_0
417: invokevirtual #81
420: ldc           #41
422: invokevirtual #42
425: invokevirtual #45
428: iload         16
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #47
441: aload         17
443: invokestatic  #16
446: new           #39
449: dup
450: invokespecial #40
453: ldc           #41
455: invokevirtual #42
458: lload         20
460: invokevirtual #462
463: ldc           #44
465: invokevirtual #42
468: ldc2_w        #745
471: invokevirtual #462
474: ldc           #41
476: invokevirtual #42
479: invokevirtual #45
482: lload         20
484: ldc2_w        #745
487: lcmp
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #47
499: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test275
Start line: 10651
End line: 10675
Method source code: 
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int24 = cMAESOptimizer18.getEvaluations();
        int int25 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #747
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #69
126: istore        8
128: aload         4
130: invokevirtual #232
133: astore        9
135: aload         4
137: invokevirtual #69
140: istore        10
142: aload         4
144: invokevirtual #125
147: istore        11
149: aload_1
150: invokestatic  #16
153: aload_1
154: invokestatic  #17
157: ldc           #26
159: invokestatic  #19
162: aload         5
164: invokestatic  #16
167: aload         6
169: invokestatic  #16
172: new           #39
175: dup
176: invokespecial #40
179: ldc           #41
181: invokevirtual #42
184: iload         7
186: invokevirtual #81
189: ldc           #44
191: invokevirtual #42
194: iconst_0
195: invokevirtual #81
198: ldc           #41
200: invokevirtual #42
203: invokevirtual #45
206: iload         7
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #47
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         8
233: invokevirtual #81
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #81
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         8
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #47
266: aload         9
268: invokestatic  #16
271: new           #39
274: dup
275: invokespecial #40
278: ldc           #41
280: invokevirtual #42
283: iload         10
285: invokevirtual #81
288: ldc           #44
290: invokevirtual #42
293: iconst_0
294: invokevirtual #81
297: ldc           #41
299: invokevirtual #42
302: invokevirtual #45
305: iload         10
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #47
318: new           #39
321: dup
322: invokespecial #40
325: ldc           #41
327: invokevirtual #42
330: iload         11
332: invokevirtual #81
335: ldc           #44
337: invokevirtual #42
340: iconst_0
341: invokevirtual #81
344: ldc           #41
346: invokevirtual #42
349: invokevirtual #45
352: iload         11
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #47
365: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test276
Start line: 10678
End line: 10750
Method source code: 
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer18.getGoalType();
        int int25 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction27 = null;
        org.apache.commons.math3.optimization.GoalType goalType28 = null;
        double[] doubleArray35 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray35);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray35);
        double[] doubleArray44 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector46 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector37, arrayRealVector46);
        double[] doubleArray56 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray56);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray56);
        double[] doubleArray65 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray65);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray65);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector58, arrayRealVector67);
        double[] doubleArray75 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray75);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray75);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector78 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector67, arrayRealVector77);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector79 = arrayRealVector46.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector77);
        double[] doubleArray80 = arrayRealVector46.toArray();
        double double81 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray80);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair83 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray80, (java.lang.Double) (-0.7853981633974482d));
        double[] doubleArray84 = doubleArrayPair83.getKey();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair85 = cMAESOptimizer18.optimize(842167452, multivariateFunction27, goalType28, doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertNull(goalType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 201.0174121811342d + "'", double81 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #748
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #149
140: astore        10
142: aload         4
144: invokevirtual #125
147: istore        11
149: aconst_null
150: astore        12
152: aconst_null
153: astore        13
155: bipush        6
157: newarray       double
159: dup
160: iconst_0
161: dconst_0
162: dastore
163: dup
164: iconst_1
165: ldc2_w        #10
168: dastore
169: dup
170: iconst_2
171: dconst_1
172: dastore
173: dup
174: iconst_3
175: dconst_0
176: dastore
177: dup
178: iconst_4
179: dconst_1
180: dastore
181: dup
182: iconst_5
183: ldc2_w        #21
186: dastore
187: astore        14
189: aload         14
191: invokestatic  #23
194: new           #96
197: dup
198: aload         14
200: invokespecial #97
203: astore        15
205: bipush        6
207: newarray       double
209: dup
210: iconst_0
211: dconst_0
212: dastore
213: dup
214: iconst_1
215: ldc2_w        #10
218: dastore
219: dup
220: iconst_2
221: dconst_1
222: dastore
223: dup
224: iconst_3
225: dconst_0
226: dastore
227: dup
228: iconst_4
229: dconst_1
230: dastore
231: dup
232: iconst_5
233: ldc2_w        #21
236: dastore
237: astore        16
239: aload         16
241: invokestatic  #23
244: new           #96
247: dup
248: aload         16
250: invokespecial #97
253: astore        17
255: new           #96
258: dup
259: aload         15
261: aload         17
263: invokespecial #99
266: astore        18
268: bipush        6
270: newarray       double
272: dup
273: iconst_0
274: dconst_0
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #10
281: dastore
282: dup
283: iconst_2
284: dconst_1
285: dastore
286: dup
287: iconst_3
288: dconst_0
289: dastore
290: dup
291: iconst_4
292: dconst_1
293: dastore
294: dup
295: iconst_5
296: ldc2_w        #21
299: dastore
300: astore        19
302: aload         19
304: invokestatic  #23
307: new           #96
310: dup
311: aload         19
313: invokespecial #97
316: astore        20
318: bipush        6
320: newarray       double
322: dup
323: iconst_0
324: dconst_0
325: dastore
326: dup
327: iconst_1
328: ldc2_w        #10
331: dastore
332: dup
333: iconst_2
334: dconst_1
335: dastore
336: dup
337: iconst_3
338: dconst_0
339: dastore
340: dup
341: iconst_4
342: dconst_1
343: dastore
344: dup
345: iconst_5
346: ldc2_w        #21
349: dastore
350: astore        21
352: aload         21
354: invokestatic  #23
357: new           #96
360: dup
361: aload         21
363: invokespecial #97
366: astore        22
368: new           #96
371: dup
372: aload         20
374: aload         22
376: invokespecial #99
379: astore        23
381: bipush        6
383: newarray       double
385: dup
386: iconst_0
387: dconst_0
388: dastore
389: dup
390: iconst_1
391: ldc2_w        #10
394: dastore
395: dup
396: iconst_2
397: dconst_1
398: dastore
399: dup
400: iconst_3
401: dconst_0
402: dastore
403: dup
404: iconst_4
405: dconst_1
406: dastore
407: dup
408: iconst_5
409: ldc2_w        #21
412: dastore
413: astore        24
415: aload         24
417: invokestatic  #23
420: new           #96
423: dup
424: aload         24
426: invokespecial #97
429: astore        25
431: new           #96
434: dup
435: aload         22
437: aload         25
439: invokespecial #99
442: astore        26
444: aload         17
446: dconst_1
447: dconst_1
448: aload         25
450: invokevirtual #100
453: astore        27
455: aload         17
457: invokevirtual #101
460: astore        28
462: aload         28
464: invokestatic  #135
467: dstore        29
469: new           #107
472: dup
473: aload         28
475: ldc2_w        #143
478: invokestatic  #76
481: invokespecial #110
484: astore        31
486: aload         31
488: invokevirtual #749
491: checkcast     #89
494: astore        32
496: aload         4
498: ldc_w         #750
501: aload         12
503: aload         13
505: aload         32
507: invokevirtual #12
510: astore        33
512: ldc           #13
514: invokestatic  #14
517: goto          522
520: astore        33
522: aload_1
523: invokestatic  #16
526: aload_1
527: invokestatic  #17
530: ldc           #26
532: invokestatic  #19
535: aload         5
537: invokestatic  #16
540: aload         6
542: invokestatic  #16
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: iload         7
559: invokevirtual #81
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #81
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         7
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #47
592: aload         8
594: invokestatic  #16
597: aload         9
599: invokestatic  #16
602: aload         10
604: invokestatic  #155
607: new           #39
610: dup
611: invokespecial #40
614: ldc           #41
616: invokevirtual #42
619: iload         11
621: invokevirtual #81
624: ldc           #44
626: invokevirtual #42
629: iconst_0
630: invokevirtual #81
633: ldc           #41
635: invokevirtual #42
638: invokevirtual #45
641: iload         11
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #47
654: aload         14
656: invokestatic  #16
659: aload         14
661: invokestatic  #17
664: ldc           #26
666: invokestatic  #19
669: aload         16
671: invokestatic  #16
674: aload         16
676: invokestatic  #17
679: ldc           #26
681: invokestatic  #19
684: aload         19
686: invokestatic  #16
689: aload         19
691: invokestatic  #17
694: ldc           #26
696: invokestatic  #19
699: aload         21
701: invokestatic  #16
704: aload         21
706: invokestatic  #17
709: ldc           #26
711: invokestatic  #19
714: aload         24
716: invokestatic  #16
719: aload         24
721: invokestatic  #17
724: ldc           #26
726: invokestatic  #19
729: aload         27
731: invokestatic  #16
734: aload         28
736: invokestatic  #16
739: aload         28
741: invokestatic  #17
744: ldc           #105
746: invokestatic  #19
749: new           #39
752: dup
753: invokespecial #40
756: ldc           #41
758: invokevirtual #42
761: dload         29
763: invokevirtual #121
766: ldc           #44
768: invokevirtual #42
771: ldc2_w        #145
774: invokevirtual #121
777: ldc           #41
779: invokevirtual #42
782: invokevirtual #45
785: dload         29
787: ldc2_w        #145
790: dcmpl
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #47
802: aload         32
804: invokestatic  #16
807: aload         32
809: invokestatic  #17
812: ldc           #105
814: invokestatic  #19
817: return
Exception table:
from    to  target type
496   517   520   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test277
Start line: 10753
End line: 10773
Method source code: 
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        int int6 = cMAESOptimizer2.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = cMAESOptimizer2.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #751
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aload_2
56: invokevirtual #125
59: istore        6
61: aload_2
62: invokevirtual #28
65: astore        7
67: ldc           #29
69: invokestatic  #14
72: goto          77
75: astore        7
77: new           #39
80: dup
81: invokespecial #40
84: ldc           #41
86: invokevirtual #42
89: iload_3
90: invokevirtual #81
93: ldc           #44
95: invokevirtual #42
98: iconst_0
99: invokevirtual #81
102: ldc           #41
104: invokevirtual #42
107: invokevirtual #45
110: iload_3
111: ifne          118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #47
122: aload         4
124: invokestatic  #16
127: aload         5
129: invokestatic  #16
132: new           #39
135: dup
136: invokespecial #40
139: ldc           #41
141: invokevirtual #42
144: iload         6
146: invokevirtual #81
149: ldc           #44
151: invokevirtual #42
154: iconst_0
155: invokevirtual #81
158: ldc           #41
160: invokevirtual #42
163: invokevirtual #45
166: iload         6
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #47
179: return
Exception table:
from    to  target type
61    72    75   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test278
Start line: 10776
End line: 10798
Method source code: 
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getEvaluations();
        int int23 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = cMAESOptimizer18.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #752
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #69
126: istore        8
128: aload         4
130: invokevirtual #69
133: istore        9
135: aload         4
137: invokevirtual #53
140: astore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         8
226: invokevirtual #81
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #81
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         8
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #47
259: new           #39
262: dup
263: invokespecial #40
266: ldc           #41
268: invokevirtual #42
271: iload         9
273: invokevirtual #81
276: ldc           #44
278: invokevirtual #42
281: iconst_0
282: invokevirtual #81
285: ldc           #41
287: invokevirtual #42
290: invokevirtual #45
293: iload         9
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #47
306: aload         10
308: invokestatic  #16
311: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test279
Start line: 10801
End line: 10819
Method source code: 
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = null;
        double[] doubleArray10 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray10);
        int int12 = cMAESOptimizer11.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker13 = cMAESOptimizer11.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray1, (int) ' ', 1024.0d, false, (int) (byte) -1, 3, randomGenerator7, false, pointValuePairConvergenceChecker13);
        int int15 = cMAESOptimizer14.getEvaluations();
        int int16 = cMAESOptimizer14.getEvaluations();
        int int17 = cMAESOptimizer14.getEvaluations();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #753
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aconst_null
30: astore_3
31: new           #8
34: dup
35: bipush        10
37: aload_3
38: invokespecial #9
41: astore        4
43: aload         4
45: invokevirtual #69
48: istore        5
50: aload         4
52: invokevirtual #53
55: astore        6
57: new           #8
60: dup
61: iconst_0
62: aload_1
63: bipush        32
65: ldc2_w        #468
68: iconst_0
69: iconst_m1
70: iconst_3
71: aload_2
72: iconst_0
73: aload         6
75: invokespecial #36
78: astore        7
80: aload         7
82: invokevirtual #69
85: istore        8
87: aload         7
89: invokevirtual #69
92: istore        9
94: aload         7
96: invokevirtual #69
99: istore        10
101: new           #39
104: dup
105: invokespecial #40
108: ldc           #41
110: invokevirtual #42
113: iload         5
115: invokevirtual #81
118: ldc           #44
120: invokevirtual #42
123: iconst_0
124: invokevirtual #81
127: ldc           #41
129: invokevirtual #42
132: invokevirtual #45
135: iload         5
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #47
148: aload         6
150: invokestatic  #16
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         8
167: invokevirtual #81
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #81
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         8
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #47
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: iload         9
214: invokevirtual #81
217: ldc           #44
219: invokevirtual #42
222: iconst_0
223: invokevirtual #81
226: ldc           #41
228: invokevirtual #42
231: invokevirtual #45
234: iload         9
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #47
247: new           #39
250: dup
251: invokespecial #40
254: ldc           #41
256: invokevirtual #42
259: iload         10
261: invokevirtual #81
264: ldc           #44
266: invokevirtual #42
269: iconst_0
270: invokevirtual #81
273: ldc           #41
275: invokevirtual #42
278: invokevirtual #45
281: iload         10
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #47
294: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test280
Start line: 10822
End line: 10844
Method source code: 
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        int int24 = cMAESOptimizer18.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #754
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #232
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #69
140: istore        10
142: aload_1
143: invokestatic  #16
146: aload_1
147: invokestatic  #17
150: ldc           #26
152: invokestatic  #19
155: aload         5
157: invokestatic  #16
160: aload         6
162: invokestatic  #16
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         7
179: invokevirtual #81
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #81
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         7
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #47
212: aload         8
214: invokestatic  #16
217: aload         9
219: invokestatic  #16
222: new           #39
225: dup
226: invokespecial #40
229: ldc           #41
231: invokevirtual #42
234: iload         10
236: invokevirtual #81
239: ldc           #44
241: invokevirtual #42
244: iconst_0
245: invokevirtual #81
248: ldc           #41
250: invokevirtual #42
253: invokevirtual #45
256: iload         10
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #47
269: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test281
Start line: 10847
End line: 10877
Method source code: 
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer18.getConvergenceChecker();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getMaxEvaluations();
        org.apache.commons.math3.util.Incrementor incrementor23 = cMAESOptimizer18.evaluations;
        int int24 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList25 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = cMAESOptimizer18.getConvergenceChecker();
        int int28 = cMAESOptimizer18.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(incrementor23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker26);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #755
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #53
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #125
126: istore        8
128: aload         4
130: getfield      #191
133: astore        9
135: aload         4
137: invokevirtual #125
140: istore        10
142: aload         4
144: invokevirtual #232
147: astore        11
149: aload         4
151: invokevirtual #53
154: astore        12
156: aload         4
158: invokevirtual #53
161: astore        13
163: aload         4
165: invokevirtual #125
168: istore        14
170: aload_1
171: invokestatic  #16
174: aload_1
175: invokestatic  #17
178: ldc           #26
180: invokestatic  #19
183: aload         5
185: invokestatic  #16
188: aload         6
190: invokestatic  #16
193: new           #39
196: dup
197: invokespecial #40
200: ldc           #41
202: invokevirtual #42
205: iload         7
207: invokevirtual #81
210: ldc           #44
212: invokevirtual #42
215: iconst_0
216: invokevirtual #81
219: ldc           #41
221: invokevirtual #42
224: invokevirtual #45
227: iload         7
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #47
240: new           #39
243: dup
244: invokespecial #40
247: ldc           #41
249: invokevirtual #42
252: iload         8
254: invokevirtual #81
257: ldc           #44
259: invokevirtual #42
262: iconst_0
263: invokevirtual #81
266: ldc           #41
268: invokevirtual #42
271: invokevirtual #45
274: iload         8
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #47
287: aload         9
289: invokestatic  #16
292: new           #39
295: dup
296: invokespecial #40
299: ldc           #41
301: invokevirtual #42
304: iload         10
306: invokevirtual #81
309: ldc           #44
311: invokevirtual #42
314: iconst_0
315: invokevirtual #81
318: ldc           #41
320: invokevirtual #42
323: invokevirtual #45
326: iload         10
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #47
339: aload         11
341: invokestatic  #16
344: aload         12
346: invokestatic  #16
349: aload         13
351: invokestatic  #16
354: new           #39
357: dup
358: invokespecial #40
361: ldc           #41
363: invokevirtual #42
366: iload         14
368: invokevirtual #81
371: ldc           #44
373: invokevirtual #42
376: iconst_0
377: invokevirtual #81
380: ldc           #41
382: invokevirtual #42
385: invokevirtual #45
388: iload         14
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #47
401: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test282
Start line: 10880
End line: 10909
Method source code: 
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer18.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer18.getEvaluations();
        int int22 = cMAESOptimizer18.getEvaluations();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer18.getStatisticsFitnessHistory();
        org.apache.commons.math3.util.Incrementor incrementor24 = cMAESOptimizer18.evaluations;
        // The following exception was thrown during execution in test generation
        try {
            incrementor24.incrementCount(1433601405);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.MaxCountExceededException; message: illegal state: maximal count (0) exceeded");
        } catch (org.apache.commons.math3.exception.MaxCountExceededException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(incrementor24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #756
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #53
105: astore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #69
119: istore        7
121: aload         4
123: invokevirtual #69
126: istore        8
128: aload         4
130: invokevirtual #232
133: astore        9
135: aload         4
137: getfield      #191
140: astore        10
142: aload         10
144: ldc_w         #532
147: invokevirtual #260
150: ldc           #198
152: invokestatic  #14
155: goto          160
158: astore        11
160: aload_1
161: invokestatic  #16
164: aload_1
165: invokestatic  #17
168: ldc           #26
170: invokestatic  #19
173: aload         5
175: invokestatic  #16
178: aload         6
180: invokestatic  #16
183: new           #39
186: dup
187: invokespecial #40
190: ldc           #41
192: invokevirtual #42
195: iload         7
197: invokevirtual #81
200: ldc           #44
202: invokevirtual #42
205: iconst_0
206: invokevirtual #81
209: ldc           #41
211: invokevirtual #42
214: invokevirtual #45
217: iload         7
219: ifne          226
222: iconst_1
223: goto          227
226: iconst_0
227: invokestatic  #47
230: new           #39
233: dup
234: invokespecial #40
237: ldc           #41
239: invokevirtual #42
242: iload         8
244: invokevirtual #81
247: ldc           #44
249: invokevirtual #42
252: iconst_0
253: invokevirtual #81
256: ldc           #41
258: invokevirtual #42
261: invokevirtual #45
264: iload         8
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #47
277: aload         9
279: invokestatic  #16
282: aload         10
284: invokestatic  #16
287: return
Exception table:
from    to  target type
142   155   158   Class org/apache/commons/math3/exception/MaxCountExceededException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test283
Start line: 10912
End line: 10944
Method source code: 
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair7 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException5, goalType6);
        double[] doubleArray9 = new double[] { '4' };
        double[] doubleArray10 = new double[] {};
        boolean boolean11 = org.apache.commons.math3.util.MathArrays.equals(doubleArray9, doubleArray10);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection15 = org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING;
        org.apache.commons.math3.exception.NonMonotonicSequenceException nonMonotonicSequenceException17 = new org.apache.commons.math3.exception.NonMonotonicSequenceException((java.lang.Number) (-0.7023867716137234d), (java.lang.Number) (short) 1, (int) (short) 100, orderDirection15, true);
        org.apache.commons.math3.util.MathArrays.OrderDirection orderDirection18 = nonMonotonicSequenceException17.getDirection();
        org.apache.commons.math3.util.MathArrays.checkOrder(doubleArray9, orderDirection18, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair21 = cMAESOptimizer1.optimizeInternal((-1016), multivariateFunction4, goalType6, doubleArray9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + orderDirection15 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection15.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
        org.junit.Assert.assertTrue("'" + orderDirection18 + "' != '" + org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING + "'", orderDirection18.equals(org.apache.commons.math3.util.MathArrays.OrderDirection.INCREASING));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #757
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: iconst_1
30: invokespecial #245
33: astore_1
34: aload_1
35: invokevirtual #219
38: astore_2
39: aconst_null
40: astore_3
41: aconst_null
42: astore        4
44: getstatic     #37
47: astore        5
49: new           #107
52: dup
53: aload         4
55: aload         5
57: invokespecial #110
60: astore        6
62: iconst_1
63: newarray       double
65: dup
66: iconst_0
67: ldc2_w        #70
70: dastore
71: astore        7
73: iconst_0
74: newarray       double
76: astore        8
78: aload         7
80: aload         8
82: invokestatic  #72
85: istore        9
87: getstatic     #73
90: astore        10
92: new           #67
95: dup
96: ldc2_w        #74
99: invokestatic  #76
102: iconst_1
103: invokestatic  #77
106: bipush        100
108: aload         10
110: iconst_1
111: invokespecial #78
114: astore        11
116: aload         11
118: invokevirtual #79
121: astore        12
123: aload         7
125: aload         12
127: iconst_1
128: invokestatic  #80
131: aload_1
132: sipush        -1016
135: aload_3
136: aload         5
138: aload         7
140: invokevirtual #126
143: astore        13
145: ldc           #13
147: invokestatic  #14
150: goto          155
153: astore        13
155: aload_2
156: invokestatic  #16
159: new           #39
162: dup
163: invokespecial #40
166: ldc           #41
168: invokevirtual #42
171: aload         5
173: invokevirtual #43
176: ldc           #44
178: invokevirtual #42
181: getstatic     #37
184: invokevirtual #43
187: ldc           #41
189: invokevirtual #42
192: invokevirtual #45
195: aload         5
197: getstatic     #37
200: invokevirtual #46
203: invokestatic  #47
206: aload         7
208: invokestatic  #16
211: aload         7
213: invokestatic  #17
216: ldc           #82
218: invokestatic  #19
221: aload         8
223: invokestatic  #16
226: aload         8
228: invokestatic  #17
231: ldc           #83
233: invokestatic  #19
236: new           #39
239: dup
240: invokespecial #40
243: ldc           #41
245: invokevirtual #42
248: iload         9
250: invokevirtual #84
253: ldc           #44
255: invokevirtual #42
258: iconst_0
259: invokevirtual #84
262: ldc           #41
264: invokevirtual #42
267: invokevirtual #45
270: iload         9
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #47
283: new           #39
286: dup
287: invokespecial #40
290: ldc           #41
292: invokevirtual #42
295: aload         10
297: invokevirtual #43
300: ldc           #44
302: invokevirtual #42
305: getstatic     #73
308: invokevirtual #43
311: ldc           #41
313: invokevirtual #42
316: invokevirtual #45
319: aload         10
321: getstatic     #73
324: invokevirtual #85
327: invokestatic  #47
330: new           #39
333: dup
334: invokespecial #40
337: ldc           #41
339: invokevirtual #42
342: aload         12
344: invokevirtual #43
347: ldc           #44
349: invokevirtual #42
352: getstatic     #73
355: invokevirtual #43
358: ldc           #41
360: invokevirtual #42
363: invokevirtual #45
366: aload         12
368: getstatic     #73
371: invokevirtual #85
374: invokestatic  #47
377: return
Exception table:
from    to  target type
131   150   153   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test284
Start line: 10947
End line: 10975
Method source code: 
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        double[] doubleArray23 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray23);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister31 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker33 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray23, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister31, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        double double35 = simpleValueChecker33.getRelativeThreshold();
        double double36 = simpleValueChecker33.getRelativeThreshold();
        double double37 = simpleValueChecker33.getAbsoluteThreshold();
        double double38 = simpleValueChecker33.getAbsoluteThreshold();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray7, 0, (double) 52, false, 13220, 0, randomGenerator14, false, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker33);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        boolean boolean41 = arrayRealVector40.isNaN();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.1102230246251565E-14d + "'", double35 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.1102230246251565E-14d + "'", double36 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.2250738585072014E-306d + "'", double37 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.2250738585072014E-306d + "'", double38 == 2.2250738585072014E-306d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #758
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: getstatic     #481
65: astore_2
66: bipush        6
68: newarray       double
70: dup
71: iconst_0
72: dconst_0
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #10
79: dastore
80: dup
81: iconst_2
82: dconst_1
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_1
91: dastore
92: dup
93: iconst_5
94: ldc2_w        #21
97: dastore
98: astore_3
99: aload_3
100: invokestatic  #23
103: new           #32
106: dup
107: iconst_1
108: invokespecial #33
111: astore        4
113: new           #34
116: dup
117: invokespecial #35
120: astore        5
122: new           #8
125: dup
126: iconst_5
127: aload_3
128: bipush        100
130: dconst_0
131: iconst_0
132: iconst_0
133: bipush        100
135: aload         4
137: iconst_1
138: aload         5
140: invokespecial #36
143: astore        6
145: aload         5
147: invokevirtual #162
150: dstore        7
152: aload         5
154: invokevirtual #162
157: dstore        9
159: aload         5
161: invokevirtual #116
164: dstore        11
166: aload         5
168: invokevirtual #116
171: dstore        13
173: new           #8
176: dup
177: bipush        100
179: aload_1
180: iconst_0
181: ldc2_w        #70
184: iconst_0
185: sipush        13220
188: iconst_0
189: aload_2
190: iconst_0
191: aload         5
193: invokespecial #36
196: astore        15
198: new           #96
201: dup
202: aload_1
203: invokespecial #97
206: astore        16
208: aload         16
210: invokevirtual #759
213: istore        17
215: aload_1
216: invokestatic  #16
219: aload_1
220: invokestatic  #17
223: ldc           #26
225: invokestatic  #19
228: aload_2
229: invokestatic  #16
232: aload_3
233: invokestatic  #16
236: aload_3
237: invokestatic  #17
240: ldc           #26
242: invokestatic  #19
245: new           #39
248: dup
249: invokespecial #40
252: ldc           #41
254: invokevirtual #42
257: dload         7
259: invokevirtual #121
262: ldc           #44
264: invokevirtual #42
267: ldc2_w        #163
270: invokevirtual #121
273: ldc           #41
275: invokevirtual #42
278: invokevirtual #45
281: dload         7
283: ldc2_w        #163
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #47
298: new           #39
301: dup
302: invokespecial #40
305: ldc           #41
307: invokevirtual #42
310: dload         9
312: invokevirtual #121
315: ldc           #44
317: invokevirtual #42
320: ldc2_w        #163
323: invokevirtual #121
326: ldc           #41
328: invokevirtual #42
331: invokevirtual #45
334: dload         9
336: ldc2_w        #163
339: dcmpl
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #47
351: new           #39
354: dup
355: invokespecial #40
358: ldc           #41
360: invokevirtual #42
363: dload         11
365: invokevirtual #121
368: ldc           #44
370: invokevirtual #42
373: ldc2_w        #122
376: invokevirtual #121
379: ldc           #41
381: invokevirtual #42
384: invokevirtual #45
387: dload         11
389: ldc2_w        #122
392: dcmpl
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #47
404: new           #39
407: dup
408: invokespecial #40
411: ldc           #41
413: invokevirtual #42
416: dload         13
418: invokevirtual #121
421: ldc           #44
423: invokevirtual #42
426: ldc2_w        #122
429: invokevirtual #121
432: ldc           #41
434: invokevirtual #42
437: invokevirtual #45
440: dload         13
442: ldc2_w        #122
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #47
457: new           #39
460: dup
461: invokespecial #40
464: ldc           #41
466: invokevirtual #42
469: iload         17
471: invokevirtual #84
474: ldc           #44
476: invokevirtual #42
479: iconst_0
480: invokevirtual #84
483: ldc           #41
485: invokevirtual #42
488: invokevirtual #45
491: iload         17
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #47
504: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test285
Start line: 10978
End line: 10984
Method source code: 
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        int int1 = cMAESOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #760
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #459
32: astore_1
33: aload_1
34: invokevirtual #69
37: istore_2
38: new           #39
41: dup
42: invokespecial #40
45: ldc           #41
47: invokevirtual #42
50: iload_2
51: invokevirtual #81
54: ldc           #44
56: invokevirtual #42
59: iconst_0
60: invokevirtual #81
63: ldc           #41
65: invokevirtual #42
68: invokevirtual #45
71: iload_2
72: ifne          79
75: iconst_1
76: goto          80
79: iconst_0
80: invokestatic  #47
83: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test286
Start line: 10987
End line: 11032
Method source code: 
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        double[] doubleArray16 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray16);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, arrayRealVector18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector30, arrayRealVector39);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector39, arrayRealVector49);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = arrayRealVector18.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector49);
        double[] doubleArray52 = arrayRealVector18.toArray();
        double double53 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray52);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair55 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray52, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray52);
        double[] doubleArray58 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray52, 30.012577183478914d);
        org.apache.commons.math3.linear.RealVector realVector59 = org.apache.commons.math3.linear.MatrixUtils.createRealVector(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 201.0174121811342d + "'", double53 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
        org.junit.Assert.assertNotNull(realVector59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #761
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: bipush        6
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #10
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: dup
90: iconst_3
91: dconst_0
92: dastore
93: dup
94: iconst_4
95: dconst_1
96: dastore
97: dup
98: iconst_5
99: ldc2_w        #21
102: dastore
103: astore_3
104: aload_3
105: invokestatic  #23
108: new           #96
111: dup
112: aload_3
113: invokespecial #97
116: astore        4
118: new           #96
121: dup
122: aload_2
123: aload         4
125: invokespecial #99
128: astore        5
130: bipush        6
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: dup
139: iconst_1
140: ldc2_w        #10
143: dastore
144: dup
145: iconst_2
146: dconst_1
147: dastore
148: dup
149: iconst_3
150: dconst_0
151: dastore
152: dup
153: iconst_4
154: dconst_1
155: dastore
156: dup
157: iconst_5
158: ldc2_w        #21
161: dastore
162: astore        6
164: aload         6
166: invokestatic  #23
169: new           #96
172: dup
173: aload         6
175: invokespecial #97
178: astore        7
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #10
193: dastore
194: dup
195: iconst_2
196: dconst_1
197: dastore
198: dup
199: iconst_3
200: dconst_0
201: dastore
202: dup
203: iconst_4
204: dconst_1
205: dastore
206: dup
207: iconst_5
208: ldc2_w        #21
211: dastore
212: astore        8
214: aload         8
216: invokestatic  #23
219: new           #96
222: dup
223: aload         8
225: invokespecial #97
228: astore        9
230: new           #96
233: dup
234: aload         7
236: aload         9
238: invokespecial #99
241: astore        10
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: dconst_0
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #10
256: dastore
257: dup
258: iconst_2
259: dconst_1
260: dastore
261: dup
262: iconst_3
263: dconst_0
264: dastore
265: dup
266: iconst_4
267: dconst_1
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #21
274: dastore
275: astore        11
277: aload         11
279: invokestatic  #23
282: new           #96
285: dup
286: aload         11
288: invokespecial #97
291: astore        12
293: new           #96
296: dup
297: aload         9
299: aload         12
301: invokespecial #99
304: astore        13
306: aload         4
308: dconst_1
309: dconst_1
310: aload         12
312: invokevirtual #100
315: astore        14
317: aload         4
319: invokevirtual #101
322: astore        15
324: aload         15
326: invokestatic  #135
329: dstore        16
331: new           #107
334: dup
335: aload         15
337: ldc2_w        #143
340: invokestatic  #76
343: invokespecial #110
346: astore        18
348: new           #8
351: dup
352: bipush        -127
354: aload         15
356: invokespecial #9
359: astore        19
361: aload         15
363: ldc2_w        #387
366: invokestatic  #210
369: astore        20
371: aload         20
373: invokestatic  #193
376: astore        21
378: aload_1
379: invokestatic  #16
382: aload_1
383: invokestatic  #17
386: ldc           #26
388: invokestatic  #19
391: aload_3
392: invokestatic  #16
395: aload_3
396: invokestatic  #17
399: ldc           #26
401: invokestatic  #19
404: aload         6
406: invokestatic  #16
409: aload         6
411: invokestatic  #17
414: ldc           #26
416: invokestatic  #19
419: aload         8
421: invokestatic  #16
424: aload         8
426: invokestatic  #17
429: ldc           #26
431: invokestatic  #19
434: aload         11
436: invokestatic  #16
439: aload         11
441: invokestatic  #17
444: ldc           #26
446: invokestatic  #19
449: aload         14
451: invokestatic  #16
454: aload         15
456: invokestatic  #16
459: aload         15
461: invokestatic  #17
464: ldc           #105
466: invokestatic  #19
469: new           #39
472: dup
473: invokespecial #40
476: ldc           #41
478: invokevirtual #42
481: dload         16
483: invokevirtual #121
486: ldc           #44
488: invokevirtual #42
491: ldc2_w        #145
494: invokevirtual #121
497: ldc           #41
499: invokevirtual #42
502: invokevirtual #45
505: dload         16
507: ldc2_w        #145
510: dcmpl
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #47
522: aload         20
524: invokestatic  #16
527: aload         20
529: invokestatic  #17
532: ldc_w         #390
535: invokestatic  #19
538: aload         21
540: invokestatic  #16
543: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test287
Start line: 11035
End line: 11043
Method source code: 
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #762
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: bipush        35
31: invokespecial #245
34: astore_1
35: aload_1
36: invokevirtual #125
39: istore_2
40: aload_1
41: invokevirtual #69
44: istore_3
45: new           #39
48: dup
49: invokespecial #40
52: ldc           #41
54: invokevirtual #42
57: iload_2
58: invokevirtual #81
61: ldc           #44
63: invokevirtual #42
66: iconst_0
67: invokevirtual #81
70: ldc           #41
72: invokevirtual #42
75: invokevirtual #45
78: iload_2
79: ifne          86
82: iconst_1
83: goto          87
86: iconst_0
87: invokestatic  #47
90: new           #39
93: dup
94: invokespecial #40
97: ldc           #41
99: invokevirtual #42
102: iload_3
103: invokevirtual #81
106: ldc           #44
108: invokevirtual #42
111: iconst_0
112: invokevirtual #81
115: ldc           #41
117: invokevirtual #42
120: invokevirtual #45
123: iload_3
124: ifne          131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #47
135: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test288
Start line: 11046
End line: 11092
Method source code: 
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math3.linear.ArrayRealVector(100, (double) 35);
        double[] doubleArray6 = new double[] { '4' };
        double[] doubleArray7 = new double[] {};
        boolean boolean8 = org.apache.commons.math3.util.MathArrays.equals(doubleArray6, doubleArray7);
        double[] doubleArray15 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray15);
        org.apache.commons.math3.linear.RealMatrix realMatrix17 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        org.apache.commons.math3.linear.RealMatrix realMatrix18 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray15);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7, doubleArray15);
        org.apache.commons.math3.linear.RealVector realVector21 = arrayRealVector19.mapDivideToSelf((double) (short) -10);
        org.apache.commons.math3.exception.util.Localizable localizable22 = null;
        java.lang.Double[] doubleArray24 = new java.lang.Double[] { 112.0d };
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.util.MathUtils.checkNotNull((java.lang.Object) arrayRealVector19, localizable22, (java.lang.Object[]) doubleArray24);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math3.linear.BlockRealMatrix blockRealMatrix30 = new org.apache.commons.math3.linear.BlockRealMatrix(5, 30000);
        org.apache.commons.math3.linear.RealVector realVector32 = blockRealMatrix30.getColumnVector(0);
        double[] doubleArray34 = blockRealMatrix30.getColumn((int) (byte) 10);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector27, doubleArray34);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray34);
        arrayRealVector2.setSubVector(0, doubleArray34);
        org.apache.commons.math3.linear.RealVectorPreservingVisitor realVectorPreservingVisitor38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double39 = arrayRealVector2.walkInDefaultOrder(realVectorPreservingVisitor38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix17);
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #763
20: aastore
21: invokevirtual #7
24: pop
25: new           #96
28: dup
29: bipush        100
31: ldc2_w        #87
34: invokespecial #764
37: astore_1
38: iconst_1
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #70
46: dastore
47: astore_2
48: iconst_0
49: newarray       double
51: astore_3
52: aload_2
53: aload_3
54: invokestatic  #72
57: istore        4
59: bipush        6
61: newarray       double
63: dup
64: iconst_0
65: dconst_0
66: dastore
67: dup
68: iconst_1
69: ldc2_w        #10
72: dastore
73: dup
74: iconst_2
75: dconst_1
76: dastore
77: dup
78: iconst_3
79: dconst_0
80: dastore
81: dup
82: iconst_4
83: dconst_1
84: dastore
85: dup
86: iconst_5
87: ldc2_w        #21
90: dastore
91: astore        5
93: aload         5
95: invokestatic  #23
98: aload         5
100: invokestatic  #24
103: astore        6
105: aload         5
107: invokestatic  #24
110: astore        7
112: new           #96
115: dup
116: aload_3
117: aload         5
119: invokespecial #139
122: astore        8
124: aload         8
126: ldc2_w        #765
129: invokevirtual #767
132: astore        9
134: aconst_null
135: astore        10
137: iconst_1
138: anewarray     #694
141: dup
142: iconst_0
143: ldc2_w        #768
146: invokestatic  #76
149: aastore
150: astore        11
152: new           #96
155: dup
156: aload         11
158: invokespecial #770
161: astore        12
163: aload         8
165: aload         10
167: aload         11
169: checkcast     #255
172: invokestatic  #742
175: new           #96
178: dup
179: aload         11
181: invokespecial #770
184: astore        13
186: new           #186
189: dup
190: iconst_5
191: sipush        30000
194: invokespecial #266
197: astore        14
199: aload         14
201: iconst_0
202: invokevirtual #267
205: astore        15
207: aload         14
209: bipush        10
211: invokevirtual #268
214: astore        16
216: new           #96
219: dup
220: aload         13
222: aload         16
224: invokespecial #102
227: astore        17
229: new           #8
232: dup
233: iconst_0
234: aload         16
236: invokespecial #9
239: astore        18
241: aload_1
242: iconst_0
243: aload         16
245: invokevirtual #393
248: aconst_null
249: astore        19
251: aload_1
252: aload         19
254: invokevirtual #771
257: dstore        20
259: ldc           #29
261: invokestatic  #14
264: goto          269
267: astore        20
269: aload_2
270: invokestatic  #16
273: aload_2
274: invokestatic  #17
277: ldc           #82
279: invokestatic  #19
282: aload_3
283: invokestatic  #16
286: aload_3
287: invokestatic  #17
290: ldc           #83
292: invokestatic  #19
295: new           #39
298: dup
299: invokespecial #40
302: ldc           #41
304: invokevirtual #42
307: iload         4
309: invokevirtual #84
312: ldc           #44
314: invokevirtual #42
317: iconst_0
318: invokevirtual #84
321: ldc           #41
323: invokevirtual #42
326: invokevirtual #45
329: iload         4
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #47
342: aload         5
344: invokestatic  #16
347: aload         5
349: invokestatic  #17
352: ldc           #26
354: invokestatic  #19
357: aload         6
359: invokestatic  #16
362: aload         7
364: invokestatic  #16
367: aload         9
369: invokestatic  #16
372: aload         11
374: invokestatic  #16
377: aload         15
379: invokestatic  #16
382: aload         16
384: invokestatic  #16
387: aload         16
389: invokestatic  #17
392: ldc_w         #272
395: invokestatic  #19
398: return
Exception table:
from    to  target type
251   264   267   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test289
Start line: 11095
End line: 11110
Method source code: 
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        double[] doubleArray19 = org.apache.commons.math3.util.MathArrays.copyOf(doubleArray7);
        int int20 = org.apache.commons.math3.util.MathUtils.hash(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 419642177 + "'", int20 == 419642177);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #772
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload_1
101: invokestatic  #269
104: astore        5
106: aload_1
107: invokestatic  #344
110: istore        6
112: aload_1
113: invokestatic  #16
116: aload_1
117: invokestatic  #17
120: ldc           #26
122: invokestatic  #19
125: aload         5
127: invokestatic  #16
130: aload         5
132: invokestatic  #17
135: ldc           #26
137: invokestatic  #19
140: new           #39
143: dup
144: invokespecial #40
147: ldc           #41
149: invokevirtual #42
152: iload         6
154: invokevirtual #81
157: ldc           #44
159: invokevirtual #42
162: ldc_w         #347
165: invokevirtual #81
168: ldc           #41
170: invokevirtual #42
173: invokevirtual #45
176: iload         6
178: ldc_w         #347
181: if_icmpne     188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #47
192: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test290
Start line: 11113
End line: 11173
Method source code: 
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        int int3 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer2.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer2.getConvergenceChecker();
        double[] doubleArray7 = null;
        double[] doubleArray11 = new double[] { '#', (-1), (-1L) };
        double[][] doubleArray12 = new double[][] { doubleArray11 };
        org.apache.commons.math3.linear.Array2DRowRealMatrix array2DRowRealMatrix14 = new org.apache.commons.math3.linear.Array2DRowRealMatrix(doubleArray12, true);
        double[][] doubleArray15 = array2DRowRealMatrix14.getData();
        double[] doubleArray18 = new double[] { '4' };
        double[] doubleArray19 = new double[] {};
        boolean boolean20 = org.apache.commons.math3.util.MathArrays.equals(doubleArray18, doubleArray19);
        array2DRowRealMatrix14.setColumn((int) (short) 1, doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray28);
        org.apache.commons.math3.linear.RealMatrix realMatrix30 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray28);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair32 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray28, (double) (-1.0f));
        double[] doubleArray33 = pointValuePair32.getPoint();
        double double34 = org.apache.commons.math3.util.MathArrays.distanceInf(doubleArray18, doubleArray33);
        double double35 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray33);
        boolean boolean36 = org.apache.commons.math3.util.MathArrays.equals(doubleArray7, doubleArray33);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair39 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray7, (double) 0.52885604f, false);
        double[] doubleArray46 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray46);
        org.apache.commons.math3.linear.RealMatrix realMatrix48 = org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix(doubleArray46);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair50 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray46, (double) (-1.0f));
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray46, true);
        org.apache.commons.math3.optimization.PointValuePair pointValuePair54 = new org.apache.commons.math3.optimization.PointValuePair(doubleArray46, (double) (-1.0f));
        boolean boolean55 = pointValuePairConvergenceChecker5.converged((int) (byte) -1, pointValuePair39, pointValuePair54);
        double[] doubleArray56 = pointValuePair54.getPointRef();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[35.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.5087060905671d + "'", double35 == 100.5087060905671d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realMatrix48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #773
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: bipush        10
33: aload_1
34: invokespecial #9
37: astore_2
38: aload_2
39: invokevirtual #69
42: istore_3
43: aload_2
44: invokevirtual #53
47: astore        4
49: aload_2
50: invokevirtual #53
53: astore        5
55: aconst_null
56: astore        6
58: iconst_3
59: newarray       double
61: dup
62: iconst_0
63: ldc2_w        #87
66: dastore
67: dup
68: iconst_1
69: ldc2_w        #59
72: dastore
73: dup
74: iconst_2
75: ldc2_w        #59
78: dastore
79: astore        7
81: iconst_1
82: anewarray     #89
85: dup
86: iconst_0
87: aload         7
89: aastore
90: astore        8
92: new           #90
95: dup
96: aload         8
98: iconst_1
99: invokespecial #91
102: astore        9
104: aload         9
106: invokevirtual #92
109: astore        10
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #70
119: dastore
120: astore        11
122: iconst_0
123: newarray       double
125: astore        12
127: aload         11
129: aload         12
131: invokestatic  #72
134: istore        13
136: aload         9
138: iconst_1
139: aload         11
141: invokevirtual #93
144: bipush        6
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #10
157: dastore
158: dup
159: iconst_2
160: dconst_1
161: dastore
162: dup
163: iconst_3
164: dconst_0
165: dastore
166: dup
167: iconst_4
168: dconst_1
169: dastore
170: dup
171: iconst_5
172: ldc2_w        #21
175: dastore
176: astore        14
178: aload         14
180: invokestatic  #23
183: aload         14
185: invokestatic  #24
188: astore        15
190: new           #58
193: dup
194: aload         14
196: ldc2_w        #59
199: invokespecial #61
202: astore        16
204: aload         16
206: invokevirtual #62
209: astore        17
211: aload         11
213: aload         17
215: invokestatic  #134
218: dstore        18
220: aload         17
222: invokestatic  #135
225: dstore        20
227: aload         6
229: aload         17
231: invokestatic  #72
234: istore        22
236: new           #58
239: dup
240: aload         6
242: ldc2_w        #357
245: iconst_0
246: invokespecial #262
249: astore        23
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: dconst_0
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #10
264: dastore
265: dup
266: iconst_2
267: dconst_1
268: dastore
269: dup
270: iconst_3
271: dconst_0
272: dastore
273: dup
274: iconst_4
275: dconst_1
276: dastore
277: dup
278: iconst_5
279: ldc2_w        #21
282: dastore
283: astore        24
285: aload         24
287: invokestatic  #23
290: aload         24
292: invokestatic  #24
295: astore        25
297: new           #58
300: dup
301: aload         24
303: ldc2_w        #59
306: invokespecial #61
309: astore        26
311: new           #96
314: dup
315: aload         24
317: iconst_1
318: invokespecial #359
321: astore        27
323: new           #58
326: dup
327: aload         24
329: ldc2_w        #59
332: invokespecial #61
335: astore        28
337: aload         5
339: iconst_m1
340: aload         23
342: aload         28
344: invokeinterface #63,  4
349: istore        29
351: aload         28
353: invokevirtual #360
356: astore        30
358: new           #39
361: dup
362: invokespecial #40
365: ldc           #41
367: invokevirtual #42
370: iload_3
371: invokevirtual #81
374: ldc           #44
376: invokevirtual #42
379: iconst_0
380: invokevirtual #81
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: iload_3
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #47
403: aload         4
405: invokestatic  #16
408: aload         5
410: invokestatic  #16
413: aload         7
415: invokestatic  #16
418: aload         7
420: invokestatic  #17
423: ldc           #94
425: invokestatic  #19
428: aload         8
430: invokestatic  #16
433: aload         10
435: invokestatic  #16
438: aload         11
440: invokestatic  #16
443: aload         11
445: invokestatic  #17
448: ldc           #82
450: invokestatic  #19
453: aload         12
455: invokestatic  #16
458: aload         12
460: invokestatic  #17
463: ldc           #83
465: invokestatic  #19
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: iload         13
482: invokevirtual #84
485: ldc           #44
487: invokevirtual #42
490: iconst_0
491: invokevirtual #84
494: ldc           #41
496: invokevirtual #42
499: invokevirtual #45
502: iload         13
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #47
515: aload         14
517: invokestatic  #16
520: aload         14
522: invokestatic  #17
525: ldc           #26
527: invokestatic  #19
530: aload         15
532: invokestatic  #16
535: aload         17
537: invokestatic  #16
540: aload         17
542: invokestatic  #17
545: ldc           #26
547: invokestatic  #19
550: new           #39
553: dup
554: invokespecial #40
557: ldc           #41
559: invokevirtual #42
562: dload         18
564: invokevirtual #121
567: ldc           #44
569: invokevirtual #42
572: ldc2_w        #70
575: invokevirtual #121
578: ldc           #41
580: invokevirtual #42
583: invokevirtual #45
586: dload         18
588: ldc2_w        #70
591: dcmpl
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #47
603: new           #39
606: dup
607: invokespecial #40
610: ldc           #41
612: invokevirtual #42
615: dload         20
617: invokevirtual #121
620: ldc           #44
622: invokevirtual #42
625: ldc2_w        #136
628: invokevirtual #121
631: ldc           #41
633: invokevirtual #42
636: invokevirtual #45
639: dload         20
641: ldc2_w        #136
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #47
656: new           #39
659: dup
660: invokespecial #40
663: ldc           #41
665: invokevirtual #42
668: iload         22
670: invokevirtual #84
673: ldc           #44
675: invokevirtual #42
678: iconst_0
679: invokevirtual #84
682: ldc           #41
684: invokevirtual #42
687: invokevirtual #45
690: iload         22
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #47
703: aload         24
705: invokestatic  #16
708: aload         24
710: invokestatic  #17
713: ldc           #26
715: invokestatic  #19
718: aload         25
720: invokestatic  #16
723: new           #39
726: dup
727: invokespecial #40
730: ldc           #41
732: invokevirtual #42
735: iload         29
737: invokevirtual #84
740: ldc           #44
742: invokevirtual #42
745: iconst_0
746: invokevirtual #84
749: ldc           #41
751: invokevirtual #42
754: invokevirtual #45
757: iload         29
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #47
770: aload         30
772: invokestatic  #16
775: aload         30
777: invokestatic  #17
780: ldc           #26
782: invokestatic  #19
785: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test291
Start line: 11176
End line: 11252
Method source code: 
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.random.MersenneTwister mersenneTwister15 = new org.apache.commons.math3.random.MersenneTwister(1);
        org.apache.commons.math3.optimization.SimpleValueChecker simpleValueChecker17 = new org.apache.commons.math3.optimization.SimpleValueChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(5, doubleArray7, 100, 0.0d, false, (int) (byte) 0, (int) (byte) 100, (org.apache.commons.math3.random.RandomGenerator) mersenneTwister15, true, (org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>) simpleValueChecker17);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer18.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer18.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = cMAESOptimizer18.getConvergenceChecker();
        int int24 = cMAESOptimizer18.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction26 = null;
        org.apache.commons.math3.util.MathArrays.OrderDirection[] orderDirectionArray27 = null;
        org.apache.commons.math3.exception.NotStrictlyPositiveException notStrictlyPositiveException28 = null;
        org.apache.commons.math3.optimization.GoalType goalType29 = org.apache.commons.math3.optimization.GoalType.MAXIMIZE;
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType> notStrictlyPositiveExceptionPair30 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.optimization.GoalType>(notStrictlyPositiveException28, goalType29);
        org.apache.commons.math3.util.Pair<org.apache.commons.math3.util.MathArrays.OrderDirection[], java.lang.Enum<org.apache.commons.math3.optimization.GoalType>> orderDirectionArrayPair31 = new org.apache.commons.math3.util.Pair<org.apache.commons.math3.util.MathArrays.OrderDirection[], java.lang.Enum<org.apache.commons.math3.optimization.GoalType>>(orderDirectionArray27, (java.lang.Enum<org.apache.commons.math3.optimization.GoalType>) goalType29);
        double[] doubleArray39 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray39);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray39);
        double[] doubleArray48 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray48);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector41, arrayRealVector50);
        double[] doubleArray60 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray60);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray60);
        double[] doubleArray69 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray69);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector62, arrayRealVector71);
        double[] doubleArray79 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray79);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray79);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector71, arrayRealVector81);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector83 = arrayRealVector50.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector81);
        double[] doubleArray84 = arrayRealVector50.toArray();
        double double85 = org.apache.commons.math3.util.MathArrays.safeNorm(doubleArray84);
        org.apache.commons.math3.util.Pair<double[], java.lang.Double> doubleArrayPair87 = new org.apache.commons.math3.util.Pair<double[], java.lang.Double>(doubleArray84, (java.lang.Double) (-0.7853981633974482d));
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-127), doubleArray84);
        double[] doubleArray90 = org.apache.commons.math3.util.MathArrays.normalizeArray(doubleArray84, 30.012577183478914d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair91 = cMAESOptimizer18.optimize(100, multivariateFunction26, goalType29, doubleArray90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + goalType29 + "' != '" + org.apache.commons.math3.optimization.GoalType.MAXIMIZE + "'", goalType29.equals(org.apache.commons.math3.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 201.0174121811342d + "'", double85 == 201.0174121811342d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 26.79694391382046, 0.2679694391382046, 0.0, 0.2679694391382046, 2.679694391382046]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #774
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #32
65: dup
66: iconst_1
67: invokespecial #33
70: astore_2
71: new           #34
74: dup
75: invokespecial #35
78: astore_3
79: new           #8
82: dup
83: iconst_5
84: aload_1
85: bipush        100
87: dconst_0
88: iconst_0
89: iconst_0
90: bipush        100
92: aload_2
93: iconst_1
94: aload_3
95: invokespecial #36
98: astore        4
100: aload         4
102: invokevirtual #125
105: istore        5
107: aload         4
109: invokevirtual #232
112: astore        6
114: aload         4
116: invokevirtual #133
119: astore        7
121: aload         4
123: invokevirtual #53
126: astore        8
128: aload         4
130: invokevirtual #53
133: astore        9
135: aload         4
137: invokevirtual #69
140: istore        10
142: aconst_null
143: astore        11
145: aconst_null
146: astore        12
148: aconst_null
149: astore        13
151: getstatic     #37
154: astore        14
156: new           #107
159: dup
160: aload         13
162: aload         14
164: invokespecial #110
167: astore        15
169: new           #107
172: dup
173: aload         12
175: aload         14
177: invokespecial #110
180: astore        16
182: bipush        6
184: newarray       double
186: dup
187: iconst_0
188: dconst_0
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #10
195: dastore
196: dup
197: iconst_2
198: dconst_1
199: dastore
200: dup
201: iconst_3
202: dconst_0
203: dastore
204: dup
205: iconst_4
206: dconst_1
207: dastore
208: dup
209: iconst_5
210: ldc2_w        #21
213: dastore
214: astore        17
216: aload         17
218: invokestatic  #23
221: new           #96
224: dup
225: aload         17
227: invokespecial #97
230: astore        18
232: bipush        6
234: newarray       double
236: dup
237: iconst_0
238: dconst_0
239: dastore
240: dup
241: iconst_1
242: ldc2_w        #10
245: dastore
246: dup
247: iconst_2
248: dconst_1
249: dastore
250: dup
251: iconst_3
252: dconst_0
253: dastore
254: dup
255: iconst_4
256: dconst_1
257: dastore
258: dup
259: iconst_5
260: ldc2_w        #21
263: dastore
264: astore        19
266: aload         19
268: invokestatic  #23
271: new           #96
274: dup
275: aload         19
277: invokespecial #97
280: astore        20
282: new           #96
285: dup
286: aload         18
288: aload         20
290: invokespecial #99
293: astore        21
295: bipush        6
297: newarray       double
299: dup
300: iconst_0
301: dconst_0
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #10
308: dastore
309: dup
310: iconst_2
311: dconst_1
312: dastore
313: dup
314: iconst_3
315: dconst_0
316: dastore
317: dup
318: iconst_4
319: dconst_1
320: dastore
321: dup
322: iconst_5
323: ldc2_w        #21
326: dastore
327: astore        22
329: aload         22
331: invokestatic  #23
334: new           #96
337: dup
338: aload         22
340: invokespecial #97
343: astore        23
345: bipush        6
347: newarray       double
349: dup
350: iconst_0
351: dconst_0
352: dastore
353: dup
354: iconst_1
355: ldc2_w        #10
358: dastore
359: dup
360: iconst_2
361: dconst_1
362: dastore
363: dup
364: iconst_3
365: dconst_0
366: dastore
367: dup
368: iconst_4
369: dconst_1
370: dastore
371: dup
372: iconst_5
373: ldc2_w        #21
376: dastore
377: astore        24
379: aload         24
381: invokestatic  #23
384: new           #96
387: dup
388: aload         24
390: invokespecial #97
393: astore        25
395: new           #96
398: dup
399: aload         23
401: aload         25
403: invokespecial #99
406: astore        26
408: bipush        6
410: newarray       double
412: dup
413: iconst_0
414: dconst_0
415: dastore
416: dup
417: iconst_1
418: ldc2_w        #10
421: dastore
422: dup
423: iconst_2
424: dconst_1
425: dastore
426: dup
427: iconst_3
428: dconst_0
429: dastore
430: dup
431: iconst_4
432: dconst_1
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #21
439: dastore
440: astore        27
442: aload         27
444: invokestatic  #23
447: new           #96
450: dup
451: aload         27
453: invokespecial #97
456: astore        28
458: new           #96
461: dup
462: aload         25
464: aload         28
466: invokespecial #99
469: astore        29
471: aload         20
473: dconst_1
474: dconst_1
475: aload         28
477: invokevirtual #100
480: astore        30
482: aload         20
484: invokevirtual #101
487: astore        31
489: aload         31
491: invokestatic  #135
494: dstore        32
496: new           #107
499: dup
500: aload         31
502: ldc2_w        #143
505: invokestatic  #76
508: invokespecial #110
511: astore        34
513: new           #8
516: dup
517: bipush        -127
519: aload         31
521: invokespecial #9
524: astore        35
526: aload         31
528: ldc2_w        #387
531: invokestatic  #210
534: astore        36
536: aload         4
538: bipush        100
540: aload         11
542: aload         14
544: aload         36
546: invokevirtual #12
549: astore        37
551: ldc           #13
553: invokestatic  #14
556: goto          561
559: astore        37
561: aload_1
562: invokestatic  #16
565: aload_1
566: invokestatic  #17
569: ldc           #26
571: invokestatic  #19
574: new           #39
577: dup
578: invokespecial #40
581: ldc           #41
583: invokevirtual #42
586: iload         5
588: invokevirtual #81
591: ldc           #44
593: invokevirtual #42
596: iconst_0
597: invokevirtual #81
600: ldc           #41
602: invokevirtual #42
605: invokevirtual #45
608: iload         5
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #47
621: aload         6
623: invokestatic  #16
626: aload         7
628: invokestatic  #16
631: aload         8
633: invokestatic  #16
636: aload         9
638: invokestatic  #16
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         10
655: invokevirtual #81
658: ldc           #44
660: invokevirtual #42
663: iconst_0
664: invokevirtual #81
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         10
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #47
688: new           #39
691: dup
692: invokespecial #40
695: ldc           #41
697: invokevirtual #42
700: aload         14
702: invokevirtual #43
705: ldc           #44
707: invokevirtual #42
710: getstatic     #37
713: invokevirtual #43
716: ldc           #41
718: invokevirtual #42
721: invokevirtual #45
724: aload         14
726: getstatic     #37
729: invokevirtual #46
732: invokestatic  #47
735: aload         17
737: invokestatic  #16
740: aload         17
742: invokestatic  #17
745: ldc           #26
747: invokestatic  #19
750: aload         19
752: invokestatic  #16
755: aload         19
757: invokestatic  #17
760: ldc           #26
762: invokestatic  #19
765: aload         22
767: invokestatic  #16
770: aload         22
772: invokestatic  #17
775: ldc           #26
777: invokestatic  #19
780: aload         24
782: invokestatic  #16
785: aload         24
787: invokestatic  #17
790: ldc           #26
792: invokestatic  #19
795: aload         27
797: invokestatic  #16
800: aload         27
802: invokestatic  #17
805: ldc           #26
807: invokestatic  #19
810: aload         30
812: invokestatic  #16
815: aload         31
817: invokestatic  #16
820: aload         31
822: invokestatic  #17
825: ldc           #105
827: invokestatic  #19
830: new           #39
833: dup
834: invokespecial #40
837: ldc           #41
839: invokevirtual #42
842: dload         32
844: invokevirtual #121
847: ldc           #44
849: invokevirtual #42
852: ldc2_w        #145
855: invokevirtual #121
858: ldc           #41
860: invokevirtual #42
863: invokevirtual #45
866: dload         32
868: ldc2_w        #145
871: dcmpl
872: ifne          879
875: iconst_1
876: goto          880
879: iconst_0
880: invokestatic  #47
883: aload         36
885: invokestatic  #16
888: aload         36
890: invokestatic  #17
893: ldc_w         #390
896: invokestatic  #19
899: return
Exception table:
from    to  target type
536   556   559   Class org/apache/commons/math3/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/RegressionTest0.class
Class name: RegressionTest0
Method name: test292
Start line: 11255
End line: 11310
Method source code: 
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        double[] doubleArray7 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray7);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector9 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray7);
        org.apache.commons.math3.linear.RealVector realVector10 = arrayRealVector9.copy();
        double[] doubleArray17 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray17);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray17);
        double[] doubleArray26 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector19, arrayRealVector28);
        double[] doubleArray38 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray38);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray47);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector40, arrayRealVector49);
        double[] doubleArray57 = new double[] { (byte) 0, (byte) 100, 1, 0.0f, (short) 1, 10.0d };
        org.apache.commons.math3.util.MathUtils.checkFinite(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math3.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector49, arrayRealVector59);
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector61 = arrayRealVector28.combineToSelf((double) (byte) 1, (double) 1.0f, (org.apache.commons.math3.linear.RealVector) arrayRealVector59);
        double[] doubleArray62 = arrayRealVector28.toArray();
        org.apache.commons.math3.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math3.linear.ArrayRealVector(arrayRealVector9, doubleArray62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = cMAESOptimizer64.getConvergenceChecker();
        int int66 = cMAESOptimizer64.getMaxEvaluations();
        int int67 = cMAESOptimizer64.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType68 = cMAESOptimizer64.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = cMAESOptimizer64.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(realVector10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 100.0, 1.0, 0.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(arrayRealVector61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 200.0, 2.0, 0.0, 2.0, 20.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(goalType68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #775
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #10
38: dastore
39: dup
40: iconst_2
41: dconst_1
42: dastore
43: dup
44: iconst_3
45: dconst_0
46: dastore
47: dup
48: iconst_4
49: dconst_1
50: dastore
51: dup
52: iconst_5
53: ldc2_w        #21
56: dastore
57: astore_1
58: aload_1
59: invokestatic  #23
62: new           #96
65: dup
66: aload_1
67: invokespecial #97
70: astore_2
71: aload_2
72: invokevirtual #98
75: astore_3
76: bipush        6
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #10
89: dastore
90: dup
91: iconst_2
92: dconst_1
93: dastore
94: dup
95: iconst_3
96: dconst_0
97: dastore
98: dup
99: iconst_4
100: dconst_1
101: dastore
102: dup
103: iconst_5
104: ldc2_w        #21
107: dastore
108: astore        4
110: aload         4
112: invokestatic  #23
115: new           #96
118: dup
119: aload         4
121: invokespecial #97
124: astore        5
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #10
139: dastore
140: dup
141: iconst_2
142: dconst_1
143: dastore
144: dup
145: iconst_3
146: dconst_0
147: dastore
148: dup
149: iconst_4
150: dconst_1
151: dastore
152: dup
153: iconst_5
154: ldc2_w        #21
157: dastore
158: astore        6
160: aload         6
162: invokestatic  #23
165: new           #96
168: dup
169: aload         6
171: invokespecial #97
174: astore        7
176: new           #96
179: dup
180: aload         5
182: aload         7
184: invokespecial #99
187: astore        8
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: dconst_0
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #10
202: dastore
203: dup
204: iconst_2
205: dconst_1
206: dastore
207: dup
208: iconst_3
209: dconst_0
210: dastore
211: dup
212: iconst_4
213: dconst_1
214: dastore
215: dup
216: iconst_5
217: ldc2_w        #21
220: dastore
221: astore        9
223: aload         9
225: invokestatic  #23
228: new           #96
231: dup
232: aload         9
234: invokespecial #97
237: astore        10
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: dconst_0
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #10
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_0
260: dastore
261: dup
262: iconst_4
263: dconst_1
264: dastore
265: dup
266: iconst_5
267: ldc2_w        #21
270: dastore
271: astore        11
273: aload         11
275: invokestatic  #23
278: new           #96
281: dup
282: aload         11
284: invokespecial #97
287: astore        12
289: new           #96
292: dup
293: aload         10
295: aload         12
297: invokespecial #99
300: astore        13
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: dup
311: iconst_1
312: ldc2_w        #10
315: dastore
316: dup
317: iconst_2
318: dconst_1
319: dastore
320: dup
321: iconst_3
322: dconst_0
323: dastore
324: dup
325: iconst_4
326: dconst_1
327: dastore
328: dup
329: iconst_5
330: ldc2_w        #21
333: dastore
334: astore        14
336: aload         14
338: invokestatic  #23
341: new           #96
344: dup
345: aload         14
347: invokespecial #97
350: astore        15
352: new           #96
355: dup
356: aload         12
358: aload         15
360: invokespecial #99
363: astore        16
365: aload         7
367: dconst_1
368: dconst_1
369: aload         15
371: invokevirtual #100
374: astore        17
376: aload         7
378: invokevirtual #101
381: astore        18
383: new           #96
386: dup
387: aload_2
388: aload         18
390: invokespecial #102
393: astore        19
395: new           #8
398: dup
399: bipush        100
401: aload         18
403: invokespecial #9
406: astore        20
408: aload         20
410: invokevirtual #53
413: astore        21
415: aload         20
417: invokevirtual #125
420: istore        22
422: aload         20
424: invokevirtual #125
427: istore        23
429: aload         20
431: invokevirtual #149
434: astore        24
436: aload         20
438: invokevirtual #53
441: astore        25
443: aload_1
444: invokestatic  #16
447: aload_1
448: invokestatic  #17
451: ldc           #26
453: invokestatic  #19
456: aload_3
457: invokestatic  #16
460: aload         4
462: invokestatic  #16
465: aload         4
467: invokestatic  #17
470: ldc           #26
472: invokestatic  #19
475: aload         6
477: invokestatic  #16
480: aload         6
482: invokestatic  #17
485: ldc           #26
487: invokestatic  #19
490: aload         9
492: invokestatic  #16
495: aload         9
497: invokestatic  #17
500: ldc           #26
502: invokestatic  #19
505: aload         11
507: invokestatic  #16
510: aload         11
512: invokestatic  #17
515: ldc           #26
517: invokestatic  #19
520: aload         14
522: invokestatic  #16
525: aload         14
527: invokestatic  #17
530: ldc           #26
532: invokestatic  #19
535: aload         17
537: invokestatic  #16
540: aload         18
542: invokestatic  #16
545: aload         18
547: invokestatic  #17
550: ldc           #105
552: invokestatic  #19
555: aload         21
557: invokestatic  #16
560: new           #39
563: dup
564: invokespecial #40
567: ldc           #41
569: invokevirtual #42
572: iload         22
574: invokevirtual #81
577: ldc           #44
579: invokevirtual #42
582: iconst_0
583: invokevirtual #81
586: ldc           #41
588: invokevirtual #42
591: invokevirtual #45
594: iload         22
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #47
607: new           #39
610: dup
611: invokespecial #40
614: ldc           #41
616: invokevirtual #42
619: iload         23
621: invokevirtual #81
624: ldc           #44
626: invokevirtual #42
629: iconst_0
630: invokevirtual #81
633: ldc           #41
635: invokevirtual #42
638: invokevirtual #45
641: iload         23
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #47
654: aload         24
656: invokestatic  #155
659: aload         25
661: invokestatic  #16
664: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testInitOutofbounds1
Start line: 47
End line: 56
Method source code: 
    public void testInitOutofbounds1() {
        double[] startPoint = point(DIM,3);
        double[] insigma = null;
        double[][] boundaries = boundaries(DIM,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #3
5: invokestatic  #5
8: astore_1
9: aconst_null
10: astore_2
11: bipush        13
13: ldc2_w        #6
16: ldc2_w        #8
19: invokestatic  #10
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testInitOutofbounds2
Start line: 58
End line: 67
Method source code: 
    public void testInitOutofbounds2() {
        double[] startPoint = point(DIM, -2);
        double[] insigma = null;
        double[][] boundaries = boundaries(DIM,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #23
5: invokestatic  #5
8: astore_1
9: aconst_null
10: astore_2
11: bipush        13
13: ldc2_w        #6
16: ldc2_w        #8
19: invokestatic  #10
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testBoundariesDimensionMismatch
Start line: 70
End line: 79
Method source code: 
    public void testBoundariesDimensionMismatch() {
        double[] startPoint = point(DIM,0.5);
        double[] insigma = null;
        double[][] boundaries = boundaries(DIM+1,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: aconst_null
10: astore_2
11: bipush        14
13: ldc2_w        #6
16: ldc2_w        #8
19: invokestatic  #10
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testUnsupportedBoundaries1
Start line: 82
End line: 91
Method source code: 
    public void testUnsupportedBoundaries1() {
        double[] startPoint = point(DIM,0.5);
        double[] insigma = null;
        double[][] boundaries = boundaries(DIM,-1, Double.POSITIVE_INFINITY);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: aconst_null
10: astore_2
11: bipush        13
13: ldc2_w        #6
16: ldc2_w        #28
19: invokestatic  #10
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testUnsupportedBoundaries2
Start line: 94
End line: 107
Method source code: 
    public void testUnsupportedBoundaries2() {
        double[] startPoint = point(DIM, 0.5);
        double[] insigma = null;
        final double[] lB = new double[] { -1, -1, -1, -1, -1, Double.NEGATIVE_INFINITY, -1, -1, -1, -1, -1, -1, -1 };
        final double[] uB = new double[] { 2, 2, 2, Double.POSITIVE_INFINITY, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        double[][] boundaries = new double[2][];
        boundaries[0] = lB;
        boundaries[1] = uB;
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: aconst_null
10: astore_2
11: bipush        13
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #6
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #6
26: dastore
27: dup
28: iconst_2
29: ldc2_w        #6
32: dastore
33: dup
34: iconst_3
35: ldc2_w        #6
38: dastore
39: dup
40: iconst_4
41: ldc2_w        #6
44: dastore
45: dup
46: iconst_5
47: ldc2_w        #30
50: dastore
51: dup
52: bipush        6
54: ldc2_w        #6
57: dastore
58: dup
59: bipush        7
61: ldc2_w        #6
64: dastore
65: dup
66: bipush        8
68: ldc2_w        #6
71: dastore
72: dup
73: bipush        9
75: ldc2_w        #6
78: dastore
79: dup
80: bipush        10
82: ldc2_w        #6
85: dastore
86: dup
87: bipush        11
89: ldc2_w        #6
92: dastore
93: dup
94: bipush        12
96: ldc2_w        #6
99: dastore
100: astore_3
101: bipush        13
103: newarray       double
105: dup
106: iconst_0
107: ldc2_w        #8
110: dastore
111: dup
112: iconst_1
113: ldc2_w        #8
116: dastore
117: dup
118: iconst_2
119: ldc2_w        #8
122: dastore
123: dup
124: iconst_3
125: ldc2_w        #28
128: dastore
129: dup
130: iconst_4
131: ldc2_w        #8
134: dastore
135: dup
136: iconst_5
137: ldc2_w        #8
140: dastore
141: dup
142: bipush        6
144: ldc2_w        #8
147: dastore
148: dup
149: bipush        7
151: ldc2_w        #8
154: dastore
155: dup
156: bipush        8
158: ldc2_w        #8
161: dastore
162: dup
163: bipush        9
165: ldc2_w        #8
168: dastore
169: dup
170: bipush        10
172: ldc2_w        #8
175: dastore
176: dup
177: bipush        11
179: ldc2_w        #8
182: dastore
183: dup
184: bipush        12
186: ldc2_w        #8
189: dastore
190: astore        4
192: iconst_2
193: anewarray     #32
196: astore        5
198: aload         5
200: iconst_0
201: aload_3
202: aastore
203: aload         5
205: iconst_1
206: aload         4
208: aastore
209: new           #11
212: dup
213: bipush        13
215: dconst_1
216: invokestatic  #5
219: dconst_0
220: invokespecial #12
223: astore        6
225: aload_0
226: new           #13
229: dup
230: aconst_null
231: invokespecial #14
234: aload_1
235: aload_2
236: aload         5
238: getstatic     #15
241: getstatic     #16
244: iconst_1
245: iconst_0
246: ldc2_w        #17
249: ldc2_w        #17
252: ldc2_w        #19
255: ldc           #21
257: aload         6
259: invokespecial #22
262: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testInputSigmaNegative
Start line: 110
End line: 119
Method source code: 
    public void testInputSigmaNegative() {
        double[] startPoint = point(DIM,0.5);
        double[] insigma = point(DIM,-0.5);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: bipush        13
11: ldc2_w        #33
14: invokestatic  #5
17: astore_2
18: aconst_null
19: checkcast     #35
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testInputSigmaOutOfRange
Start line: 122
End line: 131
Method source code: 
    public void testInputSigmaOutOfRange() {
        double[] startPoint = point(DIM,0.5);
        double[] insigma = point(DIM, 1.1);
        double[][] boundaries = boundaries(DIM,-0.5,0.5);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: bipush        13
11: ldc2_w        #36
14: invokestatic  #5
17: astore_2
18: bipush        13
20: ldc2_w        #33
23: ldc2_w        #25
26: invokestatic  #10
29: astore_3
30: new           #11
33: dup
34: bipush        13
36: dconst_1
37: invokestatic  #5
40: dconst_0
41: invokespecial #12
44: astore        4
46: aload_0
47: new           #13
50: dup
51: aconst_null
52: invokespecial #14
55: aload_1
56: aload_2
57: aload_3
58: getstatic     #15
61: getstatic     #16
64: iconst_1
65: iconst_0
66: ldc2_w        #17
69: ldc2_w        #17
72: ldc2_w        #19
75: ldc           #21
77: aload         4
79: invokespecial #22
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testInputSigmaDimensionMismatch
Start line: 134
End line: 143
Method source code: 
    public void testInputSigmaDimensionMismatch() {
        double[] startPoint = point(DIM,0.5);
        double[] insigma = point(DIM+1,-0.5);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #25
5: invokestatic  #5
8: astore_1
9: bipush        14
11: ldc2_w        #33
14: invokestatic  #5
17: astore_2
18: aconst_null
19: checkcast     #35
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testRosen
Start line: 147
End line: 159
Method source code: 
    public void testRosen() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #38
5: invokestatic  #5
8: astore_1
9: bipush        13
11: ldc2_w        #38
14: invokestatic  #5
17: astore_2
18: aconst_null
19: checkcast     #35
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_1
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #13
43: dup
44: aconst_null
45: invokespecial #14
48: aload_1
49: aload_2
50: aload_3
51: getstatic     #15
54: getstatic     #16
57: iconst_1
58: iconst_0
59: ldc2_w        #17
62: ldc2_w        #17
65: ldc2_w        #19
68: ldc           #21
70: aload         4
72: invokespecial #22
75: aload_0
76: new           #13
79: dup
80: aconst_null
81: invokespecial #14
84: aload_1
85: aload_2
86: aload_3
87: getstatic     #15
90: getstatic     #16
93: iconst_0
94: iconst_0
95: ldc2_w        #17
98: ldc2_w        #17
101: ldc2_w        #19
104: ldc           #21
106: aload         4
108: invokespecial #22
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testMaximize
Start line: 163
End line: 726
Method source code: 
    public void testMaximize() {}
// Defects4J: flaky method
//     public void testMaximize() {
//         double[] startPoint = point(DIM,1.0);
//         double[] insigma = point(DIM,0.1);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,0.0),1.0);
//         doTest(new MinusElli(), startPoint, insigma, boundaries,
//                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
//                 2e-10, 5e-6, 100000, expected);
//         doTest(new MinusElli(), startPoint, insigma, boundaries,
//                 GoalType.MAXIMIZE, LAMBDA, false, 0, 1.0-1e-13,
//                 2e-10, 5e-6, 100000, expected);
//         boundaries = boundaries(DIM,-0.3,0.3); 
//         startPoint = point(DIM,0.1);
//         doTest(new MinusElli(), startPoint, insigma, boundaries,
//                 GoalType.MAXIMIZE, LAMBDA, true, 0, 1.0-1e-13,
//                 2e-10, 5e-6, 100000, expected);
//     }

    @Test
    public void testEllipse() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Elli(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Elli(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testElliRotated() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new ElliRotated(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new ElliRotated(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testCigar() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Cigar(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new Cigar(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testTwoAxes() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new TwoAxes(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new TwoAxes(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-8, 1e-3, 200000, expected);
    }

    @Test
    public void testCigTab() {}
// Defects4J: flaky method
//     @Test
//     public void testCigTab() {
//         double[] startPoint = point(DIM,1.0);
//         double[] insigma = point(DIM,0.3);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,0.0),0.0);
//         doTest(new CigTab(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
//                 1e-13, 5e-5, 100000, expected);
//         doTest(new CigTab(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
//                 1e-13, 5e-5, 100000, expected);
//     }

    @Test
    public void testSphere() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testTablet() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-8, 1e-1, 100000, expected);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-8, 2e-1, 100000, expected);
    }

    @Test
    public void testSsDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
    }

    @Test
    public void testAckley() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,1.0);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
    }

    @Test
    public void testRastrigin() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), false, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
    }

    @Test
    public void testConstrainedRosen() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = boundaries(DIM,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testDiagonalRosen() {}
// Defects4J: flaky method
//     @Test
//     public void testDiagonalRosen() {
//         double[] startPoint = point(DIM,0.1);
//         double[] insigma = point(DIM,0.1);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,1.0),0.0);
//         doTest(new Rosen(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, false, 1, 1e-13,
//                 1e-10, 1e-4, 1000000, expected);
//      }

    @Test
    public void testMath864() {
        final CMAESOptimizer optimizer = new CMAESOptimizer();
        final MultivariateFunction fitnessFunction = new MultivariateFunction() {
                @Override
                public double value(double[] parameters) {
                    final double target = 1;
                    final double error = target - parameters[0];
                    return error * error;
                }
            };

        final double[] start = { 0 };
        final double[] lower = { -1e6 };
        final double[] upper = { 0.5 };
        final double[] result = optimizer.optimize(10000, fitnessFunction, GoalType.MINIMIZE,
                                                   start, lower, upper).getPoint();
        Assert.assertTrue("Out of bounds (" + result[0] + " > " + upper[0] + ")",
                          result[0] <= upper[0]);
    }

    /**
     * @param func Function to optimize.
     * @param startPoint Starting point.
     * @param inSigma Individual input sigma.
     * @param boundaries Upper / lower point limit.
     * @param goal Minimization or maximization.
     * @param lambda Population size used for offspring.
     * @param isActive Covariance update mechanism.
     * @param diagonalOnly Simplified covariance update.
     * @param stopValue Termination criteria for optimization.
     * @param fTol Tolerance relative error on the objective function.
     * @param pointTol Tolerance for checking that the optimum is correct.
     * @param maxEvaluations Maximum number of evaluations.
     * @param expected Expected point / value.
     */
    private void doTest(MultivariateFunction func,
            double[] startPoint,
            double[] inSigma,
            double[][] boundaries,
            GoalType goal,
            int lambda,
            boolean isActive,
            int diagonalOnly, 
            double stopValue,
            double fTol,
            double pointTol,
            int maxEvaluations,
            PointValuePair expected) {
        int dim = startPoint.length;
        // test diagonalOnly = 0 - slow but normally fewer feval#
        CMAESOptimizer optim = new CMAESOptimizer( lambda, inSigma, 30000,
                                                   stopValue, isActive, diagonalOnly,
                                                   0, new MersenneTwister(), false);
        final double[] lB = boundaries == null ? null : boundaries[0];
        final double[] uB = boundaries == null ? null : boundaries[1];
        PointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, lB, uB);
        Assert.assertEquals(expected.getValue(),
                result.getValue(), fTol);
        for (int i = 0; i < dim; i++) {
            Assert.assertEquals(expected.getPoint()[i],
                    result.getPoint()[i], pointTol);
        }
    }

    private static double[] point(int n, double value) {
        double[] ds = new double[n];
        Arrays.fill(ds, value);
        return ds;
    }

    private static double[][] boundaries(int dim,
            double lower, double upper) {
        double[][] boundaries = new double[2][dim];
        for (int i = 0; i < dim; i++)
            boundaries[0][i] = lower;
        for (int i = 0; i < dim; i++)
            boundaries[1][i] = upper;
        return boundaries;
    }

    private static class Sphere implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class Cigar implements MultivariateFunction {
        private double factor;

        Cigar() {
            this(1e3);
        }

        Cigar(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += factor * x[i] * x[i];
            return f;
        }
    }

    private static class Tablet implements MultivariateFunction {
        private double factor;

        Tablet() {
            this(1e3);
        }

        Tablet(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = factor * x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class CigTab implements MultivariateFunction {
        private double factor;

        CigTab() {
            this(1e4);
        }

        CigTab(double axisratio) {
            factor = axisratio;
        }

        public double value(double[] x) {
            int end = x.length - 1;
            double f = x[0] * x[0] / factor + factor * x[end] * x[end];
            for (int i = 1; i < end; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class TwoAxes implements MultivariateFunction {

        private double factor;

        TwoAxes() {
            this(1e6);
        }

        TwoAxes(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += (i < x.length / 2 ? factor : 1) * x[i] * x[i];
            return f;
        }
    }

    private static class ElliRotated implements MultivariateFunction {
        private Basis B = new Basis();
        private double factor;

        ElliRotated() {
            this(1e3);
        }

        ElliRotated(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            x = B.Rotate(x);
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class Elli implements MultivariateFunction {

        private double factor;

        Elli() {
            this(1e3);
        }

        Elli(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class MinusElli implements MultivariateFunction {

        public double value(double[] x) {
            return 1.0-(new Elli().value(x));
        }
    }

    private static class DiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(Math.abs(x[i]), 2. + 10 * (double) i
                        / (x.length - 1.));
            return f;
        }
    }

    private static class SsDiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = Math.pow(new DiffPow().value(x), 0.25);
            return f;
        }
    }

    private static class Rosen implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length - 1; ++i)
                f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
                + (x[i] - 1.) * (x[i] - 1.);
            return f;
        }
    }

    private static class Ackley implements MultivariateFunction {
        private double axisratio;

        Ackley(double axra) {
            axisratio = axra;
        }

        public Ackley() {
            this(1);
        }

        public double value(double[] x) {
            double f = 0;
            double res2 = 0;
            double fac = 0;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                f += fac * fac * x[i] * x[i];
                res2 += Math.cos(2. * Math.PI * fac * x[i]);
            }
            f = (20. - 20. * Math.exp(-0.2 * Math.sqrt(f / x.length))
                    + Math.exp(1.) - Math.exp(res2 / x.length));
            return f;
        }
    }

    private static class Rastrigin implements MultivariateFunction {

        private double axisratio;
        private double amplitude;

        Rastrigin() {
            this(1, 10);
        }

        Rastrigin(double axisratio, double amplitude) {
            this.axisratio = axisratio;
            this.amplitude = amplitude;
        }

        public double value(double[] x) {
            double f = 0;
            double fac;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                if (i == 0 && x[i] < 0)
                    fac *= 1.;
                f += fac * fac * x[i] * x[i] + amplitude
                * (1. - Math.cos(2. * Math.PI * fac * x[i]));
            }
            return f;
        }
    }

    private static class Basis {
        double[][] basis;
        Random rand = new Random(2); // use not always the same basis

        double[] Rotate(double[] x) {
            GenBasis(x.length);
            double[] y = new double[x.length];
            for (int i = 0; i < x.length; ++i) {
                y[i] = 0;
                for (int j = 0; j < x.length; ++j)
                    y[i] += basis[i][j] * x[j];
            }
            return y;
        }

        void GenBasis(int DIM) {
            if (basis != null ? basis.length == DIM : false)
                return;

            double sp;
            int i, j, k;

            /* generate orthogonal basis */
            basis = new double[DIM][DIM];
            for (i = 0; i < DIM; ++i) {
                /* sample components gaussian */
                for (j = 0; j < DIM; ++j)
                    basis[i][j] = rand.nextGaussian();
                /* substract projection of previous vectors */
                for (j = i - 1; j >= 0; --j) {
                    for (sp = 0., k = 0; k < DIM; ++k)
                        sp += basis[i][k] * basis[j][k]; /* scalar product */
                    for (k = 0; k < DIM; ++k)
                        basis[i][k] -= sp * basis[j][k]; /* substract */
                }
                /* normalize */
                for (sp = 0., k = 0; k < DIM; ++k)
                    sp += basis[i][k] * basis[i][k]; /* squared norm */
                for (k = 0; k < DIM; ++k)
                    basis[i][k] /= Math.sqrt(sp);
            }
        }
    }
}
Method byte code: 
0: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testEllipse
Start line: 185
End line: 197
Method source code: 
    public void testEllipse() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Elli(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Elli(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #40
41: dup
42: invokespecial #41
45: aload_1
46: aload_2
47: aload_3
48: getstatic     #15
51: getstatic     #16
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #17
62: ldc2_w        #19
65: ldc           #21
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #40
76: dup
77: invokespecial #41
80: aload_1
81: aload_2
82: aload_3
83: getstatic     #15
86: getstatic     #16
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #17
97: ldc2_w        #19
100: ldc           #21
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testElliRotated
Start line: 200
End line: 212
Method source code: 
    public void testElliRotated() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new ElliRotated(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new ElliRotated(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #42
41: dup
42: invokespecial #43
45: aload_1
46: aload_2
47: aload_3
48: getstatic     #15
51: getstatic     #16
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #17
62: ldc2_w        #19
65: ldc           #21
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #42
76: dup
77: invokespecial #43
80: aload_1
81: aload_2
82: aload_3
83: getstatic     #15
86: getstatic     #16
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #17
97: ldc2_w        #19
100: ldc           #21
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testCigar
Start line: 215
End line: 227
Method source code: 
    public void testCigar() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Cigar(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new Cigar(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #44
41: dup
42: invokespecial #45
45: aload_1
46: aload_2
47: aload_3
48: getstatic     #15
51: getstatic     #16
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #17
62: ldc2_w        #19
65: ldc           #46
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #44
76: dup
77: invokespecial #45
80: aload_1
81: aload_2
82: aload_3
83: getstatic     #15
86: getstatic     #16
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #17
97: ldc2_w        #19
100: ldc           #21
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testTwoAxes
Start line: 230
End line: 242
Method source code: 
    public void testTwoAxes() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new TwoAxes(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new TwoAxes(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-8, 1e-3, 200000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #47
41: dup
42: invokespecial #48
45: aload_1
46: aload_2
47: aload_3
48: getstatic     #15
51: iconst_2
52: getstatic     #16
55: imul
56: iconst_1
57: iconst_0
58: ldc2_w        #17
61: ldc2_w        #17
64: ldc2_w        #19
67: ldc           #46
69: aload         4
71: invokespecial #22
74: aload_0
75: new           #47
78: dup
79: invokespecial #48
82: aload_1
83: aload_2
84: aload_3
85: getstatic     #15
88: iconst_2
89: getstatic     #16
92: imul
93: iconst_0
94: iconst_0
95: ldc2_w        #17
98: ldc2_w        #49
101: ldc2_w        #51
104: ldc           #46
106: aload         4
108: invokespecial #22
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testCigTab
Start line: 245
End line: 726
Method source code: 
    public void testCigTab() {}
// Defects4J: flaky method
//     @Test
//     public void testCigTab() {
//         double[] startPoint = point(DIM,1.0);
//         double[] insigma = point(DIM,0.3);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,0.0),0.0);
//         doTest(new CigTab(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
//                 1e-13, 5e-5, 100000, expected);
//         doTest(new CigTab(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
//                 1e-13, 5e-5, 100000, expected);
//     }

    @Test
    public void testSphere() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testTablet() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-8, 1e-1, 100000, expected);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-8, 2e-1, 100000, expected);
    }

    @Test
    public void testSsDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
    }

    @Test
    public void testAckley() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,1.0);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
    }

    @Test
    public void testRastrigin() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), false, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
    }

    @Test
    public void testConstrainedRosen() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = boundaries(DIM,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }

    @Test
    public void testDiagonalRosen() {}
// Defects4J: flaky method
//     @Test
//     public void testDiagonalRosen() {
//         double[] startPoint = point(DIM,0.1);
//         double[] insigma = point(DIM,0.1);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,1.0),0.0);
//         doTest(new Rosen(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, false, 1, 1e-13,
//                 1e-10, 1e-4, 1000000, expected);
//      }

    @Test
    public void testMath864() {
        final CMAESOptimizer optimizer = new CMAESOptimizer();
        final MultivariateFunction fitnessFunction = new MultivariateFunction() {
                @Override
                public double value(double[] parameters) {
                    final double target = 1;
                    final double error = target - parameters[0];
                    return error * error;
                }
            };

        final double[] start = { 0 };
        final double[] lower = { -1e6 };
        final double[] upper = { 0.5 };
        final double[] result = optimizer.optimize(10000, fitnessFunction, GoalType.MINIMIZE,
                                                   start, lower, upper).getPoint();
        Assert.assertTrue("Out of bounds (" + result[0] + " > " + upper[0] + ")",
                          result[0] <= upper[0]);
    }

    /**
     * @param func Function to optimize.
     * @param startPoint Starting point.
     * @param inSigma Individual input sigma.
     * @param boundaries Upper / lower point limit.
     * @param goal Minimization or maximization.
     * @param lambda Population size used for offspring.
     * @param isActive Covariance update mechanism.
     * @param diagonalOnly Simplified covariance update.
     * @param stopValue Termination criteria for optimization.
     * @param fTol Tolerance relative error on the objective function.
     * @param pointTol Tolerance for checking that the optimum is correct.
     * @param maxEvaluations Maximum number of evaluations.
     * @param expected Expected point / value.
     */
    private void doTest(MultivariateFunction func,
            double[] startPoint,
            double[] inSigma,
            double[][] boundaries,
            GoalType goal,
            int lambda,
            boolean isActive,
            int diagonalOnly, 
            double stopValue,
            double fTol,
            double pointTol,
            int maxEvaluations,
            PointValuePair expected) {
        int dim = startPoint.length;
        // test diagonalOnly = 0 - slow but normally fewer feval#
        CMAESOptimizer optim = new CMAESOptimizer( lambda, inSigma, 30000,
                                                   stopValue, isActive, diagonalOnly,
                                                   0, new MersenneTwister(), false);
        final double[] lB = boundaries == null ? null : boundaries[0];
        final double[] uB = boundaries == null ? null : boundaries[1];
        PointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, lB, uB);
        Assert.assertEquals(expected.getValue(),
                result.getValue(), fTol);
        for (int i = 0; i < dim; i++) {
            Assert.assertEquals(expected.getPoint()[i],
                    result.getPoint()[i], pointTol);
        }
    }

    private static double[] point(int n, double value) {
        double[] ds = new double[n];
        Arrays.fill(ds, value);
        return ds;
    }

    private static double[][] boundaries(int dim,
            double lower, double upper) {
        double[][] boundaries = new double[2][dim];
        for (int i = 0; i < dim; i++)
            boundaries[0][i] = lower;
        for (int i = 0; i < dim; i++)
            boundaries[1][i] = upper;
        return boundaries;
    }

    private static class Sphere implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class Cigar implements MultivariateFunction {
        private double factor;

        Cigar() {
            this(1e3);
        }

        Cigar(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += factor * x[i] * x[i];
            return f;
        }
    }

    private static class Tablet implements MultivariateFunction {
        private double factor;

        Tablet() {
            this(1e3);
        }

        Tablet(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = factor * x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class CigTab implements MultivariateFunction {
        private double factor;

        CigTab() {
            this(1e4);
        }

        CigTab(double axisratio) {
            factor = axisratio;
        }

        public double value(double[] x) {
            int end = x.length - 1;
            double f = x[0] * x[0] / factor + factor * x[end] * x[end];
            for (int i = 1; i < end; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class TwoAxes implements MultivariateFunction {

        private double factor;

        TwoAxes() {
            this(1e6);
        }

        TwoAxes(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += (i < x.length / 2 ? factor : 1) * x[i] * x[i];
            return f;
        }
    }

    private static class ElliRotated implements MultivariateFunction {
        private Basis B = new Basis();
        private double factor;

        ElliRotated() {
            this(1e3);
        }

        ElliRotated(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            x = B.Rotate(x);
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class Elli implements MultivariateFunction {

        private double factor;

        Elli() {
            this(1e3);
        }

        Elli(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class MinusElli implements MultivariateFunction {

        public double value(double[] x) {
            return 1.0-(new Elli().value(x));
        }
    }

    private static class DiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(Math.abs(x[i]), 2. + 10 * (double) i
                        / (x.length - 1.));
            return f;
        }
    }

    private static class SsDiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = Math.pow(new DiffPow().value(x), 0.25);
            return f;
        }
    }

    private static class Rosen implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length - 1; ++i)
                f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
                + (x[i] - 1.) * (x[i] - 1.);
            return f;
        }
    }

    private static class Ackley implements MultivariateFunction {
        private double axisratio;

        Ackley(double axra) {
            axisratio = axra;
        }

        public Ackley() {
            this(1);
        }

        public double value(double[] x) {
            double f = 0;
            double res2 = 0;
            double fac = 0;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                f += fac * fac * x[i] * x[i];
                res2 += Math.cos(2. * Math.PI * fac * x[i]);
            }
            f = (20. - 20. * Math.exp(-0.2 * Math.sqrt(f / x.length))
                    + Math.exp(1.) - Math.exp(res2 / x.length));
            return f;
        }
    }

    private static class Rastrigin implements MultivariateFunction {

        private double axisratio;
        private double amplitude;

        Rastrigin() {
            this(1, 10);
        }

        Rastrigin(double axisratio, double amplitude) {
            this.axisratio = axisratio;
            this.amplitude = amplitude;
        }

        public double value(double[] x) {
            double f = 0;
            double fac;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                if (i == 0 && x[i] < 0)
                    fac *= 1.;
                f += fac * fac * x[i] * x[i] + amplitude
                * (1. - Math.cos(2. * Math.PI * fac * x[i]));
            }
            return f;
        }
    }

    private static class Basis {
        double[][] basis;
        Random rand = new Random(2); // use not always the same basis

        double[] Rotate(double[] x) {
            GenBasis(x.length);
            double[] y = new double[x.length];
            for (int i = 0; i < x.length; ++i) {
                y[i] = 0;
                for (int j = 0; j < x.length; ++j)
                    y[i] += basis[i][j] * x[j];
            }
            return y;
        }

        void GenBasis(int DIM) {
            if (basis != null ? basis.length == DIM : false)
                return;

            double sp;
            int i, j, k;

            /* generate orthogonal basis */
            basis = new double[DIM][DIM];
            for (i = 0; i < DIM; ++i) {
                /* sample components gaussian */
                for (j = 0; j < DIM; ++j)
                    basis[i][j] = rand.nextGaussian();
                /* substract projection of previous vectors */
                for (j = i - 1; j >= 0; --j) {
                    for (sp = 0., k = 0; k < DIM; ++k)
                        sp += basis[i][k] * basis[j][k]; /* scalar product */
                    for (k = 0; k < DIM; ++k)
                        basis[i][k] -= sp * basis[j][k]; /* substract */
                }
                /* normalize */
                for (sp = 0., k = 0; k < DIM; ++k)
                    sp += basis[i][k] * basis[i][k]; /* squared norm */
                for (k = 0; k < DIM; ++k)
                    basis[i][k] /= Math.sqrt(sp);
            }
        }
    }
}
Method byte code: 
0: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testSphere
Start line: 263
End line: 275
Method source code: 
    public void testSphere() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Sphere(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #53
41: dup
42: aconst_null
43: invokespecial #54
46: aload_1
47: aload_2
48: aload_3
49: getstatic     #15
52: getstatic     #16
55: iconst_1
56: iconst_0
57: ldc2_w        #17
60: ldc2_w        #17
63: ldc2_w        #19
66: ldc           #21
68: aload         4
70: invokespecial #22
73: aload_0
74: new           #53
77: dup
78: aconst_null
79: invokespecial #54
82: aload_1
83: aload_2
84: aload_3
85: getstatic     #15
88: getstatic     #16
91: iconst_0
92: iconst_0
93: ldc2_w        #17
96: ldc2_w        #17
99: ldc2_w        #19
102: ldc           #21
104: aload         4
106: invokespecial #22
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testTablet
Start line: 278
End line: 290
Method source code: 
    public void testTablet() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Tablet(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #55
41: dup
42: invokespecial #56
45: aload_1
46: aload_2
47: aload_3
48: getstatic     #15
51: getstatic     #16
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #17
62: ldc2_w        #19
65: ldc           #21
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #55
76: dup
77: invokespecial #56
80: aload_1
81: aload_2
82: aload_3
83: getstatic     #15
86: getstatic     #16
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #17
97: ldc2_w        #19
100: ldc           #21
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testDiffPow
Start line: 293
End line: 305
Method source code: 
    public void testDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-8, 1e-1, 100000, expected);
        doTest(new DiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-8, 2e-1, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #57
41: dup
42: aconst_null
43: invokespecial #58
46: aload_1
47: aload_2
48: aload_3
49: getstatic     #15
52: bipush        10
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #49
62: ldc2_w        #38
65: ldc           #21
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #57
76: dup
77: aconst_null
78: invokespecial #58
81: aload_1
82: aload_2
83: aload_3
84: getstatic     #15
87: bipush        10
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #49
97: ldc2_w        #59
100: ldc           #21
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testSsDiffPow
Start line: 308
End line: 320
Method source code: 
    public void testSsDiffPow() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, true, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
        doTest(new SsDiffPow(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 10, false, 0, 1e-13,
                1e-4, 1e-1, 200000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: ldc2_w        #38
12: invokestatic  #5
15: astore_2
16: aconst_null
17: checkcast     #35
20: astore_3
21: new           #11
24: dup
25: bipush        13
27: dconst_0
28: invokestatic  #5
31: dconst_0
32: invokespecial #12
35: astore        4
37: aload_0
38: new           #61
41: dup
42: aconst_null
43: invokespecial #62
46: aload_1
47: aload_2
48: aload_3
49: getstatic     #15
52: bipush        10
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #63
62: ldc2_w        #38
65: ldc           #46
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #61
76: dup
77: aconst_null
78: invokespecial #62
81: aload_1
82: aload_2
83: aload_3
84: getstatic     #15
87: bipush        10
89: iconst_0
90: iconst_0
91: ldc2_w        #17
94: ldc2_w        #63
97: ldc2_w        #38
100: ldc           #46
102: aload         4
104: invokespecial #22
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testAckley
Start line: 323
End line: 335
Method source code: 
    public void testAckley() {
        double[] startPoint = point(DIM,1.0);
        double[] insigma = point(DIM,1.0);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
        doTest(new Ackley(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-9, 1e-5, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: dconst_1
3: invokestatic  #5
6: astore_1
7: bipush        13
9: dconst_1
10: invokestatic  #5
13: astore_2
14: aconst_null
15: checkcast     #35
18: astore_3
19: new           #11
22: dup
23: bipush        13
25: dconst_0
26: invokestatic  #5
29: dconst_0
30: invokespecial #12
33: astore        4
35: aload_0
36: new           #65
39: dup
40: invokespecial #66
43: aload_1
44: aload_2
45: aload_3
46: getstatic     #15
49: iconst_2
50: getstatic     #16
53: imul
54: iconst_1
55: iconst_0
56: ldc2_w        #17
59: ldc2_w        #67
62: ldc2_w        #69
65: ldc           #21
67: aload         4
69: invokespecial #22
72: aload_0
73: new           #65
76: dup
77: invokespecial #66
80: aload_1
81: aload_2
82: aload_3
83: getstatic     #15
86: iconst_2
87: getstatic     #16
90: imul
91: iconst_0
92: iconst_0
93: ldc2_w        #17
96: ldc2_w        #67
99: ldc2_w        #69
102: ldc           #21
104: aload         4
106: invokespecial #22
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testRastrigin
Start line: 338
End line: 350
Method source code: 
    public void testRastrigin() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = null;
        PointValuePair expected =
            new PointValuePair(point(DIM,0.0),0.0);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), true, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
        doTest(new Rastrigin(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, (int)(200*Math.sqrt(DIM)), false, 0, 1e-13,
                1e-13, 1e-6, 200000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #38
5: invokestatic  #5
8: astore_1
9: bipush        13
11: ldc2_w        #38
14: invokestatic  #5
17: astore_2
18: aconst_null
19: checkcast     #35
22: astore_3
23: new           #11
26: dup
27: bipush        13
29: dconst_0
30: invokestatic  #5
33: dconst_0
34: invokespecial #12
37: astore        4
39: aload_0
40: new           #71
43: dup
44: invokespecial #72
47: aload_1
48: aload_2
49: aload_3
50: getstatic     #15
53: ldc2_w        #73
56: ldc2_w        #75
59: invokestatic  #77
62: dmul
63: d2i
64: iconst_1
65: iconst_0
66: ldc2_w        #17
69: ldc2_w        #17
72: ldc2_w        #19
75: ldc           #46
77: aload         4
79: invokespecial #22
82: aload_0
83: new           #71
86: dup
87: invokespecial #72
90: aload_1
91: aload_2
92: aload_3
93: getstatic     #15
96: ldc2_w        #73
99: ldc2_w        #75
102: invokestatic  #77
105: dmul
106: d2i
107: iconst_0
108: iconst_0
109: ldc2_w        #17
112: ldc2_w        #17
115: ldc2_w        #19
118: ldc           #46
120: aload         4
122: invokespecial #22
125: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testConstrainedRosen
Start line: 353
End line: 365
Method source code: 
    public void testConstrainedRosen() {
        double[] startPoint = point(DIM,0.1);
        double[] insigma = point(DIM,0.1);
        double[][] boundaries = boundaries(DIM,-1,2);
        PointValuePair expected =
            new PointValuePair(point(DIM,1.0),0.0);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, true, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
        doTest(new Rosen(), startPoint, insigma, boundaries,
                GoalType.MINIMIZE, 2*LAMBDA, false, 0, 1e-13,
                1e-13, 1e-6, 100000, expected);
    }
Method byte code: 
0: bipush        13
2: ldc2_w        #38
5: invokestatic  #5
8: astore_1
9: bipush        13
11: ldc2_w        #38
14: invokestatic  #5
17: astore_2
18: bipush        13
20: ldc2_w        #6
23: ldc2_w        #8
26: invokestatic  #10
29: astore_3
30: new           #11
33: dup
34: bipush        13
36: dconst_1
37: invokestatic  #5
40: dconst_0
41: invokespecial #12
44: astore        4
46: aload_0
47: new           #13
50: dup
51: aconst_null
52: invokespecial #14
55: aload_1
56: aload_2
57: aload_3
58: getstatic     #15
61: iconst_2
62: getstatic     #16
65: imul
66: iconst_1
67: iconst_0
68: ldc2_w        #17
71: ldc2_w        #17
74: ldc2_w        #19
77: ldc           #21
79: aload         4
81: invokespecial #22
84: aload_0
85: new           #13
88: dup
89: aconst_null
90: invokespecial #14
93: aload_1
94: aload_2
95: aload_3
96: getstatic     #15
99: iconst_2
100: getstatic     #16
103: imul
104: iconst_0
105: iconst_0
106: ldc2_w        #17
109: ldc2_w        #17
112: ldc2_w        #19
115: ldc           #21
117: aload         4
119: invokespecial #22
122: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testDiagonalRosen
Start line: 368
End line: 726
Method source code: 
    public void testDiagonalRosen() {}
// Defects4J: flaky method
//     @Test
//     public void testDiagonalRosen() {
//         double[] startPoint = point(DIM,0.1);
//         double[] insigma = point(DIM,0.1);
//         double[][] boundaries = null;
//         PointValuePair expected =
//             new PointValuePair(point(DIM,1.0),0.0);
//         doTest(new Rosen(), startPoint, insigma, boundaries,
//                 GoalType.MINIMIZE, LAMBDA, false, 1, 1e-13,
//                 1e-10, 1e-4, 1000000, expected);
//      }

    @Test
    public void testMath864() {
        final CMAESOptimizer optimizer = new CMAESOptimizer();
        final MultivariateFunction fitnessFunction = new MultivariateFunction() {
                @Override
                public double value(double[] parameters) {
                    final double target = 1;
                    final double error = target - parameters[0];
                    return error * error;
                }
            };

        final double[] start = { 0 };
        final double[] lower = { -1e6 };
        final double[] upper = { 0.5 };
        final double[] result = optimizer.optimize(10000, fitnessFunction, GoalType.MINIMIZE,
                                                   start, lower, upper).getPoint();
        Assert.assertTrue("Out of bounds (" + result[0] + " > " + upper[0] + ")",
                          result[0] <= upper[0]);
    }

    /**
     * @param func Function to optimize.
     * @param startPoint Starting point.
     * @param inSigma Individual input sigma.
     * @param boundaries Upper / lower point limit.
     * @param goal Minimization or maximization.
     * @param lambda Population size used for offspring.
     * @param isActive Covariance update mechanism.
     * @param diagonalOnly Simplified covariance update.
     * @param stopValue Termination criteria for optimization.
     * @param fTol Tolerance relative error on the objective function.
     * @param pointTol Tolerance for checking that the optimum is correct.
     * @param maxEvaluations Maximum number of evaluations.
     * @param expected Expected point / value.
     */
    private void doTest(MultivariateFunction func,
            double[] startPoint,
            double[] inSigma,
            double[][] boundaries,
            GoalType goal,
            int lambda,
            boolean isActive,
            int diagonalOnly, 
            double stopValue,
            double fTol,
            double pointTol,
            int maxEvaluations,
            PointValuePair expected) {
        int dim = startPoint.length;
        // test diagonalOnly = 0 - slow but normally fewer feval#
        CMAESOptimizer optim = new CMAESOptimizer( lambda, inSigma, 30000,
                                                   stopValue, isActive, diagonalOnly,
                                                   0, new MersenneTwister(), false);
        final double[] lB = boundaries == null ? null : boundaries[0];
        final double[] uB = boundaries == null ? null : boundaries[1];
        PointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, lB, uB);
        Assert.assertEquals(expected.getValue(),
                result.getValue(), fTol);
        for (int i = 0; i < dim; i++) {
            Assert.assertEquals(expected.getPoint()[i],
                    result.getPoint()[i], pointTol);
        }
    }

    private static double[] point(int n, double value) {
        double[] ds = new double[n];
        Arrays.fill(ds, value);
        return ds;
    }

    private static double[][] boundaries(int dim,
            double lower, double upper) {
        double[][] boundaries = new double[2][dim];
        for (int i = 0; i < dim; i++)
            boundaries[0][i] = lower;
        for (int i = 0; i < dim; i++)
            boundaries[1][i] = upper;
        return boundaries;
    }

    private static class Sphere implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class Cigar implements MultivariateFunction {
        private double factor;

        Cigar() {
            this(1e3);
        }

        Cigar(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += factor * x[i] * x[i];
            return f;
        }
    }

    private static class Tablet implements MultivariateFunction {
        private double factor;

        Tablet() {
            this(1e3);
        }

        Tablet(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = factor * x[0] * x[0];
            for (int i = 1; i < x.length; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class CigTab implements MultivariateFunction {
        private double factor;

        CigTab() {
            this(1e4);
        }

        CigTab(double axisratio) {
            factor = axisratio;
        }

        public double value(double[] x) {
            int end = x.length - 1;
            double f = x[0] * x[0] / factor + factor * x[end] * x[end];
            for (int i = 1; i < end; ++i)
                f += x[i] * x[i];
            return f;
        }
    }

    private static class TwoAxes implements MultivariateFunction {

        private double factor;

        TwoAxes() {
            this(1e6);
        }

        TwoAxes(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += (i < x.length / 2 ? factor : 1) * x[i] * x[i];
            return f;
        }
    }

    private static class ElliRotated implements MultivariateFunction {
        private Basis B = new Basis();
        private double factor;

        ElliRotated() {
            this(1e3);
        }

        ElliRotated(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            x = B.Rotate(x);
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class Elli implements MultivariateFunction {

        private double factor;

        Elli() {
            this(1e3);
        }

        Elli(double axisratio) {
            factor = axisratio * axisratio;
        }

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(factor, i / (x.length - 1.)) * x[i] * x[i];
            return f;
        }
    }

    private static class MinusElli implements MultivariateFunction {

        public double value(double[] x) {
            return 1.0-(new Elli().value(x));
        }
    }

    private static class DiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length; ++i)
                f += Math.pow(Math.abs(x[i]), 2. + 10 * (double) i
                        / (x.length - 1.));
            return f;
        }
    }

    private static class SsDiffPow implements MultivariateFunction {

        public double value(double[] x) {
            double f = Math.pow(new DiffPow().value(x), 0.25);
            return f;
        }
    }

    private static class Rosen implements MultivariateFunction {

        public double value(double[] x) {
            double f = 0;
            for (int i = 0; i < x.length - 1; ++i)
                f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
                + (x[i] - 1.) * (x[i] - 1.);
            return f;
        }
    }

    private static class Ackley implements MultivariateFunction {
        private double axisratio;

        Ackley(double axra) {
            axisratio = axra;
        }

        public Ackley() {
            this(1);
        }

        public double value(double[] x) {
            double f = 0;
            double res2 = 0;
            double fac = 0;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                f += fac * fac * x[i] * x[i];
                res2 += Math.cos(2. * Math.PI * fac * x[i]);
            }
            f = (20. - 20. * Math.exp(-0.2 * Math.sqrt(f / x.length))
                    + Math.exp(1.) - Math.exp(res2 / x.length));
            return f;
        }
    }

    private static class Rastrigin implements MultivariateFunction {

        private double axisratio;
        private double amplitude;

        Rastrigin() {
            this(1, 10);
        }

        Rastrigin(double axisratio, double amplitude) {
            this.axisratio = axisratio;
            this.amplitude = amplitude;
        }

        public double value(double[] x) {
            double f = 0;
            double fac;
            for (int i = 0; i < x.length; ++i) {
                fac = Math.pow(axisratio, (i - 1.) / (x.length - 1.));
                if (i == 0 && x[i] < 0)
                    fac *= 1.;
                f += fac * fac * x[i] * x[i] + amplitude
                * (1. - Math.cos(2. * Math.PI * fac * x[i]));
            }
            return f;
        }
    }

    private static class Basis {
        double[][] basis;
        Random rand = new Random(2); // use not always the same basis

        double[] Rotate(double[] x) {
            GenBasis(x.length);
            double[] y = new double[x.length];
            for (int i = 0; i < x.length; ++i) {
                y[i] = 0;
                for (int j = 0; j < x.length; ++j)
                    y[i] += basis[i][j] * x[j];
            }
            return y;
        }

        void GenBasis(int DIM) {
            if (basis != null ? basis.length == DIM : false)
                return;

            double sp;
            int i, j, k;

            /* generate orthogonal basis */
            basis = new double[DIM][DIM];
            for (i = 0; i < DIM; ++i) {
                /* sample components gaussian */
                for (j = 0; j < DIM; ++j)
                    basis[i][j] = rand.nextGaussian();
                /* substract projection of previous vectors */
                for (j = i - 1; j >= 0; --j) {
                    for (sp = 0., k = 0; k < DIM; ++k)
                        sp += basis[i][k] * basis[j][k]; /* scalar product */
                    for (k = 0; k < DIM; ++k)
                        basis[i][k] -= sp * basis[j][k]; /* substract */
                }
                /* normalize */
                for (sp = 0., k = 0; k < DIM; ++k)
                    sp += basis[i][k] * basis[i][k]; /* squared norm */
                for (k = 0; k < DIM; ++k)
                    basis[i][k] /= Math.sqrt(sp);
            }
        }
    }
}
Method byte code: 
0: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.class
Class name: CMAESOptimizerTest
Method name: testMath864
Start line: 383
End line: 401
Method source code: 
    public void testMath864() {
        final CMAESOptimizer optimizer = new CMAESOptimizer();
        final MultivariateFunction fitnessFunction = new MultivariateFunction() {
                @Override
                public double value(double[] parameters) {
                    final double target = 1;
                    final double error = target - parameters[0];
                    return error * error;
                }
            };

        final double[] start = { 0 };
        final double[] lower = { -1e6 };
        final double[] upper = { 0.5 };
        final double[] result = optimizer.optimize(10000, fitnessFunction, GoalType.MINIMIZE,
                                                   start, lower, upper).getPoint();
        Assert.assertTrue("Out of bounds (" + result[0] + " > " + upper[0] + ")",
                          result[0] <= upper[0]);
    }
Method byte code: 
0: new           #78
3: dup
4: invokespecial #79
7: astore_1
8: new           #80
11: dup
12: aload_0
13: invokespecial #81
16: astore_2
17: iconst_1
18: newarray       double
20: dup
21: iconst_0
22: dconst_0
23: dastore
24: astore_3
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #82
33: dastore
34: astore        4
36: iconst_1
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #25
44: dastore
45: astore        5
47: aload_1
48: sipush        10000
51: aload_2
52: getstatic     #15
55: aload_3
56: aload         4
58: aload         5
60: invokevirtual #84
63: invokevirtual #85
66: astore        6
68: new           #86
71: dup
72: invokespecial #87
75: ldc           #88
77: invokevirtual #89
80: aload         6
82: iconst_0
83: daload
84: invokevirtual #90
87: ldc           #91
89: invokevirtual #89
92: aload         5
94: iconst_0
95: daload
96: invokevirtual #90
99: ldc           #92
101: invokevirtual #89
104: invokevirtual #93
107: aload         6
109: iconst_0
110: daload
111: aload         5
113: iconst_0
114: daload
115: dcmpg
116: ifgt          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #94
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test00
Start line: 28
End line: 39
Method source code: 
  public void test00()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 30000;
      GoalType goalType0 = GoalType.MINIMIZE;
      PointValuePair pointValuePair0 = cMAESOptimizer0.optimize(30000, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray2, doubleArray1, doubleArray2);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: iconst_1
42: newarray       double
44: astore        5
46: aload         5
48: iconst_0
49: ldc2_w        #8
52: dastore
53: getstatic     #10
56: astore        6
58: aload_1
59: sipush        30000
62: aload         4
64: aload         6
66: aload         5
68: aload_3
69: aload         5
71: invokevirtual #11
74: astore        7
76: aload         7
78: invokestatic  #12
81: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test01
Start line: 42
End line: 46
Method source code: 
  public void test01()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2, (double[]) null, 2403, 2403, false, 2, 2, (RandomGenerator) null, false);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertEquals(0, list0.size());
  }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: aconst_null
6: checkcast     #13
9: sipush        2403
12: ldc2_w        #14
15: iconst_0
16: iconst_2
17: iconst_2
18: aconst_null
19: checkcast     #16
22: iconst_0
23: invokespecial #17
26: astore_1
27: aload_1
28: invokevirtual #18
31: astore_2
32: lconst_0
33: aload_2
34: invokeinterface #19,  1
39: i2l
40: invokestatic  #20
43: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test02
Start line: 49
End line: 53
Method source code: 
  public void test02()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #21
12: astore_2
13: lconst_0
14: aload_2
15: invokeinterface #19,  1
20: i2l
21: invokestatic  #20
24: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test03
Start line: 56
End line: 63
Method source code: 
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Well19937c well19937c0 = new Well19937c((long) (-1210));
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0, (-15.380915));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, doubleArray0, (-1210), 0.0, true, (-1210), 0, well19937c0, true, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertTrue(list0.isEmpty());
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: new           #22
7: dup
8: ldc2_w        #23
11: invokespecial #25
14: astore_2
15: new           #26
18: dup
19: dconst_0
20: ldc2_w        #27
23: invokespecial #29
26: astore_3
27: new           #2
30: dup
31: iconst_0
32: aload_1
33: sipush        -1210
36: dconst_0
37: iconst_1
38: sipush        -1210
41: iconst_0
42: aload_2
43: iconst_1
44: aload_3
45: invokespecial #30
48: astore        4
50: aload         4
52: invokevirtual #31
55: astore        5
57: aload         5
59: invokeinterface #32,  1
64: invokestatic  #33
67: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test04
Start line: 66
End line: 70
Method source code: 
  public void test04()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertEquals(0, list0.size());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: aload_1
9: invokevirtual #34
12: astore_2
13: lconst_0
14: aload_2
15: invokeinterface #19,  1
20: i2l
21: invokestatic  #20
24: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test05
Start line: 73
End line: 83
Method source code: 
  public void test05()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer(8, doubleArray1, 0, 0.0, true, 0, 8, cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      GoalType goalType0 = GoalType.MAXIMIZE;
      PointValuePair pointValuePair0 = cMAESOptimizer1.optimize(8, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: new           #2
44: dup
45: bipush        8
47: aload_3
48: iconst_0
49: dconst_0
50: iconst_1
51: iconst_0
52: bipush        8
54: aload_1
55: pop
56: getstatic     #35
59: iconst_1
60: invokespecial #17
63: astore        5
65: getstatic     #36
68: astore        6
70: aload         5
72: bipush        8
74: aload         4
76: aload         6
78: aload_3
79: aload_3
80: aload_3
81: invokevirtual #11
84: astore        7
86: aload         7
88: invokestatic  #12
91: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test06
Start line: 86
End line: 105
Method source code: 
  public void test06()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer(0, doubleArray1, 30000, (-19), true, 0, (-19), cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      try { 
        cMAESOptimizer1.optimize(30000, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: new           #2
44: dup
45: iconst_0
46: aload_3
47: sipush        30000
50: ldc2_w        #37
53: iconst_1
54: iconst_0
55: bipush        -19
57: aload_1
58: pop
59: getstatic     #35
62: iconst_1
63: invokespecial #17
66: astore        5
68: getstatic     #10
71: astore        6
73: aload         5
75: sipush        30000
78: aload         4
80: aload         6
82: aload_3
83: aload_3
84: aload_3
85: invokevirtual #11
88: pop
89: ldc           #39
91: invokestatic  #40
94: goto          106
97: astore        7
99: ldc           #42
101: aload         7
103: invokestatic  #43
106: return
Exception table:
from    to  target type
73    94    97   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test07
Start line: 108
End line: 118
Method source code: 
  public void test07()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      GoalType goalType0 = GoalType.MINIMIZE;
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer(0, doubleArray1, 30000, 13, true, 0, 13, cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      PointValuePair pointValuePair0 = cMAESOptimizer1.optimize(30000, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: getstatic     #10
44: astore        5
46: new           #2
49: dup
50: iconst_0
51: aload_3
52: sipush        30000
55: ldc2_w        #44
58: iconst_1
59: iconst_0
60: bipush        13
62: aload_1
63: pop
64: getstatic     #35
67: iconst_1
68: invokespecial #17
71: astore        6
73: aload         6
75: sipush        30000
78: aload         4
80: aload         5
82: aload_3
83: aload_3
84: aload_3
85: invokevirtual #11
88: astore        7
90: aload         7
92: invokestatic  #12
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test08
Start line: 121
End line: 132
Method source code: 
  public void test08()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 30000;
      GoalType goalType0 = GoalType.MAXIMIZE;
      PointValuePair pointValuePair0 = cMAESOptimizer0.optimize(544384101, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray2);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: iconst_1
42: newarray       double
44: astore        5
46: aload         5
48: iconst_0
49: ldc2_w        #8
52: dastore
53: getstatic     #36
56: astore        6
58: aload_1
59: ldc           #46
61: aload         4
63: aload         6
65: aload_3
66: aload_3
67: aload         5
69: invokevirtual #11
72: astore        7
74: aload         7
76: invokestatic  #12
79: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test09
Start line: 135
End line: 152
Method source code: 
  public void test09()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 30000, 0, (UnitSphereRandomVectorGenerator) null);
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(363, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, (double[]) null, doubleArray1);
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: new           #5
23: dup
24: aload_2
25: aload_3
26: sipush        30000
29: iconst_0
30: aconst_null
31: checkcast     #6
34: invokespecial #7
37: astore        4
39: getstatic     #10
42: astore        5
44: aload_1
45: sipush        363
48: aload         4
50: aload         5
52: aload_3
53: aconst_null
54: checkcast     #13
57: aload_3
58: invokevirtual #11
61: pop
62: ldc           #47
64: invokestatic  #40
67: goto          79
70: astore        6
72: ldc           #42
74: aload         6
76: invokestatic  #43
79: return
Exception table:
from    to  target type
44    67    70   Class org/apache/commons/math3/exception/MathUnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test10
Start line: 155
End line: 172
Method source code: 
  public void test10()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(0, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, (double[]) null);
        fail("Expecting exception: MathUnsupportedOperationException");
      
      } catch(MathUnsupportedOperationException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: new           #5
23: dup
24: aload_2
25: aload_3
26: iconst_0
27: iconst_0
28: aconst_null
29: checkcast     #6
32: invokespecial #7
35: astore        4
37: getstatic     #36
40: astore        5
42: aload_1
43: iconst_0
44: aload         4
46: aload         5
48: aload_3
49: aload_3
50: aconst_null
51: checkcast     #13
54: invokevirtual #11
57: pop
58: ldc           #47
60: invokestatic  #40
63: goto          75
66: astore        6
68: ldc           #42
70: aload         6
72: invokestatic  #43
75: return
Exception table:
from    to  target type
42    63    66   Class org/apache/commons/math3/exception/MathUnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test11
Start line: 175
End line: 193
Method source code: 
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, (-2689), 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2689), doubleArray1);
      GoalType goalType0 = GoalType.MINIMIZE;
      double[] doubleArray2 = new double[0];
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(0, microsphereInterpolatingFunction0, goalType0, doubleArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: iconst_1
1: bipush        6
3: multianewarray #4,  2
7: astore_1
8: iconst_1
9: newarray       double
11: astore_2
12: new           #5
15: dup
16: aload_1
17: aload_2
18: sipush        -2689
21: iconst_0
22: aconst_null
23: checkcast     #6
26: invokespecial #7
29: astore_3
30: new           #2
33: dup
34: sipush        -2689
37: aload_2
38: invokespecial #49
41: astore        4
43: getstatic     #10
46: astore        5
48: iconst_0
49: newarray       double
51: astore        6
53: aload         4
55: iconst_0
56: aload_3
57: aload         5
59: aload         6
61: invokevirtual #50
64: pop
65: ldc           #51
67: invokestatic  #40
70: goto          82
73: astore        7
75: ldc           #42
77: aload         7
79: invokestatic  #43
82: return
Exception table:
from    to  target type
53    70    73   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test12
Start line: 196
End line: 214
Method source code: 
  public void test12()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) (-2689);
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, (-2689), 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, doubleArray1);
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(30000, microsphereInterpolatingFunction0, goalType0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,689 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: iconst_1
1: bipush        6
3: multianewarray #4,  2
7: astore_1
8: iconst_1
9: newarray       double
11: astore_2
12: aload_2
13: iconst_0
14: ldc2_w        #53
17: dastore
18: new           #5
21: dup
22: aload_1
23: aload_2
24: sipush        -2689
27: iconst_0
28: aconst_null
29: checkcast     #6
32: invokespecial #7
35: astore_3
36: new           #2
39: dup
40: iconst_0
41: aload_2
42: invokespecial #49
45: astore        4
47: getstatic     #36
50: astore        5
52: aload         4
54: sipush        30000
57: aload_3
58: aload         5
60: aload_2
61: invokevirtual #50
64: pop
65: ldc           #51
67: invokestatic  #40
70: goto          82
73: astore        6
75: ldc           #42
77: aload         6
79: invokestatic  #43
82: return
Exception table:
from    to  target type
52    70    73   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test13
Start line: 217
End line: 235
Method source code: 
  public void test13()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 30000;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, doubleArray1);
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(9, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 30,000 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optimization.direct.CMAESOptimizer", e);
      }
  }
Method byte code: 
0: iconst_1
1: bipush        6
3: multianewarray #4,  2
7: astore_1
8: iconst_1
9: newarray       double
11: astore_2
12: aload_2
13: iconst_0
14: ldc2_w        #8
17: dastore
18: new           #5
21: dup
22: aload_1
23: aload_2
24: iconst_0
25: iconst_0
26: aconst_null
27: checkcast     #6
30: invokespecial #7
33: astore_3
34: new           #2
37: dup
38: iconst_0
39: aload_2
40: invokespecial #49
43: astore        4
45: getstatic     #36
48: astore        5
50: aload         4
52: bipush        9
54: aload_3
55: aload         5
57: aload_2
58: aload_2
59: aload_2
60: invokevirtual #11
63: pop
64: ldc           #51
66: invokestatic  #40
69: goto          81
72: astore        6
74: ldc           #42
76: aload         6
78: invokestatic  #43
81: return
Exception table:
from    to  target type
50    69    72   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test14
Start line: 238
End line: 248
Method source code: 
  public void test14()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer(0, doubleArray1, 30000, 0.0, true, 13, 0, cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      GoalType goalType0 = GoalType.MINIMIZE;
      PointValuePair pointValuePair0 = cMAESOptimizer1.optimize(30000, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: new           #2
44: dup
45: iconst_0
46: aload_3
47: sipush        30000
50: dconst_0
51: iconst_1
52: bipush        13
54: iconst_0
55: aload_1
56: pop
57: getstatic     #35
60: iconst_1
61: invokespecial #17
64: astore        5
66: getstatic     #10
69: astore        6
71: aload         5
73: sipush        30000
76: aload         4
78: aload         6
80: aload_3
81: aload_3
82: aload_3
83: invokevirtual #11
86: astore        7
88: aload         7
90: invokestatic  #12
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test15
Start line: 251
End line: 261
Method source code: 
  public void test15()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      GoalType goalType0 = GoalType.MAXIMIZE;
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer((-2341), doubleArray1, 346365547, (-2341), false, (-2341), 7, cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      PointValuePair pointValuePair0 = cMAESOptimizer1.optimize(346365547, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray1, doubleArray1, doubleArray1);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: getstatic     #36
44: astore        5
46: new           #2
49: dup
50: sipush        -2341
53: aload_3
54: ldc           #55
56: ldc2_w        #56
59: iconst_0
60: sipush        -2341
63: bipush        7
65: aload_1
66: pop
67: getstatic     #35
70: iconst_1
71: invokespecial #17
74: astore        6
76: aload         6
78: ldc           #55
80: aload         4
82: aload         5
84: aload_3
85: aload_3
86: aload_3
87: invokevirtual #11
90: astore        7
92: aload         7
94: invokestatic  #12
97: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test16
Start line: 264
End line: 274
Method source code: 
  public void test16()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      CMAESOptimizer cMAESOptimizer1 = new CMAESOptimizer(0, doubleArray1, 30000, 7, true, 0, 7, cMAESOptimizer0.DEFAULT_RANDOMGENERATOR, true);
      GoalType goalType0 = GoalType.MAXIMIZE;
      PointValuePair pointValuePair0 = cMAESOptimizer1.optimize(33, microsphereInterpolatingFunction0, goalType0, doubleArray1);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: aload_2
21: iconst_0
22: aload_3
23: aastore
24: new           #5
27: dup
28: aload_2
29: aload_3
30: iconst_0
31: iconst_0
32: aconst_null
33: checkcast     #6
36: invokespecial #7
39: astore        4
41: new           #2
44: dup
45: iconst_0
46: aload_3
47: sipush        30000
50: ldc2_w        #58
53: iconst_1
54: iconst_0
55: bipush        7
57: aload_1
58: pop
59: getstatic     #35
62: iconst_1
63: invokespecial #17
66: astore        5
68: getstatic     #36
71: astore        6
73: aload         5
75: bipush        33
77: aload         4
79: aload         6
81: aload_3
82: invokevirtual #50
85: astore        7
87: aload         7
89: invokestatic  #12
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/20/target/test-classes/org/apache/commons/math3/optimization/direct/CMAESOptimizer_ESTest.class
Class name: CMAESOptimizer_ESTest
Method name: test17
Start line: 277
End line: 285
Method source code: 
  public void test17()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, (UnitSphereRandomVectorGenerator) null);
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      cMAESOptimizer0.optimize(30000, microsphereInterpolatingFunction0, goalType0, doubleArray0[0]);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_1
9: bipush        6
11: multianewarray #4,  2
15: astore_2
16: iconst_1
17: newarray       double
19: astore_3
20: new           #5
23: dup
24: aload_2
25: aload_3
26: iconst_0
27: iconst_0
28: aconst_null
29: checkcast     #6
32: invokespecial #7
35: astore        4
37: getstatic     #36
40: astore        5
42: aload_1
43: sipush        30000
46: aload         4
48: aload         5
50: aload_2
51: iconst_0
52: aaload
53: invokevirtual #50
56: pop
57: return
}
