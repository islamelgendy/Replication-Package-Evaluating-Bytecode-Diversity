Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test01
Start line: 12
End line: 20
Method source code: 
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        int int2 = simplexSolver0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #11
41: istore_3
42: new           #12
45: dup
46: invokespecial #13
49: ldc           #14
51: invokevirtual #15
54: iload_2
55: invokevirtual #16
58: ldc           #17
60: invokevirtual #15
63: bipush        100
65: invokevirtual #16
68: ldc           #14
70: invokevirtual #15
73: invokevirtual #18
76: iload_2
77: bipush        100
79: if_icmpne     86
82: iconst_1
83: goto          87
86: iconst_0
87: invokestatic  #19
90: new           #12
93: dup
94: invokespecial #13
97: ldc           #14
99: invokevirtual #15
102: iload_3
103: invokevirtual #16
106: ldc           #17
108: invokevirtual #15
111: iconst_0
112: invokevirtual #16
115: ldc           #14
117: invokevirtual #15
120: invokevirtual #18
123: iload_3
124: ifne          131
127: iconst_1
128: goto          132
131: iconst_0
132: invokestatic  #19
135: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test02
Start line: 23
End line: 30
Method source code: 
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        simplexSolver2.incrementIterationsCounter();
        int int4 = simplexSolver2.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #20
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #10
45: istore_2
46: new           #12
49: dup
50: invokespecial #13
53: ldc           #14
55: invokevirtual #15
58: iload_2
59: invokevirtual #16
62: ldc           #17
64: invokevirtual #15
67: bipush        100
69: invokevirtual #16
72: ldc           #14
74: invokevirtual #15
77: invokevirtual #18
80: iload_2
81: bipush        100
83: if_icmpne     90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #19
94: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test03
Start line: 33
End line: 50
Method source code: 
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        simplexSolver0.incrementIterationsCounter();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = null;
        java.util.Collection<org.apache.commons.math3.optimization.linear.LinearConstraint> linearConstraintCollection4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair7 = simplexSolver0.optimize(linearObjectiveFunction3, linearConstraintCollection4, goalType5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #25
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #24
41: aconst_null
42: astore_3
43: aconst_null
44: astore        4
46: aconst_null
47: astore        5
49: aload_1
50: aload_3
51: aload         4
53: aload         5
55: iconst_0
56: invokevirtual #26
59: astore        6
61: ldc           #27
63: invokestatic  #28
66: goto          71
69: astore        6
71: new           #12
74: dup
75: invokespecial #13
78: ldc           #14
80: invokevirtual #15
83: iload_2
84: invokevirtual #16
87: ldc           #17
89: invokevirtual #15
92: bipush        100
94: invokevirtual #16
97: ldc           #14
99: invokevirtual #15
102: invokevirtual #18
105: iload_2
106: bipush        100
108: if_icmpne     115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #19
119: return
Exception table:
from    to  target type
49    66    69   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test04
Start line: 53
End line: 67
Method source code: 
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau2 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver0.solvePhase1(simplexTableau2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #30
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aconst_null
38: astore_3
39: aload_1
40: aload_3
41: invokevirtual #31
44: ldc           #27
46: invokestatic  #28
49: goto          54
52: astore        4
54: new           #12
57: dup
58: invokespecial #13
61: ldc           #14
63: invokevirtual #15
66: iload_2
67: invokevirtual #16
70: ldc           #17
72: invokevirtual #15
75: iconst_0
76: invokevirtual #16
79: ldc           #14
81: invokevirtual #15
84: invokevirtual #18
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #19
99: return
Exception table:
from    to  target type
39    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test05
Start line: 70
End line: 78
Method source code: 
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        int int2 = simplexSolver0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #32
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aload_1
38: invokevirtual #11
41: istore_3
42: new           #12
45: dup
46: invokespecial #13
49: ldc           #14
51: invokevirtual #15
54: iload_2
55: invokevirtual #16
58: ldc           #17
60: invokevirtual #15
63: iconst_0
64: invokevirtual #16
67: ldc           #14
69: invokevirtual #15
72: invokevirtual #18
75: iload_2
76: ifne          83
79: iconst_1
80: goto          84
83: iconst_0
84: invokestatic  #19
87: new           #12
90: dup
91: invokespecial #13
94: ldc           #14
96: invokevirtual #15
99: iload_3
100: invokevirtual #16
103: ldc           #17
105: invokevirtual #15
108: iconst_0
109: invokevirtual #16
112: ldc           #14
114: invokevirtual #15
117: invokevirtual #18
120: iload_3
121: ifne          128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #19
132: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test06
Start line: 81
End line: 97
Method source code: 
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        int int2 = simplexSolver0.getIterations();
        org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau3 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver0.doIteration(simplexTableau3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #33
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #11
41: istore_3
42: aconst_null
43: astore        4
45: aload_1
46: aload         4
48: invokevirtual #34
51: ldc           #27
53: invokestatic  #28
56: goto          61
59: astore        5
61: new           #12
64: dup
65: invokespecial #13
68: ldc           #14
70: invokevirtual #15
73: iload_2
74: invokevirtual #16
77: ldc           #17
79: invokevirtual #15
82: bipush        100
84: invokevirtual #16
87: ldc           #14
89: invokevirtual #15
92: invokevirtual #18
95: iload_2
96: bipush        100
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #19
109: new           #12
112: dup
113: invokespecial #13
116: ldc           #14
118: invokevirtual #15
121: iload_3
122: invokevirtual #16
125: ldc           #17
127: invokevirtual #15
130: iconst_0
131: invokevirtual #16
134: ldc           #14
136: invokevirtual #15
139: invokevirtual #18
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #19
154: return
Exception table:
from    to  target type
45    56    59   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test07
Start line: 100
End line: 111
Method source code: 
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        simplexSolver0.incrementIterationsCounter();
        boolean boolean3 = simplexSolver0.restrictToNonNegative();
        int int4 = simplexSolver0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #35
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #36
45: istore_3
46: aload_1
47: invokevirtual #10
50: istore        4
52: new           #12
55: dup
56: invokespecial #13
59: ldc           #14
61: invokevirtual #15
64: iload_2
65: invokevirtual #16
68: ldc           #17
70: invokevirtual #15
73: bipush        100
75: invokevirtual #16
78: ldc           #14
80: invokevirtual #15
83: invokevirtual #18
86: iload_2
87: bipush        100
89: if_icmpne     96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #19
100: new           #12
103: dup
104: invokespecial #13
107: ldc           #14
109: invokevirtual #15
112: iload_3
113: invokevirtual #37
116: ldc           #17
118: invokevirtual #15
121: iconst_0
122: invokevirtual #37
125: ldc           #14
127: invokevirtual #15
130: invokevirtual #18
133: iload_3
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #19
145: new           #12
148: dup
149: invokespecial #13
152: ldc           #14
154: invokevirtual #15
157: iload         4
159: invokevirtual #16
162: ldc           #17
164: invokevirtual #15
167: bipush        100
169: invokevirtual #16
172: ldc           #14
174: invokevirtual #15
177: invokevirtual #18
180: iload         4
182: bipush        100
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #19
195: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test08
Start line: 114
End line: 131
Method source code: 
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        simplexSolver2.incrementIterationsCounter();
        int int4 = simplexSolver2.getIterations();
        org.apache.commons.math3.optimization.GoalType goalType5 = simplexSolver2.getGoalType();
        org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau6 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver2.solvePhase1(simplexTableau6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(goalType5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #38
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #11
45: istore_2
46: aload_1
47: invokevirtual #39
50: astore_3
51: aconst_null
52: astore        4
54: aload_1
55: aload         4
57: invokevirtual #31
60: ldc           #27
62: invokestatic  #28
65: goto          70
68: astore        5
70: new           #12
73: dup
74: invokespecial #13
77: ldc           #14
79: invokevirtual #15
82: iload_2
83: invokevirtual #16
86: ldc           #17
88: invokevirtual #15
91: iconst_1
92: invokevirtual #16
95: ldc           #14
97: invokevirtual #15
100: invokevirtual #18
103: iload_2
104: iconst_1
105: if_icmpne     112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #19
116: aload_3
117: invokestatic  #40
120: return
Exception table:
from    to  target type
54    65    68   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test09
Start line: 134
End line: 147
Method source code: 
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        simplexSolver0.incrementIterationsCounter();
        boolean boolean3 = simplexSolver0.restrictToNonNegative();
        boolean boolean4 = simplexSolver0.restrictToNonNegative();
        int int5 = simplexSolver0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #41
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #36
45: istore_3
46: aload_1
47: invokevirtual #36
50: istore        4
52: aload_1
53: invokevirtual #11
56: istore        5
58: new           #12
61: dup
62: invokespecial #13
65: ldc           #14
67: invokevirtual #15
70: iload_2
71: invokevirtual #16
74: ldc           #17
76: invokevirtual #15
79: bipush        100
81: invokevirtual #16
84: ldc           #14
86: invokevirtual #15
89: invokevirtual #18
92: iload_2
93: bipush        100
95: if_icmpne     102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #19
106: new           #12
109: dup
110: invokespecial #13
113: ldc           #14
115: invokevirtual #15
118: iload_3
119: invokevirtual #37
122: ldc           #17
124: invokevirtual #15
127: iconst_0
128: invokevirtual #37
131: ldc           #14
133: invokevirtual #15
136: invokevirtual #18
139: iload_3
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #19
151: new           #12
154: dup
155: invokespecial #13
158: ldc           #14
160: invokevirtual #15
163: iload         4
165: invokevirtual #37
168: ldc           #17
170: invokevirtual #15
173: iconst_0
174: invokevirtual #37
177: ldc           #14
179: invokevirtual #15
182: invokevirtual #18
185: iload         4
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #19
198: new           #12
201: dup
202: invokespecial #13
205: ldc           #14
207: invokevirtual #15
210: iload         5
212: invokevirtual #16
215: ldc           #17
217: invokevirtual #15
220: iconst_1
221: invokevirtual #16
224: ldc           #14
226: invokevirtual #15
229: invokevirtual #18
232: iload         5
234: iconst_1
235: if_icmpne     242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #19
246: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test10
Start line: 150
End line: 160
Method source code: 
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        org.apache.commons.math3.optimization.GoalType goalType2 = simplexSolver0.getGoalType();
        int int3 = simplexSolver0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #42
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #39
41: astore_3
42: aload_1
43: invokevirtual #11
46: istore        4
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: bipush        100
71: invokevirtual #16
74: ldc           #14
76: invokevirtual #15
79: invokevirtual #18
82: iload_2
83: bipush        100
85: if_icmpne     92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #19
96: aload_3
97: invokestatic  #40
100: new           #12
103: dup
104: invokespecial #13
107: ldc           #14
109: invokevirtual #15
112: iload         4
114: invokevirtual #16
117: ldc           #17
119: invokevirtual #15
122: iconst_0
123: invokevirtual #16
126: ldc           #14
128: invokevirtual #15
131: invokevirtual #18
134: iload         4
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #19
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test11
Start line: 163
End line: 168
Method source code: 
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(0.022632062360231846d, (int) ' ');
        simplexSolver2.setMaxIterations(2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #43
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #44
31: bipush        32
33: invokespecial #23
36: astore_1
37: aload_1
38: iconst_2
39: invokevirtual #46
42: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test12
Start line: 171
End line: 178
Method source code: 
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        simplexSolver0.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #47
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aload_1
38: invokevirtual #24
41: new           #12
44: dup
45: invokespecial #13
48: ldc           #14
50: invokevirtual #15
53: iload_2
54: invokevirtual #16
57: ldc           #17
59: invokevirtual #15
62: iconst_0
63: invokevirtual #16
66: ldc           #14
68: invokevirtual #15
71: invokevirtual #18
74: iload_2
75: ifne          82
78: iconst_1
79: goto          83
82: iconst_0
83: invokestatic  #19
86: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test13
Start line: 181
End line: 187
Method source code: 
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        simplexSolver2.incrementIterationsCounter();
        simplexSolver2.setMaxIterations((int) (short) -1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #48
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #24
41: aload_1
42: iconst_m1
43: invokevirtual #46
46: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test14
Start line: 190
End line: 202
Method source code: 
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau3 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver2.doIteration(simplexTableau3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #49
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aconst_null
38: astore_2
39: aload_1
40: aload_2
41: invokevirtual #34
44: ldc           #27
46: invokestatic  #28
49: goto          53
52: astore_3
53: return
Exception table:
from    to  target type
39    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test15
Start line: 205
End line: 209
Method source code: 
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(74.3758701563694d, 6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #50
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #51
31: bipush        6
33: invokespecial #23
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test16
Start line: 212
End line: 218
Method source code: 
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(10.0d, (int) (short) 0);
        org.apache.commons.math3.optimization.GoalType goalType3 = simplexSolver2.getGoalType();
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #53
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #54
31: iconst_0
32: invokespecial #23
35: astore_1
36: aload_1
37: invokevirtual #39
40: astore_2
41: aload_2
42: invokestatic  #40
45: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test17
Start line: 221
End line: 232
Method source code: 
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        simplexSolver0.incrementIterationsCounter();
        boolean boolean3 = simplexSolver0.restrictToNonNegative();
        int int4 = simplexSolver0.getIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #56
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #36
45: istore_3
46: aload_1
47: invokevirtual #11
50: istore        4
52: new           #12
55: dup
56: invokespecial #13
59: ldc           #14
61: invokevirtual #15
64: iload_2
65: invokevirtual #16
68: ldc           #17
70: invokevirtual #15
73: bipush        100
75: invokevirtual #16
78: ldc           #14
80: invokevirtual #15
83: invokevirtual #18
86: iload_2
87: bipush        100
89: if_icmpne     96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #19
100: new           #12
103: dup
104: invokespecial #13
107: ldc           #14
109: invokevirtual #15
112: iload_3
113: invokevirtual #37
116: ldc           #17
118: invokevirtual #15
121: iconst_0
122: invokevirtual #37
125: ldc           #14
127: invokevirtual #15
130: invokevirtual #18
133: iload_3
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #19
145: new           #12
148: dup
149: invokespecial #13
152: ldc           #14
154: invokevirtual #15
157: iload         4
159: invokevirtual #16
162: ldc           #17
164: invokevirtual #15
167: iconst_1
168: invokevirtual #16
171: ldc           #14
173: invokevirtual #15
176: invokevirtual #18
179: iload         4
181: iconst_1
182: if_icmpne     189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #19
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test18
Start line: 235
End line: 245
Method source code: 
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        simplexSolver2.incrementIterationsCounter();
        int int4 = simplexSolver2.getIterations();
        boolean boolean5 = simplexSolver2.restrictToNonNegative();
        simplexSolver2.setMaxIterations((int) 'a');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #24
41: aload_1
42: invokevirtual #11
45: istore_2
46: aload_1
47: invokevirtual #36
50: istore_3
51: aload_1
52: bipush        97
54: invokevirtual #46
57: new           #12
60: dup
61: invokespecial #13
64: ldc           #14
66: invokevirtual #15
69: iload_2
70: invokevirtual #16
73: ldc           #17
75: invokevirtual #15
78: iconst_1
79: invokevirtual #16
82: ldc           #14
84: invokevirtual #15
87: invokevirtual #18
90: iload_2
91: iconst_1
92: if_icmpne     99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #19
103: new           #12
106: dup
107: invokespecial #13
110: ldc           #14
112: invokevirtual #15
115: iload_3
116: invokevirtual #37
119: ldc           #17
121: invokevirtual #15
124: iconst_0
125: invokevirtual #37
128: ldc           #14
130: invokevirtual #15
133: invokevirtual #18
136: iload_3
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #19
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test19
Start line: 248
End line: 252
Method source code: 
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver((double) '4', 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #58
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #59
31: bipush        100
33: invokespecial #23
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test20
Start line: 255
End line: 265
Method source code: 
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        int int3 = simplexSolver2.getIterations();
        org.apache.commons.math3.optimization.GoalType goalType4 = simplexSolver2.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType5 = simplexSolver2.getGoalType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNull(goalType5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #61
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #11
41: istore_2
42: aload_1
43: invokevirtual #39
46: astore_3
47: aload_1
48: invokevirtual #39
51: astore        4
53: new           #12
56: dup
57: invokespecial #13
60: ldc           #14
62: invokevirtual #15
65: iload_2
66: invokevirtual #16
69: ldc           #17
71: invokevirtual #15
74: iconst_0
75: invokevirtual #16
78: ldc           #14
80: invokevirtual #15
83: invokevirtual #18
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #19
98: aload_3
99: invokestatic  #40
102: aload         4
104: invokestatic  #40
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test21
Start line: 268
End line: 275
Method source code: 
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(0.022632062360231846d, (int) ' ');
        int int3 = simplexSolver2.getIterations();
        simplexSolver2.setMaxIterations(1078034432);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #62
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #44
31: bipush        32
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #11
41: istore_2
42: aload_1
43: ldc           #63
45: invokevirtual #46
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: iconst_0
70: invokevirtual #16
73: ldc           #14
75: invokevirtual #15
78: invokevirtual #18
81: iload_2
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #19
93: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test22
Start line: 278
End line: 288
Method source code: 
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = simplexSolver0.getFunction();
        org.apache.commons.math3.optimization.GoalType goalType3 = simplexSolver0.getGoalType();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertNull(linearObjectiveFunction2);
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #64
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #65
41: astore_3
42: aload_1
43: invokevirtual #39
46: astore        4
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: bipush        100
71: invokevirtual #16
74: ldc           #14
76: invokevirtual #15
79: invokevirtual #18
82: iload_2
83: bipush        100
85: if_icmpne     92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #19
96: aload_3
97: invokestatic  #40
100: aload         4
102: invokestatic  #40
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test23
Start line: 291
End line: 300
Method source code: 
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        int int2 = simplexSolver0.getIterations();
        simplexSolver0.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #66
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #11
41: istore_3
42: aload_1
43: invokevirtual #24
46: new           #12
49: dup
50: invokespecial #13
53: ldc           #14
55: invokevirtual #15
58: iload_2
59: invokevirtual #16
62: ldc           #17
64: invokevirtual #15
67: bipush        100
69: invokevirtual #16
72: ldc           #14
74: invokevirtual #15
77: invokevirtual #18
80: iload_2
81: bipush        100
83: if_icmpne     90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #19
94: new           #12
97: dup
98: invokespecial #13
101: ldc           #14
103: invokevirtual #15
106: iload_3
107: invokevirtual #16
110: ldc           #17
112: invokevirtual #15
115: iconst_0
116: invokevirtual #16
119: ldc           #14
121: invokevirtual #15
124: invokevirtual #18
127: iload_3
128: ifne          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #19
139: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test24
Start line: 303
End line: 309
Method source code: 
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        int int3 = simplexSolver2.getIterations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #67
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #11
41: istore_2
42: new           #12
45: dup
46: invokespecial #13
49: ldc           #14
51: invokevirtual #15
54: iload_2
55: invokevirtual #16
58: ldc           #17
60: invokevirtual #15
63: iconst_0
64: invokevirtual #16
67: ldc           #14
69: invokevirtual #15
72: invokevirtual #18
75: iload_2
76: ifne          83
79: iconst_1
80: goto          84
83: iconst_0
84: invokestatic  #19
87: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test25
Start line: 312
End line: 324
Method source code: 
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        int int3 = simplexSolver2.getIterations();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction4 = simplexSolver2.getFunction();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction5 = simplexSolver2.getFunction();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction6 = simplexSolver2.getFunction();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(linearObjectiveFunction4);
        org.junit.Assert.assertNull(linearObjectiveFunction5);
        org.junit.Assert.assertNull(linearObjectiveFunction6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #68
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #11
41: istore_2
42: aload_1
43: invokevirtual #65
46: astore_3
47: aload_1
48: invokevirtual #65
51: astore        4
53: aload_1
54: invokevirtual #65
57: astore        5
59: new           #12
62: dup
63: invokespecial #13
66: ldc           #14
68: invokevirtual #15
71: iload_2
72: invokevirtual #16
75: ldc           #17
77: invokevirtual #15
80: iconst_0
81: invokevirtual #16
84: ldc           #14
86: invokevirtual #15
89: invokevirtual #18
92: iload_2
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #19
104: aload_3
105: invokestatic  #40
108: aload         4
110: invokestatic  #40
113: aload         5
115: invokestatic  #40
118: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test26
Start line: 327
End line: 341
Method source code: 
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        org.apache.commons.math3.optimization.GoalType goalType3 = simplexSolver2.getGoalType();
        org.apache.commons.math3.optimization.linear.SimplexTableau simplexTableau4 = null;
        // The following exception was thrown during execution in test generation
        try {
            simplexSolver2.doIteration(simplexTableau4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(goalType3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #69
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #39
41: astore_2
42: aconst_null
43: astore_3
44: aload_1
45: aload_3
46: invokevirtual #34
49: ldc           #27
51: invokestatic  #28
54: goto          59
57: astore        4
59: aload_2
60: invokestatic  #40
63: return
Exception table:
from    to  target type
44    54    57   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test27
Start line: 344
End line: 356
Method source code: 
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        int int2 = simplexSolver0.getMaxIterations();
        boolean boolean3 = simplexSolver0.restrictToNonNegative();
        boolean boolean4 = simplexSolver0.restrictToNonNegative();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: invokevirtual #36
46: istore        4
48: aload_1
49: invokevirtual #36
52: istore        5
54: new           #12
57: dup
58: invokespecial #13
61: ldc           #14
63: invokevirtual #15
66: iload_2
67: invokevirtual #16
70: ldc           #17
72: invokevirtual #15
75: iconst_0
76: invokevirtual #16
79: ldc           #14
81: invokevirtual #15
84: invokevirtual #18
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #19
99: new           #12
102: dup
103: invokespecial #13
106: ldc           #14
108: invokevirtual #15
111: iload_3
112: invokevirtual #16
115: ldc           #17
117: invokevirtual #15
120: bipush        100
122: invokevirtual #16
125: ldc           #14
127: invokevirtual #15
130: invokevirtual #18
133: iload_3
134: bipush        100
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #19
147: new           #12
150: dup
151: invokespecial #13
154: ldc           #14
156: invokevirtual #15
159: iload         4
161: invokevirtual #37
164: ldc           #17
166: invokevirtual #15
169: iconst_0
170: invokevirtual #37
173: ldc           #14
175: invokevirtual #15
178: invokevirtual #18
181: iload         4
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #19
194: new           #12
197: dup
198: invokespecial #13
201: ldc           #14
203: invokevirtual #15
206: iload         5
208: invokevirtual #37
211: ldc           #17
213: invokevirtual #15
216: iconst_0
217: invokevirtual #37
220: ldc           #14
222: invokevirtual #15
225: invokevirtual #18
228: iload         5
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #19
241: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test28
Start line: 359
End line: 369
Method source code: 
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        int int2 = simplexSolver0.getIterations();
        int int3 = simplexSolver0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #11
41: istore_3
42: aload_1
43: invokevirtual #10
46: istore        4
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: bipush        100
71: invokevirtual #16
74: ldc           #14
76: invokevirtual #15
79: invokevirtual #18
82: iload_2
83: bipush        100
85: if_icmpne     92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #19
96: new           #12
99: dup
100: invokespecial #13
103: ldc           #14
105: invokevirtual #15
108: iload_3
109: invokevirtual #16
112: ldc           #17
114: invokevirtual #15
117: iconst_0
118: invokevirtual #16
121: ldc           #14
123: invokevirtual #15
126: invokevirtual #18
129: iload_3
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #19
141: new           #12
144: dup
145: invokespecial #13
148: ldc           #14
150: invokevirtual #15
153: iload         4
155: invokevirtual #16
158: ldc           #17
160: invokevirtual #15
163: bipush        100
165: invokevirtual #16
168: ldc           #14
170: invokevirtual #15
173: invokevirtual #18
176: iload         4
178: bipush        100
180: if_icmpne     187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #19
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test29
Start line: 372
End line: 384
Method source code: 
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0000000000000002d, (int) '#');
        simplexSolver2.incrementIterationsCounter();
        simplexSolver2.setMaxIterations((int) (short) 100);
        int int6 = simplexSolver2.getMaxIterations();
        org.apache.commons.math3.optimization.GoalType goalType7 = simplexSolver2.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType8 = simplexSolver2.getGoalType();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNull(goalType8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #72
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #21
31: bipush        35
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #24
41: aload_1
42: bipush        100
44: invokevirtual #46
47: aload_1
48: invokevirtual #10
51: istore_2
52: aload_1
53: invokevirtual #39
56: astore_3
57: aload_1
58: invokevirtual #39
61: astore        4
63: new           #12
66: dup
67: invokespecial #13
70: ldc           #14
72: invokevirtual #15
75: iload_2
76: invokevirtual #16
79: ldc           #17
81: invokevirtual #15
84: bipush        100
86: invokevirtual #16
89: ldc           #14
91: invokevirtual #15
94: invokevirtual #18
97: iload_2
98: bipush        100
100: if_icmpne     107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #19
111: aload_3
112: invokestatic  #40
115: aload         4
117: invokestatic  #40
120: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test30
Start line: 387
End line: 399
Method source code: 
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        int int2 = simplexSolver0.getMaxIterations();
        int int3 = simplexSolver0.getMaxIterations();
        org.apache.commons.math3.optimization.GoalType goalType4 = simplexSolver0.getGoalType();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNull(goalType4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #73
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: invokevirtual #10
46: istore        4
48: aload_1
49: invokevirtual #39
52: astore        5
54: new           #12
57: dup
58: invokespecial #13
61: ldc           #14
63: invokevirtual #15
66: iload_2
67: invokevirtual #16
70: ldc           #17
72: invokevirtual #15
75: iconst_0
76: invokevirtual #16
79: ldc           #14
81: invokevirtual #15
84: invokevirtual #18
87: iload_2
88: ifne          95
91: iconst_1
92: goto          96
95: iconst_0
96: invokestatic  #19
99: new           #12
102: dup
103: invokespecial #13
106: ldc           #14
108: invokevirtual #15
111: iload_3
112: invokevirtual #16
115: ldc           #17
117: invokevirtual #15
120: bipush        100
122: invokevirtual #16
125: ldc           #14
127: invokevirtual #15
130: invokevirtual #18
133: iload_3
134: bipush        100
136: if_icmpne     143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #19
147: new           #12
150: dup
151: invokespecial #13
154: ldc           #14
156: invokevirtual #15
159: iload         4
161: invokevirtual #16
164: ldc           #17
166: invokevirtual #15
169: bipush        100
171: invokevirtual #16
174: ldc           #14
176: invokevirtual #15
179: invokevirtual #18
182: iload         4
184: bipush        100
186: if_icmpne     193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #19
197: aload         5
199: invokestatic  #40
202: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test31
Start line: 402
End line: 412
Method source code: 
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getIterations();
        int int2 = simplexSolver0.getMaxIterations();
        org.apache.commons.math3.optimization.linear.LinearObjectiveFunction linearObjectiveFunction3 = simplexSolver0.getFunction();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNull(linearObjectiveFunction3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #74
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #11
36: istore_2
37: aload_1
38: invokevirtual #10
41: istore_3
42: aload_1
43: invokevirtual #65
46: astore        4
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: iconst_0
70: invokevirtual #16
73: ldc           #14
75: invokevirtual #15
78: invokevirtual #18
81: iload_2
82: ifne          89
85: iconst_1
86: goto          90
89: iconst_0
90: invokestatic  #19
93: new           #12
96: dup
97: invokespecial #13
100: ldc           #14
102: invokevirtual #15
105: iload_3
106: invokevirtual #16
109: ldc           #17
111: invokevirtual #15
114: bipush        100
116: invokevirtual #16
119: ldc           #14
121: invokevirtual #15
124: invokevirtual #18
127: iload_3
128: bipush        100
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #19
141: aload         4
143: invokestatic  #40
146: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test32
Start line: 415
End line: 425
Method source code: 
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math3.optimization.linear.SimplexSolver();
        int int1 = simplexSolver0.getMaxIterations();
        org.apache.commons.math3.optimization.GoalType goalType2 = simplexSolver0.getGoalType();
        boolean boolean3 = simplexSolver0.restrictToNonNegative();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: istore_2
37: aload_1
38: invokevirtual #39
41: astore_3
42: aload_1
43: invokevirtual #36
46: istore        4
48: new           #12
51: dup
52: invokespecial #13
55: ldc           #14
57: invokevirtual #15
60: iload_2
61: invokevirtual #16
64: ldc           #17
66: invokevirtual #15
69: bipush        100
71: invokevirtual #16
74: ldc           #14
76: invokevirtual #15
79: invokevirtual #18
82: iload_2
83: bipush        100
85: if_icmpne     92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #19
96: aload_3
97: invokestatic  #40
100: new           #12
103: dup
104: invokespecial #13
107: ldc           #14
109: invokevirtual #15
112: iload         4
114: invokevirtual #37
117: ldc           #17
119: invokevirtual #15
122: iconst_0
123: invokevirtual #37
126: ldc           #14
128: invokevirtual #15
131: invokevirtual #18
134: iload         4
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #19
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test33
Start line: 428
End line: 432
Method source code: 
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(1.0963506818711306d, (int) (short) 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #76
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #77
31: bipush        10
33: invokespecial #23
36: astore_1
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test34
Start line: 435
End line: 442
Method source code: 
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        org.apache.commons.math3.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math3.optimization.linear.SimplexSolver(100.0d, 1048576);
        boolean boolean3 = simplexSolver2.restrictToNonNegative();
        simplexSolver2.setMaxIterations((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #79
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #80
31: ldc           #82
33: invokespecial #23
36: astore_1
37: aload_1
38: invokevirtual #36
41: istore_2
42: aload_1
43: iconst_1
44: invokevirtual #46
47: new           #12
50: dup
51: invokespecial #13
54: ldc           #14
56: invokevirtual #15
59: iload_2
60: invokevirtual #37
63: ldc           #17
65: invokevirtual #15
68: iconst_0
69: invokevirtual #37
72: ldc           #14
74: invokevirtual #15
77: invokevirtual #18
80: iload_2
81: ifne          88
84: iconst_1
85: goto          89
88: iconst_0
89: invokestatic  #19
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath828
Start line: 33
End line: 51
Method source code: 
    public void testMath828() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(
                new double[] { 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, 0.0);
        
        ArrayList <LinearConstraint>constraints = new ArrayList<LinearConstraint>();

        constraints.add(new LinearConstraint(new double[] {0.0, 39.0, 23.0, 96.0, 15.0, 48.0, 9.0, 21.0, 48.0, 36.0, 76.0, 19.0, 88.0, 17.0, 16.0, 36.0,}, Relationship.GEQ, 15.0));
        constraints.add(new LinearConstraint(new double[] {0.0, 59.0, 93.0, 12.0, 29.0, 78.0, 73.0, 87.0, 32.0, 70.0, 68.0, 24.0, 11.0, 26.0, 65.0, 25.0,}, Relationship.GEQ, 29.0));
        constraints.add(new LinearConstraint(new double[] {0.0, 74.0, 5.0, 82.0, 6.0, 97.0, 55.0, 44.0, 52.0, 54.0, 5.0, 93.0, 91.0, 8.0, 20.0, 97.0,}, Relationship.GEQ, 6.0));
        constraints.add(new LinearConstraint(new double[] {8.0, -3.0, -28.0, -72.0, -8.0, -31.0, -31.0, -74.0, -47.0, -59.0, -24.0, -57.0, -56.0, -16.0, -92.0, -59.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {25.0, -7.0, -99.0, -78.0, -25.0, -14.0, -16.0, -89.0, -39.0, -56.0, -53.0, -9.0, -18.0, -26.0, -11.0, -61.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {33.0, -95.0, -15.0, -4.0, -33.0, -3.0, -20.0, -96.0, -27.0, -13.0, -80.0, -24.0, -3.0, -13.0, -57.0, -76.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {7.0, -95.0, -39.0, -93.0, -7.0, -94.0, -94.0, -62.0, -76.0, -26.0, -53.0, -57.0, -31.0, -76.0, -53.0, -52.0,}, Relationship.GEQ, 0.0));
        
        double epsilon = 1e-6;
        PointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(1.0d, solution.getValue(), epsilon);
        Assert.assertTrue(validSolution(solution, constraints, epsilon));
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        16
6: newarray       double
8: dup
9: iconst_0
10: dconst_1
11: dastore
12: dup
13: iconst_1
14: dconst_0
15: dastore
16: dup
17: iconst_2
18: dconst_0
19: dastore
20: dup
21: iconst_3
22: dconst_0
23: dastore
24: dup
25: iconst_4
26: dconst_0
27: dastore
28: dup
29: iconst_5
30: dconst_0
31: dastore
32: dup
33: bipush        6
35: dconst_0
36: dastore
37: dup
38: bipush        7
40: dconst_0
41: dastore
42: dup
43: bipush        8
45: dconst_0
46: dastore
47: dup
48: bipush        9
50: dconst_0
51: dastore
52: dup
53: bipush        10
55: dconst_0
56: dastore
57: dup
58: bipush        11
60: dconst_0
61: dastore
62: dup
63: bipush        12
65: dconst_0
66: dastore
67: dup
68: bipush        13
70: dconst_0
71: dastore
72: dup
73: bipush        14
75: dconst_0
76: dastore
77: dup
78: bipush        15
80: dconst_0
81: dastore
82: dconst_0
83: invokespecial #3
86: astore_1
87: new           #4
90: dup
91: invokespecial #5
94: astore_2
95: aload_2
96: new           #6
99: dup
100: bipush        16
102: newarray       double
104: dup
105: iconst_0
106: dconst_0
107: dastore
108: dup
109: iconst_1
110: ldc2_w        #7
113: dastore
114: dup
115: iconst_2
116: ldc2_w        #9
119: dastore
120: dup
121: iconst_3
122: ldc2_w        #11
125: dastore
126: dup
127: iconst_4
128: ldc2_w        #13
131: dastore
132: dup
133: iconst_5
134: ldc2_w        #15
137: dastore
138: dup
139: bipush        6
141: ldc2_w        #17
144: dastore
145: dup
146: bipush        7
148: ldc2_w        #19
151: dastore
152: dup
153: bipush        8
155: ldc2_w        #15
158: dastore
159: dup
160: bipush        9
162: ldc2_w        #21
165: dastore
166: dup
167: bipush        10
169: ldc2_w        #23
172: dastore
173: dup
174: bipush        11
176: ldc2_w        #25
179: dastore
180: dup
181: bipush        12
183: ldc2_w        #27
186: dastore
187: dup
188: bipush        13
190: ldc2_w        #29
193: dastore
194: dup
195: bipush        14
197: ldc2_w        #31
200: dastore
201: dup
202: bipush        15
204: ldc2_w        #21
207: dastore
208: getstatic     #33
211: ldc2_w        #13
214: invokespecial #34
217: invokevirtual #35
220: pop
221: aload_2
222: new           #6
225: dup
226: bipush        16
228: newarray       double
230: dup
231: iconst_0
232: dconst_0
233: dastore
234: dup
235: iconst_1
236: ldc2_w        #36
239: dastore
240: dup
241: iconst_2
242: ldc2_w        #38
245: dastore
246: dup
247: iconst_3
248: ldc2_w        #40
251: dastore
252: dup
253: iconst_4
254: ldc2_w        #42
257: dastore
258: dup
259: iconst_5
260: ldc2_w        #44
263: dastore
264: dup
265: bipush        6
267: ldc2_w        #46
270: dastore
271: dup
272: bipush        7
274: ldc2_w        #48
277: dastore
278: dup
279: bipush        8
281: ldc2_w        #50
284: dastore
285: dup
286: bipush        9
288: ldc2_w        #52
291: dastore
292: dup
293: bipush        10
295: ldc2_w        #54
298: dastore
299: dup
300: bipush        11
302: ldc2_w        #56
305: dastore
306: dup
307: bipush        12
309: ldc2_w        #58
312: dastore
313: dup
314: bipush        13
316: ldc2_w        #60
319: dastore
320: dup
321: bipush        14
323: ldc2_w        #62
326: dastore
327: dup
328: bipush        15
330: ldc2_w        #64
333: dastore
334: getstatic     #33
337: ldc2_w        #42
340: invokespecial #34
343: invokevirtual #35
346: pop
347: aload_2
348: new           #6
351: dup
352: bipush        16
354: newarray       double
356: dup
357: iconst_0
358: dconst_0
359: dastore
360: dup
361: iconst_1
362: ldc2_w        #66
365: dastore
366: dup
367: iconst_2
368: ldc2_w        #68
371: dastore
372: dup
373: iconst_3
374: ldc2_w        #70
377: dastore
378: dup
379: iconst_4
380: ldc2_w        #72
383: dastore
384: dup
385: iconst_5
386: ldc2_w        #74
389: dastore
390: dup
391: bipush        6
393: ldc2_w        #76
396: dastore
397: dup
398: bipush        7
400: ldc2_w        #78
403: dastore
404: dup
405: bipush        8
407: ldc2_w        #80
410: dastore
411: dup
412: bipush        9
414: ldc2_w        #82
417: dastore
418: dup
419: bipush        10
421: ldc2_w        #68
424: dastore
425: dup
426: bipush        11
428: ldc2_w        #38
431: dastore
432: dup
433: bipush        12
435: ldc2_w        #84
438: dastore
439: dup
440: bipush        13
442: ldc2_w        #86
445: dastore
446: dup
447: bipush        14
449: ldc2_w        #88
452: dastore
453: dup
454: bipush        15
456: ldc2_w        #74
459: dastore
460: getstatic     #33
463: ldc2_w        #72
466: invokespecial #34
469: invokevirtual #35
472: pop
473: aload_2
474: new           #6
477: dup
478: bipush        16
480: newarray       double
482: dup
483: iconst_0
484: ldc2_w        #86
487: dastore
488: dup
489: iconst_1
490: ldc2_w        #90
493: dastore
494: dup
495: iconst_2
496: ldc2_w        #92
499: dastore
500: dup
501: iconst_3
502: ldc2_w        #94
505: dastore
506: dup
507: iconst_4
508: ldc2_w        #96
511: dastore
512: dup
513: iconst_5
514: ldc2_w        #98
517: dastore
518: dup
519: bipush        6
521: ldc2_w        #98
524: dastore
525: dup
526: bipush        7
528: ldc2_w        #100
531: dastore
532: dup
533: bipush        8
535: ldc2_w        #102
538: dastore
539: dup
540: bipush        9
542: ldc2_w        #104
545: dastore
546: dup
547: bipush        10
549: ldc2_w        #106
552: dastore
553: dup
554: bipush        11
556: ldc2_w        #108
559: dastore
560: dup
561: bipush        12
563: ldc2_w        #110
566: dastore
567: dup
568: bipush        13
570: ldc2_w        #112
573: dastore
574: dup
575: bipush        14
577: ldc2_w        #114
580: dastore
581: dup
582: bipush        15
584: ldc2_w        #104
587: dastore
588: getstatic     #33
591: dconst_0
592: invokespecial #34
595: invokevirtual #35
598: pop
599: aload_2
600: new           #6
603: dup
604: bipush        16
606: newarray       double
608: dup
609: iconst_0
610: ldc2_w        #64
613: dastore
614: dup
615: iconst_1
616: ldc2_w        #116
619: dastore
620: dup
621: iconst_2
622: ldc2_w        #118
625: dastore
626: dup
627: iconst_3
628: ldc2_w        #120
631: dastore
632: dup
633: iconst_4
634: ldc2_w        #122
637: dastore
638: dup
639: iconst_5
640: ldc2_w        #124
643: dastore
644: dup
645: bipush        6
647: ldc2_w        #112
650: dastore
651: dup
652: bipush        7
654: ldc2_w        #126
657: dastore
658: dup
659: bipush        8
661: ldc2_w        #128
664: dastore
665: dup
666: bipush        9
668: ldc2_w        #110
671: dastore
672: dup
673: bipush        10
675: ldc2_w        #130
678: dastore
679: dup
680: bipush        11
682: ldc2_w        #132
685: dastore
686: dup
687: bipush        12
689: ldc2_w        #134
692: dastore
693: dup
694: bipush        13
696: ldc2_w        #136
699: dastore
700: dup
701: bipush        14
703: ldc2_w        #138
706: dastore
707: dup
708: bipush        15
710: ldc2_w        #140
713: dastore
714: getstatic     #33
717: dconst_0
718: invokespecial #34
721: invokevirtual #35
724: pop
725: aload_2
726: new           #6
729: dup
730: bipush        16
732: newarray       double
734: dup
735: iconst_0
736: ldc2_w        #142
739: dastore
740: dup
741: iconst_1
742: ldc2_w        #144
745: dastore
746: dup
747: iconst_2
748: ldc2_w        #146
751: dastore
752: dup
753: iconst_3
754: ldc2_w        #148
757: dastore
758: dup
759: iconst_4
760: ldc2_w        #150
763: dastore
764: dup
765: iconst_5
766: ldc2_w        #90
769: dastore
770: dup
771: bipush        6
773: ldc2_w        #152
776: dastore
777: dup
778: bipush        7
780: ldc2_w        #154
783: dastore
784: dup
785: bipush        8
787: ldc2_w        #156
790: dastore
791: dup
792: bipush        9
794: ldc2_w        #158
797: dastore
798: dup
799: bipush        10
801: ldc2_w        #160
804: dastore
805: dup
806: bipush        11
808: ldc2_w        #106
811: dastore
812: dup
813: bipush        12
815: ldc2_w        #90
818: dastore
819: dup
820: bipush        13
822: ldc2_w        #158
825: dastore
826: dup
827: bipush        14
829: ldc2_w        #108
832: dastore
833: dup
834: bipush        15
836: ldc2_w        #162
839: dastore
840: getstatic     #33
843: dconst_0
844: invokespecial #34
847: invokevirtual #35
850: pop
851: aload_2
852: new           #6
855: dup
856: bipush        16
858: newarray       double
860: dup
861: iconst_0
862: ldc2_w        #164
865: dastore
866: dup
867: iconst_1
868: ldc2_w        #144
871: dastore
872: dup
873: iconst_2
874: ldc2_w        #128
877: dastore
878: dup
879: iconst_3
880: ldc2_w        #166
883: dastore
884: dup
885: iconst_4
886: ldc2_w        #116
889: dastore
890: dup
891: iconst_5
892: ldc2_w        #168
895: dastore
896: dup
897: bipush        6
899: ldc2_w        #168
902: dastore
903: dup
904: bipush        7
906: ldc2_w        #170
909: dastore
910: dup
911: bipush        8
913: ldc2_w        #162
916: dastore
917: dup
918: bipush        9
920: ldc2_w        #136
923: dastore
924: dup
925: bipush        10
927: ldc2_w        #130
930: dastore
931: dup
932: bipush        11
934: ldc2_w        #108
937: dastore
938: dup
939: bipush        12
941: ldc2_w        #98
944: dastore
945: dup
946: bipush        13
948: ldc2_w        #162
951: dastore
952: dup
953: bipush        14
955: ldc2_w        #130
958: dastore
959: dup
960: bipush        15
962: ldc2_w        #172
965: dastore
966: getstatic     #33
969: dconst_0
970: invokespecial #34
973: invokevirtual #35
976: pop
977: ldc2_w        #174
980: dstore_3
981: new           #176
984: dup
985: invokespecial #177
988: aload_1
989: aload_2
990: getstatic     #178
993: iconst_1
994: invokevirtual #179
997: astore        5
999: dconst_1
1000: aload         5
1002: invokevirtual #180
1005: checkcast     #181
1008: invokevirtual #182
1011: dload_3
1012: invokestatic  #183
1015: aload         5
1017: aload_2
1018: dload_3
1019: invokestatic  #184
1022: invokestatic  #185
1025: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath828Cycle
Start line: 54
End line: 72
Method source code: 
    public void testMath828Cycle() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(
                new double[] { 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, 0.0);
        
        ArrayList <LinearConstraint>constraints = new ArrayList<LinearConstraint>();

        constraints.add(new LinearConstraint(new double[] {0.0, 16.0, 14.0, 69.0, 1.0, 85.0, 52.0, 43.0, 64.0, 97.0, 14.0, 74.0, 89.0, 28.0, 94.0, 58.0, 13.0, 22.0, 21.0, 17.0, 30.0, 25.0, 1.0, 59.0, 91.0, 78.0, 12.0, 74.0, 56.0, 3.0, 88.0,}, Relationship.GEQ, 91.0));
        constraints.add(new LinearConstraint(new double[] {0.0, 60.0, 40.0, 81.0, 71.0, 72.0, 46.0, 45.0, 38.0, 48.0, 40.0, 17.0, 33.0, 85.0, 64.0, 32.0, 84.0, 3.0, 54.0, 44.0, 71.0, 67.0, 90.0, 95.0, 54.0, 99.0, 99.0, 29.0, 52.0, 98.0, 9.0,}, Relationship.GEQ, 54.0));
        constraints.add(new LinearConstraint(new double[] {0.0, 41.0, 12.0, 86.0, 90.0, 61.0, 31.0, 41.0, 23.0, 89.0, 17.0, 74.0, 44.0, 27.0, 16.0, 47.0, 80.0, 32.0, 11.0, 56.0, 68.0, 82.0, 11.0, 62.0, 62.0, 53.0, 39.0, 16.0, 48.0, 1.0, 63.0,}, Relationship.GEQ, 62.0));
        constraints.add(new LinearConstraint(new double[] {83.0, -76.0, -94.0, -19.0, -15.0, -70.0, -72.0, -57.0, -63.0, -65.0, -22.0, -94.0, -22.0, -88.0, -86.0, -89.0, -72.0, -16.0, -80.0, -49.0, -70.0, -93.0, -95.0, -17.0, -83.0, -97.0, -31.0, -47.0, -31.0, -13.0, -23.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {41.0, -96.0, -41.0, -48.0, -70.0, -43.0, -43.0, -43.0, -97.0, -37.0, -85.0, -70.0, -45.0, -67.0, -87.0, -69.0, -94.0, -54.0, -54.0, -92.0, -79.0, -10.0, -35.0, -20.0, -41.0, -41.0, -65.0, -25.0, -12.0, -8.0, -46.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {27.0, -42.0, -65.0, -49.0, -53.0, -42.0, -17.0, -2.0, -61.0, -31.0, -76.0, -47.0, -8.0, -93.0, -86.0, -62.0, -65.0, -63.0, -22.0, -43.0, -27.0, -23.0, -32.0, -74.0, -27.0, -63.0, -47.0, -78.0, -29.0, -95.0, -73.0,}, Relationship.GEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] {15.0, -46.0, -41.0, -83.0, -98.0, -99.0, -21.0, -35.0, -7.0, -14.0, -80.0, -63.0, -18.0, -42.0, -5.0, -34.0, -56.0, -70.0, -16.0, -18.0, -74.0, -61.0, -47.0, -41.0, -15.0, -79.0, -18.0, -47.0, -88.0, -68.0, -55.0,}, Relationship.GEQ, 0.0));
        
        double epsilon = 1e-6;
        PointValuePair solution = new SimplexSolver().optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(1.0d, solution.getValue(), epsilon);
        Assert.assertTrue(validSolution(solution, constraints, epsilon));        
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        31
6: newarray       double
8: dup
9: iconst_0
10: dconst_1
11: dastore
12: dup
13: iconst_1
14: dconst_0
15: dastore
16: dup
17: iconst_2
18: dconst_0
19: dastore
20: dup
21: iconst_3
22: dconst_0
23: dastore
24: dup
25: iconst_4
26: dconst_0
27: dastore
28: dup
29: iconst_5
30: dconst_0
31: dastore
32: dup
33: bipush        6
35: dconst_0
36: dastore
37: dup
38: bipush        7
40: dconst_0
41: dastore
42: dup
43: bipush        8
45: dconst_0
46: dastore
47: dup
48: bipush        9
50: dconst_0
51: dastore
52: dup
53: bipush        10
55: dconst_0
56: dastore
57: dup
58: bipush        11
60: dconst_0
61: dastore
62: dup
63: bipush        12
65: dconst_0
66: dastore
67: dup
68: bipush        13
70: dconst_0
71: dastore
72: dup
73: bipush        14
75: dconst_0
76: dastore
77: dup
78: bipush        15
80: dconst_0
81: dastore
82: dup
83: bipush        16
85: dconst_0
86: dastore
87: dup
88: bipush        17
90: dconst_0
91: dastore
92: dup
93: bipush        18
95: dconst_0
96: dastore
97: dup
98: bipush        19
100: dconst_0
101: dastore
102: dup
103: bipush        20
105: dconst_0
106: dastore
107: dup
108: bipush        21
110: dconst_0
111: dastore
112: dup
113: bipush        22
115: dconst_0
116: dastore
117: dup
118: bipush        23
120: dconst_0
121: dastore
122: dup
123: bipush        24
125: dconst_0
126: dastore
127: dup
128: bipush        25
130: dconst_0
131: dastore
132: dup
133: bipush        26
135: dconst_0
136: dastore
137: dup
138: bipush        27
140: dconst_0
141: dastore
142: dup
143: bipush        28
145: dconst_0
146: dastore
147: dup
148: bipush        29
150: dconst_0
151: dastore
152: dup
153: bipush        30
155: dconst_0
156: dastore
157: dconst_0
158: invokespecial #3
161: astore_1
162: new           #4
165: dup
166: invokespecial #5
169: astore_2
170: aload_2
171: new           #6
174: dup
175: bipush        31
177: newarray       double
179: dup
180: iconst_0
181: dconst_0
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #31
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #186
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #188
200: dastore
201: dup
202: iconst_4
203: dconst_1
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #190
210: dastore
211: dup
212: bipush        6
214: ldc2_w        #80
217: dastore
218: dup
219: bipush        7
221: ldc2_w        #192
224: dastore
225: dup
226: bipush        8
228: ldc2_w        #194
231: dastore
232: dup
233: bipush        9
235: ldc2_w        #74
238: dastore
239: dup
240: bipush        10
242: ldc2_w        #186
245: dastore
246: dup
247: bipush        11
249: ldc2_w        #66
252: dastore
253: dup
254: bipush        12
256: ldc2_w        #196
259: dastore
260: dup
261: bipush        13
263: ldc2_w        #198
266: dastore
267: dup
268: bipush        14
270: ldc2_w        #200
273: dastore
274: dup
275: bipush        15
277: ldc2_w        #202
280: dastore
281: dup
282: bipush        16
284: ldc2_w        #204
287: dastore
288: dup
289: bipush        17
291: ldc2_w        #206
294: dastore
295: dup
296: bipush        18
298: ldc2_w        #19
301: dastore
302: dup
303: bipush        19
305: ldc2_w        #29
308: dastore
309: dup
310: bipush        20
312: ldc2_w        #208
315: dastore
316: dup
317: bipush        21
319: ldc2_w        #64
322: dastore
323: dup
324: bipush        22
326: dconst_1
327: dastore
328: dup
329: bipush        23
331: ldc2_w        #36
334: dastore
335: dup
336: bipush        24
338: ldc2_w        #84
341: dastore
342: dup
343: bipush        25
345: ldc2_w        #44
348: dastore
349: dup
350: bipush        26
352: ldc2_w        #40
355: dastore
356: dup
357: bipush        27
359: ldc2_w        #66
362: dastore
363: dup
364: bipush        28
366: ldc2_w        #210
369: dastore
370: dup
371: bipush        29
373: ldc2_w        #212
376: dastore
377: dup
378: bipush        30
380: ldc2_w        #27
383: dastore
384: getstatic     #33
387: ldc2_w        #84
390: invokespecial #34
393: invokevirtual #35
396: pop
397: aload_2
398: new           #6
401: dup
402: bipush        31
404: newarray       double
406: dup
407: iconst_0
408: dconst_0
409: dastore
410: dup
411: iconst_1
412: ldc2_w        #214
415: dastore
416: dup
417: iconst_2
418: ldc2_w        #216
421: dastore
422: dup
423: iconst_3
424: ldc2_w        #218
427: dastore
428: dup
429: iconst_4
430: ldc2_w        #220
433: dastore
434: dup
435: iconst_5
436: ldc2_w        #222
439: dastore
440: dup
441: bipush        6
443: ldc2_w        #224
446: dastore
447: dup
448: bipush        7
450: ldc2_w        #226
453: dastore
454: dup
455: bipush        8
457: ldc2_w        #228
460: dastore
461: dup
462: bipush        9
464: ldc2_w        #15
467: dastore
468: dup
469: bipush        10
471: ldc2_w        #216
474: dastore
475: dup
476: bipush        11
478: ldc2_w        #29
481: dastore
482: dup
483: bipush        12
485: ldc2_w        #142
488: dastore
489: dup
490: bipush        13
492: ldc2_w        #190
495: dastore
496: dup
497: bipush        14
499: ldc2_w        #194
502: dastore
503: dup
504: bipush        15
506: ldc2_w        #50
509: dastore
510: dup
511: bipush        16
513: ldc2_w        #230
516: dastore
517: dup
518: bipush        17
520: ldc2_w        #212
523: dastore
524: dup
525: bipush        18
527: ldc2_w        #82
530: dastore
531: dup
532: bipush        19
534: ldc2_w        #78
537: dastore
538: dup
539: bipush        20
541: ldc2_w        #220
544: dastore
545: dup
546: bipush        21
548: ldc2_w        #232
551: dastore
552: dup
553: bipush        22
555: ldc2_w        #234
558: dastore
559: dup
560: bipush        23
562: ldc2_w        #236
565: dastore
566: dup
567: bipush        24
569: ldc2_w        #82
572: dastore
573: dup
574: bipush        25
576: ldc2_w        #238
579: dastore
580: dup
581: bipush        26
583: ldc2_w        #238
586: dastore
587: dup
588: bipush        27
590: ldc2_w        #42
593: dastore
594: dup
595: bipush        28
597: ldc2_w        #80
600: dastore
601: dup
602: bipush        29
604: ldc2_w        #240
607: dastore
608: dup
609: bipush        30
611: ldc2_w        #17
614: dastore
615: getstatic     #33
618: ldc2_w        #82
621: invokespecial #34
624: invokevirtual #35
627: pop
628: aload_2
629: new           #6
632: dup
633: bipush        31
635: newarray       double
637: dup
638: iconst_0
639: dconst_0
640: dastore
641: dup
642: iconst_1
643: ldc2_w        #242
646: dastore
647: dup
648: iconst_2
649: ldc2_w        #40
652: dastore
653: dup
654: iconst_3
655: ldc2_w        #244
658: dastore
659: dup
660: iconst_4
661: ldc2_w        #234
664: dastore
665: dup
666: iconst_5
667: ldc2_w        #246
670: dastore
671: dup
672: bipush        6
674: ldc2_w        #248
677: dastore
678: dup
679: bipush        7
681: ldc2_w        #242
684: dastore
685: dup
686: bipush        8
688: ldc2_w        #9
691: dastore
692: dup
693: bipush        9
695: ldc2_w        #196
698: dastore
699: dup
700: bipush        10
702: ldc2_w        #29
705: dastore
706: dup
707: bipush        11
709: ldc2_w        #66
712: dastore
713: dup
714: bipush        12
716: ldc2_w        #78
719: dastore
720: dup
721: bipush        13
723: ldc2_w        #250
726: dastore
727: dup
728: bipush        14
730: ldc2_w        #31
733: dastore
734: dup
735: bipush        15
737: ldc2_w        #252
740: dastore
741: dup
742: bipush        16
744: ldc2_w        #254
747: dastore
748: dup
749: bipush        17
751: ldc2_w        #50
754: dastore
755: dup
756: bipush        18
758: ldc2_w        #58
761: dastore
762: dup
763: bipush        19
765: ldc2_w        #210
768: dastore
769: dup
770: bipush        20
772: ldc2_w        #54
775: dastore
776: dup
777: bipush        21
779: ldc2_w        #70
782: dastore
783: dup
784: bipush        22
786: ldc2_w        #58
789: dastore
790: dup
791: bipush        23
793: ldc2_w        #256
796: dastore
797: dup
798: bipush        24
800: ldc2_w        #256
803: dastore
804: dup
805: bipush        25
807: ldc2_w        #258
810: dastore
811: dup
812: bipush        26
814: ldc2_w        #7
817: dastore
818: dup
819: bipush        27
821: ldc2_w        #31
824: dastore
825: dup
826: bipush        28
828: ldc2_w        #15
831: dastore
832: dup
833: bipush        29
835: dconst_1
836: dastore
837: dup
838: bipush        30
840: ldc2_w        #260
843: dastore
844: getstatic     #33
847: ldc2_w        #256
850: invokespecial #34
853: invokevirtual #35
856: pop
857: aload_2
858: new           #6
861: dup
862: bipush        31
864: newarray       double
866: dup
867: iconst_0
868: ldc2_w        #262
871: dastore
872: dup
873: iconst_1
874: ldc2_w        #162
877: dastore
878: dup
879: iconst_2
880: ldc2_w        #168
883: dastore
884: dup
885: iconst_3
886: ldc2_w        #264
889: dastore
890: dup
891: iconst_4
892: ldc2_w        #146
895: dastore
896: dup
897: iconst_5
898: ldc2_w        #266
901: dastore
902: dup
903: bipush        6
905: ldc2_w        #94
908: dastore
909: dup
910: bipush        7
912: ldc2_w        #108
915: dastore
916: dup
917: bipush        8
919: ldc2_w        #268
922: dastore
923: dup
924: bipush        9
926: ldc2_w        #270
929: dastore
930: dup
931: bipush        10
933: ldc2_w        #272
936: dastore
937: dup
938: bipush        11
940: ldc2_w        #168
943: dastore
944: dup
945: bipush        12
947: ldc2_w        #272
950: dastore
951: dup
952: bipush        13
954: ldc2_w        #274
957: dastore
958: dup
959: bipush        14
961: ldc2_w        #276
964: dastore
965: dup
966: bipush        15
968: ldc2_w        #126
971: dastore
972: dup
973: bipush        16
975: ldc2_w        #94
978: dastore
979: dup
980: bipush        17
982: ldc2_w        #112
985: dastore
986: dup
987: bipush        18
989: ldc2_w        #160
992: dastore
993: dup
994: bipush        19
996: ldc2_w        #278
999: dastore
1000: dup
1001: bipush        20
1003: ldc2_w        #266
1006: dastore
1007: dup
1008: bipush        21
1010: ldc2_w        #166
1013: dastore
1014: dup
1015: bipush        22
1017: ldc2_w        #144
1020: dastore
1021: dup
1022: bipush        23
1024: ldc2_w        #280
1027: dastore
1028: dup
1029: bipush        24
1031: ldc2_w        #282
1034: dastore
1035: dup
1036: bipush        25
1038: ldc2_w        #284
1041: dastore
1042: dup
1043: bipush        26
1045: ldc2_w        #98
1048: dastore
1049: dup
1050: bipush        27
1052: ldc2_w        #102
1055: dastore
1056: dup
1057: bipush        28
1059: ldc2_w        #98
1062: dastore
1063: dup
1064: bipush        29
1066: ldc2_w        #158
1069: dastore
1070: dup
1071: bipush        30
1073: ldc2_w        #286
1076: dastore
1077: getstatic     #33
1080: dconst_0
1081: invokespecial #34
1084: invokevirtual #35
1087: pop
1088: aload_2
1089: new           #6
1092: dup
1093: bipush        31
1095: newarray       double
1097: dup
1098: iconst_0
1099: ldc2_w        #242
1102: dastore
1103: dup
1104: iconst_1
1105: ldc2_w        #154
1108: dastore
1109: dup
1110: iconst_2
1111: ldc2_w        #288
1114: dastore
1115: dup
1116: iconst_3
1117: ldc2_w        #290
1120: dastore
1121: dup
1122: iconst_4
1123: ldc2_w        #266
1126: dastore
1127: dup
1128: iconst_5
1129: ldc2_w        #292
1132: dastore
1133: dup
1134: bipush        6
1136: ldc2_w        #292
1139: dastore
1140: dup
1141: bipush        7
1143: ldc2_w        #292
1146: dastore
1147: dup
1148: bipush        8
1150: ldc2_w        #284
1153: dastore
1154: dup
1155: bipush        9
1157: ldc2_w        #294
1160: dastore
1161: dup
1162: bipush        10
1164: ldc2_w        #296
1167: dastore
1168: dup
1169: bipush        11
1171: ldc2_w        #266
1174: dastore
1175: dup
1176: bipush        12
1178: ldc2_w        #298
1181: dastore
1182: dup
1183: bipush        13
1185: ldc2_w        #300
1188: dastore
1189: dup
1190: bipush        14
1192: ldc2_w        #302
1195: dastore
1196: dup
1197: bipush        15
1199: ldc2_w        #304
1202: dastore
1203: dup
1204: bipush        16
1206: ldc2_w        #168
1209: dastore
1210: dup
1211: bipush        17
1213: ldc2_w        #306
1216: dastore
1217: dup
1218: bipush        18
1220: ldc2_w        #306
1223: dastore
1224: dup
1225: bipush        19
1227: ldc2_w        #114
1230: dastore
1231: dup
1232: bipush        20
1234: ldc2_w        #308
1237: dastore
1238: dup
1239: bipush        21
1241: ldc2_w        #310
1244: dastore
1245: dup
1246: bipush        22
1248: ldc2_w        #312
1251: dastore
1252: dup
1253: bipush        23
1255: ldc2_w        #152
1258: dastore
1259: dup
1260: bipush        24
1262: ldc2_w        #288
1265: dastore
1266: dup
1267: bipush        25
1269: ldc2_w        #288
1272: dastore
1273: dup
1274: bipush        26
1276: ldc2_w        #270
1279: dastore
1280: dup
1281: bipush        27
1283: ldc2_w        #122
1286: dastore
1287: dup
1288: bipush        28
1290: ldc2_w        #314
1293: dastore
1294: dup
1295: bipush        29
1297: ldc2_w        #96
1300: dastore
1301: dup
1302: bipush        30
1304: ldc2_w        #316
1307: dastore
1308: getstatic     #33
1311: dconst_0
1312: invokespecial #34
1315: invokevirtual #35
1318: pop
1319: aload_2
1320: new           #6
1323: dup
1324: bipush        31
1326: newarray       double
1328: dup
1329: iconst_0
1330: ldc2_w        #250
1333: dastore
1334: dup
1335: iconst_1
1336: ldc2_w        #318
1339: dastore
1340: dup
1341: iconst_2
1342: ldc2_w        #270
1345: dastore
1346: dup
1347: iconst_3
1348: ldc2_w        #278
1351: dastore
1352: dup
1353: iconst_4
1354: ldc2_w        #130
1357: dastore
1358: dup
1359: iconst_5
1360: ldc2_w        #318
1363: dastore
1364: dup
1365: bipush        6
1367: ldc2_w        #280
1370: dastore
1371: dup
1372: bipush        7
1374: ldc2_w        #320
1377: dastore
1378: dup
1379: bipush        8
1381: ldc2_w        #140
1384: dastore
1385: dup
1386: bipush        9
1388: ldc2_w        #98
1391: dastore
1392: dup
1393: bipush        10
1395: ldc2_w        #162
1398: dastore
1399: dup
1400: bipush        11
1402: ldc2_w        #102
1405: dastore
1406: dup
1407: bipush        12
1409: ldc2_w        #96
1412: dastore
1413: dup
1414: bipush        13
1416: ldc2_w        #166
1419: dastore
1420: dup
1421: bipush        14
1423: ldc2_w        #276
1426: dastore
1427: dup
1428: bipush        15
1430: ldc2_w        #170
1433: dastore
1434: dup
1435: bipush        16
1437: ldc2_w        #270
1440: dastore
1441: dup
1442: bipush        17
1444: ldc2_w        #268
1447: dastore
1448: dup
1449: bipush        18
1451: ldc2_w        #272
1454: dastore
1455: dup
1456: bipush        19
1458: ldc2_w        #292
1461: dastore
1462: dup
1463: bipush        20
1465: ldc2_w        #156
1468: dastore
1469: dup
1470: bipush        21
1472: ldc2_w        #286
1475: dastore
1476: dup
1477: bipush        22
1479: ldc2_w        #322
1482: dastore
1483: dup
1484: bipush        23
1486: ldc2_w        #100
1489: dastore
1490: dup
1491: bipush        24
1493: ldc2_w        #156
1496: dastore
1497: dup
1498: bipush        25
1500: ldc2_w        #268
1503: dastore
1504: dup
1505: bipush        26
1507: ldc2_w        #102
1510: dastore
1511: dup
1512: bipush        27
1514: ldc2_w        #120
1517: dastore
1518: dup
1519: bipush        28
1521: ldc2_w        #324
1524: dastore
1525: dup
1526: bipush        29
1528: ldc2_w        #144
1531: dastore
1532: dup
1533: bipush        30
1535: ldc2_w        #326
1538: dastore
1539: getstatic     #33
1542: dconst_0
1543: invokespecial #34
1546: invokevirtual #35
1549: pop
1550: aload_2
1551: new           #6
1554: dup
1555: bipush        31
1557: newarray       double
1559: dup
1560: iconst_0
1561: ldc2_w        #13
1564: dastore
1565: dup
1566: iconst_1
1567: ldc2_w        #316
1570: dastore
1571: dup
1572: iconst_2
1573: ldc2_w        #288
1576: dastore
1577: dup
1578: iconst_3
1579: ldc2_w        #282
1582: dastore
1583: dup
1584: iconst_4
1585: ldc2_w        #328
1588: dastore
1589: dup
1590: iconst_5
1591: ldc2_w        #118
1594: dastore
1595: dup
1596: bipush        6
1598: ldc2_w        #330
1601: dastore
1602: dup
1603: bipush        7
1605: ldc2_w        #312
1608: dastore
1609: dup
1610: bipush        8
1612: ldc2_w        #116
1615: dastore
1616: dup
1617: bipush        9
1619: ldc2_w        #124
1622: dastore
1623: dup
1624: bipush        10
1626: ldc2_w        #160
1629: dastore
1630: dup
1631: bipush        11
1633: ldc2_w        #268
1636: dastore
1637: dup
1638: bipush        12
1640: ldc2_w        #134
1643: dastore
1644: dup
1645: bipush        13
1647: ldc2_w        #318
1650: dastore
1651: dup
1652: bipush        14
1654: ldc2_w        #332
1657: dastore
1658: dup
1659: bipush        15
1661: ldc2_w        #334
1664: dastore
1665: dup
1666: bipush        16
1668: ldc2_w        #110
1671: dastore
1672: dup
1673: bipush        17
1675: ldc2_w        #266
1678: dastore
1679: dup
1680: bipush        18
1682: ldc2_w        #112
1685: dastore
1686: dup
1687: bipush        19
1689: ldc2_w        #134
1692: dastore
1693: dup
1694: bipush        20
1696: ldc2_w        #100
1699: dastore
1700: dup
1701: bipush        21
1703: ldc2_w        #140
1706: dastore
1707: dup
1708: bipush        22
1710: ldc2_w        #102
1713: dastore
1714: dup
1715: bipush        23
1717: ldc2_w        #288
1720: dastore
1721: dup
1722: bipush        24
1724: ldc2_w        #146
1727: dastore
1728: dup
1729: bipush        25
1731: ldc2_w        #308
1734: dastore
1735: dup
1736: bipush        26
1738: ldc2_w        #134
1741: dastore
1742: dup
1743: bipush        27
1745: ldc2_w        #102
1748: dastore
1749: dup
1750: bipush        28
1752: ldc2_w        #274
1755: dastore
1756: dup
1757: bipush        29
1759: ldc2_w        #336
1762: dastore
1763: dup
1764: bipush        30
1766: ldc2_w        #338
1769: dastore
1770: getstatic     #33
1773: dconst_0
1774: invokespecial #34
1777: invokevirtual #35
1780: pop
1781: ldc2_w        #174
1784: dstore_3
1785: new           #176
1788: dup
1789: invokespecial #177
1792: aload_1
1793: aload_2
1794: getstatic     #178
1797: iconst_1
1798: invokevirtual #179
1801: astore        5
1803: dconst_1
1804: aload         5
1806: invokevirtual #180
1809: checkcast     #181
1812: invokevirtual #182
1815: dload_3
1816: invokestatic  #183
1819: aload         5
1821: aload_2
1822: dload_3
1823: invokestatic  #184
1826: invokestatic  #185
1829: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath781
Start line: 75
End line: 91
Method source code: 
    public void testMath781() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 6, 7 }, 0);

        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2, 1 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { -1, 1, 1 }, Relationship.LEQ, -1));
        constraints.add(new LinearConstraint(new double[] { 2, -3, 1 }, Relationship.LEQ, -1));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);

        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) > 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) > 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[2], 0.0d, epsilon) < 0);
        Assert.assertEquals(2.0d, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #340
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #72
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #164
24: dastore
25: dconst_0
26: invokespecial #3
29: astore_1
30: new           #4
33: dup
34: invokespecial #5
37: astore_2
38: aload_2
39: new           #6
42: dup
43: iconst_3
44: newarray       double
46: dup
47: iconst_0
48: dconst_1
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #340
55: dastore
56: dup
57: iconst_2
58: dconst_1
59: dastore
60: getstatic     #342
63: ldc2_w        #340
66: invokespecial #34
69: invokevirtual #35
72: pop
73: aload_2
74: new           #6
77: dup
78: iconst_3
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #343
86: dastore
87: dup
88: iconst_1
89: dconst_1
90: dastore
91: dup
92: iconst_2
93: dconst_1
94: dastore
95: getstatic     #342
98: ldc2_w        #343
101: invokespecial #34
104: invokevirtual #35
107: pop
108: aload_2
109: new           #6
112: dup
113: iconst_3
114: newarray       double
116: dup
117: iconst_0
118: ldc2_w        #340
121: dastore
122: dup
123: iconst_1
124: ldc2_w        #90
127: dastore
128: dup
129: iconst_2
130: dconst_1
131: dastore
132: getstatic     #342
135: ldc2_w        #343
138: invokespecial #34
141: invokevirtual #35
144: pop
145: ldc2_w        #174
148: dstore_3
149: new           #176
152: dup
153: invokespecial #177
156: astore        5
158: aload         5
160: aload_1
161: aload_2
162: getstatic     #345
165: iconst_0
166: invokevirtual #179
169: astore        6
171: aload         6
173: invokevirtual #346
176: iconst_0
177: daload
178: dconst_0
179: dload_3
180: invokestatic  #347
183: ifle          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #185
194: aload         6
196: invokevirtual #346
199: iconst_1
200: daload
201: dconst_0
202: dload_3
203: invokestatic  #347
206: ifle          213
209: iconst_1
210: goto          214
213: iconst_0
214: invokestatic  #185
217: aload         6
219: invokevirtual #346
222: iconst_2
223: daload
224: dconst_0
225: dload_3
226: invokestatic  #347
229: ifge          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #185
240: ldc2_w        #340
243: aload         6
245: invokevirtual #180
248: checkcast     #181
251: invokevirtual #182
254: dload_3
255: invokestatic  #183
258: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath713NegativeVariable
Start line: 94
End line: 105
Method source code: 
    public void testMath713NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #3
19: astore_1
20: new           #4
23: dup
24: invokespecial #5
27: astore_2
28: aload_2
29: new           #6
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_0
43: dastore
44: getstatic     #348
47: dconst_1
48: invokespecial #34
51: invokevirtual #35
54: pop
55: ldc2_w        #174
58: dstore_3
59: new           #176
62: dup
63: invokespecial #177
66: astore        5
68: aload         5
70: aload_1
71: aload_2
72: getstatic     #178
75: iconst_1
76: invokevirtual #179
79: astore        6
81: aload         6
83: invokevirtual #346
86: iconst_0
87: daload
88: dconst_0
89: dload_3
90: invokestatic  #347
93: iflt          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #185
104: aload         6
106: invokevirtual #346
109: iconst_1
110: daload
111: dconst_0
112: dload_3
113: invokestatic  #347
116: iflt          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #185
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434NegativeVariable
Start line: 108
End line: 122
Method source code: 
    public void testMath434NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0, 0.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 1, 0}, Relationship.EQ, 5));
        constraints.add(new LinearConstraint(new double[] {0, 0, 1}, Relationship.GEQ, -10));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);

        Assert.assertEquals(5.0, solution.getPoint()[0] + solution.getPoint()[1], epsilon);
        Assert.assertEquals(-10.0, solution.getPoint()[2], epsilon);
        Assert.assertEquals(-10.0, solution.getValue(), epsilon);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: dconst_0
10: dastore
11: dup
12: iconst_1
13: dconst_0
14: dastore
15: dup
16: iconst_2
17: dconst_1
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_3
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: dup
49: iconst_2
50: dconst_0
51: dastore
52: getstatic     #348
55: ldc2_w        #68
58: invokespecial #34
61: invokevirtual #35
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_3
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_0
80: dastore
81: dup
82: iconst_2
83: dconst_1
84: dastore
85: getstatic     #33
88: ldc2_w        #310
91: invokespecial #34
94: invokevirtual #35
97: pop
98: ldc2_w        #174
101: dstore_3
102: new           #176
105: dup
106: invokespecial #177
109: astore        5
111: aload         5
113: aload_1
114: aload_2
115: getstatic     #178
118: iconst_0
119: invokevirtual #179
122: astore        6
124: ldc2_w        #68
127: aload         6
129: invokevirtual #346
132: iconst_0
133: daload
134: aload         6
136: invokevirtual #346
139: iconst_1
140: daload
141: dadd
142: dload_3
143: invokestatic  #183
146: ldc2_w        #310
149: aload         6
151: invokevirtual #346
154: iconst_2
155: daload
156: dload_3
157: invokestatic  #183
160: ldc2_w        #310
163: aload         6
165: invokevirtual #180
168: checkcast     #181
171: invokevirtual #182
174: dload_3
175: invokestatic  #183
178: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434UnfeasibleSolution
Start line: 125
End line: 136
Method source code: 
    public void testMath434UnfeasibleSolution() {
        double epsilon = 1e-6;

        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 0.0}, 0.0);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {epsilon/2, 0.5}, Relationship.EQ, 0));
        constraints.add(new LinearConstraint(new double[] {1e-3, 0.1}, Relationship.EQ, 10));

        SimplexSolver solver = new SimplexSolver();
        // allowing only non-negative values, no feasible solution shall be found
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: ldc2_w        #174
3: dstore_1
4: new           #2
7: dup
8: iconst_2
9: newarray       double
11: dup
12: iconst_0
13: dconst_1
14: dastore
15: dup
16: iconst_1
17: dconst_0
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_3
24: new           #4
27: dup
28: invokespecial #5
31: astore        4
33: aload         4
35: new           #6
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dload_1
45: ldc2_w        #340
48: ddiv
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #349
55: dastore
56: getstatic     #348
59: dconst_0
60: invokespecial #34
63: invokevirtual #35
66: pop
67: aload         4
69: new           #6
72: dup
73: iconst_2
74: newarray       double
76: dup
77: iconst_0
78: ldc2_w        #351
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #353
87: dastore
88: getstatic     #348
91: ldc2_w        #355
94: invokespecial #34
97: invokevirtual #35
100: pop
101: new           #176
104: dup
105: invokespecial #177
108: astore        5
110: aload         5
112: aload_3
113: aload         4
115: getstatic     #178
118: iconst_1
119: invokevirtual #179
122: pop
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection
Start line: 139
End line: 152
Method source code: 
    public void testMath434PivotRowSelection() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0}, 0.0);

        double epsilon = 1e-6;
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {200}, Relationship.GEQ, 1));
        constraints.add(new LinearConstraint(new double[] {100}, Relationship.GEQ, 0.499900001));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0] * 200.d, 1.d, epsilon) >= 0);
        Assert.assertEquals(0.0050, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dconst_0
12: invokespecial #3
15: astore_1
16: ldc2_w        #174
19: dstore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore        4
29: aload         4
31: new           #6
34: dup
35: iconst_1
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #357
43: dastore
44: getstatic     #33
47: dconst_1
48: invokespecial #34
51: invokevirtual #35
54: pop
55: aload         4
57: new           #6
60: dup
61: iconst_1
62: newarray       double
64: dup
65: iconst_0
66: ldc2_w        #359
69: dastore
70: getstatic     #33
73: ldc2_w        #361
76: invokespecial #34
79: invokevirtual #35
82: pop
83: new           #176
86: dup
87: invokespecial #177
90: astore        5
92: aload         5
94: aload_1
95: aload         4
97: getstatic     #178
100: iconst_0
101: invokevirtual #179
104: astore        6
106: aload         6
108: invokevirtual #346
111: iconst_0
112: daload
113: ldc2_w        #357
116: dmul
117: dconst_1
118: dload_2
119: invokestatic  #347
122: iflt          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #185
133: ldc2_w        #363
136: aload         6
138: invokevirtual #180
141: checkcast     #181
144: invokevirtual #182
147: dload_2
148: invokestatic  #183
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection2
Start line: 155
End line: 177
Method source code: 
    public void testMath434PivotRowSelection2() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d}, 0.0d);

        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1.0d, -0.1d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.EQ, -0.1d));
        constraints.add(new LinearConstraint(new double[] {1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, -1e-18d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 1.0d, 0.0d, -0.0128588d, 1e-5d}, Relationship.EQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 0.0d, 1.0d, 1e-5d, -0.0128586d}, Relationship.EQ, 1e-10d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, -1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, -1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, 1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));

        double epsilon = 1e-7;
        SimplexSolver simplex = new SimplexSolver();
        PointValuePair solution = simplex.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], -1e-18d, epsilon) >= 0);
        Assert.assertEquals(1.0d, solution.getPoint()[1], epsilon);        
        Assert.assertEquals(0.0d, solution.getPoint()[2], epsilon);
        Assert.assertEquals(1.0d, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        7
6: newarray       double
8: dup
9: iconst_0
10: dconst_0
11: dastore
12: dup
13: iconst_1
14: dconst_1
15: dastore
16: dup
17: iconst_2
18: dconst_1
19: dastore
20: dup
21: iconst_3
22: dconst_0
23: dastore
24: dup
25: iconst_4
26: dconst_0
27: dastore
28: dup
29: iconst_5
30: dconst_0
31: dastore
32: dup
33: bipush        6
35: dconst_0
36: dastore
37: dconst_0
38: invokespecial #3
41: astore_1
42: new           #4
45: dup
46: invokespecial #5
49: astore_2
50: aload_2
51: new           #6
54: dup
55: bipush        7
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #365
68: dastore
69: dup
70: iconst_2
71: dconst_0
72: dastore
73: dup
74: iconst_3
75: dconst_0
76: dastore
77: dup
78: iconst_4
79: dconst_0
80: dastore
81: dup
82: iconst_5
83: dconst_0
84: dastore
85: dup
86: bipush        6
88: dconst_0
89: dastore
90: getstatic     #348
93: ldc2_w        #365
96: invokespecial #34
99: invokevirtual #35
102: pop
103: aload_2
104: new           #6
107: dup
108: bipush        7
110: newarray       double
112: dup
113: iconst_0
114: dconst_1
115: dastore
116: dup
117: iconst_1
118: dconst_0
119: dastore
120: dup
121: iconst_2
122: dconst_0
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_0
131: dastore
132: dup
133: iconst_5
134: dconst_0
135: dastore
136: dup
137: bipush        6
139: dconst_0
140: dastore
141: getstatic     #33
144: ldc2_w        #367
147: invokespecial #34
150: invokevirtual #35
153: pop
154: aload_2
155: new           #6
158: dup
159: bipush        7
161: newarray       double
163: dup
164: iconst_0
165: dconst_0
166: dastore
167: dup
168: iconst_1
169: dconst_1
170: dastore
171: dup
172: iconst_2
173: dconst_0
174: dastore
175: dup
176: iconst_3
177: dconst_0
178: dastore
179: dup
180: iconst_4
181: dconst_0
182: dastore
183: dup
184: iconst_5
185: dconst_0
186: dastore
187: dup
188: bipush        6
190: dconst_0
191: dastore
192: getstatic     #33
195: dconst_0
196: invokespecial #34
199: invokevirtual #35
202: pop
203: aload_2
204: new           #6
207: dup
208: bipush        7
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: dconst_0
219: dastore
220: dup
221: iconst_2
222: dconst_0
223: dastore
224: dup
225: iconst_3
226: dconst_1
227: dastore
228: dup
229: iconst_4
230: dconst_0
231: dastore
232: dup
233: iconst_5
234: ldc2_w        #369
237: dastore
238: dup
239: bipush        6
241: ldc2_w        #371
244: dastore
245: getstatic     #348
248: dconst_0
249: invokespecial #34
252: invokevirtual #35
255: pop
256: aload_2
257: new           #6
260: dup
261: bipush        7
263: newarray       double
265: dup
266: iconst_0
267: dconst_0
268: dastore
269: dup
270: iconst_1
271: dconst_0
272: dastore
273: dup
274: iconst_2
275: dconst_0
276: dastore
277: dup
278: iconst_3
279: dconst_0
280: dastore
281: dup
282: iconst_4
283: dconst_1
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #371
290: dastore
291: dup
292: bipush        6
294: ldc2_w        #373
297: dastore
298: getstatic     #348
301: ldc2_w        #375
304: invokespecial #34
307: invokevirtual #35
310: pop
311: aload_2
312: new           #6
315: dup
316: bipush        7
318: newarray       double
320: dup
321: iconst_0
322: dconst_0
323: dastore
324: dup
325: iconst_1
326: dconst_0
327: dastore
328: dup
329: iconst_2
330: dconst_1
331: dastore
332: dup
333: iconst_3
334: ldc2_w        #343
337: dastore
338: dup
339: iconst_4
340: dconst_0
341: dastore
342: dup
343: iconst_5
344: dconst_0
345: dastore
346: dup
347: bipush        6
349: dconst_0
350: dastore
351: getstatic     #33
354: dconst_0
355: invokespecial #34
358: invokevirtual #35
361: pop
362: aload_2
363: new           #6
366: dup
367: bipush        7
369: newarray       double
371: dup
372: iconst_0
373: dconst_0
374: dastore
375: dup
376: iconst_1
377: dconst_0
378: dastore
379: dup
380: iconst_2
381: dconst_1
382: dastore
383: dup
384: iconst_3
385: dconst_1
386: dastore
387: dup
388: iconst_4
389: dconst_0
390: dastore
391: dup
392: iconst_5
393: dconst_0
394: dastore
395: dup
396: bipush        6
398: dconst_0
399: dastore
400: getstatic     #33
403: dconst_0
404: invokespecial #34
407: invokevirtual #35
410: pop
411: aload_2
412: new           #6
415: dup
416: bipush        7
418: newarray       double
420: dup
421: iconst_0
422: dconst_0
423: dastore
424: dup
425: iconst_1
426: dconst_0
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: dup
437: iconst_4
438: ldc2_w        #343
441: dastore
442: dup
443: iconst_5
444: dconst_0
445: dastore
446: dup
447: bipush        6
449: dconst_0
450: dastore
451: getstatic     #33
454: dconst_0
455: invokespecial #34
458: invokevirtual #35
461: pop
462: aload_2
463: new           #6
466: dup
467: bipush        7
469: newarray       double
471: dup
472: iconst_0
473: dconst_0
474: dastore
475: dup
476: iconst_1
477: dconst_0
478: dastore
479: dup
480: iconst_2
481: dconst_1
482: dastore
483: dup
484: iconst_3
485: dconst_0
486: dastore
487: dup
488: iconst_4
489: dconst_1
490: dastore
491: dup
492: iconst_5
493: dconst_0
494: dastore
495: dup
496: bipush        6
498: dconst_0
499: dastore
500: getstatic     #33
503: dconst_0
504: invokespecial #34
507: invokevirtual #35
510: pop
511: ldc2_w        #377
514: dstore_3
515: new           #176
518: dup
519: invokespecial #177
522: astore        5
524: aload         5
526: aload_1
527: aload_2
528: getstatic     #178
531: iconst_0
532: invokevirtual #179
535: astore        6
537: aload         6
539: invokevirtual #346
542: iconst_0
543: daload
544: ldc2_w        #367
547: dload_3
548: invokestatic  #347
551: iflt          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #185
562: dconst_1
563: aload         6
565: invokevirtual #346
568: iconst_1
569: daload
570: dload_3
571: invokestatic  #183
574: dconst_0
575: aload         6
577: invokevirtual #346
580: iconst_2
581: daload
582: dload_3
583: invokestatic  #183
586: dconst_1
587: aload         6
589: invokevirtual #180
592: checkcast     #181
595: invokevirtual #182
598: dload_3
599: invokestatic  #183
602: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath272
Start line: 180
End line: 194
Method source code: 
    public void testMath272() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertEquals(0.0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[1], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(3.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #340
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #340
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #3
27: astore_1
28: new           #4
31: dup
32: invokespecial #5
35: astore_2
36: aload_2
37: new           #6
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: dconst_1
47: dastore
48: dup
49: iconst_1
50: dconst_1
51: dastore
52: dup
53: iconst_2
54: dconst_0
55: dastore
56: getstatic     #33
59: dconst_1
60: invokespecial #34
63: invokeinterface #379,  2
68: pop
69: aload_2
70: new           #6
73: dup
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: getstatic     #33
92: dconst_1
93: invokespecial #34
96: invokeinterface #379,  2
101: pop
102: aload_2
103: new           #6
106: dup
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_0
121: dastore
122: getstatic     #33
125: dconst_1
126: invokespecial #34
129: invokeinterface #379,  2
134: pop
135: new           #176
138: dup
139: invokespecial #177
142: astore_3
143: aload_3
144: aload_1
145: aload_2
146: getstatic     #178
149: iconst_1
150: invokevirtual #179
153: astore        4
155: dconst_0
156: aload         4
158: invokevirtual #346
161: iconst_0
162: daload
163: ldc2_w        #377
166: invokestatic  #183
169: dconst_1
170: aload         4
172: invokevirtual #346
175: iconst_1
176: daload
177: ldc2_w        #377
180: invokestatic  #183
183: dconst_1
184: aload         4
186: invokevirtual #346
189: iconst_2
190: daload
191: ldc2_w        #377
194: invokestatic  #183
197: ldc2_w        #212
200: aload         4
202: invokevirtual #180
205: checkcast     #181
208: invokevirtual #182
211: ldc2_w        #377
214: invokestatic  #183
217: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath286
Start line: 197
End line: 215
Method source code: 
    public void testMath286() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.6, 0.4 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0, 0, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 1, 0, 0, 0 }, Relationship.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 0, 0, 1, 0 }, Relationship.GEQ, 5.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

        Assert.assertEquals(25.8, solution.getValue(), .0000001);
        Assert.assertEquals(23.0, solution.getPoint()[0] + solution.getPoint()[2] + solution.getPoint()[4], 0.0000001);
        Assert.assertEquals(23.0, solution.getPoint()[1] + solution.getPoint()[3] + solution.getPoint()[5], 0.0000001);
        Assert.assertTrue(solution.getPoint()[0] >= 10.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[2] >= 8.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[4] >= 5.0 - 0.0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #380
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #382
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #384
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #386
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #388
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #390
43: dastore
44: dconst_0
45: invokespecial #3
48: astore_1
49: new           #4
52: dup
53: invokespecial #5
56: astore_2
57: aload_2
58: new           #6
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #348
93: ldc2_w        #9
96: invokespecial #34
99: invokeinterface #379,  2
104: pop
105: aload_2
106: new           #6
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #348
141: ldc2_w        #9
144: invokespecial #34
147: invokeinterface #379,  2
152: pop
153: aload_2
154: new           #6
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: dconst_1
165: dastore
166: dup
167: iconst_1
168: dconst_0
169: dastore
170: dup
171: iconst_2
172: dconst_0
173: dastore
174: dup
175: iconst_3
176: dconst_0
177: dastore
178: dup
179: iconst_4
180: dconst_0
181: dastore
182: dup
183: iconst_5
184: dconst_0
185: dastore
186: getstatic     #33
189: ldc2_w        #355
192: invokespecial #34
195: invokeinterface #379,  2
200: pop
201: aload_2
202: new           #6
205: dup
206: bipush        6
208: newarray       double
210: dup
211: iconst_0
212: dconst_0
213: dastore
214: dup
215: iconst_1
216: dconst_0
217: dastore
218: dup
219: iconst_2
220: dconst_1
221: dastore
222: dup
223: iconst_3
224: dconst_0
225: dastore
226: dup
227: iconst_4
228: dconst_0
229: dastore
230: dup
231: iconst_5
232: dconst_0
233: dastore
234: getstatic     #33
237: ldc2_w        #86
240: invokespecial #34
243: invokeinterface #379,  2
248: pop
249: aload_2
250: new           #6
253: dup
254: bipush        6
256: newarray       double
258: dup
259: iconst_0
260: dconst_0
261: dastore
262: dup
263: iconst_1
264: dconst_0
265: dastore
266: dup
267: iconst_2
268: dconst_0
269: dastore
270: dup
271: iconst_3
272: dconst_0
273: dastore
274: dup
275: iconst_4
276: dconst_1
277: dastore
278: dup
279: iconst_5
280: dconst_0
281: dastore
282: getstatic     #33
285: ldc2_w        #68
288: invokespecial #34
291: invokeinterface #379,  2
296: pop
297: new           #176
300: dup
301: invokespecial #177
304: astore_3
305: aload_3
306: aload_1
307: aload_2
308: getstatic     #345
311: iconst_1
312: invokevirtual #179
315: astore        4
317: ldc2_w        #392
320: aload         4
322: invokevirtual #180
325: checkcast     #181
328: invokevirtual #182
331: ldc2_w        #377
334: invokestatic  #183
337: ldc2_w        #9
340: aload         4
342: invokevirtual #346
345: iconst_0
346: daload
347: aload         4
349: invokevirtual #346
352: iconst_2
353: daload
354: dadd
355: aload         4
357: invokevirtual #346
360: iconst_4
361: daload
362: dadd
363: ldc2_w        #377
366: invokestatic  #183
369: ldc2_w        #9
372: aload         4
374: invokevirtual #346
377: iconst_1
378: daload
379: aload         4
381: invokevirtual #346
384: iconst_3
385: daload
386: dadd
387: aload         4
389: invokevirtual #346
392: iconst_5
393: daload
394: dadd
395: ldc2_w        #377
398: invokestatic  #183
401: aload         4
403: invokevirtual #346
406: iconst_0
407: daload
408: ldc2_w        #394
411: dcmpl
412: iflt          419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #185
423: aload         4
425: invokevirtual #346
428: iconst_2
429: daload
430: ldc2_w        #396
433: dcmpl
434: iflt          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #185
445: aload         4
447: invokevirtual #346
450: iconst_4
451: daload
452: ldc2_w        #398
455: dcmpl
456: iflt          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #185
467: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testDegeneracy
Start line: 218
End line: 228
Method source code: 
    public void testDegeneracy() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.7 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 18.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 8.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(13.6, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #380
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #384
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: getstatic     #342
51: ldc2_w        #400
54: invokespecial #34
57: invokeinterface #379,  2
62: pop
63: aload_2
64: new           #6
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_1
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: getstatic     #33
82: ldc2_w        #355
85: invokespecial #34
88: invokeinterface #379,  2
93: pop
94: aload_2
95: new           #6
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_0
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #33
113: ldc2_w        #86
116: invokespecial #34
119: invokeinterface #379,  2
124: pop
125: new           #176
128: dup
129: invokespecial #177
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #345
139: iconst_1
140: invokevirtual #179
143: astore        4
145: ldc2_w        #402
148: aload         4
150: invokevirtual #180
153: checkcast     #181
156: invokevirtual #182
159: ldc2_w        #377
162: invokestatic  #183
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath288
Start line: 231
End line: 243
Method source code: 
    public void testMath288() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 7, 3, 0, 0 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 3, 0, -5, 0 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 2, 0, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 0, 3, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0 }, Relationship.LEQ, 1.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 0 }, Relationship.LEQ, 1.0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(10.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #164
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #212
18: dastore
19: dup
20: iconst_2
21: dconst_0
22: dastore
23: dup
24: iconst_3
25: dconst_0
26: dastore
27: dconst_0
28: invokespecial #3
31: astore_1
32: new           #4
35: dup
36: invokespecial #5
39: astore_2
40: aload_2
41: new           #6
44: dup
45: iconst_4
46: newarray       double
48: dup
49: iconst_0
50: ldc2_w        #212
53: dastore
54: dup
55: iconst_1
56: dconst_0
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #332
63: dastore
64: dup
65: iconst_3
66: dconst_0
67: dastore
68: getstatic     #342
71: dconst_0
72: invokespecial #34
75: invokeinterface #379,  2
80: pop
81: aload_2
82: new           #6
85: dup
86: iconst_4
87: newarray       double
89: dup
90: iconst_0
91: ldc2_w        #340
94: dastore
95: dup
96: iconst_1
97: dconst_0
98: dastore
99: dup
100: iconst_2
101: dconst_0
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #332
108: dastore
109: getstatic     #342
112: dconst_0
113: invokespecial #34
116: invokeinterface #379,  2
121: pop
122: aload_2
123: new           #6
126: dup
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #212
139: dastore
140: dup
141: iconst_2
142: dconst_0
143: dastore
144: dup
145: iconst_3
146: ldc2_w        #332
149: dastore
150: getstatic     #342
153: dconst_0
154: invokespecial #34
157: invokeinterface #379,  2
162: pop
163: aload_2
164: new           #6
167: dup
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: dconst_1
174: dastore
175: dup
176: iconst_1
177: dconst_0
178: dastore
179: dup
180: iconst_2
181: dconst_0
182: dastore
183: dup
184: iconst_3
185: dconst_0
186: dastore
187: getstatic     #342
190: dconst_1
191: invokespecial #34
194: invokeinterface #379,  2
199: pop
200: aload_2
201: new           #6
204: dup
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: dconst_1
215: dastore
216: dup
217: iconst_2
218: dconst_0
219: dastore
220: dup
221: iconst_3
222: dconst_0
223: dastore
224: getstatic     #342
227: dconst_1
228: invokespecial #34
231: invokeinterface #379,  2
236: pop
237: new           #176
240: dup
241: invokespecial #177
244: astore_3
245: aload_3
246: aload_1
247: aload_2
248: getstatic     #345
251: iconst_1
252: invokevirtual #179
255: astore        4
257: ldc2_w        #355
260: aload         4
262: invokevirtual #180
265: checkcast     #181
268: invokevirtual #182
271: ldc2_w        #377
274: invokestatic  #183
277: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290GEQ
Start line: 246
End line: 255
Method source code: 
    public void testMath290GEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.GEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
        Assert.assertEquals(0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(0, solution.getPoint()[1], .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #68
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #340
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #33
51: ldc2_w        #343
54: invokespecial #34
57: invokeinterface #379,  2
62: pop
63: new           #176
66: dup
67: invokespecial #177
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #178
77: iconst_1
78: invokevirtual #179
81: astore        4
83: dconst_0
84: aload         4
86: invokevirtual #180
89: checkcast     #181
92: invokevirtual #182
95: ldc2_w        #377
98: invokestatic  #183
101: dconst_0
102: aload         4
104: invokevirtual #346
107: iconst_0
108: daload
109: ldc2_w        #377
112: invokestatic  #183
115: dconst_0
116: aload         4
118: invokevirtual #346
121: iconst_1
122: daload
123: ldc2_w        #377
126: invokestatic  #183
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290LEQ
Start line: 258
End line: 264
Method source code: 
    public void testMath290LEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.LEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #68
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #340
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #342
51: ldc2_w        #343
54: invokespecial #34
57: invokeinterface #379,  2
62: pop
63: new           #176
66: dup
67: invokespecial #177
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #178
77: iconst_1
78: invokevirtual #179
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath293
Start line: 267
End line: 301
Method source code: 
    public void testMath293() {
      LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, 10.0));

      SimplexSolver solver = new SimplexSolver();
      PointValuePair solution1 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

      Assert.assertEquals(15.7143, solution1.getPoint()[0], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[1], .0001);
      Assert.assertEquals(14.2857, solution1.getPoint()[2], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[3], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[4], .0001);
      Assert.assertEquals(30.0, solution1.getPoint()[5], .0001);
      Assert.assertEquals(40.57143, solution1.getValue(), .0001);

      double valA = 0.8 * solution1.getPoint()[0] + 0.2 * solution1.getPoint()[1];
      double valB = 0.7 * solution1.getPoint()[2] + 0.3 * solution1.getPoint()[3];
      double valC = 0.4 * solution1.getPoint()[4] + 0.6 * solution1.getPoint()[5];

      f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, valA));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, valB));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, valC));

      PointValuePair solution2 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
      Assert.assertEquals(40.57143, solution2.getValue(), .0001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #380
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #382
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #384
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #386
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #390
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #388
43: dastore
44: dconst_0
45: invokespecial #3
48: astore_1
49: new           #4
52: dup
53: invokespecial #5
56: astore_2
57: aload_2
58: new           #6
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #348
93: ldc2_w        #208
96: invokespecial #34
99: invokeinterface #379,  2
104: pop
105: aload_2
106: new           #6
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #348
141: ldc2_w        #208
144: invokespecial #34
147: invokeinterface #379,  2
152: pop
153: aload_2
154: new           #6
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #380
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #382
173: dastore
174: dup
175: iconst_2
176: dconst_0
177: dastore
178: dup
179: iconst_3
180: dconst_0
181: dastore
182: dup
183: iconst_4
184: dconst_0
185: dastore
186: dup
187: iconst_5
188: dconst_0
189: dastore
190: getstatic     #33
193: ldc2_w        #355
196: invokespecial #34
199: invokeinterface #379,  2
204: pop
205: aload_2
206: new           #6
209: dup
210: bipush        6
212: newarray       double
214: dup
215: iconst_0
216: dconst_0
217: dastore
218: dup
219: iconst_1
220: dconst_0
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #384
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #386
233: dastore
234: dup
235: iconst_4
236: dconst_0
237: dastore
238: dup
239: iconst_5
240: dconst_0
241: dastore
242: getstatic     #33
245: ldc2_w        #355
248: invokespecial #34
251: invokeinterface #379,  2
256: pop
257: aload_2
258: new           #6
261: dup
262: bipush        6
264: newarray       double
266: dup
267: iconst_0
268: dconst_0
269: dastore
270: dup
271: iconst_1
272: dconst_0
273: dastore
274: dup
275: iconst_2
276: dconst_0
277: dastore
278: dup
279: iconst_3
280: dconst_0
281: dastore
282: dup
283: iconst_4
284: ldc2_w        #390
287: dastore
288: dup
289: iconst_5
290: ldc2_w        #388
293: dastore
294: getstatic     #33
297: ldc2_w        #355
300: invokespecial #34
303: invokeinterface #379,  2
308: pop
309: new           #176
312: dup
313: invokespecial #177
316: astore_3
317: aload_3
318: aload_1
319: aload_2
320: getstatic     #345
323: iconst_1
324: invokevirtual #179
327: astore        4
329: ldc2_w        #404
332: aload         4
334: invokevirtual #346
337: iconst_0
338: daload
339: ldc2_w        #406
342: invokestatic  #183
345: dconst_0
346: aload         4
348: invokevirtual #346
351: iconst_1
352: daload
353: ldc2_w        #406
356: invokestatic  #183
359: ldc2_w        #408
362: aload         4
364: invokevirtual #346
367: iconst_2
368: daload
369: ldc2_w        #406
372: invokestatic  #183
375: dconst_0
376: aload         4
378: invokevirtual #346
381: iconst_3
382: daload
383: ldc2_w        #406
386: invokestatic  #183
389: dconst_0
390: aload         4
392: invokevirtual #346
395: iconst_4
396: daload
397: ldc2_w        #406
400: invokestatic  #183
403: ldc2_w        #208
406: aload         4
408: invokevirtual #346
411: iconst_5
412: daload
413: ldc2_w        #406
416: invokestatic  #183
419: ldc2_w        #410
422: aload         4
424: invokevirtual #180
427: checkcast     #181
430: invokevirtual #182
433: ldc2_w        #406
436: invokestatic  #183
439: ldc2_w        #380
442: aload         4
444: invokevirtual #346
447: iconst_0
448: daload
449: dmul
450: ldc2_w        #382
453: aload         4
455: invokevirtual #346
458: iconst_1
459: daload
460: dmul
461: dadd
462: dstore        5
464: ldc2_w        #384
467: aload         4
469: invokevirtual #346
472: iconst_2
473: daload
474: dmul
475: ldc2_w        #386
478: aload         4
480: invokevirtual #346
483: iconst_3
484: daload
485: dmul
486: dadd
487: dstore        7
489: ldc2_w        #390
492: aload         4
494: invokevirtual #346
497: iconst_4
498: daload
499: dmul
500: ldc2_w        #388
503: aload         4
505: invokevirtual #346
508: iconst_5
509: daload
510: dmul
511: dadd
512: dstore        9
514: new           #2
517: dup
518: bipush        6
520: newarray       double
522: dup
523: iconst_0
524: ldc2_w        #380
527: dastore
528: dup
529: iconst_1
530: ldc2_w        #382
533: dastore
534: dup
535: iconst_2
536: ldc2_w        #384
539: dastore
540: dup
541: iconst_3
542: ldc2_w        #386
545: dastore
546: dup
547: iconst_4
548: ldc2_w        #390
551: dastore
552: dup
553: iconst_5
554: ldc2_w        #388
557: dastore
558: dconst_0
559: invokespecial #3
562: astore_1
563: new           #4
566: dup
567: invokespecial #5
570: astore_2
571: aload_2
572: new           #6
575: dup
576: bipush        6
578: newarray       double
580: dup
581: iconst_0
582: dconst_1
583: dastore
584: dup
585: iconst_1
586: dconst_0
587: dastore
588: dup
589: iconst_2
590: dconst_1
591: dastore
592: dup
593: iconst_3
594: dconst_0
595: dastore
596: dup
597: iconst_4
598: dconst_1
599: dastore
600: dup
601: iconst_5
602: dconst_0
603: dastore
604: getstatic     #348
607: ldc2_w        #208
610: invokespecial #34
613: invokeinterface #379,  2
618: pop
619: aload_2
620: new           #6
623: dup
624: bipush        6
626: newarray       double
628: dup
629: iconst_0
630: dconst_0
631: dastore
632: dup
633: iconst_1
634: dconst_1
635: dastore
636: dup
637: iconst_2
638: dconst_0
639: dastore
640: dup
641: iconst_3
642: dconst_1
643: dastore
644: dup
645: iconst_4
646: dconst_0
647: dastore
648: dup
649: iconst_5
650: dconst_1
651: dastore
652: getstatic     #348
655: ldc2_w        #208
658: invokespecial #34
661: invokeinterface #379,  2
666: pop
667: aload_2
668: new           #6
671: dup
672: bipush        6
674: newarray       double
676: dup
677: iconst_0
678: ldc2_w        #380
681: dastore
682: dup
683: iconst_1
684: ldc2_w        #382
687: dastore
688: dup
689: iconst_2
690: dconst_0
691: dastore
692: dup
693: iconst_3
694: dconst_0
695: dastore
696: dup
697: iconst_4
698: dconst_0
699: dastore
700: dup
701: iconst_5
702: dconst_0
703: dastore
704: getstatic     #33
707: dload         5
709: invokespecial #34
712: invokeinterface #379,  2
717: pop
718: aload_2
719: new           #6
722: dup
723: bipush        6
725: newarray       double
727: dup
728: iconst_0
729: dconst_0
730: dastore
731: dup
732: iconst_1
733: dconst_0
734: dastore
735: dup
736: iconst_2
737: ldc2_w        #384
740: dastore
741: dup
742: iconst_3
743: ldc2_w        #386
746: dastore
747: dup
748: iconst_4
749: dconst_0
750: dastore
751: dup
752: iconst_5
753: dconst_0
754: dastore
755: getstatic     #33
758: dload         7
760: invokespecial #34
763: invokeinterface #379,  2
768: pop
769: aload_2
770: new           #6
773: dup
774: bipush        6
776: newarray       double
778: dup
779: iconst_0
780: dconst_0
781: dastore
782: dup
783: iconst_1
784: dconst_0
785: dastore
786: dup
787: iconst_2
788: dconst_0
789: dastore
790: dup
791: iconst_3
792: dconst_0
793: dastore
794: dup
795: iconst_4
796: ldc2_w        #390
799: dastore
800: dup
801: iconst_5
802: ldc2_w        #388
805: dastore
806: getstatic     #33
809: dload         9
811: invokespecial #34
814: invokeinterface #379,  2
819: pop
820: aload_3
821: aload_1
822: aload_2
823: getstatic     #345
826: iconst_1
827: invokevirtual #179
830: astore        11
832: ldc2_w        #410
835: aload         11
837: invokevirtual #180
840: checkcast     #181
843: invokevirtual #182
846: ldc2_w        #406
849: invokestatic  #183
852: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSimplexSolver
Start line: 304
End line: 317
Method source code: 
    public void testSimplexSolver() {
        LinearObjectiveFunction f =
            new LinearObjectiveFunction(new double[] { 15, 10 }, 7);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ, 4));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(57.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #13
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #355
18: dastore
19: ldc2_w        #164
22: invokespecial #3
25: astore_1
26: new           #4
29: dup
30: invokespecial #5
33: astore_2
34: aload_2
35: new           #6
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dconst_1
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: getstatic     #342
53: ldc2_w        #340
56: invokespecial #34
59: invokeinterface #379,  2
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_1
80: dastore
81: getstatic     #342
84: ldc2_w        #212
87: invokespecial #34
90: invokeinterface #379,  2
95: pop
96: aload_2
97: new           #6
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: dconst_1
107: dastore
108: dup
109: iconst_1
110: dconst_1
111: dastore
112: getstatic     #348
115: ldc2_w        #412
118: invokespecial #34
121: invokeinterface #379,  2
126: pop
127: new           #176
130: dup
131: invokespecial #177
134: astore_3
135: aload_3
136: aload_1
137: aload_2
138: getstatic     #345
141: iconst_0
142: invokevirtual #179
145: astore        4
147: ldc2_w        #340
150: aload         4
152: invokevirtual #346
155: iconst_0
156: daload
157: dconst_0
158: invokestatic  #183
161: ldc2_w        #340
164: aload         4
166: invokevirtual #346
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #183
175: ldc2_w        #414
178: aload         4
180: invokevirtual #180
183: checkcast     #181
186: invokevirtual #182
189: dconst_0
190: invokestatic  #183
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSingleVariableAndConstraint
Start line: 320
End line: 329
Method source code: 
    public void testSingleVariableAndConstraint() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(10.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(30.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #212
12: dastore
13: dconst_0
14: invokespecial #3
17: astore_1
18: new           #4
21: dup
22: invokespecial #5
25: astore_2
26: aload_2
27: new           #6
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #342
41: ldc2_w        #355
44: invokespecial #34
47: invokeinterface #379,  2
52: pop
53: new           #176
56: dup
57: invokespecial #177
60: astore_3
61: aload_3
62: aload_1
63: aload_2
64: getstatic     #345
67: iconst_0
68: invokevirtual #179
71: astore        4
73: ldc2_w        #355
76: aload         4
78: invokevirtual #346
81: iconst_0
82: daload
83: dconst_0
84: invokestatic  #183
87: ldc2_w        #208
90: aload         4
92: invokevirtual #180
95: checkcast     #181
98: invokevirtual #182
101: dconst_0
102: invokestatic  #183
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testModelWithNoArtificialVars
Start line: 336
End line: 348
Method source code: 
    public void testModelWithNoArtificialVars() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 4));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(50.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #13
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #355
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #342
51: ldc2_w        #340
54: invokespecial #34
57: invokeinterface #379,  2
62: pop
63: aload_2
64: new           #6
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #342
82: ldc2_w        #212
85: invokespecial #34
88: invokeinterface #379,  2
93: pop
94: aload_2
95: new           #6
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #342
113: ldc2_w        #412
116: invokespecial #34
119: invokeinterface #379,  2
124: pop
125: new           #176
128: dup
129: invokespecial #177
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #345
139: iconst_0
140: invokevirtual #179
143: astore        4
145: ldc2_w        #340
148: aload         4
150: invokevirtual #346
153: iconst_0
154: daload
155: dconst_0
156: invokestatic  #183
159: ldc2_w        #340
162: aload         4
164: invokevirtual #346
167: iconst_1
168: daload
169: dconst_0
170: invokestatic  #183
173: ldc2_w        #416
176: aload         4
178: invokevirtual #180
181: checkcast     #181
184: invokevirtual #182
187: dconst_0
188: invokestatic  #183
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMinimization
Start line: 351
End line: 363
Method source code: 
    public void testMinimization() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, -5);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 3, 2 }, Relationship.LEQ, 12));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        Assert.assertEquals(4.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(0.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(-13.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #320
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: ldc2_w        #332
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: ldc2_w        #340
49: dastore
50: getstatic     #342
53: ldc2_w        #72
56: invokespecial #34
59: invokeinterface #379,  2
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #212
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #340
84: dastore
85: getstatic     #342
88: ldc2_w        #40
91: invokespecial #34
94: invokeinterface #379,  2
99: pop
100: aload_2
101: new           #6
104: dup
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_0
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: getstatic     #33
119: dconst_0
120: invokespecial #34
123: invokeinterface #379,  2
128: pop
129: new           #176
132: dup
133: invokespecial #177
136: astore_3
137: aload_3
138: aload_1
139: aload_2
140: getstatic     #178
143: iconst_0
144: invokevirtual #179
147: astore        4
149: ldc2_w        #412
152: aload         4
154: invokevirtual #346
157: iconst_0
158: daload
159: dconst_0
160: invokestatic  #183
163: dconst_0
164: aload         4
166: invokevirtual #346
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #183
175: ldc2_w        #158
178: aload         4
180: invokevirtual #180
183: checkcast     #181
186: invokevirtual #182
189: dconst_0
190: invokestatic  #183
193: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSolutionWithNegativeDecisionVariable
Start line: 366
End line: 377
Method source code: 
    public void testSolutionWithNegativeDecisionVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.GEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 14));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(-2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(8.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(12.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #320
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: dconst_1
41: dastore
42: dup
43: iconst_1
44: dconst_1
45: dastore
46: getstatic     #33
49: ldc2_w        #72
52: invokespecial #34
55: invokeinterface #379,  2
60: pop
61: aload_2
62: new           #6
65: dup
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #340
78: dastore
79: getstatic     #342
82: ldc2_w        #186
85: invokespecial #34
88: invokeinterface #379,  2
93: pop
94: new           #176
97: dup
98: invokespecial #177
101: astore_3
102: aload_3
103: aload_1
104: aload_2
105: getstatic     #345
108: iconst_0
109: invokevirtual #179
112: astore        4
114: ldc2_w        #320
117: aload         4
119: invokevirtual #346
122: iconst_0
123: daload
124: dconst_0
125: invokestatic  #183
128: ldc2_w        #86
131: aload         4
133: invokevirtual #346
136: iconst_1
137: daload
138: dconst_0
139: invokestatic  #183
142: ldc2_w        #40
145: aload         4
147: invokevirtual #180
150: checkcast     #181
153: invokevirtual #182
156: dconst_0
157: invokestatic  #183
160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testInfeasibleSolution
Start line: 380
End line: 388
Method source code: 
    public void testInfeasibleSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 1));
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.GEQ, 3));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #13
12: dastore
13: dconst_0
14: invokespecial #3
17: astore_1
18: new           #4
21: dup
22: invokespecial #5
25: astore_2
26: aload_2
27: new           #6
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #342
41: dconst_1
42: invokespecial #34
45: invokeinterface #379,  2
50: pop
51: aload_2
52: new           #6
55: dup
56: iconst_1
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: getstatic     #33
66: ldc2_w        #212
69: invokespecial #34
72: invokeinterface #379,  2
77: pop
78: new           #176
81: dup
82: invokespecial #177
85: astore_3
86: aload_3
87: aload_1
88: aload_2
89: getstatic     #345
92: iconst_0
93: invokevirtual #179
96: pop
97: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testUnboundedSolution
Start line: 391
End line: 398
Method source code: 
    public void testUnboundedSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.EQ, 2));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #13
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #355
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #348
51: ldc2_w        #340
54: invokespecial #34
57: invokeinterface #379,  2
62: pop
63: new           #176
66: dup
67: invokespecial #177
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #345
77: iconst_0
78: invokevirtual #179
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testRestrictVariablesToNonNegative
Start line: 401
End line: 418
Method source code: 
    public void testRestrictVariablesToNonNegative() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 409, 523, 70, 204, 339 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {    43,   56, 345,  56,    5 }, Relationship.LEQ,  4567456));
        constraints.add(new LinearConstraint(new double[] {    12,   45,   7,  56,   23 }, Relationship.LEQ,    56454));
        constraints.add(new LinearConstraint(new double[] {     8,  768,   0,  34, 7456 }, Relationship.LEQ,  1923421));
        constraints.add(new LinearConstraint(new double[] { 12342, 2342,  34, 678, 2342 }, Relationship.GEQ,     4356));
        constraints.add(new LinearConstraint(new double[] {    45,  678,  76,  52,   23 }, Relationship.EQ,    456356));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(2902.92783505155, solution.getPoint()[0], .0000001);
        Assert.assertEquals(480.419243986254, solution.getPoint()[1], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[3], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[4], .0000001);
        Assert.assertEquals(1438556.7491409, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #418
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #420
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #52
24: dastore
25: dup
26: iconst_3
27: ldc2_w        #422
30: dastore
31: dup
32: iconst_4
33: ldc2_w        #424
36: dastore
37: dconst_0
38: invokespecial #3
41: astore_1
42: new           #4
45: dup
46: invokespecial #5
49: astore_2
50: aload_2
51: new           #6
54: dup
55: iconst_5
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #192
63: dastore
64: dup
65: iconst_1
66: ldc2_w        #210
69: dastore
70: dup
71: iconst_2
72: ldc2_w        #426
75: dastore
76: dup
77: iconst_3
78: ldc2_w        #210
81: dastore
82: dup
83: iconst_4
84: ldc2_w        #68
87: dastore
88: getstatic     #342
91: ldc2_w        #428
94: invokespecial #34
97: invokeinterface #379,  2
102: pop
103: aload_2
104: new           #6
107: dup
108: iconst_5
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #40
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #226
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #164
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #210
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #9
140: dastore
141: getstatic     #342
144: ldc2_w        #430
147: invokespecial #34
150: invokeinterface #379,  2
155: pop
156: aload_2
157: new           #6
160: dup
161: iconst_5
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #86
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #432
175: dastore
176: dup
177: iconst_2
178: dconst_0
179: dastore
180: dup
181: iconst_3
182: ldc2_w        #434
185: dastore
186: dup
187: iconst_4
188: ldc2_w        #436
191: dastore
192: getstatic     #342
195: ldc2_w        #438
198: invokespecial #34
201: invokeinterface #379,  2
206: pop
207: aload_2
208: new           #6
211: dup
212: iconst_5
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #440
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #442
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #434
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #444
238: dastore
239: dup
240: iconst_4
241: ldc2_w        #442
244: dastore
245: getstatic     #33
248: ldc2_w        #446
251: invokespecial #34
254: invokeinterface #379,  2
259: pop
260: aload_2
261: new           #6
264: dup
265: iconst_5
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #226
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #444
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #23
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #80
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #9
297: dastore
298: getstatic     #348
301: ldc2_w        #448
304: invokespecial #34
307: invokeinterface #379,  2
312: pop
313: new           #176
316: dup
317: invokespecial #177
320: astore_3
321: aload_3
322: aload_1
323: aload_2
324: getstatic     #345
327: iconst_1
328: invokevirtual #179
331: astore        4
333: ldc2_w        #450
336: aload         4
338: invokevirtual #346
341: iconst_0
342: daload
343: ldc2_w        #377
346: invokestatic  #183
349: ldc2_w        #452
352: aload         4
354: invokevirtual #346
357: iconst_1
358: daload
359: ldc2_w        #377
362: invokestatic  #183
365: dconst_0
366: aload         4
368: invokevirtual #346
371: iconst_2
372: daload
373: ldc2_w        #377
376: invokestatic  #183
379: dconst_0
380: aload         4
382: invokevirtual #346
385: iconst_3
386: daload
387: ldc2_w        #377
390: invokestatic  #183
393: dconst_0
394: aload         4
396: invokevirtual #346
399: iconst_4
400: daload
401: ldc2_w        #377
404: invokestatic  #183
407: ldc2_w        #454
410: aload         4
412: invokevirtual #180
415: checkcast     #181
418: invokevirtual #182
421: ldc2_w        #377
424: invokestatic  #183
427: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testEpsilon
Start line: 421
End line: 435
Method source code: 
    public void testEpsilon() {
      LinearObjectiveFunction f =
          new LinearObjectiveFunction(new double[] { 10, 5, 1 }, 0);
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] {  9, 8, 0 }, Relationship.EQ,  17));
      constraints.add(new LinearConstraint(new double[] {  0, 7, 8 }, Relationship.LEQ,  7));
      constraints.add(new LinearConstraint(new double[] { 10, 0, 2 }, Relationship.LEQ, 10));

      SimplexSolver solver = new SimplexSolver();
      PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
      Assert.assertEquals(1.0, solution.getPoint()[0], 0.0);
      Assert.assertEquals(1.0, solution.getPoint()[1], 0.0);
      Assert.assertEquals(0.0, solution.getPoint()[2], 0.0);
      Assert.assertEquals(15.0, solution.getValue(), 0.0);
  }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #355
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #68
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #3
27: astore_1
28: new           #4
31: dup
32: invokespecial #5
35: astore_2
36: aload_2
37: new           #6
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: ldc2_w        #17
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #86
55: dastore
56: dup
57: iconst_2
58: dconst_0
59: dastore
60: getstatic     #348
63: ldc2_w        #29
66: invokespecial #34
69: invokeinterface #379,  2
74: pop
75: aload_2
76: new           #6
79: dup
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #164
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #86
98: dastore
99: getstatic     #342
102: ldc2_w        #164
105: invokespecial #34
108: invokeinterface #379,  2
113: pop
114: aload_2
115: new           #6
118: dup
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: ldc2_w        #355
127: dastore
128: dup
129: iconst_1
130: dconst_0
131: dastore
132: dup
133: iconst_2
134: ldc2_w        #340
137: dastore
138: getstatic     #342
141: ldc2_w        #355
144: invokespecial #34
147: invokeinterface #379,  2
152: pop
153: new           #176
156: dup
157: invokespecial #177
160: astore_3
161: aload_3
162: aload_1
163: aload_2
164: getstatic     #345
167: iconst_0
168: invokevirtual #179
171: astore        4
173: dconst_1
174: aload         4
176: invokevirtual #346
179: iconst_0
180: daload
181: dconst_0
182: invokestatic  #183
185: dconst_1
186: aload         4
188: invokevirtual #346
191: iconst_1
192: daload
193: dconst_0
194: invokestatic  #183
197: dconst_0
198: aload         4
200: invokevirtual #346
203: iconst_2
204: daload
205: dconst_0
206: invokestatic  #183
209: ldc2_w        #13
212: aload         4
214: invokevirtual #180
217: checkcast     #181
220: invokevirtual #182
223: dconst_0
224: invokestatic  #183
227: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testTrivialModel
Start line: 438
End line: 446
Method source code: 
    public void testTrivialModel() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #3
19: astore_1
20: new           #4
23: dup
24: invokespecial #5
27: astore_2
28: aload_2
29: new           #6
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_1
43: dastore
44: getstatic     #348
47: dconst_0
48: invokespecial #34
51: invokeinterface #379,  2
56: pop
57: new           #176
60: dup
61: invokespecial #177
64: astore_3
65: aload_3
66: aload_1
67: aload_2
68: getstatic     #345
71: iconst_1
72: invokevirtual #179
75: astore        4
77: dconst_0
78: aload         4
80: invokevirtual #180
83: checkcast     #181
86: invokevirtual #182
89: ldc2_w        #377
92: invokestatic  #183
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testLargeModel
Start line: 449
End line: 573
Method source code: 
    public void testLargeModel() {
        double[] objective = new double[] {
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           12, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 12, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 12, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 12, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1};

        LinearObjectiveFunction f = new LinearObjectiveFunction(objective, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 >= 49"));
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 >= 42"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 >= 49"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 >= 42"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 >= 51"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 >= 44"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x82 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x83 = 0"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 >= 51"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 >= 44"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x110 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x111 = 0"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 >= 49"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 >= 42"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 >= 59"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 >= 42"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x83 + x82 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x111 + x110 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x175 + x176 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x192 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x205 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x206 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x207 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x208 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x209 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x210 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x211 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x212 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x213 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x214 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x215 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x192 = 0"));

        SimplexSolver solver = new SimplexSolver();
        PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(7518.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: sipush        216
3: newarray       double
5: dup
6: iconst_0
7: dconst_1
8: dastore
9: dup
10: iconst_1
11: dconst_1
12: dastore
13: dup
14: iconst_2
15: dconst_1
16: dastore
17: dup
18: iconst_3
19: dconst_1
20: dastore
21: dup
22: iconst_4
23: dconst_1
24: dastore
25: dup
26: iconst_5
27: dconst_1
28: dastore
29: dup
30: bipush        6
32: dconst_1
33: dastore
34: dup
35: bipush        7
37: dconst_1
38: dastore
39: dup
40: bipush        8
42: dconst_1
43: dastore
44: dup
45: bipush        9
47: dconst_1
48: dastore
49: dup
50: bipush        10
52: dconst_1
53: dastore
54: dup
55: bipush        11
57: dconst_1
58: dastore
59: dup
60: bipush        12
62: ldc2_w        #40
65: dastore
66: dup
67: bipush        13
69: dconst_1
70: dastore
71: dup
72: bipush        14
74: dconst_1
75: dastore
76: dup
77: bipush        15
79: dconst_1
80: dastore
81: dup
82: bipush        16
84: dconst_1
85: dastore
86: dup
87: bipush        17
89: dconst_1
90: dastore
91: dup
92: bipush        18
94: dconst_1
95: dastore
96: dup
97: bipush        19
99: dconst_1
100: dastore
101: dup
102: bipush        20
104: dconst_1
105: dastore
106: dup
107: bipush        21
109: dconst_1
110: dastore
111: dup
112: bipush        22
114: dconst_1
115: dastore
116: dup
117: bipush        23
119: dconst_1
120: dastore
121: dup
122: bipush        24
124: dconst_1
125: dastore
126: dup
127: bipush        25
129: dconst_1
130: dastore
131: dup
132: bipush        26
134: dconst_1
135: dastore
136: dup
137: bipush        27
139: dconst_1
140: dastore
141: dup
142: bipush        28
144: dconst_1
145: dastore
146: dup
147: bipush        29
149: dconst_1
150: dastore
151: dup
152: bipush        30
154: dconst_1
155: dastore
156: dup
157: bipush        31
159: dconst_1
160: dastore
161: dup
162: bipush        32
164: dconst_1
165: dastore
166: dup
167: bipush        33
169: dconst_1
170: dastore
171: dup
172: bipush        34
174: dconst_1
175: dastore
176: dup
177: bipush        35
179: dconst_1
180: dastore
181: dup
182: bipush        36
184: dconst_1
185: dastore
186: dup
187: bipush        37
189: dconst_1
190: dastore
191: dup
192: bipush        38
194: dconst_1
195: dastore
196: dup
197: bipush        39
199: dconst_1
200: dastore
201: dup
202: bipush        40
204: ldc2_w        #40
207: dastore
208: dup
209: bipush        41
211: dconst_1
212: dastore
213: dup
214: bipush        42
216: dconst_1
217: dastore
218: dup
219: bipush        43
221: dconst_1
222: dastore
223: dup
224: bipush        44
226: dconst_1
227: dastore
228: dup
229: bipush        45
231: dconst_1
232: dastore
233: dup
234: bipush        46
236: dconst_1
237: dastore
238: dup
239: bipush        47
241: dconst_1
242: dastore
243: dup
244: bipush        48
246: dconst_1
247: dastore
248: dup
249: bipush        49
251: dconst_1
252: dastore
253: dup
254: bipush        50
256: dconst_1
257: dastore
258: dup
259: bipush        51
261: dconst_1
262: dastore
263: dup
264: bipush        52
266: dconst_1
267: dastore
268: dup
269: bipush        53
271: dconst_1
272: dastore
273: dup
274: bipush        54
276: dconst_1
277: dastore
278: dup
279: bipush        55
281: dconst_1
282: dastore
283: dup
284: bipush        56
286: dconst_1
287: dastore
288: dup
289: bipush        57
291: dconst_1
292: dastore
293: dup
294: bipush        58
296: dconst_1
297: dastore
298: dup
299: bipush        59
301: dconst_1
302: dastore
303: dup
304: bipush        60
306: dconst_1
307: dastore
308: dup
309: bipush        61
311: dconst_1
312: dastore
313: dup
314: bipush        62
316: dconst_1
317: dastore
318: dup
319: bipush        63
321: dconst_1
322: dastore
323: dup
324: bipush        64
326: dconst_1
327: dastore
328: dup
329: bipush        65
331: dconst_1
332: dastore
333: dup
334: bipush        66
336: dconst_1
337: dastore
338: dup
339: bipush        67
341: dconst_1
342: dastore
343: dup
344: bipush        68
346: ldc2_w        #40
349: dastore
350: dup
351: bipush        69
353: dconst_1
354: dastore
355: dup
356: bipush        70
358: dconst_1
359: dastore
360: dup
361: bipush        71
363: dconst_1
364: dastore
365: dup
366: bipush        72
368: dconst_1
369: dastore
370: dup
371: bipush        73
373: dconst_1
374: dastore
375: dup
376: bipush        74
378: dconst_1
379: dastore
380: dup
381: bipush        75
383: dconst_1
384: dastore
385: dup
386: bipush        76
388: dconst_1
389: dastore
390: dup
391: bipush        77
393: dconst_1
394: dastore
395: dup
396: bipush        78
398: dconst_1
399: dastore
400: dup
401: bipush        79
403: dconst_1
404: dastore
405: dup
406: bipush        80
408: dconst_1
409: dastore
410: dup
411: bipush        81
413: dconst_1
414: dastore
415: dup
416: bipush        82
418: dconst_1
419: dastore
420: dup
421: bipush        83
423: dconst_1
424: dastore
425: dup
426: bipush        84
428: dconst_1
429: dastore
430: dup
431: bipush        85
433: dconst_1
434: dastore
435: dup
436: bipush        86
438: dconst_1
439: dastore
440: dup
441: bipush        87
443: dconst_1
444: dastore
445: dup
446: bipush        88
448: dconst_1
449: dastore
450: dup
451: bipush        89
453: dconst_1
454: dastore
455: dup
456: bipush        90
458: dconst_1
459: dastore
460: dup
461: bipush        91
463: dconst_1
464: dastore
465: dup
466: bipush        92
468: dconst_1
469: dastore
470: dup
471: bipush        93
473: dconst_1
474: dastore
475: dup
476: bipush        94
478: dconst_1
479: dastore
480: dup
481: bipush        95
483: dconst_1
484: dastore
485: dup
486: bipush        96
488: ldc2_w        #40
491: dastore
492: dup
493: bipush        97
495: dconst_1
496: dastore
497: dup
498: bipush        98
500: dconst_1
501: dastore
502: dup
503: bipush        99
505: dconst_1
506: dastore
507: dup
508: bipush        100
510: dconst_1
511: dastore
512: dup
513: bipush        101
515: dconst_1
516: dastore
517: dup
518: bipush        102
520: dconst_1
521: dastore
522: dup
523: bipush        103
525: dconst_1
526: dastore
527: dup
528: bipush        104
530: dconst_1
531: dastore
532: dup
533: bipush        105
535: dconst_1
536: dastore
537: dup
538: bipush        106
540: dconst_1
541: dastore
542: dup
543: bipush        107
545: dconst_1
546: dastore
547: dup
548: bipush        108
550: dconst_1
551: dastore
552: dup
553: bipush        109
555: dconst_1
556: dastore
557: dup
558: bipush        110
560: dconst_1
561: dastore
562: dup
563: bipush        111
565: dconst_1
566: dastore
567: dup
568: bipush        112
570: dconst_1
571: dastore
572: dup
573: bipush        113
575: dconst_1
576: dastore
577: dup
578: bipush        114
580: dconst_1
581: dastore
582: dup
583: bipush        115
585: dconst_1
586: dastore
587: dup
588: bipush        116
590: dconst_1
591: dastore
592: dup
593: bipush        117
595: dconst_1
596: dastore
597: dup
598: bipush        118
600: dconst_1
601: dastore
602: dup
603: bipush        119
605: dconst_1
606: dastore
607: dup
608: bipush        120
610: dconst_1
611: dastore
612: dup
613: bipush        121
615: dconst_1
616: dastore
617: dup
618: bipush        122
620: dconst_1
621: dastore
622: dup
623: bipush        123
625: dconst_1
626: dastore
627: dup
628: bipush        124
630: ldc2_w        #40
633: dastore
634: dup
635: bipush        125
637: dconst_1
638: dastore
639: dup
640: bipush        126
642: dconst_1
643: dastore
644: dup
645: bipush        127
647: dconst_1
648: dastore
649: dup
650: sipush        128
653: dconst_1
654: dastore
655: dup
656: sipush        129
659: dconst_1
660: dastore
661: dup
662: sipush        130
665: dconst_1
666: dastore
667: dup
668: sipush        131
671: dconst_1
672: dastore
673: dup
674: sipush        132
677: dconst_1
678: dastore
679: dup
680: sipush        133
683: dconst_1
684: dastore
685: dup
686: sipush        134
689: dconst_1
690: dastore
691: dup
692: sipush        135
695: dconst_1
696: dastore
697: dup
698: sipush        136
701: dconst_1
702: dastore
703: dup
704: sipush        137
707: dconst_1
708: dastore
709: dup
710: sipush        138
713: dconst_1
714: dastore
715: dup
716: sipush        139
719: dconst_1
720: dastore
721: dup
722: sipush        140
725: dconst_1
726: dastore
727: dup
728: sipush        141
731: dconst_1
732: dastore
733: dup
734: sipush        142
737: dconst_1
738: dastore
739: dup
740: sipush        143
743: dconst_1
744: dastore
745: dup
746: sipush        144
749: dconst_1
750: dastore
751: dup
752: sipush        145
755: dconst_1
756: dastore
757: dup
758: sipush        146
761: dconst_1
762: dastore
763: dup
764: sipush        147
767: dconst_1
768: dastore
769: dup
770: sipush        148
773: dconst_1
774: dastore
775: dup
776: sipush        149
779: dconst_1
780: dastore
781: dup
782: sipush        150
785: dconst_1
786: dastore
787: dup
788: sipush        151
791: dconst_1
792: dastore
793: dup
794: sipush        152
797: ldc2_w        #40
800: dastore
801: dup
802: sipush        153
805: dconst_1
806: dastore
807: dup
808: sipush        154
811: dconst_1
812: dastore
813: dup
814: sipush        155
817: dconst_1
818: dastore
819: dup
820: sipush        156
823: dconst_1
824: dastore
825: dup
826: sipush        157
829: dconst_1
830: dastore
831: dup
832: sipush        158
835: dconst_1
836: dastore
837: dup
838: sipush        159
841: dconst_1
842: dastore
843: dup
844: sipush        160
847: dconst_1
848: dastore
849: dup
850: sipush        161
853: dconst_1
854: dastore
855: dup
856: sipush        162
859: dconst_1
860: dastore
861: dup
862: sipush        163
865: dconst_1
866: dastore
867: dup
868: sipush        164
871: dconst_1
872: dastore
873: dup
874: sipush        165
877: dconst_1
878: dastore
879: dup
880: sipush        166
883: dconst_1
884: dastore
885: dup
886: sipush        167
889: dconst_1
890: dastore
891: dup
892: sipush        168
895: dconst_1
896: dastore
897: dup
898: sipush        169
901: dconst_1
902: dastore
903: dup
904: sipush        170
907: dconst_1
908: dastore
909: dup
910: sipush        171
913: dconst_1
914: dastore
915: dup
916: sipush        172
919: dconst_1
920: dastore
921: dup
922: sipush        173
925: dconst_1
926: dastore
927: dup
928: sipush        174
931: dconst_1
932: dastore
933: dup
934: sipush        175
937: dconst_1
938: dastore
939: dup
940: sipush        176
943: dconst_1
944: dastore
945: dup
946: sipush        177
949: dconst_1
950: dastore
951: dup
952: sipush        178
955: dconst_1
956: dastore
957: dup
958: sipush        179
961: dconst_1
962: dastore
963: dup
964: sipush        180
967: dconst_1
968: dastore
969: dup
970: sipush        181
973: dconst_1
974: dastore
975: dup
976: sipush        182
979: dconst_1
980: dastore
981: dup
982: sipush        183
985: dconst_1
986: dastore
987: dup
988: sipush        184
991: dconst_1
992: dastore
993: dup
994: sipush        185
997: dconst_1
998: dastore
999: dup
1000: sipush        186
1003: dconst_1
1004: dastore
1005: dup
1006: sipush        187
1009: dconst_1
1010: dastore
1011: dup
1012: sipush        188
1015: dconst_1
1016: dastore
1017: dup
1018: sipush        189
1021: dconst_1
1022: dastore
1023: dup
1024: sipush        190
1027: dconst_1
1028: dastore
1029: dup
1030: sipush        191
1033: dconst_1
1034: dastore
1035: dup
1036: sipush        192
1039: dconst_1
1040: dastore
1041: dup
1042: sipush        193
1045: dconst_1
1046: dastore
1047: dup
1048: sipush        194
1051: dconst_1
1052: dastore
1053: dup
1054: sipush        195
1057: dconst_1
1058: dastore
1059: dup
1060: sipush        196
1063: dconst_1
1064: dastore
1065: dup
1066: sipush        197
1069: dconst_1
1070: dastore
1071: dup
1072: sipush        198
1075: dconst_1
1076: dastore
1077: dup
1078: sipush        199
1081: dconst_1
1082: dastore
1083: dup
1084: sipush        200
1087: dconst_1
1088: dastore
1089: dup
1090: sipush        201
1093: dconst_1
1094: dastore
1095: dup
1096: sipush        202
1099: dconst_1
1100: dastore
1101: dup
1102: sipush        203
1105: dconst_1
1106: dastore
1107: dup
1108: sipush        204
1111: dconst_1
1112: dastore
1113: dup
1114: sipush        205
1117: dconst_1
1118: dastore
1119: dup
1120: sipush        206
1123: dconst_1
1124: dastore
1125: dup
1126: sipush        207
1129: dconst_1
1130: dastore
1131: dup
1132: sipush        208
1135: dconst_1
1136: dastore
1137: dup
1138: sipush        209
1141: dconst_1
1142: dastore
1143: dup
1144: sipush        210
1147: dconst_1
1148: dastore
1149: dup
1150: sipush        211
1153: dconst_1
1154: dastore
1155: dup
1156: sipush        212
1159: dconst_1
1160: dastore
1161: dup
1162: sipush        213
1165: dconst_1
1166: dastore
1167: dup
1168: sipush        214
1171: dconst_1
1172: dastore
1173: dup
1174: sipush        215
1177: dconst_1
1178: dastore
1179: astore_1
1180: new           #2
1183: dup
1184: aload_1
1185: dconst_0
1186: invokespecial #3
1189: astore_2
1190: new           #4
1193: dup
1194: invokespecial #5
1197: astore_3
1198: aload_3
1199: aload_0
1200: aload_1
1201: arraylength
1202: ldc_w         #456
1205: invokespecial #457
1208: invokeinterface #379,  2
1213: pop
1214: aload_3
1215: aload_0
1216: aload_1
1217: arraylength
1218: ldc_w         #458
1221: invokespecial #457
1224: invokeinterface #379,  2
1229: pop
1230: aload_3
1231: aload_0
1232: aload_1
1233: arraylength
1234: ldc_w         #459
1237: invokespecial #457
1240: invokeinterface #379,  2
1245: pop
1246: aload_3
1247: aload_0
1248: aload_1
1249: arraylength
1250: ldc_w         #460
1253: invokespecial #457
1256: invokeinterface #379,  2
1261: pop
1262: aload_3
1263: aload_0
1264: aload_1
1265: arraylength
1266: ldc_w         #461
1269: invokespecial #457
1272: invokeinterface #379,  2
1277: pop
1278: aload_3
1279: aload_0
1280: aload_1
1281: arraylength
1282: ldc_w         #462
1285: invokespecial #457
1288: invokeinterface #379,  2
1293: pop
1294: aload_3
1295: aload_0
1296: aload_1
1297: arraylength
1298: ldc_w         #463
1301: invokespecial #457
1304: invokeinterface #379,  2
1309: pop
1310: aload_3
1311: aload_0
1312: aload_1
1313: arraylength
1314: ldc_w         #464
1317: invokespecial #457
1320: invokeinterface #379,  2
1325: pop
1326: aload_3
1327: aload_0
1328: aload_1
1329: arraylength
1330: ldc_w         #465
1333: invokespecial #457
1336: invokeinterface #379,  2
1341: pop
1342: aload_3
1343: aload_0
1344: aload_1
1345: arraylength
1346: ldc_w         #466
1349: invokespecial #457
1352: invokeinterface #379,  2
1357: pop
1358: aload_3
1359: aload_0
1360: aload_1
1361: arraylength
1362: ldc_w         #467
1365: invokespecial #457
1368: invokeinterface #379,  2
1373: pop
1374: aload_3
1375: aload_0
1376: aload_1
1377: arraylength
1378: ldc_w         #468
1381: invokespecial #457
1384: invokeinterface #379,  2
1389: pop
1390: aload_3
1391: aload_0
1392: aload_1
1393: arraylength
1394: ldc_w         #469
1397: invokespecial #457
1400: invokeinterface #379,  2
1405: pop
1406: aload_3
1407: aload_0
1408: aload_1
1409: arraylength
1410: ldc_w         #470
1413: invokespecial #457
1416: invokeinterface #379,  2
1421: pop
1422: aload_3
1423: aload_0
1424: aload_1
1425: arraylength
1426: ldc_w         #471
1429: invokespecial #457
1432: invokeinterface #379,  2
1437: pop
1438: aload_3
1439: aload_0
1440: aload_1
1441: arraylength
1442: ldc_w         #472
1445: invokespecial #457
1448: invokeinterface #379,  2
1453: pop
1454: aload_3
1455: aload_0
1456: aload_1
1457: arraylength
1458: ldc_w         #473
1461: invokespecial #457
1464: invokeinterface #379,  2
1469: pop
1470: aload_3
1471: aload_0
1472: aload_1
1473: arraylength
1474: ldc_w         #474
1477: invokespecial #457
1480: invokeinterface #379,  2
1485: pop
1486: aload_3
1487: aload_0
1488: aload_1
1489: arraylength
1490: ldc_w         #475
1493: invokespecial #457
1496: invokeinterface #379,  2
1501: pop
1502: aload_3
1503: aload_0
1504: aload_1
1505: arraylength
1506: ldc_w         #476
1509: invokespecial #457
1512: invokeinterface #379,  2
1517: pop
1518: aload_3
1519: aload_0
1520: aload_1
1521: arraylength
1522: ldc_w         #477
1525: invokespecial #457
1528: invokeinterface #379,  2
1533: pop
1534: aload_3
1535: aload_0
1536: aload_1
1537: arraylength
1538: ldc_w         #478
1541: invokespecial #457
1544: invokeinterface #379,  2
1549: pop
1550: aload_3
1551: aload_0
1552: aload_1
1553: arraylength
1554: ldc_w         #479
1557: invokespecial #457
1560: invokeinterface #379,  2
1565: pop
1566: aload_3
1567: aload_0
1568: aload_1
1569: arraylength
1570: ldc_w         #480
1573: invokespecial #457
1576: invokeinterface #379,  2
1581: pop
1582: aload_3
1583: aload_0
1584: aload_1
1585: arraylength
1586: ldc_w         #481
1589: invokespecial #457
1592: invokeinterface #379,  2
1597: pop
1598: aload_3
1599: aload_0
1600: aload_1
1601: arraylength
1602: ldc_w         #482
1605: invokespecial #457
1608: invokeinterface #379,  2
1613: pop
1614: aload_3
1615: aload_0
1616: aload_1
1617: arraylength
1618: ldc_w         #483
1621: invokespecial #457
1624: invokeinterface #379,  2
1629: pop
1630: aload_3
1631: aload_0
1632: aload_1
1633: arraylength
1634: ldc_w         #484
1637: invokespecial #457
1640: invokeinterface #379,  2
1645: pop
1646: aload_3
1647: aload_0
1648: aload_1
1649: arraylength
1650: ldc_w         #485
1653: invokespecial #457
1656: invokeinterface #379,  2
1661: pop
1662: aload_3
1663: aload_0
1664: aload_1
1665: arraylength
1666: ldc_w         #486
1669: invokespecial #457
1672: invokeinterface #379,  2
1677: pop
1678: aload_3
1679: aload_0
1680: aload_1
1681: arraylength
1682: ldc_w         #487
1685: invokespecial #457
1688: invokeinterface #379,  2
1693: pop
1694: aload_3
1695: aload_0
1696: aload_1
1697: arraylength
1698: ldc_w         #488
1701: invokespecial #457
1704: invokeinterface #379,  2
1709: pop
1710: aload_3
1711: aload_0
1712: aload_1
1713: arraylength
1714: ldc_w         #489
1717: invokespecial #457
1720: invokeinterface #379,  2
1725: pop
1726: aload_3
1727: aload_0
1728: aload_1
1729: arraylength
1730: ldc_w         #490
1733: invokespecial #457
1736: invokeinterface #379,  2
1741: pop
1742: aload_3
1743: aload_0
1744: aload_1
1745: arraylength
1746: ldc_w         #491
1749: invokespecial #457
1752: invokeinterface #379,  2
1757: pop
1758: aload_3
1759: aload_0
1760: aload_1
1761: arraylength
1762: ldc_w         #492
1765: invokespecial #457
1768: invokeinterface #379,  2
1773: pop
1774: aload_3
1775: aload_0
1776: aload_1
1777: arraylength
1778: ldc_w         #493
1781: invokespecial #457
1784: invokeinterface #379,  2
1789: pop
1790: aload_3
1791: aload_0
1792: aload_1
1793: arraylength
1794: ldc_w         #494
1797: invokespecial #457
1800: invokeinterface #379,  2
1805: pop
1806: aload_3
1807: aload_0
1808: aload_1
1809: arraylength
1810: ldc_w         #495
1813: invokespecial #457
1816: invokeinterface #379,  2
1821: pop
1822: aload_3
1823: aload_0
1824: aload_1
1825: arraylength
1826: ldc_w         #496
1829: invokespecial #457
1832: invokeinterface #379,  2
1837: pop
1838: aload_3
1839: aload_0
1840: aload_1
1841: arraylength
1842: ldc_w         #497
1845: invokespecial #457
1848: invokeinterface #379,  2
1853: pop
1854: aload_3
1855: aload_0
1856: aload_1
1857: arraylength
1858: ldc_w         #498
1861: invokespecial #457
1864: invokeinterface #379,  2
1869: pop
1870: aload_3
1871: aload_0
1872: aload_1
1873: arraylength
1874: ldc_w         #499
1877: invokespecial #457
1880: invokeinterface #379,  2
1885: pop
1886: aload_3
1887: aload_0
1888: aload_1
1889: arraylength
1890: ldc_w         #500
1893: invokespecial #457
1896: invokeinterface #379,  2
1901: pop
1902: aload_3
1903: aload_0
1904: aload_1
1905: arraylength
1906: ldc_w         #501
1909: invokespecial #457
1912: invokeinterface #379,  2
1917: pop
1918: aload_3
1919: aload_0
1920: aload_1
1921: arraylength
1922: ldc_w         #502
1925: invokespecial #457
1928: invokeinterface #379,  2
1933: pop
1934: aload_3
1935: aload_0
1936: aload_1
1937: arraylength
1938: ldc_w         #503
1941: invokespecial #457
1944: invokeinterface #379,  2
1949: pop
1950: aload_3
1951: aload_0
1952: aload_1
1953: arraylength
1954: ldc_w         #504
1957: invokespecial #457
1960: invokeinterface #379,  2
1965: pop
1966: aload_3
1967: aload_0
1968: aload_1
1969: arraylength
1970: ldc_w         #505
1973: invokespecial #457
1976: invokeinterface #379,  2
1981: pop
1982: aload_3
1983: aload_0
1984: aload_1
1985: arraylength
1986: ldc_w         #506
1989: invokespecial #457
1992: invokeinterface #379,  2
1997: pop
1998: aload_3
1999: aload_0
2000: aload_1
2001: arraylength
2002: ldc_w         #507
2005: invokespecial #457
2008: invokeinterface #379,  2
2013: pop
2014: aload_3
2015: aload_0
2016: aload_1
2017: arraylength
2018: ldc_w         #508
2021: invokespecial #457
2024: invokeinterface #379,  2
2029: pop
2030: aload_3
2031: aload_0
2032: aload_1
2033: arraylength
2034: ldc_w         #509
2037: invokespecial #457
2040: invokeinterface #379,  2
2045: pop
2046: aload_3
2047: aload_0
2048: aload_1
2049: arraylength
2050: ldc_w         #510
2053: invokespecial #457
2056: invokeinterface #379,  2
2061: pop
2062: aload_3
2063: aload_0
2064: aload_1
2065: arraylength
2066: ldc_w         #511
2069: invokespecial #457
2072: invokeinterface #379,  2
2077: pop
2078: aload_3
2079: aload_0
2080: aload_1
2081: arraylength
2082: ldc_w         #512
2085: invokespecial #457
2088: invokeinterface #379,  2
2093: pop
2094: aload_3
2095: aload_0
2096: aload_1
2097: arraylength
2098: ldc_w         #513
2101: invokespecial #457
2104: invokeinterface #379,  2
2109: pop
2110: aload_3
2111: aload_0
2112: aload_1
2113: arraylength
2114: ldc_w         #514
2117: invokespecial #457
2120: invokeinterface #379,  2
2125: pop
2126: aload_3
2127: aload_0
2128: aload_1
2129: arraylength
2130: ldc_w         #515
2133: invokespecial #457
2136: invokeinterface #379,  2
2141: pop
2142: aload_3
2143: aload_0
2144: aload_1
2145: arraylength
2146: ldc_w         #516
2149: invokespecial #457
2152: invokeinterface #379,  2
2157: pop
2158: aload_3
2159: aload_0
2160: aload_1
2161: arraylength
2162: ldc_w         #517
2165: invokespecial #457
2168: invokeinterface #379,  2
2173: pop
2174: aload_3
2175: aload_0
2176: aload_1
2177: arraylength
2178: ldc_w         #518
2181: invokespecial #457
2184: invokeinterface #379,  2
2189: pop
2190: aload_3
2191: aload_0
2192: aload_1
2193: arraylength
2194: ldc_w         #519
2197: invokespecial #457
2200: invokeinterface #379,  2
2205: pop
2206: aload_3
2207: aload_0
2208: aload_1
2209: arraylength
2210: ldc_w         #520
2213: invokespecial #457
2216: invokeinterface #379,  2
2221: pop
2222: aload_3
2223: aload_0
2224: aload_1
2225: arraylength
2226: ldc_w         #521
2229: invokespecial #457
2232: invokeinterface #379,  2
2237: pop
2238: aload_3
2239: aload_0
2240: aload_1
2241: arraylength
2242: ldc_w         #522
2245: invokespecial #457
2248: invokeinterface #379,  2
2253: pop
2254: aload_3
2255: aload_0
2256: aload_1
2257: arraylength
2258: ldc_w         #523
2261: invokespecial #457
2264: invokeinterface #379,  2
2269: pop
2270: aload_3
2271: aload_0
2272: aload_1
2273: arraylength
2274: ldc_w         #524
2277: invokespecial #457
2280: invokeinterface #379,  2
2285: pop
2286: aload_3
2287: aload_0
2288: aload_1
2289: arraylength
2290: ldc_w         #525
2293: invokespecial #457
2296: invokeinterface #379,  2
2301: pop
2302: aload_3
2303: aload_0
2304: aload_1
2305: arraylength
2306: ldc_w         #526
2309: invokespecial #457
2312: invokeinterface #379,  2
2317: pop
2318: aload_3
2319: aload_0
2320: aload_1
2321: arraylength
2322: ldc_w         #527
2325: invokespecial #457
2328: invokeinterface #379,  2
2333: pop
2334: aload_3
2335: aload_0
2336: aload_1
2337: arraylength
2338: ldc_w         #528
2341: invokespecial #457
2344: invokeinterface #379,  2
2349: pop
2350: aload_3
2351: aload_0
2352: aload_1
2353: arraylength
2354: ldc_w         #529
2357: invokespecial #457
2360: invokeinterface #379,  2
2365: pop
2366: aload_3
2367: aload_0
2368: aload_1
2369: arraylength
2370: ldc_w         #530
2373: invokespecial #457
2376: invokeinterface #379,  2
2381: pop
2382: aload_3
2383: aload_0
2384: aload_1
2385: arraylength
2386: ldc_w         #531
2389: invokespecial #457
2392: invokeinterface #379,  2
2397: pop
2398: aload_3
2399: aload_0
2400: aload_1
2401: arraylength
2402: ldc_w         #532
2405: invokespecial #457
2408: invokeinterface #379,  2
2413: pop
2414: aload_3
2415: aload_0
2416: aload_1
2417: arraylength
2418: ldc_w         #533
2421: invokespecial #457
2424: invokeinterface #379,  2
2429: pop
2430: aload_3
2431: aload_0
2432: aload_1
2433: arraylength
2434: ldc_w         #534
2437: invokespecial #457
2440: invokeinterface #379,  2
2445: pop
2446: aload_3
2447: aload_0
2448: aload_1
2449: arraylength
2450: ldc_w         #535
2453: invokespecial #457
2456: invokeinterface #379,  2
2461: pop
2462: aload_3
2463: aload_0
2464: aload_1
2465: arraylength
2466: ldc_w         #536
2469: invokespecial #457
2472: invokeinterface #379,  2
2477: pop
2478: aload_3
2479: aload_0
2480: aload_1
2481: arraylength
2482: ldc_w         #537
2485: invokespecial #457
2488: invokeinterface #379,  2
2493: pop
2494: aload_3
2495: aload_0
2496: aload_1
2497: arraylength
2498: ldc_w         #538
2501: invokespecial #457
2504: invokeinterface #379,  2
2509: pop
2510: aload_3
2511: aload_0
2512: aload_1
2513: arraylength
2514: ldc_w         #539
2517: invokespecial #457
2520: invokeinterface #379,  2
2525: pop
2526: aload_3
2527: aload_0
2528: aload_1
2529: arraylength
2530: ldc_w         #540
2533: invokespecial #457
2536: invokeinterface #379,  2
2541: pop
2542: aload_3
2543: aload_0
2544: aload_1
2545: arraylength
2546: ldc_w         #541
2549: invokespecial #457
2552: invokeinterface #379,  2
2557: pop
2558: aload_3
2559: aload_0
2560: aload_1
2561: arraylength
2562: ldc_w         #542
2565: invokespecial #457
2568: invokeinterface #379,  2
2573: pop
2574: aload_3
2575: aload_0
2576: aload_1
2577: arraylength
2578: ldc_w         #543
2581: invokespecial #457
2584: invokeinterface #379,  2
2589: pop
2590: aload_3
2591: aload_0
2592: aload_1
2593: arraylength
2594: ldc_w         #544
2597: invokespecial #457
2600: invokeinterface #379,  2
2605: pop
2606: aload_3
2607: aload_0
2608: aload_1
2609: arraylength
2610: ldc_w         #545
2613: invokespecial #457
2616: invokeinterface #379,  2
2621: pop
2622: aload_3
2623: aload_0
2624: aload_1
2625: arraylength
2626: ldc_w         #546
2629: invokespecial #457
2632: invokeinterface #379,  2
2637: pop
2638: aload_3
2639: aload_0
2640: aload_1
2641: arraylength
2642: ldc_w         #547
2645: invokespecial #457
2648: invokeinterface #379,  2
2653: pop
2654: aload_3
2655: aload_0
2656: aload_1
2657: arraylength
2658: ldc_w         #548
2661: invokespecial #457
2664: invokeinterface #379,  2
2669: pop
2670: aload_3
2671: aload_0
2672: aload_1
2673: arraylength
2674: ldc_w         #549
2677: invokespecial #457
2680: invokeinterface #379,  2
2685: pop
2686: new           #176
2689: dup
2690: invokespecial #177
2693: astore        4
2695: aload         4
2697: aload_2
2698: aload_3
2699: getstatic     #178
2702: iconst_1
2703: invokevirtual #179
2706: astore        5
2708: ldc2_w        #550
2711: aload         5
2713: invokevirtual #180
2716: checkcast     #181
2719: invokevirtual #182
2722: ldc2_w        #377
2725: invokestatic  #183
2728: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test0
Start line: 22
End line: 39
Method source code: 
  public void test0()  throws Throwable  {
      SimplexSolver simplexSolver0 = new SimplexSolver();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 100;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 100);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      try { 
        simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unbounded solution
         //
         verifyException("org.apache.commons.math3.optimization.linear.SimplexSolver", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_5
9: newarray       double
11: astore_2
12: aload_2
13: iconst_0
14: ldc2_w        #4
17: dastore
18: new           #6
21: dup
22: aload_2
23: ldc2_w        #4
26: invokespecial #7
29: astore_3
30: new           #8
33: dup
34: invokespecial #9
37: astore        4
39: getstatic     #10
42: astore        5
44: aload_1
45: aload_3
46: aload         4
48: aload         5
50: iconst_0
51: invokevirtual #11
54: pop
55: ldc           #12
57: invokestatic  #13
60: goto          72
63: astore        6
65: ldc           #15
67: aload         6
69: invokestatic  #16
72: return
Exception table:
from    to  target type
44    60    63   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolver_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/28/target/test-classes/org/apache/commons/math3/optimization/linear/SimplexSolver_ESTest.class
Class name: SimplexSolver_ESTest
Method name: test1
Start line: 42
End line: 50
Method source code: 
  public void test1()  throws Throwable  {
      SimplexSolver simplexSolver0 = new SimplexSolver();
      double[] doubleArray0 = new double[5];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 100);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      PointValuePair pointValuePair0 = simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, false);
      assertNotNull(pointValuePair0);
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: iconst_5
9: newarray       double
11: astore_2
12: new           #6
15: dup
16: aload_2
17: ldc2_w        #4
20: invokespecial #7
23: astore_3
24: new           #8
27: dup
28: invokespecial #9
31: astore        4
33: getstatic     #10
36: astore        5
38: aload_1
39: aload_3
40: aload         4
42: aload         5
44: iconst_0
45: invokevirtual #11
48: astore        6
50: aload         6
52: invokestatic  #17
55: return
}
