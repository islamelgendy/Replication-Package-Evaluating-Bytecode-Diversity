Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 17
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(10.0f, (float) 10L, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #8
26: ldc           #8
28: iconst_0
29: invokestatic  #9
32: istore_1
33: new           #10
36: dup
37: invokespecial #11
40: ldc           #12
42: invokevirtual #13
45: iload_1
46: invokevirtual #14
49: ldc           #15
51: invokevirtual #13
54: iconst_1
55: invokevirtual #14
58: ldc           #12
60: invokevirtual #13
63: invokevirtual #16
66: iload_1
67: iconst_1
68: if_icmpne     75
71: iconst_1
72: goto          76
75: iconst_0
76: invokestatic  #17
79: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 20
End line: 32
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation1 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.geometry.euclidean.threed.Rotation.distance(rotation0, rotation1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #18
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aconst_null
27: astore_2
28: aload_1
29: aload_2
30: invokestatic  #19
33: dstore_3
34: ldc           #20
36: invokestatic  #21
39: goto          43
42: astore_3
43: return
Exception table:
from    to  target type
28    39    42   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 35
End line: 72
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        double[] doubleArray1 = new double[] { (byte) 1 };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray1, doubleArray2);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection4 = null;
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray8 = new double[] { 0 };
        double[] doubleArray10 = new double[] { 0 };
        double[] doubleArray12 = new double[] { 0 };
        double[] doubleArray14 = new double[] { 0 };
        double[][] doubleArray15 = new double[][] { doubleArray6, doubleArray8, doubleArray10, doubleArray12, doubleArray14 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray1, orderDirection4, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation18 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray15, (-6.053272382792838d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #23
19: aastore
20: invokevirtual #7
23: pop
24: iconst_1
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: astore_1
32: iconst_0
33: newarray       double
35: astore_2
36: aload_1
37: aload_2
38: invokestatic  #24
41: istore_3
42: aconst_null
43: astore        4
45: iconst_1
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: astore        5
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: astore        6
63: iconst_1
64: newarray       double
66: dup
67: iconst_0
68: dconst_0
69: dastore
70: astore        7
72: iconst_1
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: astore        8
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: astore        9
90: iconst_5
91: anewarray     #25
94: dup
95: iconst_0
96: aload         5
98: aastore
99: dup
100: iconst_1
101: aload         6
103: aastore
104: dup
105: iconst_2
106: aload         7
108: aastore
109: dup
110: iconst_3
111: aload         8
113: aastore
114: dup
115: iconst_4
116: aload         9
118: aastore
119: astore        10
121: aload_1
122: aload         4
124: aload         10
126: invokestatic  #26
129: new           #27
132: dup
133: aload         10
135: ldc2_w        #28
138: invokespecial #30
141: astore        11
143: ldc           #31
145: invokestatic  #21
148: goto          153
151: astore        11
153: aload_1
154: invokestatic  #33
157: aload_1
158: invokestatic  #34
161: ldc           #35
163: invokestatic  #36
166: aload_2
167: invokestatic  #33
170: aload_2
171: invokestatic  #34
174: ldc           #37
176: invokestatic  #36
179: new           #10
182: dup
183: invokespecial #11
186: ldc           #12
188: invokevirtual #13
191: iload_3
192: invokevirtual #14
195: ldc           #15
197: invokevirtual #13
200: iconst_0
201: invokevirtual #14
204: ldc           #12
206: invokevirtual #13
209: invokevirtual #16
212: iload_3
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #17
224: aload         5
226: invokestatic  #33
229: aload         5
231: invokestatic  #34
234: ldc           #38
236: invokestatic  #36
239: aload         6
241: invokestatic  #33
244: aload         6
246: invokestatic  #34
249: ldc           #38
251: invokestatic  #36
254: aload         7
256: invokestatic  #33
259: aload         7
261: invokestatic  #34
264: ldc           #38
266: invokestatic  #36
269: aload         8
271: invokestatic  #33
274: aload         8
276: invokestatic  #34
279: ldc           #38
281: invokestatic  #36
284: aload         9
286: invokestatic  #33
289: aload         9
291: invokestatic  #34
294: ldc           #38
296: invokestatic  #36
299: aload         10
301: invokestatic  #33
304: return
Exception table:
from    to  target type
129   148   151   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 75
End line: 112
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        double[] doubleArray1 = new double[] { (byte) 1 };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray1, doubleArray2);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection4 = null;
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray8 = new double[] { 0 };
        double[] doubleArray10 = new double[] { 0 };
        double[] doubleArray12 = new double[] { 0 };
        double[] doubleArray14 = new double[] { 0 };
        double[][] doubleArray15 = new double[][] { doubleArray6, doubleArray8, doubleArray10, doubleArray12, doubleArray14 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray1, orderDirection4, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation18 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray15, (double) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #39
19: aastore
20: invokevirtual #7
23: pop
24: iconst_1
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: astore_1
32: iconst_0
33: newarray       double
35: astore_2
36: aload_1
37: aload_2
38: invokestatic  #24
41: istore_3
42: aconst_null
43: astore        4
45: iconst_1
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: astore        5
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: astore        6
63: iconst_1
64: newarray       double
66: dup
67: iconst_0
68: dconst_0
69: dastore
70: astore        7
72: iconst_1
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: astore        8
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: astore        9
90: iconst_5
91: anewarray     #25
94: dup
95: iconst_0
96: aload         5
98: aastore
99: dup
100: iconst_1
101: aload         6
103: aastore
104: dup
105: iconst_2
106: aload         7
108: aastore
109: dup
110: iconst_3
111: aload         8
113: aastore
114: dup
115: iconst_4
116: aload         9
118: aastore
119: astore        10
121: aload_1
122: aload         4
124: aload         10
126: invokestatic  #26
129: new           #27
132: dup
133: aload         10
135: ldc2_w        #40
138: invokespecial #30
141: astore        11
143: ldc           #31
145: invokestatic  #21
148: goto          153
151: astore        11
153: aload_1
154: invokestatic  #33
157: aload_1
158: invokestatic  #34
161: ldc           #35
163: invokestatic  #36
166: aload_2
167: invokestatic  #33
170: aload_2
171: invokestatic  #34
174: ldc           #37
176: invokestatic  #36
179: new           #10
182: dup
183: invokespecial #11
186: ldc           #12
188: invokevirtual #13
191: iload_3
192: invokevirtual #14
195: ldc           #15
197: invokevirtual #13
200: iconst_0
201: invokevirtual #14
204: ldc           #12
206: invokevirtual #13
209: invokevirtual #16
212: iload_3
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #17
224: aload         5
226: invokestatic  #33
229: aload         5
231: invokestatic  #34
234: ldc           #38
236: invokestatic  #36
239: aload         6
241: invokestatic  #33
244: aload         6
246: invokestatic  #34
249: ldc           #38
251: invokestatic  #36
254: aload         7
256: invokestatic  #33
259: aload         7
261: invokestatic  #34
264: ldc           #38
266: invokestatic  #36
269: aload         8
271: invokestatic  #33
274: aload         8
276: invokestatic  #34
279: ldc           #38
281: invokestatic  #36
284: aload         9
286: invokestatic  #33
289: aload         9
291: invokestatic  #34
294: ldc           #38
296: invokestatic  #36
299: aload         10
301: invokestatic  #33
304: return
Exception table:
from    to  target type
129   148   151   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 115
End line: 195
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray86 = rotation84.getAngles(rotationOrder85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #42
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aconst_null
494: astore        64
496: aload         63
498: aload         64
500: invokevirtual #57
503: astore        65
505: ldc           #58
507: invokestatic  #21
510: goto          515
513: astore        65
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: dload         4
529: invokevirtual #60
532: ldc           #15
534: invokevirtual #13
537: dconst_0
538: invokevirtual #60
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: dload         4
551: dconst_0
552: dcmpl
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #17
564: new           #10
567: dup
568: invokespecial #11
571: ldc           #12
573: invokevirtual #13
576: dload         6
578: invokevirtual #60
581: ldc           #15
583: invokevirtual #13
586: dconst_0
587: invokevirtual #60
590: ldc           #12
592: invokevirtual #13
595: invokevirtual #16
598: dload         6
600: dconst_0
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #17
613: new           #10
616: dup
617: invokespecial #11
620: ldc           #12
622: invokevirtual #13
625: dload         11
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload         11
649: dconst_0
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: dload         13
676: invokevirtual #60
679: ldc           #15
681: invokevirtual #13
684: dconst_0
685: invokevirtual #60
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: dload         13
698: dconst_0
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #17
711: new           #10
714: dup
715: invokespecial #11
718: ldc           #12
720: invokevirtual #13
723: iload         15
725: invokevirtual #14
728: ldc           #15
730: invokevirtual #13
733: iconst_0
734: invokevirtual #14
737: ldc           #12
739: invokevirtual #13
742: invokevirtual #16
745: iload         15
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: dload         16
772: invokevirtual #60
775: ldc           #15
777: invokevirtual #13
780: dconst_0
781: invokevirtual #60
784: ldc           #12
786: invokevirtual #13
789: invokevirtual #16
792: dload         16
794: dconst_0
795: dcmpl
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #17
807: aload         18
809: invokestatic  #33
812: new           #10
815: dup
816: invokespecial #11
819: ldc           #12
821: invokevirtual #13
824: dload         21
826: invokevirtual #60
829: ldc           #15
831: invokevirtual #13
834: dconst_0
835: invokevirtual #60
838: ldc           #12
840: invokevirtual #13
843: invokevirtual #16
846: dload         21
848: dconst_0
849: dcmpl
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #17
861: new           #10
864: dup
865: invokespecial #11
868: ldc           #12
870: invokevirtual #13
873: dload         25
875: invokevirtual #60
878: ldc           #15
880: invokevirtual #13
883: dconst_0
884: invokevirtual #60
887: ldc           #12
889: invokevirtual #13
892: invokevirtual #16
895: dload         25
897: dconst_0
898: dcmpl
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #17
910: new           #10
913: dup
914: invokespecial #11
917: ldc           #12
919: invokevirtual #13
922: dload         27
924: invokevirtual #60
927: ldc           #15
929: invokevirtual #13
932: ldc2_w        #61
935: invokevirtual #60
938: ldc           #12
940: invokevirtual #13
943: invokevirtual #16
946: dload         27
948: ldc2_w        #61
951: dcmpl
952: ifne          959
955: iconst_1
956: goto          960
959: iconst_0
960: invokestatic  #17
963: new           #10
966: dup
967: invokespecial #11
970: ldc           #12
972: invokevirtual #13
975: dload         31
977: invokevirtual #60
980: ldc           #15
982: invokevirtual #13
985: dconst_0
986: invokevirtual #60
989: ldc           #12
991: invokevirtual #13
994: invokevirtual #16
997: dload         31
999: dconst_0
1000: dcmpl
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #17
1012: new           #10
1015: dup
1016: invokespecial #11
1019: ldc           #12
1021: invokevirtual #13
1024: dload         33
1026: invokevirtual #60
1029: ldc           #15
1031: invokevirtual #13
1034: ldc2_w        #61
1037: invokevirtual #60
1040: ldc           #12
1042: invokevirtual #13
1045: invokevirtual #16
1048: dload         33
1050: ldc2_w        #61
1053: dcmpl
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #17
1065: new           #10
1068: dup
1069: invokespecial #11
1072: ldc           #12
1074: invokevirtual #13
1077: dload         35
1079: invokevirtual #60
1082: ldc           #15
1084: invokevirtual #13
1087: dconst_0
1088: invokevirtual #60
1091: ldc           #12
1093: invokevirtual #13
1096: invokevirtual #16
1099: dload         35
1101: dconst_0
1102: dcmpl
1103: ifne          1110
1106: iconst_1
1107: goto          1111
1110: iconst_0
1111: invokestatic  #17
1114: new           #10
1117: dup
1118: invokespecial #11
1121: ldc           #12
1123: invokevirtual #13
1126: dload         40
1128: invokevirtual #60
1131: ldc           #15
1133: invokevirtual #13
1136: dconst_0
1137: invokevirtual #60
1140: ldc           #12
1142: invokevirtual #13
1145: invokevirtual #16
1148: dload         40
1150: dconst_0
1151: dcmpl
1152: ifne          1159
1155: iconst_1
1156: goto          1160
1159: iconst_0
1160: invokestatic  #17
1163: new           #10
1166: dup
1167: invokespecial #11
1170: ldc           #12
1172: invokevirtual #13
1175: dload         42
1177: invokevirtual #60
1180: ldc           #15
1182: invokevirtual #13
1185: dconst_0
1186: invokevirtual #60
1189: ldc           #12
1191: invokevirtual #13
1194: invokevirtual #16
1197: dload         42
1199: dconst_0
1200: dcmpl
1201: ifne          1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #17
1212: new           #10
1215: dup
1216: invokespecial #11
1219: ldc           #12
1221: invokevirtual #13
1224: dload         47
1226: invokevirtual #60
1229: ldc           #15
1231: invokevirtual #13
1234: dconst_0
1235: invokevirtual #60
1238: ldc           #12
1240: invokevirtual #13
1243: invokevirtual #16
1246: dload         47
1248: dconst_0
1249: dcmpl
1250: ifne          1257
1253: iconst_1
1254: goto          1258
1257: iconst_0
1258: invokestatic  #17
1261: new           #10
1264: dup
1265: invokespecial #11
1268: ldc           #12
1270: invokevirtual #13
1273: dload         49
1275: invokevirtual #60
1278: ldc           #15
1280: invokevirtual #13
1283: dconst_0
1284: invokevirtual #60
1287: ldc           #12
1289: invokevirtual #13
1292: invokevirtual #16
1295: dload         49
1297: dconst_0
1298: dcmpl
1299: ifne          1306
1302: iconst_1
1303: goto          1307
1306: iconst_0
1307: invokestatic  #17
1310: new           #10
1313: dup
1314: invokespecial #11
1317: ldc           #12
1319: invokevirtual #13
1322: iload         51
1324: invokevirtual #14
1327: ldc           #15
1329: invokevirtual #13
1332: iconst_0
1333: invokevirtual #14
1336: ldc           #12
1338: invokevirtual #13
1341: invokevirtual #16
1344: iload         51
1346: ifne          1353
1349: iconst_1
1350: goto          1354
1353: iconst_0
1354: invokestatic  #17
1357: new           #10
1360: dup
1361: invokespecial #11
1364: ldc           #12
1366: invokevirtual #13
1369: dload         52
1371: invokevirtual #60
1374: ldc           #15
1376: invokevirtual #13
1379: dconst_0
1380: invokevirtual #60
1383: ldc           #12
1385: invokevirtual #13
1388: invokevirtual #16
1391: dload         52
1393: dconst_0
1394: dcmpl
1395: ifne          1402
1398: iconst_1
1399: goto          1403
1402: iconst_0
1403: invokestatic  #17
1406: aload         54
1408: invokestatic  #33
1411: new           #10
1414: dup
1415: invokespecial #11
1418: ldc           #12
1420: invokevirtual #13
1423: dload         57
1425: invokevirtual #60
1428: ldc           #15
1430: invokevirtual #13
1433: dconst_0
1434: invokevirtual #60
1437: ldc           #12
1439: invokevirtual #13
1442: invokevirtual #16
1445: dload         57
1447: dconst_0
1448: dcmpl
1449: ifne          1456
1452: iconst_1
1453: goto          1457
1456: iconst_0
1457: invokestatic  #17
1460: aload         59
1462: invokestatic  #33
1465: aload         60
1467: invokestatic  #33
1470: new           #10
1473: dup
1474: invokespecial #11
1477: ldc           #12
1479: invokevirtual #13
1482: dload         61
1484: invokevirtual #60
1487: ldc           #15
1489: invokevirtual #13
1492: ldc2_w        #63
1495: invokevirtual #60
1498: ldc           #12
1500: invokevirtual #13
1503: invokevirtual #16
1506: dload         61
1508: ldc2_w        #63
1511: dcmpl
1512: ifne          1519
1515: iconst_1
1516: goto          1520
1519: iconst_0
1520: invokestatic  #17
1523: return
Exception table:
from    to  target type
496   510   513   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 198
End line: 222
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        double[] doubleArray5 = new double[] { (short) 1, (-1.0d), (byte) 1, 100, 32 };
        double[] doubleArray11 = new double[] { (short) 1, (-1.0d), (byte) 1, 100, 32 };
        double[] doubleArray17 = new double[] { (short) 1, (-1.0d), (byte) 1, 100, 32 };
        double[] doubleArray23 = new double[] { (short) 1, (-1.0d), (byte) 1, 100, 32 };
        double[][] doubleArray24 = new double[][] { doubleArray5, doubleArray11, doubleArray17, doubleArray23 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation26 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray24, (double) 1079574538L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 4x5 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[1.0, -1.0, 1.0, 100.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, -1.0, 1.0, 100.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, -1.0, 1.0, 100.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, -1.0, 1.0, 100.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #65
19: aastore
20: invokevirtual #7
23: pop
24: iconst_5
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #66
36: dastore
37: dup
38: iconst_2
39: dconst_1
40: dastore
41: dup
42: iconst_3
43: ldc2_w        #68
46: dastore
47: dup
48: iconst_4
49: ldc2_w        #70
52: dastore
53: astore_1
54: iconst_5
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: dup
62: iconst_1
63: ldc2_w        #66
66: dastore
67: dup
68: iconst_2
69: dconst_1
70: dastore
71: dup
72: iconst_3
73: ldc2_w        #68
76: dastore
77: dup
78: iconst_4
79: ldc2_w        #70
82: dastore
83: astore_2
84: iconst_5
85: newarray       double
87: dup
88: iconst_0
89: dconst_1
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #66
96: dastore
97: dup
98: iconst_2
99: dconst_1
100: dastore
101: dup
102: iconst_3
103: ldc2_w        #68
106: dastore
107: dup
108: iconst_4
109: ldc2_w        #70
112: dastore
113: astore_3
114: iconst_5
115: newarray       double
117: dup
118: iconst_0
119: dconst_1
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #66
126: dastore
127: dup
128: iconst_2
129: dconst_1
130: dastore
131: dup
132: iconst_3
133: ldc2_w        #68
136: dastore
137: dup
138: iconst_4
139: ldc2_w        #70
142: dastore
143: astore        4
145: iconst_4
146: anewarray     #25
149: dup
150: iconst_0
151: aload_1
152: aastore
153: dup
154: iconst_1
155: aload_2
156: aastore
157: dup
158: iconst_2
159: aload_3
160: aastore
161: dup
162: iconst_3
163: aload         4
165: aastore
166: astore        5
168: new           #27
171: dup
172: aload         5
174: ldc2_w        #72
177: invokespecial #30
180: astore        6
182: ldc           #74
184: invokestatic  #21
187: goto          192
190: astore        6
192: aload_1
193: invokestatic  #33
196: aload_1
197: invokestatic  #34
200: ldc           #75
202: invokestatic  #36
205: aload_2
206: invokestatic  #33
209: aload_2
210: invokestatic  #34
213: ldc           #75
215: invokestatic  #36
218: aload_3
219: invokestatic  #33
222: aload_3
223: invokestatic  #34
226: ldc           #75
228: invokestatic  #36
231: aload         4
233: invokestatic  #33
236: aload         4
238: invokestatic  #34
241: ldc           #75
243: invokestatic  #36
246: aload         5
248: invokestatic  #33
251: return
Exception table:
from    to  target type
168   187   190   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 225
End line: 236
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 3628800.0d, (double) (byte) 1, 0.6702668260599606d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #76
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #77
34: dconst_1
35: ldc2_w        #79
38: invokespecial #81
41: astore_2
42: ldc           #20
44: invokestatic  #21
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
26    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 239
End line: 254
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        double[] doubleArray3 = new double[] { (byte) 10, 10.0d, (-0.8414709848078965d) };
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray4, (double) (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x3 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, -0.8414709848078965]");
        org.junit.Assert.assertNotNull(doubleArray4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #83
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #83
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #85
44: dastore
45: astore_1
46: iconst_1
47: anewarray     #25
50: dup
51: iconst_0
52: aload_1
53: aastore
54: astore_2
55: new           #27
58: dup
59: aload_2
60: ldc2_w        #66
63: invokespecial #30
66: astore_3
67: ldc           #87
69: invokestatic  #21
72: goto          76
75: astore_3
76: aload_1
77: invokestatic  #33
80: aload_1
81: invokestatic  #34
84: ldc           #88
86: invokestatic  #36
89: aload_2
90: invokestatic  #33
93: return
Exception table:
from    to  target type
55    72    75   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 257
End line: 268
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, (double) 10, (double) ' ', 9.999999999999998d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #89
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #83
34: ldc2_w        #70
37: ldc2_w        #90
40: invokespecial #81
43: astore_2
44: ldc           #20
46: invokestatic  #21
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
26    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 271
End line: 356
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        double double94 = vector3D92.getX();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #92
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #96
519: astore        69
521: new           #43
524: dup
525: dconst_0
526: ldc2_w        #68
529: ldc2_w        #70
532: invokespecial #97
535: astore        70
537: aload         64
539: aload         70
541: invokevirtual #98
544: astore        71
546: aload         70
548: invokevirtual #99
551: dstore        72
553: new           #10
556: dup
557: invokespecial #11
560: ldc           #12
562: invokevirtual #13
565: dload         4
567: invokevirtual #60
570: ldc           #15
572: invokevirtual #13
575: dconst_0
576: invokevirtual #60
579: ldc           #12
581: invokevirtual #13
584: invokevirtual #16
587: dload         4
589: dconst_0
590: dcmpl
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #17
602: new           #10
605: dup
606: invokespecial #11
609: ldc           #12
611: invokevirtual #13
614: dload         6
616: invokevirtual #60
619: ldc           #15
621: invokevirtual #13
624: dconst_0
625: invokevirtual #60
628: ldc           #12
630: invokevirtual #13
633: invokevirtual #16
636: dload         6
638: dconst_0
639: dcmpl
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #17
651: new           #10
654: dup
655: invokespecial #11
658: ldc           #12
660: invokevirtual #13
663: dload         11
665: invokevirtual #60
668: ldc           #15
670: invokevirtual #13
673: dconst_0
674: invokevirtual #60
677: ldc           #12
679: invokevirtual #13
682: invokevirtual #16
685: dload         11
687: dconst_0
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #17
700: new           #10
703: dup
704: invokespecial #11
707: ldc           #12
709: invokevirtual #13
712: dload         13
714: invokevirtual #60
717: ldc           #15
719: invokevirtual #13
722: dconst_0
723: invokevirtual #60
726: ldc           #12
728: invokevirtual #13
731: invokevirtual #16
734: dload         13
736: dconst_0
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #17
749: new           #10
752: dup
753: invokespecial #11
756: ldc           #12
758: invokevirtual #13
761: iload         15
763: invokevirtual #14
766: ldc           #15
768: invokevirtual #13
771: iconst_0
772: invokevirtual #14
775: ldc           #12
777: invokevirtual #13
780: invokevirtual #16
783: iload         15
785: ifne          792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #17
796: new           #10
799: dup
800: invokespecial #11
803: ldc           #12
805: invokevirtual #13
808: dload         16
810: invokevirtual #60
813: ldc           #15
815: invokevirtual #13
818: dconst_0
819: invokevirtual #60
822: ldc           #12
824: invokevirtual #13
827: invokevirtual #16
830: dload         16
832: dconst_0
833: dcmpl
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #17
845: aload         18
847: invokestatic  #33
850: new           #10
853: dup
854: invokespecial #11
857: ldc           #12
859: invokevirtual #13
862: dload         21
864: invokevirtual #60
867: ldc           #15
869: invokevirtual #13
872: dconst_0
873: invokevirtual #60
876: ldc           #12
878: invokevirtual #13
881: invokevirtual #16
884: dload         21
886: dconst_0
887: dcmpl
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #17
899: new           #10
902: dup
903: invokespecial #11
906: ldc           #12
908: invokevirtual #13
911: dload         25
913: invokevirtual #60
916: ldc           #15
918: invokevirtual #13
921: dconst_0
922: invokevirtual #60
925: ldc           #12
927: invokevirtual #13
930: invokevirtual #16
933: dload         25
935: dconst_0
936: dcmpl
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #17
948: new           #10
951: dup
952: invokespecial #11
955: ldc           #12
957: invokevirtual #13
960: dload         27
962: invokevirtual #60
965: ldc           #15
967: invokevirtual #13
970: ldc2_w        #61
973: invokevirtual #60
976: ldc           #12
978: invokevirtual #13
981: invokevirtual #16
984: dload         27
986: ldc2_w        #61
989: dcmpl
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #17
1001: new           #10
1004: dup
1005: invokespecial #11
1008: ldc           #12
1010: invokevirtual #13
1013: dload         31
1015: invokevirtual #60
1018: ldc           #15
1020: invokevirtual #13
1023: dconst_0
1024: invokevirtual #60
1027: ldc           #12
1029: invokevirtual #13
1032: invokevirtual #16
1035: dload         31
1037: dconst_0
1038: dcmpl
1039: ifne          1046
1042: iconst_1
1043: goto          1047
1046: iconst_0
1047: invokestatic  #17
1050: new           #10
1053: dup
1054: invokespecial #11
1057: ldc           #12
1059: invokevirtual #13
1062: dload         33
1064: invokevirtual #60
1067: ldc           #15
1069: invokevirtual #13
1072: ldc2_w        #61
1075: invokevirtual #60
1078: ldc           #12
1080: invokevirtual #13
1083: invokevirtual #16
1086: dload         33
1088: ldc2_w        #61
1091: dcmpl
1092: ifne          1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #17
1103: new           #10
1106: dup
1107: invokespecial #11
1110: ldc           #12
1112: invokevirtual #13
1115: dload         35
1117: invokevirtual #60
1120: ldc           #15
1122: invokevirtual #13
1125: dconst_0
1126: invokevirtual #60
1129: ldc           #12
1131: invokevirtual #13
1134: invokevirtual #16
1137: dload         35
1139: dconst_0
1140: dcmpl
1141: ifne          1148
1144: iconst_1
1145: goto          1149
1148: iconst_0
1149: invokestatic  #17
1152: new           #10
1155: dup
1156: invokespecial #11
1159: ldc           #12
1161: invokevirtual #13
1164: dload         40
1166: invokevirtual #60
1169: ldc           #15
1171: invokevirtual #13
1174: dconst_0
1175: invokevirtual #60
1178: ldc           #12
1180: invokevirtual #13
1183: invokevirtual #16
1186: dload         40
1188: dconst_0
1189: dcmpl
1190: ifne          1197
1193: iconst_1
1194: goto          1198
1197: iconst_0
1198: invokestatic  #17
1201: new           #10
1204: dup
1205: invokespecial #11
1208: ldc           #12
1210: invokevirtual #13
1213: dload         42
1215: invokevirtual #60
1218: ldc           #15
1220: invokevirtual #13
1223: dconst_0
1224: invokevirtual #60
1227: ldc           #12
1229: invokevirtual #13
1232: invokevirtual #16
1235: dload         42
1237: dconst_0
1238: dcmpl
1239: ifne          1246
1242: iconst_1
1243: goto          1247
1246: iconst_0
1247: invokestatic  #17
1250: new           #10
1253: dup
1254: invokespecial #11
1257: ldc           #12
1259: invokevirtual #13
1262: dload         47
1264: invokevirtual #60
1267: ldc           #15
1269: invokevirtual #13
1272: dconst_0
1273: invokevirtual #60
1276: ldc           #12
1278: invokevirtual #13
1281: invokevirtual #16
1284: dload         47
1286: dconst_0
1287: dcmpl
1288: ifne          1295
1291: iconst_1
1292: goto          1296
1295: iconst_0
1296: invokestatic  #17
1299: new           #10
1302: dup
1303: invokespecial #11
1306: ldc           #12
1308: invokevirtual #13
1311: dload         49
1313: invokevirtual #60
1316: ldc           #15
1318: invokevirtual #13
1321: dconst_0
1322: invokevirtual #60
1325: ldc           #12
1327: invokevirtual #13
1330: invokevirtual #16
1333: dload         49
1335: dconst_0
1336: dcmpl
1337: ifne          1344
1340: iconst_1
1341: goto          1345
1344: iconst_0
1345: invokestatic  #17
1348: new           #10
1351: dup
1352: invokespecial #11
1355: ldc           #12
1357: invokevirtual #13
1360: iload         51
1362: invokevirtual #14
1365: ldc           #15
1367: invokevirtual #13
1370: iconst_0
1371: invokevirtual #14
1374: ldc           #12
1376: invokevirtual #13
1379: invokevirtual #16
1382: iload         51
1384: ifne          1391
1387: iconst_1
1388: goto          1392
1391: iconst_0
1392: invokestatic  #17
1395: new           #10
1398: dup
1399: invokespecial #11
1402: ldc           #12
1404: invokevirtual #13
1407: dload         52
1409: invokevirtual #60
1412: ldc           #15
1414: invokevirtual #13
1417: dconst_0
1418: invokevirtual #60
1421: ldc           #12
1423: invokevirtual #13
1426: invokevirtual #16
1429: dload         52
1431: dconst_0
1432: dcmpl
1433: ifne          1440
1436: iconst_1
1437: goto          1441
1440: iconst_0
1441: invokestatic  #17
1444: aload         54
1446: invokestatic  #33
1449: new           #10
1452: dup
1453: invokespecial #11
1456: ldc           #12
1458: invokevirtual #13
1461: dload         57
1463: invokevirtual #60
1466: ldc           #15
1468: invokevirtual #13
1471: dconst_0
1472: invokevirtual #60
1475: ldc           #12
1477: invokevirtual #13
1480: invokevirtual #16
1483: dload         57
1485: dconst_0
1486: dcmpl
1487: ifne          1494
1490: iconst_1
1491: goto          1495
1494: iconst_0
1495: invokestatic  #17
1498: aload         59
1500: invokestatic  #33
1503: aload         60
1505: invokestatic  #33
1508: new           #10
1511: dup
1512: invokespecial #11
1515: ldc           #12
1517: invokevirtual #13
1520: dload         61
1522: invokevirtual #60
1525: ldc           #15
1527: invokevirtual #13
1530: ldc2_w        #63
1533: invokevirtual #60
1536: ldc           #12
1538: invokevirtual #13
1541: invokevirtual #16
1544: dload         61
1546: ldc2_w        #63
1549: dcmpl
1550: ifne          1557
1553: iconst_1
1554: goto          1558
1557: iconst_0
1558: invokestatic  #17
1561: aload         64
1563: invokestatic  #33
1566: new           #10
1569: dup
1570: invokespecial #11
1573: ldc           #12
1575: invokevirtual #13
1578: dload         65
1580: invokevirtual #60
1583: ldc           #15
1585: invokevirtual #13
1588: dconst_0
1589: invokevirtual #60
1592: ldc           #12
1594: invokevirtual #13
1597: invokevirtual #16
1600: dload         65
1602: dconst_0
1603: dcmpl
1604: ifne          1611
1607: iconst_1
1608: goto          1612
1611: iconst_0
1612: invokestatic  #17
1615: new           #10
1618: dup
1619: invokespecial #11
1622: ldc           #12
1624: invokevirtual #13
1627: dload         67
1629: invokevirtual #60
1632: ldc           #15
1634: invokevirtual #13
1637: dconst_0
1638: invokevirtual #60
1641: ldc           #12
1643: invokevirtual #13
1646: invokevirtual #16
1649: dload         67
1651: dconst_0
1652: dcmpl
1653: ifne          1660
1656: iconst_1
1657: goto          1661
1660: iconst_0
1661: invokestatic  #17
1664: aload         69
1666: invokestatic  #33
1669: aload         71
1671: invokestatic  #33
1674: new           #10
1677: dup
1678: invokespecial #11
1681: ldc           #12
1683: invokevirtual #13
1686: dload         72
1688: invokevirtual #60
1691: ldc           #15
1693: invokevirtual #13
1696: dconst_0
1697: invokevirtual #60
1700: ldc           #12
1702: invokevirtual #13
1705: invokevirtual #16
1708: dload         72
1710: dconst_0
1711: dcmpl
1712: ifne          1719
1715: iconst_1
1716: goto          1720
1719: iconst_0
1720: invokestatic  #17
1723: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 359
End line: 370
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, (-0.7853981633974483d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #101
34: invokespecial #103
37: astore_2
38: ldc           #20
40: invokestatic  #21
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
26    43    46   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 373
End line: 447
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(0.6244726102307315d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #104
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         20
495: ldc2_w        #105
498: invokevirtual #107
501: astore        64
503: new           #10
506: dup
507: invokespecial #11
510: ldc           #12
512: invokevirtual #13
515: dload         4
517: invokevirtual #60
520: ldc           #15
522: invokevirtual #13
525: dconst_0
526: invokevirtual #60
529: ldc           #12
531: invokevirtual #13
534: invokevirtual #16
537: dload         4
539: dconst_0
540: dcmpl
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #17
552: new           #10
555: dup
556: invokespecial #11
559: ldc           #12
561: invokevirtual #13
564: dload         6
566: invokevirtual #60
569: ldc           #15
571: invokevirtual #13
574: dconst_0
575: invokevirtual #60
578: ldc           #12
580: invokevirtual #13
583: invokevirtual #16
586: dload         6
588: dconst_0
589: dcmpl
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         11
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: dconst_0
624: invokevirtual #60
627: ldc           #12
629: invokevirtual #13
632: invokevirtual #16
635: dload         11
637: dconst_0
638: dcmpl
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #17
650: new           #10
653: dup
654: invokespecial #11
657: ldc           #12
659: invokevirtual #13
662: dload         13
664: invokevirtual #60
667: ldc           #15
669: invokevirtual #13
672: dconst_0
673: invokevirtual #60
676: ldc           #12
678: invokevirtual #13
681: invokevirtual #16
684: dload         13
686: dconst_0
687: dcmpl
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #17
699: new           #10
702: dup
703: invokespecial #11
706: ldc           #12
708: invokevirtual #13
711: iload         15
713: invokevirtual #14
716: ldc           #15
718: invokevirtual #13
721: iconst_0
722: invokevirtual #14
725: ldc           #12
727: invokevirtual #13
730: invokevirtual #16
733: iload         15
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #17
746: new           #10
749: dup
750: invokespecial #11
753: ldc           #12
755: invokevirtual #13
758: dload         16
760: invokevirtual #60
763: ldc           #15
765: invokevirtual #13
768: dconst_0
769: invokevirtual #60
772: ldc           #12
774: invokevirtual #13
777: invokevirtual #16
780: dload         16
782: dconst_0
783: dcmpl
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #17
795: aload         18
797: invokestatic  #33
800: new           #10
803: dup
804: invokespecial #11
807: ldc           #12
809: invokevirtual #13
812: dload         21
814: invokevirtual #60
817: ldc           #15
819: invokevirtual #13
822: dconst_0
823: invokevirtual #60
826: ldc           #12
828: invokevirtual #13
831: invokevirtual #16
834: dload         21
836: dconst_0
837: dcmpl
838: ifne          845
841: iconst_1
842: goto          846
845: iconst_0
846: invokestatic  #17
849: new           #10
852: dup
853: invokespecial #11
856: ldc           #12
858: invokevirtual #13
861: dload         25
863: invokevirtual #60
866: ldc           #15
868: invokevirtual #13
871: dconst_0
872: invokevirtual #60
875: ldc           #12
877: invokevirtual #13
880: invokevirtual #16
883: dload         25
885: dconst_0
886: dcmpl
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #17
898: new           #10
901: dup
902: invokespecial #11
905: ldc           #12
907: invokevirtual #13
910: dload         27
912: invokevirtual #60
915: ldc           #15
917: invokevirtual #13
920: ldc2_w        #61
923: invokevirtual #60
926: ldc           #12
928: invokevirtual #13
931: invokevirtual #16
934: dload         27
936: ldc2_w        #61
939: dcmpl
940: ifne          947
943: iconst_1
944: goto          948
947: iconst_0
948: invokestatic  #17
951: new           #10
954: dup
955: invokespecial #11
958: ldc           #12
960: invokevirtual #13
963: dload         31
965: invokevirtual #60
968: ldc           #15
970: invokevirtual #13
973: dconst_0
974: invokevirtual #60
977: ldc           #12
979: invokevirtual #13
982: invokevirtual #16
985: dload         31
987: dconst_0
988: dcmpl
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #17
1000: new           #10
1003: dup
1004: invokespecial #11
1007: ldc           #12
1009: invokevirtual #13
1012: dload         33
1014: invokevirtual #60
1017: ldc           #15
1019: invokevirtual #13
1022: ldc2_w        #61
1025: invokevirtual #60
1028: ldc           #12
1030: invokevirtual #13
1033: invokevirtual #16
1036: dload         33
1038: ldc2_w        #61
1041: dcmpl
1042: ifne          1049
1045: iconst_1
1046: goto          1050
1049: iconst_0
1050: invokestatic  #17
1053: new           #10
1056: dup
1057: invokespecial #11
1060: ldc           #12
1062: invokevirtual #13
1065: dload         35
1067: invokevirtual #60
1070: ldc           #15
1072: invokevirtual #13
1075: dconst_0
1076: invokevirtual #60
1079: ldc           #12
1081: invokevirtual #13
1084: invokevirtual #16
1087: dload         35
1089: dconst_0
1090: dcmpl
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #17
1102: new           #10
1105: dup
1106: invokespecial #11
1109: ldc           #12
1111: invokevirtual #13
1114: dload         40
1116: invokevirtual #60
1119: ldc           #15
1121: invokevirtual #13
1124: dconst_0
1125: invokevirtual #60
1128: ldc           #12
1130: invokevirtual #13
1133: invokevirtual #16
1136: dload         40
1138: dconst_0
1139: dcmpl
1140: ifne          1147
1143: iconst_1
1144: goto          1148
1147: iconst_0
1148: invokestatic  #17
1151: new           #10
1154: dup
1155: invokespecial #11
1158: ldc           #12
1160: invokevirtual #13
1163: dload         42
1165: invokevirtual #60
1168: ldc           #15
1170: invokevirtual #13
1173: dconst_0
1174: invokevirtual #60
1177: ldc           #12
1179: invokevirtual #13
1182: invokevirtual #16
1185: dload         42
1187: dconst_0
1188: dcmpl
1189: ifne          1196
1192: iconst_1
1193: goto          1197
1196: iconst_0
1197: invokestatic  #17
1200: new           #10
1203: dup
1204: invokespecial #11
1207: ldc           #12
1209: invokevirtual #13
1212: dload         47
1214: invokevirtual #60
1217: ldc           #15
1219: invokevirtual #13
1222: dconst_0
1223: invokevirtual #60
1226: ldc           #12
1228: invokevirtual #13
1231: invokevirtual #16
1234: dload         47
1236: dconst_0
1237: dcmpl
1238: ifne          1245
1241: iconst_1
1242: goto          1246
1245: iconst_0
1246: invokestatic  #17
1249: new           #10
1252: dup
1253: invokespecial #11
1256: ldc           #12
1258: invokevirtual #13
1261: dload         49
1263: invokevirtual #60
1266: ldc           #15
1268: invokevirtual #13
1271: dconst_0
1272: invokevirtual #60
1275: ldc           #12
1277: invokevirtual #13
1280: invokevirtual #16
1283: dload         49
1285: dconst_0
1286: dcmpl
1287: ifne          1294
1290: iconst_1
1291: goto          1295
1294: iconst_0
1295: invokestatic  #17
1298: new           #10
1301: dup
1302: invokespecial #11
1305: ldc           #12
1307: invokevirtual #13
1310: iload         51
1312: invokevirtual #14
1315: ldc           #15
1317: invokevirtual #13
1320: iconst_0
1321: invokevirtual #14
1324: ldc           #12
1326: invokevirtual #13
1329: invokevirtual #16
1332: iload         51
1334: ifne          1341
1337: iconst_1
1338: goto          1342
1341: iconst_0
1342: invokestatic  #17
1345: new           #10
1348: dup
1349: invokespecial #11
1352: ldc           #12
1354: invokevirtual #13
1357: dload         52
1359: invokevirtual #60
1362: ldc           #15
1364: invokevirtual #13
1367: dconst_0
1368: invokevirtual #60
1371: ldc           #12
1373: invokevirtual #13
1376: invokevirtual #16
1379: dload         52
1381: dconst_0
1382: dcmpl
1383: ifne          1390
1386: iconst_1
1387: goto          1391
1390: iconst_0
1391: invokestatic  #17
1394: aload         54
1396: invokestatic  #33
1399: new           #10
1402: dup
1403: invokespecial #11
1406: ldc           #12
1408: invokevirtual #13
1411: dload         57
1413: invokevirtual #60
1416: ldc           #15
1418: invokevirtual #13
1421: dconst_0
1422: invokevirtual #60
1425: ldc           #12
1427: invokevirtual #13
1430: invokevirtual #16
1433: dload         57
1435: dconst_0
1436: dcmpl
1437: ifne          1444
1440: iconst_1
1441: goto          1445
1444: iconst_0
1445: invokestatic  #17
1448: aload         59
1450: invokestatic  #33
1453: aload         60
1455: invokestatic  #33
1458: new           #10
1461: dup
1462: invokespecial #11
1465: ldc           #12
1467: invokevirtual #13
1470: dload         61
1472: invokevirtual #60
1475: ldc           #15
1477: invokevirtual #13
1480: ldc2_w        #63
1483: invokevirtual #60
1486: ldc           #12
1488: invokevirtual #13
1491: invokevirtual #16
1494: dload         61
1496: ldc2_w        #63
1499: dcmpl
1500: ifne          1507
1503: iconst_1
1504: goto          1508
1507: iconst_0
1508: invokestatic  #17
1511: aload         64
1513: invokestatic  #33
1516: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 450
End line: 536
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 10.0f, (double) 35.0f);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double12 = vector3D8.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D11);
        double double13 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D5, vector3D11);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double23 = vector3D19.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double24 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D16, vector3D22);
        boolean boolean25 = vector3D16.isInfinite();
        double double26 = vector3D5.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        org.apache.commons.math.geometry.Space space27 = vector3D16.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double34 = vector3D30.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double41 = vector3D37.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D40);
        double double42 = vector3D40.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double49 = vector3D45.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        double double50 = vector3D48.getDelta();
        double double51 = vector3D40.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D54, vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double72 = vector3D68.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D71);
        double double73 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D65, vector3D71);
        boolean boolean74 = vector3D65.isInfinite();
        double double75 = vector3D54.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = vector3D65.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double83 = vector3D79.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = vector3D76.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = vector3D40.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        double double86 = vector3D33.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation87 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D16, vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = rotation87.revert();
        double double89 = rotation88.getQ1();
        double double90 = rotation88.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation88.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = rotation88.applyInverseTo(vector3D95);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector97 = vector3D2.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D96);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(space27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.7345682747147468d + "'", double42 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.7345682747147468d + "'", double50 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0000000000000002d + "'", double86 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(euclidean3DVector97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: ldc2_w        #83
31: ldc2_w        #40
34: invokespecial #46
37: astore_1
38: new           #43
41: dup
42: dconst_1
43: ldc2_w        #44
46: invokespecial #46
49: astore_2
50: new           #43
53: dup
54: dconst_1
55: ldc2_w        #44
58: invokespecial #46
61: astore_3
62: new           #43
65: dup
66: dconst_1
67: ldc2_w        #44
70: invokespecial #46
73: astore        4
75: aload_3
76: aload         4
78: invokevirtual #47
81: dstore        5
83: aload_2
84: aload         4
86: invokestatic  #48
89: dstore        7
91: new           #43
94: dup
95: dconst_1
96: ldc2_w        #44
99: invokespecial #46
102: astore        9
104: new           #43
107: dup
108: dconst_1
109: ldc2_w        #44
112: invokespecial #46
115: astore        10
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        11
130: aload         10
132: aload         11
134: invokevirtual #47
137: dstore        12
139: aload         9
141: aload         11
143: invokestatic  #48
146: dstore        14
148: aload         9
150: invokevirtual #49
153: istore        16
155: aload_2
156: aload         9
158: invokevirtual #50
161: dstore        17
163: aload         9
165: invokevirtual #51
168: astore        19
170: new           #43
173: dup
174: dconst_1
175: ldc2_w        #44
178: invokespecial #46
181: astore        20
183: new           #43
186: dup
187: dconst_1
188: ldc2_w        #44
191: invokespecial #46
194: astore        21
196: aload         20
198: aload         21
200: invokevirtual #47
203: dstore        22
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        24
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        25
231: aload         24
233: aload         25
235: invokevirtual #47
238: dstore        26
240: aload         25
242: invokevirtual #52
245: dstore        28
247: new           #43
250: dup
251: dconst_1
252: ldc2_w        #44
255: invokespecial #46
258: astore        30
260: new           #43
263: dup
264: dconst_1
265: ldc2_w        #44
268: invokespecial #46
271: astore        31
273: aload         30
275: aload         31
277: invokevirtual #47
280: dstore        32
282: aload         31
284: invokevirtual #52
287: dstore        34
289: aload         25
291: aload         31
293: invokevirtual #53
296: dstore        36
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: new           #43
314: dup
315: dconst_1
316: ldc2_w        #44
319: invokespecial #46
322: astore        39
324: new           #43
327: dup
328: dconst_1
329: ldc2_w        #44
332: invokespecial #46
335: astore        40
337: aload         39
339: aload         40
341: invokevirtual #47
344: dstore        41
346: aload         38
348: aload         40
350: invokestatic  #48
353: dstore        43
355: new           #43
358: dup
359: dconst_1
360: ldc2_w        #44
363: invokespecial #46
366: astore        45
368: new           #43
371: dup
372: dconst_1
373: ldc2_w        #44
376: invokespecial #46
379: astore        46
381: new           #43
384: dup
385: dconst_1
386: ldc2_w        #44
389: invokespecial #46
392: astore        47
394: aload         46
396: aload         47
398: invokevirtual #47
401: dstore        48
403: aload         45
405: aload         47
407: invokestatic  #48
410: dstore        50
412: aload         45
414: invokevirtual #49
417: istore        52
419: aload         38
421: aload         45
423: invokevirtual #50
426: dstore        53
428: aload         45
430: invokevirtual #54
433: astore        55
435: new           #43
438: dup
439: dconst_1
440: ldc2_w        #44
443: invokespecial #46
446: astore        56
448: new           #43
451: dup
452: dconst_1
453: ldc2_w        #44
456: invokespecial #46
459: astore        57
461: aload         56
463: aload         57
465: invokevirtual #47
468: dstore        58
470: aload         55
472: aload         56
474: invokevirtual #55
477: astore        60
479: aload         25
481: aload         60
483: invokevirtual #55
486: astore        61
488: aload         21
490: aload         60
492: invokevirtual #53
495: dstore        62
497: new           #27
500: dup
501: aload         9
503: aload         21
505: invokespecial #56
508: astore        64
510: aload         64
512: invokevirtual #93
515: astore        65
517: aload         65
519: invokevirtual #94
522: dstore        66
524: aload         65
526: invokevirtual #95
529: dstore        68
531: aload         65
533: invokevirtual #96
536: astore        70
538: new           #43
541: dup
542: dconst_0
543: ldc2_w        #68
546: ldc2_w        #70
549: invokespecial #97
552: astore        71
554: aload         65
556: aload         71
558: invokevirtual #98
561: astore        72
563: aload_1
564: aload         72
566: invokevirtual #109
569: astore        73
571: new           #10
574: dup
575: invokespecial #11
578: ldc           #12
580: invokevirtual #13
583: dload         5
585: invokevirtual #60
588: ldc           #15
590: invokevirtual #13
593: dconst_0
594: invokevirtual #60
597: ldc           #12
599: invokevirtual #13
602: invokevirtual #16
605: dload         5
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         7
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         7
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         12
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         12
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: dload         14
732: invokevirtual #60
735: ldc           #15
737: invokevirtual #13
740: dconst_0
741: invokevirtual #60
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: dload         14
754: dconst_0
755: dcmpl
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #17
767: new           #10
770: dup
771: invokespecial #11
774: ldc           #12
776: invokevirtual #13
779: iload         16
781: invokevirtual #14
784: ldc           #15
786: invokevirtual #13
789: iconst_0
790: invokevirtual #14
793: ldc           #12
795: invokevirtual #13
798: invokevirtual #16
801: iload         16
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: new           #10
817: dup
818: invokespecial #11
821: ldc           #12
823: invokevirtual #13
826: dload         17
828: invokevirtual #60
831: ldc           #15
833: invokevirtual #13
836: dconst_0
837: invokevirtual #60
840: ldc           #12
842: invokevirtual #13
845: invokevirtual #16
848: dload         17
850: dconst_0
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #17
863: aload         19
865: invokestatic  #33
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         22
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         22
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         26
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: dconst_0
940: invokevirtual #60
943: ldc           #12
945: invokevirtual #13
948: invokevirtual #16
951: dload         26
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         28
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: ldc2_w        #61
991: invokevirtual #60
994: ldc           #12
996: invokevirtual #13
999: invokevirtual #16
1002: dload         28
1004: ldc2_w        #61
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         32
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: dconst_0
1042: invokevirtual #60
1045: ldc           #12
1047: invokevirtual #13
1050: invokevirtual #16
1053: dload         32
1055: dconst_0
1056: dcmpl
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #17
1068: new           #10
1071: dup
1072: invokespecial #11
1075: ldc           #12
1077: invokevirtual #13
1080: dload         34
1082: invokevirtual #60
1085: ldc           #15
1087: invokevirtual #13
1090: ldc2_w        #61
1093: invokevirtual #60
1096: ldc           #12
1098: invokevirtual #13
1101: invokevirtual #16
1104: dload         34
1106: ldc2_w        #61
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         36
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         36
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         41
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         41
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         43
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         43
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         48
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         48
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: dload         50
1331: invokevirtual #60
1334: ldc           #15
1336: invokevirtual #13
1339: dconst_0
1340: invokevirtual #60
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: dload         50
1353: dconst_0
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #17
1366: new           #10
1369: dup
1370: invokespecial #11
1373: ldc           #12
1375: invokevirtual #13
1378: iload         52
1380: invokevirtual #14
1383: ldc           #15
1385: invokevirtual #13
1388: iconst_0
1389: invokevirtual #14
1392: ldc           #12
1394: invokevirtual #13
1397: invokevirtual #16
1400: iload         52
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: new           #10
1416: dup
1417: invokespecial #11
1420: ldc           #12
1422: invokevirtual #13
1425: dload         53
1427: invokevirtual #60
1430: ldc           #15
1432: invokevirtual #13
1435: dconst_0
1436: invokevirtual #60
1439: ldc           #12
1441: invokevirtual #13
1444: invokevirtual #16
1447: dload         53
1449: dconst_0
1450: dcmpl
1451: ifne          1458
1454: iconst_1
1455: goto          1459
1458: iconst_0
1459: invokestatic  #17
1462: aload         55
1464: invokestatic  #33
1467: new           #10
1470: dup
1471: invokespecial #11
1474: ldc           #12
1476: invokevirtual #13
1479: dload         58
1481: invokevirtual #60
1484: ldc           #15
1486: invokevirtual #13
1489: dconst_0
1490: invokevirtual #60
1493: ldc           #12
1495: invokevirtual #13
1498: invokevirtual #16
1501: dload         58
1503: dconst_0
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: aload         60
1518: invokestatic  #33
1521: aload         61
1523: invokestatic  #33
1526: new           #10
1529: dup
1530: invokespecial #11
1533: ldc           #12
1535: invokevirtual #13
1538: dload         62
1540: invokevirtual #60
1543: ldc           #15
1545: invokevirtual #13
1548: ldc2_w        #63
1551: invokevirtual #60
1554: ldc           #12
1556: invokevirtual #13
1559: invokevirtual #16
1562: dload         62
1564: ldc2_w        #63
1567: dcmpl
1568: ifne          1575
1571: iconst_1
1572: goto          1576
1575: iconst_0
1576: invokestatic  #17
1579: aload         65
1581: invokestatic  #33
1584: new           #10
1587: dup
1588: invokespecial #11
1591: ldc           #12
1593: invokevirtual #13
1596: dload         66
1598: invokevirtual #60
1601: ldc           #15
1603: invokevirtual #13
1606: dconst_0
1607: invokevirtual #60
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: dload         66
1620: dconst_0
1621: dcmpl
1622: ifne          1629
1625: iconst_1
1626: goto          1630
1629: iconst_0
1630: invokestatic  #17
1633: new           #10
1636: dup
1637: invokespecial #11
1640: ldc           #12
1642: invokevirtual #13
1645: dload         68
1647: invokevirtual #60
1650: ldc           #15
1652: invokevirtual #13
1655: dconst_0
1656: invokevirtual #60
1659: ldc           #12
1661: invokevirtual #13
1664: invokevirtual #16
1667: dload         68
1669: dconst_0
1670: dcmpl
1671: ifne          1678
1674: iconst_1
1675: goto          1679
1678: iconst_0
1679: invokestatic  #17
1682: aload         70
1684: invokestatic  #33
1687: aload         72
1689: invokestatic  #33
1692: aload         73
1694: invokestatic  #33
1697: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 539
End line: 621
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.Space space31 = vector3D20.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = vector3D44.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        double double55 = vector3D44.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double65 = vector3D61.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        double double66 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D58, vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double76 = vector3D72.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D75);
        double double77 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D69, vector3D75);
        boolean boolean78 = vector3D69.isInfinite();
        double double79 = vector3D58.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = vector3D69.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double87 = vector3D83.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D80.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D44.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        double double90 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation91 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D20, vector3D37);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector93 = vector3D37.scalarMultiply(100.0d);
        double double94 = vector3D37.getNormSq();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector95 = vector3D2.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(space31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.7345682747147468d + "'", double46 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0000000000000002d + "'", double90 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0000000000000002d + "'", double94 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #110
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: aload_1
49: aload_2
50: invokevirtual #47
53: dstore_3
54: new           #43
57: dup
58: dconst_1
59: ldc2_w        #44
62: invokespecial #46
65: astore        5
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        6
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        7
93: aload         6
95: aload         7
97: invokevirtual #47
100: dstore        8
102: aload         5
104: aload         7
106: invokestatic  #48
109: dstore        10
111: new           #43
114: dup
115: dconst_1
116: ldc2_w        #44
119: invokespecial #46
122: astore        12
124: new           #43
127: dup
128: dconst_1
129: ldc2_w        #44
132: invokespecial #46
135: astore        13
137: new           #43
140: dup
141: dconst_1
142: ldc2_w        #44
145: invokespecial #46
148: astore        14
150: aload         13
152: aload         14
154: invokevirtual #47
157: dstore        15
159: aload         12
161: aload         14
163: invokestatic  #48
166: dstore        17
168: aload         12
170: invokevirtual #49
173: istore        19
175: aload         5
177: aload         12
179: invokevirtual #50
182: dstore        20
184: aload         12
186: invokevirtual #51
189: astore        22
191: new           #43
194: dup
195: dconst_1
196: ldc2_w        #44
199: invokespecial #46
202: astore        23
204: new           #43
207: dup
208: dconst_1
209: ldc2_w        #44
212: invokespecial #46
215: astore        24
217: aload         23
219: aload         24
221: invokevirtual #47
224: dstore        25
226: new           #43
229: dup
230: dconst_1
231: ldc2_w        #44
234: invokespecial #46
237: astore        27
239: new           #43
242: dup
243: dconst_1
244: ldc2_w        #44
247: invokespecial #46
250: astore        28
252: aload         27
254: aload         28
256: invokevirtual #47
259: dstore        29
261: aload         28
263: invokevirtual #52
266: dstore        31
268: new           #43
271: dup
272: dconst_1
273: ldc2_w        #44
276: invokespecial #46
279: astore        33
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        34
294: aload         33
296: aload         34
298: invokevirtual #47
301: dstore        35
303: aload         34
305: invokevirtual #52
308: dstore        37
310: aload         28
312: aload         34
314: invokevirtual #53
317: dstore        39
319: new           #43
322: dup
323: dconst_1
324: ldc2_w        #44
327: invokespecial #46
330: astore        41
332: new           #43
335: dup
336: dconst_1
337: ldc2_w        #44
340: invokespecial #46
343: astore        42
345: new           #43
348: dup
349: dconst_1
350: ldc2_w        #44
353: invokespecial #46
356: astore        43
358: aload         42
360: aload         43
362: invokevirtual #47
365: dstore        44
367: aload         41
369: aload         43
371: invokestatic  #48
374: dstore        46
376: new           #43
379: dup
380: dconst_1
381: ldc2_w        #44
384: invokespecial #46
387: astore        48
389: new           #43
392: dup
393: dconst_1
394: ldc2_w        #44
397: invokespecial #46
400: astore        49
402: new           #43
405: dup
406: dconst_1
407: ldc2_w        #44
410: invokespecial #46
413: astore        50
415: aload         49
417: aload         50
419: invokevirtual #47
422: dstore        51
424: aload         48
426: aload         50
428: invokestatic  #48
431: dstore        53
433: aload         48
435: invokevirtual #49
438: istore        55
440: aload         41
442: aload         48
444: invokevirtual #50
447: dstore        56
449: aload         48
451: invokevirtual #54
454: astore        58
456: new           #43
459: dup
460: dconst_1
461: ldc2_w        #44
464: invokespecial #46
467: astore        59
469: new           #43
472: dup
473: dconst_1
474: ldc2_w        #44
477: invokespecial #46
480: astore        60
482: aload         59
484: aload         60
486: invokevirtual #47
489: dstore        61
491: aload         58
493: aload         59
495: invokevirtual #55
498: astore        63
500: aload         28
502: aload         63
504: invokevirtual #55
507: astore        64
509: aload         24
511: aload         63
513: invokevirtual #53
516: dstore        65
518: new           #27
521: dup
522: aload         12
524: aload         24
526: invokespecial #56
529: astore        67
531: aload         24
533: ldc2_w        #68
536: invokevirtual #107
539: astore        68
541: aload         24
543: invokevirtual #111
546: dstore        69
548: aload_1
549: aload         24
551: invokevirtual #55
554: astore        71
556: new           #10
559: dup
560: invokespecial #11
563: ldc           #12
565: invokevirtual #13
568: dload_3
569: invokevirtual #60
572: ldc           #15
574: invokevirtual #13
577: dconst_0
578: invokevirtual #60
581: ldc           #12
583: invokevirtual #13
586: invokevirtual #16
589: dload_3
590: dconst_0
591: dcmpl
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #17
603: new           #10
606: dup
607: invokespecial #11
610: ldc           #12
612: invokevirtual #13
615: dload         8
617: invokevirtual #60
620: ldc           #15
622: invokevirtual #13
625: dconst_0
626: invokevirtual #60
629: ldc           #12
631: invokevirtual #13
634: invokevirtual #16
637: dload         8
639: dconst_0
640: dcmpl
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #17
652: new           #10
655: dup
656: invokespecial #11
659: ldc           #12
661: invokevirtual #13
664: dload         10
666: invokevirtual #60
669: ldc           #15
671: invokevirtual #13
674: dconst_0
675: invokevirtual #60
678: ldc           #12
680: invokevirtual #13
683: invokevirtual #16
686: dload         10
688: dconst_0
689: dcmpl
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #17
701: new           #10
704: dup
705: invokespecial #11
708: ldc           #12
710: invokevirtual #13
713: dload         15
715: invokevirtual #60
718: ldc           #15
720: invokevirtual #13
723: dconst_0
724: invokevirtual #60
727: ldc           #12
729: invokevirtual #13
732: invokevirtual #16
735: dload         15
737: dconst_0
738: dcmpl
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #17
750: new           #10
753: dup
754: invokespecial #11
757: ldc           #12
759: invokevirtual #13
762: dload         17
764: invokevirtual #60
767: ldc           #15
769: invokevirtual #13
772: dconst_0
773: invokevirtual #60
776: ldc           #12
778: invokevirtual #13
781: invokevirtual #16
784: dload         17
786: dconst_0
787: dcmpl
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #17
799: new           #10
802: dup
803: invokespecial #11
806: ldc           #12
808: invokevirtual #13
811: iload         19
813: invokevirtual #14
816: ldc           #15
818: invokevirtual #13
821: iconst_0
822: invokevirtual #14
825: ldc           #12
827: invokevirtual #13
830: invokevirtual #16
833: iload         19
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #17
846: new           #10
849: dup
850: invokespecial #11
853: ldc           #12
855: invokevirtual #13
858: dload         20
860: invokevirtual #60
863: ldc           #15
865: invokevirtual #13
868: dconst_0
869: invokevirtual #60
872: ldc           #12
874: invokevirtual #13
877: invokevirtual #16
880: dload         20
882: dconst_0
883: dcmpl
884: ifne          891
887: iconst_1
888: goto          892
891: iconst_0
892: invokestatic  #17
895: aload         22
897: invokestatic  #33
900: new           #10
903: dup
904: invokespecial #11
907: ldc           #12
909: invokevirtual #13
912: dload         25
914: invokevirtual #60
917: ldc           #15
919: invokevirtual #13
922: dconst_0
923: invokevirtual #60
926: ldc           #12
928: invokevirtual #13
931: invokevirtual #16
934: dload         25
936: dconst_0
937: dcmpl
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #17
949: new           #10
952: dup
953: invokespecial #11
956: ldc           #12
958: invokevirtual #13
961: dload         29
963: invokevirtual #60
966: ldc           #15
968: invokevirtual #13
971: dconst_0
972: invokevirtual #60
975: ldc           #12
977: invokevirtual #13
980: invokevirtual #16
983: dload         29
985: dconst_0
986: dcmpl
987: ifne          994
990: iconst_1
991: goto          995
994: iconst_0
995: invokestatic  #17
998: new           #10
1001: dup
1002: invokespecial #11
1005: ldc           #12
1007: invokevirtual #13
1010: dload         31
1012: invokevirtual #60
1015: ldc           #15
1017: invokevirtual #13
1020: ldc2_w        #61
1023: invokevirtual #60
1026: ldc           #12
1028: invokevirtual #13
1031: invokevirtual #16
1034: dload         31
1036: ldc2_w        #61
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #17
1051: new           #10
1054: dup
1055: invokespecial #11
1058: ldc           #12
1060: invokevirtual #13
1063: dload         35
1065: invokevirtual #60
1068: ldc           #15
1070: invokevirtual #13
1073: dconst_0
1074: invokevirtual #60
1077: ldc           #12
1079: invokevirtual #13
1082: invokevirtual #16
1085: dload         35
1087: dconst_0
1088: dcmpl
1089: ifne          1096
1092: iconst_1
1093: goto          1097
1096: iconst_0
1097: invokestatic  #17
1100: new           #10
1103: dup
1104: invokespecial #11
1107: ldc           #12
1109: invokevirtual #13
1112: dload         37
1114: invokevirtual #60
1117: ldc           #15
1119: invokevirtual #13
1122: ldc2_w        #61
1125: invokevirtual #60
1128: ldc           #12
1130: invokevirtual #13
1133: invokevirtual #16
1136: dload         37
1138: ldc2_w        #61
1141: dcmpl
1142: ifne          1149
1145: iconst_1
1146: goto          1150
1149: iconst_0
1150: invokestatic  #17
1153: new           #10
1156: dup
1157: invokespecial #11
1160: ldc           #12
1162: invokevirtual #13
1165: dload         39
1167: invokevirtual #60
1170: ldc           #15
1172: invokevirtual #13
1175: dconst_0
1176: invokevirtual #60
1179: ldc           #12
1181: invokevirtual #13
1184: invokevirtual #16
1187: dload         39
1189: dconst_0
1190: dcmpl
1191: ifne          1198
1194: iconst_1
1195: goto          1199
1198: iconst_0
1199: invokestatic  #17
1202: new           #10
1205: dup
1206: invokespecial #11
1209: ldc           #12
1211: invokevirtual #13
1214: dload         44
1216: invokevirtual #60
1219: ldc           #15
1221: invokevirtual #13
1224: dconst_0
1225: invokevirtual #60
1228: ldc           #12
1230: invokevirtual #13
1233: invokevirtual #16
1236: dload         44
1238: dconst_0
1239: dcmpl
1240: ifne          1247
1243: iconst_1
1244: goto          1248
1247: iconst_0
1248: invokestatic  #17
1251: new           #10
1254: dup
1255: invokespecial #11
1258: ldc           #12
1260: invokevirtual #13
1263: dload         46
1265: invokevirtual #60
1268: ldc           #15
1270: invokevirtual #13
1273: dconst_0
1274: invokevirtual #60
1277: ldc           #12
1279: invokevirtual #13
1282: invokevirtual #16
1285: dload         46
1287: dconst_0
1288: dcmpl
1289: ifne          1296
1292: iconst_1
1293: goto          1297
1296: iconst_0
1297: invokestatic  #17
1300: new           #10
1303: dup
1304: invokespecial #11
1307: ldc           #12
1309: invokevirtual #13
1312: dload         51
1314: invokevirtual #60
1317: ldc           #15
1319: invokevirtual #13
1322: dconst_0
1323: invokevirtual #60
1326: ldc           #12
1328: invokevirtual #13
1331: invokevirtual #16
1334: dload         51
1336: dconst_0
1337: dcmpl
1338: ifne          1345
1341: iconst_1
1342: goto          1346
1345: iconst_0
1346: invokestatic  #17
1349: new           #10
1352: dup
1353: invokespecial #11
1356: ldc           #12
1358: invokevirtual #13
1361: dload         53
1363: invokevirtual #60
1366: ldc           #15
1368: invokevirtual #13
1371: dconst_0
1372: invokevirtual #60
1375: ldc           #12
1377: invokevirtual #13
1380: invokevirtual #16
1383: dload         53
1385: dconst_0
1386: dcmpl
1387: ifne          1394
1390: iconst_1
1391: goto          1395
1394: iconst_0
1395: invokestatic  #17
1398: new           #10
1401: dup
1402: invokespecial #11
1405: ldc           #12
1407: invokevirtual #13
1410: iload         55
1412: invokevirtual #14
1415: ldc           #15
1417: invokevirtual #13
1420: iconst_0
1421: invokevirtual #14
1424: ldc           #12
1426: invokevirtual #13
1429: invokevirtual #16
1432: iload         55
1434: ifne          1441
1437: iconst_1
1438: goto          1442
1441: iconst_0
1442: invokestatic  #17
1445: new           #10
1448: dup
1449: invokespecial #11
1452: ldc           #12
1454: invokevirtual #13
1457: dload         56
1459: invokevirtual #60
1462: ldc           #15
1464: invokevirtual #13
1467: dconst_0
1468: invokevirtual #60
1471: ldc           #12
1473: invokevirtual #13
1476: invokevirtual #16
1479: dload         56
1481: dconst_0
1482: dcmpl
1483: ifne          1490
1486: iconst_1
1487: goto          1491
1490: iconst_0
1491: invokestatic  #17
1494: aload         58
1496: invokestatic  #33
1499: new           #10
1502: dup
1503: invokespecial #11
1506: ldc           #12
1508: invokevirtual #13
1511: dload         61
1513: invokevirtual #60
1516: ldc           #15
1518: invokevirtual #13
1521: dconst_0
1522: invokevirtual #60
1525: ldc           #12
1527: invokevirtual #13
1530: invokevirtual #16
1533: dload         61
1535: dconst_0
1536: dcmpl
1537: ifne          1544
1540: iconst_1
1541: goto          1545
1544: iconst_0
1545: invokestatic  #17
1548: aload         63
1550: invokestatic  #33
1553: aload         64
1555: invokestatic  #33
1558: new           #10
1561: dup
1562: invokespecial #11
1565: ldc           #12
1567: invokevirtual #13
1570: dload         65
1572: invokevirtual #60
1575: ldc           #15
1577: invokevirtual #13
1580: ldc2_w        #63
1583: invokevirtual #60
1586: ldc           #12
1588: invokevirtual #13
1591: invokevirtual #16
1594: dload         65
1596: ldc2_w        #63
1599: dcmpl
1600: ifne          1607
1603: iconst_1
1604: goto          1608
1607: iconst_0
1608: invokestatic  #17
1611: aload         68
1613: invokestatic  #33
1616: new           #10
1619: dup
1620: invokespecial #11
1623: ldc           #12
1625: invokevirtual #13
1628: dload         69
1630: invokevirtual #60
1633: ldc           #15
1635: invokevirtual #13
1638: ldc2_w        #63
1641: invokevirtual #60
1644: ldc           #12
1646: invokevirtual #13
1649: invokevirtual #16
1652: dload         69
1654: ldc2_w        #63
1657: dcmpl
1658: ifne          1665
1661: iconst_1
1662: goto          1666
1665: iconst_0
1666: invokestatic  #17
1669: aload         71
1671: invokestatic  #33
1674: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 624
End line: 642
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        double[] doubleArray6 = new double[] { 0.99999994f, (-1.0f), (-0.428182669496151d), 7.6293945E-6f, 1.791759469228055d, 30 };
        double[] doubleArray13 = new double[] { 0.99999994f, (-1.0f), (-0.428182669496151d), 7.6293945E-6f, 1.791759469228055d, 30 };
        double[][] doubleArray14 = new double[][] { doubleArray6, doubleArray13 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation16 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray14, 100.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 2x6 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.9999999403953552, -1.0, -0.428182669496151, 7.62939453125E-6, 1.791759469228055, 30.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.9999999403953552, -1.0, -0.428182669496151, 7.62939453125E-6, 1.791759469228055, 30.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #113
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #66
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #115
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #117
51: dastore
52: dup
53: iconst_4
54: ldc2_w        #119
57: dastore
58: dup
59: iconst_5
60: ldc2_w        #121
63: dastore
64: astore_1
65: bipush        6
67: newarray       double
69: dup
70: iconst_0
71: ldc2_w        #113
74: dastore
75: dup
76: iconst_1
77: ldc2_w        #66
80: dastore
81: dup
82: iconst_2
83: ldc2_w        #115
86: dastore
87: dup
88: iconst_3
89: ldc2_w        #117
92: dastore
93: dup
94: iconst_4
95: ldc2_w        #119
98: dastore
99: dup
100: iconst_5
101: ldc2_w        #121
104: dastore
105: astore_2
106: iconst_2
107: anewarray     #25
110: dup
111: iconst_0
112: aload_1
113: aastore
114: dup
115: iconst_1
116: aload_2
117: aastore
118: astore_3
119: new           #27
122: dup
123: aload_3
124: ldc2_w        #68
127: invokespecial #30
130: astore        4
132: ldc           #123
134: invokestatic  #21
137: goto          142
140: astore        4
142: aload_1
143: invokestatic  #33
146: aload_1
147: invokestatic  #34
150: ldc           #124
152: invokestatic  #36
155: aload_2
156: invokestatic  #33
159: aload_2
160: invokestatic  #34
163: ldc           #124
165: invokestatic  #36
168: aload_3
169: invokestatic  #33
172: return
Exception table:
from    to  target type
119   137   140   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 645
End line: 723
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double18 = vector3D14.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D17);
        double double19 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D11, vector3D17);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double29 = vector3D25.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        double double30 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D22, vector3D28);
        boolean boolean31 = vector3D22.isInfinite();
        double double32 = vector3D11.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D8, vector3D22);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D5, vector3D22);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double42 = vector3D38.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D45, vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double63 = vector3D59.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        double double64 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D56, vector3D62);
        boolean boolean65 = vector3D56.isInfinite();
        double double66 = vector3D45.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double67 = vector3D38.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double79 = vector3D75.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        double double80 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D78);
        double double81 = vector3D69.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, vector3D38, (double) (-1.0f), vector3D69);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D5, vector3D82, vector3D83, vector3D84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + Double.POSITIVE_INFINITY + "'", double33 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + Double.POSITIVE_INFINITY + "'", double81 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: aload_1
49: aload_2
50: invokevirtual #47
53: dstore_3
54: aload_2
55: invokevirtual #52
58: dstore        5
60: getstatic     #126
63: astore        7
65: new           #43
68: dup
69: dconst_1
70: ldc2_w        #44
73: invokespecial #46
76: astore        8
78: new           #43
81: dup
82: dconst_1
83: ldc2_w        #44
86: invokespecial #46
89: astore        9
91: new           #43
94: dup
95: dconst_1
96: ldc2_w        #44
99: invokespecial #46
102: astore        10
104: aload         9
106: aload         10
108: invokevirtual #47
111: dstore        11
113: aload         8
115: aload         10
117: invokestatic  #48
120: dstore        13
122: new           #43
125: dup
126: dconst_1
127: ldc2_w        #44
130: invokespecial #46
133: astore        15
135: new           #43
138: dup
139: dconst_1
140: ldc2_w        #44
143: invokespecial #46
146: astore        16
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        17
161: aload         16
163: aload         17
165: invokevirtual #47
168: dstore        18
170: aload         15
172: aload         17
174: invokestatic  #48
177: dstore        20
179: aload         15
181: invokevirtual #49
184: istore        22
186: aload         8
188: aload         15
190: invokevirtual #50
193: dstore        23
195: aload         7
197: aload         15
199: invokestatic  #127
202: dstore        25
204: aload_2
205: aload         15
207: invokestatic  #128
210: dstore        27
212: new           #43
215: dup
216: dconst_1
217: ldc2_w        #44
220: invokespecial #46
223: astore        29
225: new           #43
228: dup
229: dconst_1
230: ldc2_w        #44
233: invokespecial #46
236: astore        30
238: aload         29
240: aload         30
242: invokevirtual #47
245: dstore        31
247: new           #43
250: dup
251: dconst_1
252: ldc2_w        #44
255: invokespecial #46
258: astore        33
260: new           #43
263: dup
264: dconst_1
265: ldc2_w        #44
268: invokespecial #46
271: astore        34
273: new           #43
276: dup
277: dconst_1
278: ldc2_w        #44
281: invokespecial #46
284: astore        35
286: aload         34
288: aload         35
290: invokevirtual #47
293: dstore        36
295: aload         33
297: aload         35
299: invokestatic  #48
302: dstore        38
304: new           #43
307: dup
308: dconst_1
309: ldc2_w        #44
312: invokespecial #46
315: astore        40
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        41
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        42
343: aload         41
345: aload         42
347: invokevirtual #47
350: dstore        43
352: aload         40
354: aload         42
356: invokestatic  #48
359: dstore        45
361: aload         40
363: invokevirtual #49
366: istore        47
368: aload         33
370: aload         40
372: invokevirtual #50
375: dstore        48
377: aload         29
379: aload         40
381: invokevirtual #129
384: dstore        50
386: getstatic     #126
389: astore        52
391: new           #43
394: dup
395: dconst_1
396: ldc2_w        #44
399: invokespecial #46
402: astore        53
404: new           #43
407: dup
408: dconst_1
409: ldc2_w        #44
412: invokespecial #46
415: astore        54
417: new           #43
420: dup
421: dconst_1
422: ldc2_w        #44
425: invokespecial #46
428: astore        55
430: aload         54
432: aload         55
434: invokevirtual #47
437: dstore        56
439: aload         53
441: aload         55
443: invokestatic  #48
446: dstore        58
448: aload         52
450: aload         53
452: invokevirtual #53
455: dstore        60
457: new           #43
460: dup
461: dconst_0
462: aload         29
464: ldc2_w        #66
467: aload         52
469: invokespecial #130
472: astore        62
474: aconst_null
475: astore        63
477: aconst_null
478: astore        64
480: new           #27
483: dup
484: aload_2
485: aload         62
487: aload         63
489: aload         64
491: invokespecial #131
494: astore        65
496: ldc           #20
498: invokestatic  #21
501: goto          506
504: astore        65
506: new           #10
509: dup
510: invokespecial #11
513: ldc           #12
515: invokevirtual #13
518: dload_3
519: invokevirtual #60
522: ldc           #15
524: invokevirtual #13
527: dconst_0
528: invokevirtual #60
531: ldc           #12
533: invokevirtual #13
536: invokevirtual #16
539: dload_3
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #17
553: new           #10
556: dup
557: invokespecial #11
560: ldc           #12
562: invokevirtual #13
565: dload         5
567: invokevirtual #60
570: ldc           #15
572: invokevirtual #13
575: ldc2_w        #61
578: invokevirtual #60
581: ldc           #12
583: invokevirtual #13
586: invokevirtual #16
589: dload         5
591: ldc2_w        #61
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: aload         7
608: invokestatic  #33
611: new           #10
614: dup
615: invokespecial #11
618: ldc           #12
620: invokevirtual #13
623: dload         11
625: invokevirtual #60
628: ldc           #15
630: invokevirtual #13
633: dconst_0
634: invokevirtual #60
637: ldc           #12
639: invokevirtual #13
642: invokevirtual #16
645: dload         11
647: dconst_0
648: dcmpl
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #17
660: new           #10
663: dup
664: invokespecial #11
667: ldc           #12
669: invokevirtual #13
672: dload         13
674: invokevirtual #60
677: ldc           #15
679: invokevirtual #13
682: dconst_0
683: invokevirtual #60
686: ldc           #12
688: invokevirtual #13
691: invokevirtual #16
694: dload         13
696: dconst_0
697: dcmpl
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #17
709: new           #10
712: dup
713: invokespecial #11
716: ldc           #12
718: invokevirtual #13
721: dload         18
723: invokevirtual #60
726: ldc           #15
728: invokevirtual #13
731: dconst_0
732: invokevirtual #60
735: ldc           #12
737: invokevirtual #13
740: invokevirtual #16
743: dload         18
745: dconst_0
746: dcmpl
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: dload         20
772: invokevirtual #60
775: ldc           #15
777: invokevirtual #13
780: dconst_0
781: invokevirtual #60
784: ldc           #12
786: invokevirtual #13
789: invokevirtual #16
792: dload         20
794: dconst_0
795: dcmpl
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #17
807: new           #10
810: dup
811: invokespecial #11
814: ldc           #12
816: invokevirtual #13
819: iload         22
821: invokevirtual #14
824: ldc           #15
826: invokevirtual #13
829: iconst_0
830: invokevirtual #14
833: ldc           #12
835: invokevirtual #13
838: invokevirtual #16
841: iload         22
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         23
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         23
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         25
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #133
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         25
941: ldc2_w        #133
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         27
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         27
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         31
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: dconst_0
1028: invokevirtual #60
1031: ldc           #12
1033: invokevirtual #13
1036: invokevirtual #16
1039: dload         31
1041: dconst_0
1042: dcmpl
1043: ifne          1050
1046: iconst_1
1047: goto          1051
1050: iconst_0
1051: invokestatic  #17
1054: new           #10
1057: dup
1058: invokespecial #11
1061: ldc           #12
1063: invokevirtual #13
1066: dload         36
1068: invokevirtual #60
1071: ldc           #15
1073: invokevirtual #13
1076: dconst_0
1077: invokevirtual #60
1080: ldc           #12
1082: invokevirtual #13
1085: invokevirtual #16
1088: dload         36
1090: dconst_0
1091: dcmpl
1092: ifne          1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #17
1103: new           #10
1106: dup
1107: invokespecial #11
1110: ldc           #12
1112: invokevirtual #13
1115: dload         38
1117: invokevirtual #60
1120: ldc           #15
1122: invokevirtual #13
1125: dconst_0
1126: invokevirtual #60
1129: ldc           #12
1131: invokevirtual #13
1134: invokevirtual #16
1137: dload         38
1139: dconst_0
1140: dcmpl
1141: ifne          1148
1144: iconst_1
1145: goto          1149
1148: iconst_0
1149: invokestatic  #17
1152: new           #10
1155: dup
1156: invokespecial #11
1159: ldc           #12
1161: invokevirtual #13
1164: dload         43
1166: invokevirtual #60
1169: ldc           #15
1171: invokevirtual #13
1174: dconst_0
1175: invokevirtual #60
1178: ldc           #12
1180: invokevirtual #13
1183: invokevirtual #16
1186: dload         43
1188: dconst_0
1189: dcmpl
1190: ifne          1197
1193: iconst_1
1194: goto          1198
1197: iconst_0
1198: invokestatic  #17
1201: new           #10
1204: dup
1205: invokespecial #11
1208: ldc           #12
1210: invokevirtual #13
1213: dload         45
1215: invokevirtual #60
1218: ldc           #15
1220: invokevirtual #13
1223: dconst_0
1224: invokevirtual #60
1227: ldc           #12
1229: invokevirtual #13
1232: invokevirtual #16
1235: dload         45
1237: dconst_0
1238: dcmpl
1239: ifne          1246
1242: iconst_1
1243: goto          1247
1246: iconst_0
1247: invokestatic  #17
1250: new           #10
1253: dup
1254: invokespecial #11
1257: ldc           #12
1259: invokevirtual #13
1262: iload         47
1264: invokevirtual #14
1267: ldc           #15
1269: invokevirtual #13
1272: iconst_0
1273: invokevirtual #14
1276: ldc           #12
1278: invokevirtual #13
1281: invokevirtual #16
1284: iload         47
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         48
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         48
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: dload         50
1360: invokevirtual #60
1363: ldc           #15
1365: invokevirtual #13
1368: dconst_0
1369: invokevirtual #60
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: dload         50
1382: dconst_0
1383: dcmpl
1384: ifne          1391
1387: iconst_1
1388: goto          1392
1391: iconst_0
1392: invokestatic  #17
1395: aload         52
1397: invokestatic  #33
1400: new           #10
1403: dup
1404: invokespecial #11
1407: ldc           #12
1409: invokevirtual #13
1412: dload         56
1414: invokevirtual #60
1417: ldc           #15
1419: invokevirtual #13
1422: dconst_0
1423: invokevirtual #60
1426: ldc           #12
1428: invokevirtual #13
1431: invokevirtual #16
1434: dload         56
1436: dconst_0
1437: dcmpl
1438: ifne          1445
1441: iconst_1
1442: goto          1446
1445: iconst_0
1446: invokestatic  #17
1449: new           #10
1452: dup
1453: invokespecial #11
1456: ldc           #12
1458: invokevirtual #13
1461: dload         58
1463: invokevirtual #60
1466: ldc           #15
1468: invokevirtual #13
1471: dconst_0
1472: invokevirtual #60
1475: ldc           #12
1477: invokevirtual #13
1480: invokevirtual #16
1483: dload         58
1485: dconst_0
1486: dcmpl
1487: ifne          1494
1490: iconst_1
1491: goto          1495
1494: iconst_0
1495: invokestatic  #17
1498: new           #10
1501: dup
1502: invokespecial #11
1505: ldc           #12
1507: invokevirtual #13
1510: dload         60
1512: invokevirtual #60
1515: ldc           #15
1517: invokevirtual #13
1520: ldc2_w        #133
1523: invokevirtual #60
1526: ldc           #12
1528: invokevirtual #13
1531: invokevirtual #16
1534: dload         60
1536: ldc2_w        #133
1539: dcmpl
1540: ifne          1547
1543: iconst_1
1544: goto          1548
1547: iconst_0
1548: invokestatic  #17
1551: return
Exception table:
from    to  target type
480   501   504   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 726
End line: 795
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = rotation65.applyTo(vector3D68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.3078974289323514d) + "'", double67 == (-0.3078974289323514d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #135
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: aload_1
49: aload_2
50: invokevirtual #47
53: dstore_3
54: new           #43
57: dup
58: dconst_1
59: ldc2_w        #44
62: invokespecial #46
65: astore        5
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        6
80: aload         5
82: aload         6
84: invokevirtual #47
87: dstore        7
89: aload         6
91: invokevirtual #52
94: dstore        9
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        11
109: new           #43
112: dup
113: dconst_1
114: ldc2_w        #44
117: invokespecial #46
120: astore        12
122: aload         11
124: aload         12
126: invokevirtual #47
129: dstore        13
131: aload         12
133: invokevirtual #52
136: dstore        15
138: aload         6
140: aload         12
142: invokevirtual #53
145: dstore        17
147: new           #43
150: dup
151: dconst_1
152: ldc2_w        #44
155: invokespecial #46
158: astore        19
160: new           #43
163: dup
164: dconst_1
165: ldc2_w        #44
168: invokespecial #46
171: astore        20
173: new           #43
176: dup
177: dconst_1
178: ldc2_w        #44
181: invokespecial #46
184: astore        21
186: aload         20
188: aload         21
190: invokevirtual #47
193: dstore        22
195: aload         19
197: aload         21
199: invokestatic  #48
202: dstore        24
204: new           #43
207: dup
208: dconst_1
209: ldc2_w        #44
212: invokespecial #46
215: astore        26
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        28
243: aload         27
245: aload         28
247: invokevirtual #47
250: dstore        29
252: aload         26
254: aload         28
256: invokestatic  #48
259: dstore        31
261: aload         26
263: invokevirtual #49
266: istore        33
268: aload         19
270: aload         26
272: invokevirtual #50
275: dstore        34
277: aload         26
279: invokevirtual #54
282: astore        36
284: new           #43
287: dup
288: dconst_1
289: ldc2_w        #44
292: invokespecial #46
295: astore        37
297: new           #43
300: dup
301: dconst_1
302: ldc2_w        #44
305: invokespecial #46
308: astore        38
310: aload         37
312: aload         38
314: invokevirtual #47
317: dstore        39
319: aload         36
321: aload         37
323: invokevirtual #55
326: astore        41
328: aload         6
330: aload         41
332: invokevirtual #55
335: astore        42
337: aload_2
338: aload         41
340: invokevirtual #53
343: dstore        43
345: new           #43
348: dup
349: dconst_1
350: ldc2_w        #44
353: invokespecial #46
356: astore        45
358: aload         45
360: invokevirtual #136
363: dstore        46
365: aload         41
367: aload         45
369: invokevirtual #109
372: astore        48
374: new           #27
377: dup
378: aload         45
380: ldc2_w        #137
383: invokespecial #103
386: astore        49
388: aload         49
390: invokevirtual #139
393: dstore        50
395: aload         49
397: invokevirtual #94
400: dstore        52
402: aconst_null
403: astore        54
405: aload         49
407: aload         54
409: invokevirtual #140
412: astore        55
414: ldc           #20
416: invokestatic  #21
419: goto          424
422: astore        55
424: new           #10
427: dup
428: invokespecial #11
431: ldc           #12
433: invokevirtual #13
436: dload_3
437: invokevirtual #60
440: ldc           #15
442: invokevirtual #13
445: dconst_0
446: invokevirtual #60
449: ldc           #12
451: invokevirtual #13
454: invokevirtual #16
457: dload_3
458: dconst_0
459: dcmpl
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #17
471: new           #10
474: dup
475: invokespecial #11
478: ldc           #12
480: invokevirtual #13
483: dload         7
485: invokevirtual #60
488: ldc           #15
490: invokevirtual #13
493: dconst_0
494: invokevirtual #60
497: ldc           #12
499: invokevirtual #13
502: invokevirtual #16
505: dload         7
507: dconst_0
508: dcmpl
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #17
520: new           #10
523: dup
524: invokespecial #11
527: ldc           #12
529: invokevirtual #13
532: dload         9
534: invokevirtual #60
537: ldc           #15
539: invokevirtual #13
542: ldc2_w        #61
545: invokevirtual #60
548: ldc           #12
550: invokevirtual #13
553: invokevirtual #16
556: dload         9
558: ldc2_w        #61
561: dcmpl
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #17
573: new           #10
576: dup
577: invokespecial #11
580: ldc           #12
582: invokevirtual #13
585: dload         13
587: invokevirtual #60
590: ldc           #15
592: invokevirtual #13
595: dconst_0
596: invokevirtual #60
599: ldc           #12
601: invokevirtual #13
604: invokevirtual #16
607: dload         13
609: dconst_0
610: dcmpl
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #17
622: new           #10
625: dup
626: invokespecial #11
629: ldc           #12
631: invokevirtual #13
634: dload         15
636: invokevirtual #60
639: ldc           #15
641: invokevirtual #13
644: ldc2_w        #61
647: invokevirtual #60
650: ldc           #12
652: invokevirtual #13
655: invokevirtual #16
658: dload         15
660: ldc2_w        #61
663: dcmpl
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #17
675: new           #10
678: dup
679: invokespecial #11
682: ldc           #12
684: invokevirtual #13
687: dload         17
689: invokevirtual #60
692: ldc           #15
694: invokevirtual #13
697: dconst_0
698: invokevirtual #60
701: ldc           #12
703: invokevirtual #13
706: invokevirtual #16
709: dload         17
711: dconst_0
712: dcmpl
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #17
724: new           #10
727: dup
728: invokespecial #11
731: ldc           #12
733: invokevirtual #13
736: dload         22
738: invokevirtual #60
741: ldc           #15
743: invokevirtual #13
746: dconst_0
747: invokevirtual #60
750: ldc           #12
752: invokevirtual #13
755: invokevirtual #16
758: dload         22
760: dconst_0
761: dcmpl
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #17
773: new           #10
776: dup
777: invokespecial #11
780: ldc           #12
782: invokevirtual #13
785: dload         24
787: invokevirtual #60
790: ldc           #15
792: invokevirtual #13
795: dconst_0
796: invokevirtual #60
799: ldc           #12
801: invokevirtual #13
804: invokevirtual #16
807: dload         24
809: dconst_0
810: dcmpl
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         29
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         29
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: new           #10
874: dup
875: invokespecial #11
878: ldc           #12
880: invokevirtual #13
883: dload         31
885: invokevirtual #60
888: ldc           #15
890: invokevirtual #13
893: dconst_0
894: invokevirtual #60
897: ldc           #12
899: invokevirtual #13
902: invokevirtual #16
905: dload         31
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: iload         33
934: invokevirtual #14
937: ldc           #15
939: invokevirtual #13
942: iconst_0
943: invokevirtual #14
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: iload         33
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #17
967: new           #10
970: dup
971: invokespecial #11
974: ldc           #12
976: invokevirtual #13
979: dload         34
981: invokevirtual #60
984: ldc           #15
986: invokevirtual #13
989: dconst_0
990: invokevirtual #60
993: ldc           #12
995: invokevirtual #13
998: invokevirtual #16
1001: dload         34
1003: dconst_0
1004: dcmpl
1005: ifne          1012
1008: iconst_1
1009: goto          1013
1012: iconst_0
1013: invokestatic  #17
1016: aload         36
1018: invokestatic  #33
1021: new           #10
1024: dup
1025: invokespecial #11
1028: ldc           #12
1030: invokevirtual #13
1033: dload         39
1035: invokevirtual #60
1038: ldc           #15
1040: invokevirtual #13
1043: dconst_0
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         39
1057: dconst_0
1058: dcmpl
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #17
1070: aload         41
1072: invokestatic  #33
1075: aload         42
1077: invokestatic  #33
1080: new           #10
1083: dup
1084: invokespecial #11
1087: ldc           #12
1089: invokevirtual #13
1092: dload         43
1094: invokevirtual #60
1097: ldc           #15
1099: invokevirtual #13
1102: ldc2_w        #63
1105: invokevirtual #60
1108: ldc           #12
1110: invokevirtual #13
1113: invokevirtual #16
1116: dload         43
1118: ldc2_w        #63
1121: dcmpl
1122: ifne          1129
1125: iconst_1
1126: goto          1130
1129: iconst_0
1130: invokestatic  #17
1133: new           #10
1136: dup
1137: invokespecial #11
1140: ldc           #12
1142: invokevirtual #13
1145: dload         46
1147: invokevirtual #60
1150: ldc           #15
1152: invokevirtual #13
1155: ldc2_w        #79
1158: invokevirtual #60
1161: ldc           #12
1163: invokevirtual #13
1166: invokevirtual #16
1169: dload         46
1171: ldc2_w        #79
1174: dcmpl
1175: ifne          1182
1178: iconst_1
1179: goto          1183
1182: iconst_0
1183: invokestatic  #17
1186: aload         48
1188: invokestatic  #33
1191: new           #10
1194: dup
1195: invokespecial #11
1198: ldc           #12
1200: invokevirtual #13
1203: dload         50
1205: invokevirtual #60
1208: ldc           #15
1210: invokevirtual #13
1213: ldc2_w        #141
1216: invokevirtual #60
1219: ldc           #12
1221: invokevirtual #13
1224: invokevirtual #16
1227: dload         50
1229: ldc2_w        #141
1232: dcmpl
1233: ifne          1240
1236: iconst_1
1237: goto          1241
1240: iconst_0
1241: invokestatic  #17
1244: new           #10
1247: dup
1248: invokespecial #11
1251: ldc           #12
1253: invokevirtual #13
1256: dload         52
1258: invokevirtual #60
1261: ldc           #15
1263: invokevirtual #13
1266: ldc2_w        #143
1269: invokevirtual #60
1272: ldc           #12
1274: invokevirtual #13
1277: invokevirtual #16
1280: dload         52
1282: ldc2_w        #143
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: return
Exception table:
from    to  target type
405   419   422   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 798
End line: 881
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation5.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray93 = rotation5.getAngles(rotationOrder92);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #146
31: ldc2_w        #72
34: ldc2_w        #148
37: dconst_1
38: iconst_0
39: invokespecial #150
42: astore_1
43: new           #43
46: dup
47: dconst_1
48: ldc2_w        #44
51: invokespecial #46
54: astore_2
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore_3
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        4
80: aload_3
81: aload         4
83: invokevirtual #47
86: dstore        5
88: aload_2
89: aload         4
91: invokestatic  #48
94: dstore        7
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        9
109: new           #43
112: dup
113: dconst_1
114: ldc2_w        #44
117: invokespecial #46
120: astore        10
122: new           #43
125: dup
126: dconst_1
127: ldc2_w        #44
130: invokespecial #46
133: astore        11
135: aload         10
137: aload         11
139: invokevirtual #47
142: dstore        12
144: aload         9
146: aload         11
148: invokestatic  #48
151: dstore        14
153: aload         9
155: invokevirtual #49
158: istore        16
160: aload_2
161: aload         9
163: invokevirtual #50
166: dstore        17
168: aload         9
170: invokevirtual #51
173: astore        19
175: new           #43
178: dup
179: dconst_1
180: ldc2_w        #44
183: invokespecial #46
186: astore        20
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        21
201: aload         20
203: aload         21
205: invokevirtual #47
208: dstore        22
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        24
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        25
236: aload         24
238: aload         25
240: invokevirtual #47
243: dstore        26
245: aload         25
247: invokevirtual #52
250: dstore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        30
265: new           #43
268: dup
269: dconst_1
270: ldc2_w        #44
273: invokespecial #46
276: astore        31
278: aload         30
280: aload         31
282: invokevirtual #47
285: dstore        32
287: aload         31
289: invokevirtual #52
292: dstore        34
294: aload         25
296: aload         31
298: invokevirtual #53
301: dstore        36
303: new           #43
306: dup
307: dconst_1
308: ldc2_w        #44
311: invokespecial #46
314: astore        38
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        39
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        40
342: aload         39
344: aload         40
346: invokevirtual #47
349: dstore        41
351: aload         38
353: aload         40
355: invokestatic  #48
358: dstore        43
360: new           #43
363: dup
364: dconst_1
365: ldc2_w        #44
368: invokespecial #46
371: astore        45
373: new           #43
376: dup
377: dconst_1
378: ldc2_w        #44
381: invokespecial #46
384: astore        46
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        47
399: aload         46
401: aload         47
403: invokevirtual #47
406: dstore        48
408: aload         45
410: aload         47
412: invokestatic  #48
415: dstore        50
417: aload         45
419: invokevirtual #49
422: istore        52
424: aload         38
426: aload         45
428: invokevirtual #50
431: dstore        53
433: aload         45
435: invokevirtual #54
438: astore        55
440: new           #43
443: dup
444: dconst_1
445: ldc2_w        #44
448: invokespecial #46
451: astore        56
453: new           #43
456: dup
457: dconst_1
458: ldc2_w        #44
461: invokespecial #46
464: astore        57
466: aload         56
468: aload         57
470: invokevirtual #47
473: dstore        58
475: aload         55
477: aload         56
479: invokevirtual #55
482: astore        60
484: aload         25
486: aload         60
488: invokevirtual #55
491: astore        61
493: aload         21
495: aload         60
497: invokevirtual #53
500: dstore        62
502: new           #27
505: dup
506: aload         9
508: aload         21
510: invokespecial #56
513: astore        64
515: aload_1
516: aload         21
518: invokevirtual #98
521: astore        65
523: aconst_null
524: astore        66
526: aload_1
527: aload         66
529: invokevirtual #57
532: astore        67
534: ldc           #58
536: invokestatic  #21
539: goto          544
542: astore        67
544: new           #10
547: dup
548: invokespecial #11
551: ldc           #12
553: invokevirtual #13
556: dload         5
558: invokevirtual #60
561: ldc           #15
563: invokevirtual #13
566: dconst_0
567: invokevirtual #60
570: ldc           #12
572: invokevirtual #13
575: invokevirtual #16
578: dload         5
580: dconst_0
581: dcmpl
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #17
593: new           #10
596: dup
597: invokespecial #11
600: ldc           #12
602: invokevirtual #13
605: dload         7
607: invokevirtual #60
610: ldc           #15
612: invokevirtual #13
615: dconst_0
616: invokevirtual #60
619: ldc           #12
621: invokevirtual #13
624: invokevirtual #16
627: dload         7
629: dconst_0
630: dcmpl
631: ifne          638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #17
642: new           #10
645: dup
646: invokespecial #11
649: ldc           #12
651: invokevirtual #13
654: dload         12
656: invokevirtual #60
659: ldc           #15
661: invokevirtual #13
664: dconst_0
665: invokevirtual #60
668: ldc           #12
670: invokevirtual #13
673: invokevirtual #16
676: dload         12
678: dconst_0
679: dcmpl
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #17
691: new           #10
694: dup
695: invokespecial #11
698: ldc           #12
700: invokevirtual #13
703: dload         14
705: invokevirtual #60
708: ldc           #15
710: invokevirtual #13
713: dconst_0
714: invokevirtual #60
717: ldc           #12
719: invokevirtual #13
722: invokevirtual #16
725: dload         14
727: dconst_0
728: dcmpl
729: ifne          736
732: iconst_1
733: goto          737
736: iconst_0
737: invokestatic  #17
740: new           #10
743: dup
744: invokespecial #11
747: ldc           #12
749: invokevirtual #13
752: iload         16
754: invokevirtual #14
757: ldc           #15
759: invokevirtual #13
762: iconst_0
763: invokevirtual #14
766: ldc           #12
768: invokevirtual #13
771: invokevirtual #16
774: iload         16
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #17
787: new           #10
790: dup
791: invokespecial #11
794: ldc           #12
796: invokevirtual #13
799: dload         17
801: invokevirtual #60
804: ldc           #15
806: invokevirtual #13
809: dconst_0
810: invokevirtual #60
813: ldc           #12
815: invokevirtual #13
818: invokevirtual #16
821: dload         17
823: dconst_0
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: aload         19
838: invokestatic  #33
841: new           #10
844: dup
845: invokespecial #11
848: ldc           #12
850: invokevirtual #13
853: dload         22
855: invokevirtual #60
858: ldc           #15
860: invokevirtual #13
863: dconst_0
864: invokevirtual #60
867: ldc           #12
869: invokevirtual #13
872: invokevirtual #16
875: dload         22
877: dconst_0
878: dcmpl
879: ifne          886
882: iconst_1
883: goto          887
886: iconst_0
887: invokestatic  #17
890: new           #10
893: dup
894: invokespecial #11
897: ldc           #12
899: invokevirtual #13
902: dload         26
904: invokevirtual #60
907: ldc           #15
909: invokevirtual #13
912: dconst_0
913: invokevirtual #60
916: ldc           #12
918: invokevirtual #13
921: invokevirtual #16
924: dload         26
926: dconst_0
927: dcmpl
928: ifne          935
931: iconst_1
932: goto          936
935: iconst_0
936: invokestatic  #17
939: new           #10
942: dup
943: invokespecial #11
946: ldc           #12
948: invokevirtual #13
951: dload         28
953: invokevirtual #60
956: ldc           #15
958: invokevirtual #13
961: ldc2_w        #61
964: invokevirtual #60
967: ldc           #12
969: invokevirtual #13
972: invokevirtual #16
975: dload         28
977: ldc2_w        #61
980: dcmpl
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #17
992: new           #10
995: dup
996: invokespecial #11
999: ldc           #12
1001: invokevirtual #13
1004: dload         32
1006: invokevirtual #60
1009: ldc           #15
1011: invokevirtual #13
1014: dconst_0
1015: invokevirtual #60
1018: ldc           #12
1020: invokevirtual #13
1023: invokevirtual #16
1026: dload         32
1028: dconst_0
1029: dcmpl
1030: ifne          1037
1033: iconst_1
1034: goto          1038
1037: iconst_0
1038: invokestatic  #17
1041: new           #10
1044: dup
1045: invokespecial #11
1048: ldc           #12
1050: invokevirtual #13
1053: dload         34
1055: invokevirtual #60
1058: ldc           #15
1060: invokevirtual #13
1063: ldc2_w        #61
1066: invokevirtual #60
1069: ldc           #12
1071: invokevirtual #13
1074: invokevirtual #16
1077: dload         34
1079: ldc2_w        #61
1082: dcmpl
1083: ifne          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #17
1094: new           #10
1097: dup
1098: invokespecial #11
1101: ldc           #12
1103: invokevirtual #13
1106: dload         36
1108: invokevirtual #60
1111: ldc           #15
1113: invokevirtual #13
1116: dconst_0
1117: invokevirtual #60
1120: ldc           #12
1122: invokevirtual #13
1125: invokevirtual #16
1128: dload         36
1130: dconst_0
1131: dcmpl
1132: ifne          1139
1135: iconst_1
1136: goto          1140
1139: iconst_0
1140: invokestatic  #17
1143: new           #10
1146: dup
1147: invokespecial #11
1150: ldc           #12
1152: invokevirtual #13
1155: dload         41
1157: invokevirtual #60
1160: ldc           #15
1162: invokevirtual #13
1165: dconst_0
1166: invokevirtual #60
1169: ldc           #12
1171: invokevirtual #13
1174: invokevirtual #16
1177: dload         41
1179: dconst_0
1180: dcmpl
1181: ifne          1188
1184: iconst_1
1185: goto          1189
1188: iconst_0
1189: invokestatic  #17
1192: new           #10
1195: dup
1196: invokespecial #11
1199: ldc           #12
1201: invokevirtual #13
1204: dload         43
1206: invokevirtual #60
1209: ldc           #15
1211: invokevirtual #13
1214: dconst_0
1215: invokevirtual #60
1218: ldc           #12
1220: invokevirtual #13
1223: invokevirtual #16
1226: dload         43
1228: dconst_0
1229: dcmpl
1230: ifne          1237
1233: iconst_1
1234: goto          1238
1237: iconst_0
1238: invokestatic  #17
1241: new           #10
1244: dup
1245: invokespecial #11
1248: ldc           #12
1250: invokevirtual #13
1253: dload         48
1255: invokevirtual #60
1258: ldc           #15
1260: invokevirtual #13
1263: dconst_0
1264: invokevirtual #60
1267: ldc           #12
1269: invokevirtual #13
1272: invokevirtual #16
1275: dload         48
1277: dconst_0
1278: dcmpl
1279: ifne          1286
1282: iconst_1
1283: goto          1287
1286: iconst_0
1287: invokestatic  #17
1290: new           #10
1293: dup
1294: invokespecial #11
1297: ldc           #12
1299: invokevirtual #13
1302: dload         50
1304: invokevirtual #60
1307: ldc           #15
1309: invokevirtual #13
1312: dconst_0
1313: invokevirtual #60
1316: ldc           #12
1318: invokevirtual #13
1321: invokevirtual #16
1324: dload         50
1326: dconst_0
1327: dcmpl
1328: ifne          1335
1331: iconst_1
1332: goto          1336
1335: iconst_0
1336: invokestatic  #17
1339: new           #10
1342: dup
1343: invokespecial #11
1346: ldc           #12
1348: invokevirtual #13
1351: iload         52
1353: invokevirtual #14
1356: ldc           #15
1358: invokevirtual #13
1361: iconst_0
1362: invokevirtual #14
1365: ldc           #12
1367: invokevirtual #13
1370: invokevirtual #16
1373: iload         52
1375: ifne          1382
1378: iconst_1
1379: goto          1383
1382: iconst_0
1383: invokestatic  #17
1386: new           #10
1389: dup
1390: invokespecial #11
1393: ldc           #12
1395: invokevirtual #13
1398: dload         53
1400: invokevirtual #60
1403: ldc           #15
1405: invokevirtual #13
1408: dconst_0
1409: invokevirtual #60
1412: ldc           #12
1414: invokevirtual #13
1417: invokevirtual #16
1420: dload         53
1422: dconst_0
1423: dcmpl
1424: ifne          1431
1427: iconst_1
1428: goto          1432
1431: iconst_0
1432: invokestatic  #17
1435: aload         55
1437: invokestatic  #33
1440: new           #10
1443: dup
1444: invokespecial #11
1447: ldc           #12
1449: invokevirtual #13
1452: dload         58
1454: invokevirtual #60
1457: ldc           #15
1459: invokevirtual #13
1462: dconst_0
1463: invokevirtual #60
1466: ldc           #12
1468: invokevirtual #13
1471: invokevirtual #16
1474: dload         58
1476: dconst_0
1477: dcmpl
1478: ifne          1485
1481: iconst_1
1482: goto          1486
1485: iconst_0
1486: invokestatic  #17
1489: aload         60
1491: invokestatic  #33
1494: aload         61
1496: invokestatic  #33
1499: new           #10
1502: dup
1503: invokespecial #11
1506: ldc           #12
1508: invokevirtual #13
1511: dload         62
1513: invokevirtual #60
1516: ldc           #15
1518: invokevirtual #13
1521: ldc2_w        #63
1524: invokevirtual #60
1527: ldc           #12
1529: invokevirtual #13
1532: invokevirtual #16
1535: dload         62
1537: ldc2_w        #63
1540: dcmpl
1541: ifne          1548
1544: iconst_1
1545: goto          1549
1548: iconst_0
1549: invokestatic  #17
1552: aload         65
1554: invokestatic  #33
1557: return
Exception table:
from    to  target type
526   539   542   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 884
End line: 959
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        double[] doubleArray1 = new double[] { (byte) 1 };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray1, doubleArray2);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection4 = null;
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray8 = new double[] { 0 };
        double[] doubleArray10 = new double[] { 0 };
        double[] doubleArray12 = new double[] { 0 };
        double[] doubleArray14 = new double[] { 0 };
        double[][] doubleArray15 = new double[][] { doubleArray6, doubleArray8, doubleArray10, doubleArray12, doubleArray14 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray1, orderDirection4, doubleArray15);
        double[] doubleArray18 = new double[] { (byte) 1 };
        double[] doubleArray19 = new double[] {};
        boolean boolean20 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray18, doubleArray19);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection21 = null;
        double[] doubleArray23 = new double[] { 0 };
        double[] doubleArray25 = new double[] { 0 };
        double[] doubleArray27 = new double[] { 0 };
        double[] doubleArray29 = new double[] { 0 };
        double[] doubleArray31 = new double[] { 0 };
        double[][] doubleArray32 = new double[][] { doubleArray23, doubleArray25, doubleArray27, doubleArray29, doubleArray31 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray18, orderDirection21, doubleArray32);
        double double34 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray1, doubleArray18);
        double[] doubleArray36 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray1, 10);
        double[] doubleArray38 = new double[] { 0.0d };
        double[][] doubleArray39 = new double[][] { doubleArray38 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray1, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation42 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray39, 8.065817517094494E67d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: iconst_1
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: astore_1
32: iconst_0
33: newarray       double
35: astore_2
36: aload_1
37: aload_2
38: invokestatic  #24
41: istore_3
42: aconst_null
43: astore        4
45: iconst_1
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: astore        5
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: astore        6
63: iconst_1
64: newarray       double
66: dup
67: iconst_0
68: dconst_0
69: dastore
70: astore        7
72: iconst_1
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: astore        8
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: astore        9
90: iconst_5
91: anewarray     #25
94: dup
95: iconst_0
96: aload         5
98: aastore
99: dup
100: iconst_1
101: aload         6
103: aastore
104: dup
105: iconst_2
106: aload         7
108: aastore
109: dup
110: iconst_3
111: aload         8
113: aastore
114: dup
115: iconst_4
116: aload         9
118: aastore
119: astore        10
121: aload_1
122: aload         4
124: aload         10
126: invokestatic  #26
129: iconst_1
130: newarray       double
132: dup
133: iconst_0
134: dconst_1
135: dastore
136: astore        11
138: iconst_0
139: newarray       double
141: astore        12
143: aload         11
145: aload         12
147: invokestatic  #24
150: istore        13
152: aconst_null
153: astore        14
155: iconst_1
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: astore        15
164: iconst_1
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: astore        16
173: iconst_1
174: newarray       double
176: dup
177: iconst_0
178: dconst_0
179: dastore
180: astore        17
182: iconst_1
183: newarray       double
185: dup
186: iconst_0
187: dconst_0
188: dastore
189: astore        18
191: iconst_1
192: newarray       double
194: dup
195: iconst_0
196: dconst_0
197: dastore
198: astore        19
200: iconst_5
201: anewarray     #25
204: dup
205: iconst_0
206: aload         15
208: aastore
209: dup
210: iconst_1
211: aload         16
213: aastore
214: dup
215: iconst_2
216: aload         17
218: aastore
219: dup
220: iconst_3
221: aload         18
223: aastore
224: dup
225: iconst_4
226: aload         19
228: aastore
229: astore        20
231: aload         11
233: aload         14
235: aload         20
237: invokestatic  #26
240: aload_1
241: aload         11
243: invokestatic  #152
246: dstore        21
248: aload_1
249: bipush        10
251: invokestatic  #153
254: astore        23
256: iconst_1
257: newarray       double
259: dup
260: iconst_0
261: dconst_0
262: dastore
263: astore        24
265: iconst_1
266: anewarray     #25
269: dup
270: iconst_0
271: aload         24
273: aastore
274: astore        25
276: aload_1
277: aload         25
279: invokestatic  #154
282: new           #27
285: dup
286: aload         25
288: ldc2_w        #155
291: invokespecial #30
294: astore        26
296: ldc           #157
298: invokestatic  #21
301: goto          306
304: astore        26
306: aload_1
307: invokestatic  #33
310: aload_1
311: invokestatic  #34
314: ldc           #35
316: invokestatic  #36
319: aload_2
320: invokestatic  #33
323: aload_2
324: invokestatic  #34
327: ldc           #37
329: invokestatic  #36
332: new           #10
335: dup
336: invokespecial #11
339: ldc           #12
341: invokevirtual #13
344: iload_3
345: invokevirtual #14
348: ldc           #15
350: invokevirtual #13
353: iconst_0
354: invokevirtual #14
357: ldc           #12
359: invokevirtual #13
362: invokevirtual #16
365: iload_3
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #17
377: aload         5
379: invokestatic  #33
382: aload         5
384: invokestatic  #34
387: ldc           #38
389: invokestatic  #36
392: aload         6
394: invokestatic  #33
397: aload         6
399: invokestatic  #34
402: ldc           #38
404: invokestatic  #36
407: aload         7
409: invokestatic  #33
412: aload         7
414: invokestatic  #34
417: ldc           #38
419: invokestatic  #36
422: aload         8
424: invokestatic  #33
427: aload         8
429: invokestatic  #34
432: ldc           #38
434: invokestatic  #36
437: aload         9
439: invokestatic  #33
442: aload         9
444: invokestatic  #34
447: ldc           #38
449: invokestatic  #36
452: aload         10
454: invokestatic  #33
457: aload         11
459: invokestatic  #33
462: aload         11
464: invokestatic  #34
467: ldc           #35
469: invokestatic  #36
472: aload         12
474: invokestatic  #33
477: aload         12
479: invokestatic  #34
482: ldc           #37
484: invokestatic  #36
487: new           #10
490: dup
491: invokespecial #11
494: ldc           #12
496: invokevirtual #13
499: iload         13
501: invokevirtual #14
504: ldc           #15
506: invokevirtual #13
509: iconst_0
510: invokevirtual #14
513: ldc           #12
515: invokevirtual #13
518: invokevirtual #16
521: iload         13
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #17
534: aload         15
536: invokestatic  #33
539: aload         15
541: invokestatic  #34
544: ldc           #38
546: invokestatic  #36
549: aload         16
551: invokestatic  #33
554: aload         16
556: invokestatic  #34
559: ldc           #38
561: invokestatic  #36
564: aload         17
566: invokestatic  #33
569: aload         17
571: invokestatic  #34
574: ldc           #38
576: invokestatic  #36
579: aload         18
581: invokestatic  #33
584: aload         18
586: invokestatic  #34
589: ldc           #38
591: invokestatic  #36
594: aload         19
596: invokestatic  #33
599: aload         19
601: invokestatic  #34
604: ldc           #38
606: invokestatic  #36
609: aload         20
611: invokestatic  #33
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: dload         21
628: invokevirtual #60
631: ldc           #15
633: invokevirtual #13
636: dconst_0
637: invokevirtual #60
640: ldc           #12
642: invokevirtual #13
645: invokevirtual #16
648: dload         21
650: dconst_0
651: dcmpl
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #17
663: aload         23
665: invokestatic  #33
668: aload         23
670: invokestatic  #34
673: ldc           #158
675: invokestatic  #36
678: aload         24
680: invokestatic  #33
683: aload         24
685: invokestatic  #34
688: ldc           #38
690: invokestatic  #36
693: aload         25
695: invokestatic  #33
698: return
Exception table:
from    to  target type
282   301   304   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 962
End line: 1051
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D98 = rotation85.getAxis();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(vector3D98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #96
519: astore        69
521: new           #27
524: dup
525: ldc2_w        #146
528: ldc2_w        #72
531: ldc2_w        #148
534: dconst_1
535: iconst_0
536: invokespecial #150
539: astore        70
541: aload         70
543: invokevirtual #96
546: astore        71
548: aload         70
550: invokevirtual #139
553: dstore        72
555: aload         64
557: aload         70
559: invokevirtual #160
562: astore        74
564: aload         64
566: invokevirtual #96
569: astore        75
571: new           #10
574: dup
575: invokespecial #11
578: ldc           #12
580: invokevirtual #13
583: dload         4
585: invokevirtual #60
588: ldc           #15
590: invokevirtual #13
593: dconst_0
594: invokevirtual #60
597: ldc           #12
599: invokevirtual #13
602: invokevirtual #16
605: dload         4
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         6
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         6
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         11
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         11
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: dload         13
732: invokevirtual #60
735: ldc           #15
737: invokevirtual #13
740: dconst_0
741: invokevirtual #60
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: dload         13
754: dconst_0
755: dcmpl
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #17
767: new           #10
770: dup
771: invokespecial #11
774: ldc           #12
776: invokevirtual #13
779: iload         15
781: invokevirtual #14
784: ldc           #15
786: invokevirtual #13
789: iconst_0
790: invokevirtual #14
793: ldc           #12
795: invokevirtual #13
798: invokevirtual #16
801: iload         15
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: new           #10
817: dup
818: invokespecial #11
821: ldc           #12
823: invokevirtual #13
826: dload         16
828: invokevirtual #60
831: ldc           #15
833: invokevirtual #13
836: dconst_0
837: invokevirtual #60
840: ldc           #12
842: invokevirtual #13
845: invokevirtual #16
848: dload         16
850: dconst_0
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #17
863: aload         18
865: invokestatic  #33
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         21
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         21
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         25
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: dconst_0
940: invokevirtual #60
943: ldc           #12
945: invokevirtual #13
948: invokevirtual #16
951: dload         25
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         27
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: ldc2_w        #61
991: invokevirtual #60
994: ldc           #12
996: invokevirtual #13
999: invokevirtual #16
1002: dload         27
1004: ldc2_w        #61
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         31
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: dconst_0
1042: invokevirtual #60
1045: ldc           #12
1047: invokevirtual #13
1050: invokevirtual #16
1053: dload         31
1055: dconst_0
1056: dcmpl
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #17
1068: new           #10
1071: dup
1072: invokespecial #11
1075: ldc           #12
1077: invokevirtual #13
1080: dload         33
1082: invokevirtual #60
1085: ldc           #15
1087: invokevirtual #13
1090: ldc2_w        #61
1093: invokevirtual #60
1096: ldc           #12
1098: invokevirtual #13
1101: invokevirtual #16
1104: dload         33
1106: ldc2_w        #61
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         35
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         35
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         40
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         40
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         42
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         42
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         47
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         47
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: dload         49
1331: invokevirtual #60
1334: ldc           #15
1336: invokevirtual #13
1339: dconst_0
1340: invokevirtual #60
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: dload         49
1353: dconst_0
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #17
1366: new           #10
1369: dup
1370: invokespecial #11
1373: ldc           #12
1375: invokevirtual #13
1378: iload         51
1380: invokevirtual #14
1383: ldc           #15
1385: invokevirtual #13
1388: iconst_0
1389: invokevirtual #14
1392: ldc           #12
1394: invokevirtual #13
1397: invokevirtual #16
1400: iload         51
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: new           #10
1416: dup
1417: invokespecial #11
1420: ldc           #12
1422: invokevirtual #13
1425: dload         52
1427: invokevirtual #60
1430: ldc           #15
1432: invokevirtual #13
1435: dconst_0
1436: invokevirtual #60
1439: ldc           #12
1441: invokevirtual #13
1444: invokevirtual #16
1447: dload         52
1449: dconst_0
1450: dcmpl
1451: ifne          1458
1454: iconst_1
1455: goto          1459
1458: iconst_0
1459: invokestatic  #17
1462: aload         54
1464: invokestatic  #33
1467: new           #10
1470: dup
1471: invokespecial #11
1474: ldc           #12
1476: invokevirtual #13
1479: dload         57
1481: invokevirtual #60
1484: ldc           #15
1486: invokevirtual #13
1489: dconst_0
1490: invokevirtual #60
1493: ldc           #12
1495: invokevirtual #13
1498: invokevirtual #16
1501: dload         57
1503: dconst_0
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: aload         59
1518: invokestatic  #33
1521: aload         60
1523: invokestatic  #33
1526: new           #10
1529: dup
1530: invokespecial #11
1533: ldc           #12
1535: invokevirtual #13
1538: dload         61
1540: invokevirtual #60
1543: ldc           #15
1545: invokevirtual #13
1548: ldc2_w        #63
1551: invokevirtual #60
1554: ldc           #12
1556: invokevirtual #13
1559: invokevirtual #16
1562: dload         61
1564: ldc2_w        #63
1567: dcmpl
1568: ifne          1575
1571: iconst_1
1572: goto          1576
1575: iconst_0
1576: invokestatic  #17
1579: aload         64
1581: invokestatic  #33
1584: new           #10
1587: dup
1588: invokespecial #11
1591: ldc           #12
1593: invokevirtual #13
1596: dload         65
1598: invokevirtual #60
1601: ldc           #15
1603: invokevirtual #13
1606: dconst_0
1607: invokevirtual #60
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: dload         65
1620: dconst_0
1621: dcmpl
1622: ifne          1629
1625: iconst_1
1626: goto          1630
1629: iconst_0
1630: invokestatic  #17
1633: new           #10
1636: dup
1637: invokespecial #11
1640: ldc           #12
1642: invokevirtual #13
1645: dload         67
1647: invokevirtual #60
1650: ldc           #15
1652: invokevirtual #13
1655: dconst_0
1656: invokevirtual #60
1659: ldc           #12
1661: invokevirtual #13
1664: invokevirtual #16
1667: dload         67
1669: dconst_0
1670: dcmpl
1671: ifne          1678
1674: iconst_1
1675: goto          1679
1678: iconst_0
1679: invokestatic  #17
1682: aload         69
1684: invokestatic  #33
1687: aload         71
1689: invokestatic  #33
1692: new           #10
1695: dup
1696: invokespecial #11
1699: ldc           #12
1701: invokevirtual #13
1704: dload         72
1706: invokevirtual #60
1709: ldc           #15
1711: invokevirtual #13
1714: ldc2_w        #148
1717: invokevirtual #60
1720: ldc           #12
1722: invokevirtual #13
1725: invokevirtual #16
1728: dload         72
1730: ldc2_w        #148
1733: dcmpl
1734: ifne          1741
1737: iconst_1
1738: goto          1742
1741: iconst_0
1742: invokestatic  #17
1745: aload         74
1747: invokestatic  #33
1750: aload         75
1752: invokestatic  #33
1755: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 1054
End line: 1148
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        double double87 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D79, vector3D85);
        boolean boolean88 = vector3D79.isInfinite();
        double double89 = vector3D68.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector91 = vector3D65.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D90);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D65.orthogonal();
        double double93 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, 2.7681156723791426E13d);
        java.text.NumberFormat numberFormat96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = vector3D2.toString(numberFormat96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(euclidean3DVector91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + Double.POSITIVE_INFINITY + "'", double93 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: aload_1
75: invokevirtual #49
78: istore        8
80: aload_1
81: invokevirtual #162
84: dstore        9
86: new           #43
89: dup
90: dconst_1
91: ldc2_w        #44
94: invokespecial #46
97: astore        11
99: new           #43
102: dup
103: dconst_1
104: ldc2_w        #44
107: invokespecial #46
110: astore        12
112: aload         11
114: aload         12
116: invokevirtual #47
119: dstore        13
121: aload         12
123: invokevirtual #52
126: dstore        15
128: new           #43
131: dup
132: dconst_1
133: ldc2_w        #44
136: invokespecial #46
139: astore        17
141: new           #43
144: dup
145: dconst_1
146: ldc2_w        #44
149: invokespecial #46
152: astore        18
154: aload         17
156: aload         18
158: invokevirtual #47
161: dstore        19
163: aload         18
165: invokevirtual #52
168: dstore        21
170: aload         12
172: aload         18
174: invokevirtual #53
177: dstore        23
179: new           #43
182: dup
183: dconst_1
184: ldc2_w        #44
187: invokespecial #46
190: astore        25
192: new           #43
195: dup
196: dconst_1
197: ldc2_w        #44
200: invokespecial #46
203: astore        26
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        27
218: aload         26
220: aload         27
222: invokevirtual #47
225: dstore        28
227: aload         25
229: aload         27
231: invokestatic  #48
234: dstore        30
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        32
249: new           #43
252: dup
253: dconst_1
254: ldc2_w        #44
257: invokespecial #46
260: astore        33
262: new           #43
265: dup
266: dconst_1
267: ldc2_w        #44
270: invokespecial #46
273: astore        34
275: aload         33
277: aload         34
279: invokevirtual #47
282: dstore        35
284: aload         32
286: aload         34
288: invokestatic  #48
291: dstore        37
293: aload         32
295: invokevirtual #49
298: istore        39
300: aload         25
302: aload         32
304: invokevirtual #50
307: dstore        40
309: aload         32
311: invokevirtual #54
314: astore        42
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        43
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        44
342: aload         43
344: aload         44
346: invokevirtual #47
349: dstore        45
351: aload         42
353: aload         43
355: invokevirtual #55
358: astore        47
360: aload         12
362: aload         47
364: invokevirtual #55
367: astore        48
369: new           #27
372: dup
373: aload_1
374: aload         12
376: invokespecial #56
379: astore        49
381: getstatic     #126
384: astore        50
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        51
399: new           #43
402: dup
403: dconst_1
404: ldc2_w        #44
407: invokespecial #46
410: astore        52
412: new           #43
415: dup
416: dconst_1
417: ldc2_w        #44
420: invokespecial #46
423: astore        53
425: aload         52
427: aload         53
429: invokevirtual #47
432: dstore        54
434: aload         51
436: aload         53
438: invokestatic  #48
441: dstore        56
443: new           #43
446: dup
447: dconst_1
448: ldc2_w        #44
451: invokespecial #46
454: astore        58
456: new           #43
459: dup
460: dconst_1
461: ldc2_w        #44
464: invokespecial #46
467: astore        59
469: new           #43
472: dup
473: dconst_1
474: ldc2_w        #44
477: invokespecial #46
480: astore        60
482: aload         59
484: aload         60
486: invokevirtual #47
489: dstore        61
491: aload         58
493: aload         60
495: invokestatic  #48
498: dstore        63
500: aload         58
502: invokevirtual #49
505: istore        65
507: aload         51
509: aload         58
511: invokevirtual #50
514: dstore        66
516: aload         58
518: invokevirtual #54
521: astore        68
523: aload         50
525: aload         68
527: invokevirtual #55
530: astore        69
532: aload         50
534: invokevirtual #163
537: astore        70
539: aload_1
540: aload         50
542: invokevirtual #50
545: dstore        71
547: new           #27
550: dup
551: aload_1
552: ldc2_w        #164
555: invokespecial #103
558: astore        73
560: aconst_null
561: astore        74
563: aload_1
564: aload         74
566: invokevirtual #166
569: astore        75
571: ldc           #20
573: invokestatic  #21
576: goto          581
579: astore        75
581: new           #10
584: dup
585: invokespecial #11
588: ldc           #12
590: invokevirtual #13
593: dload         4
595: invokevirtual #60
598: ldc           #15
600: invokevirtual #13
603: dconst_0
604: invokevirtual #60
607: ldc           #12
609: invokevirtual #13
612: invokevirtual #16
615: dload         4
617: dconst_0
618: dcmpl
619: ifne          626
622: iconst_1
623: goto          627
626: iconst_0
627: invokestatic  #17
630: new           #10
633: dup
634: invokespecial #11
637: ldc           #12
639: invokevirtual #13
642: dload         6
644: invokevirtual #60
647: ldc           #15
649: invokevirtual #13
652: dconst_0
653: invokevirtual #60
656: ldc           #12
658: invokevirtual #13
661: invokevirtual #16
664: dload         6
666: dconst_0
667: dcmpl
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #17
679: new           #10
682: dup
683: invokespecial #11
686: ldc           #12
688: invokevirtual #13
691: iload         8
693: invokevirtual #14
696: ldc           #15
698: invokevirtual #13
701: iconst_0
702: invokevirtual #14
705: ldc           #12
707: invokevirtual #13
710: invokevirtual #16
713: iload         8
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         9
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: ldc2_w        #167
751: invokevirtual #60
754: ldc           #12
756: invokevirtual #13
759: invokevirtual #16
762: dload         9
764: ldc2_w        #167
767: dcmpl
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #17
779: new           #10
782: dup
783: invokespecial #11
786: ldc           #12
788: invokevirtual #13
791: dload         13
793: invokevirtual #60
796: ldc           #15
798: invokevirtual #13
801: dconst_0
802: invokevirtual #60
805: ldc           #12
807: invokevirtual #13
810: invokevirtual #16
813: dload         13
815: dconst_0
816: dcmpl
817: ifne          824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #17
828: new           #10
831: dup
832: invokespecial #11
835: ldc           #12
837: invokevirtual #13
840: dload         15
842: invokevirtual #60
845: ldc           #15
847: invokevirtual #13
850: ldc2_w        #61
853: invokevirtual #60
856: ldc           #12
858: invokevirtual #13
861: invokevirtual #16
864: dload         15
866: ldc2_w        #61
869: dcmpl
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #17
881: new           #10
884: dup
885: invokespecial #11
888: ldc           #12
890: invokevirtual #13
893: dload         19
895: invokevirtual #60
898: ldc           #15
900: invokevirtual #13
903: dconst_0
904: invokevirtual #60
907: ldc           #12
909: invokevirtual #13
912: invokevirtual #16
915: dload         19
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #17
930: new           #10
933: dup
934: invokespecial #11
937: ldc           #12
939: invokevirtual #13
942: dload         21
944: invokevirtual #60
947: ldc           #15
949: invokevirtual #13
952: ldc2_w        #61
955: invokevirtual #60
958: ldc           #12
960: invokevirtual #13
963: invokevirtual #16
966: dload         21
968: ldc2_w        #61
971: dcmpl
972: ifne          979
975: iconst_1
976: goto          980
979: iconst_0
980: invokestatic  #17
983: new           #10
986: dup
987: invokespecial #11
990: ldc           #12
992: invokevirtual #13
995: dload         23
997: invokevirtual #60
1000: ldc           #15
1002: invokevirtual #13
1005: dconst_0
1006: invokevirtual #60
1009: ldc           #12
1011: invokevirtual #13
1014: invokevirtual #16
1017: dload         23
1019: dconst_0
1020: dcmpl
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #17
1032: new           #10
1035: dup
1036: invokespecial #11
1039: ldc           #12
1041: invokevirtual #13
1044: dload         28
1046: invokevirtual #60
1049: ldc           #15
1051: invokevirtual #13
1054: dconst_0
1055: invokevirtual #60
1058: ldc           #12
1060: invokevirtual #13
1063: invokevirtual #16
1066: dload         28
1068: dconst_0
1069: dcmpl
1070: ifne          1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #17
1081: new           #10
1084: dup
1085: invokespecial #11
1088: ldc           #12
1090: invokevirtual #13
1093: dload         30
1095: invokevirtual #60
1098: ldc           #15
1100: invokevirtual #13
1103: dconst_0
1104: invokevirtual #60
1107: ldc           #12
1109: invokevirtual #13
1112: invokevirtual #16
1115: dload         30
1117: dconst_0
1118: dcmpl
1119: ifne          1126
1122: iconst_1
1123: goto          1127
1126: iconst_0
1127: invokestatic  #17
1130: new           #10
1133: dup
1134: invokespecial #11
1137: ldc           #12
1139: invokevirtual #13
1142: dload         35
1144: invokevirtual #60
1147: ldc           #15
1149: invokevirtual #13
1152: dconst_0
1153: invokevirtual #60
1156: ldc           #12
1158: invokevirtual #13
1161: invokevirtual #16
1164: dload         35
1166: dconst_0
1167: dcmpl
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #17
1179: new           #10
1182: dup
1183: invokespecial #11
1186: ldc           #12
1188: invokevirtual #13
1191: dload         37
1193: invokevirtual #60
1196: ldc           #15
1198: invokevirtual #13
1201: dconst_0
1202: invokevirtual #60
1205: ldc           #12
1207: invokevirtual #13
1210: invokevirtual #16
1213: dload         37
1215: dconst_0
1216: dcmpl
1217: ifne          1224
1220: iconst_1
1221: goto          1225
1224: iconst_0
1225: invokestatic  #17
1228: new           #10
1231: dup
1232: invokespecial #11
1235: ldc           #12
1237: invokevirtual #13
1240: iload         39
1242: invokevirtual #14
1245: ldc           #15
1247: invokevirtual #13
1250: iconst_0
1251: invokevirtual #14
1254: ldc           #12
1256: invokevirtual #13
1259: invokevirtual #16
1262: iload         39
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #17
1275: new           #10
1278: dup
1279: invokespecial #11
1282: ldc           #12
1284: invokevirtual #13
1287: dload         40
1289: invokevirtual #60
1292: ldc           #15
1294: invokevirtual #13
1297: dconst_0
1298: invokevirtual #60
1301: ldc           #12
1303: invokevirtual #13
1306: invokevirtual #16
1309: dload         40
1311: dconst_0
1312: dcmpl
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #17
1324: aload         42
1326: invokestatic  #33
1329: new           #10
1332: dup
1333: invokespecial #11
1336: ldc           #12
1338: invokevirtual #13
1341: dload         45
1343: invokevirtual #60
1346: ldc           #15
1348: invokevirtual #13
1351: dconst_0
1352: invokevirtual #60
1355: ldc           #12
1357: invokevirtual #13
1360: invokevirtual #16
1363: dload         45
1365: dconst_0
1366: dcmpl
1367: ifne          1374
1370: iconst_1
1371: goto          1375
1374: iconst_0
1375: invokestatic  #17
1378: aload         47
1380: invokestatic  #33
1383: aload         48
1385: invokestatic  #33
1388: aload         50
1390: invokestatic  #33
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         54
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         54
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: new           #10
1445: dup
1446: invokespecial #11
1449: ldc           #12
1451: invokevirtual #13
1454: dload         56
1456: invokevirtual #60
1459: ldc           #15
1461: invokevirtual #13
1464: dconst_0
1465: invokevirtual #60
1468: ldc           #12
1470: invokevirtual #13
1473: invokevirtual #16
1476: dload         56
1478: dconst_0
1479: dcmpl
1480: ifne          1487
1483: iconst_1
1484: goto          1488
1487: iconst_0
1488: invokestatic  #17
1491: new           #10
1494: dup
1495: invokespecial #11
1498: ldc           #12
1500: invokevirtual #13
1503: dload         61
1505: invokevirtual #60
1508: ldc           #15
1510: invokevirtual #13
1513: dconst_0
1514: invokevirtual #60
1517: ldc           #12
1519: invokevirtual #13
1522: invokevirtual #16
1525: dload         61
1527: dconst_0
1528: dcmpl
1529: ifne          1536
1532: iconst_1
1533: goto          1537
1536: iconst_0
1537: invokestatic  #17
1540: new           #10
1543: dup
1544: invokespecial #11
1547: ldc           #12
1549: invokevirtual #13
1552: dload         63
1554: invokevirtual #60
1557: ldc           #15
1559: invokevirtual #13
1562: dconst_0
1563: invokevirtual #60
1566: ldc           #12
1568: invokevirtual #13
1571: invokevirtual #16
1574: dload         63
1576: dconst_0
1577: dcmpl
1578: ifne          1585
1581: iconst_1
1582: goto          1586
1585: iconst_0
1586: invokestatic  #17
1589: new           #10
1592: dup
1593: invokespecial #11
1596: ldc           #12
1598: invokevirtual #13
1601: iload         65
1603: invokevirtual #14
1606: ldc           #15
1608: invokevirtual #13
1611: iconst_0
1612: invokevirtual #14
1615: ldc           #12
1617: invokevirtual #13
1620: invokevirtual #16
1623: iload         65
1625: ifne          1632
1628: iconst_1
1629: goto          1633
1632: iconst_0
1633: invokestatic  #17
1636: new           #10
1639: dup
1640: invokespecial #11
1643: ldc           #12
1645: invokevirtual #13
1648: dload         66
1650: invokevirtual #60
1653: ldc           #15
1655: invokevirtual #13
1658: dconst_0
1659: invokevirtual #60
1662: ldc           #12
1664: invokevirtual #13
1667: invokevirtual #16
1670: dload         66
1672: dconst_0
1673: dcmpl
1674: ifne          1681
1677: iconst_1
1678: goto          1682
1681: iconst_0
1682: invokestatic  #17
1685: aload         68
1687: invokestatic  #33
1690: aload         69
1692: invokestatic  #33
1695: aload         70
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         71
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #133
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         71
1738: ldc2_w        #133
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: return
Exception table:
from    to  target type
563   576   579   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 1151
End line: 1155
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(101.0d, 2.9074628577456127E58d, 0.0d, 16384.0d, false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #170
31: ldc2_w        #172
34: dconst_0
35: ldc2_w        #174
38: iconst_0
39: invokespecial #150
42: astore_1
43: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 1158
End line: 1169
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 2.7681156723791426E13d, 1.151665335034499d, 3.4965075614664802d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #176
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #164
34: ldc2_w        #177
37: ldc2_w        #179
40: invokespecial #81
43: astore_2
44: ldc           #20
46: invokestatic  #21
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
26    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 1172
End line: 1257
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation5.applyInverseTo(vector3D36);
        double double92 = vector3D91.getNormSq();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = vector3D91.add(0.0d, euclidean3DVector94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.73559866222816E35d + "'", double92 == 8.73559866222816E35d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #146
31: ldc2_w        #72
34: ldc2_w        #148
37: dconst_1
38: iconst_0
39: invokespecial #150
42: astore_1
43: new           #43
46: dup
47: dconst_1
48: ldc2_w        #44
51: invokespecial #46
54: astore_2
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore_3
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        4
80: aload_3
81: aload         4
83: invokevirtual #47
86: dstore        5
88: aload_2
89: aload         4
91: invokestatic  #48
94: dstore        7
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        9
109: new           #43
112: dup
113: dconst_1
114: ldc2_w        #44
117: invokespecial #46
120: astore        10
122: new           #43
125: dup
126: dconst_1
127: ldc2_w        #44
130: invokespecial #46
133: astore        11
135: aload         10
137: aload         11
139: invokevirtual #47
142: dstore        12
144: aload         9
146: aload         11
148: invokestatic  #48
151: dstore        14
153: aload         9
155: invokevirtual #49
158: istore        16
160: aload_2
161: aload         9
163: invokevirtual #50
166: dstore        17
168: aload         9
170: invokevirtual #51
173: astore        19
175: new           #43
178: dup
179: dconst_1
180: ldc2_w        #44
183: invokespecial #46
186: astore        20
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        21
201: aload         20
203: aload         21
205: invokevirtual #47
208: dstore        22
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        24
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        25
236: aload         24
238: aload         25
240: invokevirtual #47
243: dstore        26
245: aload         25
247: invokevirtual #52
250: dstore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        30
265: new           #43
268: dup
269: dconst_1
270: ldc2_w        #44
273: invokespecial #46
276: astore        31
278: aload         30
280: aload         31
282: invokevirtual #47
285: dstore        32
287: aload         31
289: invokevirtual #52
292: dstore        34
294: aload         25
296: aload         31
298: invokevirtual #53
301: dstore        36
303: new           #43
306: dup
307: dconst_1
308: ldc2_w        #44
311: invokespecial #46
314: astore        38
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        39
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        40
342: aload         39
344: aload         40
346: invokevirtual #47
349: dstore        41
351: aload         38
353: aload         40
355: invokestatic  #48
358: dstore        43
360: new           #43
363: dup
364: dconst_1
365: ldc2_w        #44
368: invokespecial #46
371: astore        45
373: new           #43
376: dup
377: dconst_1
378: ldc2_w        #44
381: invokespecial #46
384: astore        46
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        47
399: aload         46
401: aload         47
403: invokevirtual #47
406: dstore        48
408: aload         45
410: aload         47
412: invokestatic  #48
415: dstore        50
417: aload         45
419: invokevirtual #49
422: istore        52
424: aload         38
426: aload         45
428: invokevirtual #50
431: dstore        53
433: aload         45
435: invokevirtual #54
438: astore        55
440: new           #43
443: dup
444: dconst_1
445: ldc2_w        #44
448: invokespecial #46
451: astore        56
453: new           #43
456: dup
457: dconst_1
458: ldc2_w        #44
461: invokespecial #46
464: astore        57
466: aload         56
468: aload         57
470: invokevirtual #47
473: dstore        58
475: aload         55
477: aload         56
479: invokevirtual #55
482: astore        60
484: aload         25
486: aload         60
488: invokevirtual #55
491: astore        61
493: aload         21
495: aload         60
497: invokevirtual #53
500: dstore        62
502: new           #27
505: dup
506: aload         9
508: aload         21
510: invokespecial #56
513: astore        64
515: aload_1
516: aload         21
518: invokevirtual #98
521: astore        65
523: aload         65
525: invokevirtual #111
528: dstore        66
530: aconst_null
531: astore        68
533: aload         65
535: dconst_0
536: aload         68
538: invokevirtual #182
541: astore        69
543: ldc           #20
545: invokestatic  #21
548: goto          553
551: astore        69
553: new           #10
556: dup
557: invokespecial #11
560: ldc           #12
562: invokevirtual #13
565: dload         5
567: invokevirtual #60
570: ldc           #15
572: invokevirtual #13
575: dconst_0
576: invokevirtual #60
579: ldc           #12
581: invokevirtual #13
584: invokevirtual #16
587: dload         5
589: dconst_0
590: dcmpl
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #17
602: new           #10
605: dup
606: invokespecial #11
609: ldc           #12
611: invokevirtual #13
614: dload         7
616: invokevirtual #60
619: ldc           #15
621: invokevirtual #13
624: dconst_0
625: invokevirtual #60
628: ldc           #12
630: invokevirtual #13
633: invokevirtual #16
636: dload         7
638: dconst_0
639: dcmpl
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #17
651: new           #10
654: dup
655: invokespecial #11
658: ldc           #12
660: invokevirtual #13
663: dload         12
665: invokevirtual #60
668: ldc           #15
670: invokevirtual #13
673: dconst_0
674: invokevirtual #60
677: ldc           #12
679: invokevirtual #13
682: invokevirtual #16
685: dload         12
687: dconst_0
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #17
700: new           #10
703: dup
704: invokespecial #11
707: ldc           #12
709: invokevirtual #13
712: dload         14
714: invokevirtual #60
717: ldc           #15
719: invokevirtual #13
722: dconst_0
723: invokevirtual #60
726: ldc           #12
728: invokevirtual #13
731: invokevirtual #16
734: dload         14
736: dconst_0
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #17
749: new           #10
752: dup
753: invokespecial #11
756: ldc           #12
758: invokevirtual #13
761: iload         16
763: invokevirtual #14
766: ldc           #15
768: invokevirtual #13
771: iconst_0
772: invokevirtual #14
775: ldc           #12
777: invokevirtual #13
780: invokevirtual #16
783: iload         16
785: ifne          792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #17
796: new           #10
799: dup
800: invokespecial #11
803: ldc           #12
805: invokevirtual #13
808: dload         17
810: invokevirtual #60
813: ldc           #15
815: invokevirtual #13
818: dconst_0
819: invokevirtual #60
822: ldc           #12
824: invokevirtual #13
827: invokevirtual #16
830: dload         17
832: dconst_0
833: dcmpl
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #17
845: aload         19
847: invokestatic  #33
850: new           #10
853: dup
854: invokespecial #11
857: ldc           #12
859: invokevirtual #13
862: dload         22
864: invokevirtual #60
867: ldc           #15
869: invokevirtual #13
872: dconst_0
873: invokevirtual #60
876: ldc           #12
878: invokevirtual #13
881: invokevirtual #16
884: dload         22
886: dconst_0
887: dcmpl
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #17
899: new           #10
902: dup
903: invokespecial #11
906: ldc           #12
908: invokevirtual #13
911: dload         26
913: invokevirtual #60
916: ldc           #15
918: invokevirtual #13
921: dconst_0
922: invokevirtual #60
925: ldc           #12
927: invokevirtual #13
930: invokevirtual #16
933: dload         26
935: dconst_0
936: dcmpl
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #17
948: new           #10
951: dup
952: invokespecial #11
955: ldc           #12
957: invokevirtual #13
960: dload         28
962: invokevirtual #60
965: ldc           #15
967: invokevirtual #13
970: ldc2_w        #61
973: invokevirtual #60
976: ldc           #12
978: invokevirtual #13
981: invokevirtual #16
984: dload         28
986: ldc2_w        #61
989: dcmpl
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #17
1001: new           #10
1004: dup
1005: invokespecial #11
1008: ldc           #12
1010: invokevirtual #13
1013: dload         32
1015: invokevirtual #60
1018: ldc           #15
1020: invokevirtual #13
1023: dconst_0
1024: invokevirtual #60
1027: ldc           #12
1029: invokevirtual #13
1032: invokevirtual #16
1035: dload         32
1037: dconst_0
1038: dcmpl
1039: ifne          1046
1042: iconst_1
1043: goto          1047
1046: iconst_0
1047: invokestatic  #17
1050: new           #10
1053: dup
1054: invokespecial #11
1057: ldc           #12
1059: invokevirtual #13
1062: dload         34
1064: invokevirtual #60
1067: ldc           #15
1069: invokevirtual #13
1072: ldc2_w        #61
1075: invokevirtual #60
1078: ldc           #12
1080: invokevirtual #13
1083: invokevirtual #16
1086: dload         34
1088: ldc2_w        #61
1091: dcmpl
1092: ifne          1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #17
1103: new           #10
1106: dup
1107: invokespecial #11
1110: ldc           #12
1112: invokevirtual #13
1115: dload         36
1117: invokevirtual #60
1120: ldc           #15
1122: invokevirtual #13
1125: dconst_0
1126: invokevirtual #60
1129: ldc           #12
1131: invokevirtual #13
1134: invokevirtual #16
1137: dload         36
1139: dconst_0
1140: dcmpl
1141: ifne          1148
1144: iconst_1
1145: goto          1149
1148: iconst_0
1149: invokestatic  #17
1152: new           #10
1155: dup
1156: invokespecial #11
1159: ldc           #12
1161: invokevirtual #13
1164: dload         41
1166: invokevirtual #60
1169: ldc           #15
1171: invokevirtual #13
1174: dconst_0
1175: invokevirtual #60
1178: ldc           #12
1180: invokevirtual #13
1183: invokevirtual #16
1186: dload         41
1188: dconst_0
1189: dcmpl
1190: ifne          1197
1193: iconst_1
1194: goto          1198
1197: iconst_0
1198: invokestatic  #17
1201: new           #10
1204: dup
1205: invokespecial #11
1208: ldc           #12
1210: invokevirtual #13
1213: dload         43
1215: invokevirtual #60
1218: ldc           #15
1220: invokevirtual #13
1223: dconst_0
1224: invokevirtual #60
1227: ldc           #12
1229: invokevirtual #13
1232: invokevirtual #16
1235: dload         43
1237: dconst_0
1238: dcmpl
1239: ifne          1246
1242: iconst_1
1243: goto          1247
1246: iconst_0
1247: invokestatic  #17
1250: new           #10
1253: dup
1254: invokespecial #11
1257: ldc           #12
1259: invokevirtual #13
1262: dload         48
1264: invokevirtual #60
1267: ldc           #15
1269: invokevirtual #13
1272: dconst_0
1273: invokevirtual #60
1276: ldc           #12
1278: invokevirtual #13
1281: invokevirtual #16
1284: dload         48
1286: dconst_0
1287: dcmpl
1288: ifne          1295
1291: iconst_1
1292: goto          1296
1295: iconst_0
1296: invokestatic  #17
1299: new           #10
1302: dup
1303: invokespecial #11
1306: ldc           #12
1308: invokevirtual #13
1311: dload         50
1313: invokevirtual #60
1316: ldc           #15
1318: invokevirtual #13
1321: dconst_0
1322: invokevirtual #60
1325: ldc           #12
1327: invokevirtual #13
1330: invokevirtual #16
1333: dload         50
1335: dconst_0
1336: dcmpl
1337: ifne          1344
1340: iconst_1
1341: goto          1345
1344: iconst_0
1345: invokestatic  #17
1348: new           #10
1351: dup
1352: invokespecial #11
1355: ldc           #12
1357: invokevirtual #13
1360: iload         52
1362: invokevirtual #14
1365: ldc           #15
1367: invokevirtual #13
1370: iconst_0
1371: invokevirtual #14
1374: ldc           #12
1376: invokevirtual #13
1379: invokevirtual #16
1382: iload         52
1384: ifne          1391
1387: iconst_1
1388: goto          1392
1391: iconst_0
1392: invokestatic  #17
1395: new           #10
1398: dup
1399: invokespecial #11
1402: ldc           #12
1404: invokevirtual #13
1407: dload         53
1409: invokevirtual #60
1412: ldc           #15
1414: invokevirtual #13
1417: dconst_0
1418: invokevirtual #60
1421: ldc           #12
1423: invokevirtual #13
1426: invokevirtual #16
1429: dload         53
1431: dconst_0
1432: dcmpl
1433: ifne          1440
1436: iconst_1
1437: goto          1441
1440: iconst_0
1441: invokestatic  #17
1444: aload         55
1446: invokestatic  #33
1449: new           #10
1452: dup
1453: invokespecial #11
1456: ldc           #12
1458: invokevirtual #13
1461: dload         58
1463: invokevirtual #60
1466: ldc           #15
1468: invokevirtual #13
1471: dconst_0
1472: invokevirtual #60
1475: ldc           #12
1477: invokevirtual #13
1480: invokevirtual #16
1483: dload         58
1485: dconst_0
1486: dcmpl
1487: ifne          1494
1490: iconst_1
1491: goto          1495
1494: iconst_0
1495: invokestatic  #17
1498: aload         60
1500: invokestatic  #33
1503: aload         61
1505: invokestatic  #33
1508: new           #10
1511: dup
1512: invokespecial #11
1515: ldc           #12
1517: invokevirtual #13
1520: dload         62
1522: invokevirtual #60
1525: ldc           #15
1527: invokevirtual #13
1530: ldc2_w        #63
1533: invokevirtual #60
1536: ldc           #12
1538: invokevirtual #13
1541: invokevirtual #16
1544: dload         62
1546: ldc2_w        #63
1549: dcmpl
1550: ifne          1557
1553: iconst_1
1554: goto          1558
1557: iconst_0
1558: invokestatic  #17
1561: aload         65
1563: invokestatic  #33
1566: new           #10
1569: dup
1570: invokespecial #11
1573: ldc           #12
1575: invokevirtual #13
1578: dload         66
1580: invokevirtual #60
1583: ldc           #15
1585: invokevirtual #13
1588: ldc2_w        #183
1591: invokevirtual #60
1594: ldc           #12
1596: invokevirtual #13
1599: invokevirtual #16
1602: dload         66
1604: ldc2_w        #183
1607: dcmpl
1608: ifne          1615
1611: iconst_1
1612: goto          1616
1615: iconst_0
1616: invokestatic  #17
1619: return
Exception table:
from    to  target type
533   548   551   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 1260
End line: 1272
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 9700L, 1.053671212772351E-8d, (-0.7853981633974483d), (double) 3, false);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #186
31: ldc2_w        #188
34: ldc2_w        #101
37: ldc2_w        #190
40: iconst_0
41: invokespecial #150
44: astore_1
45: aconst_null
46: astore_2
47: aload_1
48: aload_2
49: invokevirtual #57
52: astore_3
53: ldc           #58
55: invokestatic  #21
58: goto          62
61: astore_3
62: return
Exception table:
from    to  target type
47    58    61   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1275
End line: 1362
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double95 = vector3D91.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D94);
        double double96 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D88, vector3D94);
        double double97 = vector3D85.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D98 = vector3D30.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector99 = vector3D85.normalize();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + Double.POSITIVE_INFINITY + "'", double97 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(euclidean3DVector99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: getstatic     #126
496: astore        64
498: new           #43
501: dup
502: dconst_1
503: ldc2_w        #44
506: invokespecial #46
509: astore        65
511: new           #43
514: dup
515: dconst_1
516: ldc2_w        #44
519: invokespecial #46
522: astore        66
524: new           #43
527: dup
528: dconst_1
529: ldc2_w        #44
532: invokespecial #46
535: astore        67
537: aload         66
539: aload         67
541: invokevirtual #47
544: dstore        68
546: aload         65
548: aload         67
550: invokestatic  #48
553: dstore        70
555: aload         64
557: aload         65
559: invokevirtual #53
562: dstore        72
564: aload         20
566: aload         64
568: invokevirtual #109
571: astore        74
573: aload         64
575: invokevirtual #193
578: astore        75
580: new           #10
583: dup
584: invokespecial #11
587: ldc           #12
589: invokevirtual #13
592: dload         4
594: invokevirtual #60
597: ldc           #15
599: invokevirtual #13
602: dconst_0
603: invokevirtual #60
606: ldc           #12
608: invokevirtual #13
611: invokevirtual #16
614: dload         4
616: dconst_0
617: dcmpl
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #17
629: new           #10
632: dup
633: invokespecial #11
636: ldc           #12
638: invokevirtual #13
641: dload         6
643: invokevirtual #60
646: ldc           #15
648: invokevirtual #13
651: dconst_0
652: invokevirtual #60
655: ldc           #12
657: invokevirtual #13
660: invokevirtual #16
663: dload         6
665: dconst_0
666: dcmpl
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #17
678: new           #10
681: dup
682: invokespecial #11
685: ldc           #12
687: invokevirtual #13
690: dload         11
692: invokevirtual #60
695: ldc           #15
697: invokevirtual #13
700: dconst_0
701: invokevirtual #60
704: ldc           #12
706: invokevirtual #13
709: invokevirtual #16
712: dload         11
714: dconst_0
715: dcmpl
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #17
727: new           #10
730: dup
731: invokespecial #11
734: ldc           #12
736: invokevirtual #13
739: dload         13
741: invokevirtual #60
744: ldc           #15
746: invokevirtual #13
749: dconst_0
750: invokevirtual #60
753: ldc           #12
755: invokevirtual #13
758: invokevirtual #16
761: dload         13
763: dconst_0
764: dcmpl
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #17
776: new           #10
779: dup
780: invokespecial #11
783: ldc           #12
785: invokevirtual #13
788: iload         15
790: invokevirtual #14
793: ldc           #15
795: invokevirtual #13
798: iconst_0
799: invokevirtual #14
802: ldc           #12
804: invokevirtual #13
807: invokevirtual #16
810: iload         15
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #17
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         16
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: dconst_0
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         16
859: dconst_0
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: aload         18
874: invokestatic  #33
877: new           #10
880: dup
881: invokespecial #11
884: ldc           #12
886: invokevirtual #13
889: dload         21
891: invokevirtual #60
894: ldc           #15
896: invokevirtual #13
899: dconst_0
900: invokevirtual #60
903: ldc           #12
905: invokevirtual #13
908: invokevirtual #16
911: dload         21
913: dconst_0
914: dcmpl
915: ifne          922
918: iconst_1
919: goto          923
922: iconst_0
923: invokestatic  #17
926: new           #10
929: dup
930: invokespecial #11
933: ldc           #12
935: invokevirtual #13
938: dload         25
940: invokevirtual #60
943: ldc           #15
945: invokevirtual #13
948: dconst_0
949: invokevirtual #60
952: ldc           #12
954: invokevirtual #13
957: invokevirtual #16
960: dload         25
962: dconst_0
963: dcmpl
964: ifne          971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #17
975: new           #10
978: dup
979: invokespecial #11
982: ldc           #12
984: invokevirtual #13
987: dload         27
989: invokevirtual #60
992: ldc           #15
994: invokevirtual #13
997: ldc2_w        #61
1000: invokevirtual #60
1003: ldc           #12
1005: invokevirtual #13
1008: invokevirtual #16
1011: dload         27
1013: ldc2_w        #61
1016: dcmpl
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #17
1028: new           #10
1031: dup
1032: invokespecial #11
1035: ldc           #12
1037: invokevirtual #13
1040: dload         31
1042: invokevirtual #60
1045: ldc           #15
1047: invokevirtual #13
1050: dconst_0
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         31
1064: dconst_0
1065: dcmpl
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #17
1077: new           #10
1080: dup
1081: invokespecial #11
1084: ldc           #12
1086: invokevirtual #13
1089: dload         33
1091: invokevirtual #60
1094: ldc           #15
1096: invokevirtual #13
1099: ldc2_w        #61
1102: invokevirtual #60
1105: ldc           #12
1107: invokevirtual #13
1110: invokevirtual #16
1113: dload         33
1115: ldc2_w        #61
1118: dcmpl
1119: ifne          1126
1122: iconst_1
1123: goto          1127
1126: iconst_0
1127: invokestatic  #17
1130: new           #10
1133: dup
1134: invokespecial #11
1137: ldc           #12
1139: invokevirtual #13
1142: dload         35
1144: invokevirtual #60
1147: ldc           #15
1149: invokevirtual #13
1152: dconst_0
1153: invokevirtual #60
1156: ldc           #12
1158: invokevirtual #13
1161: invokevirtual #16
1164: dload         35
1166: dconst_0
1167: dcmpl
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #17
1179: new           #10
1182: dup
1183: invokespecial #11
1186: ldc           #12
1188: invokevirtual #13
1191: dload         40
1193: invokevirtual #60
1196: ldc           #15
1198: invokevirtual #13
1201: dconst_0
1202: invokevirtual #60
1205: ldc           #12
1207: invokevirtual #13
1210: invokevirtual #16
1213: dload         40
1215: dconst_0
1216: dcmpl
1217: ifne          1224
1220: iconst_1
1221: goto          1225
1224: iconst_0
1225: invokestatic  #17
1228: new           #10
1231: dup
1232: invokespecial #11
1235: ldc           #12
1237: invokevirtual #13
1240: dload         42
1242: invokevirtual #60
1245: ldc           #15
1247: invokevirtual #13
1250: dconst_0
1251: invokevirtual #60
1254: ldc           #12
1256: invokevirtual #13
1259: invokevirtual #16
1262: dload         42
1264: dconst_0
1265: dcmpl
1266: ifne          1273
1269: iconst_1
1270: goto          1274
1273: iconst_0
1274: invokestatic  #17
1277: new           #10
1280: dup
1281: invokespecial #11
1284: ldc           #12
1286: invokevirtual #13
1289: dload         47
1291: invokevirtual #60
1294: ldc           #15
1296: invokevirtual #13
1299: dconst_0
1300: invokevirtual #60
1303: ldc           #12
1305: invokevirtual #13
1308: invokevirtual #16
1311: dload         47
1313: dconst_0
1314: dcmpl
1315: ifne          1322
1318: iconst_1
1319: goto          1323
1322: iconst_0
1323: invokestatic  #17
1326: new           #10
1329: dup
1330: invokespecial #11
1333: ldc           #12
1335: invokevirtual #13
1338: dload         49
1340: invokevirtual #60
1343: ldc           #15
1345: invokevirtual #13
1348: dconst_0
1349: invokevirtual #60
1352: ldc           #12
1354: invokevirtual #13
1357: invokevirtual #16
1360: dload         49
1362: dconst_0
1363: dcmpl
1364: ifne          1371
1367: iconst_1
1368: goto          1372
1371: iconst_0
1372: invokestatic  #17
1375: new           #10
1378: dup
1379: invokespecial #11
1382: ldc           #12
1384: invokevirtual #13
1387: iload         51
1389: invokevirtual #14
1392: ldc           #15
1394: invokevirtual #13
1397: iconst_0
1398: invokevirtual #14
1401: ldc           #12
1403: invokevirtual #13
1406: invokevirtual #16
1409: iload         51
1411: ifne          1418
1414: iconst_1
1415: goto          1419
1418: iconst_0
1419: invokestatic  #17
1422: new           #10
1425: dup
1426: invokespecial #11
1429: ldc           #12
1431: invokevirtual #13
1434: dload         52
1436: invokevirtual #60
1439: ldc           #15
1441: invokevirtual #13
1444: dconst_0
1445: invokevirtual #60
1448: ldc           #12
1450: invokevirtual #13
1453: invokevirtual #16
1456: dload         52
1458: dconst_0
1459: dcmpl
1460: ifne          1467
1463: iconst_1
1464: goto          1468
1467: iconst_0
1468: invokestatic  #17
1471: aload         54
1473: invokestatic  #33
1476: new           #10
1479: dup
1480: invokespecial #11
1483: ldc           #12
1485: invokevirtual #13
1488: dload         57
1490: invokevirtual #60
1493: ldc           #15
1495: invokevirtual #13
1498: dconst_0
1499: invokevirtual #60
1502: ldc           #12
1504: invokevirtual #13
1507: invokevirtual #16
1510: dload         57
1512: dconst_0
1513: dcmpl
1514: ifne          1521
1517: iconst_1
1518: goto          1522
1521: iconst_0
1522: invokestatic  #17
1525: aload         59
1527: invokestatic  #33
1530: aload         60
1532: invokestatic  #33
1535: new           #10
1538: dup
1539: invokespecial #11
1542: ldc           #12
1544: invokevirtual #13
1547: dload         61
1549: invokevirtual #60
1552: ldc           #15
1554: invokevirtual #13
1557: ldc2_w        #63
1560: invokevirtual #60
1563: ldc           #12
1565: invokevirtual #13
1568: invokevirtual #16
1571: dload         61
1573: ldc2_w        #63
1576: dcmpl
1577: ifne          1584
1580: iconst_1
1581: goto          1585
1584: iconst_0
1585: invokestatic  #17
1588: aload         64
1590: invokestatic  #33
1593: new           #10
1596: dup
1597: invokespecial #11
1600: ldc           #12
1602: invokevirtual #13
1605: dload         68
1607: invokevirtual #60
1610: ldc           #15
1612: invokevirtual #13
1615: dconst_0
1616: invokevirtual #60
1619: ldc           #12
1621: invokevirtual #13
1624: invokevirtual #16
1627: dload         68
1629: dconst_0
1630: dcmpl
1631: ifne          1638
1634: iconst_1
1635: goto          1639
1638: iconst_0
1639: invokestatic  #17
1642: new           #10
1645: dup
1646: invokespecial #11
1649: ldc           #12
1651: invokevirtual #13
1654: dload         70
1656: invokevirtual #60
1659: ldc           #15
1661: invokevirtual #13
1664: dconst_0
1665: invokevirtual #60
1668: ldc           #12
1670: invokevirtual #13
1673: invokevirtual #16
1676: dload         70
1678: dconst_0
1679: dcmpl
1680: ifne          1687
1683: iconst_1
1684: goto          1688
1687: iconst_0
1688: invokestatic  #17
1691: new           #10
1694: dup
1695: invokespecial #11
1698: ldc           #12
1700: invokevirtual #13
1703: dload         72
1705: invokevirtual #60
1708: ldc           #15
1710: invokevirtual #13
1713: ldc2_w        #133
1716: invokevirtual #60
1719: ldc           #12
1721: invokevirtual #13
1724: invokevirtual #16
1727: dload         72
1729: ldc2_w        #133
1732: dcmpl
1733: ifne          1740
1736: iconst_1
1737: goto          1741
1740: iconst_0
1741: invokestatic  #17
1744: aload         74
1746: invokestatic  #33
1749: aload         75
1751: invokestatic  #33
1754: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1365
End line: 1442
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation5.applyInverseTo(vector3D36);
        double double92 = vector3D91.getX();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 9.3464424580843366E17d + "'", double92 == 9.3464424580843366E17d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #146
31: ldc2_w        #72
34: ldc2_w        #148
37: dconst_1
38: iconst_0
39: invokespecial #150
42: astore_1
43: new           #43
46: dup
47: dconst_1
48: ldc2_w        #44
51: invokespecial #46
54: astore_2
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore_3
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        4
80: aload_3
81: aload         4
83: invokevirtual #47
86: dstore        5
88: aload_2
89: aload         4
91: invokestatic  #48
94: dstore        7
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        9
109: new           #43
112: dup
113: dconst_1
114: ldc2_w        #44
117: invokespecial #46
120: astore        10
122: new           #43
125: dup
126: dconst_1
127: ldc2_w        #44
130: invokespecial #46
133: astore        11
135: aload         10
137: aload         11
139: invokevirtual #47
142: dstore        12
144: aload         9
146: aload         11
148: invokestatic  #48
151: dstore        14
153: aload         9
155: invokevirtual #49
158: istore        16
160: aload_2
161: aload         9
163: invokevirtual #50
166: dstore        17
168: aload         9
170: invokevirtual #51
173: astore        19
175: new           #43
178: dup
179: dconst_1
180: ldc2_w        #44
183: invokespecial #46
186: astore        20
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        21
201: aload         20
203: aload         21
205: invokevirtual #47
208: dstore        22
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        24
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        25
236: aload         24
238: aload         25
240: invokevirtual #47
243: dstore        26
245: aload         25
247: invokevirtual #52
250: dstore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        30
265: new           #43
268: dup
269: dconst_1
270: ldc2_w        #44
273: invokespecial #46
276: astore        31
278: aload         30
280: aload         31
282: invokevirtual #47
285: dstore        32
287: aload         31
289: invokevirtual #52
292: dstore        34
294: aload         25
296: aload         31
298: invokevirtual #53
301: dstore        36
303: new           #43
306: dup
307: dconst_1
308: ldc2_w        #44
311: invokespecial #46
314: astore        38
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        39
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        40
342: aload         39
344: aload         40
346: invokevirtual #47
349: dstore        41
351: aload         38
353: aload         40
355: invokestatic  #48
358: dstore        43
360: new           #43
363: dup
364: dconst_1
365: ldc2_w        #44
368: invokespecial #46
371: astore        45
373: new           #43
376: dup
377: dconst_1
378: ldc2_w        #44
381: invokespecial #46
384: astore        46
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        47
399: aload         46
401: aload         47
403: invokevirtual #47
406: dstore        48
408: aload         45
410: aload         47
412: invokestatic  #48
415: dstore        50
417: aload         45
419: invokevirtual #49
422: istore        52
424: aload         38
426: aload         45
428: invokevirtual #50
431: dstore        53
433: aload         45
435: invokevirtual #54
438: astore        55
440: new           #43
443: dup
444: dconst_1
445: ldc2_w        #44
448: invokespecial #46
451: astore        56
453: new           #43
456: dup
457: dconst_1
458: ldc2_w        #44
461: invokespecial #46
464: astore        57
466: aload         56
468: aload         57
470: invokevirtual #47
473: dstore        58
475: aload         55
477: aload         56
479: invokevirtual #55
482: astore        60
484: aload         25
486: aload         60
488: invokevirtual #55
491: astore        61
493: aload         21
495: aload         60
497: invokevirtual #53
500: dstore        62
502: new           #27
505: dup
506: aload         9
508: aload         21
510: invokespecial #56
513: astore        64
515: aload_1
516: aload         21
518: invokevirtual #98
521: astore        65
523: aload         65
525: invokevirtual #99
528: dstore        66
530: new           #10
533: dup
534: invokespecial #11
537: ldc           #12
539: invokevirtual #13
542: dload         5
544: invokevirtual #60
547: ldc           #15
549: invokevirtual #13
552: dconst_0
553: invokevirtual #60
556: ldc           #12
558: invokevirtual #13
561: invokevirtual #16
564: dload         5
566: dconst_0
567: dcmpl
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #17
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         7
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         7
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         12
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         12
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         14
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         14
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: iload         16
740: invokevirtual #14
743: ldc           #15
745: invokevirtual #13
748: iconst_0
749: invokevirtual #14
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: iload         16
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #17
773: new           #10
776: dup
777: invokespecial #11
780: ldc           #12
782: invokevirtual #13
785: dload         17
787: invokevirtual #60
790: ldc           #15
792: invokevirtual #13
795: dconst_0
796: invokevirtual #60
799: ldc           #12
801: invokevirtual #13
804: invokevirtual #16
807: dload         17
809: dconst_0
810: dcmpl
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: aload         19
824: invokestatic  #33
827: new           #10
830: dup
831: invokespecial #11
834: ldc           #12
836: invokevirtual #13
839: dload         22
841: invokevirtual #60
844: ldc           #15
846: invokevirtual #13
849: dconst_0
850: invokevirtual #60
853: ldc           #12
855: invokevirtual #13
858: invokevirtual #16
861: dload         22
863: dconst_0
864: dcmpl
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #17
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         26
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         26
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         28
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: ldc2_w        #61
950: invokevirtual #60
953: ldc           #12
955: invokevirtual #13
958: invokevirtual #16
961: dload         28
963: ldc2_w        #61
966: dcmpl
967: ifne          974
970: iconst_1
971: goto          975
974: iconst_0
975: invokestatic  #17
978: new           #10
981: dup
982: invokespecial #11
985: ldc           #12
987: invokevirtual #13
990: dload         32
992: invokevirtual #60
995: ldc           #15
997: invokevirtual #13
1000: dconst_0
1001: invokevirtual #60
1004: ldc           #12
1006: invokevirtual #13
1009: invokevirtual #16
1012: dload         32
1014: dconst_0
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         34
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: ldc2_w        #61
1052: invokevirtual #60
1055: ldc           #12
1057: invokevirtual #13
1060: invokevirtual #16
1063: dload         34
1065: ldc2_w        #61
1068: dcmpl
1069: ifne          1076
1072: iconst_1
1073: goto          1077
1076: iconst_0
1077: invokestatic  #17
1080: new           #10
1083: dup
1084: invokespecial #11
1087: ldc           #12
1089: invokevirtual #13
1092: dload         36
1094: invokevirtual #60
1097: ldc           #15
1099: invokevirtual #13
1102: dconst_0
1103: invokevirtual #60
1106: ldc           #12
1108: invokevirtual #13
1111: invokevirtual #16
1114: dload         36
1116: dconst_0
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         41
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         41
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         43
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         43
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         48
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         48
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         50
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         50
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: iload         52
1339: invokevirtual #14
1342: ldc           #15
1344: invokevirtual #13
1347: iconst_0
1348: invokevirtual #14
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: iload         52
1361: ifne          1368
1364: iconst_1
1365: goto          1369
1368: iconst_0
1369: invokestatic  #17
1372: new           #10
1375: dup
1376: invokespecial #11
1379: ldc           #12
1381: invokevirtual #13
1384: dload         53
1386: invokevirtual #60
1389: ldc           #15
1391: invokevirtual #13
1394: dconst_0
1395: invokevirtual #60
1398: ldc           #12
1400: invokevirtual #13
1403: invokevirtual #16
1406: dload         53
1408: dconst_0
1409: dcmpl
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: aload         55
1423: invokestatic  #33
1426: new           #10
1429: dup
1430: invokespecial #11
1433: ldc           #12
1435: invokevirtual #13
1438: dload         58
1440: invokevirtual #60
1443: ldc           #15
1445: invokevirtual #13
1448: dconst_0
1449: invokevirtual #60
1452: ldc           #12
1454: invokevirtual #13
1457: invokevirtual #16
1460: dload         58
1462: dconst_0
1463: dcmpl
1464: ifne          1471
1467: iconst_1
1468: goto          1472
1471: iconst_0
1472: invokestatic  #17
1475: aload         60
1477: invokestatic  #33
1480: aload         61
1482: invokestatic  #33
1485: new           #10
1488: dup
1489: invokespecial #11
1492: ldc           #12
1494: invokevirtual #13
1497: dload         62
1499: invokevirtual #60
1502: ldc           #15
1504: invokevirtual #13
1507: ldc2_w        #63
1510: invokevirtual #60
1513: ldc           #12
1515: invokevirtual #13
1518: invokevirtual #16
1521: dload         62
1523: ldc2_w        #63
1526: dcmpl
1527: ifne          1534
1530: iconst_1
1531: goto          1535
1534: iconst_0
1535: invokestatic  #17
1538: aload         65
1540: invokestatic  #33
1543: new           #10
1546: dup
1547: invokespecial #11
1550: ldc           #12
1552: invokevirtual #13
1555: dload         66
1557: invokevirtual #60
1560: ldc           #15
1562: invokevirtual #13
1565: ldc2_w        #195
1568: invokevirtual #60
1571: ldc           #12
1573: invokevirtual #13
1576: invokevirtual #16
1579: dload         66
1581: ldc2_w        #195
1584: dcmpl
1585: ifne          1592
1588: iconst_1
1589: goto          1593
1592: iconst_0
1593: invokestatic  #17
1596: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1445
End line: 1535
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        double double87 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D79, vector3D85);
        boolean boolean88 = vector3D79.isInfinite();
        double double89 = vector3D68.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector91 = vector3D65.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D90);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D65.orthogonal();
        double double93 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, 2.7681156723791426E13d);
        org.apache.commons.math.geometry.Space space96 = vector3D2.getSpace();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector97 = vector3D2.getZero();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(euclidean3DVector91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + Double.POSITIVE_INFINITY + "'", double93 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(space96);
        org.junit.Assert.assertNotNull(euclidean3DVector97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: aload_1
75: invokevirtual #49
78: istore        8
80: aload_1
81: invokevirtual #162
84: dstore        9
86: new           #43
89: dup
90: dconst_1
91: ldc2_w        #44
94: invokespecial #46
97: astore        11
99: new           #43
102: dup
103: dconst_1
104: ldc2_w        #44
107: invokespecial #46
110: astore        12
112: aload         11
114: aload         12
116: invokevirtual #47
119: dstore        13
121: aload         12
123: invokevirtual #52
126: dstore        15
128: new           #43
131: dup
132: dconst_1
133: ldc2_w        #44
136: invokespecial #46
139: astore        17
141: new           #43
144: dup
145: dconst_1
146: ldc2_w        #44
149: invokespecial #46
152: astore        18
154: aload         17
156: aload         18
158: invokevirtual #47
161: dstore        19
163: aload         18
165: invokevirtual #52
168: dstore        21
170: aload         12
172: aload         18
174: invokevirtual #53
177: dstore        23
179: new           #43
182: dup
183: dconst_1
184: ldc2_w        #44
187: invokespecial #46
190: astore        25
192: new           #43
195: dup
196: dconst_1
197: ldc2_w        #44
200: invokespecial #46
203: astore        26
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        27
218: aload         26
220: aload         27
222: invokevirtual #47
225: dstore        28
227: aload         25
229: aload         27
231: invokestatic  #48
234: dstore        30
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        32
249: new           #43
252: dup
253: dconst_1
254: ldc2_w        #44
257: invokespecial #46
260: astore        33
262: new           #43
265: dup
266: dconst_1
267: ldc2_w        #44
270: invokespecial #46
273: astore        34
275: aload         33
277: aload         34
279: invokevirtual #47
282: dstore        35
284: aload         32
286: aload         34
288: invokestatic  #48
291: dstore        37
293: aload         32
295: invokevirtual #49
298: istore        39
300: aload         25
302: aload         32
304: invokevirtual #50
307: dstore        40
309: aload         32
311: invokevirtual #54
314: astore        42
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        43
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        44
342: aload         43
344: aload         44
346: invokevirtual #47
349: dstore        45
351: aload         42
353: aload         43
355: invokevirtual #55
358: astore        47
360: aload         12
362: aload         47
364: invokevirtual #55
367: astore        48
369: new           #27
372: dup
373: aload_1
374: aload         12
376: invokespecial #56
379: astore        49
381: getstatic     #126
384: astore        50
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        51
399: new           #43
402: dup
403: dconst_1
404: ldc2_w        #44
407: invokespecial #46
410: astore        52
412: new           #43
415: dup
416: dconst_1
417: ldc2_w        #44
420: invokespecial #46
423: astore        53
425: aload         52
427: aload         53
429: invokevirtual #47
432: dstore        54
434: aload         51
436: aload         53
438: invokestatic  #48
441: dstore        56
443: new           #43
446: dup
447: dconst_1
448: ldc2_w        #44
451: invokespecial #46
454: astore        58
456: new           #43
459: dup
460: dconst_1
461: ldc2_w        #44
464: invokespecial #46
467: astore        59
469: new           #43
472: dup
473: dconst_1
474: ldc2_w        #44
477: invokespecial #46
480: astore        60
482: aload         59
484: aload         60
486: invokevirtual #47
489: dstore        61
491: aload         58
493: aload         60
495: invokestatic  #48
498: dstore        63
500: aload         58
502: invokevirtual #49
505: istore        65
507: aload         51
509: aload         58
511: invokevirtual #50
514: dstore        66
516: aload         58
518: invokevirtual #54
521: astore        68
523: aload         50
525: aload         68
527: invokevirtual #55
530: astore        69
532: aload         50
534: invokevirtual #163
537: astore        70
539: aload_1
540: aload         50
542: invokevirtual #50
545: dstore        71
547: new           #27
550: dup
551: aload_1
552: ldc2_w        #164
555: invokespecial #103
558: astore        73
560: aload_1
561: invokevirtual #51
564: astore        74
566: aload_1
567: invokevirtual #198
570: astore        75
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         4
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         4
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         6
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         6
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: iload         8
684: invokevirtual #14
687: ldc           #15
689: invokevirtual #13
692: iconst_0
693: invokevirtual #14
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: iload         8
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #17
717: new           #10
720: dup
721: invokespecial #11
724: ldc           #12
726: invokevirtual #13
729: dload         9
731: invokevirtual #60
734: ldc           #15
736: invokevirtual #13
739: ldc2_w        #167
742: invokevirtual #60
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: dload         9
755: ldc2_w        #167
758: dcmpl
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #17
770: new           #10
773: dup
774: invokespecial #11
777: ldc           #12
779: invokevirtual #13
782: dload         13
784: invokevirtual #60
787: ldc           #15
789: invokevirtual #13
792: dconst_0
793: invokevirtual #60
796: ldc           #12
798: invokevirtual #13
801: invokevirtual #16
804: dload         13
806: dconst_0
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #17
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         15
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: ldc2_w        #61
844: invokevirtual #60
847: ldc           #12
849: invokevirtual #13
852: invokevirtual #16
855: dload         15
857: ldc2_w        #61
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         19
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         19
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         21
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: ldc2_w        #61
946: invokevirtual #60
949: ldc           #12
951: invokevirtual #13
954: invokevirtual #16
957: dload         21
959: ldc2_w        #61
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         23
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         23
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         28
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: dconst_0
1046: invokevirtual #60
1049: ldc           #12
1051: invokevirtual #13
1054: invokevirtual #16
1057: dload         28
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: dload         30
1086: invokevirtual #60
1089: ldc           #15
1091: invokevirtual #13
1094: dconst_0
1095: invokevirtual #60
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: dload         30
1108: dconst_0
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         35
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         35
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         37
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         37
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: iload         39
1233: invokevirtual #14
1236: ldc           #15
1238: invokevirtual #13
1241: iconst_0
1242: invokevirtual #14
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: iload         39
1255: ifne          1262
1258: iconst_1
1259: goto          1263
1262: iconst_0
1263: invokestatic  #17
1266: new           #10
1269: dup
1270: invokespecial #11
1273: ldc           #12
1275: invokevirtual #13
1278: dload         40
1280: invokevirtual #60
1283: ldc           #15
1285: invokevirtual #13
1288: dconst_0
1289: invokevirtual #60
1292: ldc           #12
1294: invokevirtual #13
1297: invokevirtual #16
1300: dload         40
1302: dconst_0
1303: dcmpl
1304: ifne          1311
1307: iconst_1
1308: goto          1312
1311: iconst_0
1312: invokestatic  #17
1315: aload         42
1317: invokestatic  #33
1320: new           #10
1323: dup
1324: invokespecial #11
1327: ldc           #12
1329: invokevirtual #13
1332: dload         45
1334: invokevirtual #60
1337: ldc           #15
1339: invokevirtual #13
1342: dconst_0
1343: invokevirtual #60
1346: ldc           #12
1348: invokevirtual #13
1351: invokevirtual #16
1354: dload         45
1356: dconst_0
1357: dcmpl
1358: ifne          1365
1361: iconst_1
1362: goto          1366
1365: iconst_0
1366: invokestatic  #17
1369: aload         47
1371: invokestatic  #33
1374: aload         48
1376: invokestatic  #33
1379: aload         50
1381: invokestatic  #33
1384: new           #10
1387: dup
1388: invokespecial #11
1391: ldc           #12
1393: invokevirtual #13
1396: dload         54
1398: invokevirtual #60
1401: ldc           #15
1403: invokevirtual #13
1406: dconst_0
1407: invokevirtual #60
1410: ldc           #12
1412: invokevirtual #13
1415: invokevirtual #16
1418: dload         54
1420: dconst_0
1421: dcmpl
1422: ifne          1429
1425: iconst_1
1426: goto          1430
1429: iconst_0
1430: invokestatic  #17
1433: new           #10
1436: dup
1437: invokespecial #11
1440: ldc           #12
1442: invokevirtual #13
1445: dload         56
1447: invokevirtual #60
1450: ldc           #15
1452: invokevirtual #13
1455: dconst_0
1456: invokevirtual #60
1459: ldc           #12
1461: invokevirtual #13
1464: invokevirtual #16
1467: dload         56
1469: dconst_0
1470: dcmpl
1471: ifne          1478
1474: iconst_1
1475: goto          1479
1478: iconst_0
1479: invokestatic  #17
1482: new           #10
1485: dup
1486: invokespecial #11
1489: ldc           #12
1491: invokevirtual #13
1494: dload         61
1496: invokevirtual #60
1499: ldc           #15
1501: invokevirtual #13
1504: dconst_0
1505: invokevirtual #60
1508: ldc           #12
1510: invokevirtual #13
1513: invokevirtual #16
1516: dload         61
1518: dconst_0
1519: dcmpl
1520: ifne          1527
1523: iconst_1
1524: goto          1528
1527: iconst_0
1528: invokestatic  #17
1531: new           #10
1534: dup
1535: invokespecial #11
1538: ldc           #12
1540: invokevirtual #13
1543: dload         63
1545: invokevirtual #60
1548: ldc           #15
1550: invokevirtual #13
1553: dconst_0
1554: invokevirtual #60
1557: ldc           #12
1559: invokevirtual #13
1562: invokevirtual #16
1565: dload         63
1567: dconst_0
1568: dcmpl
1569: ifne          1576
1572: iconst_1
1573: goto          1577
1576: iconst_0
1577: invokestatic  #17
1580: new           #10
1583: dup
1584: invokespecial #11
1587: ldc           #12
1589: invokevirtual #13
1592: iload         65
1594: invokevirtual #14
1597: ldc           #15
1599: invokevirtual #13
1602: iconst_0
1603: invokevirtual #14
1606: ldc           #12
1608: invokevirtual #13
1611: invokevirtual #16
1614: iload         65
1616: ifne          1623
1619: iconst_1
1620: goto          1624
1623: iconst_0
1624: invokestatic  #17
1627: new           #10
1630: dup
1631: invokespecial #11
1634: ldc           #12
1636: invokevirtual #13
1639: dload         66
1641: invokevirtual #60
1644: ldc           #15
1646: invokevirtual #13
1649: dconst_0
1650: invokevirtual #60
1653: ldc           #12
1655: invokevirtual #13
1658: invokevirtual #16
1661: dload         66
1663: dconst_0
1664: dcmpl
1665: ifne          1672
1668: iconst_1
1669: goto          1673
1672: iconst_0
1673: invokestatic  #17
1676: aload         68
1678: invokestatic  #33
1681: aload         69
1683: invokestatic  #33
1686: aload         70
1688: invokestatic  #33
1691: new           #10
1694: dup
1695: invokespecial #11
1698: ldc           #12
1700: invokevirtual #13
1703: dload         71
1705: invokevirtual #60
1708: ldc           #15
1710: invokevirtual #13
1713: ldc2_w        #133
1716: invokevirtual #60
1719: ldc           #12
1721: invokevirtual #13
1724: invokevirtual #16
1727: dload         71
1729: ldc2_w        #133
1732: dcmpl
1733: ifne          1740
1736: iconst_1
1737: goto          1741
1740: iconst_0
1741: invokestatic  #17
1744: aload         74
1746: invokestatic  #33
1749: aload         75
1751: invokestatic  #33
1754: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1538
End line: 1549
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, 0.9999999999999998d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #199
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #200
34: invokespecial #103
37: astore_2
38: ldc           #20
40: invokestatic  #21
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
26    43    46   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1552
End line: 1563
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 2.6525285981219316E32d, 3.302190676759448d, 3.141592653589793d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #203
34: ldc2_w        #205
37: ldc2_w        #207
40: invokespecial #81
43: astore_2
44: ldc           #20
46: invokestatic  #21
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
26    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1566
End line: 1577
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, (double) 2L, (double) '#', 16384.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #209
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #210
34: ldc2_w        #40
37: ldc2_w        #174
40: invokespecial #81
43: astore_2
44: ldc           #20
46: invokestatic  #21
49: goto          53
52: astore_2
53: return
Exception table:
from    to  target type
26    49    52   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1580
End line: 1662
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = rotation85.revert();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = rotation85.getAxis();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(vector3D89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #212
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #93
519: astore        69
521: aload         64
523: invokevirtual #96
526: astore        70
528: new           #10
531: dup
532: invokespecial #11
535: ldc           #12
537: invokevirtual #13
540: dload         4
542: invokevirtual #60
545: ldc           #15
547: invokevirtual #13
550: dconst_0
551: invokevirtual #60
554: ldc           #12
556: invokevirtual #13
559: invokevirtual #16
562: dload         4
564: dconst_0
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #17
577: new           #10
580: dup
581: invokespecial #11
584: ldc           #12
586: invokevirtual #13
589: dload         6
591: invokevirtual #60
594: ldc           #15
596: invokevirtual #13
599: dconst_0
600: invokevirtual #60
603: ldc           #12
605: invokevirtual #13
608: invokevirtual #16
611: dload         6
613: dconst_0
614: dcmpl
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #17
626: new           #10
629: dup
630: invokespecial #11
633: ldc           #12
635: invokevirtual #13
638: dload         11
640: invokevirtual #60
643: ldc           #15
645: invokevirtual #13
648: dconst_0
649: invokevirtual #60
652: ldc           #12
654: invokevirtual #13
657: invokevirtual #16
660: dload         11
662: dconst_0
663: dcmpl
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #17
675: new           #10
678: dup
679: invokespecial #11
682: ldc           #12
684: invokevirtual #13
687: dload         13
689: invokevirtual #60
692: ldc           #15
694: invokevirtual #13
697: dconst_0
698: invokevirtual #60
701: ldc           #12
703: invokevirtual #13
706: invokevirtual #16
709: dload         13
711: dconst_0
712: dcmpl
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #17
724: new           #10
727: dup
728: invokespecial #11
731: ldc           #12
733: invokevirtual #13
736: iload         15
738: invokevirtual #14
741: ldc           #15
743: invokevirtual #13
746: iconst_0
747: invokevirtual #14
750: ldc           #12
752: invokevirtual #13
755: invokevirtual #16
758: iload         15
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #17
771: new           #10
774: dup
775: invokespecial #11
778: ldc           #12
780: invokevirtual #13
783: dload         16
785: invokevirtual #60
788: ldc           #15
790: invokevirtual #13
793: dconst_0
794: invokevirtual #60
797: ldc           #12
799: invokevirtual #13
802: invokevirtual #16
805: dload         16
807: dconst_0
808: dcmpl
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #17
820: aload         18
822: invokestatic  #33
825: new           #10
828: dup
829: invokespecial #11
832: ldc           #12
834: invokevirtual #13
837: dload         21
839: invokevirtual #60
842: ldc           #15
844: invokevirtual #13
847: dconst_0
848: invokevirtual #60
851: ldc           #12
853: invokevirtual #13
856: invokevirtual #16
859: dload         21
861: dconst_0
862: dcmpl
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #17
874: new           #10
877: dup
878: invokespecial #11
881: ldc           #12
883: invokevirtual #13
886: dload         25
888: invokevirtual #60
891: ldc           #15
893: invokevirtual #13
896: dconst_0
897: invokevirtual #60
900: ldc           #12
902: invokevirtual #13
905: invokevirtual #16
908: dload         25
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #17
923: new           #10
926: dup
927: invokespecial #11
930: ldc           #12
932: invokevirtual #13
935: dload         27
937: invokevirtual #60
940: ldc           #15
942: invokevirtual #13
945: ldc2_w        #61
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         27
961: ldc2_w        #61
964: dcmpl
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #17
976: new           #10
979: dup
980: invokespecial #11
983: ldc           #12
985: invokevirtual #13
988: dload         31
990: invokevirtual #60
993: ldc           #15
995: invokevirtual #13
998: dconst_0
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         31
1012: dconst_0
1013: dcmpl
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #17
1025: new           #10
1028: dup
1029: invokespecial #11
1032: ldc           #12
1034: invokevirtual #13
1037: dload         33
1039: invokevirtual #60
1042: ldc           #15
1044: invokevirtual #13
1047: ldc2_w        #61
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         33
1063: ldc2_w        #61
1066: dcmpl
1067: ifne          1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #17
1078: new           #10
1081: dup
1082: invokespecial #11
1085: ldc           #12
1087: invokevirtual #13
1090: dload         35
1092: invokevirtual #60
1095: ldc           #15
1097: invokevirtual #13
1100: dconst_0
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         35
1114: dconst_0
1115: dcmpl
1116: ifne          1123
1119: iconst_1
1120: goto          1124
1123: iconst_0
1124: invokestatic  #17
1127: new           #10
1130: dup
1131: invokespecial #11
1134: ldc           #12
1136: invokevirtual #13
1139: dload         40
1141: invokevirtual #60
1144: ldc           #15
1146: invokevirtual #13
1149: dconst_0
1150: invokevirtual #60
1153: ldc           #12
1155: invokevirtual #13
1158: invokevirtual #16
1161: dload         40
1163: dconst_0
1164: dcmpl
1165: ifne          1172
1168: iconst_1
1169: goto          1173
1172: iconst_0
1173: invokestatic  #17
1176: new           #10
1179: dup
1180: invokespecial #11
1183: ldc           #12
1185: invokevirtual #13
1188: dload         42
1190: invokevirtual #60
1193: ldc           #15
1195: invokevirtual #13
1198: dconst_0
1199: invokevirtual #60
1202: ldc           #12
1204: invokevirtual #13
1207: invokevirtual #16
1210: dload         42
1212: dconst_0
1213: dcmpl
1214: ifne          1221
1217: iconst_1
1218: goto          1222
1221: iconst_0
1222: invokestatic  #17
1225: new           #10
1228: dup
1229: invokespecial #11
1232: ldc           #12
1234: invokevirtual #13
1237: dload         47
1239: invokevirtual #60
1242: ldc           #15
1244: invokevirtual #13
1247: dconst_0
1248: invokevirtual #60
1251: ldc           #12
1253: invokevirtual #13
1256: invokevirtual #16
1259: dload         47
1261: dconst_0
1262: dcmpl
1263: ifne          1270
1266: iconst_1
1267: goto          1271
1270: iconst_0
1271: invokestatic  #17
1274: new           #10
1277: dup
1278: invokespecial #11
1281: ldc           #12
1283: invokevirtual #13
1286: dload         49
1288: invokevirtual #60
1291: ldc           #15
1293: invokevirtual #13
1296: dconst_0
1297: invokevirtual #60
1300: ldc           #12
1302: invokevirtual #13
1305: invokevirtual #16
1308: dload         49
1310: dconst_0
1311: dcmpl
1312: ifne          1319
1315: iconst_1
1316: goto          1320
1319: iconst_0
1320: invokestatic  #17
1323: new           #10
1326: dup
1327: invokespecial #11
1330: ldc           #12
1332: invokevirtual #13
1335: iload         51
1337: invokevirtual #14
1340: ldc           #15
1342: invokevirtual #13
1345: iconst_0
1346: invokevirtual #14
1349: ldc           #12
1351: invokevirtual #13
1354: invokevirtual #16
1357: iload         51
1359: ifne          1366
1362: iconst_1
1363: goto          1367
1366: iconst_0
1367: invokestatic  #17
1370: new           #10
1373: dup
1374: invokespecial #11
1377: ldc           #12
1379: invokevirtual #13
1382: dload         52
1384: invokevirtual #60
1387: ldc           #15
1389: invokevirtual #13
1392: dconst_0
1393: invokevirtual #60
1396: ldc           #12
1398: invokevirtual #13
1401: invokevirtual #16
1404: dload         52
1406: dconst_0
1407: dcmpl
1408: ifne          1415
1411: iconst_1
1412: goto          1416
1415: iconst_0
1416: invokestatic  #17
1419: aload         54
1421: invokestatic  #33
1424: new           #10
1427: dup
1428: invokespecial #11
1431: ldc           #12
1433: invokevirtual #13
1436: dload         57
1438: invokevirtual #60
1441: ldc           #15
1443: invokevirtual #13
1446: dconst_0
1447: invokevirtual #60
1450: ldc           #12
1452: invokevirtual #13
1455: invokevirtual #16
1458: dload         57
1460: dconst_0
1461: dcmpl
1462: ifne          1469
1465: iconst_1
1466: goto          1470
1469: iconst_0
1470: invokestatic  #17
1473: aload         59
1475: invokestatic  #33
1478: aload         60
1480: invokestatic  #33
1483: new           #10
1486: dup
1487: invokespecial #11
1490: ldc           #12
1492: invokevirtual #13
1495: dload         61
1497: invokevirtual #60
1500: ldc           #15
1502: invokevirtual #13
1505: ldc2_w        #63
1508: invokevirtual #60
1511: ldc           #12
1513: invokevirtual #13
1516: invokevirtual #16
1519: dload         61
1521: ldc2_w        #63
1524: dcmpl
1525: ifne          1532
1528: iconst_1
1529: goto          1533
1532: iconst_0
1533: invokestatic  #17
1536: aload         64
1538: invokestatic  #33
1541: new           #10
1544: dup
1545: invokespecial #11
1548: ldc           #12
1550: invokevirtual #13
1553: dload         65
1555: invokevirtual #60
1558: ldc           #15
1560: invokevirtual #13
1563: dconst_0
1564: invokevirtual #60
1567: ldc           #12
1569: invokevirtual #13
1572: invokevirtual #16
1575: dload         65
1577: dconst_0
1578: dcmpl
1579: ifne          1586
1582: iconst_1
1583: goto          1587
1586: iconst_0
1587: invokestatic  #17
1590: new           #10
1593: dup
1594: invokespecial #11
1597: ldc           #12
1599: invokevirtual #13
1602: dload         67
1604: invokevirtual #60
1607: ldc           #15
1609: invokevirtual #13
1612: dconst_0
1613: invokevirtual #60
1616: ldc           #12
1618: invokevirtual #13
1621: invokevirtual #16
1624: dload         67
1626: dconst_0
1627: dcmpl
1628: ifne          1635
1631: iconst_1
1632: goto          1636
1635: iconst_0
1636: invokestatic  #17
1639: aload         69
1641: invokestatic  #33
1644: aload         70
1646: invokestatic  #33
1649: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1665
End line: 1751
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        double[] doubleArray4 = new double[] { 0.9999999958776927d, 2349.1269600363753d, 2.718281828459045d, 0.8500972684543622d };
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double14 = vector3D10.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        double double15 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D7, vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D18, vector3D24);
        boolean boolean27 = vector3D18.isInfinite();
        double double28 = vector3D7.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        org.apache.commons.math.geometry.Space space29 = vector3D18.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double36 = vector3D32.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D35);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double43 = vector3D39.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        double double44 = vector3D42.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double51 = vector3D47.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D50);
        double double52 = vector3D50.getDelta();
        double double53 = vector3D42.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D50);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double63 = vector3D59.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        double double64 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D56, vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double74 = vector3D70.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D73);
        double double75 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D67, vector3D73);
        boolean boolean76 = vector3D67.isInfinite();
        double double77 = vector3D56.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = vector3D67.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double85 = vector3D81.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = vector3D78.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D42.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        double double88 = vector3D35.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D18, vector3D35);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = rotation89.revert();
        double[][] doubleArray91 = rotation90.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray4, doubleArray91);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 3 != 4");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.9999999958776927, 2349.1269600363753, 2.718281828459045, 0.8500972684543622]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(space29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.7345682747147468d + "'", double44 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.7345682747147468d + "'", double52 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0000000000000002d + "'", double88 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: ldc2_w        #214
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #216
38: dastore
39: dup
40: iconst_2
41: ldc2_w        #218
44: dastore
45: dup
46: iconst_3
47: ldc2_w        #220
50: dastore
51: astore_1
52: new           #43
55: dup
56: dconst_1
57: ldc2_w        #44
60: invokespecial #46
63: astore_2
64: new           #43
67: dup
68: dconst_1
69: ldc2_w        #44
72: invokespecial #46
75: astore_3
76: new           #43
79: dup
80: dconst_1
81: ldc2_w        #44
84: invokespecial #46
87: astore        4
89: aload_3
90: aload         4
92: invokevirtual #47
95: dstore        5
97: aload_2
98: aload         4
100: invokestatic  #48
103: dstore        7
105: new           #43
108: dup
109: dconst_1
110: ldc2_w        #44
113: invokespecial #46
116: astore        9
118: new           #43
121: dup
122: dconst_1
123: ldc2_w        #44
126: invokespecial #46
129: astore        10
131: new           #43
134: dup
135: dconst_1
136: ldc2_w        #44
139: invokespecial #46
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #47
151: dstore        12
153: aload         9
155: aload         11
157: invokestatic  #48
160: dstore        14
162: aload         9
164: invokevirtual #49
167: istore        16
169: aload_2
170: aload         9
172: invokevirtual #50
175: dstore        17
177: aload         9
179: invokevirtual #51
182: astore        19
184: new           #43
187: dup
188: dconst_1
189: ldc2_w        #44
192: invokespecial #46
195: astore        20
197: new           #43
200: dup
201: dconst_1
202: ldc2_w        #44
205: invokespecial #46
208: astore        21
210: aload         20
212: aload         21
214: invokevirtual #47
217: dstore        22
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        24
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        25
245: aload         24
247: aload         25
249: invokevirtual #47
252: dstore        26
254: aload         25
256: invokevirtual #52
259: dstore        28
261: new           #43
264: dup
265: dconst_1
266: ldc2_w        #44
269: invokespecial #46
272: astore        30
274: new           #43
277: dup
278: dconst_1
279: ldc2_w        #44
282: invokespecial #46
285: astore        31
287: aload         30
289: aload         31
291: invokevirtual #47
294: dstore        32
296: aload         31
298: invokevirtual #52
301: dstore        34
303: aload         25
305: aload         31
307: invokevirtual #53
310: dstore        36
312: new           #43
315: dup
316: dconst_1
317: ldc2_w        #44
320: invokespecial #46
323: astore        38
325: new           #43
328: dup
329: dconst_1
330: ldc2_w        #44
333: invokespecial #46
336: astore        39
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        40
351: aload         39
353: aload         40
355: invokevirtual #47
358: dstore        41
360: aload         38
362: aload         40
364: invokestatic  #48
367: dstore        43
369: new           #43
372: dup
373: dconst_1
374: ldc2_w        #44
377: invokespecial #46
380: astore        45
382: new           #43
385: dup
386: dconst_1
387: ldc2_w        #44
390: invokespecial #46
393: astore        46
395: new           #43
398: dup
399: dconst_1
400: ldc2_w        #44
403: invokespecial #46
406: astore        47
408: aload         46
410: aload         47
412: invokevirtual #47
415: dstore        48
417: aload         45
419: aload         47
421: invokestatic  #48
424: dstore        50
426: aload         45
428: invokevirtual #49
431: istore        52
433: aload         38
435: aload         45
437: invokevirtual #50
440: dstore        53
442: aload         45
444: invokevirtual #54
447: astore        55
449: new           #43
452: dup
453: dconst_1
454: ldc2_w        #44
457: invokespecial #46
460: astore        56
462: new           #43
465: dup
466: dconst_1
467: ldc2_w        #44
470: invokespecial #46
473: astore        57
475: aload         56
477: aload         57
479: invokevirtual #47
482: dstore        58
484: aload         55
486: aload         56
488: invokevirtual #55
491: astore        60
493: aload         25
495: aload         60
497: invokevirtual #55
500: astore        61
502: aload         21
504: aload         60
506: invokevirtual #53
509: dstore        62
511: new           #27
514: dup
515: aload         9
517: aload         21
519: invokespecial #56
522: astore        64
524: aload         64
526: invokevirtual #93
529: astore        65
531: aload         65
533: invokevirtual #222
536: astore        66
538: aload_1
539: aload         66
541: invokestatic  #154
544: ldc           #223
546: invokestatic  #21
549: goto          554
552: astore        67
554: aload_1
555: invokestatic  #33
558: aload_1
559: invokestatic  #34
562: ldc           #225
564: invokestatic  #36
567: new           #10
570: dup
571: invokespecial #11
574: ldc           #12
576: invokevirtual #13
579: dload         5
581: invokevirtual #60
584: ldc           #15
586: invokevirtual #13
589: dconst_0
590: invokevirtual #60
593: ldc           #12
595: invokevirtual #13
598: invokevirtual #16
601: dload         5
603: dconst_0
604: dcmpl
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #17
616: new           #10
619: dup
620: invokespecial #11
623: ldc           #12
625: invokevirtual #13
628: dload         7
630: invokevirtual #60
633: ldc           #15
635: invokevirtual #13
638: dconst_0
639: invokevirtual #60
642: ldc           #12
644: invokevirtual #13
647: invokevirtual #16
650: dload         7
652: dconst_0
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #17
665: new           #10
668: dup
669: invokespecial #11
672: ldc           #12
674: invokevirtual #13
677: dload         12
679: invokevirtual #60
682: ldc           #15
684: invokevirtual #13
687: dconst_0
688: invokevirtual #60
691: ldc           #12
693: invokevirtual #13
696: invokevirtual #16
699: dload         12
701: dconst_0
702: dcmpl
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #17
714: new           #10
717: dup
718: invokespecial #11
721: ldc           #12
723: invokevirtual #13
726: dload         14
728: invokevirtual #60
731: ldc           #15
733: invokevirtual #13
736: dconst_0
737: invokevirtual #60
740: ldc           #12
742: invokevirtual #13
745: invokevirtual #16
748: dload         14
750: dconst_0
751: dcmpl
752: ifne          759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #17
763: new           #10
766: dup
767: invokespecial #11
770: ldc           #12
772: invokevirtual #13
775: iload         16
777: invokevirtual #14
780: ldc           #15
782: invokevirtual #13
785: iconst_0
786: invokevirtual #14
789: ldc           #12
791: invokevirtual #13
794: invokevirtual #16
797: iload         16
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #17
810: new           #10
813: dup
814: invokespecial #11
817: ldc           #12
819: invokevirtual #13
822: dload         17
824: invokevirtual #60
827: ldc           #15
829: invokevirtual #13
832: dconst_0
833: invokevirtual #60
836: ldc           #12
838: invokevirtual #13
841: invokevirtual #16
844: dload         17
846: dconst_0
847: dcmpl
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #17
859: aload         19
861: invokestatic  #33
864: new           #10
867: dup
868: invokespecial #11
871: ldc           #12
873: invokevirtual #13
876: dload         22
878: invokevirtual #60
881: ldc           #15
883: invokevirtual #13
886: dconst_0
887: invokevirtual #60
890: ldc           #12
892: invokevirtual #13
895: invokevirtual #16
898: dload         22
900: dconst_0
901: dcmpl
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #17
913: new           #10
916: dup
917: invokespecial #11
920: ldc           #12
922: invokevirtual #13
925: dload         26
927: invokevirtual #60
930: ldc           #15
932: invokevirtual #13
935: dconst_0
936: invokevirtual #60
939: ldc           #12
941: invokevirtual #13
944: invokevirtual #16
947: dload         26
949: dconst_0
950: dcmpl
951: ifne          958
954: iconst_1
955: goto          959
958: iconst_0
959: invokestatic  #17
962: new           #10
965: dup
966: invokespecial #11
969: ldc           #12
971: invokevirtual #13
974: dload         28
976: invokevirtual #60
979: ldc           #15
981: invokevirtual #13
984: ldc2_w        #61
987: invokevirtual #60
990: ldc           #12
992: invokevirtual #13
995: invokevirtual #16
998: dload         28
1000: ldc2_w        #61
1003: dcmpl
1004: ifne          1011
1007: iconst_1
1008: goto          1012
1011: iconst_0
1012: invokestatic  #17
1015: new           #10
1018: dup
1019: invokespecial #11
1022: ldc           #12
1024: invokevirtual #13
1027: dload         32
1029: invokevirtual #60
1032: ldc           #15
1034: invokevirtual #13
1037: dconst_0
1038: invokevirtual #60
1041: ldc           #12
1043: invokevirtual #13
1046: invokevirtual #16
1049: dload         32
1051: dconst_0
1052: dcmpl
1053: ifne          1060
1056: iconst_1
1057: goto          1061
1060: iconst_0
1061: invokestatic  #17
1064: new           #10
1067: dup
1068: invokespecial #11
1071: ldc           #12
1073: invokevirtual #13
1076: dload         34
1078: invokevirtual #60
1081: ldc           #15
1083: invokevirtual #13
1086: ldc2_w        #61
1089: invokevirtual #60
1092: ldc           #12
1094: invokevirtual #13
1097: invokevirtual #16
1100: dload         34
1102: ldc2_w        #61
1105: dcmpl
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #17
1117: new           #10
1120: dup
1121: invokespecial #11
1124: ldc           #12
1126: invokevirtual #13
1129: dload         36
1131: invokevirtual #60
1134: ldc           #15
1136: invokevirtual #13
1139: dconst_0
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         36
1153: dconst_0
1154: dcmpl
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #17
1166: new           #10
1169: dup
1170: invokespecial #11
1173: ldc           #12
1175: invokevirtual #13
1178: dload         41
1180: invokevirtual #60
1183: ldc           #15
1185: invokevirtual #13
1188: dconst_0
1189: invokevirtual #60
1192: ldc           #12
1194: invokevirtual #13
1197: invokevirtual #16
1200: dload         41
1202: dconst_0
1203: dcmpl
1204: ifne          1211
1207: iconst_1
1208: goto          1212
1211: iconst_0
1212: invokestatic  #17
1215: new           #10
1218: dup
1219: invokespecial #11
1222: ldc           #12
1224: invokevirtual #13
1227: dload         43
1229: invokevirtual #60
1232: ldc           #15
1234: invokevirtual #13
1237: dconst_0
1238: invokevirtual #60
1241: ldc           #12
1243: invokevirtual #13
1246: invokevirtual #16
1249: dload         43
1251: dconst_0
1252: dcmpl
1253: ifne          1260
1256: iconst_1
1257: goto          1261
1260: iconst_0
1261: invokestatic  #17
1264: new           #10
1267: dup
1268: invokespecial #11
1271: ldc           #12
1273: invokevirtual #13
1276: dload         48
1278: invokevirtual #60
1281: ldc           #15
1283: invokevirtual #13
1286: dconst_0
1287: invokevirtual #60
1290: ldc           #12
1292: invokevirtual #13
1295: invokevirtual #16
1298: dload         48
1300: dconst_0
1301: dcmpl
1302: ifne          1309
1305: iconst_1
1306: goto          1310
1309: iconst_0
1310: invokestatic  #17
1313: new           #10
1316: dup
1317: invokespecial #11
1320: ldc           #12
1322: invokevirtual #13
1325: dload         50
1327: invokevirtual #60
1330: ldc           #15
1332: invokevirtual #13
1335: dconst_0
1336: invokevirtual #60
1339: ldc           #12
1341: invokevirtual #13
1344: invokevirtual #16
1347: dload         50
1349: dconst_0
1350: dcmpl
1351: ifne          1358
1354: iconst_1
1355: goto          1359
1358: iconst_0
1359: invokestatic  #17
1362: new           #10
1365: dup
1366: invokespecial #11
1369: ldc           #12
1371: invokevirtual #13
1374: iload         52
1376: invokevirtual #14
1379: ldc           #15
1381: invokevirtual #13
1384: iconst_0
1385: invokevirtual #14
1388: ldc           #12
1390: invokevirtual #13
1393: invokevirtual #16
1396: iload         52
1398: ifne          1405
1401: iconst_1
1402: goto          1406
1405: iconst_0
1406: invokestatic  #17
1409: new           #10
1412: dup
1413: invokespecial #11
1416: ldc           #12
1418: invokevirtual #13
1421: dload         53
1423: invokevirtual #60
1426: ldc           #15
1428: invokevirtual #13
1431: dconst_0
1432: invokevirtual #60
1435: ldc           #12
1437: invokevirtual #13
1440: invokevirtual #16
1443: dload         53
1445: dconst_0
1446: dcmpl
1447: ifne          1454
1450: iconst_1
1451: goto          1455
1454: iconst_0
1455: invokestatic  #17
1458: aload         55
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         58
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: dconst_0
1486: invokevirtual #60
1489: ldc           #12
1491: invokevirtual #13
1494: invokevirtual #16
1497: dload         58
1499: dconst_0
1500: dcmpl
1501: ifne          1508
1504: iconst_1
1505: goto          1509
1508: iconst_0
1509: invokestatic  #17
1512: aload         60
1514: invokestatic  #33
1517: aload         61
1519: invokestatic  #33
1522: new           #10
1525: dup
1526: invokespecial #11
1529: ldc           #12
1531: invokevirtual #13
1534: dload         62
1536: invokevirtual #60
1539: ldc           #15
1541: invokevirtual #13
1544: ldc2_w        #63
1547: invokevirtual #60
1550: ldc           #12
1552: invokevirtual #13
1555: invokevirtual #16
1558: dload         62
1560: ldc2_w        #63
1563: dcmpl
1564: ifne          1571
1567: iconst_1
1568: goto          1572
1571: iconst_0
1572: invokestatic  #17
1575: aload         65
1577: invokestatic  #33
1580: aload         66
1582: invokestatic  #33
1585: return
Exception table:
from    to  target type
538   549   552   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1754
End line: 1838
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D93);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #96
519: astore        69
521: new           #43
524: dup
525: dconst_0
526: ldc2_w        #68
529: ldc2_w        #70
532: invokespecial #97
535: astore        70
537: aload         64
539: aload         70
541: invokevirtual #98
544: astore        71
546: aload         71
548: invokestatic  #227
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         4
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         4
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         6
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         6
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         11
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         11
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         13
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         13
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         15
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         15
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         16
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         16
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         18
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         21
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         21
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         25
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         25
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         27
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         27
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         31
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         31
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         33
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         33
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         35
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         35
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         40
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         40
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         42
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         42
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         47
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         47
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         49
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         49
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         51
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         51
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         52
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         52
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         54
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         57
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         57
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         59
1498: invokestatic  #33
1501: aload         60
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         61
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         61
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         64
1561: invokestatic  #33
1564: new           #10
1567: dup
1568: invokespecial #11
1571: ldc           #12
1573: invokevirtual #13
1576: dload         65
1578: invokevirtual #60
1581: ldc           #15
1583: invokevirtual #13
1586: dconst_0
1587: invokevirtual #60
1590: ldc           #12
1592: invokevirtual #13
1595: invokevirtual #16
1598: dload         65
1600: dconst_0
1601: dcmpl
1602: ifne          1609
1605: iconst_1
1606: goto          1610
1609: iconst_0
1610: invokestatic  #17
1613: new           #10
1616: dup
1617: invokespecial #11
1620: ldc           #12
1622: invokevirtual #13
1625: dload         67
1627: invokevirtual #60
1630: ldc           #15
1632: invokevirtual #13
1635: dconst_0
1636: invokevirtual #60
1639: ldc           #12
1641: invokevirtual #13
1644: invokevirtual #16
1647: dload         67
1649: dconst_0
1650: dcmpl
1651: ifne          1658
1654: iconst_1
1655: goto          1659
1658: iconst_0
1659: invokestatic  #17
1662: aload         69
1664: invokestatic  #33
1667: aload         71
1669: invokestatic  #33
1672: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1841
End line: 1852
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, (double) 157247029);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #229
34: invokespecial #103
37: astore_2
38: ldc           #20
40: invokestatic  #21
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
26    43    46   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1855
End line: 1946
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double[][] doubleArray98 = rotation97.getMatrix();
        double double99 = rotation97.getQ2();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + (-6.09767964807105d) + "'", double99 == (-6.09767964807105d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #96
519: astore        69
521: new           #27
524: dup
525: ldc2_w        #146
528: ldc2_w        #72
531: ldc2_w        #148
534: dconst_1
535: iconst_0
536: invokespecial #150
539: astore        70
541: aload         70
543: invokevirtual #96
546: astore        71
548: aload         70
550: invokevirtual #139
553: dstore        72
555: aload         64
557: aload         70
559: invokevirtual #160
562: astore        74
564: aload         74
566: invokevirtual #222
569: astore        75
571: aload         74
573: invokevirtual #139
576: dstore        76
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: dload         4
592: invokevirtual #60
595: ldc           #15
597: invokevirtual #13
600: dconst_0
601: invokevirtual #60
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: dload         4
614: dconst_0
615: dcmpl
616: ifne          623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #17
627: new           #10
630: dup
631: invokespecial #11
634: ldc           #12
636: invokevirtual #13
639: dload         6
641: invokevirtual #60
644: ldc           #15
646: invokevirtual #13
649: dconst_0
650: invokevirtual #60
653: ldc           #12
655: invokevirtual #13
658: invokevirtual #16
661: dload         6
663: dconst_0
664: dcmpl
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #17
676: new           #10
679: dup
680: invokespecial #11
683: ldc           #12
685: invokevirtual #13
688: dload         11
690: invokevirtual #60
693: ldc           #15
695: invokevirtual #13
698: dconst_0
699: invokevirtual #60
702: ldc           #12
704: invokevirtual #13
707: invokevirtual #16
710: dload         11
712: dconst_0
713: dcmpl
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #17
725: new           #10
728: dup
729: invokespecial #11
732: ldc           #12
734: invokevirtual #13
737: dload         13
739: invokevirtual #60
742: ldc           #15
744: invokevirtual #13
747: dconst_0
748: invokevirtual #60
751: ldc           #12
753: invokevirtual #13
756: invokevirtual #16
759: dload         13
761: dconst_0
762: dcmpl
763: ifne          770
766: iconst_1
767: goto          771
770: iconst_0
771: invokestatic  #17
774: new           #10
777: dup
778: invokespecial #11
781: ldc           #12
783: invokevirtual #13
786: iload         15
788: invokevirtual #14
791: ldc           #15
793: invokevirtual #13
796: iconst_0
797: invokevirtual #14
800: ldc           #12
802: invokevirtual #13
805: invokevirtual #16
808: iload         15
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: new           #10
824: dup
825: invokespecial #11
828: ldc           #12
830: invokevirtual #13
833: dload         16
835: invokevirtual #60
838: ldc           #15
840: invokevirtual #13
843: dconst_0
844: invokevirtual #60
847: ldc           #12
849: invokevirtual #13
852: invokevirtual #16
855: dload         16
857: dconst_0
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #17
870: aload         18
872: invokestatic  #33
875: new           #10
878: dup
879: invokespecial #11
882: ldc           #12
884: invokevirtual #13
887: dload         21
889: invokevirtual #60
892: ldc           #15
894: invokevirtual #13
897: dconst_0
898: invokevirtual #60
901: ldc           #12
903: invokevirtual #13
906: invokevirtual #16
909: dload         21
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #17
924: new           #10
927: dup
928: invokespecial #11
931: ldc           #12
933: invokevirtual #13
936: dload         25
938: invokevirtual #60
941: ldc           #15
943: invokevirtual #13
946: dconst_0
947: invokevirtual #60
950: ldc           #12
952: invokevirtual #13
955: invokevirtual #16
958: dload         25
960: dconst_0
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #17
973: new           #10
976: dup
977: invokespecial #11
980: ldc           #12
982: invokevirtual #13
985: dload         27
987: invokevirtual #60
990: ldc           #15
992: invokevirtual #13
995: ldc2_w        #61
998: invokevirtual #60
1001: ldc           #12
1003: invokevirtual #13
1006: invokevirtual #16
1009: dload         27
1011: ldc2_w        #61
1014: dcmpl
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #17
1026: new           #10
1029: dup
1030: invokespecial #11
1033: ldc           #12
1035: invokevirtual #13
1038: dload         31
1040: invokevirtual #60
1043: ldc           #15
1045: invokevirtual #13
1048: dconst_0
1049: invokevirtual #60
1052: ldc           #12
1054: invokevirtual #13
1057: invokevirtual #16
1060: dload         31
1062: dconst_0
1063: dcmpl
1064: ifne          1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #17
1075: new           #10
1078: dup
1079: invokespecial #11
1082: ldc           #12
1084: invokevirtual #13
1087: dload         33
1089: invokevirtual #60
1092: ldc           #15
1094: invokevirtual #13
1097: ldc2_w        #61
1100: invokevirtual #60
1103: ldc           #12
1105: invokevirtual #13
1108: invokevirtual #16
1111: dload         33
1113: ldc2_w        #61
1116: dcmpl
1117: ifne          1124
1120: iconst_1
1121: goto          1125
1124: iconst_0
1125: invokestatic  #17
1128: new           #10
1131: dup
1132: invokespecial #11
1135: ldc           #12
1137: invokevirtual #13
1140: dload         35
1142: invokevirtual #60
1145: ldc           #15
1147: invokevirtual #13
1150: dconst_0
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         35
1164: dconst_0
1165: dcmpl
1166: ifne          1173
1169: iconst_1
1170: goto          1174
1173: iconst_0
1174: invokestatic  #17
1177: new           #10
1180: dup
1181: invokespecial #11
1184: ldc           #12
1186: invokevirtual #13
1189: dload         40
1191: invokevirtual #60
1194: ldc           #15
1196: invokevirtual #13
1199: dconst_0
1200: invokevirtual #60
1203: ldc           #12
1205: invokevirtual #13
1208: invokevirtual #16
1211: dload         40
1213: dconst_0
1214: dcmpl
1215: ifne          1222
1218: iconst_1
1219: goto          1223
1222: iconst_0
1223: invokestatic  #17
1226: new           #10
1229: dup
1230: invokespecial #11
1233: ldc           #12
1235: invokevirtual #13
1238: dload         42
1240: invokevirtual #60
1243: ldc           #15
1245: invokevirtual #13
1248: dconst_0
1249: invokevirtual #60
1252: ldc           #12
1254: invokevirtual #13
1257: invokevirtual #16
1260: dload         42
1262: dconst_0
1263: dcmpl
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #17
1275: new           #10
1278: dup
1279: invokespecial #11
1282: ldc           #12
1284: invokevirtual #13
1287: dload         47
1289: invokevirtual #60
1292: ldc           #15
1294: invokevirtual #13
1297: dconst_0
1298: invokevirtual #60
1301: ldc           #12
1303: invokevirtual #13
1306: invokevirtual #16
1309: dload         47
1311: dconst_0
1312: dcmpl
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #17
1324: new           #10
1327: dup
1328: invokespecial #11
1331: ldc           #12
1333: invokevirtual #13
1336: dload         49
1338: invokevirtual #60
1341: ldc           #15
1343: invokevirtual #13
1346: dconst_0
1347: invokevirtual #60
1350: ldc           #12
1352: invokevirtual #13
1355: invokevirtual #16
1358: dload         49
1360: dconst_0
1361: dcmpl
1362: ifne          1369
1365: iconst_1
1366: goto          1370
1369: iconst_0
1370: invokestatic  #17
1373: new           #10
1376: dup
1377: invokespecial #11
1380: ldc           #12
1382: invokevirtual #13
1385: iload         51
1387: invokevirtual #14
1390: ldc           #15
1392: invokevirtual #13
1395: iconst_0
1396: invokevirtual #14
1399: ldc           #12
1401: invokevirtual #13
1404: invokevirtual #16
1407: iload         51
1409: ifne          1416
1412: iconst_1
1413: goto          1417
1416: iconst_0
1417: invokestatic  #17
1420: new           #10
1423: dup
1424: invokespecial #11
1427: ldc           #12
1429: invokevirtual #13
1432: dload         52
1434: invokevirtual #60
1437: ldc           #15
1439: invokevirtual #13
1442: dconst_0
1443: invokevirtual #60
1446: ldc           #12
1448: invokevirtual #13
1451: invokevirtual #16
1454: dload         52
1456: dconst_0
1457: dcmpl
1458: ifne          1465
1461: iconst_1
1462: goto          1466
1465: iconst_0
1466: invokestatic  #17
1469: aload         54
1471: invokestatic  #33
1474: new           #10
1477: dup
1478: invokespecial #11
1481: ldc           #12
1483: invokevirtual #13
1486: dload         57
1488: invokevirtual #60
1491: ldc           #15
1493: invokevirtual #13
1496: dconst_0
1497: invokevirtual #60
1500: ldc           #12
1502: invokevirtual #13
1505: invokevirtual #16
1508: dload         57
1510: dconst_0
1511: dcmpl
1512: ifne          1519
1515: iconst_1
1516: goto          1520
1519: iconst_0
1520: invokestatic  #17
1523: aload         59
1525: invokestatic  #33
1528: aload         60
1530: invokestatic  #33
1533: new           #10
1536: dup
1537: invokespecial #11
1540: ldc           #12
1542: invokevirtual #13
1545: dload         61
1547: invokevirtual #60
1550: ldc           #15
1552: invokevirtual #13
1555: ldc2_w        #63
1558: invokevirtual #60
1561: ldc           #12
1563: invokevirtual #13
1566: invokevirtual #16
1569: dload         61
1571: ldc2_w        #63
1574: dcmpl
1575: ifne          1582
1578: iconst_1
1579: goto          1583
1582: iconst_0
1583: invokestatic  #17
1586: aload         64
1588: invokestatic  #33
1591: new           #10
1594: dup
1595: invokespecial #11
1598: ldc           #12
1600: invokevirtual #13
1603: dload         65
1605: invokevirtual #60
1608: ldc           #15
1610: invokevirtual #13
1613: dconst_0
1614: invokevirtual #60
1617: ldc           #12
1619: invokevirtual #13
1622: invokevirtual #16
1625: dload         65
1627: dconst_0
1628: dcmpl
1629: ifne          1636
1632: iconst_1
1633: goto          1637
1636: iconst_0
1637: invokestatic  #17
1640: new           #10
1643: dup
1644: invokespecial #11
1647: ldc           #12
1649: invokevirtual #13
1652: dload         67
1654: invokevirtual #60
1657: ldc           #15
1659: invokevirtual #13
1662: dconst_0
1663: invokevirtual #60
1666: ldc           #12
1668: invokevirtual #13
1671: invokevirtual #16
1674: dload         67
1676: dconst_0
1677: dcmpl
1678: ifne          1685
1681: iconst_1
1682: goto          1686
1685: iconst_0
1686: invokestatic  #17
1689: aload         69
1691: invokestatic  #33
1694: aload         71
1696: invokestatic  #33
1699: new           #10
1702: dup
1703: invokespecial #11
1706: ldc           #12
1708: invokevirtual #13
1711: dload         72
1713: invokevirtual #60
1716: ldc           #15
1718: invokevirtual #13
1721: ldc2_w        #148
1724: invokevirtual #60
1727: ldc           #12
1729: invokevirtual #13
1732: invokevirtual #16
1735: dload         72
1737: ldc2_w        #148
1740: dcmpl
1741: ifne          1748
1744: iconst_1
1745: goto          1749
1748: iconst_0
1749: invokestatic  #17
1752: aload         74
1754: invokestatic  #33
1757: aload         75
1759: invokestatic  #33
1762: new           #10
1765: dup
1766: invokespecial #11
1769: ldc           #12
1771: invokevirtual #13
1774: dload         76
1776: invokevirtual #60
1779: ldc           #15
1781: invokevirtual #13
1784: ldc2_w        #232
1787: invokevirtual #60
1790: ldc           #12
1792: invokevirtual #13
1795: invokevirtual #16
1798: dload         76
1800: ldc2_w        #232
1803: dcmpl
1804: ifne          1811
1807: iconst_1
1808: goto          1812
1811: iconst_0
1812: invokestatic  #17
1815: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1949
End line: 1960
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 132.0d, 0.0d, (double) 41L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: ldc2_w        #235
34: dconst_0
35: ldc2_w        #237
38: invokespecial #81
41: astore_2
42: ldc           #20
44: invokestatic  #21
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
26    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1963
End line: 1971
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 9700L, 1.053671212772351E-8d, (-0.7853981633974483d), (double) 3, false);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getQ0();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 9700.0d + "'", double7 == 9700.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #239
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #186
31: ldc2_w        #188
34: ldc2_w        #101
37: ldc2_w        #190
40: iconst_0
41: invokespecial #150
44: astore_1
45: aload_1
46: invokevirtual #240
49: dstore_2
50: aload_1
51: invokevirtual #241
54: dstore        4
56: dload_2
57: invokestatic  #242
60: invokestatic  #243
63: new           #10
66: dup
67: invokespecial #11
70: ldc           #12
72: invokevirtual #13
75: dload         4
77: invokevirtual #60
80: ldc           #15
82: invokevirtual #13
85: ldc2_w        #186
88: invokevirtual #60
91: ldc           #12
93: invokevirtual #13
96: invokevirtual #16
99: dload         4
101: ldc2_w        #186
104: dcmpl
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #17
116: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1974
End line: 2056
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        double double89 = vector3D88.getNorm1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         64
502: invokevirtual #94
505: dstore        65
507: aload         64
509: invokevirtual #95
512: dstore        67
514: aload         64
516: invokevirtual #96
519: astore        69
521: aload         69
523: invokevirtual #162
526: dstore        70
528: new           #10
531: dup
532: invokespecial #11
535: ldc           #12
537: invokevirtual #13
540: dload         4
542: invokevirtual #60
545: ldc           #15
547: invokevirtual #13
550: dconst_0
551: invokevirtual #60
554: ldc           #12
556: invokevirtual #13
559: invokevirtual #16
562: dload         4
564: dconst_0
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #17
577: new           #10
580: dup
581: invokespecial #11
584: ldc           #12
586: invokevirtual #13
589: dload         6
591: invokevirtual #60
594: ldc           #15
596: invokevirtual #13
599: dconst_0
600: invokevirtual #60
603: ldc           #12
605: invokevirtual #13
608: invokevirtual #16
611: dload         6
613: dconst_0
614: dcmpl
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #17
626: new           #10
629: dup
630: invokespecial #11
633: ldc           #12
635: invokevirtual #13
638: dload         11
640: invokevirtual #60
643: ldc           #15
645: invokevirtual #13
648: dconst_0
649: invokevirtual #60
652: ldc           #12
654: invokevirtual #13
657: invokevirtual #16
660: dload         11
662: dconst_0
663: dcmpl
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #17
675: new           #10
678: dup
679: invokespecial #11
682: ldc           #12
684: invokevirtual #13
687: dload         13
689: invokevirtual #60
692: ldc           #15
694: invokevirtual #13
697: dconst_0
698: invokevirtual #60
701: ldc           #12
703: invokevirtual #13
706: invokevirtual #16
709: dload         13
711: dconst_0
712: dcmpl
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #17
724: new           #10
727: dup
728: invokespecial #11
731: ldc           #12
733: invokevirtual #13
736: iload         15
738: invokevirtual #14
741: ldc           #15
743: invokevirtual #13
746: iconst_0
747: invokevirtual #14
750: ldc           #12
752: invokevirtual #13
755: invokevirtual #16
758: iload         15
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #17
771: new           #10
774: dup
775: invokespecial #11
778: ldc           #12
780: invokevirtual #13
783: dload         16
785: invokevirtual #60
788: ldc           #15
790: invokevirtual #13
793: dconst_0
794: invokevirtual #60
797: ldc           #12
799: invokevirtual #13
802: invokevirtual #16
805: dload         16
807: dconst_0
808: dcmpl
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #17
820: aload         18
822: invokestatic  #33
825: new           #10
828: dup
829: invokespecial #11
832: ldc           #12
834: invokevirtual #13
837: dload         21
839: invokevirtual #60
842: ldc           #15
844: invokevirtual #13
847: dconst_0
848: invokevirtual #60
851: ldc           #12
853: invokevirtual #13
856: invokevirtual #16
859: dload         21
861: dconst_0
862: dcmpl
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #17
874: new           #10
877: dup
878: invokespecial #11
881: ldc           #12
883: invokevirtual #13
886: dload         25
888: invokevirtual #60
891: ldc           #15
893: invokevirtual #13
896: dconst_0
897: invokevirtual #60
900: ldc           #12
902: invokevirtual #13
905: invokevirtual #16
908: dload         25
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #17
923: new           #10
926: dup
927: invokespecial #11
930: ldc           #12
932: invokevirtual #13
935: dload         27
937: invokevirtual #60
940: ldc           #15
942: invokevirtual #13
945: ldc2_w        #61
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         27
961: ldc2_w        #61
964: dcmpl
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #17
976: new           #10
979: dup
980: invokespecial #11
983: ldc           #12
985: invokevirtual #13
988: dload         31
990: invokevirtual #60
993: ldc           #15
995: invokevirtual #13
998: dconst_0
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         31
1012: dconst_0
1013: dcmpl
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #17
1025: new           #10
1028: dup
1029: invokespecial #11
1032: ldc           #12
1034: invokevirtual #13
1037: dload         33
1039: invokevirtual #60
1042: ldc           #15
1044: invokevirtual #13
1047: ldc2_w        #61
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         33
1063: ldc2_w        #61
1066: dcmpl
1067: ifne          1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #17
1078: new           #10
1081: dup
1082: invokespecial #11
1085: ldc           #12
1087: invokevirtual #13
1090: dload         35
1092: invokevirtual #60
1095: ldc           #15
1097: invokevirtual #13
1100: dconst_0
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         35
1114: dconst_0
1115: dcmpl
1116: ifne          1123
1119: iconst_1
1120: goto          1124
1123: iconst_0
1124: invokestatic  #17
1127: new           #10
1130: dup
1131: invokespecial #11
1134: ldc           #12
1136: invokevirtual #13
1139: dload         40
1141: invokevirtual #60
1144: ldc           #15
1146: invokevirtual #13
1149: dconst_0
1150: invokevirtual #60
1153: ldc           #12
1155: invokevirtual #13
1158: invokevirtual #16
1161: dload         40
1163: dconst_0
1164: dcmpl
1165: ifne          1172
1168: iconst_1
1169: goto          1173
1172: iconst_0
1173: invokestatic  #17
1176: new           #10
1179: dup
1180: invokespecial #11
1183: ldc           #12
1185: invokevirtual #13
1188: dload         42
1190: invokevirtual #60
1193: ldc           #15
1195: invokevirtual #13
1198: dconst_0
1199: invokevirtual #60
1202: ldc           #12
1204: invokevirtual #13
1207: invokevirtual #16
1210: dload         42
1212: dconst_0
1213: dcmpl
1214: ifne          1221
1217: iconst_1
1218: goto          1222
1221: iconst_0
1222: invokestatic  #17
1225: new           #10
1228: dup
1229: invokespecial #11
1232: ldc           #12
1234: invokevirtual #13
1237: dload         47
1239: invokevirtual #60
1242: ldc           #15
1244: invokevirtual #13
1247: dconst_0
1248: invokevirtual #60
1251: ldc           #12
1253: invokevirtual #13
1256: invokevirtual #16
1259: dload         47
1261: dconst_0
1262: dcmpl
1263: ifne          1270
1266: iconst_1
1267: goto          1271
1270: iconst_0
1271: invokestatic  #17
1274: new           #10
1277: dup
1278: invokespecial #11
1281: ldc           #12
1283: invokevirtual #13
1286: dload         49
1288: invokevirtual #60
1291: ldc           #15
1293: invokevirtual #13
1296: dconst_0
1297: invokevirtual #60
1300: ldc           #12
1302: invokevirtual #13
1305: invokevirtual #16
1308: dload         49
1310: dconst_0
1311: dcmpl
1312: ifne          1319
1315: iconst_1
1316: goto          1320
1319: iconst_0
1320: invokestatic  #17
1323: new           #10
1326: dup
1327: invokespecial #11
1330: ldc           #12
1332: invokevirtual #13
1335: iload         51
1337: invokevirtual #14
1340: ldc           #15
1342: invokevirtual #13
1345: iconst_0
1346: invokevirtual #14
1349: ldc           #12
1351: invokevirtual #13
1354: invokevirtual #16
1357: iload         51
1359: ifne          1366
1362: iconst_1
1363: goto          1367
1366: iconst_0
1367: invokestatic  #17
1370: new           #10
1373: dup
1374: invokespecial #11
1377: ldc           #12
1379: invokevirtual #13
1382: dload         52
1384: invokevirtual #60
1387: ldc           #15
1389: invokevirtual #13
1392: dconst_0
1393: invokevirtual #60
1396: ldc           #12
1398: invokevirtual #13
1401: invokevirtual #16
1404: dload         52
1406: dconst_0
1407: dcmpl
1408: ifne          1415
1411: iconst_1
1412: goto          1416
1415: iconst_0
1416: invokestatic  #17
1419: aload         54
1421: invokestatic  #33
1424: new           #10
1427: dup
1428: invokespecial #11
1431: ldc           #12
1433: invokevirtual #13
1436: dload         57
1438: invokevirtual #60
1441: ldc           #15
1443: invokevirtual #13
1446: dconst_0
1447: invokevirtual #60
1450: ldc           #12
1452: invokevirtual #13
1455: invokevirtual #16
1458: dload         57
1460: dconst_0
1461: dcmpl
1462: ifne          1469
1465: iconst_1
1466: goto          1470
1469: iconst_0
1470: invokestatic  #17
1473: aload         59
1475: invokestatic  #33
1478: aload         60
1480: invokestatic  #33
1483: new           #10
1486: dup
1487: invokespecial #11
1490: ldc           #12
1492: invokevirtual #13
1495: dload         61
1497: invokevirtual #60
1500: ldc           #15
1502: invokevirtual #13
1505: ldc2_w        #63
1508: invokevirtual #60
1511: ldc           #12
1513: invokevirtual #13
1516: invokevirtual #16
1519: dload         61
1521: ldc2_w        #63
1524: dcmpl
1525: ifne          1532
1528: iconst_1
1529: goto          1533
1532: iconst_0
1533: invokestatic  #17
1536: aload         64
1538: invokestatic  #33
1541: new           #10
1544: dup
1545: invokespecial #11
1548: ldc           #12
1550: invokevirtual #13
1553: dload         65
1555: invokevirtual #60
1558: ldc           #15
1560: invokevirtual #13
1563: dconst_0
1564: invokevirtual #60
1567: ldc           #12
1569: invokevirtual #13
1572: invokevirtual #16
1575: dload         65
1577: dconst_0
1578: dcmpl
1579: ifne          1586
1582: iconst_1
1583: goto          1587
1586: iconst_0
1587: invokestatic  #17
1590: new           #10
1593: dup
1594: invokespecial #11
1597: ldc           #12
1599: invokevirtual #13
1602: dload         67
1604: invokevirtual #60
1607: ldc           #15
1609: invokevirtual #13
1612: dconst_0
1613: invokevirtual #60
1616: ldc           #12
1618: invokevirtual #13
1621: invokevirtual #16
1624: dload         67
1626: dconst_0
1627: dcmpl
1628: ifne          1635
1631: iconst_1
1632: goto          1636
1635: iconst_0
1636: invokestatic  #17
1639: aload         69
1641: invokestatic  #33
1644: new           #10
1647: dup
1648: invokespecial #11
1651: ldc           #12
1653: invokevirtual #13
1656: dload         70
1658: invokevirtual #60
1661: ldc           #15
1663: invokevirtual #13
1666: dconst_1
1667: invokevirtual #60
1670: ldc           #12
1672: invokevirtual #13
1675: invokevirtual #16
1678: dload         70
1680: dconst_1
1681: dcmpl
1682: ifne          1689
1685: iconst_1
1686: goto          1690
1689: iconst_0
1690: invokestatic  #17
1693: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 2059
End line: 2073
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation8 = rotation5.applyTo(rotation7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: ldc2_w        #146
31: ldc2_w        #72
34: ldc2_w        #148
37: dconst_1
38: iconst_0
39: invokespecial #150
42: astore_1
43: aload_1
44: invokevirtual #96
47: astore_2
48: aconst_null
49: astore_3
50: aload_1
51: aload_3
52: invokevirtual #160
55: astore        4
57: ldc           #20
59: invokestatic  #21
62: goto          67
65: astore        4
67: aload_2
68: invokestatic  #33
71: return
Exception table:
from    to  target type
50    62    65   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 2076
End line: 2153
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        double[] doubleArray2 = new double[] { (byte) 1 };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray2, doubleArray3);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection5 = null;
        double[] doubleArray7 = new double[] { 0 };
        double[] doubleArray9 = new double[] { 0 };
        double[] doubleArray11 = new double[] { 0 };
        double[] doubleArray13 = new double[] { 0 };
        double[] doubleArray15 = new double[] { 0 };
        double[][] doubleArray16 = new double[][] { doubleArray7, doubleArray9, doubleArray11, doubleArray13, doubleArray15 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray2, orderDirection5, doubleArray16);
        double[] doubleArray19 = new double[] { (byte) 1 };
        double[] doubleArray20 = new double[] {};
        boolean boolean21 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray19, doubleArray20);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection22 = null;
        double[] doubleArray24 = new double[] { 0 };
        double[] doubleArray26 = new double[] { 0 };
        double[] doubleArray28 = new double[] { 0 };
        double[] doubleArray30 = new double[] { 0 };
        double[] doubleArray32 = new double[] { 0 };
        double[][] doubleArray33 = new double[][] { doubleArray24, doubleArray26, doubleArray28, doubleArray30, doubleArray32 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray19, orderDirection22, doubleArray33);
        double double35 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray2, doubleArray19);
        double[] doubleArray37 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray2, 10);
        double[] doubleArray39 = new double[] { 0.0d };
        double[][] doubleArray40 = new double[][] { doubleArray39 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray2, doubleArray40);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException42 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation44 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray40, (double) 41L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: iconst_1
27: newarray       double
29: dup
30: iconst_0
31: dconst_1
32: dastore
33: astore_2
34: iconst_0
35: newarray       double
37: astore_3
38: aload_2
39: aload_3
40: invokestatic  #24
43: istore        4
45: aconst_null
46: astore        5
48: iconst_1
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: astore        6
57: iconst_1
58: newarray       double
60: dup
61: iconst_0
62: dconst_0
63: dastore
64: astore        7
66: iconst_1
67: newarray       double
69: dup
70: iconst_0
71: dconst_0
72: dastore
73: astore        8
75: iconst_1
76: newarray       double
78: dup
79: iconst_0
80: dconst_0
81: dastore
82: astore        9
84: iconst_1
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: astore        10
93: iconst_5
94: anewarray     #25
97: dup
98: iconst_0
99: aload         6
101: aastore
102: dup
103: iconst_1
104: aload         7
106: aastore
107: dup
108: iconst_2
109: aload         8
111: aastore
112: dup
113: iconst_3
114: aload         9
116: aastore
117: dup
118: iconst_4
119: aload         10
121: aastore
122: astore        11
124: aload_2
125: aload         5
127: aload         11
129: invokestatic  #26
132: iconst_1
133: newarray       double
135: dup
136: iconst_0
137: dconst_1
138: dastore
139: astore        12
141: iconst_0
142: newarray       double
144: astore        13
146: aload         12
148: aload         13
150: invokestatic  #24
153: istore        14
155: aconst_null
156: astore        15
158: iconst_1
159: newarray       double
161: dup
162: iconst_0
163: dconst_0
164: dastore
165: astore        16
167: iconst_1
168: newarray       double
170: dup
171: iconst_0
172: dconst_0
173: dastore
174: astore        17
176: iconst_1
177: newarray       double
179: dup
180: iconst_0
181: dconst_0
182: dastore
183: astore        18
185: iconst_1
186: newarray       double
188: dup
189: iconst_0
190: dconst_0
191: dastore
192: astore        19
194: iconst_1
195: newarray       double
197: dup
198: iconst_0
199: dconst_0
200: dastore
201: astore        20
203: iconst_5
204: anewarray     #25
207: dup
208: iconst_0
209: aload         16
211: aastore
212: dup
213: iconst_1
214: aload         17
216: aastore
217: dup
218: iconst_2
219: aload         18
221: aastore
222: dup
223: iconst_3
224: aload         19
226: aastore
227: dup
228: iconst_4
229: aload         20
231: aastore
232: astore        21
234: aload         12
236: aload         15
238: aload         21
240: invokestatic  #26
243: aload_2
244: aload         12
246: invokestatic  #152
249: dstore        22
251: aload_2
252: bipush        10
254: invokestatic  #153
257: astore        24
259: iconst_1
260: newarray       double
262: dup
263: iconst_0
264: dconst_0
265: dastore
266: astore        25
268: iconst_1
269: anewarray     #25
272: dup
273: iconst_0
274: aload         25
276: aastore
277: astore        26
279: aload_2
280: aload         26
282: invokestatic  #154
285: new           #247
288: dup
289: aload_1
290: aload         26
292: checkcast     #248
295: invokespecial #249
298: astore        27
300: new           #27
303: dup
304: aload         26
306: ldc2_w        #237
309: invokespecial #30
312: astore        28
314: ldc           #157
316: invokestatic  #21
319: goto          324
322: astore        28
324: aload_2
325: invokestatic  #33
328: aload_2
329: invokestatic  #34
332: ldc           #35
334: invokestatic  #36
337: aload_3
338: invokestatic  #33
341: aload_3
342: invokestatic  #34
345: ldc           #37
347: invokestatic  #36
350: new           #10
353: dup
354: invokespecial #11
357: ldc           #12
359: invokevirtual #13
362: iload         4
364: invokevirtual #14
367: ldc           #15
369: invokevirtual #13
372: iconst_0
373: invokevirtual #14
376: ldc           #12
378: invokevirtual #13
381: invokevirtual #16
384: iload         4
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #17
397: aload         6
399: invokestatic  #33
402: aload         6
404: invokestatic  #34
407: ldc           #38
409: invokestatic  #36
412: aload         7
414: invokestatic  #33
417: aload         7
419: invokestatic  #34
422: ldc           #38
424: invokestatic  #36
427: aload         8
429: invokestatic  #33
432: aload         8
434: invokestatic  #34
437: ldc           #38
439: invokestatic  #36
442: aload         9
444: invokestatic  #33
447: aload         9
449: invokestatic  #34
452: ldc           #38
454: invokestatic  #36
457: aload         10
459: invokestatic  #33
462: aload         10
464: invokestatic  #34
467: ldc           #38
469: invokestatic  #36
472: aload         11
474: invokestatic  #33
477: aload         12
479: invokestatic  #33
482: aload         12
484: invokestatic  #34
487: ldc           #35
489: invokestatic  #36
492: aload         13
494: invokestatic  #33
497: aload         13
499: invokestatic  #34
502: ldc           #37
504: invokestatic  #36
507: new           #10
510: dup
511: invokespecial #11
514: ldc           #12
516: invokevirtual #13
519: iload         14
521: invokevirtual #14
524: ldc           #15
526: invokevirtual #13
529: iconst_0
530: invokevirtual #14
533: ldc           #12
535: invokevirtual #13
538: invokevirtual #16
541: iload         14
543: ifne          550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #17
554: aload         16
556: invokestatic  #33
559: aload         16
561: invokestatic  #34
564: ldc           #38
566: invokestatic  #36
569: aload         17
571: invokestatic  #33
574: aload         17
576: invokestatic  #34
579: ldc           #38
581: invokestatic  #36
584: aload         18
586: invokestatic  #33
589: aload         18
591: invokestatic  #34
594: ldc           #38
596: invokestatic  #36
599: aload         19
601: invokestatic  #33
604: aload         19
606: invokestatic  #34
609: ldc           #38
611: invokestatic  #36
614: aload         20
616: invokestatic  #33
619: aload         20
621: invokestatic  #34
624: ldc           #38
626: invokestatic  #36
629: aload         21
631: invokestatic  #33
634: new           #10
637: dup
638: invokespecial #11
641: ldc           #12
643: invokevirtual #13
646: dload         22
648: invokevirtual #60
651: ldc           #15
653: invokevirtual #13
656: dconst_0
657: invokevirtual #60
660: ldc           #12
662: invokevirtual #13
665: invokevirtual #16
668: dload         22
670: dconst_0
671: dcmpl
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #17
683: aload         24
685: invokestatic  #33
688: aload         24
690: invokestatic  #34
693: ldc           #158
695: invokestatic  #36
698: aload         25
700: invokestatic  #33
703: aload         25
705: invokestatic  #34
708: ldc           #38
710: invokestatic  #36
713: aload         26
715: invokestatic  #33
718: return
Exception table:
from    to  target type
300   319   322   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 2156
End line: 2216
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double31 = vector3D2.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D20.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D20.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double43 = vector3D39.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        double double44 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D36, vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D47, vector3D53);
        boolean boolean56 = vector3D47.isInfinite();
        double double57 = vector3D36.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = vector3D47.negate();
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D33, vector3D47);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector60 = vector3D47.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation66 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = rotation66.getAxis();
        double double68 = euclidean3DVector60.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector60);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0000000065745156d + "'", double68 == 1.0000000065745156d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: aload_1
49: aload_2
50: invokevirtual #47
53: dstore_3
54: new           #43
57: dup
58: dconst_1
59: ldc2_w        #44
62: invokespecial #46
65: astore        5
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        6
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        7
93: aload         6
95: aload         7
97: invokevirtual #47
100: dstore        8
102: aload         5
104: aload         7
106: invokestatic  #48
109: dstore        10
111: new           #43
114: dup
115: dconst_1
116: ldc2_w        #44
119: invokespecial #46
122: astore        12
124: new           #43
127: dup
128: dconst_1
129: ldc2_w        #44
132: invokespecial #46
135: astore        13
137: new           #43
140: dup
141: dconst_1
142: ldc2_w        #44
145: invokespecial #46
148: astore        14
150: aload         13
152: aload         14
154: invokevirtual #47
157: dstore        15
159: aload         12
161: aload         14
163: invokestatic  #48
166: dstore        17
168: aload         12
170: invokevirtual #49
173: istore        19
175: aload         5
177: aload         12
179: invokevirtual #50
182: dstore        20
184: aload_1
185: aload         12
187: invokevirtual #129
190: dstore        22
192: aload         12
194: invokevirtual #54
197: astore        24
199: aload         12
201: invokevirtual #193
204: astore        25
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        26
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        27
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        28
245: aload         27
247: aload         28
249: invokevirtual #47
252: dstore        29
254: aload         26
256: aload         28
258: invokestatic  #48
261: dstore        31
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        33
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        34
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        35
302: aload         34
304: aload         35
306: invokevirtual #47
309: dstore        36
311: aload         33
313: aload         35
315: invokestatic  #48
318: dstore        38
320: aload         33
322: invokevirtual #49
325: istore        40
327: aload         26
329: aload         33
331: invokevirtual #50
334: dstore        41
336: aload         33
338: invokevirtual #54
341: astore        43
343: aload         25
345: aload         33
347: invokestatic  #127
350: dstore        44
352: aload         33
354: invokevirtual #198
357: astore        46
359: new           #27
362: dup
363: ldc2_w        #146
366: ldc2_w        #72
369: ldc2_w        #148
372: dconst_1
373: iconst_0
374: invokespecial #150
377: astore        47
379: aload         47
381: invokevirtual #96
384: astore        48
386: aload         46
388: aload         48
390: invokeinterface #251,  2
395: dstore        49
397: new           #10
400: dup
401: invokespecial #11
404: ldc           #12
406: invokevirtual #13
409: dload_3
410: invokevirtual #60
413: ldc           #15
415: invokevirtual #13
418: dconst_0
419: invokevirtual #60
422: ldc           #12
424: invokevirtual #13
427: invokevirtual #16
430: dload_3
431: dconst_0
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #17
444: new           #10
447: dup
448: invokespecial #11
451: ldc           #12
453: invokevirtual #13
456: dload         8
458: invokevirtual #60
461: ldc           #15
463: invokevirtual #13
466: dconst_0
467: invokevirtual #60
470: ldc           #12
472: invokevirtual #13
475: invokevirtual #16
478: dload         8
480: dconst_0
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #17
493: new           #10
496: dup
497: invokespecial #11
500: ldc           #12
502: invokevirtual #13
505: dload         10
507: invokevirtual #60
510: ldc           #15
512: invokevirtual #13
515: dconst_0
516: invokevirtual #60
519: ldc           #12
521: invokevirtual #13
524: invokevirtual #16
527: dload         10
529: dconst_0
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #17
542: new           #10
545: dup
546: invokespecial #11
549: ldc           #12
551: invokevirtual #13
554: dload         15
556: invokevirtual #60
559: ldc           #15
561: invokevirtual #13
564: dconst_0
565: invokevirtual #60
568: ldc           #12
570: invokevirtual #13
573: invokevirtual #16
576: dload         15
578: dconst_0
579: dcmpl
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #17
591: new           #10
594: dup
595: invokespecial #11
598: ldc           #12
600: invokevirtual #13
603: dload         17
605: invokevirtual #60
608: ldc           #15
610: invokevirtual #13
613: dconst_0
614: invokevirtual #60
617: ldc           #12
619: invokevirtual #13
622: invokevirtual #16
625: dload         17
627: dconst_0
628: dcmpl
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #17
640: new           #10
643: dup
644: invokespecial #11
647: ldc           #12
649: invokevirtual #13
652: iload         19
654: invokevirtual #14
657: ldc           #15
659: invokevirtual #13
662: iconst_0
663: invokevirtual #14
666: ldc           #12
668: invokevirtual #13
671: invokevirtual #16
674: iload         19
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #17
687: new           #10
690: dup
691: invokespecial #11
694: ldc           #12
696: invokevirtual #13
699: dload         20
701: invokevirtual #60
704: ldc           #15
706: invokevirtual #13
709: dconst_0
710: invokevirtual #60
713: ldc           #12
715: invokevirtual #13
718: invokevirtual #16
721: dload         20
723: dconst_0
724: dcmpl
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #17
736: new           #10
739: dup
740: invokespecial #11
743: ldc           #12
745: invokevirtual #13
748: dload         22
750: invokevirtual #60
753: ldc           #15
755: invokevirtual #13
758: dconst_0
759: invokevirtual #60
762: ldc           #12
764: invokevirtual #13
767: invokevirtual #16
770: dload         22
772: dconst_0
773: dcmpl
774: ifne          781
777: iconst_1
778: goto          782
781: iconst_0
782: invokestatic  #17
785: aload         24
787: invokestatic  #33
790: aload         25
792: invokestatic  #33
795: new           #10
798: dup
799: invokespecial #11
802: ldc           #12
804: invokevirtual #13
807: dload         29
809: invokevirtual #60
812: ldc           #15
814: invokevirtual #13
817: dconst_0
818: invokevirtual #60
821: ldc           #12
823: invokevirtual #13
826: invokevirtual #16
829: dload         29
831: dconst_0
832: dcmpl
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #17
844: new           #10
847: dup
848: invokespecial #11
851: ldc           #12
853: invokevirtual #13
856: dload         31
858: invokevirtual #60
861: ldc           #15
863: invokevirtual #13
866: dconst_0
867: invokevirtual #60
870: ldc           #12
872: invokevirtual #13
875: invokevirtual #16
878: dload         31
880: dconst_0
881: dcmpl
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #17
893: new           #10
896: dup
897: invokespecial #11
900: ldc           #12
902: invokevirtual #13
905: dload         36
907: invokevirtual #60
910: ldc           #15
912: invokevirtual #13
915: dconst_0
916: invokevirtual #60
919: ldc           #12
921: invokevirtual #13
924: invokevirtual #16
927: dload         36
929: dconst_0
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #17
942: new           #10
945: dup
946: invokespecial #11
949: ldc           #12
951: invokevirtual #13
954: dload         38
956: invokevirtual #60
959: ldc           #15
961: invokevirtual #13
964: dconst_0
965: invokevirtual #60
968: ldc           #12
970: invokevirtual #13
973: invokevirtual #16
976: dload         38
978: dconst_0
979: dcmpl
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #17
991: new           #10
994: dup
995: invokespecial #11
998: ldc           #12
1000: invokevirtual #13
1003: iload         40
1005: invokevirtual #14
1008: ldc           #15
1010: invokevirtual #13
1013: iconst_0
1014: invokevirtual #14
1017: ldc           #12
1019: invokevirtual #13
1022: invokevirtual #16
1025: iload         40
1027: ifne          1034
1030: iconst_1
1031: goto          1035
1034: iconst_0
1035: invokestatic  #17
1038: new           #10
1041: dup
1042: invokespecial #11
1045: ldc           #12
1047: invokevirtual #13
1050: dload         41
1052: invokevirtual #60
1055: ldc           #15
1057: invokevirtual #13
1060: dconst_0
1061: invokevirtual #60
1064: ldc           #12
1066: invokevirtual #13
1069: invokevirtual #16
1072: dload         41
1074: dconst_0
1075: dcmpl
1076: ifne          1083
1079: iconst_1
1080: goto          1084
1083: iconst_0
1084: invokestatic  #17
1087: aload         43
1089: invokestatic  #33
1092: new           #10
1095: dup
1096: invokespecial #11
1099: ldc           #12
1101: invokevirtual #13
1104: dload         44
1106: invokevirtual #60
1109: ldc           #15
1111: invokevirtual #13
1114: dconst_0
1115: invokevirtual #60
1118: ldc           #12
1120: invokevirtual #13
1123: invokevirtual #16
1126: dload         44
1128: dconst_0
1129: dcmpl
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #17
1141: aload         46
1143: invokestatic  #33
1146: aload         48
1148: invokestatic  #33
1151: new           #10
1154: dup
1155: invokespecial #11
1158: ldc           #12
1160: invokevirtual #13
1163: dload         49
1165: invokevirtual #60
1168: ldc           #15
1170: invokevirtual #13
1173: ldc2_w        #252
1176: invokevirtual #60
1179: ldc           #12
1181: invokevirtual #13
1184: invokevirtual #16
1187: dload         49
1189: ldc2_w        #252
1192: dcmpl
1193: ifne          1200
1196: iconst_1
1197: goto          1201
1200: iconst_0
1201: invokestatic  #17
1204: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 2219
End line: 2304
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation91 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = rotation84.applyTo(rotation91);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray94 = rotation91.getAngles(rotationOrder93);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: new           #27
503: dup
504: ldc2_w        #146
507: ldc2_w        #72
510: ldc2_w        #148
513: dconst_1
514: iconst_0
515: invokespecial #150
518: astore        65
520: aload         63
522: aload         65
524: invokevirtual #160
527: astore        66
529: aconst_null
530: astore        67
532: aload         65
534: aload         67
536: invokevirtual #57
539: astore        68
541: ldc           #58
543: invokestatic  #21
546: goto          551
549: astore        68
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         4
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         4
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         6
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         6
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         11
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         11
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         13
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         13
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         15
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         15
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         16
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         16
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         18
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         21
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         21
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         25
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         25
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         27
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         27
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         31
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         31
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         33
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         33
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         35
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         35
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         40
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         40
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         42
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         42
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         47
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         47
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         49
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         49
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         51
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         51
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         52
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         52
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         54
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         57
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         57
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         59
1498: invokestatic  #33
1501: aload         60
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         61
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         61
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         64
1561: invokestatic  #33
1564: aload         66
1566: invokestatic  #33
1569: return
Exception table:
from    to  target type
532   546   549   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 2307
End line: 2387
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation84.getQ2();
        double[][] doubleArray87 = rotation84.getMatrix();
        double double88 = rotation84.getQ1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #43
27: dup
28: dconst_1
29: ldc2_w        #44
32: invokespecial #46
35: astore_1
36: new           #43
39: dup
40: dconst_1
41: ldc2_w        #44
44: invokespecial #46
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: aload_2
61: aload_3
62: invokevirtual #47
65: dstore        4
67: aload_1
68: aload_3
69: invokestatic  #48
72: dstore        6
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        9
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        10
113: aload         9
115: aload         10
117: invokevirtual #47
120: dstore        11
122: aload         8
124: aload         10
126: invokestatic  #48
129: dstore        13
131: aload         8
133: invokevirtual #49
136: istore        15
138: aload_1
139: aload         8
141: invokevirtual #50
144: dstore        16
146: aload         8
148: invokevirtual #51
151: astore        18
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        19
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        20
179: aload         19
181: aload         20
183: invokevirtual #47
186: dstore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        23
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        24
214: aload         23
216: aload         24
218: invokevirtual #47
221: dstore        25
223: aload         24
225: invokevirtual #52
228: dstore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        29
243: new           #43
246: dup
247: dconst_1
248: ldc2_w        #44
251: invokespecial #46
254: astore        30
256: aload         29
258: aload         30
260: invokevirtual #47
263: dstore        31
265: aload         30
267: invokevirtual #52
270: dstore        33
272: aload         24
274: aload         30
276: invokevirtual #53
279: dstore        35
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        37
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        38
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        39
320: aload         38
322: aload         39
324: invokevirtual #47
327: dstore        40
329: aload         37
331: aload         39
333: invokestatic  #48
336: dstore        42
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        44
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        45
364: new           #43
367: dup
368: dconst_1
369: ldc2_w        #44
372: invokespecial #46
375: astore        46
377: aload         45
379: aload         46
381: invokevirtual #47
384: dstore        47
386: aload         44
388: aload         46
390: invokestatic  #48
393: dstore        49
395: aload         44
397: invokevirtual #49
400: istore        51
402: aload         37
404: aload         44
406: invokevirtual #50
409: dstore        52
411: aload         44
413: invokevirtual #54
416: astore        54
418: new           #43
421: dup
422: dconst_1
423: ldc2_w        #44
426: invokespecial #46
429: astore        55
431: new           #43
434: dup
435: dconst_1
436: ldc2_w        #44
439: invokespecial #46
442: astore        56
444: aload         55
446: aload         56
448: invokevirtual #47
451: dstore        57
453: aload         54
455: aload         55
457: invokevirtual #55
460: astore        59
462: aload         24
464: aload         59
466: invokevirtual #55
469: astore        60
471: aload         20
473: aload         59
475: invokevirtual #53
478: dstore        61
480: new           #27
483: dup
484: aload         8
486: aload         20
488: invokespecial #56
491: astore        63
493: aload         63
495: invokevirtual #93
498: astore        64
500: aload         63
502: invokevirtual #139
505: dstore        65
507: aload         63
509: invokevirtual #222
512: astore        67
514: aload         63
516: invokevirtual #94
519: dstore        68
521: new           #10
524: dup
525: invokespecial #11
528: ldc           #12
530: invokevirtual #13
533: dload         4
535: invokevirtual #60
538: ldc           #15
540: invokevirtual #13
543: dconst_0
544: invokevirtual #60
547: ldc           #12
549: invokevirtual #13
552: invokevirtual #16
555: dload         4
557: dconst_0
558: dcmpl
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #17
570: new           #10
573: dup
574: invokespecial #11
577: ldc           #12
579: invokevirtual #13
582: dload         6
584: invokevirtual #60
587: ldc           #15
589: invokevirtual #13
592: dconst_0
593: invokevirtual #60
596: ldc           #12
598: invokevirtual #13
601: invokevirtual #16
604: dload         6
606: dconst_0
607: dcmpl
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #17
619: new           #10
622: dup
623: invokespecial #11
626: ldc           #12
628: invokevirtual #13
631: dload         11
633: invokevirtual #60
636: ldc           #15
638: invokevirtual #13
641: dconst_0
642: invokevirtual #60
645: ldc           #12
647: invokevirtual #13
650: invokevirtual #16
653: dload         11
655: dconst_0
656: dcmpl
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #17
668: new           #10
671: dup
672: invokespecial #11
675: ldc           #12
677: invokevirtual #13
680: dload         13
682: invokevirtual #60
685: ldc           #15
687: invokevirtual #13
690: dconst_0
691: invokevirtual #60
694: ldc           #12
696: invokevirtual #13
699: invokevirtual #16
702: dload         13
704: dconst_0
705: dcmpl
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #17
717: new           #10
720: dup
721: invokespecial #11
724: ldc           #12
726: invokevirtual #13
729: iload         15
731: invokevirtual #14
734: ldc           #15
736: invokevirtual #13
739: iconst_0
740: invokevirtual #14
743: ldc           #12
745: invokevirtual #13
748: invokevirtual #16
751: iload         15
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #17
764: new           #10
767: dup
768: invokespecial #11
771: ldc           #12
773: invokevirtual #13
776: dload         16
778: invokevirtual #60
781: ldc           #15
783: invokevirtual #13
786: dconst_0
787: invokevirtual #60
790: ldc           #12
792: invokevirtual #13
795: invokevirtual #16
798: dload         16
800: dconst_0
801: dcmpl
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #17
813: aload         18
815: invokestatic  #33
818: new           #10
821: dup
822: invokespecial #11
825: ldc           #12
827: invokevirtual #13
830: dload         21
832: invokevirtual #60
835: ldc           #15
837: invokevirtual #13
840: dconst_0
841: invokevirtual #60
844: ldc           #12
846: invokevirtual #13
849: invokevirtual #16
852: dload         21
854: dconst_0
855: dcmpl
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #17
867: new           #10
870: dup
871: invokespecial #11
874: ldc           #12
876: invokevirtual #13
879: dload         25
881: invokevirtual #60
884: ldc           #15
886: invokevirtual #13
889: dconst_0
890: invokevirtual #60
893: ldc           #12
895: invokevirtual #13
898: invokevirtual #16
901: dload         25
903: dconst_0
904: dcmpl
905: ifne          912
908: iconst_1
909: goto          913
912: iconst_0
913: invokestatic  #17
916: new           #10
919: dup
920: invokespecial #11
923: ldc           #12
925: invokevirtual #13
928: dload         27
930: invokevirtual #60
933: ldc           #15
935: invokevirtual #13
938: ldc2_w        #61
941: invokevirtual #60
944: ldc           #12
946: invokevirtual #13
949: invokevirtual #16
952: dload         27
954: ldc2_w        #61
957: dcmpl
958: ifne          965
961: iconst_1
962: goto          966
965: iconst_0
966: invokestatic  #17
969: new           #10
972: dup
973: invokespecial #11
976: ldc           #12
978: invokevirtual #13
981: dload         31
983: invokevirtual #60
986: ldc           #15
988: invokevirtual #13
991: dconst_0
992: invokevirtual #60
995: ldc           #12
997: invokevirtual #13
1000: invokevirtual #16
1003: dload         31
1005: dconst_0
1006: dcmpl
1007: ifne          1014
1010: iconst_1
1011: goto          1015
1014: iconst_0
1015: invokestatic  #17
1018: new           #10
1021: dup
1022: invokespecial #11
1025: ldc           #12
1027: invokevirtual #13
1030: dload         33
1032: invokevirtual #60
1035: ldc           #15
1037: invokevirtual #13
1040: ldc2_w        #61
1043: invokevirtual #60
1046: ldc           #12
1048: invokevirtual #13
1051: invokevirtual #16
1054: dload         33
1056: ldc2_w        #61
1059: dcmpl
1060: ifne          1067
1063: iconst_1
1064: goto          1068
1067: iconst_0
1068: invokestatic  #17
1071: new           #10
1074: dup
1075: invokespecial #11
1078: ldc           #12
1080: invokevirtual #13
1083: dload         35
1085: invokevirtual #60
1088: ldc           #15
1090: invokevirtual #13
1093: dconst_0
1094: invokevirtual #60
1097: ldc           #12
1099: invokevirtual #13
1102: invokevirtual #16
1105: dload         35
1107: dconst_0
1108: dcmpl
1109: ifne          1116
1112: iconst_1
1113: goto          1117
1116: iconst_0
1117: invokestatic  #17
1120: new           #10
1123: dup
1124: invokespecial #11
1127: ldc           #12
1129: invokevirtual #13
1132: dload         40
1134: invokevirtual #60
1137: ldc           #15
1139: invokevirtual #13
1142: dconst_0
1143: invokevirtual #60
1146: ldc           #12
1148: invokevirtual #13
1151: invokevirtual #16
1154: dload         40
1156: dconst_0
1157: dcmpl
1158: ifne          1165
1161: iconst_1
1162: goto          1166
1165: iconst_0
1166: invokestatic  #17
1169: new           #10
1172: dup
1173: invokespecial #11
1176: ldc           #12
1178: invokevirtual #13
1181: dload         42
1183: invokevirtual #60
1186: ldc           #15
1188: invokevirtual #13
1191: dconst_0
1192: invokevirtual #60
1195: ldc           #12
1197: invokevirtual #13
1200: invokevirtual #16
1203: dload         42
1205: dconst_0
1206: dcmpl
1207: ifne          1214
1210: iconst_1
1211: goto          1215
1214: iconst_0
1215: invokestatic  #17
1218: new           #10
1221: dup
1222: invokespecial #11
1225: ldc           #12
1227: invokevirtual #13
1230: dload         47
1232: invokevirtual #60
1235: ldc           #15
1237: invokevirtual #13
1240: dconst_0
1241: invokevirtual #60
1244: ldc           #12
1246: invokevirtual #13
1249: invokevirtual #16
1252: dload         47
1254: dconst_0
1255: dcmpl
1256: ifne          1263
1259: iconst_1
1260: goto          1264
1263: iconst_0
1264: invokestatic  #17
1267: new           #10
1270: dup
1271: invokespecial #11
1274: ldc           #12
1276: invokevirtual #13
1279: dload         49
1281: invokevirtual #60
1284: ldc           #15
1286: invokevirtual #13
1289: dconst_0
1290: invokevirtual #60
1293: ldc           #12
1295: invokevirtual #13
1298: invokevirtual #16
1301: dload         49
1303: dconst_0
1304: dcmpl
1305: ifne          1312
1308: iconst_1
1309: goto          1313
1312: iconst_0
1313: invokestatic  #17
1316: new           #10
1319: dup
1320: invokespecial #11
1323: ldc           #12
1325: invokevirtual #13
1328: iload         51
1330: invokevirtual #14
1333: ldc           #15
1335: invokevirtual #13
1338: iconst_0
1339: invokevirtual #14
1342: ldc           #12
1344: invokevirtual #13
1347: invokevirtual #16
1350: iload         51
1352: ifne          1359
1355: iconst_1
1356: goto          1360
1359: iconst_0
1360: invokestatic  #17
1363: new           #10
1366: dup
1367: invokespecial #11
1370: ldc           #12
1372: invokevirtual #13
1375: dload         52
1377: invokevirtual #60
1380: ldc           #15
1382: invokevirtual #13
1385: dconst_0
1386: invokevirtual #60
1389: ldc           #12
1391: invokevirtual #13
1394: invokevirtual #16
1397: dload         52
1399: dconst_0
1400: dcmpl
1401: ifne          1408
1404: iconst_1
1405: goto          1409
1408: iconst_0
1409: invokestatic  #17
1412: aload         54
1414: invokestatic  #33
1417: new           #10
1420: dup
1421: invokespecial #11
1424: ldc           #12
1426: invokevirtual #13
1429: dload         57
1431: invokevirtual #60
1434: ldc           #15
1436: invokevirtual #13
1439: dconst_0
1440: invokevirtual #60
1443: ldc           #12
1445: invokevirtual #13
1448: invokevirtual #16
1451: dload         57
1453: dconst_0
1454: dcmpl
1455: ifne          1462
1458: iconst_1
1459: goto          1463
1462: iconst_0
1463: invokestatic  #17
1466: aload         59
1468: invokestatic  #33
1471: aload         60
1473: invokestatic  #33
1476: new           #10
1479: dup
1480: invokespecial #11
1483: ldc           #12
1485: invokevirtual #13
1488: dload         61
1490: invokevirtual #60
1493: ldc           #15
1495: invokevirtual #13
1498: ldc2_w        #63
1501: invokevirtual #60
1504: ldc           #12
1506: invokevirtual #13
1509: invokevirtual #16
1512: dload         61
1514: ldc2_w        #63
1517: dcmpl
1518: ifne          1525
1521: iconst_1
1522: goto          1526
1525: iconst_0
1526: invokestatic  #17
1529: aload         64
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         65
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: dconst_0
1557: invokevirtual #60
1560: ldc           #12
1562: invokevirtual #13
1565: invokevirtual #16
1568: dload         65
1570: dconst_0
1571: dcmpl
1572: ifne          1579
1575: iconst_1
1576: goto          1580
1579: iconst_0
1580: invokestatic  #17
1583: aload         67
1585: invokestatic  #33
1588: new           #10
1591: dup
1592: invokespecial #11
1595: ldc           #12
1597: invokevirtual #13
1600: dload         68
1602: invokevirtual #60
1605: ldc           #15
1607: invokevirtual #13
1610: dconst_0
1611: invokevirtual #60
1614: ldc           #12
1616: invokevirtual #13
1619: invokevirtual #16
1622: dload         68
1624: dconst_0
1625: dcmpl
1626: ifne          1633
1629: iconst_1
1630: goto          1634
1633: iconst_0
1634: invokestatic  #17
1637: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 2390
End line: 2477
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        double double67 = rotation65.getQ1();
        double double68 = rotation65.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double78 = vector3D74.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        double double79 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D71, vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double89 = vector3D85.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        double double90 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D82, vector3D88);
        boolean boolean91 = vector3D82.isInfinite();
        double double92 = vector3D71.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = vector3D82.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation65.applyInverseTo(vector3D94);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.3078974289323514d) + "'", double67 == (-0.3078974289323514d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.3078974289323514d) + "'", double68 == (-0.3078974289323514d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #139
394: dstore        50
396: aload         49
398: invokevirtual #94
401: dstore        52
403: aload         49
405: invokevirtual #94
408: dstore        54
410: new           #43
413: dup
414: dconst_1
415: ldc2_w        #44
418: invokespecial #46
421: astore        56
423: new           #43
426: dup
427: dconst_1
428: ldc2_w        #44
431: invokespecial #46
434: astore        57
436: new           #43
439: dup
440: dconst_1
441: ldc2_w        #44
444: invokespecial #46
447: astore        58
449: aload         57
451: aload         58
453: invokevirtual #47
456: dstore        59
458: aload         56
460: aload         58
462: invokestatic  #48
465: dstore        61
467: new           #43
470: dup
471: dconst_1
472: ldc2_w        #44
475: invokespecial #46
478: astore        63
480: new           #43
483: dup
484: dconst_1
485: ldc2_w        #44
488: invokespecial #46
491: astore        64
493: new           #43
496: dup
497: dconst_1
498: ldc2_w        #44
501: invokespecial #46
504: astore        65
506: aload         64
508: aload         65
510: invokevirtual #47
513: dstore        66
515: aload         63
517: aload         65
519: invokestatic  #48
522: dstore        68
524: aload         63
526: invokevirtual #49
529: istore        70
531: aload         56
533: aload         63
535: invokevirtual #50
538: dstore        71
540: aload         63
542: invokevirtual #54
545: astore        73
547: aload         63
549: invokevirtual #163
552: astore        74
554: aload         49
556: aload         74
558: invokevirtual #98
561: astore        75
563: new           #10
566: dup
567: invokespecial #11
570: ldc           #12
572: invokevirtual #13
575: dload_3
576: invokevirtual #60
579: ldc           #15
581: invokevirtual #13
584: dconst_0
585: invokevirtual #60
588: ldc           #12
590: invokevirtual #13
593: invokevirtual #16
596: dload_3
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #17
610: new           #10
613: dup
614: invokespecial #11
617: ldc           #12
619: invokevirtual #13
622: dload         7
624: invokevirtual #60
627: ldc           #15
629: invokevirtual #13
632: dconst_0
633: invokevirtual #60
636: ldc           #12
638: invokevirtual #13
641: invokevirtual #16
644: dload         7
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #17
659: new           #10
662: dup
663: invokespecial #11
666: ldc           #12
668: invokevirtual #13
671: dload         9
673: invokevirtual #60
676: ldc           #15
678: invokevirtual #13
681: ldc2_w        #61
684: invokevirtual #60
687: ldc           #12
689: invokevirtual #13
692: invokevirtual #16
695: dload         9
697: ldc2_w        #61
700: dcmpl
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #17
712: new           #10
715: dup
716: invokespecial #11
719: ldc           #12
721: invokevirtual #13
724: dload         13
726: invokevirtual #60
729: ldc           #15
731: invokevirtual #13
734: dconst_0
735: invokevirtual #60
738: ldc           #12
740: invokevirtual #13
743: invokevirtual #16
746: dload         13
748: dconst_0
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #17
761: new           #10
764: dup
765: invokespecial #11
768: ldc           #12
770: invokevirtual #13
773: dload         15
775: invokevirtual #60
778: ldc           #15
780: invokevirtual #13
783: ldc2_w        #61
786: invokevirtual #60
789: ldc           #12
791: invokevirtual #13
794: invokevirtual #16
797: dload         15
799: ldc2_w        #61
802: dcmpl
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: new           #10
817: dup
818: invokespecial #11
821: ldc           #12
823: invokevirtual #13
826: dload         17
828: invokevirtual #60
831: ldc           #15
833: invokevirtual #13
836: dconst_0
837: invokevirtual #60
840: ldc           #12
842: invokevirtual #13
845: invokevirtual #16
848: dload         17
850: dconst_0
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #17
863: new           #10
866: dup
867: invokespecial #11
870: ldc           #12
872: invokevirtual #13
875: dload         22
877: invokevirtual #60
880: ldc           #15
882: invokevirtual #13
885: dconst_0
886: invokevirtual #60
889: ldc           #12
891: invokevirtual #13
894: invokevirtual #16
897: dload         22
899: dconst_0
900: dcmpl
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #17
912: new           #10
915: dup
916: invokespecial #11
919: ldc           #12
921: invokevirtual #13
924: dload         24
926: invokevirtual #60
929: ldc           #15
931: invokevirtual #13
934: dconst_0
935: invokevirtual #60
938: ldc           #12
940: invokevirtual #13
943: invokevirtual #16
946: dload         24
948: dconst_0
949: dcmpl
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #17
961: new           #10
964: dup
965: invokespecial #11
968: ldc           #12
970: invokevirtual #13
973: dload         29
975: invokevirtual #60
978: ldc           #15
980: invokevirtual #13
983: dconst_0
984: invokevirtual #60
987: ldc           #12
989: invokevirtual #13
992: invokevirtual #16
995: dload         29
997: dconst_0
998: dcmpl
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #17
1010: new           #10
1013: dup
1014: invokespecial #11
1017: ldc           #12
1019: invokevirtual #13
1022: dload         31
1024: invokevirtual #60
1027: ldc           #15
1029: invokevirtual #13
1032: dconst_0
1033: invokevirtual #60
1036: ldc           #12
1038: invokevirtual #13
1041: invokevirtual #16
1044: dload         31
1046: dconst_0
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: iload         33
1073: invokevirtual #14
1076: ldc           #15
1078: invokevirtual #13
1081: iconst_0
1082: invokevirtual #14
1085: ldc           #12
1087: invokevirtual #13
1090: invokevirtual #16
1093: iload         33
1095: ifne          1102
1098: iconst_1
1099: goto          1103
1102: iconst_0
1103: invokestatic  #17
1106: new           #10
1109: dup
1110: invokespecial #11
1113: ldc           #12
1115: invokevirtual #13
1118: dload         34
1120: invokevirtual #60
1123: ldc           #15
1125: invokevirtual #13
1128: dconst_0
1129: invokevirtual #60
1132: ldc           #12
1134: invokevirtual #13
1137: invokevirtual #16
1140: dload         34
1142: dconst_0
1143: dcmpl
1144: ifne          1151
1147: iconst_1
1148: goto          1152
1151: iconst_0
1152: invokestatic  #17
1155: aload         36
1157: invokestatic  #33
1160: new           #10
1163: dup
1164: invokespecial #11
1167: ldc           #12
1169: invokevirtual #13
1172: dload         39
1174: invokevirtual #60
1177: ldc           #15
1179: invokevirtual #13
1182: dconst_0
1183: invokevirtual #60
1186: ldc           #12
1188: invokevirtual #13
1191: invokevirtual #16
1194: dload         39
1196: dconst_0
1197: dcmpl
1198: ifne          1205
1201: iconst_1
1202: goto          1206
1205: iconst_0
1206: invokestatic  #17
1209: aload         41
1211: invokestatic  #33
1214: aload         42
1216: invokestatic  #33
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         43
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: ldc2_w        #63
1244: invokevirtual #60
1247: ldc           #12
1249: invokevirtual #13
1252: invokevirtual #16
1255: dload         43
1257: ldc2_w        #63
1260: dcmpl
1261: ifne          1268
1264: iconst_1
1265: goto          1269
1268: iconst_0
1269: invokestatic  #17
1272: new           #10
1275: dup
1276: invokespecial #11
1279: ldc           #12
1281: invokevirtual #13
1284: dload         46
1286: invokevirtual #60
1289: ldc           #15
1291: invokevirtual #13
1294: ldc2_w        #79
1297: invokevirtual #60
1300: ldc           #12
1302: invokevirtual #13
1305: invokevirtual #16
1308: dload         46
1310: ldc2_w        #79
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: aload         48
1327: invokestatic  #33
1330: new           #10
1333: dup
1334: invokespecial #11
1337: ldc           #12
1339: invokevirtual #13
1342: dload         50
1344: invokevirtual #60
1347: ldc           #15
1349: invokevirtual #13
1352: ldc2_w        #141
1355: invokevirtual #60
1358: ldc           #12
1360: invokevirtual #13
1363: invokevirtual #16
1366: dload         50
1368: ldc2_w        #141
1371: dcmpl
1372: ifne          1379
1375: iconst_1
1376: goto          1380
1379: iconst_0
1380: invokestatic  #17
1383: new           #10
1386: dup
1387: invokespecial #11
1390: ldc           #12
1392: invokevirtual #13
1395: dload         52
1397: invokevirtual #60
1400: ldc           #15
1402: invokevirtual #13
1405: ldc2_w        #143
1408: invokevirtual #60
1411: ldc           #12
1413: invokevirtual #13
1416: invokevirtual #16
1419: dload         52
1421: ldc2_w        #143
1424: dcmpl
1425: ifne          1432
1428: iconst_1
1429: goto          1433
1432: iconst_0
1433: invokestatic  #17
1436: new           #10
1439: dup
1440: invokespecial #11
1443: ldc           #12
1445: invokevirtual #13
1448: dload         54
1450: invokevirtual #60
1453: ldc           #15
1455: invokevirtual #13
1458: ldc2_w        #143
1461: invokevirtual #60
1464: ldc           #12
1466: invokevirtual #13
1469: invokevirtual #16
1472: dload         54
1474: ldc2_w        #143
1477: dcmpl
1478: ifne          1485
1481: iconst_1
1482: goto          1486
1485: iconst_0
1486: invokestatic  #17
1489: new           #10
1492: dup
1493: invokespecial #11
1496: ldc           #12
1498: invokevirtual #13
1501: dload         59
1503: invokevirtual #60
1506: ldc           #15
1508: invokevirtual #13
1511: dconst_0
1512: invokevirtual #60
1515: ldc           #12
1517: invokevirtual #13
1520: invokevirtual #16
1523: dload         59
1525: dconst_0
1526: dcmpl
1527: ifne          1534
1530: iconst_1
1531: goto          1535
1534: iconst_0
1535: invokestatic  #17
1538: new           #10
1541: dup
1542: invokespecial #11
1545: ldc           #12
1547: invokevirtual #13
1550: dload         61
1552: invokevirtual #60
1555: ldc           #15
1557: invokevirtual #13
1560: dconst_0
1561: invokevirtual #60
1564: ldc           #12
1566: invokevirtual #13
1569: invokevirtual #16
1572: dload         61
1574: dconst_0
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: new           #10
1590: dup
1591: invokespecial #11
1594: ldc           #12
1596: invokevirtual #13
1599: dload         66
1601: invokevirtual #60
1604: ldc           #15
1606: invokevirtual #13
1609: dconst_0
1610: invokevirtual #60
1613: ldc           #12
1615: invokevirtual #13
1618: invokevirtual #16
1621: dload         66
1623: dconst_0
1624: dcmpl
1625: ifne          1632
1628: iconst_1
1629: goto          1633
1632: iconst_0
1633: invokestatic  #17
1636: new           #10
1639: dup
1640: invokespecial #11
1643: ldc           #12
1645: invokevirtual #13
1648: dload         68
1650: invokevirtual #60
1653: ldc           #15
1655: invokevirtual #13
1658: dconst_0
1659: invokevirtual #60
1662: ldc           #12
1664: invokevirtual #13
1667: invokevirtual #16
1670: dload         68
1672: dconst_0
1673: dcmpl
1674: ifne          1681
1677: iconst_1
1678: goto          1682
1681: iconst_0
1682: invokestatic  #17
1685: new           #10
1688: dup
1689: invokespecial #11
1692: ldc           #12
1694: invokevirtual #13
1697: iload         70
1699: invokevirtual #14
1702: ldc           #15
1704: invokevirtual #13
1707: iconst_0
1708: invokevirtual #14
1711: ldc           #12
1713: invokevirtual #13
1716: invokevirtual #16
1719: iload         70
1721: ifne          1728
1724: iconst_1
1725: goto          1729
1728: iconst_0
1729: invokestatic  #17
1732: new           #10
1735: dup
1736: invokespecial #11
1739: ldc           #12
1741: invokevirtual #13
1744: dload         71
1746: invokevirtual #60
1749: ldc           #15
1751: invokevirtual #13
1754: dconst_0
1755: invokevirtual #60
1758: ldc           #12
1760: invokevirtual #13
1763: invokevirtual #16
1766: dload         71
1768: dconst_0
1769: dcmpl
1770: ifne          1777
1773: iconst_1
1774: goto          1778
1777: iconst_0
1778: invokestatic  #17
1781: aload         73
1783: invokestatic  #33
1786: aload         74
1788: invokestatic  #33
1791: aload         75
1793: invokestatic  #33
1796: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 2480
End line: 2556
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation84.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         63
503: invokevirtual #95
506: dstore        65
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: dload         4
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_0
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         4
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #17
557: new           #10
560: dup
561: invokespecial #11
564: ldc           #12
566: invokevirtual #13
569: dload         6
571: invokevirtual #60
574: ldc           #15
576: invokevirtual #13
579: dconst_0
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         6
593: dconst_0
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: new           #10
609: dup
610: invokespecial #11
613: ldc           #12
615: invokevirtual #13
618: dload         11
620: invokevirtual #60
623: ldc           #15
625: invokevirtual #13
628: dconst_0
629: invokevirtual #60
632: ldc           #12
634: invokevirtual #13
637: invokevirtual #16
640: dload         11
642: dconst_0
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #17
655: new           #10
658: dup
659: invokespecial #11
662: ldc           #12
664: invokevirtual #13
667: dload         13
669: invokevirtual #60
672: ldc           #15
674: invokevirtual #13
677: dconst_0
678: invokevirtual #60
681: ldc           #12
683: invokevirtual #13
686: invokevirtual #16
689: dload         13
691: dconst_0
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #17
704: new           #10
707: dup
708: invokespecial #11
711: ldc           #12
713: invokevirtual #13
716: iload         15
718: invokevirtual #14
721: ldc           #15
723: invokevirtual #13
726: iconst_0
727: invokevirtual #14
730: ldc           #12
732: invokevirtual #13
735: invokevirtual #16
738: iload         15
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: new           #10
754: dup
755: invokespecial #11
758: ldc           #12
760: invokevirtual #13
763: dload         16
765: invokevirtual #60
768: ldc           #15
770: invokevirtual #13
773: dconst_0
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         16
787: dconst_0
788: dcmpl
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #17
800: aload         18
802: invokestatic  #33
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         21
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         21
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         25
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         25
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         27
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #61
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         27
941: ldc2_w        #61
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         31
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         31
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         33
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: ldc2_w        #61
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         33
1043: ldc2_w        #61
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: dconst_0
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         35
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #17
1107: new           #10
1110: dup
1111: invokespecial #11
1114: ldc           #12
1116: invokevirtual #13
1119: dload         40
1121: invokevirtual #60
1124: ldc           #15
1126: invokevirtual #13
1129: dconst_0
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         40
1143: dconst_0
1144: dcmpl
1145: ifne          1152
1148: iconst_1
1149: goto          1153
1152: iconst_0
1153: invokestatic  #17
1156: new           #10
1159: dup
1160: invokespecial #11
1163: ldc           #12
1165: invokevirtual #13
1168: dload         42
1170: invokevirtual #60
1173: ldc           #15
1175: invokevirtual #13
1178: dconst_0
1179: invokevirtual #60
1182: ldc           #12
1184: invokevirtual #13
1187: invokevirtual #16
1190: dload         42
1192: dconst_0
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #17
1205: new           #10
1208: dup
1209: invokespecial #11
1212: ldc           #12
1214: invokevirtual #13
1217: dload         47
1219: invokevirtual #60
1222: ldc           #15
1224: invokevirtual #13
1227: dconst_0
1228: invokevirtual #60
1231: ldc           #12
1233: invokevirtual #13
1236: invokevirtual #16
1239: dload         47
1241: dconst_0
1242: dcmpl
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #17
1254: new           #10
1257: dup
1258: invokespecial #11
1261: ldc           #12
1263: invokevirtual #13
1266: dload         49
1268: invokevirtual #60
1271: ldc           #15
1273: invokevirtual #13
1276: dconst_0
1277: invokevirtual #60
1280: ldc           #12
1282: invokevirtual #13
1285: invokevirtual #16
1288: dload         49
1290: dconst_0
1291: dcmpl
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #17
1303: new           #10
1306: dup
1307: invokespecial #11
1310: ldc           #12
1312: invokevirtual #13
1315: iload         51
1317: invokevirtual #14
1320: ldc           #15
1322: invokevirtual #13
1325: iconst_0
1326: invokevirtual #14
1329: ldc           #12
1331: invokevirtual #13
1334: invokevirtual #16
1337: iload         51
1339: ifne          1346
1342: iconst_1
1343: goto          1347
1346: iconst_0
1347: invokestatic  #17
1350: new           #10
1353: dup
1354: invokespecial #11
1357: ldc           #12
1359: invokevirtual #13
1362: dload         52
1364: invokevirtual #60
1367: ldc           #15
1369: invokevirtual #13
1372: dconst_0
1373: invokevirtual #60
1376: ldc           #12
1378: invokevirtual #13
1381: invokevirtual #16
1384: dload         52
1386: dconst_0
1387: dcmpl
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #17
1399: aload         54
1401: invokestatic  #33
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         57
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         57
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         59
1455: invokestatic  #33
1458: aload         60
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         61
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: ldc2_w        #63
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         61
1501: ldc2_w        #63
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: aload         64
1518: invokestatic  #33
1521: new           #10
1524: dup
1525: invokespecial #11
1528: ldc           #12
1530: invokevirtual #13
1533: dload         65
1535: invokevirtual #60
1538: ldc           #15
1540: invokevirtual #13
1543: dconst_0
1544: invokevirtual #60
1547: ldc           #12
1549: invokevirtual #13
1552: invokevirtual #16
1555: dload         65
1557: dconst_0
1558: dcmpl
1559: ifne          1566
1562: iconst_1
1563: goto          1567
1566: iconst_0
1567: invokestatic  #17
1570: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 2559
End line: 2620
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double67 = vector3D44.getNorm();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         28
396: invokevirtual #261
399: dstore        51
401: new           #10
404: dup
405: invokespecial #11
408: ldc           #12
410: invokevirtual #13
413: dload         4
415: invokevirtual #60
418: ldc           #15
420: invokevirtual #13
423: dconst_0
424: invokevirtual #60
427: ldc           #12
429: invokevirtual #13
432: invokevirtual #16
435: dload         4
437: dconst_0
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #17
450: new           #10
453: dup
454: invokespecial #11
457: ldc           #12
459: invokevirtual #13
462: dload         6
464: invokevirtual #60
467: ldc           #15
469: invokevirtual #13
472: dconst_0
473: invokevirtual #60
476: ldc           #12
478: invokevirtual #13
481: invokevirtual #16
484: dload         6
486: dconst_0
487: dcmpl
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #17
499: new           #10
502: dup
503: invokespecial #11
506: ldc           #12
508: invokevirtual #13
511: dload         11
513: invokevirtual #60
516: ldc           #15
518: invokevirtual #13
521: dconst_0
522: invokevirtual #60
525: ldc           #12
527: invokevirtual #13
530: invokevirtual #16
533: dload         11
535: dconst_0
536: dcmpl
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #17
548: new           #10
551: dup
552: invokespecial #11
555: ldc           #12
557: invokevirtual #13
560: dload         13
562: invokevirtual #60
565: ldc           #15
567: invokevirtual #13
570: dconst_0
571: invokevirtual #60
574: ldc           #12
576: invokevirtual #13
579: invokevirtual #16
582: dload         13
584: dconst_0
585: dcmpl
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #17
597: new           #10
600: dup
601: invokespecial #11
604: ldc           #12
606: invokevirtual #13
609: iload         15
611: invokevirtual #14
614: ldc           #15
616: invokevirtual #13
619: iconst_0
620: invokevirtual #14
623: ldc           #12
625: invokevirtual #13
628: invokevirtual #16
631: iload         15
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #17
644: new           #10
647: dup
648: invokespecial #11
651: ldc           #12
653: invokevirtual #13
656: dload         16
658: invokevirtual #60
661: ldc           #15
663: invokevirtual #13
666: dconst_0
667: invokevirtual #60
670: ldc           #12
672: invokevirtual #13
675: invokevirtual #16
678: dload         16
680: dconst_0
681: dcmpl
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #17
693: aload         18
695: invokestatic  #33
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         21
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         21
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: aload         23
749: invokestatic  #33
752: aload         24
754: invokestatic  #33
757: new           #10
760: dup
761: invokespecial #11
764: ldc           #12
766: invokevirtual #13
769: dload         29
771: invokevirtual #60
774: ldc           #15
776: invokevirtual #13
779: dconst_0
780: invokevirtual #60
783: ldc           #12
785: invokevirtual #13
788: invokevirtual #16
791: dload         29
793: dconst_0
794: dcmpl
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #17
806: new           #10
809: dup
810: invokespecial #11
813: ldc           #12
815: invokevirtual #13
818: dload         31
820: invokevirtual #60
823: ldc           #15
825: invokevirtual #13
828: dconst_0
829: invokevirtual #60
832: ldc           #12
834: invokevirtual #13
837: invokevirtual #16
840: dload         31
842: dconst_0
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #17
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         35
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         35
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         37
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: ldc2_w        #61
929: invokevirtual #60
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: dload         37
942: ldc2_w        #61
945: dcmpl
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #17
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         41
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: dconst_0
980: invokevirtual #60
983: ldc           #12
985: invokevirtual #13
988: invokevirtual #16
991: dload         41
993: dconst_0
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         43
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: ldc2_w        #61
1031: invokevirtual #60
1034: ldc           #12
1036: invokevirtual #13
1039: invokevirtual #16
1042: dload         43
1044: ldc2_w        #61
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: dload         45
1073: invokevirtual #60
1076: ldc           #15
1078: invokevirtual #13
1081: dconst_0
1082: invokevirtual #60
1085: ldc           #12
1087: invokevirtual #13
1090: invokevirtual #16
1093: dload         45
1095: dconst_0
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         47
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         47
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: aload         49
1159: invokestatic  #33
1162: aload         50
1164: invokestatic  #33
1167: new           #10
1170: dup
1171: invokespecial #11
1174: ldc           #12
1176: invokevirtual #13
1179: dload         51
1181: invokevirtual #60
1184: ldc           #15
1186: invokevirtual #13
1189: dconst_1
1190: invokevirtual #60
1193: ldc           #12
1195: invokevirtual #13
1198: invokevirtual #16
1201: dload         51
1203: dconst_1
1204: dcmpl
1205: ifne          1212
1208: iconst_1
1209: goto          1213
1212: iconst_0
1213: invokestatic  #17
1216: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 2623
End line: 2704
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        double[] doubleArray4 = new double[] { (byte) 1 };
        double[] doubleArray5 = new double[] {};
        boolean boolean6 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray4, doubleArray5);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection7 = null;
        double[] doubleArray9 = new double[] { 0 };
        double[] doubleArray11 = new double[] { 0 };
        double[] doubleArray13 = new double[] { 0 };
        double[] doubleArray15 = new double[] { 0 };
        double[] doubleArray17 = new double[] { 0 };
        double[][] doubleArray18 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15, doubleArray17 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray4, orderDirection7, doubleArray18);
        double[] doubleArray21 = new double[] { (byte) 1 };
        double[] doubleArray22 = new double[] {};
        boolean boolean23 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray21, doubleArray22);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection24 = null;
        double[] doubleArray26 = new double[] { 0 };
        double[] doubleArray28 = new double[] { 0 };
        double[] doubleArray30 = new double[] { 0 };
        double[] doubleArray32 = new double[] { 0 };
        double[] doubleArray34 = new double[] { 0 };
        double[][] doubleArray35 = new double[][] { doubleArray26, doubleArray28, doubleArray30, doubleArray32, doubleArray34 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray21, orderDirection24, doubleArray35);
        double double37 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray21);
        double[] doubleArray39 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray4, 10);
        double[] doubleArray41 = new double[] { 0.0d };
        double[][] doubleArray42 = new double[][] { doubleArray41 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray4, doubleArray42);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException44 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable2, (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.exception.NullArgumentException nullArgumentException45 = new org.apache.commons.math.exception.NullArgumentException(localizable1, (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException(localizable0, (java.lang.Object[]) doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation48 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray42, 9.332621544395286E157d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aconst_null
30: astore_3
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: astore        4
40: iconst_0
41: newarray       double
43: astore        5
45: aload         4
47: aload         5
49: invokestatic  #24
52: istore        6
54: aconst_null
55: astore        7
57: iconst_1
58: newarray       double
60: dup
61: iconst_0
62: dconst_0
63: dastore
64: astore        8
66: iconst_1
67: newarray       double
69: dup
70: iconst_0
71: dconst_0
72: dastore
73: astore        9
75: iconst_1
76: newarray       double
78: dup
79: iconst_0
80: dconst_0
81: dastore
82: astore        10
84: iconst_1
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: astore        11
93: iconst_1
94: newarray       double
96: dup
97: iconst_0
98: dconst_0
99: dastore
100: astore        12
102: iconst_5
103: anewarray     #25
106: dup
107: iconst_0
108: aload         8
110: aastore
111: dup
112: iconst_1
113: aload         9
115: aastore
116: dup
117: iconst_2
118: aload         10
120: aastore
121: dup
122: iconst_3
123: aload         11
125: aastore
126: dup
127: iconst_4
128: aload         12
130: aastore
131: astore        13
133: aload         4
135: aload         7
137: aload         13
139: invokestatic  #26
142: iconst_1
143: newarray       double
145: dup
146: iconst_0
147: dconst_1
148: dastore
149: astore        14
151: iconst_0
152: newarray       double
154: astore        15
156: aload         14
158: aload         15
160: invokestatic  #24
163: istore        16
165: aconst_null
166: astore        17
168: iconst_1
169: newarray       double
171: dup
172: iconst_0
173: dconst_0
174: dastore
175: astore        18
177: iconst_1
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: astore        19
186: iconst_1
187: newarray       double
189: dup
190: iconst_0
191: dconst_0
192: dastore
193: astore        20
195: iconst_1
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: astore        21
204: iconst_1
205: newarray       double
207: dup
208: iconst_0
209: dconst_0
210: dastore
211: astore        22
213: iconst_5
214: anewarray     #25
217: dup
218: iconst_0
219: aload         18
221: aastore
222: dup
223: iconst_1
224: aload         19
226: aastore
227: dup
228: iconst_2
229: aload         20
231: aastore
232: dup
233: iconst_3
234: aload         21
236: aastore
237: dup
238: iconst_4
239: aload         22
241: aastore
242: astore        23
244: aload         14
246: aload         17
248: aload         23
250: invokestatic  #26
253: aload         4
255: aload         14
257: invokestatic  #152
260: dstore        24
262: aload         4
264: bipush        10
266: invokestatic  #153
269: astore        26
271: iconst_1
272: newarray       double
274: dup
275: iconst_0
276: dconst_0
277: dastore
278: astore        27
280: iconst_1
281: anewarray     #25
284: dup
285: iconst_0
286: aload         27
288: aastore
289: astore        28
291: aload         4
293: aload         28
295: invokestatic  #154
298: new           #247
301: dup
302: aload_3
303: aload         28
305: checkcast     #248
308: invokespecial #249
311: astore        29
313: new           #263
316: dup
317: aload_2
318: aload         28
320: checkcast     #248
323: invokespecial #264
326: astore        30
328: new           #265
331: dup
332: aload_1
333: aload         28
335: checkcast     #248
338: invokespecial #266
341: astore        31
343: new           #27
346: dup
347: aload         28
349: ldc2_w        #267
352: invokespecial #30
355: astore        32
357: ldc           #157
359: invokestatic  #21
362: goto          367
365: astore        32
367: aload         4
369: invokestatic  #33
372: aload         4
374: invokestatic  #34
377: ldc           #35
379: invokestatic  #36
382: aload         5
384: invokestatic  #33
387: aload         5
389: invokestatic  #34
392: ldc           #37
394: invokestatic  #36
397: new           #10
400: dup
401: invokespecial #11
404: ldc           #12
406: invokevirtual #13
409: iload         6
411: invokevirtual #14
414: ldc           #15
416: invokevirtual #13
419: iconst_0
420: invokevirtual #14
423: ldc           #12
425: invokevirtual #13
428: invokevirtual #16
431: iload         6
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #17
444: aload         8
446: invokestatic  #33
449: aload         8
451: invokestatic  #34
454: ldc           #38
456: invokestatic  #36
459: aload         9
461: invokestatic  #33
464: aload         9
466: invokestatic  #34
469: ldc           #38
471: invokestatic  #36
474: aload         10
476: invokestatic  #33
479: aload         10
481: invokestatic  #34
484: ldc           #38
486: invokestatic  #36
489: aload         11
491: invokestatic  #33
494: aload         11
496: invokestatic  #34
499: ldc           #38
501: invokestatic  #36
504: aload         12
506: invokestatic  #33
509: aload         12
511: invokestatic  #34
514: ldc           #38
516: invokestatic  #36
519: aload         13
521: invokestatic  #33
524: aload         14
526: invokestatic  #33
529: aload         14
531: invokestatic  #34
534: ldc           #35
536: invokestatic  #36
539: aload         15
541: invokestatic  #33
544: aload         15
546: invokestatic  #34
549: ldc           #37
551: invokestatic  #36
554: new           #10
557: dup
558: invokespecial #11
561: ldc           #12
563: invokevirtual #13
566: iload         16
568: invokevirtual #14
571: ldc           #15
573: invokevirtual #13
576: iconst_0
577: invokevirtual #14
580: ldc           #12
582: invokevirtual #13
585: invokevirtual #16
588: iload         16
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: aload         18
603: invokestatic  #33
606: aload         18
608: invokestatic  #34
611: ldc           #38
613: invokestatic  #36
616: aload         19
618: invokestatic  #33
621: aload         19
623: invokestatic  #34
626: ldc           #38
628: invokestatic  #36
631: aload         20
633: invokestatic  #33
636: aload         20
638: invokestatic  #34
641: ldc           #38
643: invokestatic  #36
646: aload         21
648: invokestatic  #33
651: aload         21
653: invokestatic  #34
656: ldc           #38
658: invokestatic  #36
661: aload         22
663: invokestatic  #33
666: aload         22
668: invokestatic  #34
671: ldc           #38
673: invokestatic  #36
676: aload         23
678: invokestatic  #33
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: dload         24
695: invokevirtual #60
698: ldc           #15
700: invokevirtual #13
703: dconst_0
704: invokevirtual #60
707: ldc           #12
709: invokevirtual #13
712: invokevirtual #16
715: dload         24
717: dconst_0
718: dcmpl
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #17
730: aload         26
732: invokestatic  #33
735: aload         26
737: invokestatic  #34
740: ldc           #158
742: invokestatic  #36
745: aload         27
747: invokestatic  #33
750: aload         27
752: invokestatic  #34
755: ldc           #38
757: invokestatic  #36
760: aload         28
762: invokestatic  #33
765: return
Exception table:
from    to  target type
343   362   365   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 2707
End line: 2799
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.Space space25 = vector3D14.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = vector3D38.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double47 = vector3D43.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        double double48 = vector3D46.getDelta();
        double double49 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double59 = vector3D55.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D58);
        double double60 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D52, vector3D58);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double70 = vector3D66.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        double double71 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D63, vector3D69);
        boolean boolean72 = vector3D63.isInfinite();
        double double73 = vector3D52.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = vector3D63.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double81 = vector3D77.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D80);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D74.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D38.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        double double84 = vector3D31.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D14, vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation86 = rotation85.revert();
        double double87 = rotation86.getQ1();
        double double88 = rotation86.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = rotation86.revert();
        double double90 = rotation86.getAngle();
        double double91 = rotation86.getQ1();
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math.geometry.euclidean.threed.Rotation.distance(rotation0, rotation86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(space25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.7345682747147468d + "'", double40 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.7345682747147468d + "'", double48 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0000000000000002d + "'", double84 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #269
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #43
30: dup
31: dconst_1
32: ldc2_w        #44
35: invokespecial #46
38: astore_2
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_3
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore        4
64: aload_3
65: aload         4
67: invokevirtual #47
70: dstore        5
72: aload_2
73: aload         4
75: invokestatic  #48
78: dstore        7
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        9
93: new           #43
96: dup
97: dconst_1
98: ldc2_w        #44
101: invokespecial #46
104: astore        10
106: new           #43
109: dup
110: dconst_1
111: ldc2_w        #44
114: invokespecial #46
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #47
126: dstore        12
128: aload         9
130: aload         11
132: invokestatic  #48
135: dstore        14
137: aload         9
139: invokevirtual #49
142: istore        16
144: aload_2
145: aload         9
147: invokevirtual #50
150: dstore        17
152: aload         9
154: invokevirtual #51
157: astore        19
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        20
172: new           #43
175: dup
176: dconst_1
177: ldc2_w        #44
180: invokespecial #46
183: astore        21
185: aload         20
187: aload         21
189: invokevirtual #47
192: dstore        22
194: new           #43
197: dup
198: dconst_1
199: ldc2_w        #44
202: invokespecial #46
205: astore        24
207: new           #43
210: dup
211: dconst_1
212: ldc2_w        #44
215: invokespecial #46
218: astore        25
220: aload         24
222: aload         25
224: invokevirtual #47
227: dstore        26
229: aload         25
231: invokevirtual #52
234: dstore        28
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        30
249: new           #43
252: dup
253: dconst_1
254: ldc2_w        #44
257: invokespecial #46
260: astore        31
262: aload         30
264: aload         31
266: invokevirtual #47
269: dstore        32
271: aload         31
273: invokevirtual #52
276: dstore        34
278: aload         25
280: aload         31
282: invokevirtual #53
285: dstore        36
287: new           #43
290: dup
291: dconst_1
292: ldc2_w        #44
295: invokespecial #46
298: astore        38
300: new           #43
303: dup
304: dconst_1
305: ldc2_w        #44
308: invokespecial #46
311: astore        39
313: new           #43
316: dup
317: dconst_1
318: ldc2_w        #44
321: invokespecial #46
324: astore        40
326: aload         39
328: aload         40
330: invokevirtual #47
333: dstore        41
335: aload         38
337: aload         40
339: invokestatic  #48
342: dstore        43
344: new           #43
347: dup
348: dconst_1
349: ldc2_w        #44
352: invokespecial #46
355: astore        45
357: new           #43
360: dup
361: dconst_1
362: ldc2_w        #44
365: invokespecial #46
368: astore        46
370: new           #43
373: dup
374: dconst_1
375: ldc2_w        #44
378: invokespecial #46
381: astore        47
383: aload         46
385: aload         47
387: invokevirtual #47
390: dstore        48
392: aload         45
394: aload         47
396: invokestatic  #48
399: dstore        50
401: aload         45
403: invokevirtual #49
406: istore        52
408: aload         38
410: aload         45
412: invokevirtual #50
415: dstore        53
417: aload         45
419: invokevirtual #54
422: astore        55
424: new           #43
427: dup
428: dconst_1
429: ldc2_w        #44
432: invokespecial #46
435: astore        56
437: new           #43
440: dup
441: dconst_1
442: ldc2_w        #44
445: invokespecial #46
448: astore        57
450: aload         56
452: aload         57
454: invokevirtual #47
457: dstore        58
459: aload         55
461: aload         56
463: invokevirtual #55
466: astore        60
468: aload         25
470: aload         60
472: invokevirtual #55
475: astore        61
477: aload         21
479: aload         60
481: invokevirtual #53
484: dstore        62
486: new           #27
489: dup
490: aload         9
492: aload         21
494: invokespecial #56
497: astore        64
499: aload         64
501: invokevirtual #93
504: astore        65
506: aload         65
508: invokevirtual #94
511: dstore        66
513: aload         65
515: invokevirtual #95
518: dstore        68
520: aload         65
522: invokevirtual #93
525: astore        70
527: aload         65
529: invokevirtual #240
532: dstore        71
534: aload         65
536: invokevirtual #94
539: dstore        73
541: aload_1
542: aload         65
544: invokestatic  #19
547: dstore        75
549: ldc           #20
551: invokestatic  #21
554: goto          559
557: astore        75
559: new           #10
562: dup
563: invokespecial #11
566: ldc           #12
568: invokevirtual #13
571: dload         5
573: invokevirtual #60
576: ldc           #15
578: invokevirtual #13
581: dconst_0
582: invokevirtual #60
585: ldc           #12
587: invokevirtual #13
590: invokevirtual #16
593: dload         5
595: dconst_0
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #17
608: new           #10
611: dup
612: invokespecial #11
615: ldc           #12
617: invokevirtual #13
620: dload         7
622: invokevirtual #60
625: ldc           #15
627: invokevirtual #13
630: dconst_0
631: invokevirtual #60
634: ldc           #12
636: invokevirtual #13
639: invokevirtual #16
642: dload         7
644: dconst_0
645: dcmpl
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #17
657: new           #10
660: dup
661: invokespecial #11
664: ldc           #12
666: invokevirtual #13
669: dload         12
671: invokevirtual #60
674: ldc           #15
676: invokevirtual #13
679: dconst_0
680: invokevirtual #60
683: ldc           #12
685: invokevirtual #13
688: invokevirtual #16
691: dload         12
693: dconst_0
694: dcmpl
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #17
706: new           #10
709: dup
710: invokespecial #11
713: ldc           #12
715: invokevirtual #13
718: dload         14
720: invokevirtual #60
723: ldc           #15
725: invokevirtual #13
728: dconst_0
729: invokevirtual #60
732: ldc           #12
734: invokevirtual #13
737: invokevirtual #16
740: dload         14
742: dconst_0
743: dcmpl
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #17
755: new           #10
758: dup
759: invokespecial #11
762: ldc           #12
764: invokevirtual #13
767: iload         16
769: invokevirtual #14
772: ldc           #15
774: invokevirtual #13
777: iconst_0
778: invokevirtual #14
781: ldc           #12
783: invokevirtual #13
786: invokevirtual #16
789: iload         16
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #17
802: new           #10
805: dup
806: invokespecial #11
809: ldc           #12
811: invokevirtual #13
814: dload         17
816: invokevirtual #60
819: ldc           #15
821: invokevirtual #13
824: dconst_0
825: invokevirtual #60
828: ldc           #12
830: invokevirtual #13
833: invokevirtual #16
836: dload         17
838: dconst_0
839: dcmpl
840: ifne          847
843: iconst_1
844: goto          848
847: iconst_0
848: invokestatic  #17
851: aload         19
853: invokestatic  #33
856: new           #10
859: dup
860: invokespecial #11
863: ldc           #12
865: invokevirtual #13
868: dload         22
870: invokevirtual #60
873: ldc           #15
875: invokevirtual #13
878: dconst_0
879: invokevirtual #60
882: ldc           #12
884: invokevirtual #13
887: invokevirtual #16
890: dload         22
892: dconst_0
893: dcmpl
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #17
905: new           #10
908: dup
909: invokespecial #11
912: ldc           #12
914: invokevirtual #13
917: dload         26
919: invokevirtual #60
922: ldc           #15
924: invokevirtual #13
927: dconst_0
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         26
941: dconst_0
942: dcmpl
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #17
954: new           #10
957: dup
958: invokespecial #11
961: ldc           #12
963: invokevirtual #13
966: dload         28
968: invokevirtual #60
971: ldc           #15
973: invokevirtual #13
976: ldc2_w        #61
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         28
992: ldc2_w        #61
995: dcmpl
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #17
1007: new           #10
1010: dup
1011: invokespecial #11
1014: ldc           #12
1016: invokevirtual #13
1019: dload         32
1021: invokevirtual #60
1024: ldc           #15
1026: invokevirtual #13
1029: dconst_0
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         32
1043: dconst_0
1044: dcmpl
1045: ifne          1052
1048: iconst_1
1049: goto          1053
1052: iconst_0
1053: invokestatic  #17
1056: new           #10
1059: dup
1060: invokespecial #11
1063: ldc           #12
1065: invokevirtual #13
1068: dload         34
1070: invokevirtual #60
1073: ldc           #15
1075: invokevirtual #13
1078: ldc2_w        #61
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         34
1094: ldc2_w        #61
1097: dcmpl
1098: ifne          1105
1101: iconst_1
1102: goto          1106
1105: iconst_0
1106: invokestatic  #17
1109: new           #10
1112: dup
1113: invokespecial #11
1116: ldc           #12
1118: invokevirtual #13
1121: dload         36
1123: invokevirtual #60
1126: ldc           #15
1128: invokevirtual #13
1131: dconst_0
1132: invokevirtual #60
1135: ldc           #12
1137: invokevirtual #13
1140: invokevirtual #16
1143: dload         36
1145: dconst_0
1146: dcmpl
1147: ifne          1154
1150: iconst_1
1151: goto          1155
1154: iconst_0
1155: invokestatic  #17
1158: new           #10
1161: dup
1162: invokespecial #11
1165: ldc           #12
1167: invokevirtual #13
1170: dload         41
1172: invokevirtual #60
1175: ldc           #15
1177: invokevirtual #13
1180: dconst_0
1181: invokevirtual #60
1184: ldc           #12
1186: invokevirtual #13
1189: invokevirtual #16
1192: dload         41
1194: dconst_0
1195: dcmpl
1196: ifne          1203
1199: iconst_1
1200: goto          1204
1203: iconst_0
1204: invokestatic  #17
1207: new           #10
1210: dup
1211: invokespecial #11
1214: ldc           #12
1216: invokevirtual #13
1219: dload         43
1221: invokevirtual #60
1224: ldc           #15
1226: invokevirtual #13
1229: dconst_0
1230: invokevirtual #60
1233: ldc           #12
1235: invokevirtual #13
1238: invokevirtual #16
1241: dload         43
1243: dconst_0
1244: dcmpl
1245: ifne          1252
1248: iconst_1
1249: goto          1253
1252: iconst_0
1253: invokestatic  #17
1256: new           #10
1259: dup
1260: invokespecial #11
1263: ldc           #12
1265: invokevirtual #13
1268: dload         48
1270: invokevirtual #60
1273: ldc           #15
1275: invokevirtual #13
1278: dconst_0
1279: invokevirtual #60
1282: ldc           #12
1284: invokevirtual #13
1287: invokevirtual #16
1290: dload         48
1292: dconst_0
1293: dcmpl
1294: ifne          1301
1297: iconst_1
1298: goto          1302
1301: iconst_0
1302: invokestatic  #17
1305: new           #10
1308: dup
1309: invokespecial #11
1312: ldc           #12
1314: invokevirtual #13
1317: dload         50
1319: invokevirtual #60
1322: ldc           #15
1324: invokevirtual #13
1327: dconst_0
1328: invokevirtual #60
1331: ldc           #12
1333: invokevirtual #13
1336: invokevirtual #16
1339: dload         50
1341: dconst_0
1342: dcmpl
1343: ifne          1350
1346: iconst_1
1347: goto          1351
1350: iconst_0
1351: invokestatic  #17
1354: new           #10
1357: dup
1358: invokespecial #11
1361: ldc           #12
1363: invokevirtual #13
1366: iload         52
1368: invokevirtual #14
1371: ldc           #15
1373: invokevirtual #13
1376: iconst_0
1377: invokevirtual #14
1380: ldc           #12
1382: invokevirtual #13
1385: invokevirtual #16
1388: iload         52
1390: ifne          1397
1393: iconst_1
1394: goto          1398
1397: iconst_0
1398: invokestatic  #17
1401: new           #10
1404: dup
1405: invokespecial #11
1408: ldc           #12
1410: invokevirtual #13
1413: dload         53
1415: invokevirtual #60
1418: ldc           #15
1420: invokevirtual #13
1423: dconst_0
1424: invokevirtual #60
1427: ldc           #12
1429: invokevirtual #13
1432: invokevirtual #16
1435: dload         53
1437: dconst_0
1438: dcmpl
1439: ifne          1446
1442: iconst_1
1443: goto          1447
1446: iconst_0
1447: invokestatic  #17
1450: aload         55
1452: invokestatic  #33
1455: new           #10
1458: dup
1459: invokespecial #11
1462: ldc           #12
1464: invokevirtual #13
1467: dload         58
1469: invokevirtual #60
1472: ldc           #15
1474: invokevirtual #13
1477: dconst_0
1478: invokevirtual #60
1481: ldc           #12
1483: invokevirtual #13
1486: invokevirtual #16
1489: dload         58
1491: dconst_0
1492: dcmpl
1493: ifne          1500
1496: iconst_1
1497: goto          1501
1500: iconst_0
1501: invokestatic  #17
1504: aload         60
1506: invokestatic  #33
1509: aload         61
1511: invokestatic  #33
1514: new           #10
1517: dup
1518: invokespecial #11
1521: ldc           #12
1523: invokevirtual #13
1526: dload         62
1528: invokevirtual #60
1531: ldc           #15
1533: invokevirtual #13
1536: ldc2_w        #63
1539: invokevirtual #60
1542: ldc           #12
1544: invokevirtual #13
1547: invokevirtual #16
1550: dload         62
1552: ldc2_w        #63
1555: dcmpl
1556: ifne          1563
1559: iconst_1
1560: goto          1564
1563: iconst_0
1564: invokestatic  #17
1567: aload         65
1569: invokestatic  #33
1572: new           #10
1575: dup
1576: invokespecial #11
1579: ldc           #12
1581: invokevirtual #13
1584: dload         66
1586: invokevirtual #60
1589: ldc           #15
1591: invokevirtual #13
1594: dconst_0
1595: invokevirtual #60
1598: ldc           #12
1600: invokevirtual #13
1603: invokevirtual #16
1606: dload         66
1608: dconst_0
1609: dcmpl
1610: ifne          1617
1613: iconst_1
1614: goto          1618
1617: iconst_0
1618: invokestatic  #17
1621: new           #10
1624: dup
1625: invokespecial #11
1628: ldc           #12
1630: invokevirtual #13
1633: dload         68
1635: invokevirtual #60
1638: ldc           #15
1640: invokevirtual #13
1643: dconst_0
1644: invokevirtual #60
1647: ldc           #12
1649: invokevirtual #13
1652: invokevirtual #16
1655: dload         68
1657: dconst_0
1658: dcmpl
1659: ifne          1666
1662: iconst_1
1663: goto          1667
1666: iconst_0
1667: invokestatic  #17
1670: aload         70
1672: invokestatic  #33
1675: new           #10
1678: dup
1679: invokespecial #11
1682: ldc           #12
1684: invokevirtual #13
1687: dload         71
1689: invokevirtual #60
1692: ldc           #15
1694: invokevirtual #13
1697: dconst_0
1698: invokevirtual #60
1701: ldc           #12
1703: invokevirtual #13
1706: invokevirtual #16
1709: dload         71
1711: dconst_0
1712: dcmpl
1713: ifne          1720
1716: iconst_1
1717: goto          1721
1720: iconst_0
1721: invokestatic  #17
1724: new           #10
1727: dup
1728: invokespecial #11
1731: ldc           #12
1733: invokevirtual #13
1736: dload         73
1738: invokevirtual #60
1741: ldc           #15
1743: invokevirtual #13
1746: dconst_0
1747: invokevirtual #60
1750: ldc           #12
1752: invokevirtual #13
1755: invokevirtual #16
1758: dload         73
1760: dconst_0
1761: dcmpl
1762: ifne          1769
1765: iconst_1
1766: goto          1770
1769: iconst_0
1770: invokestatic  #17
1773: return
Exception table:
from    to  target type
541   554   557   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 2802
End line: 2810
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.079574528E9d + "'", double6 == 1.079574528E9d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #241
48: dstore_2
49: aload_1
50: invokevirtual #94
53: dstore        4
55: new           #10
58: dup
59: invokespecial #11
62: ldc           #12
64: invokevirtual #13
67: dload_2
68: invokevirtual #60
71: ldc           #15
73: invokevirtual #13
76: ldc2_w        #271
79: invokevirtual #60
82: ldc           #12
84: invokevirtual #13
87: invokevirtual #16
90: dload_2
91: ldc2_w        #271
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #17
106: new           #10
109: dup
110: invokespecial #11
113: ldc           #12
115: invokevirtual #13
118: dload         4
120: invokevirtual #60
123: ldc           #15
125: invokevirtual #13
128: dconst_0
129: invokevirtual #60
132: ldc           #12
134: invokevirtual #13
137: invokevirtual #16
140: dload         4
142: dconst_0
143: dcmpl
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #17
155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 2813
End line: 2847
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        double double36 = rotation35.getQ1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2196074225483417d + "'", double36 == 0.2196074225483417d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: aload         25
221: invokevirtual #94
224: dstore        26
226: new           #10
229: dup
230: invokespecial #11
233: ldc           #12
235: invokevirtual #13
238: dload         4
240: invokevirtual #60
243: ldc           #15
245: invokevirtual #13
248: dconst_0
249: invokevirtual #60
252: ldc           #12
254: invokevirtual #13
257: invokevirtual #16
260: dload         4
262: dconst_0
263: dcmpl
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #17
275: new           #10
278: dup
279: invokespecial #11
282: ldc           #12
284: invokevirtual #13
287: dload         6
289: invokevirtual #60
292: ldc           #15
294: invokevirtual #13
297: dconst_0
298: invokevirtual #60
301: ldc           #12
303: invokevirtual #13
306: invokevirtual #16
309: dload         6
311: dconst_0
312: dcmpl
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #17
324: new           #10
327: dup
328: invokespecial #11
331: ldc           #12
333: invokevirtual #13
336: dload         11
338: invokevirtual #60
341: ldc           #15
343: invokevirtual #13
346: dconst_0
347: invokevirtual #60
350: ldc           #12
352: invokevirtual #13
355: invokevirtual #16
358: dload         11
360: dconst_0
361: dcmpl
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #17
373: new           #10
376: dup
377: invokespecial #11
380: ldc           #12
382: invokevirtual #13
385: dload         13
387: invokevirtual #60
390: ldc           #15
392: invokevirtual #13
395: dconst_0
396: invokevirtual #60
399: ldc           #12
401: invokevirtual #13
404: invokevirtual #16
407: dload         13
409: dconst_0
410: dcmpl
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #17
422: new           #10
425: dup
426: invokespecial #11
429: ldc           #12
431: invokevirtual #13
434: iload         15
436: invokevirtual #14
439: ldc           #15
441: invokevirtual #13
444: iconst_0
445: invokevirtual #14
448: ldc           #12
450: invokevirtual #13
453: invokevirtual #16
456: iload         15
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #17
469: new           #10
472: dup
473: invokespecial #11
476: ldc           #12
478: invokevirtual #13
481: dload         16
483: invokevirtual #60
486: ldc           #15
488: invokevirtual #13
491: dconst_0
492: invokevirtual #60
495: ldc           #12
497: invokevirtual #13
500: invokevirtual #16
503: dload         16
505: dconst_0
506: dcmpl
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #17
518: aload         18
520: invokestatic  #33
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: dload         21
537: invokevirtual #60
540: ldc           #15
542: invokevirtual #13
545: dconst_0
546: invokevirtual #60
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: dload         21
559: dconst_0
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #17
572: aload         23
574: invokestatic  #33
577: aload         24
579: invokestatic  #33
582: new           #10
585: dup
586: invokespecial #11
589: ldc           #12
591: invokevirtual #13
594: dload         26
596: invokevirtual #60
599: ldc           #15
601: invokevirtual #13
604: ldc2_w        #276
607: invokevirtual #60
610: ldc           #12
612: invokevirtual #13
615: invokevirtual #16
618: dload         26
620: ldc2_w        #276
623: dcmpl
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #17
635: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 2850
End line: 2860
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 6.09767964807105d + "'", double7 == 6.09767964807105d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 6.09767964807105d + "'", double8 == 6.09767964807105d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #139
53: dstore_3
54: aload_1
55: invokevirtual #139
58: dstore        5
60: aload_2
61: invokestatic  #33
64: new           #10
67: dup
68: invokespecial #11
71: ldc           #12
73: invokevirtual #13
76: dload_3
77: invokevirtual #60
80: ldc           #15
82: invokevirtual #13
85: ldc2_w        #148
88: invokevirtual #60
91: ldc           #12
93: invokevirtual #13
96: invokevirtual #16
99: dload_3
100: ldc2_w        #148
103: dcmpl
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #17
115: new           #10
118: dup
119: invokespecial #11
122: ldc           #12
124: invokevirtual #13
127: dload         5
129: invokevirtual #60
132: ldc           #15
134: invokevirtual #13
137: ldc2_w        #148
140: invokevirtual #60
143: ldc           #12
145: invokevirtual #13
148: invokevirtual #16
151: dload         5
153: ldc2_w        #148
156: dcmpl
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #17
168: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2863
End line: 2945
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = rotation85.getAngles(rotationOrder86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aconst_null
502: astore        65
504: aload         64
506: aload         65
508: invokevirtual #57
511: astore        66
513: ldc           #58
515: invokestatic  #21
518: goto          523
521: astore        66
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: dload         4
537: invokevirtual #60
540: ldc           #15
542: invokevirtual #13
545: dconst_0
546: invokevirtual #60
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: dload         4
559: dconst_0
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #17
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         6
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         6
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         11
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         11
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         13
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         13
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: iload         15
733: invokevirtual #14
736: ldc           #15
738: invokevirtual #13
741: iconst_0
742: invokevirtual #14
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: iload         15
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         16
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: dconst_0
789: invokevirtual #60
792: ldc           #12
794: invokevirtual #13
797: invokevirtual #16
800: dload         16
802: dconst_0
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: aload         18
817: invokestatic  #33
820: new           #10
823: dup
824: invokespecial #11
827: ldc           #12
829: invokevirtual #13
832: dload         21
834: invokevirtual #60
837: ldc           #15
839: invokevirtual #13
842: dconst_0
843: invokevirtual #60
846: ldc           #12
848: invokevirtual #13
851: invokevirtual #16
854: dload         21
856: dconst_0
857: dcmpl
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #17
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         25
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         25
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         27
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: ldc2_w        #61
943: invokevirtual #60
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: dload         27
956: ldc2_w        #61
959: dcmpl
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #17
971: new           #10
974: dup
975: invokespecial #11
978: ldc           #12
980: invokevirtual #13
983: dload         31
985: invokevirtual #60
988: ldc           #15
990: invokevirtual #13
993: dconst_0
994: invokevirtual #60
997: ldc           #12
999: invokevirtual #13
1002: invokevirtual #16
1005: dload         31
1007: dconst_0
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         33
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: ldc2_w        #61
1045: invokevirtual #60
1048: ldc           #12
1050: invokevirtual #13
1053: invokevirtual #16
1056: dload         33
1058: ldc2_w        #61
1061: dcmpl
1062: ifne          1069
1065: iconst_1
1066: goto          1070
1069: iconst_0
1070: invokestatic  #17
1073: new           #10
1076: dup
1077: invokespecial #11
1080: ldc           #12
1082: invokevirtual #13
1085: dload         35
1087: invokevirtual #60
1090: ldc           #15
1092: invokevirtual #13
1095: dconst_0
1096: invokevirtual #60
1099: ldc           #12
1101: invokevirtual #13
1104: invokevirtual #16
1107: dload         35
1109: dconst_0
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         40
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         40
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         42
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         42
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         47
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         47
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         49
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         49
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: iload         51
1332: invokevirtual #14
1335: ldc           #15
1337: invokevirtual #13
1340: iconst_0
1341: invokevirtual #14
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: iload         51
1354: ifne          1361
1357: iconst_1
1358: goto          1362
1361: iconst_0
1362: invokestatic  #17
1365: new           #10
1368: dup
1369: invokespecial #11
1372: ldc           #12
1374: invokevirtual #13
1377: dload         52
1379: invokevirtual #60
1382: ldc           #15
1384: invokevirtual #13
1387: dconst_0
1388: invokevirtual #60
1391: ldc           #12
1393: invokevirtual #13
1396: invokevirtual #16
1399: dload         52
1401: dconst_0
1402: dcmpl
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: aload         54
1416: invokestatic  #33
1419: new           #10
1422: dup
1423: invokespecial #11
1426: ldc           #12
1428: invokevirtual #13
1431: dload         57
1433: invokevirtual #60
1436: ldc           #15
1438: invokevirtual #13
1441: dconst_0
1442: invokevirtual #60
1445: ldc           #12
1447: invokevirtual #13
1450: invokevirtual #16
1453: dload         57
1455: dconst_0
1456: dcmpl
1457: ifne          1464
1460: iconst_1
1461: goto          1465
1464: iconst_0
1465: invokestatic  #17
1468: aload         59
1470: invokestatic  #33
1473: aload         60
1475: invokestatic  #33
1478: new           #10
1481: dup
1482: invokespecial #11
1485: ldc           #12
1487: invokevirtual #13
1490: dload         61
1492: invokevirtual #60
1495: ldc           #15
1497: invokevirtual #13
1500: ldc2_w        #63
1503: invokevirtual #60
1506: ldc           #12
1508: invokevirtual #13
1511: invokevirtual #16
1514: dload         61
1516: ldc2_w        #63
1519: dcmpl
1520: ifne          1527
1523: iconst_1
1524: goto          1528
1527: iconst_0
1528: invokestatic  #17
1531: aload         64
1533: invokestatic  #33
1536: return
Exception table:
from    to  target type
504   518   521   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2948
End line: 2959
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 0.6816705556107615d, (double) 1072693249, 6.691673596021348E41d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #281
35: ldc2_w        #283
38: ldc2_w        #285
41: invokespecial #81
44: astore_2
45: ldc           #20
47: invokestatic  #21
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
27    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2962
End line: 2973
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray0, 0.054831135561607555d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: checkcast     #288
29: astore_1
30: new           #27
33: dup
34: aload_1
35: ldc2_w        #289
38: invokespecial #30
41: astore_2
42: ldc           #20
44: invokestatic  #21
47: goto          51
50: astore_2
51: return
Exception table:
from    to  target type
30    47    50   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2976
End line: 2987
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 0.3010299956639812d, 3.982478439757621E7d, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #292
35: ldc2_w        #294
38: dconst_0
39: invokespecial #81
42: astore_2
43: ldc           #20
45: invokestatic  #21
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2990
End line: 3002
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 10, (double) (byte) 0, 52.0d, (-9.698065313833758E7d), false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double7 = org.apache.commons.math.geometry.euclidean.threed.Rotation.distance(rotation5, rotation6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #296
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #83
32: dconst_0
33: ldc2_w        #297
36: ldc2_w        #299
39: iconst_0
40: invokespecial #150
43: astore_1
44: aconst_null
45: astore_2
46: aload_1
47: aload_2
48: invokestatic  #19
51: dstore_3
52: ldc           #20
54: invokestatic  #21
57: goto          61
60: astore_3
61: return
Exception table:
from    to  target type
46    57    60   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 3005
End line: 3037
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D4 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double11 = vector3D7.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D10);
        double double12 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D4, vector3D10);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        boolean boolean24 = vector3D15.isInfinite();
        double double25 = vector3D4.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector27 = vector3D1.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        java.lang.Object obj28 = null;
        boolean boolean29 = vector3D26.equals(obj28);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation31 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D26, 0.7345682747147468d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 1.0795744E9f, vector3D26);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(euclidean3DVector27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #301
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: aconst_null
170: astore        21
172: aload         19
174: aload         21
176: invokevirtual #302
179: istore        22
181: new           #27
184: dup
185: aload         19
187: ldc2_w        #61
190: invokespecial #103
193: astore        23
195: new           #43
198: dup
199: ldc2_w        #303
202: aload         19
204: invokespecial #305
207: astore        24
209: aload_1
210: invokestatic  #33
213: new           #10
216: dup
217: invokespecial #11
220: ldc           #12
222: invokevirtual #13
225: dload         5
227: invokevirtual #60
230: ldc           #15
232: invokevirtual #13
235: dconst_0
236: invokevirtual #60
239: ldc           #12
241: invokevirtual #13
244: invokevirtual #16
247: dload         5
249: dconst_0
250: dcmpl
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #17
262: new           #10
265: dup
266: invokespecial #11
269: ldc           #12
271: invokevirtual #13
274: dload         7
276: invokevirtual #60
279: ldc           #15
281: invokevirtual #13
284: dconst_0
285: invokevirtual #60
288: ldc           #12
290: invokevirtual #13
293: invokevirtual #16
296: dload         7
298: dconst_0
299: dcmpl
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #17
311: new           #10
314: dup
315: invokespecial #11
318: ldc           #12
320: invokevirtual #13
323: dload         12
325: invokevirtual #60
328: ldc           #15
330: invokevirtual #13
333: dconst_0
334: invokevirtual #60
337: ldc           #12
339: invokevirtual #13
342: invokevirtual #16
345: dload         12
347: dconst_0
348: dcmpl
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #17
360: new           #10
363: dup
364: invokespecial #11
367: ldc           #12
369: invokevirtual #13
372: dload         14
374: invokevirtual #60
377: ldc           #15
379: invokevirtual #13
382: dconst_0
383: invokevirtual #60
386: ldc           #12
388: invokevirtual #13
391: invokevirtual #16
394: dload         14
396: dconst_0
397: dcmpl
398: ifne          405
401: iconst_1
402: goto          406
405: iconst_0
406: invokestatic  #17
409: new           #10
412: dup
413: invokespecial #11
416: ldc           #12
418: invokevirtual #13
421: iload         16
423: invokevirtual #14
426: ldc           #15
428: invokevirtual #13
431: iconst_0
432: invokevirtual #14
435: ldc           #12
437: invokevirtual #13
440: invokevirtual #16
443: iload         16
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #17
456: new           #10
459: dup
460: invokespecial #11
463: ldc           #12
465: invokevirtual #13
468: dload         17
470: invokevirtual #60
473: ldc           #15
475: invokevirtual #13
478: dconst_0
479: invokevirtual #60
482: ldc           #12
484: invokevirtual #13
487: invokevirtual #16
490: dload         17
492: dconst_0
493: dcmpl
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #17
505: aload         19
507: invokestatic  #33
510: aload         20
512: invokestatic  #33
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: iload         22
529: invokevirtual #14
532: ldc           #15
534: invokevirtual #13
537: iconst_0
538: invokevirtual #14
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: iload         22
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #17
562: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 3040
End line: 3126
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(100.0d);
        double double87 = vector3D30.getNormSq();
        boolean boolean88 = vector3D30.isNaN();
        java.text.NumberFormat numberFormat89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = vector3D30.toString(numberFormat89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0000000000000002d + "'", double87 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #306
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #68
499: invokevirtual #107
502: astore        64
504: aload         20
506: invokevirtual #111
509: dstore        65
511: aload         20
513: invokevirtual #307
516: istore        67
518: aconst_null
519: astore        68
521: aload         20
523: aload         68
525: invokevirtual #166
528: astore        69
530: ldc           #20
532: invokestatic  #21
535: goto          540
538: astore        69
540: new           #10
543: dup
544: invokespecial #11
547: ldc           #12
549: invokevirtual #13
552: dload         4
554: invokevirtual #60
557: ldc           #15
559: invokevirtual #13
562: dconst_0
563: invokevirtual #60
566: ldc           #12
568: invokevirtual #13
571: invokevirtual #16
574: dload         4
576: dconst_0
577: dcmpl
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #17
589: new           #10
592: dup
593: invokespecial #11
596: ldc           #12
598: invokevirtual #13
601: dload         6
603: invokevirtual #60
606: ldc           #15
608: invokevirtual #13
611: dconst_0
612: invokevirtual #60
615: ldc           #12
617: invokevirtual #13
620: invokevirtual #16
623: dload         6
625: dconst_0
626: dcmpl
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #17
638: new           #10
641: dup
642: invokespecial #11
645: ldc           #12
647: invokevirtual #13
650: dload         11
652: invokevirtual #60
655: ldc           #15
657: invokevirtual #13
660: dconst_0
661: invokevirtual #60
664: ldc           #12
666: invokevirtual #13
669: invokevirtual #16
672: dload         11
674: dconst_0
675: dcmpl
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #17
687: new           #10
690: dup
691: invokespecial #11
694: ldc           #12
696: invokevirtual #13
699: dload         13
701: invokevirtual #60
704: ldc           #15
706: invokevirtual #13
709: dconst_0
710: invokevirtual #60
713: ldc           #12
715: invokevirtual #13
718: invokevirtual #16
721: dload         13
723: dconst_0
724: dcmpl
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #17
736: new           #10
739: dup
740: invokespecial #11
743: ldc           #12
745: invokevirtual #13
748: iload         15
750: invokevirtual #14
753: ldc           #15
755: invokevirtual #13
758: iconst_0
759: invokevirtual #14
762: ldc           #12
764: invokevirtual #13
767: invokevirtual #16
770: iload         15
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #17
783: new           #10
786: dup
787: invokespecial #11
790: ldc           #12
792: invokevirtual #13
795: dload         16
797: invokevirtual #60
800: ldc           #15
802: invokevirtual #13
805: dconst_0
806: invokevirtual #60
809: ldc           #12
811: invokevirtual #13
814: invokevirtual #16
817: dload         16
819: dconst_0
820: dcmpl
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #17
832: aload         18
834: invokestatic  #33
837: new           #10
840: dup
841: invokespecial #11
844: ldc           #12
846: invokevirtual #13
849: dload         21
851: invokevirtual #60
854: ldc           #15
856: invokevirtual #13
859: dconst_0
860: invokevirtual #60
863: ldc           #12
865: invokevirtual #13
868: invokevirtual #16
871: dload         21
873: dconst_0
874: dcmpl
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #17
886: new           #10
889: dup
890: invokespecial #11
893: ldc           #12
895: invokevirtual #13
898: dload         25
900: invokevirtual #60
903: ldc           #15
905: invokevirtual #13
908: dconst_0
909: invokevirtual #60
912: ldc           #12
914: invokevirtual #13
917: invokevirtual #16
920: dload         25
922: dconst_0
923: dcmpl
924: ifne          931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #17
935: new           #10
938: dup
939: invokespecial #11
942: ldc           #12
944: invokevirtual #13
947: dload         27
949: invokevirtual #60
952: ldc           #15
954: invokevirtual #13
957: ldc2_w        #61
960: invokevirtual #60
963: ldc           #12
965: invokevirtual #13
968: invokevirtual #16
971: dload         27
973: ldc2_w        #61
976: dcmpl
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #17
988: new           #10
991: dup
992: invokespecial #11
995: ldc           #12
997: invokevirtual #13
1000: dload         31
1002: invokevirtual #60
1005: ldc           #15
1007: invokevirtual #13
1010: dconst_0
1011: invokevirtual #60
1014: ldc           #12
1016: invokevirtual #13
1019: invokevirtual #16
1022: dload         31
1024: dconst_0
1025: dcmpl
1026: ifne          1033
1029: iconst_1
1030: goto          1034
1033: iconst_0
1034: invokestatic  #17
1037: new           #10
1040: dup
1041: invokespecial #11
1044: ldc           #12
1046: invokevirtual #13
1049: dload         33
1051: invokevirtual #60
1054: ldc           #15
1056: invokevirtual #13
1059: ldc2_w        #61
1062: invokevirtual #60
1065: ldc           #12
1067: invokevirtual #13
1070: invokevirtual #16
1073: dload         33
1075: ldc2_w        #61
1078: dcmpl
1079: ifne          1086
1082: iconst_1
1083: goto          1087
1086: iconst_0
1087: invokestatic  #17
1090: new           #10
1093: dup
1094: invokespecial #11
1097: ldc           #12
1099: invokevirtual #13
1102: dload         35
1104: invokevirtual #60
1107: ldc           #15
1109: invokevirtual #13
1112: dconst_0
1113: invokevirtual #60
1116: ldc           #12
1118: invokevirtual #13
1121: invokevirtual #16
1124: dload         35
1126: dconst_0
1127: dcmpl
1128: ifne          1135
1131: iconst_1
1132: goto          1136
1135: iconst_0
1136: invokestatic  #17
1139: new           #10
1142: dup
1143: invokespecial #11
1146: ldc           #12
1148: invokevirtual #13
1151: dload         40
1153: invokevirtual #60
1156: ldc           #15
1158: invokevirtual #13
1161: dconst_0
1162: invokevirtual #60
1165: ldc           #12
1167: invokevirtual #13
1170: invokevirtual #16
1173: dload         40
1175: dconst_0
1176: dcmpl
1177: ifne          1184
1180: iconst_1
1181: goto          1185
1184: iconst_0
1185: invokestatic  #17
1188: new           #10
1191: dup
1192: invokespecial #11
1195: ldc           #12
1197: invokevirtual #13
1200: dload         42
1202: invokevirtual #60
1205: ldc           #15
1207: invokevirtual #13
1210: dconst_0
1211: invokevirtual #60
1214: ldc           #12
1216: invokevirtual #13
1219: invokevirtual #16
1222: dload         42
1224: dconst_0
1225: dcmpl
1226: ifne          1233
1229: iconst_1
1230: goto          1234
1233: iconst_0
1234: invokestatic  #17
1237: new           #10
1240: dup
1241: invokespecial #11
1244: ldc           #12
1246: invokevirtual #13
1249: dload         47
1251: invokevirtual #60
1254: ldc           #15
1256: invokevirtual #13
1259: dconst_0
1260: invokevirtual #60
1263: ldc           #12
1265: invokevirtual #13
1268: invokevirtual #16
1271: dload         47
1273: dconst_0
1274: dcmpl
1275: ifne          1282
1278: iconst_1
1279: goto          1283
1282: iconst_0
1283: invokestatic  #17
1286: new           #10
1289: dup
1290: invokespecial #11
1293: ldc           #12
1295: invokevirtual #13
1298: dload         49
1300: invokevirtual #60
1303: ldc           #15
1305: invokevirtual #13
1308: dconst_0
1309: invokevirtual #60
1312: ldc           #12
1314: invokevirtual #13
1317: invokevirtual #16
1320: dload         49
1322: dconst_0
1323: dcmpl
1324: ifne          1331
1327: iconst_1
1328: goto          1332
1331: iconst_0
1332: invokestatic  #17
1335: new           #10
1338: dup
1339: invokespecial #11
1342: ldc           #12
1344: invokevirtual #13
1347: iload         51
1349: invokevirtual #14
1352: ldc           #15
1354: invokevirtual #13
1357: iconst_0
1358: invokevirtual #14
1361: ldc           #12
1363: invokevirtual #13
1366: invokevirtual #16
1369: iload         51
1371: ifne          1378
1374: iconst_1
1375: goto          1379
1378: iconst_0
1379: invokestatic  #17
1382: new           #10
1385: dup
1386: invokespecial #11
1389: ldc           #12
1391: invokevirtual #13
1394: dload         52
1396: invokevirtual #60
1399: ldc           #15
1401: invokevirtual #13
1404: dconst_0
1405: invokevirtual #60
1408: ldc           #12
1410: invokevirtual #13
1413: invokevirtual #16
1416: dload         52
1418: dconst_0
1419: dcmpl
1420: ifne          1427
1423: iconst_1
1424: goto          1428
1427: iconst_0
1428: invokestatic  #17
1431: aload         54
1433: invokestatic  #33
1436: new           #10
1439: dup
1440: invokespecial #11
1443: ldc           #12
1445: invokevirtual #13
1448: dload         57
1450: invokevirtual #60
1453: ldc           #15
1455: invokevirtual #13
1458: dconst_0
1459: invokevirtual #60
1462: ldc           #12
1464: invokevirtual #13
1467: invokevirtual #16
1470: dload         57
1472: dconst_0
1473: dcmpl
1474: ifne          1481
1477: iconst_1
1478: goto          1482
1481: iconst_0
1482: invokestatic  #17
1485: aload         59
1487: invokestatic  #33
1490: aload         60
1492: invokestatic  #33
1495: new           #10
1498: dup
1499: invokespecial #11
1502: ldc           #12
1504: invokevirtual #13
1507: dload         61
1509: invokevirtual #60
1512: ldc           #15
1514: invokevirtual #13
1517: ldc2_w        #63
1520: invokevirtual #60
1523: ldc           #12
1525: invokevirtual #13
1528: invokevirtual #16
1531: dload         61
1533: ldc2_w        #63
1536: dcmpl
1537: ifne          1544
1540: iconst_1
1541: goto          1545
1544: iconst_0
1545: invokestatic  #17
1548: aload         64
1550: invokestatic  #33
1553: new           #10
1556: dup
1557: invokespecial #11
1560: ldc           #12
1562: invokevirtual #13
1565: dload         65
1567: invokevirtual #60
1570: ldc           #15
1572: invokevirtual #13
1575: ldc2_w        #63
1578: invokevirtual #60
1581: ldc           #12
1583: invokevirtual #13
1586: invokevirtual #16
1589: dload         65
1591: ldc2_w        #63
1594: dcmpl
1595: ifne          1602
1598: iconst_1
1599: goto          1603
1602: iconst_0
1603: invokestatic  #17
1606: new           #10
1609: dup
1610: invokespecial #11
1613: ldc           #12
1615: invokevirtual #13
1618: iload         67
1620: invokevirtual #14
1623: ldc           #15
1625: invokevirtual #13
1628: iconst_0
1629: invokevirtual #14
1632: ldc           #12
1634: invokevirtual #13
1637: invokevirtual #16
1640: iload         67
1642: ifne          1649
1645: iconst_1
1646: goto          1650
1649: iconst_0
1650: invokestatic  #17
1653: return
Exception table:
from    to  target type
521   535   538   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 3129
End line: 3194
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D25.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = vector3D28.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D28, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D39, vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D58.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double63 = vector3D61.getDelta();
        double double64 = vector3D53.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double65 = vector3D45.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector66 = vector3D45.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = vector3D28.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = rotation0.applyTo(vector3D28);
        double double69 = rotation0.getAngle();
        org.junit.Assert.assertNotNull(rotation0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.7345682747147468d + "'", double63 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #308
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #309
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         20
200: invokevirtual #55
203: astore        24
205: aload         20
207: invokevirtual #193
210: astore        25
212: new           #27
215: dup
216: aload         20
218: ldc2_w        #259
221: invokespecial #103
224: astore        26
226: new           #43
229: dup
230: dconst_1
231: ldc2_w        #44
234: invokespecial #46
237: astore        27
239: new           #43
242: dup
243: dconst_1
244: ldc2_w        #44
247: invokespecial #46
250: astore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        29
265: aload         28
267: aload         29
269: invokevirtual #47
272: dstore        30
274: aload         27
276: aload         29
278: invokestatic  #48
281: dstore        32
283: new           #43
286: dup
287: dconst_1
288: ldc2_w        #44
291: invokespecial #46
294: astore        34
296: new           #43
299: dup
300: dconst_1
301: ldc2_w        #44
304: invokespecial #46
307: astore        35
309: aload         34
311: aload         35
313: invokevirtual #47
316: dstore        36
318: aload         35
320: invokevirtual #52
323: dstore        38
325: new           #43
328: dup
329: dconst_1
330: ldc2_w        #44
333: invokespecial #46
336: astore        40
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        41
351: aload         40
353: aload         41
355: invokevirtual #47
358: dstore        42
360: aload         41
362: invokevirtual #52
365: dstore        44
367: aload         35
369: aload         41
371: invokevirtual #53
374: dstore        46
376: aload         29
378: aload         35
380: invokevirtual #129
383: dstore        48
385: aload         29
387: invokevirtual #193
390: astore        50
392: aload         20
394: aload         29
396: invokevirtual #55
399: astore        51
401: aload_1
402: aload         20
404: invokevirtual #140
407: astore        52
409: aload_1
410: invokevirtual #240
413: dstore        53
415: aload_1
416: invokestatic  #33
419: new           #10
422: dup
423: invokespecial #11
426: ldc           #12
428: invokevirtual #13
431: dload         5
433: invokevirtual #60
436: ldc           #15
438: invokevirtual #13
441: dconst_0
442: invokevirtual #60
445: ldc           #12
447: invokevirtual #13
450: invokevirtual #16
453: dload         5
455: dconst_0
456: dcmpl
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #17
468: new           #10
471: dup
472: invokespecial #11
475: ldc           #12
477: invokevirtual #13
480: dload         7
482: invokevirtual #60
485: ldc           #15
487: invokevirtual #13
490: dconst_0
491: invokevirtual #60
494: ldc           #12
496: invokevirtual #13
499: invokevirtual #16
502: dload         7
504: dconst_0
505: dcmpl
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #17
517: new           #10
520: dup
521: invokespecial #11
524: ldc           #12
526: invokevirtual #13
529: dload         12
531: invokevirtual #60
534: ldc           #15
536: invokevirtual #13
539: dconst_0
540: invokevirtual #60
543: ldc           #12
545: invokevirtual #13
548: invokevirtual #16
551: dload         12
553: dconst_0
554: dcmpl
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #17
566: new           #10
569: dup
570: invokespecial #11
573: ldc           #12
575: invokevirtual #13
578: dload         14
580: invokevirtual #60
583: ldc           #15
585: invokevirtual #13
588: dconst_0
589: invokevirtual #60
592: ldc           #12
594: invokevirtual #13
597: invokevirtual #16
600: dload         14
602: dconst_0
603: dcmpl
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #17
615: new           #10
618: dup
619: invokespecial #11
622: ldc           #12
624: invokevirtual #13
627: iload         16
629: invokevirtual #14
632: ldc           #15
634: invokevirtual #13
637: iconst_0
638: invokevirtual #14
641: ldc           #12
643: invokevirtual #13
646: invokevirtual #16
649: iload         16
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: dload         17
676: invokevirtual #60
679: ldc           #15
681: invokevirtual #13
684: dconst_0
685: invokevirtual #60
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: dload         17
698: dconst_0
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #17
711: aload         19
713: invokestatic  #33
716: new           #10
719: dup
720: invokespecial #11
723: ldc           #12
725: invokevirtual #13
728: dload         22
730: invokevirtual #60
733: ldc           #15
735: invokevirtual #13
738: dconst_0
739: invokevirtual #60
742: ldc           #12
744: invokevirtual #13
747: invokevirtual #16
750: dload         22
752: dconst_0
753: dcmpl
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #17
765: aload         24
767: invokestatic  #33
770: aload         25
772: invokestatic  #33
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: dload         30
789: invokevirtual #60
792: ldc           #15
794: invokevirtual #13
797: dconst_0
798: invokevirtual #60
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: dload         30
811: dconst_0
812: dcmpl
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #17
824: new           #10
827: dup
828: invokespecial #11
831: ldc           #12
833: invokevirtual #13
836: dload         32
838: invokevirtual #60
841: ldc           #15
843: invokevirtual #13
846: dconst_0
847: invokevirtual #60
850: ldc           #12
852: invokevirtual #13
855: invokevirtual #16
858: dload         32
860: dconst_0
861: dcmpl
862: ifne          869
865: iconst_1
866: goto          870
869: iconst_0
870: invokestatic  #17
873: new           #10
876: dup
877: invokespecial #11
880: ldc           #12
882: invokevirtual #13
885: dload         36
887: invokevirtual #60
890: ldc           #15
892: invokevirtual #13
895: dconst_0
896: invokevirtual #60
899: ldc           #12
901: invokevirtual #13
904: invokevirtual #16
907: dload         36
909: dconst_0
910: dcmpl
911: ifne          918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #17
922: new           #10
925: dup
926: invokespecial #11
929: ldc           #12
931: invokevirtual #13
934: dload         38
936: invokevirtual #60
939: ldc           #15
941: invokevirtual #13
944: ldc2_w        #61
947: invokevirtual #60
950: ldc           #12
952: invokevirtual #13
955: invokevirtual #16
958: dload         38
960: ldc2_w        #61
963: dcmpl
964: ifne          971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #17
975: new           #10
978: dup
979: invokespecial #11
982: ldc           #12
984: invokevirtual #13
987: dload         42
989: invokevirtual #60
992: ldc           #15
994: invokevirtual #13
997: dconst_0
998: invokevirtual #60
1001: ldc           #12
1003: invokevirtual #13
1006: invokevirtual #16
1009: dload         42
1011: dconst_0
1012: dcmpl
1013: ifne          1020
1016: iconst_1
1017: goto          1021
1020: iconst_0
1021: invokestatic  #17
1024: new           #10
1027: dup
1028: invokespecial #11
1031: ldc           #12
1033: invokevirtual #13
1036: dload         44
1038: invokevirtual #60
1041: ldc           #15
1043: invokevirtual #13
1046: ldc2_w        #61
1049: invokevirtual #60
1052: ldc           #12
1054: invokevirtual #13
1057: invokevirtual #16
1060: dload         44
1062: ldc2_w        #61
1065: dcmpl
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #17
1077: new           #10
1080: dup
1081: invokespecial #11
1084: ldc           #12
1086: invokevirtual #13
1089: dload         46
1091: invokevirtual #60
1094: ldc           #15
1096: invokevirtual #13
1099: dconst_0
1100: invokevirtual #60
1103: ldc           #12
1105: invokevirtual #13
1108: invokevirtual #16
1111: dload         46
1113: dconst_0
1114: dcmpl
1115: ifne          1122
1118: iconst_1
1119: goto          1123
1122: iconst_0
1123: invokestatic  #17
1126: new           #10
1129: dup
1130: invokespecial #11
1133: ldc           #12
1135: invokevirtual #13
1138: dload         48
1140: invokevirtual #60
1143: ldc           #15
1145: invokevirtual #13
1148: dconst_0
1149: invokevirtual #60
1152: ldc           #12
1154: invokevirtual #13
1157: invokevirtual #16
1160: dload         48
1162: dconst_0
1163: dcmpl
1164: ifne          1171
1167: iconst_1
1168: goto          1172
1171: iconst_0
1172: invokestatic  #17
1175: aload         50
1177: invokestatic  #33
1180: aload         51
1182: invokestatic  #33
1185: aload         52
1187: invokestatic  #33
1190: new           #10
1193: dup
1194: invokespecial #11
1197: ldc           #12
1199: invokevirtual #13
1202: dload         53
1204: invokevirtual #60
1207: ldc           #15
1209: invokevirtual #13
1212: dconst_0
1213: invokevirtual #60
1216: ldc           #12
1218: invokevirtual #13
1221: invokevirtual #16
1224: dload         53
1226: dconst_0
1227: dcmpl
1228: ifne          1235
1231: iconst_1
1232: goto          1236
1235: iconst_0
1236: invokestatic  #17
1239: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 3197
End line: 3287
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 32, (double) 10.0f);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D6, vector3D12);
        boolean boolean15 = vector3D6.isInfinite();
        double double16 = vector3D6.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double23 = vector3D19.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double24 = vector3D22.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        double double32 = vector3D30.getDelta();
        double double33 = vector3D22.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double43 = vector3D39.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        double double44 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D36, vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D47, vector3D53);
        boolean boolean56 = vector3D47.isInfinite();
        double double57 = vector3D36.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = vector3D47.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double65 = vector3D61.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D58.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = vector3D22.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation68 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D6, vector3D22);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double79 = vector3D75.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        double double80 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D78);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double90 = vector3D86.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        double double91 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D83, vector3D89);
        boolean boolean92 = vector3D83.isInfinite();
        double double93 = vector3D72.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = vector3D83.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector95 = vector3D69.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D94);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = vector3D69.orthogonal();
        double double97 = vector3D6.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D98 = vector3D2.add(0.6702668260599606d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        double double99 = vector3D98.getZ();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.6957086881730823d + "'", double16 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.7345682747147468d + "'", double24 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.7345682747147468d + "'", double32 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(euclidean3DVector95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + Double.POSITIVE_INFINITY + "'", double97 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: ldc2_w        #70
32: ldc2_w        #83
35: invokespecial #46
38: astore_1
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_2
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore_3
63: new           #43
66: dup
67: dconst_1
68: ldc2_w        #44
71: invokespecial #46
74: astore        4
76: aload_3
77: aload         4
79: invokevirtual #47
82: dstore        5
84: aload_2
85: aload         4
87: invokestatic  #48
90: dstore        7
92: aload_2
93: invokevirtual #49
96: istore        9
98: aload_2
99: invokevirtual #162
102: dstore        10
104: new           #43
107: dup
108: dconst_1
109: ldc2_w        #44
112: invokespecial #46
115: astore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        13
130: aload         12
132: aload         13
134: invokevirtual #47
137: dstore        14
139: aload         13
141: invokevirtual #52
144: dstore        16
146: new           #43
149: dup
150: dconst_1
151: ldc2_w        #44
154: invokespecial #46
157: astore        18
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        19
172: aload         18
174: aload         19
176: invokevirtual #47
179: dstore        20
181: aload         19
183: invokevirtual #52
186: dstore        22
188: aload         13
190: aload         19
192: invokevirtual #53
195: dstore        24
197: new           #43
200: dup
201: dconst_1
202: ldc2_w        #44
205: invokespecial #46
208: astore        26
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        27
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        28
236: aload         27
238: aload         28
240: invokevirtual #47
243: dstore        29
245: aload         26
247: aload         28
249: invokestatic  #48
252: dstore        31
254: new           #43
257: dup
258: dconst_1
259: ldc2_w        #44
262: invokespecial #46
265: astore        33
267: new           #43
270: dup
271: dconst_1
272: ldc2_w        #44
275: invokespecial #46
278: astore        34
280: new           #43
283: dup
284: dconst_1
285: ldc2_w        #44
288: invokespecial #46
291: astore        35
293: aload         34
295: aload         35
297: invokevirtual #47
300: dstore        36
302: aload         33
304: aload         35
306: invokestatic  #48
309: dstore        38
311: aload         33
313: invokevirtual #49
316: istore        40
318: aload         26
320: aload         33
322: invokevirtual #50
325: dstore        41
327: aload         33
329: invokevirtual #54
332: astore        43
334: new           #43
337: dup
338: dconst_1
339: ldc2_w        #44
342: invokespecial #46
345: astore        44
347: new           #43
350: dup
351: dconst_1
352: ldc2_w        #44
355: invokespecial #46
358: astore        45
360: aload         44
362: aload         45
364: invokevirtual #47
367: dstore        46
369: aload         43
371: aload         44
373: invokevirtual #55
376: astore        48
378: aload         13
380: aload         48
382: invokevirtual #55
385: astore        49
387: new           #27
390: dup
391: aload_2
392: aload         13
394: invokespecial #56
397: astore        50
399: getstatic     #126
402: astore        51
404: new           #43
407: dup
408: dconst_1
409: ldc2_w        #44
412: invokespecial #46
415: astore        52
417: new           #43
420: dup
421: dconst_1
422: ldc2_w        #44
425: invokespecial #46
428: astore        53
430: new           #43
433: dup
434: dconst_1
435: ldc2_w        #44
438: invokespecial #46
441: astore        54
443: aload         53
445: aload         54
447: invokevirtual #47
450: dstore        55
452: aload         52
454: aload         54
456: invokestatic  #48
459: dstore        57
461: new           #43
464: dup
465: dconst_1
466: ldc2_w        #44
469: invokespecial #46
472: astore        59
474: new           #43
477: dup
478: dconst_1
479: ldc2_w        #44
482: invokespecial #46
485: astore        60
487: new           #43
490: dup
491: dconst_1
492: ldc2_w        #44
495: invokespecial #46
498: astore        61
500: aload         60
502: aload         61
504: invokevirtual #47
507: dstore        62
509: aload         59
511: aload         61
513: invokestatic  #48
516: dstore        64
518: aload         59
520: invokevirtual #49
523: istore        66
525: aload         52
527: aload         59
529: invokevirtual #50
532: dstore        67
534: aload         59
536: invokevirtual #54
539: astore        69
541: aload         51
543: aload         69
545: invokevirtual #55
548: astore        70
550: aload         51
552: invokevirtual #163
555: astore        71
557: aload_2
558: aload         51
560: invokevirtual #50
563: dstore        72
565: aload_1
566: ldc2_w        #79
569: aload         51
571: invokevirtual #182
574: astore        74
576: aload         74
578: invokevirtual #311
581: dstore        75
583: new           #10
586: dup
587: invokespecial #11
590: ldc           #12
592: invokevirtual #13
595: dload         5
597: invokevirtual #60
600: ldc           #15
602: invokevirtual #13
605: dconst_0
606: invokevirtual #60
609: ldc           #12
611: invokevirtual #13
614: invokevirtual #16
617: dload         5
619: dconst_0
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #17
632: new           #10
635: dup
636: invokespecial #11
639: ldc           #12
641: invokevirtual #13
644: dload         7
646: invokevirtual #60
649: ldc           #15
651: invokevirtual #13
654: dconst_0
655: invokevirtual #60
658: ldc           #12
660: invokevirtual #13
663: invokevirtual #16
666: dload         7
668: dconst_0
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #17
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: iload         9
695: invokevirtual #14
698: ldc           #15
700: invokevirtual #13
703: iconst_0
704: invokevirtual #14
707: ldc           #12
709: invokevirtual #13
712: invokevirtual #16
715: iload         9
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #17
728: new           #10
731: dup
732: invokespecial #11
735: ldc           #12
737: invokevirtual #13
740: dload         10
742: invokevirtual #60
745: ldc           #15
747: invokevirtual #13
750: ldc2_w        #167
753: invokevirtual #60
756: ldc           #12
758: invokevirtual #13
761: invokevirtual #16
764: dload         10
766: ldc2_w        #167
769: dcmpl
770: ifne          777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #17
781: new           #10
784: dup
785: invokespecial #11
788: ldc           #12
790: invokevirtual #13
793: dload         14
795: invokevirtual #60
798: ldc           #15
800: invokevirtual #13
803: dconst_0
804: invokevirtual #60
807: ldc           #12
809: invokevirtual #13
812: invokevirtual #16
815: dload         14
817: dconst_0
818: dcmpl
819: ifne          826
822: iconst_1
823: goto          827
826: iconst_0
827: invokestatic  #17
830: new           #10
833: dup
834: invokespecial #11
837: ldc           #12
839: invokevirtual #13
842: dload         16
844: invokevirtual #60
847: ldc           #15
849: invokevirtual #13
852: ldc2_w        #61
855: invokevirtual #60
858: ldc           #12
860: invokevirtual #13
863: invokevirtual #16
866: dload         16
868: ldc2_w        #61
871: dcmpl
872: ifne          879
875: iconst_1
876: goto          880
879: iconst_0
880: invokestatic  #17
883: new           #10
886: dup
887: invokespecial #11
890: ldc           #12
892: invokevirtual #13
895: dload         20
897: invokevirtual #60
900: ldc           #15
902: invokevirtual #13
905: dconst_0
906: invokevirtual #60
909: ldc           #12
911: invokevirtual #13
914: invokevirtual #16
917: dload         20
919: dconst_0
920: dcmpl
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: new           #10
935: dup
936: invokespecial #11
939: ldc           #12
941: invokevirtual #13
944: dload         22
946: invokevirtual #60
949: ldc           #15
951: invokevirtual #13
954: ldc2_w        #61
957: invokevirtual #60
960: ldc           #12
962: invokevirtual #13
965: invokevirtual #16
968: dload         22
970: ldc2_w        #61
973: dcmpl
974: ifne          981
977: iconst_1
978: goto          982
981: iconst_0
982: invokestatic  #17
985: new           #10
988: dup
989: invokespecial #11
992: ldc           #12
994: invokevirtual #13
997: dload         24
999: invokevirtual #60
1002: ldc           #15
1004: invokevirtual #13
1007: dconst_0
1008: invokevirtual #60
1011: ldc           #12
1013: invokevirtual #13
1016: invokevirtual #16
1019: dload         24
1021: dconst_0
1022: dcmpl
1023: ifne          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #17
1034: new           #10
1037: dup
1038: invokespecial #11
1041: ldc           #12
1043: invokevirtual #13
1046: dload         29
1048: invokevirtual #60
1051: ldc           #15
1053: invokevirtual #13
1056: dconst_0
1057: invokevirtual #60
1060: ldc           #12
1062: invokevirtual #13
1065: invokevirtual #16
1068: dload         29
1070: dconst_0
1071: dcmpl
1072: ifne          1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #17
1083: new           #10
1086: dup
1087: invokespecial #11
1090: ldc           #12
1092: invokevirtual #13
1095: dload         31
1097: invokevirtual #60
1100: ldc           #15
1102: invokevirtual #13
1105: dconst_0
1106: invokevirtual #60
1109: ldc           #12
1111: invokevirtual #13
1114: invokevirtual #16
1117: dload         31
1119: dconst_0
1120: dcmpl
1121: ifne          1128
1124: iconst_1
1125: goto          1129
1128: iconst_0
1129: invokestatic  #17
1132: new           #10
1135: dup
1136: invokespecial #11
1139: ldc           #12
1141: invokevirtual #13
1144: dload         36
1146: invokevirtual #60
1149: ldc           #15
1151: invokevirtual #13
1154: dconst_0
1155: invokevirtual #60
1158: ldc           #12
1160: invokevirtual #13
1163: invokevirtual #16
1166: dload         36
1168: dconst_0
1169: dcmpl
1170: ifne          1177
1173: iconst_1
1174: goto          1178
1177: iconst_0
1178: invokestatic  #17
1181: new           #10
1184: dup
1185: invokespecial #11
1188: ldc           #12
1190: invokevirtual #13
1193: dload         38
1195: invokevirtual #60
1198: ldc           #15
1200: invokevirtual #13
1203: dconst_0
1204: invokevirtual #60
1207: ldc           #12
1209: invokevirtual #13
1212: invokevirtual #16
1215: dload         38
1217: dconst_0
1218: dcmpl
1219: ifne          1226
1222: iconst_1
1223: goto          1227
1226: iconst_0
1227: invokestatic  #17
1230: new           #10
1233: dup
1234: invokespecial #11
1237: ldc           #12
1239: invokevirtual #13
1242: iload         40
1244: invokevirtual #14
1247: ldc           #15
1249: invokevirtual #13
1252: iconst_0
1253: invokevirtual #14
1256: ldc           #12
1258: invokevirtual #13
1261: invokevirtual #16
1264: iload         40
1266: ifne          1273
1269: iconst_1
1270: goto          1274
1273: iconst_0
1274: invokestatic  #17
1277: new           #10
1280: dup
1281: invokespecial #11
1284: ldc           #12
1286: invokevirtual #13
1289: dload         41
1291: invokevirtual #60
1294: ldc           #15
1296: invokevirtual #13
1299: dconst_0
1300: invokevirtual #60
1303: ldc           #12
1305: invokevirtual #13
1308: invokevirtual #16
1311: dload         41
1313: dconst_0
1314: dcmpl
1315: ifne          1322
1318: iconst_1
1319: goto          1323
1322: iconst_0
1323: invokestatic  #17
1326: aload         43
1328: invokestatic  #33
1331: new           #10
1334: dup
1335: invokespecial #11
1338: ldc           #12
1340: invokevirtual #13
1343: dload         46
1345: invokevirtual #60
1348: ldc           #15
1350: invokevirtual #13
1353: dconst_0
1354: invokevirtual #60
1357: ldc           #12
1359: invokevirtual #13
1362: invokevirtual #16
1365: dload         46
1367: dconst_0
1368: dcmpl
1369: ifne          1376
1372: iconst_1
1373: goto          1377
1376: iconst_0
1377: invokestatic  #17
1380: aload         48
1382: invokestatic  #33
1385: aload         49
1387: invokestatic  #33
1390: aload         51
1392: invokestatic  #33
1395: new           #10
1398: dup
1399: invokespecial #11
1402: ldc           #12
1404: invokevirtual #13
1407: dload         55
1409: invokevirtual #60
1412: ldc           #15
1414: invokevirtual #13
1417: dconst_0
1418: invokevirtual #60
1421: ldc           #12
1423: invokevirtual #13
1426: invokevirtual #16
1429: dload         55
1431: dconst_0
1432: dcmpl
1433: ifne          1440
1436: iconst_1
1437: goto          1441
1440: iconst_0
1441: invokestatic  #17
1444: new           #10
1447: dup
1448: invokespecial #11
1451: ldc           #12
1453: invokevirtual #13
1456: dload         57
1458: invokevirtual #60
1461: ldc           #15
1463: invokevirtual #13
1466: dconst_0
1467: invokevirtual #60
1470: ldc           #12
1472: invokevirtual #13
1475: invokevirtual #16
1478: dload         57
1480: dconst_0
1481: dcmpl
1482: ifne          1489
1485: iconst_1
1486: goto          1490
1489: iconst_0
1490: invokestatic  #17
1493: new           #10
1496: dup
1497: invokespecial #11
1500: ldc           #12
1502: invokevirtual #13
1505: dload         62
1507: invokevirtual #60
1510: ldc           #15
1512: invokevirtual #13
1515: dconst_0
1516: invokevirtual #60
1519: ldc           #12
1521: invokevirtual #13
1524: invokevirtual #16
1527: dload         62
1529: dconst_0
1530: dcmpl
1531: ifne          1538
1534: iconst_1
1535: goto          1539
1538: iconst_0
1539: invokestatic  #17
1542: new           #10
1545: dup
1546: invokespecial #11
1549: ldc           #12
1551: invokevirtual #13
1554: dload         64
1556: invokevirtual #60
1559: ldc           #15
1561: invokevirtual #13
1564: dconst_0
1565: invokevirtual #60
1568: ldc           #12
1570: invokevirtual #13
1573: invokevirtual #16
1576: dload         64
1578: dconst_0
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: new           #10
1594: dup
1595: invokespecial #11
1598: ldc           #12
1600: invokevirtual #13
1603: iload         66
1605: invokevirtual #14
1608: ldc           #15
1610: invokevirtual #13
1613: iconst_0
1614: invokevirtual #14
1617: ldc           #12
1619: invokevirtual #13
1622: invokevirtual #16
1625: iload         66
1627: ifne          1634
1630: iconst_1
1631: goto          1635
1634: iconst_0
1635: invokestatic  #17
1638: new           #10
1641: dup
1642: invokespecial #11
1645: ldc           #12
1647: invokevirtual #13
1650: dload         67
1652: invokevirtual #60
1655: ldc           #15
1657: invokevirtual #13
1660: dconst_0
1661: invokevirtual #60
1664: ldc           #12
1666: invokevirtual #13
1669: invokevirtual #16
1672: dload         67
1674: dconst_0
1675: dcmpl
1676: ifne          1683
1679: iconst_1
1680: goto          1684
1683: iconst_0
1684: invokestatic  #17
1687: aload         69
1689: invokestatic  #33
1692: aload         70
1694: invokestatic  #33
1697: aload         71
1699: invokestatic  #33
1702: new           #10
1705: dup
1706: invokespecial #11
1709: ldc           #12
1711: invokevirtual #13
1714: dload         72
1716: invokevirtual #60
1719: ldc           #15
1721: invokevirtual #13
1724: ldc2_w        #133
1727: invokevirtual #60
1730: ldc           #12
1732: invokevirtual #13
1735: invokevirtual #16
1738: dload         72
1740: ldc2_w        #133
1743: dcmpl
1744: ifne          1751
1747: iconst_1
1748: goto          1752
1751: iconst_0
1752: invokestatic  #17
1755: aload         74
1757: invokestatic  #33
1760: dload         75
1762: invokestatic  #242
1765: invokestatic  #243
1768: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 3290
End line: 3370
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.POSITIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        java.text.NumberFormat numberFormat3 = null;
        java.lang.String str4 = vector3D2.toString(numberFormat3);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException10 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable6, (java.lang.Number) 0, (java.lang.Number) Double.NaN, true);
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException14 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10L, (java.lang.Number) 0.7345682747147467d, (int) (byte) 1);
        numberIsTooSmallException10.addSuppressed((java.lang.Throwable) nonMonotonousSequenceException14);
        java.lang.Throwable[] throwableArray16 = numberIsTooSmallException10.getSuppressed();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D2, localizable5, (java.lang.Object[]) throwableArray16);
        double double18 = vector3D2.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = vector3D0.add(2.220446049250313E-16d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D2);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = vector3D2.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double34 = vector3D30.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        double double35 = vector3D33.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double42 = vector3D38.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        double double43 = vector3D41.getDelta();
        double double44 = vector3D33.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D47, vector3D53);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double65 = vector3D61.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        double double66 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D58, vector3D64);
        boolean boolean67 = vector3D58.isInfinite();
        double double68 = vector3D47.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D58);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D58.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double76 = vector3D72.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D75);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = vector3D69.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = vector3D33.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        double double79 = vector3D26.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double83 = vector3D82.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector84 = vector3D77.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = vector3D20.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation87 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D82, (double) 1072702979L);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{(NaN); (NaN); (NaN)}" + "'", str4, "{(NaN); (NaN); (NaN)}");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.7345682747147468d + "'", double35 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.7345682747147468d + "'", double43 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0000000000000002d + "'", double79 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.6702668260599606d + "'", double83 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector84);
        org.junit.Assert.assertNotNull(vector3D85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #313
28: astore_1
29: getstatic     #314
32: astore_2
33: aconst_null
34: astore_3
35: aload_2
36: aload_3
37: invokevirtual #166
40: astore        4
42: aconst_null
43: astore        5
45: aconst_null
46: astore        6
48: new           #315
51: dup
52: aload         6
54: iconst_0
55: invokestatic  #316
58: ldc2_w        #317
61: invokestatic  #319
64: iconst_1
65: invokespecial #320
68: astore        7
70: new           #321
73: dup
74: ldc2_w        #322
77: invokestatic  #324
80: ldc2_w        #44
83: invokestatic  #319
86: iconst_1
87: invokespecial #325
90: astore        8
92: aload         7
94: aload         8
96: invokevirtual #326
99: aload         7
101: invokevirtual #327
104: astore        9
106: aload_2
107: aload         5
109: aload         9
111: checkcast     #248
114: invokestatic  #328
117: aload_2
118: invokevirtual #111
121: dstore        10
123: aload_1
124: ldc2_w        #329
127: aload_2
128: invokevirtual #182
131: astore        12
133: aload_2
134: invokevirtual #198
137: astore        13
139: new           #43
142: dup
143: dconst_1
144: ldc2_w        #44
147: invokespecial #46
150: astore        14
152: new           #43
155: dup
156: dconst_1
157: ldc2_w        #44
160: invokespecial #46
163: astore        15
165: aload         14
167: aload         15
169: invokevirtual #47
172: dstore        16
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        18
187: new           #43
190: dup
191: dconst_1
192: ldc2_w        #44
195: invokespecial #46
198: astore        19
200: aload         18
202: aload         19
204: invokevirtual #47
207: dstore        20
209: aload         19
211: invokevirtual #52
214: dstore        22
216: new           #43
219: dup
220: dconst_1
221: ldc2_w        #44
224: invokespecial #46
227: astore        24
229: new           #43
232: dup
233: dconst_1
234: ldc2_w        #44
237: invokespecial #46
240: astore        25
242: aload         24
244: aload         25
246: invokevirtual #47
249: dstore        26
251: aload         25
253: invokevirtual #52
256: dstore        28
258: aload         19
260: aload         25
262: invokevirtual #53
265: dstore        30
267: new           #43
270: dup
271: dconst_1
272: ldc2_w        #44
275: invokespecial #46
278: astore        32
280: new           #43
283: dup
284: dconst_1
285: ldc2_w        #44
288: invokespecial #46
291: astore        33
293: new           #43
296: dup
297: dconst_1
298: ldc2_w        #44
301: invokespecial #46
304: astore        34
306: aload         33
308: aload         34
310: invokevirtual #47
313: dstore        35
315: aload         32
317: aload         34
319: invokestatic  #48
322: dstore        37
324: new           #43
327: dup
328: dconst_1
329: ldc2_w        #44
332: invokespecial #46
335: astore        39
337: new           #43
340: dup
341: dconst_1
342: ldc2_w        #44
345: invokespecial #46
348: astore        40
350: new           #43
353: dup
354: dconst_1
355: ldc2_w        #44
358: invokespecial #46
361: astore        41
363: aload         40
365: aload         41
367: invokevirtual #47
370: dstore        42
372: aload         39
374: aload         41
376: invokestatic  #48
379: dstore        44
381: aload         39
383: invokevirtual #49
386: istore        46
388: aload         32
390: aload         39
392: invokevirtual #50
395: dstore        47
397: aload         39
399: invokevirtual #54
402: astore        49
404: new           #43
407: dup
408: dconst_1
409: ldc2_w        #44
412: invokespecial #46
415: astore        50
417: new           #43
420: dup
421: dconst_1
422: ldc2_w        #44
425: invokespecial #46
428: astore        51
430: aload         50
432: aload         51
434: invokevirtual #47
437: dstore        52
439: aload         49
441: aload         50
443: invokevirtual #55
446: astore        54
448: aload         19
450: aload         54
452: invokevirtual #55
455: astore        55
457: aload         15
459: aload         54
461: invokevirtual #53
464: dstore        56
466: new           #43
469: dup
470: dconst_1
471: ldc2_w        #44
474: invokespecial #46
477: astore        58
479: aload         58
481: invokevirtual #136
484: dstore        59
486: aload         54
488: aload         58
490: invokevirtual #109
493: astore        61
495: aload         13
497: aload         58
499: invokevirtual #109
502: astore        62
504: new           #27
507: dup
508: aload         58
510: ldc2_w        #331
513: invokespecial #103
516: astore        63
518: aload_1
519: invokestatic  #33
522: aload_2
523: invokestatic  #33
526: new           #10
529: dup
530: invokespecial #11
533: ldc           #12
535: invokevirtual #13
538: aload         4
540: invokevirtual #13
543: ldc_w         #333
546: invokevirtual #13
549: invokevirtual #16
552: aload         4
554: ldc_w         #334
557: invokestatic  #335
560: aload         9
562: invokestatic  #33
565: dload         10
567: invokestatic  #242
570: invokestatic  #243
573: aload         12
575: invokestatic  #33
578: aload         13
580: invokestatic  #33
583: new           #10
586: dup
587: invokespecial #11
590: ldc           #12
592: invokevirtual #13
595: dload         16
597: invokevirtual #60
600: ldc           #15
602: invokevirtual #13
605: dconst_0
606: invokevirtual #60
609: ldc           #12
611: invokevirtual #13
614: invokevirtual #16
617: dload         16
619: dconst_0
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #17
632: new           #10
635: dup
636: invokespecial #11
639: ldc           #12
641: invokevirtual #13
644: dload         20
646: invokevirtual #60
649: ldc           #15
651: invokevirtual #13
654: dconst_0
655: invokevirtual #60
658: ldc           #12
660: invokevirtual #13
663: invokevirtual #16
666: dload         20
668: dconst_0
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #17
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: dload         22
695: invokevirtual #60
698: ldc           #15
700: invokevirtual #13
703: ldc2_w        #61
706: invokevirtual #60
709: ldc           #12
711: invokevirtual #13
714: invokevirtual #16
717: dload         22
719: ldc2_w        #61
722: dcmpl
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #17
734: new           #10
737: dup
738: invokespecial #11
741: ldc           #12
743: invokevirtual #13
746: dload         26
748: invokevirtual #60
751: ldc           #15
753: invokevirtual #13
756: dconst_0
757: invokevirtual #60
760: ldc           #12
762: invokevirtual #13
765: invokevirtual #16
768: dload         26
770: dconst_0
771: dcmpl
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #17
783: new           #10
786: dup
787: invokespecial #11
790: ldc           #12
792: invokevirtual #13
795: dload         28
797: invokevirtual #60
800: ldc           #15
802: invokevirtual #13
805: ldc2_w        #61
808: invokevirtual #60
811: ldc           #12
813: invokevirtual #13
816: invokevirtual #16
819: dload         28
821: ldc2_w        #61
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         30
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: dconst_0
859: invokevirtual #60
862: ldc           #12
864: invokevirtual #13
867: invokevirtual #16
870: dload         30
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #17
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: dload         35
899: invokevirtual #60
902: ldc           #15
904: invokevirtual #13
907: dconst_0
908: invokevirtual #60
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: dload         35
921: dconst_0
922: dcmpl
923: ifne          930
926: iconst_1
927: goto          931
930: iconst_0
931: invokestatic  #17
934: new           #10
937: dup
938: invokespecial #11
941: ldc           #12
943: invokevirtual #13
946: dload         37
948: invokevirtual #60
951: ldc           #15
953: invokevirtual #13
956: dconst_0
957: invokevirtual #60
960: ldc           #12
962: invokevirtual #13
965: invokevirtual #16
968: dload         37
970: dconst_0
971: dcmpl
972: ifne          979
975: iconst_1
976: goto          980
979: iconst_0
980: invokestatic  #17
983: new           #10
986: dup
987: invokespecial #11
990: ldc           #12
992: invokevirtual #13
995: dload         42
997: invokevirtual #60
1000: ldc           #15
1002: invokevirtual #13
1005: dconst_0
1006: invokevirtual #60
1009: ldc           #12
1011: invokevirtual #13
1014: invokevirtual #16
1017: dload         42
1019: dconst_0
1020: dcmpl
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #17
1032: new           #10
1035: dup
1036: invokespecial #11
1039: ldc           #12
1041: invokevirtual #13
1044: dload         44
1046: invokevirtual #60
1049: ldc           #15
1051: invokevirtual #13
1054: dconst_0
1055: invokevirtual #60
1058: ldc           #12
1060: invokevirtual #13
1063: invokevirtual #16
1066: dload         44
1068: dconst_0
1069: dcmpl
1070: ifne          1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #17
1081: new           #10
1084: dup
1085: invokespecial #11
1088: ldc           #12
1090: invokevirtual #13
1093: iload         46
1095: invokevirtual #14
1098: ldc           #15
1100: invokevirtual #13
1103: iconst_0
1104: invokevirtual #14
1107: ldc           #12
1109: invokevirtual #13
1112: invokevirtual #16
1115: iload         46
1117: ifne          1124
1120: iconst_1
1121: goto          1125
1124: iconst_0
1125: invokestatic  #17
1128: new           #10
1131: dup
1132: invokespecial #11
1135: ldc           #12
1137: invokevirtual #13
1140: dload         47
1142: invokevirtual #60
1145: ldc           #15
1147: invokevirtual #13
1150: dconst_0
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         47
1164: dconst_0
1165: dcmpl
1166: ifne          1173
1169: iconst_1
1170: goto          1174
1173: iconst_0
1174: invokestatic  #17
1177: aload         49
1179: invokestatic  #33
1182: new           #10
1185: dup
1186: invokespecial #11
1189: ldc           #12
1191: invokevirtual #13
1194: dload         52
1196: invokevirtual #60
1199: ldc           #15
1201: invokevirtual #13
1204: dconst_0
1205: invokevirtual #60
1208: ldc           #12
1210: invokevirtual #13
1213: invokevirtual #16
1216: dload         52
1218: dconst_0
1219: dcmpl
1220: ifne          1227
1223: iconst_1
1224: goto          1228
1227: iconst_0
1228: invokestatic  #17
1231: aload         54
1233: invokestatic  #33
1236: aload         55
1238: invokestatic  #33
1241: new           #10
1244: dup
1245: invokespecial #11
1248: ldc           #12
1250: invokevirtual #13
1253: dload         56
1255: invokevirtual #60
1258: ldc           #15
1260: invokevirtual #13
1263: ldc2_w        #63
1266: invokevirtual #60
1269: ldc           #12
1271: invokevirtual #13
1274: invokevirtual #16
1277: dload         56
1279: ldc2_w        #63
1282: dcmpl
1283: ifne          1290
1286: iconst_1
1287: goto          1291
1290: iconst_0
1291: invokestatic  #17
1294: new           #10
1297: dup
1298: invokespecial #11
1301: ldc           #12
1303: invokevirtual #13
1306: dload         59
1308: invokevirtual #60
1311: ldc           #15
1313: invokevirtual #13
1316: ldc2_w        #79
1319: invokevirtual #60
1322: ldc           #12
1324: invokevirtual #13
1327: invokevirtual #16
1330: dload         59
1332: ldc2_w        #79
1335: dcmpl
1336: ifne          1343
1339: iconst_1
1340: goto          1344
1343: iconst_0
1344: invokestatic  #17
1347: aload         61
1349: invokestatic  #33
1352: aload         62
1354: invokestatic  #33
1357: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 3373
End line: 3491
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        double[] doubleArray1 = new double[] { (byte) 1 };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray1, doubleArray2);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray1);
        double[] doubleArray6 = new double[] { (byte) 1 };
        double[] doubleArray7 = new double[] {};
        boolean boolean8 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray6, doubleArray7);
        double[] doubleArray10 = new double[] { (byte) 1 };
        double[] doubleArray11 = new double[] {};
        boolean boolean12 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray10, doubleArray11);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray10);
        boolean boolean14 = org.apache.commons.math.util.MathUtils.equals(doubleArray7, doubleArray10);
        double double15 = org.apache.commons.math.util.MathUtils.distance(doubleArray1, doubleArray10);
        double double16 = org.apache.commons.math.util.MathUtils.safeNorm(doubleArray1);
        double[] doubleArray18 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray1, (int) (short) 1);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection22 = org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING;
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException24 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 0.9873536182198484d, (java.lang.Number) 4.9E-324d, 1072693249, orderDirection22, false);
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        double[] doubleArray28 = new double[] { (byte) 1 };
        double[] doubleArray29 = new double[] {};
        boolean boolean30 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray28, doubleArray29);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection31 = null;
        double[] doubleArray33 = new double[] { 0 };
        double[] doubleArray35 = new double[] { 0 };
        double[] doubleArray37 = new double[] { 0 };
        double[] doubleArray39 = new double[] { 0 };
        double[] doubleArray41 = new double[] { 0 };
        double[][] doubleArray42 = new double[][] { doubleArray33, doubleArray35, doubleArray37, doubleArray39, doubleArray41 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray28, orderDirection31, doubleArray42);
        double[] doubleArray45 = new double[] { (byte) 1 };
        double[] doubleArray46 = new double[] {};
        boolean boolean47 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray45, doubleArray46);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection48 = null;
        double[] doubleArray50 = new double[] { 0 };
        double[] doubleArray52 = new double[] { 0 };
        double[] doubleArray54 = new double[] { 0 };
        double[] doubleArray56 = new double[] { 0 };
        double[] doubleArray58 = new double[] { 0 };
        double[][] doubleArray59 = new double[][] { doubleArray50, doubleArray52, doubleArray54, doubleArray56, doubleArray58 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray45, orderDirection48, doubleArray59);
        double double61 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray28, doubleArray45);
        double[] doubleArray63 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray28, 10);
        double[] doubleArray65 = new double[] { 0.0d };
        double[][] doubleArray66 = new double[][] { doubleArray65 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray28, doubleArray66);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException68 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable26, (java.lang.Object[]) doubleArray66);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException69 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable25, (java.lang.Object[]) doubleArray66);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray18, orderDirection22, doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation72 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray66, (double) 1079574538L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertTrue("'" + orderDirection22 + "' != '" + org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING + "'", orderDirection22.equals(org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: dconst_1
31: dastore
32: astore_1
33: iconst_0
34: newarray       double
36: astore_2
37: aload_1
38: aload_2
39: invokestatic  #24
42: istore_3
43: aload_1
44: invokestatic  #337
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: dconst_1
53: dastore
54: astore        4
56: iconst_0
57: newarray       double
59: astore        5
61: aload         4
63: aload         5
65: invokestatic  #24
68: istore        6
70: iconst_1
71: newarray       double
73: dup
74: iconst_0
75: dconst_1
76: dastore
77: astore        7
79: iconst_0
80: newarray       double
82: astore        8
84: aload         7
86: aload         8
88: invokestatic  #24
91: istore        9
93: aload         7
95: invokestatic  #337
98: aload         5
100: aload         7
102: invokestatic  #338
105: istore        10
107: aload_1
108: aload         7
110: invokestatic  #339
113: dstore        11
115: aload_1
116: invokestatic  #340
119: dstore        13
121: aload_1
122: iconst_1
123: invokestatic  #153
126: astore        15
128: getstatic     #341
131: astore        16
133: new           #321
136: dup
137: ldc2_w        #342
140: invokestatic  #319
143: ldc2_w        #344
146: invokestatic  #319
149: ldc_w         #346
152: aload         16
154: iconst_0
155: invokespecial #347
158: astore        17
160: aconst_null
161: astore        18
163: aconst_null
164: astore        19
166: iconst_1
167: newarray       double
169: dup
170: iconst_0
171: dconst_1
172: dastore
173: astore        20
175: iconst_0
176: newarray       double
178: astore        21
180: aload         20
182: aload         21
184: invokestatic  #24
187: istore        22
189: aconst_null
190: astore        23
192: iconst_1
193: newarray       double
195: dup
196: iconst_0
197: dconst_0
198: dastore
199: astore        24
201: iconst_1
202: newarray       double
204: dup
205: iconst_0
206: dconst_0
207: dastore
208: astore        25
210: iconst_1
211: newarray       double
213: dup
214: iconst_0
215: dconst_0
216: dastore
217: astore        26
219: iconst_1
220: newarray       double
222: dup
223: iconst_0
224: dconst_0
225: dastore
226: astore        27
228: iconst_1
229: newarray       double
231: dup
232: iconst_0
233: dconst_0
234: dastore
235: astore        28
237: iconst_5
238: anewarray     #25
241: dup
242: iconst_0
243: aload         24
245: aastore
246: dup
247: iconst_1
248: aload         25
250: aastore
251: dup
252: iconst_2
253: aload         26
255: aastore
256: dup
257: iconst_3
258: aload         27
260: aastore
261: dup
262: iconst_4
263: aload         28
265: aastore
266: astore        29
268: aload         20
270: aload         23
272: aload         29
274: invokestatic  #26
277: iconst_1
278: newarray       double
280: dup
281: iconst_0
282: dconst_1
283: dastore
284: astore        30
286: iconst_0
287: newarray       double
289: astore        31
291: aload         30
293: aload         31
295: invokestatic  #24
298: istore        32
300: aconst_null
301: astore        33
303: iconst_1
304: newarray       double
306: dup
307: iconst_0
308: dconst_0
309: dastore
310: astore        34
312: iconst_1
313: newarray       double
315: dup
316: iconst_0
317: dconst_0
318: dastore
319: astore        35
321: iconst_1
322: newarray       double
324: dup
325: iconst_0
326: dconst_0
327: dastore
328: astore        36
330: iconst_1
331: newarray       double
333: dup
334: iconst_0
335: dconst_0
336: dastore
337: astore        37
339: iconst_1
340: newarray       double
342: dup
343: iconst_0
344: dconst_0
345: dastore
346: astore        38
348: iconst_5
349: anewarray     #25
352: dup
353: iconst_0
354: aload         34
356: aastore
357: dup
358: iconst_1
359: aload         35
361: aastore
362: dup
363: iconst_2
364: aload         36
366: aastore
367: dup
368: iconst_3
369: aload         37
371: aastore
372: dup
373: iconst_4
374: aload         38
376: aastore
377: astore        39
379: aload         30
381: aload         33
383: aload         39
385: invokestatic  #26
388: aload         20
390: aload         30
392: invokestatic  #152
395: dstore        40
397: aload         20
399: bipush        10
401: invokestatic  #153
404: astore        42
406: iconst_1
407: newarray       double
409: dup
410: iconst_0
411: dconst_0
412: dastore
413: astore        43
415: iconst_1
416: anewarray     #25
419: dup
420: iconst_0
421: aload         43
423: aastore
424: astore        44
426: aload         20
428: aload         44
430: invokestatic  #154
433: new           #247
436: dup
437: aload         19
439: aload         44
441: checkcast     #248
444: invokespecial #249
447: astore        45
449: new           #247
452: dup
453: aload         18
455: aload         44
457: checkcast     #248
460: invokespecial #249
463: astore        46
465: aload         15
467: aload         16
469: aload         44
471: invokestatic  #26
474: new           #27
477: dup
478: aload         44
480: ldc2_w        #72
483: invokespecial #30
486: astore        47
488: ldc           #157
490: invokestatic  #21
493: goto          498
496: astore        47
498: aload_1
499: invokestatic  #33
502: aload_1
503: invokestatic  #34
506: ldc           #35
508: invokestatic  #36
511: aload_2
512: invokestatic  #33
515: aload_2
516: invokestatic  #34
519: ldc           #37
521: invokestatic  #36
524: new           #10
527: dup
528: invokespecial #11
531: ldc           #12
533: invokevirtual #13
536: iload_3
537: invokevirtual #14
540: ldc           #15
542: invokevirtual #13
545: iconst_0
546: invokevirtual #14
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: iload_3
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #17
569: aload         4
571: invokestatic  #33
574: aload         4
576: invokestatic  #34
579: ldc           #35
581: invokestatic  #36
584: aload         5
586: invokestatic  #33
589: aload         5
591: invokestatic  #34
594: ldc           #37
596: invokestatic  #36
599: new           #10
602: dup
603: invokespecial #11
606: ldc           #12
608: invokevirtual #13
611: iload         6
613: invokevirtual #14
616: ldc           #15
618: invokevirtual #13
621: iconst_0
622: invokevirtual #14
625: ldc           #12
627: invokevirtual #13
630: invokevirtual #16
633: iload         6
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #17
646: aload         7
648: invokestatic  #33
651: aload         7
653: invokestatic  #34
656: ldc           #35
658: invokestatic  #36
661: aload         8
663: invokestatic  #33
666: aload         8
668: invokestatic  #34
671: ldc           #37
673: invokestatic  #36
676: new           #10
679: dup
680: invokespecial #11
683: ldc           #12
685: invokevirtual #13
688: iload         9
690: invokevirtual #14
693: ldc           #15
695: invokevirtual #13
698: iconst_0
699: invokevirtual #14
702: ldc           #12
704: invokevirtual #13
707: invokevirtual #16
710: iload         9
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #17
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: iload         10
737: invokevirtual #14
740: ldc           #15
742: invokevirtual #13
745: iconst_0
746: invokevirtual #14
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: iload         10
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #17
770: new           #10
773: dup
774: invokespecial #11
777: ldc           #12
779: invokevirtual #13
782: dload         11
784: invokevirtual #60
787: ldc           #15
789: invokevirtual #13
792: dconst_0
793: invokevirtual #60
796: ldc           #12
798: invokevirtual #13
801: invokevirtual #16
804: dload         11
806: dconst_0
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #17
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         13
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: dconst_1
842: invokevirtual #60
845: ldc           #12
847: invokevirtual #13
850: invokevirtual #16
853: dload         13
855: dconst_1
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: aload         15
870: invokestatic  #33
873: aload         15
875: invokestatic  #34
878: ldc           #35
880: invokestatic  #36
883: new           #10
886: dup
887: invokespecial #11
890: ldc           #12
892: invokevirtual #13
895: aload         16
897: invokevirtual #348
900: ldc           #15
902: invokevirtual #13
905: getstatic     #341
908: invokevirtual #348
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: aload         16
921: getstatic     #341
924: invokevirtual #349
927: invokestatic  #17
930: aload         20
932: invokestatic  #33
935: aload         20
937: invokestatic  #34
940: ldc           #35
942: invokestatic  #36
945: aload         21
947: invokestatic  #33
950: aload         21
952: invokestatic  #34
955: ldc           #37
957: invokestatic  #36
960: new           #10
963: dup
964: invokespecial #11
967: ldc           #12
969: invokevirtual #13
972: iload         22
974: invokevirtual #14
977: ldc           #15
979: invokevirtual #13
982: iconst_0
983: invokevirtual #14
986: ldc           #12
988: invokevirtual #13
991: invokevirtual #16
994: iload         22
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #17
1007: aload         24
1009: invokestatic  #33
1012: aload         24
1014: invokestatic  #34
1017: ldc           #38
1019: invokestatic  #36
1022: aload         25
1024: invokestatic  #33
1027: aload         25
1029: invokestatic  #34
1032: ldc           #38
1034: invokestatic  #36
1037: aload         26
1039: invokestatic  #33
1042: aload         26
1044: invokestatic  #34
1047: ldc           #38
1049: invokestatic  #36
1052: aload         27
1054: invokestatic  #33
1057: aload         27
1059: invokestatic  #34
1062: ldc           #38
1064: invokestatic  #36
1067: aload         28
1069: invokestatic  #33
1072: aload         28
1074: invokestatic  #34
1077: ldc           #38
1079: invokestatic  #36
1082: aload         29
1084: invokestatic  #33
1087: aload         30
1089: invokestatic  #33
1092: aload         30
1094: invokestatic  #34
1097: ldc           #35
1099: invokestatic  #36
1102: aload         31
1104: invokestatic  #33
1107: aload         31
1109: invokestatic  #34
1112: ldc           #37
1114: invokestatic  #36
1117: new           #10
1120: dup
1121: invokespecial #11
1124: ldc           #12
1126: invokevirtual #13
1129: iload         32
1131: invokevirtual #14
1134: ldc           #15
1136: invokevirtual #13
1139: iconst_0
1140: invokevirtual #14
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: iload         32
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #17
1164: aload         34
1166: invokestatic  #33
1169: aload         34
1171: invokestatic  #34
1174: ldc           #38
1176: invokestatic  #36
1179: aload         35
1181: invokestatic  #33
1184: aload         35
1186: invokestatic  #34
1189: ldc           #38
1191: invokestatic  #36
1194: aload         36
1196: invokestatic  #33
1199: aload         36
1201: invokestatic  #34
1204: ldc           #38
1206: invokestatic  #36
1209: aload         37
1211: invokestatic  #33
1214: aload         37
1216: invokestatic  #34
1219: ldc           #38
1221: invokestatic  #36
1224: aload         38
1226: invokestatic  #33
1229: aload         38
1231: invokestatic  #34
1234: ldc           #38
1236: invokestatic  #36
1239: aload         39
1241: invokestatic  #33
1244: new           #10
1247: dup
1248: invokespecial #11
1251: ldc           #12
1253: invokevirtual #13
1256: dload         40
1258: invokevirtual #60
1261: ldc           #15
1263: invokevirtual #13
1266: dconst_0
1267: invokevirtual #60
1270: ldc           #12
1272: invokevirtual #13
1275: invokevirtual #16
1278: dload         40
1280: dconst_0
1281: dcmpl
1282: ifne          1289
1285: iconst_1
1286: goto          1290
1289: iconst_0
1290: invokestatic  #17
1293: aload         42
1295: invokestatic  #33
1298: aload         42
1300: invokestatic  #34
1303: ldc           #158
1305: invokestatic  #36
1308: aload         43
1310: invokestatic  #33
1313: aload         43
1315: invokestatic  #34
1318: ldc           #38
1320: invokestatic  #36
1323: aload         44
1325: invokestatic  #33
1328: return
Exception table:
from    to  target type
474   493   496   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 3494
End line: 3506
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = rotation6.getAxis();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.exception.NullArgumentException nullArgumentException10 = new org.apache.commons.math.exception.NullArgumentException(localizable0, (java.lang.Object[]) doubleArray9);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: ldc2_w        #146
34: ldc2_w        #72
37: ldc2_w        #148
40: dconst_1
41: iconst_0
42: invokespecial #150
45: astore_2
46: aload_2
47: invokevirtual #96
50: astore_3
51: aload_2
52: invokevirtual #96
55: astore        4
57: aload_2
58: invokevirtual #222
61: astore        5
63: new           #263
66: dup
67: aload_1
68: aload         5
70: checkcast     #248
73: invokespecial #264
76: astore        6
78: aload_3
79: invokestatic  #33
82: aload         4
84: invokestatic  #33
87: aload         5
89: invokestatic  #33
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 3509
End line: 3596
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.Space space32 = vector3D21.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        double double56 = vector3D45.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double66 = vector3D62.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        double double67 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D59, vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double77 = vector3D73.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        double double78 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D70, vector3D76);
        boolean boolean79 = vector3D70.isInfinite();
        double double80 = vector3D59.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D70.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double88 = vector3D84.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D81.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D45.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        double double91 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D21, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation7.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector94 = vector3D0.subtract((-1024.0d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = vector3D95.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D97 = vector3D96.getZero();
        double double98 = vector3D0.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D97);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(space32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0000000000000002d + "'", double91 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(euclidean3DVector94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #314
28: astore_1
29: new           #27
32: dup
33: ldc2_w        #146
36: ldc2_w        #72
39: ldc2_w        #148
42: dconst_1
43: iconst_0
44: invokespecial #150
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: new           #43
63: dup
64: dconst_1
65: ldc2_w        #44
68: invokespecial #46
71: astore        4
73: new           #43
76: dup
77: dconst_1
78: ldc2_w        #44
81: invokespecial #46
84: astore        5
86: aload         4
88: aload         5
90: invokevirtual #47
93: dstore        6
95: aload_3
96: aload         5
98: invokestatic  #48
101: dstore        8
103: new           #43
106: dup
107: dconst_1
108: ldc2_w        #44
111: invokespecial #46
114: astore        10
116: new           #43
119: dup
120: dconst_1
121: ldc2_w        #44
124: invokespecial #46
127: astore        11
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        12
142: aload         11
144: aload         12
146: invokevirtual #47
149: dstore        13
151: aload         10
153: aload         12
155: invokestatic  #48
158: dstore        15
160: aload         10
162: invokevirtual #49
165: istore        17
167: aload_3
168: aload         10
170: invokevirtual #50
173: dstore        18
175: aload         10
177: invokevirtual #51
180: astore        20
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        21
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        22
208: aload         21
210: aload         22
212: invokevirtual #47
215: dstore        23
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        25
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        26
243: aload         25
245: aload         26
247: invokevirtual #47
250: dstore        27
252: aload         26
254: invokevirtual #52
257: dstore        29
259: new           #43
262: dup
263: dconst_1
264: ldc2_w        #44
267: invokespecial #46
270: astore        31
272: new           #43
275: dup
276: dconst_1
277: ldc2_w        #44
280: invokespecial #46
283: astore        32
285: aload         31
287: aload         32
289: invokevirtual #47
292: dstore        33
294: aload         32
296: invokevirtual #52
299: dstore        35
301: aload         26
303: aload         32
305: invokevirtual #53
308: dstore        37
310: new           #43
313: dup
314: dconst_1
315: ldc2_w        #44
318: invokespecial #46
321: astore        39
323: new           #43
326: dup
327: dconst_1
328: ldc2_w        #44
331: invokespecial #46
334: astore        40
336: new           #43
339: dup
340: dconst_1
341: ldc2_w        #44
344: invokespecial #46
347: astore        41
349: aload         40
351: aload         41
353: invokevirtual #47
356: dstore        42
358: aload         39
360: aload         41
362: invokestatic  #48
365: dstore        44
367: new           #43
370: dup
371: dconst_1
372: ldc2_w        #44
375: invokespecial #46
378: astore        46
380: new           #43
383: dup
384: dconst_1
385: ldc2_w        #44
388: invokespecial #46
391: astore        47
393: new           #43
396: dup
397: dconst_1
398: ldc2_w        #44
401: invokespecial #46
404: astore        48
406: aload         47
408: aload         48
410: invokevirtual #47
413: dstore        49
415: aload         46
417: aload         48
419: invokestatic  #48
422: dstore        51
424: aload         46
426: invokevirtual #49
429: istore        53
431: aload         39
433: aload         46
435: invokevirtual #50
438: dstore        54
440: aload         46
442: invokevirtual #54
445: astore        56
447: new           #43
450: dup
451: dconst_1
452: ldc2_w        #44
455: invokespecial #46
458: astore        57
460: new           #43
463: dup
464: dconst_1
465: ldc2_w        #44
468: invokespecial #46
471: astore        58
473: aload         57
475: aload         58
477: invokevirtual #47
480: dstore        59
482: aload         56
484: aload         57
486: invokevirtual #55
489: astore        61
491: aload         26
493: aload         61
495: invokevirtual #55
498: astore        62
500: aload         22
502: aload         61
504: invokevirtual #53
507: dstore        63
509: new           #27
512: dup
513: aload         10
515: aload         22
517: invokespecial #56
520: astore        65
522: aload_2
523: aload         22
525: invokevirtual #98
528: astore        66
530: aload_1
531: ldc2_w        #352
534: aload         22
536: invokevirtual #354
539: astore        67
541: getstatic     #355
544: astore        68
546: aload         68
548: invokevirtual #54
551: astore        69
553: aload         69
555: invokevirtual #198
558: astore        70
560: aload_1
561: aload         70
563: invokevirtual #53
566: dstore        71
568: aload_1
569: invokestatic  #33
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         6
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         6
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         8
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         8
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         13
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         13
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: dload         15
733: invokevirtual #60
736: ldc           #15
738: invokevirtual #13
741: dconst_0
742: invokevirtual #60
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: dload         15
755: dconst_0
756: dcmpl
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: iload         17
782: invokevirtual #14
785: ldc           #15
787: invokevirtual #13
790: iconst_0
791: invokevirtual #14
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: iload         17
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         18
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: dconst_0
838: invokevirtual #60
841: ldc           #12
843: invokevirtual #13
846: invokevirtual #16
849: dload         18
851: dconst_0
852: dcmpl
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #17
864: aload         20
866: invokestatic  #33
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         23
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         23
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         27
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: dconst_0
941: invokevirtual #60
944: ldc           #12
946: invokevirtual #13
949: invokevirtual #16
952: dload         27
954: dconst_0
955: dcmpl
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #17
967: new           #10
970: dup
971: invokespecial #11
974: ldc           #12
976: invokevirtual #13
979: dload         29
981: invokevirtual #60
984: ldc           #15
986: invokevirtual #13
989: ldc2_w        #61
992: invokevirtual #60
995: ldc           #12
997: invokevirtual #13
1000: invokevirtual #16
1003: dload         29
1005: ldc2_w        #61
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         33
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: dconst_0
1043: invokevirtual #60
1046: ldc           #12
1048: invokevirtual #13
1051: invokevirtual #16
1054: dload         33
1056: dconst_0
1057: dcmpl
1058: ifne          1065
1061: iconst_1
1062: goto          1066
1065: iconst_0
1066: invokestatic  #17
1069: new           #10
1072: dup
1073: invokespecial #11
1076: ldc           #12
1078: invokevirtual #13
1081: dload         35
1083: invokevirtual #60
1086: ldc           #15
1088: invokevirtual #13
1091: ldc2_w        #61
1094: invokevirtual #60
1097: ldc           #12
1099: invokevirtual #13
1102: invokevirtual #16
1105: dload         35
1107: ldc2_w        #61
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         37
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         37
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         42
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         42
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         44
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         44
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         49
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         49
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: dload         51
1332: invokevirtual #60
1335: ldc           #15
1337: invokevirtual #13
1340: dconst_0
1341: invokevirtual #60
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: dload         51
1354: dconst_0
1355: dcmpl
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: iload         53
1381: invokevirtual #14
1384: ldc           #15
1386: invokevirtual #13
1389: iconst_0
1390: invokevirtual #14
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: iload         53
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: new           #10
1417: dup
1418: invokespecial #11
1421: ldc           #12
1423: invokevirtual #13
1426: dload         54
1428: invokevirtual #60
1431: ldc           #15
1433: invokevirtual #13
1436: dconst_0
1437: invokevirtual #60
1440: ldc           #12
1442: invokevirtual #13
1445: invokevirtual #16
1448: dload         54
1450: dconst_0
1451: dcmpl
1452: ifne          1459
1455: iconst_1
1456: goto          1460
1459: iconst_0
1460: invokestatic  #17
1463: aload         56
1465: invokestatic  #33
1468: new           #10
1471: dup
1472: invokespecial #11
1475: ldc           #12
1477: invokevirtual #13
1480: dload         59
1482: invokevirtual #60
1485: ldc           #15
1487: invokevirtual #13
1490: dconst_0
1491: invokevirtual #60
1494: ldc           #12
1496: invokevirtual #13
1499: invokevirtual #16
1502: dload         59
1504: dconst_0
1505: dcmpl
1506: ifne          1513
1509: iconst_1
1510: goto          1514
1513: iconst_0
1514: invokestatic  #17
1517: aload         61
1519: invokestatic  #33
1522: aload         62
1524: invokestatic  #33
1527: new           #10
1530: dup
1531: invokespecial #11
1534: ldc           #12
1536: invokevirtual #13
1539: dload         63
1541: invokevirtual #60
1544: ldc           #15
1546: invokevirtual #13
1549: ldc2_w        #63
1552: invokevirtual #60
1555: ldc           #12
1557: invokevirtual #13
1560: invokevirtual #16
1563: dload         63
1565: ldc2_w        #63
1568: dcmpl
1569: ifne          1576
1572: iconst_1
1573: goto          1577
1576: iconst_0
1577: invokestatic  #17
1580: aload         66
1582: invokestatic  #33
1585: aload         67
1587: invokestatic  #33
1590: aload         68
1592: invokestatic  #33
1595: aload         69
1597: invokestatic  #33
1600: aload         70
1602: invokestatic  #33
1605: dload         71
1607: invokestatic  #242
1610: invokestatic  #243
1613: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 3599
End line: 3662
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double67 = vector3D27.getNormSq();
        boolean boolean68 = vector3D27.isInfinite();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0000000000000002d + "'", double67 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         19
396: invokevirtual #111
399: dstore        51
401: aload         19
403: invokevirtual #49
406: istore        53
408: new           #10
411: dup
412: invokespecial #11
415: ldc           #12
417: invokevirtual #13
420: dload         4
422: invokevirtual #60
425: ldc           #15
427: invokevirtual #13
430: dconst_0
431: invokevirtual #60
434: ldc           #12
436: invokevirtual #13
439: invokevirtual #16
442: dload         4
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #17
457: new           #10
460: dup
461: invokespecial #11
464: ldc           #12
466: invokevirtual #13
469: dload         6
471: invokevirtual #60
474: ldc           #15
476: invokevirtual #13
479: dconst_0
480: invokevirtual #60
483: ldc           #12
485: invokevirtual #13
488: invokevirtual #16
491: dload         6
493: dconst_0
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #17
506: new           #10
509: dup
510: invokespecial #11
513: ldc           #12
515: invokevirtual #13
518: dload         11
520: invokevirtual #60
523: ldc           #15
525: invokevirtual #13
528: dconst_0
529: invokevirtual #60
532: ldc           #12
534: invokevirtual #13
537: invokevirtual #16
540: dload         11
542: dconst_0
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #17
555: new           #10
558: dup
559: invokespecial #11
562: ldc           #12
564: invokevirtual #13
567: dload         13
569: invokevirtual #60
572: ldc           #15
574: invokevirtual #13
577: dconst_0
578: invokevirtual #60
581: ldc           #12
583: invokevirtual #13
586: invokevirtual #16
589: dload         13
591: dconst_0
592: dcmpl
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #17
604: new           #10
607: dup
608: invokespecial #11
611: ldc           #12
613: invokevirtual #13
616: iload         15
618: invokevirtual #14
621: ldc           #15
623: invokevirtual #13
626: iconst_0
627: invokevirtual #14
630: ldc           #12
632: invokevirtual #13
635: invokevirtual #16
638: iload         15
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #17
651: new           #10
654: dup
655: invokespecial #11
658: ldc           #12
660: invokevirtual #13
663: dload         16
665: invokevirtual #60
668: ldc           #15
670: invokevirtual #13
673: dconst_0
674: invokevirtual #60
677: ldc           #12
679: invokevirtual #13
682: invokevirtual #16
685: dload         16
687: dconst_0
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #17
700: aload         18
702: invokestatic  #33
705: new           #10
708: dup
709: invokespecial #11
712: ldc           #12
714: invokevirtual #13
717: dload         21
719: invokevirtual #60
722: ldc           #15
724: invokevirtual #13
727: dconst_0
728: invokevirtual #60
731: ldc           #12
733: invokevirtual #13
736: invokevirtual #16
739: dload         21
741: dconst_0
742: dcmpl
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #17
754: aload         23
756: invokestatic  #33
759: aload         24
761: invokestatic  #33
764: new           #10
767: dup
768: invokespecial #11
771: ldc           #12
773: invokevirtual #13
776: dload         29
778: invokevirtual #60
781: ldc           #15
783: invokevirtual #13
786: dconst_0
787: invokevirtual #60
790: ldc           #12
792: invokevirtual #13
795: invokevirtual #16
798: dload         29
800: dconst_0
801: dcmpl
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #17
813: new           #10
816: dup
817: invokespecial #11
820: ldc           #12
822: invokevirtual #13
825: dload         31
827: invokevirtual #60
830: ldc           #15
832: invokevirtual #13
835: dconst_0
836: invokevirtual #60
839: ldc           #12
841: invokevirtual #13
844: invokevirtual #16
847: dload         31
849: dconst_0
850: dcmpl
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #17
862: new           #10
865: dup
866: invokespecial #11
869: ldc           #12
871: invokevirtual #13
874: dload         35
876: invokevirtual #60
879: ldc           #15
881: invokevirtual #13
884: dconst_0
885: invokevirtual #60
888: ldc           #12
890: invokevirtual #13
893: invokevirtual #16
896: dload         35
898: dconst_0
899: dcmpl
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #17
911: new           #10
914: dup
915: invokespecial #11
918: ldc           #12
920: invokevirtual #13
923: dload         37
925: invokevirtual #60
928: ldc           #15
930: invokevirtual #13
933: ldc2_w        #61
936: invokevirtual #60
939: ldc           #12
941: invokevirtual #13
944: invokevirtual #16
947: dload         37
949: ldc2_w        #61
952: dcmpl
953: ifne          960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #17
964: new           #10
967: dup
968: invokespecial #11
971: ldc           #12
973: invokevirtual #13
976: dload         41
978: invokevirtual #60
981: ldc           #15
983: invokevirtual #13
986: dconst_0
987: invokevirtual #60
990: ldc           #12
992: invokevirtual #13
995: invokevirtual #16
998: dload         41
1000: dconst_0
1001: dcmpl
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #17
1013: new           #10
1016: dup
1017: invokespecial #11
1020: ldc           #12
1022: invokevirtual #13
1025: dload         43
1027: invokevirtual #60
1030: ldc           #15
1032: invokevirtual #13
1035: ldc2_w        #61
1038: invokevirtual #60
1041: ldc           #12
1043: invokevirtual #13
1046: invokevirtual #16
1049: dload         43
1051: ldc2_w        #61
1054: dcmpl
1055: ifne          1062
1058: iconst_1
1059: goto          1063
1062: iconst_0
1063: invokestatic  #17
1066: new           #10
1069: dup
1070: invokespecial #11
1073: ldc           #12
1075: invokevirtual #13
1078: dload         45
1080: invokevirtual #60
1083: ldc           #15
1085: invokevirtual #13
1088: dconst_0
1089: invokevirtual #60
1092: ldc           #12
1094: invokevirtual #13
1097: invokevirtual #16
1100: dload         45
1102: dconst_0
1103: dcmpl
1104: ifne          1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #17
1115: new           #10
1118: dup
1119: invokespecial #11
1122: ldc           #12
1124: invokevirtual #13
1127: dload         47
1129: invokevirtual #60
1132: ldc           #15
1134: invokevirtual #13
1137: dconst_0
1138: invokevirtual #60
1141: ldc           #12
1143: invokevirtual #13
1146: invokevirtual #16
1149: dload         47
1151: dconst_0
1152: dcmpl
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #17
1164: aload         49
1166: invokestatic  #33
1169: aload         50
1171: invokestatic  #33
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         51
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: ldc2_w        #63
1199: invokevirtual #60
1202: ldc           #12
1204: invokevirtual #13
1207: invokevirtual #16
1210: dload         51
1212: ldc2_w        #63
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: iload         53
1241: invokevirtual #14
1244: ldc           #15
1246: invokevirtual #13
1249: iconst_0
1250: invokevirtual #14
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: iload         53
1263: ifne          1270
1266: iconst_1
1267: goto          1271
1270: iconst_0
1271: invokestatic  #17
1274: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 3665
End line: 3756
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation94.getQ3();
        double double99 = rotation94.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.0d + "'", double99 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         70
567: invokevirtual #95
570: dstore        75
572: aload         70
574: invokevirtual #95
577: dstore        77
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         4
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         4
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         6
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         6
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         11
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         11
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         13
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         13
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         15
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         15
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         16
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         16
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         18
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         21
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         21
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         25
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         25
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         27
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         27
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         31
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         31
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         33
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         33
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         35
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         35
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         40
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         40
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         42
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         42
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         47
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         47
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         49
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         49
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         51
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         51
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         52
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         52
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         54
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         57
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         57
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         59
1526: invokestatic  #33
1529: aload         60
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         61
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         61
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: aload         64
1589: invokestatic  #33
1592: new           #10
1595: dup
1596: invokespecial #11
1599: ldc           #12
1601: invokevirtual #13
1604: dload         65
1606: invokevirtual #60
1609: ldc           #15
1611: invokevirtual #13
1614: dconst_0
1615: invokevirtual #60
1618: ldc           #12
1620: invokevirtual #13
1623: invokevirtual #16
1626: dload         65
1628: dconst_0
1629: dcmpl
1630: ifne          1637
1633: iconst_1
1634: goto          1638
1637: iconst_0
1638: invokestatic  #17
1641: new           #10
1644: dup
1645: invokespecial #11
1648: ldc           #12
1650: invokevirtual #13
1653: dload         67
1655: invokevirtual #60
1658: ldc           #15
1660: invokevirtual #13
1663: dconst_0
1664: invokevirtual #60
1667: ldc           #12
1669: invokevirtual #13
1672: invokevirtual #16
1675: dload         67
1677: dconst_0
1678: dcmpl
1679: ifne          1686
1682: iconst_1
1683: goto          1687
1686: iconst_0
1687: invokestatic  #17
1690: aload         69
1692: invokestatic  #33
1695: aload         71
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         72
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #148
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         72
1738: ldc2_w        #148
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: aload         74
1755: invokestatic  #33
1758: new           #10
1761: dup
1762: invokespecial #11
1765: ldc           #12
1767: invokevirtual #13
1770: dload         75
1772: invokevirtual #60
1775: ldc           #15
1777: invokevirtual #13
1780: dconst_1
1781: invokevirtual #60
1784: ldc           #12
1786: invokevirtual #13
1789: invokevirtual #16
1792: dload         75
1794: dconst_1
1795: dcmpl
1796: ifne          1803
1799: iconst_1
1800: goto          1804
1803: iconst_0
1804: invokestatic  #17
1807: new           #10
1810: dup
1811: invokespecial #11
1814: ldc           #12
1816: invokevirtual #13
1819: dload         77
1821: invokevirtual #60
1824: ldc           #15
1826: invokevirtual #13
1829: dconst_1
1830: invokevirtual #60
1833: ldc           #12
1835: invokevirtual #13
1838: invokevirtual #16
1841: dload         77
1843: dconst_1
1844: dcmpl
1845: ifne          1852
1848: iconst_1
1849: goto          1853
1852: iconst_0
1853: invokestatic  #17
1856: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 3759
End line: 3828
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double double65 = rotation64.getQ1();
        double double66 = rotation64.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray68 = rotation64.getAngles(rotationOrder67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #94
387: dstore        50
389: aload         49
391: invokevirtual #94
394: dstore        52
396: aconst_null
397: astore        54
399: aload         49
401: aload         54
403: invokevirtual #57
406: astore        55
408: ldc           #58
410: invokestatic  #21
413: goto          418
416: astore        55
418: new           #10
421: dup
422: invokespecial #11
425: ldc           #12
427: invokevirtual #13
430: dload         4
432: invokevirtual #60
435: ldc           #15
437: invokevirtual #13
440: dconst_0
441: invokevirtual #60
444: ldc           #12
446: invokevirtual #13
449: invokevirtual #16
452: dload         4
454: dconst_0
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #17
467: new           #10
470: dup
471: invokespecial #11
474: ldc           #12
476: invokevirtual #13
479: dload         6
481: invokevirtual #60
484: ldc           #15
486: invokevirtual #13
489: dconst_0
490: invokevirtual #60
493: ldc           #12
495: invokevirtual #13
498: invokevirtual #16
501: dload         6
503: dconst_0
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #17
516: new           #10
519: dup
520: invokespecial #11
523: ldc           #12
525: invokevirtual #13
528: iload         8
530: invokevirtual #14
533: ldc           #15
535: invokevirtual #13
538: iconst_0
539: invokevirtual #14
542: ldc           #12
544: invokevirtual #13
547: invokevirtual #16
550: iload         8
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #17
563: new           #10
566: dup
567: invokespecial #11
570: ldc           #12
572: invokevirtual #13
575: dload         9
577: invokevirtual #60
580: ldc           #15
582: invokevirtual #13
585: ldc2_w        #167
588: invokevirtual #60
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: dload         9
601: ldc2_w        #167
604: dcmpl
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #17
616: new           #10
619: dup
620: invokespecial #11
623: ldc           #12
625: invokevirtual #13
628: dload         13
630: invokevirtual #60
633: ldc           #15
635: invokevirtual #13
638: dconst_0
639: invokevirtual #60
642: ldc           #12
644: invokevirtual #13
647: invokevirtual #16
650: dload         13
652: dconst_0
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #17
665: new           #10
668: dup
669: invokespecial #11
672: ldc           #12
674: invokevirtual #13
677: dload         15
679: invokevirtual #60
682: ldc           #15
684: invokevirtual #13
687: ldc2_w        #61
690: invokevirtual #60
693: ldc           #12
695: invokevirtual #13
698: invokevirtual #16
701: dload         15
703: ldc2_w        #61
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: dload         19
732: invokevirtual #60
735: ldc           #15
737: invokevirtual #13
740: dconst_0
741: invokevirtual #60
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: dload         19
754: dconst_0
755: dcmpl
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #17
767: new           #10
770: dup
771: invokespecial #11
774: ldc           #12
776: invokevirtual #13
779: dload         21
781: invokevirtual #60
784: ldc           #15
786: invokevirtual #13
789: ldc2_w        #61
792: invokevirtual #60
795: ldc           #12
797: invokevirtual #13
800: invokevirtual #16
803: dload         21
805: ldc2_w        #61
808: dcmpl
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #17
820: new           #10
823: dup
824: invokespecial #11
827: ldc           #12
829: invokevirtual #13
832: dload         23
834: invokevirtual #60
837: ldc           #15
839: invokevirtual #13
842: dconst_0
843: invokevirtual #60
846: ldc           #12
848: invokevirtual #13
851: invokevirtual #16
854: dload         23
856: dconst_0
857: dcmpl
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #17
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         28
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         28
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         30
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: dconst_0
941: invokevirtual #60
944: ldc           #12
946: invokevirtual #13
949: invokevirtual #16
952: dload         30
954: dconst_0
955: dcmpl
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #17
967: new           #10
970: dup
971: invokespecial #11
974: ldc           #12
976: invokevirtual #13
979: dload         35
981: invokevirtual #60
984: ldc           #15
986: invokevirtual #13
989: dconst_0
990: invokevirtual #60
993: ldc           #12
995: invokevirtual #13
998: invokevirtual #16
1001: dload         35
1003: dconst_0
1004: dcmpl
1005: ifne          1012
1008: iconst_1
1009: goto          1013
1012: iconst_0
1013: invokestatic  #17
1016: new           #10
1019: dup
1020: invokespecial #11
1023: ldc           #12
1025: invokevirtual #13
1028: dload         37
1030: invokevirtual #60
1033: ldc           #15
1035: invokevirtual #13
1038: dconst_0
1039: invokevirtual #60
1042: ldc           #12
1044: invokevirtual #13
1047: invokevirtual #16
1050: dload         37
1052: dconst_0
1053: dcmpl
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #17
1065: new           #10
1068: dup
1069: invokespecial #11
1072: ldc           #12
1074: invokevirtual #13
1077: iload         39
1079: invokevirtual #14
1082: ldc           #15
1084: invokevirtual #13
1087: iconst_0
1088: invokevirtual #14
1091: ldc           #12
1093: invokevirtual #13
1096: invokevirtual #16
1099: iload         39
1101: ifne          1108
1104: iconst_1
1105: goto          1109
1108: iconst_0
1109: invokestatic  #17
1112: new           #10
1115: dup
1116: invokespecial #11
1119: ldc           #12
1121: invokevirtual #13
1124: dload         40
1126: invokevirtual #60
1129: ldc           #15
1131: invokevirtual #13
1134: dconst_0
1135: invokevirtual #60
1138: ldc           #12
1140: invokevirtual #13
1143: invokevirtual #16
1146: dload         40
1148: dconst_0
1149: dcmpl
1150: ifne          1157
1153: iconst_1
1154: goto          1158
1157: iconst_0
1158: invokestatic  #17
1161: aload         42
1163: invokestatic  #33
1166: new           #10
1169: dup
1170: invokespecial #11
1173: ldc           #12
1175: invokevirtual #13
1178: dload         45
1180: invokevirtual #60
1183: ldc           #15
1185: invokevirtual #13
1188: dconst_0
1189: invokevirtual #60
1192: ldc           #12
1194: invokevirtual #13
1197: invokevirtual #16
1200: dload         45
1202: dconst_0
1203: dcmpl
1204: ifne          1211
1207: iconst_1
1208: goto          1212
1211: iconst_0
1212: invokestatic  #17
1215: aload         47
1217: invokestatic  #33
1220: aload         48
1222: invokestatic  #33
1225: new           #10
1228: dup
1229: invokespecial #11
1232: ldc           #12
1234: invokevirtual #13
1237: dload         50
1239: invokevirtual #60
1242: ldc           #15
1244: invokevirtual #13
1247: dconst_0
1248: invokevirtual #60
1251: ldc           #12
1253: invokevirtual #13
1256: invokevirtual #16
1259: dload         50
1261: dconst_0
1262: dcmpl
1263: ifne          1270
1266: iconst_1
1267: goto          1271
1270: iconst_0
1271: invokestatic  #17
1274: new           #10
1277: dup
1278: invokespecial #11
1281: ldc           #12
1283: invokevirtual #13
1286: dload         52
1288: invokevirtual #60
1291: ldc           #15
1293: invokevirtual #13
1296: dconst_0
1297: invokevirtual #60
1300: ldc           #12
1302: invokevirtual #13
1305: invokevirtual #16
1308: dload         52
1310: dconst_0
1311: dcmpl
1312: ifne          1319
1315: iconst_1
1316: goto          1320
1319: iconst_0
1320: invokestatic  #17
1323: return
Exception table:
from    to  target type
399   413   416   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 3831
End line: 3892
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector67 = vector3D66.getZero();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(euclidean3DVector67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         50
396: invokevirtual #198
399: astore        51
401: new           #10
404: dup
405: invokespecial #11
408: ldc           #12
410: invokevirtual #13
413: dload         4
415: invokevirtual #60
418: ldc           #15
420: invokevirtual #13
423: dconst_0
424: invokevirtual #60
427: ldc           #12
429: invokevirtual #13
432: invokevirtual #16
435: dload         4
437: dconst_0
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #17
450: new           #10
453: dup
454: invokespecial #11
457: ldc           #12
459: invokevirtual #13
462: dload         6
464: invokevirtual #60
467: ldc           #15
469: invokevirtual #13
472: dconst_0
473: invokevirtual #60
476: ldc           #12
478: invokevirtual #13
481: invokevirtual #16
484: dload         6
486: dconst_0
487: dcmpl
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #17
499: new           #10
502: dup
503: invokespecial #11
506: ldc           #12
508: invokevirtual #13
511: dload         11
513: invokevirtual #60
516: ldc           #15
518: invokevirtual #13
521: dconst_0
522: invokevirtual #60
525: ldc           #12
527: invokevirtual #13
530: invokevirtual #16
533: dload         11
535: dconst_0
536: dcmpl
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #17
548: new           #10
551: dup
552: invokespecial #11
555: ldc           #12
557: invokevirtual #13
560: dload         13
562: invokevirtual #60
565: ldc           #15
567: invokevirtual #13
570: dconst_0
571: invokevirtual #60
574: ldc           #12
576: invokevirtual #13
579: invokevirtual #16
582: dload         13
584: dconst_0
585: dcmpl
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #17
597: new           #10
600: dup
601: invokespecial #11
604: ldc           #12
606: invokevirtual #13
609: iload         15
611: invokevirtual #14
614: ldc           #15
616: invokevirtual #13
619: iconst_0
620: invokevirtual #14
623: ldc           #12
625: invokevirtual #13
628: invokevirtual #16
631: iload         15
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #17
644: new           #10
647: dup
648: invokespecial #11
651: ldc           #12
653: invokevirtual #13
656: dload         16
658: invokevirtual #60
661: ldc           #15
663: invokevirtual #13
666: dconst_0
667: invokevirtual #60
670: ldc           #12
672: invokevirtual #13
675: invokevirtual #16
678: dload         16
680: dconst_0
681: dcmpl
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #17
693: aload         18
695: invokestatic  #33
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         21
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         21
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: aload         23
749: invokestatic  #33
752: aload         24
754: invokestatic  #33
757: new           #10
760: dup
761: invokespecial #11
764: ldc           #12
766: invokevirtual #13
769: dload         29
771: invokevirtual #60
774: ldc           #15
776: invokevirtual #13
779: dconst_0
780: invokevirtual #60
783: ldc           #12
785: invokevirtual #13
788: invokevirtual #16
791: dload         29
793: dconst_0
794: dcmpl
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #17
806: new           #10
809: dup
810: invokespecial #11
813: ldc           #12
815: invokevirtual #13
818: dload         31
820: invokevirtual #60
823: ldc           #15
825: invokevirtual #13
828: dconst_0
829: invokevirtual #60
832: ldc           #12
834: invokevirtual #13
837: invokevirtual #16
840: dload         31
842: dconst_0
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #17
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         35
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         35
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         37
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: ldc2_w        #61
929: invokevirtual #60
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: dload         37
942: ldc2_w        #61
945: dcmpl
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #17
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         41
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: dconst_0
980: invokevirtual #60
983: ldc           #12
985: invokevirtual #13
988: invokevirtual #16
991: dload         41
993: dconst_0
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         43
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: ldc2_w        #61
1031: invokevirtual #60
1034: ldc           #12
1036: invokevirtual #13
1039: invokevirtual #16
1042: dload         43
1044: ldc2_w        #61
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: dload         45
1073: invokevirtual #60
1076: ldc           #15
1078: invokevirtual #13
1081: dconst_0
1082: invokevirtual #60
1085: ldc           #12
1087: invokevirtual #13
1090: invokevirtual #16
1093: dload         45
1095: dconst_0
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         47
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         47
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: aload         49
1159: invokestatic  #33
1162: aload         50
1164: invokestatic  #33
1167: aload         51
1169: invokestatic  #33
1172: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 3895
End line: 3943
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = vector3D0.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D12, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D23, vector3D29);
        boolean boolean32 = vector3D23.isInfinite();
        double double33 = vector3D12.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D23);
        double double34 = vector3D5.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D23);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D39, vector3D45);
        double double48 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D39);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, vector3D5, (double) (-1.0f), vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.crossProduct(vector3D0, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation52 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, (double) 157247029L);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation53 = rotation52.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + Double.POSITIVE_INFINITY + "'", double48 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #314
28: astore_1
29: aload_1
30: invokevirtual #54
33: astore_2
34: new           #43
37: dup
38: dconst_1
39: ldc2_w        #44
42: invokespecial #46
45: astore_3
46: new           #43
49: dup
50: dconst_1
51: ldc2_w        #44
54: invokespecial #46
57: astore        4
59: aload_3
60: aload         4
62: invokevirtual #47
65: dstore        5
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        7
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        8
93: new           #43
96: dup
97: dconst_1
98: ldc2_w        #44
101: invokespecial #46
104: astore        9
106: aload         8
108: aload         9
110: invokevirtual #47
113: dstore        10
115: aload         7
117: aload         9
119: invokestatic  #48
122: dstore        12
124: new           #43
127: dup
128: dconst_1
129: ldc2_w        #44
132: invokespecial #46
135: astore        14
137: new           #43
140: dup
141: dconst_1
142: ldc2_w        #44
145: invokespecial #46
148: astore        15
150: new           #43
153: dup
154: dconst_1
155: ldc2_w        #44
158: invokespecial #46
161: astore        16
163: aload         15
165: aload         16
167: invokevirtual #47
170: dstore        17
172: aload         14
174: aload         16
176: invokestatic  #48
179: dstore        19
181: aload         14
183: invokevirtual #49
186: istore        21
188: aload         7
190: aload         14
192: invokevirtual #50
195: dstore        22
197: aload_3
198: aload         14
200: invokevirtual #129
203: dstore        24
205: getstatic     #126
208: astore        26
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        27
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        28
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        29
249: aload         28
251: aload         29
253: invokevirtual #47
256: dstore        30
258: aload         27
260: aload         29
262: invokestatic  #48
265: dstore        32
267: aload         26
269: aload         27
271: invokevirtual #53
274: dstore        34
276: new           #43
279: dup
280: dconst_0
281: aload_3
282: ldc2_w        #66
285: aload         26
287: invokespecial #130
290: astore        36
292: aload_1
293: aload         26
295: invokestatic  #361
298: astore        37
300: new           #27
303: dup
304: aload_1
305: ldc2_w        #229
308: invokespecial #103
311: astore        38
313: aload         38
315: invokevirtual #93
318: astore        39
320: aload_1
321: invokestatic  #33
324: aload_2
325: invokestatic  #33
328: new           #10
331: dup
332: invokespecial #11
335: ldc           #12
337: invokevirtual #13
340: dload         5
342: invokevirtual #60
345: ldc           #15
347: invokevirtual #13
350: dconst_0
351: invokevirtual #60
354: ldc           #12
356: invokevirtual #13
359: invokevirtual #16
362: dload         5
364: dconst_0
365: dcmpl
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #17
377: new           #10
380: dup
381: invokespecial #11
384: ldc           #12
386: invokevirtual #13
389: dload         10
391: invokevirtual #60
394: ldc           #15
396: invokevirtual #13
399: dconst_0
400: invokevirtual #60
403: ldc           #12
405: invokevirtual #13
408: invokevirtual #16
411: dload         10
413: dconst_0
414: dcmpl
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #17
426: new           #10
429: dup
430: invokespecial #11
433: ldc           #12
435: invokevirtual #13
438: dload         12
440: invokevirtual #60
443: ldc           #15
445: invokevirtual #13
448: dconst_0
449: invokevirtual #60
452: ldc           #12
454: invokevirtual #13
457: invokevirtual #16
460: dload         12
462: dconst_0
463: dcmpl
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #17
475: new           #10
478: dup
479: invokespecial #11
482: ldc           #12
484: invokevirtual #13
487: dload         17
489: invokevirtual #60
492: ldc           #15
494: invokevirtual #13
497: dconst_0
498: invokevirtual #60
501: ldc           #12
503: invokevirtual #13
506: invokevirtual #16
509: dload         17
511: dconst_0
512: dcmpl
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #17
524: new           #10
527: dup
528: invokespecial #11
531: ldc           #12
533: invokevirtual #13
536: dload         19
538: invokevirtual #60
541: ldc           #15
543: invokevirtual #13
546: dconst_0
547: invokevirtual #60
550: ldc           #12
552: invokevirtual #13
555: invokevirtual #16
558: dload         19
560: dconst_0
561: dcmpl
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #17
573: new           #10
576: dup
577: invokespecial #11
580: ldc           #12
582: invokevirtual #13
585: iload         21
587: invokevirtual #14
590: ldc           #15
592: invokevirtual #13
595: iconst_0
596: invokevirtual #14
599: ldc           #12
601: invokevirtual #13
604: invokevirtual #16
607: iload         21
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         22
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         22
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         24
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         24
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: aload         26
720: invokestatic  #33
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: dload         30
737: invokevirtual #60
740: ldc           #15
742: invokevirtual #13
745: dconst_0
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         30
759: dconst_0
760: dcmpl
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         32
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: dconst_0
795: invokevirtual #60
798: ldc           #12
800: invokevirtual #13
803: invokevirtual #16
806: dload         32
808: dconst_0
809: dcmpl
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: new           #10
824: dup
825: invokespecial #11
828: ldc           #12
830: invokevirtual #13
833: dload         34
835: invokevirtual #60
838: ldc           #15
840: invokevirtual #13
843: ldc2_w        #133
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         34
859: ldc2_w        #133
862: dcmpl
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #17
874: aload         37
876: invokestatic  #33
879: aload         39
881: invokestatic  #33
884: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 3946
End line: 4013
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = vector3D32.getDelta();
        double double35 = vector3D24.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double57 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D49, vector3D55);
        boolean boolean58 = vector3D49.isInfinite();
        double double59 = vector3D38.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = vector3D49.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double67 = vector3D63.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D60.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.angle(vector3D10, vector3D24);
        double double71 = vector3D10.getNormInf();
        java.lang.String str72 = vector3D10.toString();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D7.crossProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D10);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector75 = vector3D10.scalarMultiply(21.492980144031275d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.7345682747147468d + "'", double34 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.6702668260599606d + "'", double71 == 0.6702668260599606d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str72, "{0.4; 0.62; 0.67}");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(euclidean3DVector75);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: new           #43
57: dup
58: dconst_1
59: ldc2_w        #44
62: invokespecial #46
65: astore        4
67: new           #43
70: dup
71: dconst_1
72: ldc2_w        #44
75: invokespecial #46
78: astore        5
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        6
93: aload         5
95: aload         6
97: invokevirtual #47
100: dstore        7
102: aload         4
104: aload         6
106: invokestatic  #48
109: dstore        9
111: new           #43
114: dup
115: dconst_1
116: ldc2_w        #44
119: invokespecial #46
122: astore        11
124: new           #43
127: dup
128: dconst_1
129: ldc2_w        #44
132: invokespecial #46
135: astore        12
137: aload         11
139: aload         12
141: invokevirtual #47
144: dstore        13
146: aload         12
148: invokevirtual #52
151: dstore        15
153: new           #43
156: dup
157: dconst_1
158: ldc2_w        #44
161: invokespecial #46
164: astore        17
166: new           #43
169: dup
170: dconst_1
171: ldc2_w        #44
174: invokespecial #46
177: astore        18
179: aload         17
181: aload         18
183: invokevirtual #47
186: dstore        19
188: aload         18
190: invokevirtual #52
193: dstore        21
195: aload         12
197: aload         18
199: invokevirtual #53
202: dstore        23
204: new           #43
207: dup
208: dconst_1
209: ldc2_w        #44
212: invokespecial #46
215: astore        25
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        26
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        27
243: aload         26
245: aload         27
247: invokevirtual #47
250: dstore        28
252: aload         25
254: aload         27
256: invokestatic  #48
259: dstore        30
261: new           #43
264: dup
265: dconst_1
266: ldc2_w        #44
269: invokespecial #46
272: astore        32
274: new           #43
277: dup
278: dconst_1
279: ldc2_w        #44
282: invokespecial #46
285: astore        33
287: new           #43
290: dup
291: dconst_1
292: ldc2_w        #44
295: invokespecial #46
298: astore        34
300: aload         33
302: aload         34
304: invokevirtual #47
307: dstore        35
309: aload         32
311: aload         34
313: invokestatic  #48
316: dstore        37
318: aload         32
320: invokevirtual #49
323: istore        39
325: aload         25
327: aload         32
329: invokevirtual #50
332: dstore        40
334: aload         32
336: invokevirtual #54
339: astore        42
341: new           #43
344: dup
345: dconst_1
346: ldc2_w        #44
349: invokespecial #46
352: astore        43
354: new           #43
357: dup
358: dconst_1
359: ldc2_w        #44
362: invokespecial #46
365: astore        44
367: aload         43
369: aload         44
371: invokevirtual #47
374: dstore        45
376: aload         42
378: aload         43
380: invokevirtual #55
383: astore        47
385: aload         12
387: aload         47
389: invokevirtual #55
392: astore        48
394: aload         4
396: aload         12
398: invokestatic  #363
401: dstore        49
403: aload         4
405: invokevirtual #136
408: dstore        51
410: aload         4
412: invokevirtual #364
415: astore        53
417: aload_3
418: aload         4
420: invokevirtual #365
423: astore        54
425: aload         4
427: ldc2_w        #366
430: invokevirtual #107
433: astore        55
435: aload_2
436: invokestatic  #33
439: aload_3
440: invokestatic  #33
443: new           #10
446: dup
447: invokespecial #11
450: ldc           #12
452: invokevirtual #13
455: dload         7
457: invokevirtual #60
460: ldc           #15
462: invokevirtual #13
465: dconst_0
466: invokevirtual #60
469: ldc           #12
471: invokevirtual #13
474: invokevirtual #16
477: dload         7
479: dconst_0
480: dcmpl
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #17
492: new           #10
495: dup
496: invokespecial #11
499: ldc           #12
501: invokevirtual #13
504: dload         9
506: invokevirtual #60
509: ldc           #15
511: invokevirtual #13
514: dconst_0
515: invokevirtual #60
518: ldc           #12
520: invokevirtual #13
523: invokevirtual #16
526: dload         9
528: dconst_0
529: dcmpl
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #17
541: new           #10
544: dup
545: invokespecial #11
548: ldc           #12
550: invokevirtual #13
553: dload         13
555: invokevirtual #60
558: ldc           #15
560: invokevirtual #13
563: dconst_0
564: invokevirtual #60
567: ldc           #12
569: invokevirtual #13
572: invokevirtual #16
575: dload         13
577: dconst_0
578: dcmpl
579: ifne          586
582: iconst_1
583: goto          587
586: iconst_0
587: invokestatic  #17
590: new           #10
593: dup
594: invokespecial #11
597: ldc           #12
599: invokevirtual #13
602: dload         15
604: invokevirtual #60
607: ldc           #15
609: invokevirtual #13
612: ldc2_w        #61
615: invokevirtual #60
618: ldc           #12
620: invokevirtual #13
623: invokevirtual #16
626: dload         15
628: ldc2_w        #61
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #17
643: new           #10
646: dup
647: invokespecial #11
650: ldc           #12
652: invokevirtual #13
655: dload         19
657: invokevirtual #60
660: ldc           #15
662: invokevirtual #13
665: dconst_0
666: invokevirtual #60
669: ldc           #12
671: invokevirtual #13
674: invokevirtual #16
677: dload         19
679: dconst_0
680: dcmpl
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #17
692: new           #10
695: dup
696: invokespecial #11
699: ldc           #12
701: invokevirtual #13
704: dload         21
706: invokevirtual #60
709: ldc           #15
711: invokevirtual #13
714: ldc2_w        #61
717: invokevirtual #60
720: ldc           #12
722: invokevirtual #13
725: invokevirtual #16
728: dload         21
730: ldc2_w        #61
733: dcmpl
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #17
745: new           #10
748: dup
749: invokespecial #11
752: ldc           #12
754: invokevirtual #13
757: dload         23
759: invokevirtual #60
762: ldc           #15
764: invokevirtual #13
767: dconst_0
768: invokevirtual #60
771: ldc           #12
773: invokevirtual #13
776: invokevirtual #16
779: dload         23
781: dconst_0
782: dcmpl
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         28
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         28
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: new           #10
846: dup
847: invokespecial #11
850: ldc           #12
852: invokevirtual #13
855: dload         30
857: invokevirtual #60
860: ldc           #15
862: invokevirtual #13
865: dconst_0
866: invokevirtual #60
869: ldc           #12
871: invokevirtual #13
874: invokevirtual #16
877: dload         30
879: dconst_0
880: dcmpl
881: ifne          888
884: iconst_1
885: goto          889
888: iconst_0
889: invokestatic  #17
892: new           #10
895: dup
896: invokespecial #11
899: ldc           #12
901: invokevirtual #13
904: dload         35
906: invokevirtual #60
909: ldc           #15
911: invokevirtual #13
914: dconst_0
915: invokevirtual #60
918: ldc           #12
920: invokevirtual #13
923: invokevirtual #16
926: dload         35
928: dconst_0
929: dcmpl
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #17
941: new           #10
944: dup
945: invokespecial #11
948: ldc           #12
950: invokevirtual #13
953: dload         37
955: invokevirtual #60
958: ldc           #15
960: invokevirtual #13
963: dconst_0
964: invokevirtual #60
967: ldc           #12
969: invokevirtual #13
972: invokevirtual #16
975: dload         37
977: dconst_0
978: dcmpl
979: ifne          986
982: iconst_1
983: goto          987
986: iconst_0
987: invokestatic  #17
990: new           #10
993: dup
994: invokespecial #11
997: ldc           #12
999: invokevirtual #13
1002: iload         39
1004: invokevirtual #14
1007: ldc           #15
1009: invokevirtual #13
1012: iconst_0
1013: invokevirtual #14
1016: ldc           #12
1018: invokevirtual #13
1021: invokevirtual #16
1024: iload         39
1026: ifne          1033
1029: iconst_1
1030: goto          1034
1033: iconst_0
1034: invokestatic  #17
1037: new           #10
1040: dup
1041: invokespecial #11
1044: ldc           #12
1046: invokevirtual #13
1049: dload         40
1051: invokevirtual #60
1054: ldc           #15
1056: invokevirtual #13
1059: dconst_0
1060: invokevirtual #60
1063: ldc           #12
1065: invokevirtual #13
1068: invokevirtual #16
1071: dload         40
1073: dconst_0
1074: dcmpl
1075: ifne          1082
1078: iconst_1
1079: goto          1083
1082: iconst_0
1083: invokestatic  #17
1086: aload         42
1088: invokestatic  #33
1091: new           #10
1094: dup
1095: invokespecial #11
1098: ldc           #12
1100: invokevirtual #13
1103: dload         45
1105: invokevirtual #60
1108: ldc           #15
1110: invokevirtual #13
1113: dconst_0
1114: invokevirtual #60
1117: ldc           #12
1119: invokevirtual #13
1122: invokevirtual #16
1125: dload         45
1127: dconst_0
1128: dcmpl
1129: ifne          1136
1132: iconst_1
1133: goto          1137
1136: iconst_0
1137: invokestatic  #17
1140: aload         47
1142: invokestatic  #33
1145: aload         48
1147: invokestatic  #33
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         49
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         49
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         51
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: ldc2_w        #79
1224: invokevirtual #60
1227: ldc           #12
1229: invokevirtual #13
1232: invokevirtual #16
1235: dload         51
1237: ldc2_w        #79
1240: dcmpl
1241: ifne          1248
1244: iconst_1
1245: goto          1249
1248: iconst_0
1249: invokestatic  #17
1252: new           #10
1255: dup
1256: invokespecial #11
1259: ldc           #12
1261: invokevirtual #13
1264: aload         53
1266: invokevirtual #13
1269: ldc_w         #368
1272: invokevirtual #13
1275: invokevirtual #16
1278: aload         53
1280: ldc_w         #369
1283: invokestatic  #335
1286: aload         54
1288: invokestatic  #33
1291: aload         55
1293: invokestatic  #33
1296: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 4016
End line: 4097
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        double[] doubleArray4 = new double[] { (byte) 1 };
        double[] doubleArray5 = new double[] {};
        boolean boolean6 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray4, doubleArray5);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection7 = null;
        double[] doubleArray9 = new double[] { 0 };
        double[] doubleArray11 = new double[] { 0 };
        double[] doubleArray13 = new double[] { 0 };
        double[] doubleArray15 = new double[] { 0 };
        double[] doubleArray17 = new double[] { 0 };
        double[][] doubleArray18 = new double[][] { doubleArray9, doubleArray11, doubleArray13, doubleArray15, doubleArray17 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray4, orderDirection7, doubleArray18);
        double[] doubleArray21 = new double[] { (byte) 1 };
        double[] doubleArray22 = new double[] {};
        boolean boolean23 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray21, doubleArray22);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection24 = null;
        double[] doubleArray26 = new double[] { 0 };
        double[] doubleArray28 = new double[] { 0 };
        double[] doubleArray30 = new double[] { 0 };
        double[] doubleArray32 = new double[] { 0 };
        double[] doubleArray34 = new double[] { 0 };
        double[][] doubleArray35 = new double[][] { doubleArray26, doubleArray28, doubleArray30, doubleArray32, doubleArray34 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray21, orderDirection24, doubleArray35);
        double double37 = org.apache.commons.math.util.MathUtils.distanceInf(doubleArray4, doubleArray21);
        double[] doubleArray39 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray4, 10);
        double[] doubleArray41 = new double[] { 0.0d };
        double[][] doubleArray42 = new double[][] { doubleArray41 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray4, doubleArray42);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException44 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable2, (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.exception.NullArgumentException nullArgumentException45 = new org.apache.commons.math.exception.NullArgumentException(localizable1, (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException(localizable0, (java.lang.Object[]) doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation48 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray42, 2.3803323798721885d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 1x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aconst_null
30: astore_3
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: astore        4
40: iconst_0
41: newarray       double
43: astore        5
45: aload         4
47: aload         5
49: invokestatic  #24
52: istore        6
54: aconst_null
55: astore        7
57: iconst_1
58: newarray       double
60: dup
61: iconst_0
62: dconst_0
63: dastore
64: astore        8
66: iconst_1
67: newarray       double
69: dup
70: iconst_0
71: dconst_0
72: dastore
73: astore        9
75: iconst_1
76: newarray       double
78: dup
79: iconst_0
80: dconst_0
81: dastore
82: astore        10
84: iconst_1
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: astore        11
93: iconst_1
94: newarray       double
96: dup
97: iconst_0
98: dconst_0
99: dastore
100: astore        12
102: iconst_5
103: anewarray     #25
106: dup
107: iconst_0
108: aload         8
110: aastore
111: dup
112: iconst_1
113: aload         9
115: aastore
116: dup
117: iconst_2
118: aload         10
120: aastore
121: dup
122: iconst_3
123: aload         11
125: aastore
126: dup
127: iconst_4
128: aload         12
130: aastore
131: astore        13
133: aload         4
135: aload         7
137: aload         13
139: invokestatic  #26
142: iconst_1
143: newarray       double
145: dup
146: iconst_0
147: dconst_1
148: dastore
149: astore        14
151: iconst_0
152: newarray       double
154: astore        15
156: aload         14
158: aload         15
160: invokestatic  #24
163: istore        16
165: aconst_null
166: astore        17
168: iconst_1
169: newarray       double
171: dup
172: iconst_0
173: dconst_0
174: dastore
175: astore        18
177: iconst_1
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: astore        19
186: iconst_1
187: newarray       double
189: dup
190: iconst_0
191: dconst_0
192: dastore
193: astore        20
195: iconst_1
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: astore        21
204: iconst_1
205: newarray       double
207: dup
208: iconst_0
209: dconst_0
210: dastore
211: astore        22
213: iconst_5
214: anewarray     #25
217: dup
218: iconst_0
219: aload         18
221: aastore
222: dup
223: iconst_1
224: aload         19
226: aastore
227: dup
228: iconst_2
229: aload         20
231: aastore
232: dup
233: iconst_3
234: aload         21
236: aastore
237: dup
238: iconst_4
239: aload         22
241: aastore
242: astore        23
244: aload         14
246: aload         17
248: aload         23
250: invokestatic  #26
253: aload         4
255: aload         14
257: invokestatic  #152
260: dstore        24
262: aload         4
264: bipush        10
266: invokestatic  #153
269: astore        26
271: iconst_1
272: newarray       double
274: dup
275: iconst_0
276: dconst_0
277: dastore
278: astore        27
280: iconst_1
281: anewarray     #25
284: dup
285: iconst_0
286: aload         27
288: aastore
289: astore        28
291: aload         4
293: aload         28
295: invokestatic  #154
298: new           #247
301: dup
302: aload_3
303: aload         28
305: checkcast     #248
308: invokespecial #249
311: astore        29
313: new           #263
316: dup
317: aload_2
318: aload         28
320: checkcast     #248
323: invokespecial #264
326: astore        30
328: new           #265
331: dup
332: aload_1
333: aload         28
335: checkcast     #248
338: invokespecial #266
341: astore        31
343: new           #27
346: dup
347: aload         28
349: ldc2_w        #371
352: invokespecial #30
355: astore        32
357: ldc           #157
359: invokestatic  #21
362: goto          367
365: astore        32
367: aload         4
369: invokestatic  #33
372: aload         4
374: invokestatic  #34
377: ldc           #35
379: invokestatic  #36
382: aload         5
384: invokestatic  #33
387: aload         5
389: invokestatic  #34
392: ldc           #37
394: invokestatic  #36
397: new           #10
400: dup
401: invokespecial #11
404: ldc           #12
406: invokevirtual #13
409: iload         6
411: invokevirtual #14
414: ldc           #15
416: invokevirtual #13
419: iconst_0
420: invokevirtual #14
423: ldc           #12
425: invokevirtual #13
428: invokevirtual #16
431: iload         6
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #17
444: aload         8
446: invokestatic  #33
449: aload         8
451: invokestatic  #34
454: ldc           #38
456: invokestatic  #36
459: aload         9
461: invokestatic  #33
464: aload         9
466: invokestatic  #34
469: ldc           #38
471: invokestatic  #36
474: aload         10
476: invokestatic  #33
479: aload         10
481: invokestatic  #34
484: ldc           #38
486: invokestatic  #36
489: aload         11
491: invokestatic  #33
494: aload         11
496: invokestatic  #34
499: ldc           #38
501: invokestatic  #36
504: aload         12
506: invokestatic  #33
509: aload         12
511: invokestatic  #34
514: ldc           #38
516: invokestatic  #36
519: aload         13
521: invokestatic  #33
524: aload         14
526: invokestatic  #33
529: aload         14
531: invokestatic  #34
534: ldc           #35
536: invokestatic  #36
539: aload         15
541: invokestatic  #33
544: aload         15
546: invokestatic  #34
549: ldc           #37
551: invokestatic  #36
554: new           #10
557: dup
558: invokespecial #11
561: ldc           #12
563: invokevirtual #13
566: iload         16
568: invokevirtual #14
571: ldc           #15
573: invokevirtual #13
576: iconst_0
577: invokevirtual #14
580: ldc           #12
582: invokevirtual #13
585: invokevirtual #16
588: iload         16
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: aload         18
603: invokestatic  #33
606: aload         18
608: invokestatic  #34
611: ldc           #38
613: invokestatic  #36
616: aload         19
618: invokestatic  #33
621: aload         19
623: invokestatic  #34
626: ldc           #38
628: invokestatic  #36
631: aload         20
633: invokestatic  #33
636: aload         20
638: invokestatic  #34
641: ldc           #38
643: invokestatic  #36
646: aload         21
648: invokestatic  #33
651: aload         21
653: invokestatic  #34
656: ldc           #38
658: invokestatic  #36
661: aload         22
663: invokestatic  #33
666: aload         22
668: invokestatic  #34
671: ldc           #38
673: invokestatic  #36
676: aload         23
678: invokestatic  #33
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: dload         24
695: invokevirtual #60
698: ldc           #15
700: invokevirtual #13
703: dconst_0
704: invokevirtual #60
707: ldc           #12
709: invokevirtual #13
712: invokevirtual #16
715: dload         24
717: dconst_0
718: dcmpl
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #17
730: aload         26
732: invokestatic  #33
735: aload         26
737: invokestatic  #34
740: ldc           #158
742: invokestatic  #36
745: aload         27
747: invokestatic  #33
750: aload         27
752: invokestatic  #34
755: ldc           #38
757: invokestatic  #36
760: aload         28
762: invokestatic  #33
765: return
Exception table:
from    to  target type
343   362   365   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 4100
End line: 4165
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D44.scalarMultiply((-0.8390715290764524d));
        double double69 = vector3D44.getNormInf();
        boolean boolean70 = vector3D44.isInfinite();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.6702668260599606d + "'", double69 == 0.6702668260599606d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         28
396: ldc2_w        #374
399: invokevirtual #107
402: astore        51
404: aload         28
406: invokevirtual #136
409: dstore        52
411: aload         28
413: invokevirtual #49
416: istore        54
418: new           #10
421: dup
422: invokespecial #11
425: ldc           #12
427: invokevirtual #13
430: dload         4
432: invokevirtual #60
435: ldc           #15
437: invokevirtual #13
440: dconst_0
441: invokevirtual #60
444: ldc           #12
446: invokevirtual #13
449: invokevirtual #16
452: dload         4
454: dconst_0
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #17
467: new           #10
470: dup
471: invokespecial #11
474: ldc           #12
476: invokevirtual #13
479: dload         6
481: invokevirtual #60
484: ldc           #15
486: invokevirtual #13
489: dconst_0
490: invokevirtual #60
493: ldc           #12
495: invokevirtual #13
498: invokevirtual #16
501: dload         6
503: dconst_0
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #17
516: new           #10
519: dup
520: invokespecial #11
523: ldc           #12
525: invokevirtual #13
528: dload         11
530: invokevirtual #60
533: ldc           #15
535: invokevirtual #13
538: dconst_0
539: invokevirtual #60
542: ldc           #12
544: invokevirtual #13
547: invokevirtual #16
550: dload         11
552: dconst_0
553: dcmpl
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #17
565: new           #10
568: dup
569: invokespecial #11
572: ldc           #12
574: invokevirtual #13
577: dload         13
579: invokevirtual #60
582: ldc           #15
584: invokevirtual #13
587: dconst_0
588: invokevirtual #60
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: dload         13
601: dconst_0
602: dcmpl
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #17
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: iload         15
628: invokevirtual #14
631: ldc           #15
633: invokevirtual #13
636: iconst_0
637: invokevirtual #14
640: ldc           #12
642: invokevirtual #13
645: invokevirtual #16
648: iload         15
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #17
661: new           #10
664: dup
665: invokespecial #11
668: ldc           #12
670: invokevirtual #13
673: dload         16
675: invokevirtual #60
678: ldc           #15
680: invokevirtual #13
683: dconst_0
684: invokevirtual #60
687: ldc           #12
689: invokevirtual #13
692: invokevirtual #16
695: dload         16
697: dconst_0
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: aload         18
712: invokestatic  #33
715: new           #10
718: dup
719: invokespecial #11
722: ldc           #12
724: invokevirtual #13
727: dload         21
729: invokevirtual #60
732: ldc           #15
734: invokevirtual #13
737: dconst_0
738: invokevirtual #60
741: ldc           #12
743: invokevirtual #13
746: invokevirtual #16
749: dload         21
751: dconst_0
752: dcmpl
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #17
764: aload         23
766: invokestatic  #33
769: aload         24
771: invokestatic  #33
774: new           #10
777: dup
778: invokespecial #11
781: ldc           #12
783: invokevirtual #13
786: dload         29
788: invokevirtual #60
791: ldc           #15
793: invokevirtual #13
796: dconst_0
797: invokevirtual #60
800: ldc           #12
802: invokevirtual #13
805: invokevirtual #16
808: dload         29
810: dconst_0
811: dcmpl
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #17
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         31
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: dconst_0
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         31
859: dconst_0
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         35
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         35
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         37
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: ldc2_w        #61
946: invokevirtual #60
949: ldc           #12
951: invokevirtual #13
954: invokevirtual #16
957: dload         37
959: ldc2_w        #61
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         41
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         41
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         43
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: ldc2_w        #61
1048: invokevirtual #60
1051: ldc           #12
1053: invokevirtual #13
1056: invokevirtual #16
1059: dload         43
1061: ldc2_w        #61
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         45
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: dconst_0
1099: invokevirtual #60
1102: ldc           #12
1104: invokevirtual #13
1107: invokevirtual #16
1110: dload         45
1112: dconst_0
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         47
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         47
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: aload         49
1176: invokestatic  #33
1179: aload         50
1181: invokestatic  #33
1184: aload         51
1186: invokestatic  #33
1189: new           #10
1192: dup
1193: invokespecial #11
1196: ldc           #12
1198: invokevirtual #13
1201: dload         52
1203: invokevirtual #60
1206: ldc           #15
1208: invokevirtual #13
1211: ldc2_w        #79
1214: invokevirtual #60
1217: ldc           #12
1219: invokevirtual #13
1222: invokevirtual #16
1225: dload         52
1227: ldc2_w        #79
1230: dcmpl
1231: ifne          1238
1234: iconst_1
1235: goto          1239
1238: iconst_0
1239: invokestatic  #17
1242: new           #10
1245: dup
1246: invokespecial #11
1249: ldc           #12
1251: invokevirtual #13
1254: iload         54
1256: invokevirtual #14
1259: ldc           #15
1261: invokevirtual #13
1264: iconst_0
1265: invokevirtual #14
1268: ldc           #12
1270: invokevirtual #13
1273: invokevirtual #16
1276: iload         54
1278: ifne          1285
1281: iconst_1
1282: goto          1286
1285: iconst_0
1286: invokestatic  #17
1289: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 4168
End line: 4229
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double[][] doubleArray65 = rotation64.getMatrix();
        double double66 = rotation64.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #222
387: astore        50
389: aload         49
391: invokevirtual #95
394: dstore        51
396: new           #10
399: dup
400: invokespecial #11
403: ldc           #12
405: invokevirtual #13
408: dload         4
410: invokevirtual #60
413: ldc           #15
415: invokevirtual #13
418: dconst_0
419: invokevirtual #60
422: ldc           #12
424: invokevirtual #13
427: invokevirtual #16
430: dload         4
432: dconst_0
433: dcmpl
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #17
445: new           #10
448: dup
449: invokespecial #11
452: ldc           #12
454: invokevirtual #13
457: dload         6
459: invokevirtual #60
462: ldc           #15
464: invokevirtual #13
467: dconst_0
468: invokevirtual #60
471: ldc           #12
473: invokevirtual #13
476: invokevirtual #16
479: dload         6
481: dconst_0
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #17
494: new           #10
497: dup
498: invokespecial #11
501: ldc           #12
503: invokevirtual #13
506: iload         8
508: invokevirtual #14
511: ldc           #15
513: invokevirtual #13
516: iconst_0
517: invokevirtual #14
520: ldc           #12
522: invokevirtual #13
525: invokevirtual #16
528: iload         8
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #17
541: new           #10
544: dup
545: invokespecial #11
548: ldc           #12
550: invokevirtual #13
553: dload         9
555: invokevirtual #60
558: ldc           #15
560: invokevirtual #13
563: ldc2_w        #167
566: invokevirtual #60
569: ldc           #12
571: invokevirtual #13
574: invokevirtual #16
577: dload         9
579: ldc2_w        #167
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #17
594: new           #10
597: dup
598: invokespecial #11
601: ldc           #12
603: invokevirtual #13
606: dload         13
608: invokevirtual #60
611: ldc           #15
613: invokevirtual #13
616: dconst_0
617: invokevirtual #60
620: ldc           #12
622: invokevirtual #13
625: invokevirtual #16
628: dload         13
630: dconst_0
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #17
643: new           #10
646: dup
647: invokespecial #11
650: ldc           #12
652: invokevirtual #13
655: dload         15
657: invokevirtual #60
660: ldc           #15
662: invokevirtual #13
665: ldc2_w        #61
668: invokevirtual #60
671: ldc           #12
673: invokevirtual #13
676: invokevirtual #16
679: dload         15
681: ldc2_w        #61
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #17
696: new           #10
699: dup
700: invokespecial #11
703: ldc           #12
705: invokevirtual #13
708: dload         19
710: invokevirtual #60
713: ldc           #15
715: invokevirtual #13
718: dconst_0
719: invokevirtual #60
722: ldc           #12
724: invokevirtual #13
727: invokevirtual #16
730: dload         19
732: dconst_0
733: dcmpl
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #17
745: new           #10
748: dup
749: invokespecial #11
752: ldc           #12
754: invokevirtual #13
757: dload         21
759: invokevirtual #60
762: ldc           #15
764: invokevirtual #13
767: ldc2_w        #61
770: invokevirtual #60
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: dload         21
783: ldc2_w        #61
786: dcmpl
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #17
798: new           #10
801: dup
802: invokespecial #11
805: ldc           #12
807: invokevirtual #13
810: dload         23
812: invokevirtual #60
815: ldc           #15
817: invokevirtual #13
820: dconst_0
821: invokevirtual #60
824: ldc           #12
826: invokevirtual #13
829: invokevirtual #16
832: dload         23
834: dconst_0
835: dcmpl
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #17
847: new           #10
850: dup
851: invokespecial #11
854: ldc           #12
856: invokevirtual #13
859: dload         28
861: invokevirtual #60
864: ldc           #15
866: invokevirtual #13
869: dconst_0
870: invokevirtual #60
873: ldc           #12
875: invokevirtual #13
878: invokevirtual #16
881: dload         28
883: dconst_0
884: dcmpl
885: ifne          892
888: iconst_1
889: goto          893
892: iconst_0
893: invokestatic  #17
896: new           #10
899: dup
900: invokespecial #11
903: ldc           #12
905: invokevirtual #13
908: dload         30
910: invokevirtual #60
913: ldc           #15
915: invokevirtual #13
918: dconst_0
919: invokevirtual #60
922: ldc           #12
924: invokevirtual #13
927: invokevirtual #16
930: dload         30
932: dconst_0
933: dcmpl
934: ifne          941
937: iconst_1
938: goto          942
941: iconst_0
942: invokestatic  #17
945: new           #10
948: dup
949: invokespecial #11
952: ldc           #12
954: invokevirtual #13
957: dload         35
959: invokevirtual #60
962: ldc           #15
964: invokevirtual #13
967: dconst_0
968: invokevirtual #60
971: ldc           #12
973: invokevirtual #13
976: invokevirtual #16
979: dload         35
981: dconst_0
982: dcmpl
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #17
994: new           #10
997: dup
998: invokespecial #11
1001: ldc           #12
1003: invokevirtual #13
1006: dload         37
1008: invokevirtual #60
1011: ldc           #15
1013: invokevirtual #13
1016: dconst_0
1017: invokevirtual #60
1020: ldc           #12
1022: invokevirtual #13
1025: invokevirtual #16
1028: dload         37
1030: dconst_0
1031: dcmpl
1032: ifne          1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #17
1043: new           #10
1046: dup
1047: invokespecial #11
1050: ldc           #12
1052: invokevirtual #13
1055: iload         39
1057: invokevirtual #14
1060: ldc           #15
1062: invokevirtual #13
1065: iconst_0
1066: invokevirtual #14
1069: ldc           #12
1071: invokevirtual #13
1074: invokevirtual #16
1077: iload         39
1079: ifne          1086
1082: iconst_1
1083: goto          1087
1086: iconst_0
1087: invokestatic  #17
1090: new           #10
1093: dup
1094: invokespecial #11
1097: ldc           #12
1099: invokevirtual #13
1102: dload         40
1104: invokevirtual #60
1107: ldc           #15
1109: invokevirtual #13
1112: dconst_0
1113: invokevirtual #60
1116: ldc           #12
1118: invokevirtual #13
1121: invokevirtual #16
1124: dload         40
1126: dconst_0
1127: dcmpl
1128: ifne          1135
1131: iconst_1
1132: goto          1136
1135: iconst_0
1136: invokestatic  #17
1139: aload         42
1141: invokestatic  #33
1144: new           #10
1147: dup
1148: invokespecial #11
1151: ldc           #12
1153: invokevirtual #13
1156: dload         45
1158: invokevirtual #60
1161: ldc           #15
1163: invokevirtual #13
1166: dconst_0
1167: invokevirtual #60
1170: ldc           #12
1172: invokevirtual #13
1175: invokevirtual #16
1178: dload         45
1180: dconst_0
1181: dcmpl
1182: ifne          1189
1185: iconst_1
1186: goto          1190
1189: iconst_0
1190: invokestatic  #17
1193: aload         47
1195: invokestatic  #33
1198: aload         48
1200: invokestatic  #33
1203: aload         50
1205: invokestatic  #33
1208: new           #10
1211: dup
1212: invokespecial #11
1215: ldc           #12
1217: invokevirtual #13
1220: dload         51
1222: invokevirtual #60
1225: ldc           #15
1227: invokevirtual #13
1230: dconst_0
1231: invokevirtual #60
1234: ldc           #12
1236: invokevirtual #13
1239: invokevirtual #16
1242: dload         51
1244: dconst_0
1245: dcmpl
1246: ifne          1253
1249: iconst_1
1250: goto          1254
1253: iconst_0
1254: invokestatic  #17
1257: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 4232
End line: 4243
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 0.9873536182198484d, 0.0d, (-9.698065313833758E7d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #342
35: dconst_0
36: ldc2_w        #299
39: invokespecial #81
42: astore_2
43: ldc           #20
45: invokestatic  #21
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 4246
End line: 4312
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException3 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10.0f, (java.lang.Number) 20.793438379014997d, (int) (byte) -1);
        boolean boolean4 = nonMonotonousSequenceException3.getStrict();
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        boolean boolean17 = vector3D8.isInfinite();
        double double18 = vector3D8.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = vector3D32.getDelta();
        double double35 = vector3D24.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double57 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D49, vector3D55);
        boolean boolean58 = vector3D49.isInfinite();
        double double59 = vector3D38.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = vector3D49.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double67 = vector3D63.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D60.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation70 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D8, vector3D24);
        double[][] doubleArray71 = rotation70.getMatrix();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException3, localizable5, (java.lang.Object[]) doubleArray71);
        org.apache.commons.math.exception.util.ExceptionContext exceptionContext73 = nonMonotonousSequenceException3.getContext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.6957086881730823d + "'", double18 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.7345682747147468d + "'", double34 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(exceptionContext73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #321
28: dup
29: ldc           #8
31: invokestatic  #379
34: ldc2_w        #380
37: invokestatic  #319
40: iconst_m1
41: invokespecial #325
44: astore_1
45: aload_1
46: invokevirtual #382
49: istore_2
50: aconst_null
51: astore_3
52: new           #43
55: dup
56: dconst_1
57: ldc2_w        #44
60: invokespecial #46
63: astore        4
65: new           #43
68: dup
69: dconst_1
70: ldc2_w        #44
73: invokespecial #46
76: astore        5
78: new           #43
81: dup
82: dconst_1
83: ldc2_w        #44
86: invokespecial #46
89: astore        6
91: aload         5
93: aload         6
95: invokevirtual #47
98: dstore        7
100: aload         4
102: aload         6
104: invokestatic  #48
107: dstore        9
109: aload         4
111: invokevirtual #49
114: istore        11
116: aload         4
118: invokevirtual #162
121: dstore        12
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        14
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        15
149: aload         14
151: aload         15
153: invokevirtual #47
156: dstore        16
158: aload         15
160: invokevirtual #52
163: dstore        18
165: new           #43
168: dup
169: dconst_1
170: ldc2_w        #44
173: invokespecial #46
176: astore        20
178: new           #43
181: dup
182: dconst_1
183: ldc2_w        #44
186: invokespecial #46
189: astore        21
191: aload         20
193: aload         21
195: invokevirtual #47
198: dstore        22
200: aload         21
202: invokevirtual #52
205: dstore        24
207: aload         15
209: aload         21
211: invokevirtual #53
214: dstore        26
216: new           #43
219: dup
220: dconst_1
221: ldc2_w        #44
224: invokespecial #46
227: astore        28
229: new           #43
232: dup
233: dconst_1
234: ldc2_w        #44
237: invokespecial #46
240: astore        29
242: new           #43
245: dup
246: dconst_1
247: ldc2_w        #44
250: invokespecial #46
253: astore        30
255: aload         29
257: aload         30
259: invokevirtual #47
262: dstore        31
264: aload         28
266: aload         30
268: invokestatic  #48
271: dstore        33
273: new           #43
276: dup
277: dconst_1
278: ldc2_w        #44
281: invokespecial #46
284: astore        35
286: new           #43
289: dup
290: dconst_1
291: ldc2_w        #44
294: invokespecial #46
297: astore        36
299: new           #43
302: dup
303: dconst_1
304: ldc2_w        #44
307: invokespecial #46
310: astore        37
312: aload         36
314: aload         37
316: invokevirtual #47
319: dstore        38
321: aload         35
323: aload         37
325: invokestatic  #48
328: dstore        40
330: aload         35
332: invokevirtual #49
335: istore        42
337: aload         28
339: aload         35
341: invokevirtual #50
344: dstore        43
346: aload         35
348: invokevirtual #54
351: astore        45
353: new           #43
356: dup
357: dconst_1
358: ldc2_w        #44
361: invokespecial #46
364: astore        46
366: new           #43
369: dup
370: dconst_1
371: ldc2_w        #44
374: invokespecial #46
377: astore        47
379: aload         46
381: aload         47
383: invokevirtual #47
386: dstore        48
388: aload         45
390: aload         46
392: invokevirtual #55
395: astore        50
397: aload         15
399: aload         50
401: invokevirtual #55
404: astore        51
406: new           #27
409: dup
410: aload         4
412: aload         15
414: invokespecial #56
417: astore        52
419: aload         52
421: invokevirtual #222
424: astore        53
426: new           #265
429: dup
430: aload_1
431: aload_3
432: aload         53
434: checkcast     #248
437: invokespecial #383
440: astore        54
442: aload_1
443: invokevirtual #384
446: astore        55
448: new           #10
451: dup
452: invokespecial #11
455: ldc           #12
457: invokevirtual #13
460: iload_2
461: invokevirtual #14
464: ldc           #15
466: invokevirtual #13
469: iconst_1
470: invokevirtual #14
473: ldc           #12
475: invokevirtual #13
478: invokevirtual #16
481: iload_2
482: iconst_1
483: if_icmpne     490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #17
494: new           #10
497: dup
498: invokespecial #11
501: ldc           #12
503: invokevirtual #13
506: dload         7
508: invokevirtual #60
511: ldc           #15
513: invokevirtual #13
516: dconst_0
517: invokevirtual #60
520: ldc           #12
522: invokevirtual #13
525: invokevirtual #16
528: dload         7
530: dconst_0
531: dcmpl
532: ifne          539
535: iconst_1
536: goto          540
539: iconst_0
540: invokestatic  #17
543: new           #10
546: dup
547: invokespecial #11
550: ldc           #12
552: invokevirtual #13
555: dload         9
557: invokevirtual #60
560: ldc           #15
562: invokevirtual #13
565: dconst_0
566: invokevirtual #60
569: ldc           #12
571: invokevirtual #13
574: invokevirtual #16
577: dload         9
579: dconst_0
580: dcmpl
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #17
592: new           #10
595: dup
596: invokespecial #11
599: ldc           #12
601: invokevirtual #13
604: iload         11
606: invokevirtual #14
609: ldc           #15
611: invokevirtual #13
614: iconst_0
615: invokevirtual #14
618: ldc           #12
620: invokevirtual #13
623: invokevirtual #16
626: iload         11
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #17
639: new           #10
642: dup
643: invokespecial #11
646: ldc           #12
648: invokevirtual #13
651: dload         12
653: invokevirtual #60
656: ldc           #15
658: invokevirtual #13
661: ldc2_w        #167
664: invokevirtual #60
667: ldc           #12
669: invokevirtual #13
672: invokevirtual #16
675: dload         12
677: ldc2_w        #167
680: dcmpl
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #17
692: new           #10
695: dup
696: invokespecial #11
699: ldc           #12
701: invokevirtual #13
704: dload         16
706: invokevirtual #60
709: ldc           #15
711: invokevirtual #13
714: dconst_0
715: invokevirtual #60
718: ldc           #12
720: invokevirtual #13
723: invokevirtual #16
726: dload         16
728: dconst_0
729: dcmpl
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #17
741: new           #10
744: dup
745: invokespecial #11
748: ldc           #12
750: invokevirtual #13
753: dload         18
755: invokevirtual #60
758: ldc           #15
760: invokevirtual #13
763: ldc2_w        #61
766: invokevirtual #60
769: ldc           #12
771: invokevirtual #13
774: invokevirtual #16
777: dload         18
779: ldc2_w        #61
782: dcmpl
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         22
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         22
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: new           #10
846: dup
847: invokespecial #11
850: ldc           #12
852: invokevirtual #13
855: dload         24
857: invokevirtual #60
860: ldc           #15
862: invokevirtual #13
865: ldc2_w        #61
868: invokevirtual #60
871: ldc           #12
873: invokevirtual #13
876: invokevirtual #16
879: dload         24
881: ldc2_w        #61
884: dcmpl
885: ifne          892
888: iconst_1
889: goto          893
892: iconst_0
893: invokestatic  #17
896: new           #10
899: dup
900: invokespecial #11
903: ldc           #12
905: invokevirtual #13
908: dload         26
910: invokevirtual #60
913: ldc           #15
915: invokevirtual #13
918: dconst_0
919: invokevirtual #60
922: ldc           #12
924: invokevirtual #13
927: invokevirtual #16
930: dload         26
932: dconst_0
933: dcmpl
934: ifne          941
937: iconst_1
938: goto          942
941: iconst_0
942: invokestatic  #17
945: new           #10
948: dup
949: invokespecial #11
952: ldc           #12
954: invokevirtual #13
957: dload         31
959: invokevirtual #60
962: ldc           #15
964: invokevirtual #13
967: dconst_0
968: invokevirtual #60
971: ldc           #12
973: invokevirtual #13
976: invokevirtual #16
979: dload         31
981: dconst_0
982: dcmpl
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #17
994: new           #10
997: dup
998: invokespecial #11
1001: ldc           #12
1003: invokevirtual #13
1006: dload         33
1008: invokevirtual #60
1011: ldc           #15
1013: invokevirtual #13
1016: dconst_0
1017: invokevirtual #60
1020: ldc           #12
1022: invokevirtual #13
1025: invokevirtual #16
1028: dload         33
1030: dconst_0
1031: dcmpl
1032: ifne          1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #17
1043: new           #10
1046: dup
1047: invokespecial #11
1050: ldc           #12
1052: invokevirtual #13
1055: dload         38
1057: invokevirtual #60
1060: ldc           #15
1062: invokevirtual #13
1065: dconst_0
1066: invokevirtual #60
1069: ldc           #12
1071: invokevirtual #13
1074: invokevirtual #16
1077: dload         38
1079: dconst_0
1080: dcmpl
1081: ifne          1088
1084: iconst_1
1085: goto          1089
1088: iconst_0
1089: invokestatic  #17
1092: new           #10
1095: dup
1096: invokespecial #11
1099: ldc           #12
1101: invokevirtual #13
1104: dload         40
1106: invokevirtual #60
1109: ldc           #15
1111: invokevirtual #13
1114: dconst_0
1115: invokevirtual #60
1118: ldc           #12
1120: invokevirtual #13
1123: invokevirtual #16
1126: dload         40
1128: dconst_0
1129: dcmpl
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #17
1141: new           #10
1144: dup
1145: invokespecial #11
1148: ldc           #12
1150: invokevirtual #13
1153: iload         42
1155: invokevirtual #14
1158: ldc           #15
1160: invokevirtual #13
1163: iconst_0
1164: invokevirtual #14
1167: ldc           #12
1169: invokevirtual #13
1172: invokevirtual #16
1175: iload         42
1177: ifne          1184
1180: iconst_1
1181: goto          1185
1184: iconst_0
1185: invokestatic  #17
1188: new           #10
1191: dup
1192: invokespecial #11
1195: ldc           #12
1197: invokevirtual #13
1200: dload         43
1202: invokevirtual #60
1205: ldc           #15
1207: invokevirtual #13
1210: dconst_0
1211: invokevirtual #60
1214: ldc           #12
1216: invokevirtual #13
1219: invokevirtual #16
1222: dload         43
1224: dconst_0
1225: dcmpl
1226: ifne          1233
1229: iconst_1
1230: goto          1234
1233: iconst_0
1234: invokestatic  #17
1237: aload         45
1239: invokestatic  #33
1242: new           #10
1245: dup
1246: invokespecial #11
1249: ldc           #12
1251: invokevirtual #13
1254: dload         48
1256: invokevirtual #60
1259: ldc           #15
1261: invokevirtual #13
1264: dconst_0
1265: invokevirtual #60
1268: ldc           #12
1270: invokevirtual #13
1273: invokevirtual #16
1276: dload         48
1278: dconst_0
1279: dcmpl
1280: ifne          1287
1283: iconst_1
1284: goto          1288
1287: iconst_0
1288: invokestatic  #17
1291: aload         50
1293: invokestatic  #33
1296: aload         51
1298: invokestatic  #33
1301: aload         53
1303: invokestatic  #33
1306: aload         55
1308: invokestatic  #33
1311: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 4315
End line: 4319
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 1.8189894E-12f, (double) (byte) 0, (double) 2L, 0.9286091799025756d, true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #385
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #386
32: dconst_0
33: ldc2_w        #210
36: ldc2_w        #388
39: iconst_1
40: invokespecial #150
43: astore_1
44: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 4322
End line: 4392
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double7 = vector3D3.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D6);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double14 = vector3D10.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        double double15 = vector3D13.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = vector3D21.getDelta();
        double double24 = vector3D13.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double34 = vector3D30.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        double double35 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D27, vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        boolean boolean47 = vector3D38.isInfinite();
        double double48 = vector3D27.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = vector3D38.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D49.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = vector3D13.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = vector3D6.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double63 = vector3D62.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector64 = vector3D57.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation66 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D62, 3.6535299896840334E43d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(363.7393755555636d, (double) 1.0795744E9f, (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(2.1856605344040803E-4d, vector3D62, 132.0d, vector3D69, (double) (-18), vector3D71, 2349.1269600363753d, vector3D76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7345682747147468d + "'", double15 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.7345682747147468d + "'", double23 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0000000000000002d + "'", double59 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.6702668260599606d + "'", double63 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector64);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: getstatic     #314
392: astore        50
394: aload         50
396: invokevirtual #54
399: astore        51
401: aconst_null
402: astore        52
404: new           #43
407: dup
408: ldc2_w        #391
411: ldc2_w        #303
414: dconst_0
415: invokespecial #97
418: astore        53
420: new           #43
423: dup
424: ldc2_w        #393
427: aload         45
429: ldc2_w        #235
432: aload         51
434: ldc2_w        #395
437: aload         52
439: ldc2_w        #216
442: aload         53
444: invokespecial #397
447: astore        54
449: ldc           #20
451: invokestatic  #21
454: goto          459
457: astore        54
459: new           #10
462: dup
463: invokespecial #11
466: ldc           #12
468: invokevirtual #13
471: dload_3
472: invokevirtual #60
475: ldc           #15
477: invokevirtual #13
480: dconst_0
481: invokevirtual #60
484: ldc           #12
486: invokevirtual #13
489: invokevirtual #16
492: dload_3
493: dconst_0
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #17
506: new           #10
509: dup
510: invokespecial #11
513: ldc           #12
515: invokevirtual #13
518: dload         7
520: invokevirtual #60
523: ldc           #15
525: invokevirtual #13
528: dconst_0
529: invokevirtual #60
532: ldc           #12
534: invokevirtual #13
537: invokevirtual #16
540: dload         7
542: dconst_0
543: dcmpl
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #17
555: new           #10
558: dup
559: invokespecial #11
562: ldc           #12
564: invokevirtual #13
567: dload         9
569: invokevirtual #60
572: ldc           #15
574: invokevirtual #13
577: ldc2_w        #61
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         9
593: ldc2_w        #61
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #17
608: new           #10
611: dup
612: invokespecial #11
615: ldc           #12
617: invokevirtual #13
620: dload         13
622: invokevirtual #60
625: ldc           #15
627: invokevirtual #13
630: dconst_0
631: invokevirtual #60
634: ldc           #12
636: invokevirtual #13
639: invokevirtual #16
642: dload         13
644: dconst_0
645: dcmpl
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #17
657: new           #10
660: dup
661: invokespecial #11
664: ldc           #12
666: invokevirtual #13
669: dload         15
671: invokevirtual #60
674: ldc           #15
676: invokevirtual #13
679: ldc2_w        #61
682: invokevirtual #60
685: ldc           #12
687: invokevirtual #13
690: invokevirtual #16
693: dload         15
695: ldc2_w        #61
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: new           #10
713: dup
714: invokespecial #11
717: ldc           #12
719: invokevirtual #13
722: dload         17
724: invokevirtual #60
727: ldc           #15
729: invokevirtual #13
732: dconst_0
733: invokevirtual #60
736: ldc           #12
738: invokevirtual #13
741: invokevirtual #16
744: dload         17
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: new           #10
762: dup
763: invokespecial #11
766: ldc           #12
768: invokevirtual #13
771: dload         22
773: invokevirtual #60
776: ldc           #15
778: invokevirtual #13
781: dconst_0
782: invokevirtual #60
785: ldc           #12
787: invokevirtual #13
790: invokevirtual #16
793: dload         22
795: dconst_0
796: dcmpl
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #17
808: new           #10
811: dup
812: invokespecial #11
815: ldc           #12
817: invokevirtual #13
820: dload         24
822: invokevirtual #60
825: ldc           #15
827: invokevirtual #13
830: dconst_0
831: invokevirtual #60
834: ldc           #12
836: invokevirtual #13
839: invokevirtual #16
842: dload         24
844: dconst_0
845: dcmpl
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #17
857: new           #10
860: dup
861: invokespecial #11
864: ldc           #12
866: invokevirtual #13
869: dload         29
871: invokevirtual #60
874: ldc           #15
876: invokevirtual #13
879: dconst_0
880: invokevirtual #60
883: ldc           #12
885: invokevirtual #13
888: invokevirtual #16
891: dload         29
893: dconst_0
894: dcmpl
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #17
906: new           #10
909: dup
910: invokespecial #11
913: ldc           #12
915: invokevirtual #13
918: dload         31
920: invokevirtual #60
923: ldc           #15
925: invokevirtual #13
928: dconst_0
929: invokevirtual #60
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: dload         31
942: dconst_0
943: dcmpl
944: ifne          951
947: iconst_1
948: goto          952
951: iconst_0
952: invokestatic  #17
955: new           #10
958: dup
959: invokespecial #11
962: ldc           #12
964: invokevirtual #13
967: iload         33
969: invokevirtual #14
972: ldc           #15
974: invokevirtual #13
977: iconst_0
978: invokevirtual #14
981: ldc           #12
983: invokevirtual #13
986: invokevirtual #16
989: iload         33
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #17
1002: new           #10
1005: dup
1006: invokespecial #11
1009: ldc           #12
1011: invokevirtual #13
1014: dload         34
1016: invokevirtual #60
1019: ldc           #15
1021: invokevirtual #13
1024: dconst_0
1025: invokevirtual #60
1028: ldc           #12
1030: invokevirtual #13
1033: invokevirtual #16
1036: dload         34
1038: dconst_0
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #17
1051: aload         36
1053: invokestatic  #33
1056: new           #10
1059: dup
1060: invokespecial #11
1063: ldc           #12
1065: invokevirtual #13
1068: dload         39
1070: invokevirtual #60
1073: ldc           #15
1075: invokevirtual #13
1078: dconst_0
1079: invokevirtual #60
1082: ldc           #12
1084: invokevirtual #13
1087: invokevirtual #16
1090: dload         39
1092: dconst_0
1093: dcmpl
1094: ifne          1101
1097: iconst_1
1098: goto          1102
1101: iconst_0
1102: invokestatic  #17
1105: aload         41
1107: invokestatic  #33
1110: aload         42
1112: invokestatic  #33
1115: new           #10
1118: dup
1119: invokespecial #11
1122: ldc           #12
1124: invokevirtual #13
1127: dload         43
1129: invokevirtual #60
1132: ldc           #15
1134: invokevirtual #13
1137: ldc2_w        #63
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         43
1153: ldc2_w        #63
1156: dcmpl
1157: ifne          1164
1160: iconst_1
1161: goto          1165
1164: iconst_0
1165: invokestatic  #17
1168: new           #10
1171: dup
1172: invokespecial #11
1175: ldc           #12
1177: invokevirtual #13
1180: dload         46
1182: invokevirtual #60
1185: ldc           #15
1187: invokevirtual #13
1190: ldc2_w        #79
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         46
1206: ldc2_w        #79
1209: dcmpl
1210: ifne          1217
1213: iconst_1
1214: goto          1218
1217: iconst_0
1218: invokestatic  #17
1221: aload         48
1223: invokestatic  #33
1226: aload         50
1228: invokestatic  #33
1231: aload         51
1233: invokestatic  #33
1236: return
Exception table:
from    to  target type
420   454   457   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 4395
End line: 4401
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #240
48: dstore_2
49: dload_2
50: invokestatic  #242
53: invokestatic  #243
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 4404
End line: 4408
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((-3.8708399E8d), (double) 98L, 0.6405902461256647d, (-4.9E-324d), false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #400
32: ldc2_w        #402
35: ldc2_w        #404
38: ldc2_w        #406
41: iconst_0
42: invokespecial #150
45: astore_1
46: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 4411
End line: 4422
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 3.332894621696E12d, 1.0365302901348903d, (double) 1.8189894E-12f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #409
35: ldc2_w        #411
38: ldc2_w        #386
41: invokespecial #81
44: astore_2
45: ldc           #20
47: invokestatic  #21
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
27    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 4425
End line: 4516
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation85.applyTo(vector3D94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #43
525: dup
526: dconst_0
527: ldc2_w        #68
530: ldc2_w        #70
533: invokespecial #97
536: astore        70
538: aload         64
540: aload         70
542: invokevirtual #98
545: astore        71
547: aconst_null
548: astore        72
550: aload         64
552: aload         72
554: invokevirtual #140
557: astore        73
559: ldc           #20
561: invokestatic  #21
564: goto          569
567: astore        73
569: new           #10
572: dup
573: invokespecial #11
576: ldc           #12
578: invokevirtual #13
581: dload         4
583: invokevirtual #60
586: ldc           #15
588: invokevirtual #13
591: dconst_0
592: invokevirtual #60
595: ldc           #12
597: invokevirtual #13
600: invokevirtual #16
603: dload         4
605: dconst_0
606: dcmpl
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #17
618: new           #10
621: dup
622: invokespecial #11
625: ldc           #12
627: invokevirtual #13
630: dload         6
632: invokevirtual #60
635: ldc           #15
637: invokevirtual #13
640: dconst_0
641: invokevirtual #60
644: ldc           #12
646: invokevirtual #13
649: invokevirtual #16
652: dload         6
654: dconst_0
655: dcmpl
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #17
667: new           #10
670: dup
671: invokespecial #11
674: ldc           #12
676: invokevirtual #13
679: dload         11
681: invokevirtual #60
684: ldc           #15
686: invokevirtual #13
689: dconst_0
690: invokevirtual #60
693: ldc           #12
695: invokevirtual #13
698: invokevirtual #16
701: dload         11
703: dconst_0
704: dcmpl
705: ifne          712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #17
716: new           #10
719: dup
720: invokespecial #11
723: ldc           #12
725: invokevirtual #13
728: dload         13
730: invokevirtual #60
733: ldc           #15
735: invokevirtual #13
738: dconst_0
739: invokevirtual #60
742: ldc           #12
744: invokevirtual #13
747: invokevirtual #16
750: dload         13
752: dconst_0
753: dcmpl
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #17
765: new           #10
768: dup
769: invokespecial #11
772: ldc           #12
774: invokevirtual #13
777: iload         15
779: invokevirtual #14
782: ldc           #15
784: invokevirtual #13
787: iconst_0
788: invokevirtual #14
791: ldc           #12
793: invokevirtual #13
796: invokevirtual #16
799: iload         15
801: ifne          808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #17
812: new           #10
815: dup
816: invokespecial #11
819: ldc           #12
821: invokevirtual #13
824: dload         16
826: invokevirtual #60
829: ldc           #15
831: invokevirtual #13
834: dconst_0
835: invokevirtual #60
838: ldc           #12
840: invokevirtual #13
843: invokevirtual #16
846: dload         16
848: dconst_0
849: dcmpl
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #17
861: aload         18
863: invokestatic  #33
866: new           #10
869: dup
870: invokespecial #11
873: ldc           #12
875: invokevirtual #13
878: dload         21
880: invokevirtual #60
883: ldc           #15
885: invokevirtual #13
888: dconst_0
889: invokevirtual #60
892: ldc           #12
894: invokevirtual #13
897: invokevirtual #16
900: dload         21
902: dconst_0
903: dcmpl
904: ifne          911
907: iconst_1
908: goto          912
911: iconst_0
912: invokestatic  #17
915: new           #10
918: dup
919: invokespecial #11
922: ldc           #12
924: invokevirtual #13
927: dload         25
929: invokevirtual #60
932: ldc           #15
934: invokevirtual #13
937: dconst_0
938: invokevirtual #60
941: ldc           #12
943: invokevirtual #13
946: invokevirtual #16
949: dload         25
951: dconst_0
952: dcmpl
953: ifne          960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #17
964: new           #10
967: dup
968: invokespecial #11
971: ldc           #12
973: invokevirtual #13
976: dload         27
978: invokevirtual #60
981: ldc           #15
983: invokevirtual #13
986: ldc2_w        #61
989: invokevirtual #60
992: ldc           #12
994: invokevirtual #13
997: invokevirtual #16
1000: dload         27
1002: ldc2_w        #61
1005: dcmpl
1006: ifne          1013
1009: iconst_1
1010: goto          1014
1013: iconst_0
1014: invokestatic  #17
1017: new           #10
1020: dup
1021: invokespecial #11
1024: ldc           #12
1026: invokevirtual #13
1029: dload         31
1031: invokevirtual #60
1034: ldc           #15
1036: invokevirtual #13
1039: dconst_0
1040: invokevirtual #60
1043: ldc           #12
1045: invokevirtual #13
1048: invokevirtual #16
1051: dload         31
1053: dconst_0
1054: dcmpl
1055: ifne          1062
1058: iconst_1
1059: goto          1063
1062: iconst_0
1063: invokestatic  #17
1066: new           #10
1069: dup
1070: invokespecial #11
1073: ldc           #12
1075: invokevirtual #13
1078: dload         33
1080: invokevirtual #60
1083: ldc           #15
1085: invokevirtual #13
1088: ldc2_w        #61
1091: invokevirtual #60
1094: ldc           #12
1096: invokevirtual #13
1099: invokevirtual #16
1102: dload         33
1104: ldc2_w        #61
1107: dcmpl
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #17
1119: new           #10
1122: dup
1123: invokespecial #11
1126: ldc           #12
1128: invokevirtual #13
1131: dload         35
1133: invokevirtual #60
1136: ldc           #15
1138: invokevirtual #13
1141: dconst_0
1142: invokevirtual #60
1145: ldc           #12
1147: invokevirtual #13
1150: invokevirtual #16
1153: dload         35
1155: dconst_0
1156: dcmpl
1157: ifne          1164
1160: iconst_1
1161: goto          1165
1164: iconst_0
1165: invokestatic  #17
1168: new           #10
1171: dup
1172: invokespecial #11
1175: ldc           #12
1177: invokevirtual #13
1180: dload         40
1182: invokevirtual #60
1185: ldc           #15
1187: invokevirtual #13
1190: dconst_0
1191: invokevirtual #60
1194: ldc           #12
1196: invokevirtual #13
1199: invokevirtual #16
1202: dload         40
1204: dconst_0
1205: dcmpl
1206: ifne          1213
1209: iconst_1
1210: goto          1214
1213: iconst_0
1214: invokestatic  #17
1217: new           #10
1220: dup
1221: invokespecial #11
1224: ldc           #12
1226: invokevirtual #13
1229: dload         42
1231: invokevirtual #60
1234: ldc           #15
1236: invokevirtual #13
1239: dconst_0
1240: invokevirtual #60
1243: ldc           #12
1245: invokevirtual #13
1248: invokevirtual #16
1251: dload         42
1253: dconst_0
1254: dcmpl
1255: ifne          1262
1258: iconst_1
1259: goto          1263
1262: iconst_0
1263: invokestatic  #17
1266: new           #10
1269: dup
1270: invokespecial #11
1273: ldc           #12
1275: invokevirtual #13
1278: dload         47
1280: invokevirtual #60
1283: ldc           #15
1285: invokevirtual #13
1288: dconst_0
1289: invokevirtual #60
1292: ldc           #12
1294: invokevirtual #13
1297: invokevirtual #16
1300: dload         47
1302: dconst_0
1303: dcmpl
1304: ifne          1311
1307: iconst_1
1308: goto          1312
1311: iconst_0
1312: invokestatic  #17
1315: new           #10
1318: dup
1319: invokespecial #11
1322: ldc           #12
1324: invokevirtual #13
1327: dload         49
1329: invokevirtual #60
1332: ldc           #15
1334: invokevirtual #13
1337: dconst_0
1338: invokevirtual #60
1341: ldc           #12
1343: invokevirtual #13
1346: invokevirtual #16
1349: dload         49
1351: dconst_0
1352: dcmpl
1353: ifne          1360
1356: iconst_1
1357: goto          1361
1360: iconst_0
1361: invokestatic  #17
1364: new           #10
1367: dup
1368: invokespecial #11
1371: ldc           #12
1373: invokevirtual #13
1376: iload         51
1378: invokevirtual #14
1381: ldc           #15
1383: invokevirtual #13
1386: iconst_0
1387: invokevirtual #14
1390: ldc           #12
1392: invokevirtual #13
1395: invokevirtual #16
1398: iload         51
1400: ifne          1407
1403: iconst_1
1404: goto          1408
1407: iconst_0
1408: invokestatic  #17
1411: new           #10
1414: dup
1415: invokespecial #11
1418: ldc           #12
1420: invokevirtual #13
1423: dload         52
1425: invokevirtual #60
1428: ldc           #15
1430: invokevirtual #13
1433: dconst_0
1434: invokevirtual #60
1437: ldc           #12
1439: invokevirtual #13
1442: invokevirtual #16
1445: dload         52
1447: dconst_0
1448: dcmpl
1449: ifne          1456
1452: iconst_1
1453: goto          1457
1456: iconst_0
1457: invokestatic  #17
1460: aload         54
1462: invokestatic  #33
1465: new           #10
1468: dup
1469: invokespecial #11
1472: ldc           #12
1474: invokevirtual #13
1477: dload         57
1479: invokevirtual #60
1482: ldc           #15
1484: invokevirtual #13
1487: dconst_0
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         57
1501: dconst_0
1502: dcmpl
1503: ifne          1510
1506: iconst_1
1507: goto          1511
1510: iconst_0
1511: invokestatic  #17
1514: aload         59
1516: invokestatic  #33
1519: aload         60
1521: invokestatic  #33
1524: new           #10
1527: dup
1528: invokespecial #11
1531: ldc           #12
1533: invokevirtual #13
1536: dload         61
1538: invokevirtual #60
1541: ldc           #15
1543: invokevirtual #13
1546: ldc2_w        #63
1549: invokevirtual #60
1552: ldc           #12
1554: invokevirtual #13
1557: invokevirtual #16
1560: dload         61
1562: ldc2_w        #63
1565: dcmpl
1566: ifne          1573
1569: iconst_1
1570: goto          1574
1573: iconst_0
1574: invokestatic  #17
1577: aload         64
1579: invokestatic  #33
1582: new           #10
1585: dup
1586: invokespecial #11
1589: ldc           #12
1591: invokevirtual #13
1594: dload         65
1596: invokevirtual #60
1599: ldc           #15
1601: invokevirtual #13
1604: dconst_0
1605: invokevirtual #60
1608: ldc           #12
1610: invokevirtual #13
1613: invokevirtual #16
1616: dload         65
1618: dconst_0
1619: dcmpl
1620: ifne          1627
1623: iconst_1
1624: goto          1628
1627: iconst_0
1628: invokestatic  #17
1631: new           #10
1634: dup
1635: invokespecial #11
1638: ldc           #12
1640: invokevirtual #13
1643: dload         67
1645: invokevirtual #60
1648: ldc           #15
1650: invokevirtual #13
1653: dconst_0
1654: invokevirtual #60
1657: ldc           #12
1659: invokevirtual #13
1662: invokevirtual #16
1665: dload         67
1667: dconst_0
1668: dcmpl
1669: ifne          1676
1672: iconst_1
1673: goto          1677
1676: iconst_0
1677: invokestatic  #17
1680: aload         69
1682: invokestatic  #33
1685: aload         71
1687: invokestatic  #33
1690: return
Exception table:
from    to  target type
550   564   567   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 4519
End line: 4608
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation97.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-1.0d) + "'", double98 == (-1.0d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         74
567: invokevirtual #95
570: dstore        75
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         4
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         4
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         6
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         6
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         11
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         11
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: dload         13
733: invokevirtual #60
736: ldc           #15
738: invokevirtual #13
741: dconst_0
742: invokevirtual #60
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: dload         13
755: dconst_0
756: dcmpl
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: iload         15
782: invokevirtual #14
785: ldc           #15
787: invokevirtual #13
790: iconst_0
791: invokevirtual #14
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: iload         15
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         16
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: dconst_0
838: invokevirtual #60
841: ldc           #12
843: invokevirtual #13
846: invokevirtual #16
849: dload         16
851: dconst_0
852: dcmpl
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #17
864: aload         18
866: invokestatic  #33
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         21
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         21
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         25
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: dconst_0
941: invokevirtual #60
944: ldc           #12
946: invokevirtual #13
949: invokevirtual #16
952: dload         25
954: dconst_0
955: dcmpl
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #17
967: new           #10
970: dup
971: invokespecial #11
974: ldc           #12
976: invokevirtual #13
979: dload         27
981: invokevirtual #60
984: ldc           #15
986: invokevirtual #13
989: ldc2_w        #61
992: invokevirtual #60
995: ldc           #12
997: invokevirtual #13
1000: invokevirtual #16
1003: dload         27
1005: ldc2_w        #61
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         31
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: dconst_0
1043: invokevirtual #60
1046: ldc           #12
1048: invokevirtual #13
1051: invokevirtual #16
1054: dload         31
1056: dconst_0
1057: dcmpl
1058: ifne          1065
1061: iconst_1
1062: goto          1066
1065: iconst_0
1066: invokestatic  #17
1069: new           #10
1072: dup
1073: invokespecial #11
1076: ldc           #12
1078: invokevirtual #13
1081: dload         33
1083: invokevirtual #60
1086: ldc           #15
1088: invokevirtual #13
1091: ldc2_w        #61
1094: invokevirtual #60
1097: ldc           #12
1099: invokevirtual #13
1102: invokevirtual #16
1105: dload         33
1107: ldc2_w        #61
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         35
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         35
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         40
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         40
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         42
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         42
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         47
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         47
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: dload         49
1332: invokevirtual #60
1335: ldc           #15
1337: invokevirtual #13
1340: dconst_0
1341: invokevirtual #60
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: dload         49
1354: dconst_0
1355: dcmpl
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: iload         51
1381: invokevirtual #14
1384: ldc           #15
1386: invokevirtual #13
1389: iconst_0
1390: invokevirtual #14
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: iload         51
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: new           #10
1417: dup
1418: invokespecial #11
1421: ldc           #12
1423: invokevirtual #13
1426: dload         52
1428: invokevirtual #60
1431: ldc           #15
1433: invokevirtual #13
1436: dconst_0
1437: invokevirtual #60
1440: ldc           #12
1442: invokevirtual #13
1445: invokevirtual #16
1448: dload         52
1450: dconst_0
1451: dcmpl
1452: ifne          1459
1455: iconst_1
1456: goto          1460
1459: iconst_0
1460: invokestatic  #17
1463: aload         54
1465: invokestatic  #33
1468: new           #10
1471: dup
1472: invokespecial #11
1475: ldc           #12
1477: invokevirtual #13
1480: dload         57
1482: invokevirtual #60
1485: ldc           #15
1487: invokevirtual #13
1490: dconst_0
1491: invokevirtual #60
1494: ldc           #12
1496: invokevirtual #13
1499: invokevirtual #16
1502: dload         57
1504: dconst_0
1505: dcmpl
1506: ifne          1513
1509: iconst_1
1510: goto          1514
1513: iconst_0
1514: invokestatic  #17
1517: aload         59
1519: invokestatic  #33
1522: aload         60
1524: invokestatic  #33
1527: new           #10
1530: dup
1531: invokespecial #11
1534: ldc           #12
1536: invokevirtual #13
1539: dload         61
1541: invokevirtual #60
1544: ldc           #15
1546: invokevirtual #13
1549: ldc2_w        #63
1552: invokevirtual #60
1555: ldc           #12
1557: invokevirtual #13
1560: invokevirtual #16
1563: dload         61
1565: ldc2_w        #63
1568: dcmpl
1569: ifne          1576
1572: iconst_1
1573: goto          1577
1576: iconst_0
1577: invokestatic  #17
1580: aload         64
1582: invokestatic  #33
1585: new           #10
1588: dup
1589: invokespecial #11
1592: ldc           #12
1594: invokevirtual #13
1597: dload         65
1599: invokevirtual #60
1602: ldc           #15
1604: invokevirtual #13
1607: dconst_0
1608: invokevirtual #60
1611: ldc           #12
1613: invokevirtual #13
1616: invokevirtual #16
1619: dload         65
1621: dconst_0
1622: dcmpl
1623: ifne          1630
1626: iconst_1
1627: goto          1631
1630: iconst_0
1631: invokestatic  #17
1634: new           #10
1637: dup
1638: invokespecial #11
1641: ldc           #12
1643: invokevirtual #13
1646: dload         67
1648: invokevirtual #60
1651: ldc           #15
1653: invokevirtual #13
1656: dconst_0
1657: invokevirtual #60
1660: ldc           #12
1662: invokevirtual #13
1665: invokevirtual #16
1668: dload         67
1670: dconst_0
1671: dcmpl
1672: ifne          1679
1675: iconst_1
1676: goto          1680
1679: iconst_0
1680: invokestatic  #17
1683: aload         69
1685: invokestatic  #33
1688: aload         71
1690: invokestatic  #33
1693: new           #10
1696: dup
1697: invokespecial #11
1700: ldc           #12
1702: invokevirtual #13
1705: dload         72
1707: invokevirtual #60
1710: ldc           #15
1712: invokevirtual #13
1715: ldc2_w        #148
1718: invokevirtual #60
1721: ldc           #12
1723: invokevirtual #13
1726: invokevirtual #16
1729: dload         72
1731: ldc2_w        #148
1734: dcmpl
1735: ifne          1742
1738: iconst_1
1739: goto          1743
1742: iconst_0
1743: invokestatic  #17
1746: aload         74
1748: invokestatic  #33
1751: new           #10
1754: dup
1755: invokespecial #11
1758: ldc           #12
1760: invokevirtual #13
1763: dload         75
1765: invokevirtual #60
1768: ldc           #15
1770: invokevirtual #13
1773: ldc2_w        #66
1776: invokevirtual #60
1779: ldc           #12
1781: invokevirtual #13
1784: invokevirtual #16
1787: dload         75
1789: ldc2_w        #66
1792: dcmpl
1793: ifne          1800
1796: iconst_1
1797: goto          1801
1800: iconst_0
1801: invokestatic  #17
1804: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 4611
End line: 4676
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = rotation65.getAxis();
        boolean boolean69 = vector3D67.equals((java.lang.Object) 4.624972813284271d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = vector3D67.orthogonal();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(vector3D70);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #415
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #139
394: dstore        50
396: aload         49
398: invokevirtual #96
401: astore        52
403: aload         52
405: ldc2_w        #416
408: invokestatic  #319
411: invokevirtual #302
414: istore        53
416: aload         52
418: invokevirtual #163
421: astore        54
423: new           #10
426: dup
427: invokespecial #11
430: ldc           #12
432: invokevirtual #13
435: dload_3
436: invokevirtual #60
439: ldc           #15
441: invokevirtual #13
444: dconst_0
445: invokevirtual #60
448: ldc           #12
450: invokevirtual #13
453: invokevirtual #16
456: dload_3
457: dconst_0
458: dcmpl
459: ifne          466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #17
470: new           #10
473: dup
474: invokespecial #11
477: ldc           #12
479: invokevirtual #13
482: dload         7
484: invokevirtual #60
487: ldc           #15
489: invokevirtual #13
492: dconst_0
493: invokevirtual #60
496: ldc           #12
498: invokevirtual #13
501: invokevirtual #16
504: dload         7
506: dconst_0
507: dcmpl
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #17
519: new           #10
522: dup
523: invokespecial #11
526: ldc           #12
528: invokevirtual #13
531: dload         9
533: invokevirtual #60
536: ldc           #15
538: invokevirtual #13
541: ldc2_w        #61
544: invokevirtual #60
547: ldc           #12
549: invokevirtual #13
552: invokevirtual #16
555: dload         9
557: ldc2_w        #61
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #17
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         13
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         13
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         15
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: ldc2_w        #61
646: invokevirtual #60
649: ldc           #12
651: invokevirtual #13
654: invokevirtual #16
657: dload         15
659: ldc2_w        #61
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: new           #10
677: dup
678: invokespecial #11
681: ldc           #12
683: invokevirtual #13
686: dload         17
688: invokevirtual #60
691: ldc           #15
693: invokevirtual #13
696: dconst_0
697: invokevirtual #60
700: ldc           #12
702: invokevirtual #13
705: invokevirtual #16
708: dload         17
710: dconst_0
711: dcmpl
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #17
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: dload         22
737: invokevirtual #60
740: ldc           #15
742: invokevirtual #13
745: dconst_0
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         22
759: dconst_0
760: dcmpl
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         24
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: dconst_0
795: invokevirtual #60
798: ldc           #12
800: invokevirtual #13
803: invokevirtual #16
806: dload         24
808: dconst_0
809: dcmpl
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: new           #10
824: dup
825: invokespecial #11
828: ldc           #12
830: invokevirtual #13
833: dload         29
835: invokevirtual #60
838: ldc           #15
840: invokevirtual #13
843: dconst_0
844: invokevirtual #60
847: ldc           #12
849: invokevirtual #13
852: invokevirtual #16
855: dload         29
857: dconst_0
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #17
870: new           #10
873: dup
874: invokespecial #11
877: ldc           #12
879: invokevirtual #13
882: dload         31
884: invokevirtual #60
887: ldc           #15
889: invokevirtual #13
892: dconst_0
893: invokevirtual #60
896: ldc           #12
898: invokevirtual #13
901: invokevirtual #16
904: dload         31
906: dconst_0
907: dcmpl
908: ifne          915
911: iconst_1
912: goto          916
915: iconst_0
916: invokestatic  #17
919: new           #10
922: dup
923: invokespecial #11
926: ldc           #12
928: invokevirtual #13
931: iload         33
933: invokevirtual #14
936: ldc           #15
938: invokevirtual #13
941: iconst_0
942: invokevirtual #14
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: iload         33
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         34
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: dconst_0
989: invokevirtual #60
992: ldc           #12
994: invokevirtual #13
997: invokevirtual #16
1000: dload         34
1002: dconst_0
1003: dcmpl
1004: ifne          1011
1007: iconst_1
1008: goto          1012
1011: iconst_0
1012: invokestatic  #17
1015: aload         36
1017: invokestatic  #33
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         39
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: dconst_0
1043: invokevirtual #60
1046: ldc           #12
1048: invokevirtual #13
1051: invokevirtual #16
1054: dload         39
1056: dconst_0
1057: dcmpl
1058: ifne          1065
1061: iconst_1
1062: goto          1066
1065: iconst_0
1066: invokestatic  #17
1069: aload         41
1071: invokestatic  #33
1074: aload         42
1076: invokestatic  #33
1079: new           #10
1082: dup
1083: invokespecial #11
1086: ldc           #12
1088: invokevirtual #13
1091: dload         43
1093: invokevirtual #60
1096: ldc           #15
1098: invokevirtual #13
1101: ldc2_w        #63
1104: invokevirtual #60
1107: ldc           #12
1109: invokevirtual #13
1112: invokevirtual #16
1115: dload         43
1117: ldc2_w        #63
1120: dcmpl
1121: ifne          1128
1124: iconst_1
1125: goto          1129
1128: iconst_0
1129: invokestatic  #17
1132: new           #10
1135: dup
1136: invokespecial #11
1139: ldc           #12
1141: invokevirtual #13
1144: dload         46
1146: invokevirtual #60
1149: ldc           #15
1151: invokevirtual #13
1154: ldc2_w        #79
1157: invokevirtual #60
1160: ldc           #12
1162: invokevirtual #13
1165: invokevirtual #16
1168: dload         46
1170: ldc2_w        #79
1173: dcmpl
1174: ifne          1181
1177: iconst_1
1178: goto          1182
1181: iconst_0
1182: invokestatic  #17
1185: aload         48
1187: invokestatic  #33
1190: new           #10
1193: dup
1194: invokespecial #11
1197: ldc           #12
1199: invokevirtual #13
1202: dload         50
1204: invokevirtual #60
1207: ldc           #15
1209: invokevirtual #13
1212: ldc2_w        #141
1215: invokevirtual #60
1218: ldc           #12
1220: invokevirtual #13
1223: invokevirtual #16
1226: dload         50
1228: ldc2_w        #141
1231: dcmpl
1232: ifne          1239
1235: iconst_1
1236: goto          1240
1239: iconst_0
1240: invokestatic  #17
1243: aload         52
1245: invokestatic  #33
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: iload         53
1262: invokevirtual #14
1265: ldc           #15
1267: invokevirtual #13
1270: iconst_0
1271: invokevirtual #14
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: iload         53
1284: ifne          1291
1287: iconst_1
1288: goto          1292
1291: iconst_0
1292: invokestatic  #17
1295: aload         54
1297: invokestatic  #33
1300: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 4679
End line: 4735
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.POSITIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        java.text.NumberFormat numberFormat4 = null;
        java.lang.String str5 = vector3D3.toString(numberFormat4);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException11 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable7, (java.lang.Number) 0, (java.lang.Number) Double.NaN, true);
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException15 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10L, (java.lang.Number) 0.7345682747147467d, (int) (byte) 1);
        numberIsTooSmallException11.addSuppressed((java.lang.Throwable) nonMonotonousSequenceException15);
        java.lang.Throwable[] throwableArray17 = numberIsTooSmallException11.getSuppressed();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D3, localizable6, (java.lang.Object[]) throwableArray17);
        double double19 = vector3D3.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = vector3D1.add(2.220446049250313E-16d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D3);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        double double32 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D24, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double42 = vector3D38.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        double double43 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D35, vector3D41);
        boolean boolean44 = vector3D35.isInfinite();
        double double45 = vector3D24.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D35);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D21, vector3D35);
        double double47 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D35);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.05308358714605824d, vector3D35);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation54 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = rotation54.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = rotation54.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector57 = vector3D56.normalize();
        double double58 = vector3D48.distance1(euclidean3DVector57);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{(NaN); (NaN); (NaN)}" + "'", str5, "{(NaN); (NaN); (NaN)}");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + Double.POSITIVE_INFINITY + "'", double46 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(euclidean3DVector57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0900143064974794d + "'", double58 == 1.0900143064974794d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #313
28: astore_1
29: getstatic     #314
32: astore_2
33: aconst_null
34: astore_3
35: aload_2
36: aload_3
37: invokevirtual #166
40: astore        4
42: aconst_null
43: astore        5
45: aconst_null
46: astore        6
48: new           #315
51: dup
52: aload         6
54: iconst_0
55: invokestatic  #316
58: ldc2_w        #317
61: invokestatic  #319
64: iconst_1
65: invokespecial #320
68: astore        7
70: new           #321
73: dup
74: ldc2_w        #322
77: invokestatic  #324
80: ldc2_w        #44
83: invokestatic  #319
86: iconst_1
87: invokespecial #325
90: astore        8
92: aload         7
94: aload         8
96: invokevirtual #326
99: aload         7
101: invokevirtual #327
104: astore        9
106: aload_2
107: aload         5
109: aload         9
111: checkcast     #248
114: invokestatic  #328
117: aload_2
118: invokevirtual #111
121: dstore        10
123: aload_1
124: ldc2_w        #329
127: aload_2
128: invokevirtual #182
131: astore        12
133: getstatic     #126
136: astore        13
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        14
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        15
164: new           #43
167: dup
168: dconst_1
169: ldc2_w        #44
172: invokespecial #46
175: astore        16
177: aload         15
179: aload         16
181: invokevirtual #47
184: dstore        17
186: aload         14
188: aload         16
190: invokestatic  #48
193: dstore        19
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        21
208: new           #43
211: dup
212: dconst_1
213: ldc2_w        #44
216: invokespecial #46
219: astore        22
221: new           #43
224: dup
225: dconst_1
226: ldc2_w        #44
229: invokespecial #46
232: astore        23
234: aload         22
236: aload         23
238: invokevirtual #47
241: dstore        24
243: aload         21
245: aload         23
247: invokestatic  #48
250: dstore        26
252: aload         21
254: invokevirtual #49
257: istore        28
259: aload         14
261: aload         21
263: invokevirtual #50
266: dstore        29
268: aload         13
270: aload         21
272: invokestatic  #127
275: dstore        31
277: aload_2
278: aload         21
280: invokevirtual #50
283: dstore        33
285: new           #43
288: dup
289: ldc2_w        #419
292: aload         21
294: invokespecial #305
297: astore        35
299: new           #27
302: dup
303: ldc2_w        #146
306: ldc2_w        #72
309: ldc2_w        #148
312: dconst_1
313: iconst_0
314: invokespecial #150
317: astore        36
319: aload         36
321: invokevirtual #96
324: astore        37
326: aload         36
328: invokevirtual #96
331: astore        38
333: aload         38
335: invokevirtual #193
338: astore        39
340: aload         35
342: aload         39
344: invokevirtual #129
347: dstore        40
349: aload_1
350: invokestatic  #33
353: aload_2
354: invokestatic  #33
357: new           #10
360: dup
361: invokespecial #11
364: ldc           #12
366: invokevirtual #13
369: aload         4
371: invokevirtual #13
374: ldc_w         #333
377: invokevirtual #13
380: invokevirtual #16
383: aload         4
385: ldc_w         #334
388: invokestatic  #335
391: aload         9
393: invokestatic  #33
396: dload         10
398: invokestatic  #242
401: invokestatic  #243
404: aload         12
406: invokestatic  #33
409: aload         13
411: invokestatic  #33
414: new           #10
417: dup
418: invokespecial #11
421: ldc           #12
423: invokevirtual #13
426: dload         17
428: invokevirtual #60
431: ldc           #15
433: invokevirtual #13
436: dconst_0
437: invokevirtual #60
440: ldc           #12
442: invokevirtual #13
445: invokevirtual #16
448: dload         17
450: dconst_0
451: dcmpl
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #17
463: new           #10
466: dup
467: invokespecial #11
470: ldc           #12
472: invokevirtual #13
475: dload         19
477: invokevirtual #60
480: ldc           #15
482: invokevirtual #13
485: dconst_0
486: invokevirtual #60
489: ldc           #12
491: invokevirtual #13
494: invokevirtual #16
497: dload         19
499: dconst_0
500: dcmpl
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #17
512: new           #10
515: dup
516: invokespecial #11
519: ldc           #12
521: invokevirtual #13
524: dload         24
526: invokevirtual #60
529: ldc           #15
531: invokevirtual #13
534: dconst_0
535: invokevirtual #60
538: ldc           #12
540: invokevirtual #13
543: invokevirtual #16
546: dload         24
548: dconst_0
549: dcmpl
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #17
561: new           #10
564: dup
565: invokespecial #11
568: ldc           #12
570: invokevirtual #13
573: dload         26
575: invokevirtual #60
578: ldc           #15
580: invokevirtual #13
583: dconst_0
584: invokevirtual #60
587: ldc           #12
589: invokevirtual #13
592: invokevirtual #16
595: dload         26
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #17
610: new           #10
613: dup
614: invokespecial #11
617: ldc           #12
619: invokevirtual #13
622: iload         28
624: invokevirtual #14
627: ldc           #15
629: invokevirtual #13
632: iconst_0
633: invokevirtual #14
636: ldc           #12
638: invokevirtual #13
641: invokevirtual #16
644: iload         28
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #17
657: new           #10
660: dup
661: invokespecial #11
664: ldc           #12
666: invokevirtual #13
669: dload         29
671: invokevirtual #60
674: ldc           #15
676: invokevirtual #13
679: dconst_0
680: invokevirtual #60
683: ldc           #12
685: invokevirtual #13
688: invokevirtual #16
691: dload         29
693: dconst_0
694: dcmpl
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #17
706: new           #10
709: dup
710: invokespecial #11
713: ldc           #12
715: invokevirtual #13
718: dload         31
720: invokevirtual #60
723: ldc           #15
725: invokevirtual #13
728: ldc2_w        #133
731: invokevirtual #60
734: ldc           #12
736: invokevirtual #13
739: invokevirtual #16
742: dload         31
744: ldc2_w        #133
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: dload         33
761: invokestatic  #242
764: invokestatic  #243
767: aload         37
769: invokestatic  #33
772: aload         38
774: invokestatic  #33
777: aload         39
779: invokestatic  #33
782: new           #10
785: dup
786: invokespecial #11
789: ldc           #12
791: invokevirtual #13
794: dload         40
796: invokevirtual #60
799: ldc           #15
801: invokevirtual #13
804: ldc2_w        #421
807: invokevirtual #60
810: ldc           #12
812: invokevirtual #13
815: invokevirtual #16
818: dload         40
820: ldc2_w        #421
823: dcmpl
824: ifne          831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #17
835: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 4738
End line: 4809
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D25.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = vector3D28.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D28, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D39, vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D58.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double63 = vector3D61.getDelta();
        double double64 = vector3D53.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double65 = vector3D45.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector66 = vector3D45.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = vector3D28.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = rotation0.applyTo(vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder69 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray70 = rotation0.getAngles(rotationOrder69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotation0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.7345682747147468d + "'", double63 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #309
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         20
200: invokevirtual #55
203: astore        24
205: aload         20
207: invokevirtual #193
210: astore        25
212: new           #27
215: dup
216: aload         20
218: ldc2_w        #259
221: invokespecial #103
224: astore        26
226: new           #43
229: dup
230: dconst_1
231: ldc2_w        #44
234: invokespecial #46
237: astore        27
239: new           #43
242: dup
243: dconst_1
244: ldc2_w        #44
247: invokespecial #46
250: astore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        29
265: aload         28
267: aload         29
269: invokevirtual #47
272: dstore        30
274: aload         27
276: aload         29
278: invokestatic  #48
281: dstore        32
283: new           #43
286: dup
287: dconst_1
288: ldc2_w        #44
291: invokespecial #46
294: astore        34
296: new           #43
299: dup
300: dconst_1
301: ldc2_w        #44
304: invokespecial #46
307: astore        35
309: aload         34
311: aload         35
313: invokevirtual #47
316: dstore        36
318: aload         35
320: invokevirtual #52
323: dstore        38
325: new           #43
328: dup
329: dconst_1
330: ldc2_w        #44
333: invokespecial #46
336: astore        40
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        41
351: aload         40
353: aload         41
355: invokevirtual #47
358: dstore        42
360: aload         41
362: invokevirtual #52
365: dstore        44
367: aload         35
369: aload         41
371: invokevirtual #53
374: dstore        46
376: aload         29
378: aload         35
380: invokevirtual #129
383: dstore        48
385: aload         29
387: invokevirtual #193
390: astore        50
392: aload         20
394: aload         29
396: invokevirtual #55
399: astore        51
401: aload_1
402: aload         20
404: invokevirtual #140
407: astore        52
409: aconst_null
410: astore        53
412: aload_1
413: aload         53
415: invokevirtual #57
418: astore        54
420: ldc           #58
422: invokestatic  #21
425: goto          430
428: astore        54
430: aload_1
431: invokestatic  #33
434: new           #10
437: dup
438: invokespecial #11
441: ldc           #12
443: invokevirtual #13
446: dload         5
448: invokevirtual #60
451: ldc           #15
453: invokevirtual #13
456: dconst_0
457: invokevirtual #60
460: ldc           #12
462: invokevirtual #13
465: invokevirtual #16
468: dload         5
470: dconst_0
471: dcmpl
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #17
483: new           #10
486: dup
487: invokespecial #11
490: ldc           #12
492: invokevirtual #13
495: dload         7
497: invokevirtual #60
500: ldc           #15
502: invokevirtual #13
505: dconst_0
506: invokevirtual #60
509: ldc           #12
511: invokevirtual #13
514: invokevirtual #16
517: dload         7
519: dconst_0
520: dcmpl
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #17
532: new           #10
535: dup
536: invokespecial #11
539: ldc           #12
541: invokevirtual #13
544: dload         12
546: invokevirtual #60
549: ldc           #15
551: invokevirtual #13
554: dconst_0
555: invokevirtual #60
558: ldc           #12
560: invokevirtual #13
563: invokevirtual #16
566: dload         12
568: dconst_0
569: dcmpl
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #17
581: new           #10
584: dup
585: invokespecial #11
588: ldc           #12
590: invokevirtual #13
593: dload         14
595: invokevirtual #60
598: ldc           #15
600: invokevirtual #13
603: dconst_0
604: invokevirtual #60
607: ldc           #12
609: invokevirtual #13
612: invokevirtual #16
615: dload         14
617: dconst_0
618: dcmpl
619: ifne          626
622: iconst_1
623: goto          627
626: iconst_0
627: invokestatic  #17
630: new           #10
633: dup
634: invokespecial #11
637: ldc           #12
639: invokevirtual #13
642: iload         16
644: invokevirtual #14
647: ldc           #15
649: invokevirtual #13
652: iconst_0
653: invokevirtual #14
656: ldc           #12
658: invokevirtual #13
661: invokevirtual #16
664: iload         16
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         17
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         17
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: aload         19
728: invokestatic  #33
731: new           #10
734: dup
735: invokespecial #11
738: ldc           #12
740: invokevirtual #13
743: dload         22
745: invokevirtual #60
748: ldc           #15
750: invokevirtual #13
753: dconst_0
754: invokevirtual #60
757: ldc           #12
759: invokevirtual #13
762: invokevirtual #16
765: dload         22
767: dconst_0
768: dcmpl
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #17
780: aload         24
782: invokestatic  #33
785: aload         25
787: invokestatic  #33
790: new           #10
793: dup
794: invokespecial #11
797: ldc           #12
799: invokevirtual #13
802: dload         30
804: invokevirtual #60
807: ldc           #15
809: invokevirtual #13
812: dconst_0
813: invokevirtual #60
816: ldc           #12
818: invokevirtual #13
821: invokevirtual #16
824: dload         30
826: dconst_0
827: dcmpl
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #17
839: new           #10
842: dup
843: invokespecial #11
846: ldc           #12
848: invokevirtual #13
851: dload         32
853: invokevirtual #60
856: ldc           #15
858: invokevirtual #13
861: dconst_0
862: invokevirtual #60
865: ldc           #12
867: invokevirtual #13
870: invokevirtual #16
873: dload         32
875: dconst_0
876: dcmpl
877: ifne          884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #17
888: new           #10
891: dup
892: invokespecial #11
895: ldc           #12
897: invokevirtual #13
900: dload         36
902: invokevirtual #60
905: ldc           #15
907: invokevirtual #13
910: dconst_0
911: invokevirtual #60
914: ldc           #12
916: invokevirtual #13
919: invokevirtual #16
922: dload         36
924: dconst_0
925: dcmpl
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #17
937: new           #10
940: dup
941: invokespecial #11
944: ldc           #12
946: invokevirtual #13
949: dload         38
951: invokevirtual #60
954: ldc           #15
956: invokevirtual #13
959: ldc2_w        #61
962: invokevirtual #60
965: ldc           #12
967: invokevirtual #13
970: invokevirtual #16
973: dload         38
975: ldc2_w        #61
978: dcmpl
979: ifne          986
982: iconst_1
983: goto          987
986: iconst_0
987: invokestatic  #17
990: new           #10
993: dup
994: invokespecial #11
997: ldc           #12
999: invokevirtual #13
1002: dload         42
1004: invokevirtual #60
1007: ldc           #15
1009: invokevirtual #13
1012: dconst_0
1013: invokevirtual #60
1016: ldc           #12
1018: invokevirtual #13
1021: invokevirtual #16
1024: dload         42
1026: dconst_0
1027: dcmpl
1028: ifne          1035
1031: iconst_1
1032: goto          1036
1035: iconst_0
1036: invokestatic  #17
1039: new           #10
1042: dup
1043: invokespecial #11
1046: ldc           #12
1048: invokevirtual #13
1051: dload         44
1053: invokevirtual #60
1056: ldc           #15
1058: invokevirtual #13
1061: ldc2_w        #61
1064: invokevirtual #60
1067: ldc           #12
1069: invokevirtual #13
1072: invokevirtual #16
1075: dload         44
1077: ldc2_w        #61
1080: dcmpl
1081: ifne          1088
1084: iconst_1
1085: goto          1089
1088: iconst_0
1089: invokestatic  #17
1092: new           #10
1095: dup
1096: invokespecial #11
1099: ldc           #12
1101: invokevirtual #13
1104: dload         46
1106: invokevirtual #60
1109: ldc           #15
1111: invokevirtual #13
1114: dconst_0
1115: invokevirtual #60
1118: ldc           #12
1120: invokevirtual #13
1123: invokevirtual #16
1126: dload         46
1128: dconst_0
1129: dcmpl
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #17
1141: new           #10
1144: dup
1145: invokespecial #11
1148: ldc           #12
1150: invokevirtual #13
1153: dload         48
1155: invokevirtual #60
1158: ldc           #15
1160: invokevirtual #13
1163: dconst_0
1164: invokevirtual #60
1167: ldc           #12
1169: invokevirtual #13
1172: invokevirtual #16
1175: dload         48
1177: dconst_0
1178: dcmpl
1179: ifne          1186
1182: iconst_1
1183: goto          1187
1186: iconst_0
1187: invokestatic  #17
1190: aload         50
1192: invokestatic  #33
1195: aload         51
1197: invokestatic  #33
1200: aload         52
1202: invokestatic  #33
1205: return
Exception table:
from    to  target type
412   425   428   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 4812
End line: 4894
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(1.0795745269752887E11d);
        java.text.NumberFormat numberFormat87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = vector3D30.toString(numberFormat87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #424
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #425
499: invokevirtual #107
502: astore        64
504: aconst_null
505: astore        65
507: aload         20
509: aload         65
511: invokevirtual #166
514: astore        66
516: ldc           #20
518: invokestatic  #21
521: goto          526
524: astore        66
526: new           #10
529: dup
530: invokespecial #11
533: ldc           #12
535: invokevirtual #13
538: dload         4
540: invokevirtual #60
543: ldc           #15
545: invokevirtual #13
548: dconst_0
549: invokevirtual #60
552: ldc           #12
554: invokevirtual #13
557: invokevirtual #16
560: dload         4
562: dconst_0
563: dcmpl
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #17
575: new           #10
578: dup
579: invokespecial #11
582: ldc           #12
584: invokevirtual #13
587: dload         6
589: invokevirtual #60
592: ldc           #15
594: invokevirtual #13
597: dconst_0
598: invokevirtual #60
601: ldc           #12
603: invokevirtual #13
606: invokevirtual #16
609: dload         6
611: dconst_0
612: dcmpl
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #17
624: new           #10
627: dup
628: invokespecial #11
631: ldc           #12
633: invokevirtual #13
636: dload         11
638: invokevirtual #60
641: ldc           #15
643: invokevirtual #13
646: dconst_0
647: invokevirtual #60
650: ldc           #12
652: invokevirtual #13
655: invokevirtual #16
658: dload         11
660: dconst_0
661: dcmpl
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #17
673: new           #10
676: dup
677: invokespecial #11
680: ldc           #12
682: invokevirtual #13
685: dload         13
687: invokevirtual #60
690: ldc           #15
692: invokevirtual #13
695: dconst_0
696: invokevirtual #60
699: ldc           #12
701: invokevirtual #13
704: invokevirtual #16
707: dload         13
709: dconst_0
710: dcmpl
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #17
722: new           #10
725: dup
726: invokespecial #11
729: ldc           #12
731: invokevirtual #13
734: iload         15
736: invokevirtual #14
739: ldc           #15
741: invokevirtual #13
744: iconst_0
745: invokevirtual #14
748: ldc           #12
750: invokevirtual #13
753: invokevirtual #16
756: iload         15
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #17
769: new           #10
772: dup
773: invokespecial #11
776: ldc           #12
778: invokevirtual #13
781: dload         16
783: invokevirtual #60
786: ldc           #15
788: invokevirtual #13
791: dconst_0
792: invokevirtual #60
795: ldc           #12
797: invokevirtual #13
800: invokevirtual #16
803: dload         16
805: dconst_0
806: dcmpl
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #17
818: aload         18
820: invokestatic  #33
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         21
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: dconst_0
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         21
859: dconst_0
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         25
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         25
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         27
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: ldc2_w        #61
946: invokevirtual #60
949: ldc           #12
951: invokevirtual #13
954: invokevirtual #16
957: dload         27
959: ldc2_w        #61
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         31
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         31
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         33
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: ldc2_w        #61
1048: invokevirtual #60
1051: ldc           #12
1053: invokevirtual #13
1056: invokevirtual #16
1059: dload         33
1061: ldc2_w        #61
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         35
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: dconst_0
1099: invokevirtual #60
1102: ldc           #12
1104: invokevirtual #13
1107: invokevirtual #16
1110: dload         35
1112: dconst_0
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         40
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         40
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         42
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: dconst_0
1197: invokevirtual #60
1200: ldc           #12
1202: invokevirtual #13
1205: invokevirtual #16
1208: dload         42
1210: dconst_0
1211: dcmpl
1212: ifne          1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #17
1223: new           #10
1226: dup
1227: invokespecial #11
1230: ldc           #12
1232: invokevirtual #13
1235: dload         47
1237: invokevirtual #60
1240: ldc           #15
1242: invokevirtual #13
1245: dconst_0
1246: invokevirtual #60
1249: ldc           #12
1251: invokevirtual #13
1254: invokevirtual #16
1257: dload         47
1259: dconst_0
1260: dcmpl
1261: ifne          1268
1264: iconst_1
1265: goto          1269
1268: iconst_0
1269: invokestatic  #17
1272: new           #10
1275: dup
1276: invokespecial #11
1279: ldc           #12
1281: invokevirtual #13
1284: dload         49
1286: invokevirtual #60
1289: ldc           #15
1291: invokevirtual #13
1294: dconst_0
1295: invokevirtual #60
1298: ldc           #12
1300: invokevirtual #13
1303: invokevirtual #16
1306: dload         49
1308: dconst_0
1309: dcmpl
1310: ifne          1317
1313: iconst_1
1314: goto          1318
1317: iconst_0
1318: invokestatic  #17
1321: new           #10
1324: dup
1325: invokespecial #11
1328: ldc           #12
1330: invokevirtual #13
1333: iload         51
1335: invokevirtual #14
1338: ldc           #15
1340: invokevirtual #13
1343: iconst_0
1344: invokevirtual #14
1347: ldc           #12
1349: invokevirtual #13
1352: invokevirtual #16
1355: iload         51
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: dload         52
1382: invokevirtual #60
1385: ldc           #15
1387: invokevirtual #13
1390: dconst_0
1391: invokevirtual #60
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: dload         52
1404: dconst_0
1405: dcmpl
1406: ifne          1413
1409: iconst_1
1410: goto          1414
1413: iconst_0
1414: invokestatic  #17
1417: aload         54
1419: invokestatic  #33
1422: new           #10
1425: dup
1426: invokespecial #11
1429: ldc           #12
1431: invokevirtual #13
1434: dload         57
1436: invokevirtual #60
1439: ldc           #15
1441: invokevirtual #13
1444: dconst_0
1445: invokevirtual #60
1448: ldc           #12
1450: invokevirtual #13
1453: invokevirtual #16
1456: dload         57
1458: dconst_0
1459: dcmpl
1460: ifne          1467
1463: iconst_1
1464: goto          1468
1467: iconst_0
1468: invokestatic  #17
1471: aload         59
1473: invokestatic  #33
1476: aload         60
1478: invokestatic  #33
1481: new           #10
1484: dup
1485: invokespecial #11
1488: ldc           #12
1490: invokevirtual #13
1493: dload         61
1495: invokevirtual #60
1498: ldc           #15
1500: invokevirtual #13
1503: ldc2_w        #63
1506: invokevirtual #60
1509: ldc           #12
1511: invokevirtual #13
1514: invokevirtual #16
1517: dload         61
1519: ldc2_w        #63
1522: dcmpl
1523: ifne          1530
1526: iconst_1
1527: goto          1531
1530: iconst_0
1531: invokestatic  #17
1534: aload         64
1536: invokestatic  #33
1539: return
Exception table:
from    to  target type
507   521   524   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 4897
End line: 4956
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double[][] doubleArray66 = rotation65.getMatrix();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertNotNull(doubleArray66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #427
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #222
394: astore        50
396: new           #10
399: dup
400: invokespecial #11
403: ldc           #12
405: invokevirtual #13
408: dload_3
409: invokevirtual #60
412: ldc           #15
414: invokevirtual #13
417: dconst_0
418: invokevirtual #60
421: ldc           #12
423: invokevirtual #13
426: invokevirtual #16
429: dload_3
430: dconst_0
431: dcmpl
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #17
443: new           #10
446: dup
447: invokespecial #11
450: ldc           #12
452: invokevirtual #13
455: dload         7
457: invokevirtual #60
460: ldc           #15
462: invokevirtual #13
465: dconst_0
466: invokevirtual #60
469: ldc           #12
471: invokevirtual #13
474: invokevirtual #16
477: dload         7
479: dconst_0
480: dcmpl
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #17
492: new           #10
495: dup
496: invokespecial #11
499: ldc           #12
501: invokevirtual #13
504: dload         9
506: invokevirtual #60
509: ldc           #15
511: invokevirtual #13
514: ldc2_w        #61
517: invokevirtual #60
520: ldc           #12
522: invokevirtual #13
525: invokevirtual #16
528: dload         9
530: ldc2_w        #61
533: dcmpl
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #17
545: new           #10
548: dup
549: invokespecial #11
552: ldc           #12
554: invokevirtual #13
557: dload         13
559: invokevirtual #60
562: ldc           #15
564: invokevirtual #13
567: dconst_0
568: invokevirtual #60
571: ldc           #12
573: invokevirtual #13
576: invokevirtual #16
579: dload         13
581: dconst_0
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #17
594: new           #10
597: dup
598: invokespecial #11
601: ldc           #12
603: invokevirtual #13
606: dload         15
608: invokevirtual #60
611: ldc           #15
613: invokevirtual #13
616: ldc2_w        #61
619: invokevirtual #60
622: ldc           #12
624: invokevirtual #13
627: invokevirtual #16
630: dload         15
632: ldc2_w        #61
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #17
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: dload         17
661: invokevirtual #60
664: ldc           #15
666: invokevirtual #13
669: dconst_0
670: invokevirtual #60
673: ldc           #12
675: invokevirtual #13
678: invokevirtual #16
681: dload         17
683: dconst_0
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #17
696: new           #10
699: dup
700: invokespecial #11
703: ldc           #12
705: invokevirtual #13
708: dload         22
710: invokevirtual #60
713: ldc           #15
715: invokevirtual #13
718: dconst_0
719: invokevirtual #60
722: ldc           #12
724: invokevirtual #13
727: invokevirtual #16
730: dload         22
732: dconst_0
733: dcmpl
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #17
745: new           #10
748: dup
749: invokespecial #11
752: ldc           #12
754: invokevirtual #13
757: dload         24
759: invokevirtual #60
762: ldc           #15
764: invokevirtual #13
767: dconst_0
768: invokevirtual #60
771: ldc           #12
773: invokevirtual #13
776: invokevirtual #16
779: dload         24
781: dconst_0
782: dcmpl
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         29
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         29
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: new           #10
846: dup
847: invokespecial #11
850: ldc           #12
852: invokevirtual #13
855: dload         31
857: invokevirtual #60
860: ldc           #15
862: invokevirtual #13
865: dconst_0
866: invokevirtual #60
869: ldc           #12
871: invokevirtual #13
874: invokevirtual #16
877: dload         31
879: dconst_0
880: dcmpl
881: ifne          888
884: iconst_1
885: goto          889
888: iconst_0
889: invokestatic  #17
892: new           #10
895: dup
896: invokespecial #11
899: ldc           #12
901: invokevirtual #13
904: iload         33
906: invokevirtual #14
909: ldc           #15
911: invokevirtual #13
914: iconst_0
915: invokevirtual #14
918: ldc           #12
920: invokevirtual #13
923: invokevirtual #16
926: iload         33
928: ifne          935
931: iconst_1
932: goto          936
935: iconst_0
936: invokestatic  #17
939: new           #10
942: dup
943: invokespecial #11
946: ldc           #12
948: invokevirtual #13
951: dload         34
953: invokevirtual #60
956: ldc           #15
958: invokevirtual #13
961: dconst_0
962: invokevirtual #60
965: ldc           #12
967: invokevirtual #13
970: invokevirtual #16
973: dload         34
975: dconst_0
976: dcmpl
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #17
988: aload         36
990: invokestatic  #33
993: new           #10
996: dup
997: invokespecial #11
1000: ldc           #12
1002: invokevirtual #13
1005: dload         39
1007: invokevirtual #60
1010: ldc           #15
1012: invokevirtual #13
1015: dconst_0
1016: invokevirtual #60
1019: ldc           #12
1021: invokevirtual #13
1024: invokevirtual #16
1027: dload         39
1029: dconst_0
1030: dcmpl
1031: ifne          1038
1034: iconst_1
1035: goto          1039
1038: iconst_0
1039: invokestatic  #17
1042: aload         41
1044: invokestatic  #33
1047: aload         42
1049: invokestatic  #33
1052: new           #10
1055: dup
1056: invokespecial #11
1059: ldc           #12
1061: invokevirtual #13
1064: dload         43
1066: invokevirtual #60
1069: ldc           #15
1071: invokevirtual #13
1074: ldc2_w        #63
1077: invokevirtual #60
1080: ldc           #12
1082: invokevirtual #13
1085: invokevirtual #16
1088: dload         43
1090: ldc2_w        #63
1093: dcmpl
1094: ifne          1101
1097: iconst_1
1098: goto          1102
1101: iconst_0
1102: invokestatic  #17
1105: new           #10
1108: dup
1109: invokespecial #11
1112: ldc           #12
1114: invokevirtual #13
1117: dload         46
1119: invokevirtual #60
1122: ldc           #15
1124: invokevirtual #13
1127: ldc2_w        #79
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         46
1143: ldc2_w        #79
1146: dcmpl
1147: ifne          1154
1150: iconst_1
1151: goto          1155
1154: iconst_0
1155: invokestatic  #17
1158: aload         48
1160: invokestatic  #33
1163: aload         50
1165: invokestatic  #33
1168: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 4959
End line: 5051
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = rotation85.applyTo(rotation88);
        double[][] doubleArray90 = rotation85.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = rotation85.applyTo(rotation91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #428
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #222
506: astore        65
508: aload         64
510: invokevirtual #96
513: astore        66
515: getstatic     #309
518: astore        67
520: aload         64
522: aload         67
524: invokevirtual #160
527: astore        68
529: aload         64
531: invokevirtual #222
534: astore        69
536: aconst_null
537: astore        70
539: aload         64
541: aload         70
543: invokevirtual #160
546: astore        71
548: ldc           #20
550: invokestatic  #21
553: goto          558
556: astore        71
558: new           #10
561: dup
562: invokespecial #11
565: ldc           #12
567: invokevirtual #13
570: dload         4
572: invokevirtual #60
575: ldc           #15
577: invokevirtual #13
580: dconst_0
581: invokevirtual #60
584: ldc           #12
586: invokevirtual #13
589: invokevirtual #16
592: dload         4
594: dconst_0
595: dcmpl
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #17
607: new           #10
610: dup
611: invokespecial #11
614: ldc           #12
616: invokevirtual #13
619: dload         6
621: invokevirtual #60
624: ldc           #15
626: invokevirtual #13
629: dconst_0
630: invokevirtual #60
633: ldc           #12
635: invokevirtual #13
638: invokevirtual #16
641: dload         6
643: dconst_0
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #17
656: new           #10
659: dup
660: invokespecial #11
663: ldc           #12
665: invokevirtual #13
668: dload         11
670: invokevirtual #60
673: ldc           #15
675: invokevirtual #13
678: dconst_0
679: invokevirtual #60
682: ldc           #12
684: invokevirtual #13
687: invokevirtual #16
690: dload         11
692: dconst_0
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #17
705: new           #10
708: dup
709: invokespecial #11
712: ldc           #12
714: invokevirtual #13
717: dload         13
719: invokevirtual #60
722: ldc           #15
724: invokevirtual #13
727: dconst_0
728: invokevirtual #60
731: ldc           #12
733: invokevirtual #13
736: invokevirtual #16
739: dload         13
741: dconst_0
742: dcmpl
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #17
754: new           #10
757: dup
758: invokespecial #11
761: ldc           #12
763: invokevirtual #13
766: iload         15
768: invokevirtual #14
771: ldc           #15
773: invokevirtual #13
776: iconst_0
777: invokevirtual #14
780: ldc           #12
782: invokevirtual #13
785: invokevirtual #16
788: iload         15
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #17
801: new           #10
804: dup
805: invokespecial #11
808: ldc           #12
810: invokevirtual #13
813: dload         16
815: invokevirtual #60
818: ldc           #15
820: invokevirtual #13
823: dconst_0
824: invokevirtual #60
827: ldc           #12
829: invokevirtual #13
832: invokevirtual #16
835: dload         16
837: dconst_0
838: dcmpl
839: ifne          846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #17
850: aload         18
852: invokestatic  #33
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         21
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         21
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         25
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: dconst_0
927: invokevirtual #60
930: ldc           #12
932: invokevirtual #13
935: invokevirtual #16
938: dload         25
940: dconst_0
941: dcmpl
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #17
953: new           #10
956: dup
957: invokespecial #11
960: ldc           #12
962: invokevirtual #13
965: dload         27
967: invokevirtual #60
970: ldc           #15
972: invokevirtual #13
975: ldc2_w        #61
978: invokevirtual #60
981: ldc           #12
983: invokevirtual #13
986: invokevirtual #16
989: dload         27
991: ldc2_w        #61
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         31
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: dconst_0
1029: invokevirtual #60
1032: ldc           #12
1034: invokevirtual #13
1037: invokevirtual #16
1040: dload         31
1042: dconst_0
1043: dcmpl
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #17
1055: new           #10
1058: dup
1059: invokespecial #11
1062: ldc           #12
1064: invokevirtual #13
1067: dload         33
1069: invokevirtual #60
1072: ldc           #15
1074: invokevirtual #13
1077: ldc2_w        #61
1080: invokevirtual #60
1083: ldc           #12
1085: invokevirtual #13
1088: invokevirtual #16
1091: dload         33
1093: ldc2_w        #61
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         35
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         35
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: new           #10
1160: dup
1161: invokespecial #11
1164: ldc           #12
1166: invokevirtual #13
1169: dload         40
1171: invokevirtual #60
1174: ldc           #15
1176: invokevirtual #13
1179: dconst_0
1180: invokevirtual #60
1183: ldc           #12
1185: invokevirtual #13
1188: invokevirtual #16
1191: dload         40
1193: dconst_0
1194: dcmpl
1195: ifne          1202
1198: iconst_1
1199: goto          1203
1202: iconst_0
1203: invokestatic  #17
1206: new           #10
1209: dup
1210: invokespecial #11
1213: ldc           #12
1215: invokevirtual #13
1218: dload         42
1220: invokevirtual #60
1223: ldc           #15
1225: invokevirtual #13
1228: dconst_0
1229: invokevirtual #60
1232: ldc           #12
1234: invokevirtual #13
1237: invokevirtual #16
1240: dload         42
1242: dconst_0
1243: dcmpl
1244: ifne          1251
1247: iconst_1
1248: goto          1252
1251: iconst_0
1252: invokestatic  #17
1255: new           #10
1258: dup
1259: invokespecial #11
1262: ldc           #12
1264: invokevirtual #13
1267: dload         47
1269: invokevirtual #60
1272: ldc           #15
1274: invokevirtual #13
1277: dconst_0
1278: invokevirtual #60
1281: ldc           #12
1283: invokevirtual #13
1286: invokevirtual #16
1289: dload         47
1291: dconst_0
1292: dcmpl
1293: ifne          1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #17
1304: new           #10
1307: dup
1308: invokespecial #11
1311: ldc           #12
1313: invokevirtual #13
1316: dload         49
1318: invokevirtual #60
1321: ldc           #15
1323: invokevirtual #13
1326: dconst_0
1327: invokevirtual #60
1330: ldc           #12
1332: invokevirtual #13
1335: invokevirtual #16
1338: dload         49
1340: dconst_0
1341: dcmpl
1342: ifne          1349
1345: iconst_1
1346: goto          1350
1349: iconst_0
1350: invokestatic  #17
1353: new           #10
1356: dup
1357: invokespecial #11
1360: ldc           #12
1362: invokevirtual #13
1365: iload         51
1367: invokevirtual #14
1370: ldc           #15
1372: invokevirtual #13
1375: iconst_0
1376: invokevirtual #14
1379: ldc           #12
1381: invokevirtual #13
1384: invokevirtual #16
1387: iload         51
1389: ifne          1396
1392: iconst_1
1393: goto          1397
1396: iconst_0
1397: invokestatic  #17
1400: new           #10
1403: dup
1404: invokespecial #11
1407: ldc           #12
1409: invokevirtual #13
1412: dload         52
1414: invokevirtual #60
1417: ldc           #15
1419: invokevirtual #13
1422: dconst_0
1423: invokevirtual #60
1426: ldc           #12
1428: invokevirtual #13
1431: invokevirtual #16
1434: dload         52
1436: dconst_0
1437: dcmpl
1438: ifne          1445
1441: iconst_1
1442: goto          1446
1445: iconst_0
1446: invokestatic  #17
1449: aload         54
1451: invokestatic  #33
1454: new           #10
1457: dup
1458: invokespecial #11
1461: ldc           #12
1463: invokevirtual #13
1466: dload         57
1468: invokevirtual #60
1471: ldc           #15
1473: invokevirtual #13
1476: dconst_0
1477: invokevirtual #60
1480: ldc           #12
1482: invokevirtual #13
1485: invokevirtual #16
1488: dload         57
1490: dconst_0
1491: dcmpl
1492: ifne          1499
1495: iconst_1
1496: goto          1500
1499: iconst_0
1500: invokestatic  #17
1503: aload         59
1505: invokestatic  #33
1508: aload         60
1510: invokestatic  #33
1513: new           #10
1516: dup
1517: invokespecial #11
1520: ldc           #12
1522: invokevirtual #13
1525: dload         61
1527: invokevirtual #60
1530: ldc           #15
1532: invokevirtual #13
1535: ldc2_w        #63
1538: invokevirtual #60
1541: ldc           #12
1543: invokevirtual #13
1546: invokevirtual #16
1549: dload         61
1551: ldc2_w        #63
1554: dcmpl
1555: ifne          1562
1558: iconst_1
1559: goto          1563
1562: iconst_0
1563: invokestatic  #17
1566: aload         64
1568: invokestatic  #33
1571: aload         65
1573: invokestatic  #33
1576: aload         66
1578: invokestatic  #33
1581: aload         67
1583: invokestatic  #33
1586: aload         68
1588: invokestatic  #33
1591: aload         69
1593: invokestatic  #33
1596: return
Exception table:
from    to  target type
539   553   556   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 5054
End line: 5101
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.POSITIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        java.text.NumberFormat numberFormat3 = null;
        java.lang.String str4 = vector3D2.toString(numberFormat3);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException10 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable6, (java.lang.Number) 0, (java.lang.Number) Double.NaN, true);
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException14 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10L, (java.lang.Number) 0.7345682747147467d, (int) (byte) 1);
        numberIsTooSmallException10.addSuppressed((java.lang.Throwable) nonMonotonousSequenceException14);
        java.lang.Throwable[] throwableArray16 = numberIsTooSmallException10.getSuppressed();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D2, localizable5, (java.lang.Object[]) throwableArray16);
        double double18 = vector3D2.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = vector3D0.add(2.220446049250313E-16d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D2);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D23, vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double41 = vector3D37.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D40);
        double double42 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D34, vector3D40);
        boolean boolean43 = vector3D34.isInfinite();
        double double44 = vector3D23.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D20, vector3D34);
        double double46 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation48 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D34, (double) 52);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{(NaN); (NaN); (NaN)}" + "'", str4, "{(NaN); (NaN); (NaN)}");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + Double.POSITIVE_INFINITY + "'", double45 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #313
28: astore_1
29: getstatic     #314
32: astore_2
33: aconst_null
34: astore_3
35: aload_2
36: aload_3
37: invokevirtual #166
40: astore        4
42: aconst_null
43: astore        5
45: aconst_null
46: astore        6
48: new           #315
51: dup
52: aload         6
54: iconst_0
55: invokestatic  #316
58: ldc2_w        #317
61: invokestatic  #319
64: iconst_1
65: invokespecial #320
68: astore        7
70: new           #321
73: dup
74: ldc2_w        #322
77: invokestatic  #324
80: ldc2_w        #44
83: invokestatic  #319
86: iconst_1
87: invokespecial #325
90: astore        8
92: aload         7
94: aload         8
96: invokevirtual #326
99: aload         7
101: invokevirtual #327
104: astore        9
106: aload_2
107: aload         5
109: aload         9
111: checkcast     #248
114: invokestatic  #328
117: aload_2
118: invokevirtual #111
121: dstore        10
123: aload_1
124: ldc2_w        #329
127: aload_2
128: invokevirtual #182
131: astore        12
133: getstatic     #126
136: astore        13
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        14
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        15
164: new           #43
167: dup
168: dconst_1
169: ldc2_w        #44
172: invokespecial #46
175: astore        16
177: aload         15
179: aload         16
181: invokevirtual #47
184: dstore        17
186: aload         14
188: aload         16
190: invokestatic  #48
193: dstore        19
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        21
208: new           #43
211: dup
212: dconst_1
213: ldc2_w        #44
216: invokespecial #46
219: astore        22
221: new           #43
224: dup
225: dconst_1
226: ldc2_w        #44
229: invokespecial #46
232: astore        23
234: aload         22
236: aload         23
238: invokevirtual #47
241: dstore        24
243: aload         21
245: aload         23
247: invokestatic  #48
250: dstore        26
252: aload         21
254: invokevirtual #49
257: istore        28
259: aload         14
261: aload         21
263: invokevirtual #50
266: dstore        29
268: aload         13
270: aload         21
272: invokestatic  #127
275: dstore        31
277: aload_2
278: aload         21
280: invokevirtual #50
283: dstore        33
285: new           #27
288: dup
289: aload         21
291: ldc2_w        #297
294: invokespecial #103
297: astore        35
299: aload_1
300: invokestatic  #33
303: aload_2
304: invokestatic  #33
307: new           #10
310: dup
311: invokespecial #11
314: ldc           #12
316: invokevirtual #13
319: aload         4
321: invokevirtual #13
324: ldc_w         #333
327: invokevirtual #13
330: invokevirtual #16
333: aload         4
335: ldc_w         #334
338: invokestatic  #335
341: aload         9
343: invokestatic  #33
346: dload         10
348: invokestatic  #242
351: invokestatic  #243
354: aload         12
356: invokestatic  #33
359: aload         13
361: invokestatic  #33
364: new           #10
367: dup
368: invokespecial #11
371: ldc           #12
373: invokevirtual #13
376: dload         17
378: invokevirtual #60
381: ldc           #15
383: invokevirtual #13
386: dconst_0
387: invokevirtual #60
390: ldc           #12
392: invokevirtual #13
395: invokevirtual #16
398: dload         17
400: dconst_0
401: dcmpl
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #17
413: new           #10
416: dup
417: invokespecial #11
420: ldc           #12
422: invokevirtual #13
425: dload         19
427: invokevirtual #60
430: ldc           #15
432: invokevirtual #13
435: dconst_0
436: invokevirtual #60
439: ldc           #12
441: invokevirtual #13
444: invokevirtual #16
447: dload         19
449: dconst_0
450: dcmpl
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #17
462: new           #10
465: dup
466: invokespecial #11
469: ldc           #12
471: invokevirtual #13
474: dload         24
476: invokevirtual #60
479: ldc           #15
481: invokevirtual #13
484: dconst_0
485: invokevirtual #60
488: ldc           #12
490: invokevirtual #13
493: invokevirtual #16
496: dload         24
498: dconst_0
499: dcmpl
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #17
511: new           #10
514: dup
515: invokespecial #11
518: ldc           #12
520: invokevirtual #13
523: dload         26
525: invokevirtual #60
528: ldc           #15
530: invokevirtual #13
533: dconst_0
534: invokevirtual #60
537: ldc           #12
539: invokevirtual #13
542: invokevirtual #16
545: dload         26
547: dconst_0
548: dcmpl
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #17
560: new           #10
563: dup
564: invokespecial #11
567: ldc           #12
569: invokevirtual #13
572: iload         28
574: invokevirtual #14
577: ldc           #15
579: invokevirtual #13
582: iconst_0
583: invokevirtual #14
586: ldc           #12
588: invokevirtual #13
591: invokevirtual #16
594: iload         28
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #17
607: new           #10
610: dup
611: invokespecial #11
614: ldc           #12
616: invokevirtual #13
619: dload         29
621: invokevirtual #60
624: ldc           #15
626: invokevirtual #13
629: dconst_0
630: invokevirtual #60
633: ldc           #12
635: invokevirtual #13
638: invokevirtual #16
641: dload         29
643: dconst_0
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #17
656: new           #10
659: dup
660: invokespecial #11
663: ldc           #12
665: invokevirtual #13
668: dload         31
670: invokevirtual #60
673: ldc           #15
675: invokevirtual #13
678: ldc2_w        #133
681: invokevirtual #60
684: ldc           #12
686: invokevirtual #13
689: invokevirtual #16
692: dload         31
694: ldc2_w        #133
697: dcmpl
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #17
709: dload         33
711: invokestatic  #242
714: invokestatic  #243
717: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 5104
End line: 5184
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(100.0d);
        double double87 = vector3D30.getNormSq();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector88 = vector3D30.getZero();
        double double89 = vector3D30.getNormInf();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0000000000000002d + "'", double87 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.6702668260599606d + "'", double89 == 0.6702668260599606d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #430
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #68
499: invokevirtual #107
502: astore        64
504: aload         20
506: invokevirtual #111
509: dstore        65
511: aload         20
513: invokevirtual #198
516: astore        67
518: aload         20
520: invokevirtual #136
523: dstore        68
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         4
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         4
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: new           #10
577: dup
578: invokespecial #11
581: ldc           #12
583: invokevirtual #13
586: dload         6
588: invokevirtual #60
591: ldc           #15
593: invokevirtual #13
596: dconst_0
597: invokevirtual #60
600: ldc           #12
602: invokevirtual #13
605: invokevirtual #16
608: dload         6
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: new           #10
626: dup
627: invokespecial #11
630: ldc           #12
632: invokevirtual #13
635: dload         11
637: invokevirtual #60
640: ldc           #15
642: invokevirtual #13
645: dconst_0
646: invokevirtual #60
649: ldc           #12
651: invokevirtual #13
654: invokevirtual #16
657: dload         11
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #17
672: new           #10
675: dup
676: invokespecial #11
679: ldc           #12
681: invokevirtual #13
684: dload         13
686: invokevirtual #60
689: ldc           #15
691: invokevirtual #13
694: dconst_0
695: invokevirtual #60
698: ldc           #12
700: invokevirtual #13
703: invokevirtual #16
706: dload         13
708: dconst_0
709: dcmpl
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #17
721: new           #10
724: dup
725: invokespecial #11
728: ldc           #12
730: invokevirtual #13
733: iload         15
735: invokevirtual #14
738: ldc           #15
740: invokevirtual #13
743: iconst_0
744: invokevirtual #14
747: ldc           #12
749: invokevirtual #13
752: invokevirtual #16
755: iload         15
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: dload         16
782: invokevirtual #60
785: ldc           #15
787: invokevirtual #13
790: dconst_0
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         16
804: dconst_0
805: dcmpl
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #17
817: aload         18
819: invokestatic  #33
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         21
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         21
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: new           #10
874: dup
875: invokespecial #11
878: ldc           #12
880: invokevirtual #13
883: dload         25
885: invokevirtual #60
888: ldc           #15
890: invokevirtual #13
893: dconst_0
894: invokevirtual #60
897: ldc           #12
899: invokevirtual #13
902: invokevirtual #16
905: dload         25
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: dload         27
934: invokevirtual #60
937: ldc           #15
939: invokevirtual #13
942: ldc2_w        #61
945: invokevirtual #60
948: ldc           #12
950: invokevirtual #13
953: invokevirtual #16
956: dload         27
958: ldc2_w        #61
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #17
973: new           #10
976: dup
977: invokespecial #11
980: ldc           #12
982: invokevirtual #13
985: dload         31
987: invokevirtual #60
990: ldc           #15
992: invokevirtual #13
995: dconst_0
996: invokevirtual #60
999: ldc           #12
1001: invokevirtual #13
1004: invokevirtual #16
1007: dload         31
1009: dconst_0
1010: dcmpl
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #17
1022: new           #10
1025: dup
1026: invokespecial #11
1029: ldc           #12
1031: invokevirtual #13
1034: dload         33
1036: invokevirtual #60
1039: ldc           #15
1041: invokevirtual #13
1044: ldc2_w        #61
1047: invokevirtual #60
1050: ldc           #12
1052: invokevirtual #13
1055: invokevirtual #16
1058: dload         33
1060: ldc2_w        #61
1063: dcmpl
1064: ifne          1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #17
1075: new           #10
1078: dup
1079: invokespecial #11
1082: ldc           #12
1084: invokevirtual #13
1087: dload         35
1089: invokevirtual #60
1092: ldc           #15
1094: invokevirtual #13
1097: dconst_0
1098: invokevirtual #60
1101: ldc           #12
1103: invokevirtual #13
1106: invokevirtual #16
1109: dload         35
1111: dconst_0
1112: dcmpl
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #17
1124: new           #10
1127: dup
1128: invokespecial #11
1131: ldc           #12
1133: invokevirtual #13
1136: dload         40
1138: invokevirtual #60
1141: ldc           #15
1143: invokevirtual #13
1146: dconst_0
1147: invokevirtual #60
1150: ldc           #12
1152: invokevirtual #13
1155: invokevirtual #16
1158: dload         40
1160: dconst_0
1161: dcmpl
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #17
1173: new           #10
1176: dup
1177: invokespecial #11
1180: ldc           #12
1182: invokevirtual #13
1185: dload         42
1187: invokevirtual #60
1190: ldc           #15
1192: invokevirtual #13
1195: dconst_0
1196: invokevirtual #60
1199: ldc           #12
1201: invokevirtual #13
1204: invokevirtual #16
1207: dload         42
1209: dconst_0
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #17
1222: new           #10
1225: dup
1226: invokespecial #11
1229: ldc           #12
1231: invokevirtual #13
1234: dload         47
1236: invokevirtual #60
1239: ldc           #15
1241: invokevirtual #13
1244: dconst_0
1245: invokevirtual #60
1248: ldc           #12
1250: invokevirtual #13
1253: invokevirtual #16
1256: dload         47
1258: dconst_0
1259: dcmpl
1260: ifne          1267
1263: iconst_1
1264: goto          1268
1267: iconst_0
1268: invokestatic  #17
1271: new           #10
1274: dup
1275: invokespecial #11
1278: ldc           #12
1280: invokevirtual #13
1283: dload         49
1285: invokevirtual #60
1288: ldc           #15
1290: invokevirtual #13
1293: dconst_0
1294: invokevirtual #60
1297: ldc           #12
1299: invokevirtual #13
1302: invokevirtual #16
1305: dload         49
1307: dconst_0
1308: dcmpl
1309: ifne          1316
1312: iconst_1
1313: goto          1317
1316: iconst_0
1317: invokestatic  #17
1320: new           #10
1323: dup
1324: invokespecial #11
1327: ldc           #12
1329: invokevirtual #13
1332: iload         51
1334: invokevirtual #14
1337: ldc           #15
1339: invokevirtual #13
1342: iconst_0
1343: invokevirtual #14
1346: ldc           #12
1348: invokevirtual #13
1351: invokevirtual #16
1354: iload         51
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: dload         52
1381: invokevirtual #60
1384: ldc           #15
1386: invokevirtual #13
1389: dconst_0
1390: invokevirtual #60
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: dload         52
1403: dconst_0
1404: dcmpl
1405: ifne          1412
1408: iconst_1
1409: goto          1413
1412: iconst_0
1413: invokestatic  #17
1416: aload         54
1418: invokestatic  #33
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         57
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         57
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         59
1472: invokestatic  #33
1475: aload         60
1477: invokestatic  #33
1480: new           #10
1483: dup
1484: invokespecial #11
1487: ldc           #12
1489: invokevirtual #13
1492: dload         61
1494: invokevirtual #60
1497: ldc           #15
1499: invokevirtual #13
1502: ldc2_w        #63
1505: invokevirtual #60
1508: ldc           #12
1510: invokevirtual #13
1513: invokevirtual #16
1516: dload         61
1518: ldc2_w        #63
1521: dcmpl
1522: ifne          1529
1525: iconst_1
1526: goto          1530
1529: iconst_0
1530: invokestatic  #17
1533: aload         64
1535: invokestatic  #33
1538: new           #10
1541: dup
1542: invokespecial #11
1545: ldc           #12
1547: invokevirtual #13
1550: dload         65
1552: invokevirtual #60
1555: ldc           #15
1557: invokevirtual #13
1560: ldc2_w        #63
1563: invokevirtual #60
1566: ldc           #12
1568: invokevirtual #13
1571: invokevirtual #16
1574: dload         65
1576: ldc2_w        #63
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: aload         67
1593: invokestatic  #33
1596: new           #10
1599: dup
1600: invokespecial #11
1603: ldc           #12
1605: invokevirtual #13
1608: dload         68
1610: invokevirtual #60
1613: ldc           #15
1615: invokevirtual #13
1618: ldc2_w        #79
1621: invokevirtual #60
1624: ldc           #12
1626: invokevirtual #13
1629: invokevirtual #16
1632: dload         68
1634: ldc2_w        #79
1637: dcmpl
1638: ifne          1645
1641: iconst_1
1642: goto          1646
1645: iconst_0
1646: invokestatic  #17
1649: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 5187
End line: 5280
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double31 = vector3D2.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D20.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double49 = vector3D45.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        double double50 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D42, vector3D48);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double60 = vector3D56.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D59);
        double double61 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D53, vector3D59);
        boolean boolean62 = vector3D53.isInfinite();
        double double63 = vector3D42.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double64 = vector3D35.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = vector3D53.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D20.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D67.negate();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray71 = null;
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D69, localizable70, objArray71);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.ZERO;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = vector3D74.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation83 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = rotation83.getAxis();
        double double85 = rotation83.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation83.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D74.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        double double89 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D73, vector3D88);
        double double90 = vector3D69.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector91 = vector3D69.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D65.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(euclidean3DVector91);
        org.junit.Assert.assertNotNull(vector3D92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #431
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: new           #43
84: dup
85: dconst_1
86: ldc2_w        #44
89: invokespecial #46
92: astore        7
94: aload         6
96: aload         7
98: invokevirtual #47
101: dstore        8
103: aload         5
105: aload         7
107: invokestatic  #48
110: dstore        10
112: new           #43
115: dup
116: dconst_1
117: ldc2_w        #44
120: invokespecial #46
123: astore        12
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        13
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        14
151: aload         13
153: aload         14
155: invokevirtual #47
158: dstore        15
160: aload         12
162: aload         14
164: invokestatic  #48
167: dstore        17
169: aload         12
171: invokevirtual #49
174: istore        19
176: aload         5
178: aload         12
180: invokevirtual #50
183: dstore        20
185: aload_1
186: aload         12
188: invokevirtual #129
191: dstore        22
193: aload         12
195: invokevirtual #198
198: astore        24
200: new           #43
203: dup
204: dconst_1
205: ldc2_w        #44
208: invokespecial #46
211: astore        25
213: new           #43
216: dup
217: dconst_1
218: ldc2_w        #44
221: invokespecial #46
224: astore        26
226: aload         25
228: aload         26
230: invokevirtual #47
233: dstore        27
235: new           #43
238: dup
239: dconst_1
240: ldc2_w        #44
243: invokespecial #46
246: astore        29
248: new           #43
251: dup
252: dconst_1
253: ldc2_w        #44
256: invokespecial #46
259: astore        30
261: new           #43
264: dup
265: dconst_1
266: ldc2_w        #44
269: invokespecial #46
272: astore        31
274: aload         30
276: aload         31
278: invokevirtual #47
281: dstore        32
283: aload         29
285: aload         31
287: invokestatic  #48
290: dstore        34
292: new           #43
295: dup
296: dconst_1
297: ldc2_w        #44
300: invokespecial #46
303: astore        36
305: new           #43
308: dup
309: dconst_1
310: ldc2_w        #44
313: invokespecial #46
316: astore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        38
331: aload         37
333: aload         38
335: invokevirtual #47
338: dstore        39
340: aload         36
342: aload         38
344: invokestatic  #48
347: dstore        41
349: aload         36
351: invokevirtual #49
354: istore        43
356: aload         29
358: aload         36
360: invokevirtual #50
363: dstore        44
365: aload         25
367: aload         36
369: invokevirtual #129
372: dstore        46
374: aload         36
376: invokevirtual #54
379: astore        48
381: aload         12
383: aload         48
385: invokevirtual #55
388: astore        49
390: getstatic     #432
393: astore        50
395: aload         50
397: invokevirtual #163
400: astore        51
402: aload         50
404: invokevirtual #54
407: astore        52
409: aconst_null
410: astore        53
412: aconst_null
413: astore        54
415: aload         52
417: aload         53
419: aload         54
421: invokestatic  #328
424: getstatic     #433
427: astore        55
429: getstatic     #432
432: astore        56
434: aload         56
436: invokevirtual #163
439: astore        57
441: aload         56
443: invokevirtual #54
446: astore        58
448: new           #27
451: dup
452: ldc2_w        #146
455: ldc2_w        #72
458: ldc2_w        #148
461: dconst_1
462: iconst_0
463: invokespecial #150
466: astore        59
468: aload         59
470: invokevirtual #96
473: astore        60
475: aload         59
477: invokevirtual #95
480: dstore        61
482: getstatic     #314
485: astore        63
487: aload         59
489: aload         63
491: invokevirtual #98
494: astore        64
496: aload         56
498: ldc2_w        #434
501: aload         63
503: invokevirtual #182
506: astore        65
508: aload         55
510: aload         65
512: invokestatic  #127
515: dstore        66
517: aload         52
519: aload         65
521: invokevirtual #53
524: dstore        68
526: aload         52
528: invokevirtual #193
531: astore        70
533: aload         48
535: aload         52
537: invokevirtual #109
540: astore        71
542: new           #10
545: dup
546: invokespecial #11
549: ldc           #12
551: invokevirtual #13
554: dload_3
555: invokevirtual #60
558: ldc           #15
560: invokevirtual #13
563: dconst_0
564: invokevirtual #60
567: ldc           #12
569: invokevirtual #13
572: invokevirtual #16
575: dload_3
576: dconst_0
577: dcmpl
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #17
589: new           #10
592: dup
593: invokespecial #11
596: ldc           #12
598: invokevirtual #13
601: dload         8
603: invokevirtual #60
606: ldc           #15
608: invokevirtual #13
611: dconst_0
612: invokevirtual #60
615: ldc           #12
617: invokevirtual #13
620: invokevirtual #16
623: dload         8
625: dconst_0
626: dcmpl
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #17
638: new           #10
641: dup
642: invokespecial #11
645: ldc           #12
647: invokevirtual #13
650: dload         10
652: invokevirtual #60
655: ldc           #15
657: invokevirtual #13
660: dconst_0
661: invokevirtual #60
664: ldc           #12
666: invokevirtual #13
669: invokevirtual #16
672: dload         10
674: dconst_0
675: dcmpl
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #17
687: new           #10
690: dup
691: invokespecial #11
694: ldc           #12
696: invokevirtual #13
699: dload         15
701: invokevirtual #60
704: ldc           #15
706: invokevirtual #13
709: dconst_0
710: invokevirtual #60
713: ldc           #12
715: invokevirtual #13
718: invokevirtual #16
721: dload         15
723: dconst_0
724: dcmpl
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #17
736: new           #10
739: dup
740: invokespecial #11
743: ldc           #12
745: invokevirtual #13
748: dload         17
750: invokevirtual #60
753: ldc           #15
755: invokevirtual #13
758: dconst_0
759: invokevirtual #60
762: ldc           #12
764: invokevirtual #13
767: invokevirtual #16
770: dload         17
772: dconst_0
773: dcmpl
774: ifne          781
777: iconst_1
778: goto          782
781: iconst_0
782: invokestatic  #17
785: new           #10
788: dup
789: invokespecial #11
792: ldc           #12
794: invokevirtual #13
797: iload         19
799: invokevirtual #14
802: ldc           #15
804: invokevirtual #13
807: iconst_0
808: invokevirtual #14
811: ldc           #12
813: invokevirtual #13
816: invokevirtual #16
819: iload         19
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #17
832: new           #10
835: dup
836: invokespecial #11
839: ldc           #12
841: invokevirtual #13
844: dload         20
846: invokevirtual #60
849: ldc           #15
851: invokevirtual #13
854: dconst_0
855: invokevirtual #60
858: ldc           #12
860: invokevirtual #13
863: invokevirtual #16
866: dload         20
868: dconst_0
869: dcmpl
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #17
881: new           #10
884: dup
885: invokespecial #11
888: ldc           #12
890: invokevirtual #13
893: dload         22
895: invokevirtual #60
898: ldc           #15
900: invokevirtual #13
903: dconst_0
904: invokevirtual #60
907: ldc           #12
909: invokevirtual #13
912: invokevirtual #16
915: dload         22
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #17
930: aload         24
932: invokestatic  #33
935: new           #10
938: dup
939: invokespecial #11
942: ldc           #12
944: invokevirtual #13
947: dload         27
949: invokevirtual #60
952: ldc           #15
954: invokevirtual #13
957: dconst_0
958: invokevirtual #60
961: ldc           #12
963: invokevirtual #13
966: invokevirtual #16
969: dload         27
971: dconst_0
972: dcmpl
973: ifne          980
976: iconst_1
977: goto          981
980: iconst_0
981: invokestatic  #17
984: new           #10
987: dup
988: invokespecial #11
991: ldc           #12
993: invokevirtual #13
996: dload         32
998: invokevirtual #60
1001: ldc           #15
1003: invokevirtual #13
1006: dconst_0
1007: invokevirtual #60
1010: ldc           #12
1012: invokevirtual #13
1015: invokevirtual #16
1018: dload         32
1020: dconst_0
1021: dcmpl
1022: ifne          1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #17
1033: new           #10
1036: dup
1037: invokespecial #11
1040: ldc           #12
1042: invokevirtual #13
1045: dload         34
1047: invokevirtual #60
1050: ldc           #15
1052: invokevirtual #13
1055: dconst_0
1056: invokevirtual #60
1059: ldc           #12
1061: invokevirtual #13
1064: invokevirtual #16
1067: dload         34
1069: dconst_0
1070: dcmpl
1071: ifne          1078
1074: iconst_1
1075: goto          1079
1078: iconst_0
1079: invokestatic  #17
1082: new           #10
1085: dup
1086: invokespecial #11
1089: ldc           #12
1091: invokevirtual #13
1094: dload         39
1096: invokevirtual #60
1099: ldc           #15
1101: invokevirtual #13
1104: dconst_0
1105: invokevirtual #60
1108: ldc           #12
1110: invokevirtual #13
1113: invokevirtual #16
1116: dload         39
1118: dconst_0
1119: dcmpl
1120: ifne          1127
1123: iconst_1
1124: goto          1128
1127: iconst_0
1128: invokestatic  #17
1131: new           #10
1134: dup
1135: invokespecial #11
1138: ldc           #12
1140: invokevirtual #13
1143: dload         41
1145: invokevirtual #60
1148: ldc           #15
1150: invokevirtual #13
1153: dconst_0
1154: invokevirtual #60
1157: ldc           #12
1159: invokevirtual #13
1162: invokevirtual #16
1165: dload         41
1167: dconst_0
1168: dcmpl
1169: ifne          1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #17
1180: new           #10
1183: dup
1184: invokespecial #11
1187: ldc           #12
1189: invokevirtual #13
1192: iload         43
1194: invokevirtual #14
1197: ldc           #15
1199: invokevirtual #13
1202: iconst_0
1203: invokevirtual #14
1206: ldc           #12
1208: invokevirtual #13
1211: invokevirtual #16
1214: iload         43
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         44
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         44
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         46
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         46
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: aload         48
1327: invokestatic  #33
1330: aload         49
1332: invokestatic  #33
1335: aload         50
1337: invokestatic  #33
1340: aload         51
1342: invokestatic  #33
1345: aload         52
1347: invokestatic  #33
1350: aload         55
1352: invokestatic  #33
1355: aload         56
1357: invokestatic  #33
1360: aload         57
1362: invokestatic  #33
1365: aload         58
1367: invokestatic  #33
1370: aload         60
1372: invokestatic  #33
1375: new           #10
1378: dup
1379: invokespecial #11
1382: ldc           #12
1384: invokevirtual #13
1387: dload         61
1389: invokevirtual #60
1392: ldc           #15
1394: invokevirtual #13
1397: dconst_1
1398: invokevirtual #60
1401: ldc           #12
1403: invokevirtual #13
1406: invokevirtual #16
1409: dload         61
1411: dconst_1
1412: dcmpl
1413: ifne          1420
1416: iconst_1
1417: goto          1421
1420: iconst_0
1421: invokestatic  #17
1424: aload         63
1426: invokestatic  #33
1429: aload         64
1431: invokestatic  #33
1434: aload         65
1436: invokestatic  #33
1439: dload         66
1441: invokestatic  #242
1444: invokestatic  #243
1447: dload         68
1449: invokestatic  #242
1452: invokestatic  #243
1455: aload         70
1457: invokestatic  #33
1460: aload         71
1462: invokestatic  #33
1465: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 5283
End line: 5336
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException4 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 100.0f, (java.lang.Number) Double.POSITIVE_INFINITY, (int) (short) 10);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        double[] doubleArray9 = new double[] { (byte) 1 };
        double[] doubleArray10 = new double[] {};
        boolean boolean11 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray9, doubleArray10);
        double[] doubleArray13 = new double[] { (byte) 1 };
        double[] doubleArray14 = new double[] {};
        boolean boolean15 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray13, doubleArray14);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection16 = null;
        double[] doubleArray18 = new double[] { 0 };
        double[] doubleArray20 = new double[] { 0 };
        double[] doubleArray22 = new double[] { 0 };
        double[] doubleArray24 = new double[] { 0 };
        double[] doubleArray26 = new double[] { 0 };
        double[][] doubleArray27 = new double[][] { doubleArray18, doubleArray20, doubleArray22, doubleArray24, doubleArray26 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray13, orderDirection16, doubleArray27);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray9, doubleArray27);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException30 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable6, (java.lang.Number) (short) 1, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException4, localizable5, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.exception.MathArithmeticException mathArithmeticException32 = new org.apache.commons.math.exception.MathArithmeticException(localizable0, (java.lang.Object[]) doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation34 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray27, 2.041394030645261d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #321
30: dup
31: ldc_w         #437
34: invokestatic  #379
37: ldc2_w        #133
40: invokestatic  #319
43: bipush        10
45: invokespecial #325
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: astore        5
63: iconst_0
64: newarray       double
66: astore        6
68: aload         5
70: aload         6
72: invokestatic  #24
75: istore        7
77: iconst_1
78: newarray       double
80: dup
81: iconst_0
82: dconst_1
83: dastore
84: astore        8
86: iconst_0
87: newarray       double
89: astore        9
91: aload         8
93: aload         9
95: invokestatic  #24
98: istore        10
100: aconst_null
101: astore        11
103: iconst_1
104: newarray       double
106: dup
107: iconst_0
108: dconst_0
109: dastore
110: astore        12
112: iconst_1
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: astore        13
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: astore        14
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: astore        15
139: iconst_1
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: astore        16
148: iconst_5
149: anewarray     #25
152: dup
153: iconst_0
154: aload         12
156: aastore
157: dup
158: iconst_1
159: aload         13
161: aastore
162: dup
163: iconst_2
164: aload         14
166: aastore
167: dup
168: iconst_3
169: aload         15
171: aastore
172: dup
173: iconst_4
174: aload         16
176: aastore
177: astore        17
179: aload         8
181: aload         11
183: aload         17
185: invokestatic  #26
188: aload         5
190: aload         17
192: invokestatic  #154
195: new           #438
198: dup
199: aload         4
201: iconst_1
202: invokestatic  #439
205: aload         17
207: checkcast     #248
210: invokespecial #440
213: astore        18
215: new           #265
218: dup
219: aload_2
220: aload_3
221: aload         17
223: checkcast     #248
226: invokespecial #383
229: astore        19
231: new           #441
234: dup
235: aload_1
236: aload         17
238: checkcast     #248
241: invokespecial #442
244: astore        20
246: new           #27
249: dup
250: aload         17
252: ldc2_w        #443
255: invokespecial #30
258: astore        21
260: ldc           #31
262: invokestatic  #21
265: goto          270
268: astore        21
270: aload         5
272: invokestatic  #33
275: aload         5
277: invokestatic  #34
280: ldc           #35
282: invokestatic  #36
285: aload         6
287: invokestatic  #33
290: aload         6
292: invokestatic  #34
295: ldc           #37
297: invokestatic  #36
300: new           #10
303: dup
304: invokespecial #11
307: ldc           #12
309: invokevirtual #13
312: iload         7
314: invokevirtual #14
317: ldc           #15
319: invokevirtual #13
322: iconst_0
323: invokevirtual #14
326: ldc           #12
328: invokevirtual #13
331: invokevirtual #16
334: iload         7
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #17
347: aload         8
349: invokestatic  #33
352: aload         8
354: invokestatic  #34
357: ldc           #35
359: invokestatic  #36
362: aload         9
364: invokestatic  #33
367: aload         9
369: invokestatic  #34
372: ldc           #37
374: invokestatic  #36
377: new           #10
380: dup
381: invokespecial #11
384: ldc           #12
386: invokevirtual #13
389: iload         10
391: invokevirtual #14
394: ldc           #15
396: invokevirtual #13
399: iconst_0
400: invokevirtual #14
403: ldc           #12
405: invokevirtual #13
408: invokevirtual #16
411: iload         10
413: ifne          420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #17
424: aload         12
426: invokestatic  #33
429: aload         12
431: invokestatic  #34
434: ldc           #38
436: invokestatic  #36
439: aload         13
441: invokestatic  #33
444: aload         13
446: invokestatic  #34
449: ldc           #38
451: invokestatic  #36
454: aload         14
456: invokestatic  #33
459: aload         14
461: invokestatic  #34
464: ldc           #38
466: invokestatic  #36
469: aload         15
471: invokestatic  #33
474: aload         15
476: invokestatic  #34
479: ldc           #38
481: invokestatic  #36
484: aload         16
486: invokestatic  #33
489: aload         16
491: invokestatic  #34
494: ldc           #38
496: invokestatic  #36
499: aload         17
501: invokestatic  #33
504: return
Exception table:
from    to  target type
246   265   268   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 5339
End line: 5392
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException4 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 100.0f, (java.lang.Number) Double.POSITIVE_INFINITY, (int) (short) 10);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        double[] doubleArray9 = new double[] { (byte) 1 };
        double[] doubleArray10 = new double[] {};
        boolean boolean11 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray9, doubleArray10);
        double[] doubleArray13 = new double[] { (byte) 1 };
        double[] doubleArray14 = new double[] {};
        boolean boolean15 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray13, doubleArray14);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection16 = null;
        double[] doubleArray18 = new double[] { 0 };
        double[] doubleArray20 = new double[] { 0 };
        double[] doubleArray22 = new double[] { 0 };
        double[] doubleArray24 = new double[] { 0 };
        double[] doubleArray26 = new double[] { 0 };
        double[][] doubleArray27 = new double[][] { doubleArray18, doubleArray20, doubleArray22, doubleArray24, doubleArray26 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray13, orderDirection16, doubleArray27);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray9, doubleArray27);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException30 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable6, (java.lang.Number) (short) 1, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException4, localizable5, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.exception.MathArithmeticException mathArithmeticException32 = new org.apache.commons.math.exception.MathArithmeticException(localizable0, (java.lang.Object[]) doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation34 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray27, Double.NaN);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #321
30: dup
31: ldc_w         #437
34: invokestatic  #379
37: ldc2_w        #133
40: invokestatic  #319
43: bipush        10
45: invokespecial #325
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: astore        5
63: iconst_0
64: newarray       double
66: astore        6
68: aload         5
70: aload         6
72: invokestatic  #24
75: istore        7
77: iconst_1
78: newarray       double
80: dup
81: iconst_0
82: dconst_1
83: dastore
84: astore        8
86: iconst_0
87: newarray       double
89: astore        9
91: aload         8
93: aload         9
95: invokestatic  #24
98: istore        10
100: aconst_null
101: astore        11
103: iconst_1
104: newarray       double
106: dup
107: iconst_0
108: dconst_0
109: dastore
110: astore        12
112: iconst_1
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: astore        13
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: astore        14
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: astore        15
139: iconst_1
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: astore        16
148: iconst_5
149: anewarray     #25
152: dup
153: iconst_0
154: aload         12
156: aastore
157: dup
158: iconst_1
159: aload         13
161: aastore
162: dup
163: iconst_2
164: aload         14
166: aastore
167: dup
168: iconst_3
169: aload         15
171: aastore
172: dup
173: iconst_4
174: aload         16
176: aastore
177: astore        17
179: aload         8
181: aload         11
183: aload         17
185: invokestatic  #26
188: aload         5
190: aload         17
192: invokestatic  #154
195: new           #438
198: dup
199: aload         4
201: iconst_1
202: invokestatic  #439
205: aload         17
207: checkcast     #248
210: invokespecial #440
213: astore        18
215: new           #265
218: dup
219: aload_2
220: aload_3
221: aload         17
223: checkcast     #248
226: invokespecial #383
229: astore        19
231: new           #441
234: dup
235: aload_1
236: aload         17
238: checkcast     #248
241: invokespecial #442
244: astore        20
246: new           #27
249: dup
250: aload         17
252: ldc2_w        #317
255: invokespecial #30
258: astore        21
260: ldc           #31
262: invokestatic  #21
265: goto          270
268: astore        21
270: aload         5
272: invokestatic  #33
275: aload         5
277: invokestatic  #34
280: ldc           #35
282: invokestatic  #36
285: aload         6
287: invokestatic  #33
290: aload         6
292: invokestatic  #34
295: ldc           #37
297: invokestatic  #36
300: new           #10
303: dup
304: invokespecial #11
307: ldc           #12
309: invokevirtual #13
312: iload         7
314: invokevirtual #14
317: ldc           #15
319: invokevirtual #13
322: iconst_0
323: invokevirtual #14
326: ldc           #12
328: invokevirtual #13
331: invokevirtual #16
334: iload         7
336: ifne          343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #17
347: aload         8
349: invokestatic  #33
352: aload         8
354: invokestatic  #34
357: ldc           #35
359: invokestatic  #36
362: aload         9
364: invokestatic  #33
367: aload         9
369: invokestatic  #34
372: ldc           #37
374: invokestatic  #36
377: new           #10
380: dup
381: invokespecial #11
384: ldc           #12
386: invokevirtual #13
389: iload         10
391: invokevirtual #14
394: ldc           #15
396: invokevirtual #13
399: iconst_0
400: invokevirtual #14
403: ldc           #12
405: invokevirtual #13
408: invokevirtual #16
411: iload         10
413: ifne          420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #17
424: aload         12
426: invokestatic  #33
429: aload         12
431: invokestatic  #34
434: ldc           #38
436: invokestatic  #36
439: aload         13
441: invokestatic  #33
444: aload         13
446: invokestatic  #34
449: ldc           #38
451: invokestatic  #36
454: aload         14
456: invokestatic  #33
459: aload         14
461: invokestatic  #34
464: ldc           #38
466: invokestatic  #36
469: aload         15
471: invokestatic  #33
474: aload         15
476: invokestatic  #34
479: ldc           #38
481: invokestatic  #36
484: aload         16
486: invokestatic  #33
489: aload         16
491: invokestatic  #34
494: ldc           #38
496: invokestatic  #36
499: aload         17
501: invokestatic  #33
504: return
Exception table:
from    to  target type
246   265   268   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 5395
End line: 5443
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        double[] doubleArray3 = new double[] { (byte) 1 };
        double[] doubleArray4 = new double[] {};
        boolean boolean5 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray3, doubleArray4);
        double[] doubleArray7 = new double[] { (byte) 1 };
        double[] doubleArray8 = new double[] {};
        boolean boolean9 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray7, doubleArray8);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection10 = null;
        double[] doubleArray12 = new double[] { 0 };
        double[] doubleArray14 = new double[] { 0 };
        double[] doubleArray16 = new double[] { 0 };
        double[] doubleArray18 = new double[] { 0 };
        double[] doubleArray20 = new double[] { 0 };
        double[][] doubleArray21 = new double[][] { doubleArray12, doubleArray14, doubleArray16, doubleArray18, doubleArray20 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray7, orderDirection10, doubleArray21);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray3, doubleArray21);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException24 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (short) 1, (java.lang.Object[]) doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation26 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray21, (double) 1079574528);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #446
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: newarray       double
30: dup
31: iconst_0
32: dconst_1
33: dastore
34: astore_2
35: iconst_0
36: newarray       double
38: astore_3
39: aload_2
40: aload_3
41: invokestatic  #24
44: istore        4
46: iconst_1
47: newarray       double
49: dup
50: iconst_0
51: dconst_1
52: dastore
53: astore        5
55: iconst_0
56: newarray       double
58: astore        6
60: aload         5
62: aload         6
64: invokestatic  #24
67: istore        7
69: aconst_null
70: astore        8
72: iconst_1
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: astore        9
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: astore        10
90: iconst_1
91: newarray       double
93: dup
94: iconst_0
95: dconst_0
96: dastore
97: astore        11
99: iconst_1
100: newarray       double
102: dup
103: iconst_0
104: dconst_0
105: dastore
106: astore        12
108: iconst_1
109: newarray       double
111: dup
112: iconst_0
113: dconst_0
114: dastore
115: astore        13
117: iconst_5
118: anewarray     #25
121: dup
122: iconst_0
123: aload         9
125: aastore
126: dup
127: iconst_1
128: aload         10
130: aastore
131: dup
132: iconst_2
133: aload         11
135: aastore
136: dup
137: iconst_3
138: aload         12
140: aastore
141: dup
142: iconst_4
143: aload         13
145: aastore
146: astore        14
148: aload         5
150: aload         8
152: aload         14
154: invokestatic  #26
157: aload_2
158: aload         14
160: invokestatic  #154
163: new           #438
166: dup
167: aload_1
168: iconst_1
169: invokestatic  #439
172: aload         14
174: checkcast     #248
177: invokespecial #440
180: astore        15
182: new           #27
185: dup
186: aload         14
188: ldc2_w        #271
191: invokespecial #30
194: astore        16
196: ldc           #31
198: invokestatic  #21
201: goto          206
204: astore        16
206: aload_2
207: invokestatic  #33
210: aload_2
211: invokestatic  #34
214: ldc           #35
216: invokestatic  #36
219: aload_3
220: invokestatic  #33
223: aload_3
224: invokestatic  #34
227: ldc           #37
229: invokestatic  #36
232: new           #10
235: dup
236: invokespecial #11
239: ldc           #12
241: invokevirtual #13
244: iload         4
246: invokevirtual #14
249: ldc           #15
251: invokevirtual #13
254: iconst_0
255: invokevirtual #14
258: ldc           #12
260: invokevirtual #13
263: invokevirtual #16
266: iload         4
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #17
279: aload         5
281: invokestatic  #33
284: aload         5
286: invokestatic  #34
289: ldc           #35
291: invokestatic  #36
294: aload         6
296: invokestatic  #33
299: aload         6
301: invokestatic  #34
304: ldc           #37
306: invokestatic  #36
309: new           #10
312: dup
313: invokespecial #11
316: ldc           #12
318: invokevirtual #13
321: iload         7
323: invokevirtual #14
326: ldc           #15
328: invokevirtual #13
331: iconst_0
332: invokevirtual #14
335: ldc           #12
337: invokevirtual #13
340: invokevirtual #16
343: iload         7
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #17
356: aload         9
358: invokestatic  #33
361: aload         9
363: invokestatic  #34
366: ldc           #38
368: invokestatic  #36
371: aload         10
373: invokestatic  #33
376: aload         10
378: invokestatic  #34
381: ldc           #38
383: invokestatic  #36
386: aload         11
388: invokestatic  #33
391: aload         11
393: invokestatic  #34
396: ldc           #38
398: invokestatic  #36
401: aload         12
403: invokestatic  #33
406: aload         12
408: invokestatic  #34
411: ldc           #38
413: invokestatic  #36
416: aload         13
418: invokestatic  #33
421: aload         13
423: invokestatic  #34
426: ldc           #38
428: invokestatic  #36
431: aload         14
433: invokestatic  #33
436: return
Exception table:
from    to  target type
182   201   204   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 5446
End line: 5456
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ2();
        double double8 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 6.09767964807105d + "'", double7 == 6.09767964807105d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 9.033252629052738d + "'", double8 == 9.033252629052738d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #139
53: dstore_3
54: aload_1
55: invokevirtual #241
58: dstore        5
60: aload_2
61: invokestatic  #33
64: new           #10
67: dup
68: invokespecial #11
71: ldc           #12
73: invokevirtual #13
76: dload_3
77: invokevirtual #60
80: ldc           #15
82: invokevirtual #13
85: ldc2_w        #148
88: invokevirtual #60
91: ldc           #12
93: invokevirtual #13
96: invokevirtual #16
99: dload_3
100: ldc2_w        #148
103: dcmpl
104: ifne          111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #17
115: new           #10
118: dup
119: invokespecial #11
122: ldc           #12
124: invokevirtual #13
127: dload         5
129: invokevirtual #60
132: ldc           #15
134: invokevirtual #13
137: ldc2_w        #146
140: invokevirtual #60
143: ldc           #12
145: invokevirtual #13
148: invokevirtual #16
151: dload         5
153: ldc2_w        #146
156: dcmpl
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #17
168: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 5459
End line: 5549
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = rotation85.applyTo(rotation88);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = rotation89.getAngles(rotationOrder90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #222
506: astore        65
508: aload         64
510: invokevirtual #96
513: astore        66
515: getstatic     #309
518: astore        67
520: aload         64
522: aload         67
524: invokevirtual #160
527: astore        68
529: aconst_null
530: astore        69
532: aload         68
534: aload         69
536: invokevirtual #57
539: astore        70
541: ldc           #58
543: invokestatic  #21
546: goto          551
549: astore        70
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         4
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         4
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         6
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         6
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         11
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         11
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         13
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         13
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         15
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         15
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         16
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         16
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         18
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         21
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         21
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         25
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         25
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         27
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         27
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         31
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         31
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         33
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         33
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         35
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         35
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         40
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         40
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         42
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         42
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         47
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         47
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         49
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         49
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         51
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         51
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         52
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         52
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         54
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         57
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         57
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         59
1498: invokestatic  #33
1501: aload         60
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         61
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         61
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         64
1561: invokestatic  #33
1564: aload         65
1566: invokestatic  #33
1569: aload         66
1571: invokestatic  #33
1574: aload         67
1576: invokestatic  #33
1579: aload         68
1581: invokestatic  #33
1584: return
Exception table:
from    to  target type
532   546   549   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 5552
End line: 5628
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        double double85 = vector3D30.getY();
        double double86 = vector3D30.getNorm();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.6244726102307315d + "'", double85 == 0.6244726102307315d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: invokevirtual #450
499: dstore        64
501: aload         20
503: invokevirtual #261
506: dstore        66
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: dload         4
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_0
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         4
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #17
557: new           #10
560: dup
561: invokespecial #11
564: ldc           #12
566: invokevirtual #13
569: dload         6
571: invokevirtual #60
574: ldc           #15
576: invokevirtual #13
579: dconst_0
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         6
593: dconst_0
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: new           #10
609: dup
610: invokespecial #11
613: ldc           #12
615: invokevirtual #13
618: dload         11
620: invokevirtual #60
623: ldc           #15
625: invokevirtual #13
628: dconst_0
629: invokevirtual #60
632: ldc           #12
634: invokevirtual #13
637: invokevirtual #16
640: dload         11
642: dconst_0
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #17
655: new           #10
658: dup
659: invokespecial #11
662: ldc           #12
664: invokevirtual #13
667: dload         13
669: invokevirtual #60
672: ldc           #15
674: invokevirtual #13
677: dconst_0
678: invokevirtual #60
681: ldc           #12
683: invokevirtual #13
686: invokevirtual #16
689: dload         13
691: dconst_0
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #17
704: new           #10
707: dup
708: invokespecial #11
711: ldc           #12
713: invokevirtual #13
716: iload         15
718: invokevirtual #14
721: ldc           #15
723: invokevirtual #13
726: iconst_0
727: invokevirtual #14
730: ldc           #12
732: invokevirtual #13
735: invokevirtual #16
738: iload         15
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: new           #10
754: dup
755: invokespecial #11
758: ldc           #12
760: invokevirtual #13
763: dload         16
765: invokevirtual #60
768: ldc           #15
770: invokevirtual #13
773: dconst_0
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         16
787: dconst_0
788: dcmpl
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #17
800: aload         18
802: invokestatic  #33
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         21
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         21
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         25
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         25
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         27
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #61
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         27
941: ldc2_w        #61
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         31
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         31
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         33
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: ldc2_w        #61
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         33
1043: ldc2_w        #61
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: dconst_0
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         35
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #17
1107: new           #10
1110: dup
1111: invokespecial #11
1114: ldc           #12
1116: invokevirtual #13
1119: dload         40
1121: invokevirtual #60
1124: ldc           #15
1126: invokevirtual #13
1129: dconst_0
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         40
1143: dconst_0
1144: dcmpl
1145: ifne          1152
1148: iconst_1
1149: goto          1153
1152: iconst_0
1153: invokestatic  #17
1156: new           #10
1159: dup
1160: invokespecial #11
1163: ldc           #12
1165: invokevirtual #13
1168: dload         42
1170: invokevirtual #60
1173: ldc           #15
1175: invokevirtual #13
1178: dconst_0
1179: invokevirtual #60
1182: ldc           #12
1184: invokevirtual #13
1187: invokevirtual #16
1190: dload         42
1192: dconst_0
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #17
1205: new           #10
1208: dup
1209: invokespecial #11
1212: ldc           #12
1214: invokevirtual #13
1217: dload         47
1219: invokevirtual #60
1222: ldc           #15
1224: invokevirtual #13
1227: dconst_0
1228: invokevirtual #60
1231: ldc           #12
1233: invokevirtual #13
1236: invokevirtual #16
1239: dload         47
1241: dconst_0
1242: dcmpl
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #17
1254: new           #10
1257: dup
1258: invokespecial #11
1261: ldc           #12
1263: invokevirtual #13
1266: dload         49
1268: invokevirtual #60
1271: ldc           #15
1273: invokevirtual #13
1276: dconst_0
1277: invokevirtual #60
1280: ldc           #12
1282: invokevirtual #13
1285: invokevirtual #16
1288: dload         49
1290: dconst_0
1291: dcmpl
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #17
1303: new           #10
1306: dup
1307: invokespecial #11
1310: ldc           #12
1312: invokevirtual #13
1315: iload         51
1317: invokevirtual #14
1320: ldc           #15
1322: invokevirtual #13
1325: iconst_0
1326: invokevirtual #14
1329: ldc           #12
1331: invokevirtual #13
1334: invokevirtual #16
1337: iload         51
1339: ifne          1346
1342: iconst_1
1343: goto          1347
1346: iconst_0
1347: invokestatic  #17
1350: new           #10
1353: dup
1354: invokespecial #11
1357: ldc           #12
1359: invokevirtual #13
1362: dload         52
1364: invokevirtual #60
1367: ldc           #15
1369: invokevirtual #13
1372: dconst_0
1373: invokevirtual #60
1376: ldc           #12
1378: invokevirtual #13
1381: invokevirtual #16
1384: dload         52
1386: dconst_0
1387: dcmpl
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #17
1399: aload         54
1401: invokestatic  #33
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         57
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         57
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         59
1455: invokestatic  #33
1458: aload         60
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         61
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: ldc2_w        #63
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         61
1501: ldc2_w        #63
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: new           #10
1519: dup
1520: invokespecial #11
1523: ldc           #12
1525: invokevirtual #13
1528: dload         64
1530: invokevirtual #60
1533: ldc           #15
1535: invokevirtual #13
1538: ldc2_w        #105
1541: invokevirtual #60
1544: ldc           #12
1546: invokevirtual #13
1549: invokevirtual #16
1552: dload         64
1554: ldc2_w        #105
1557: dcmpl
1558: ifne          1565
1561: iconst_1
1562: goto          1566
1565: iconst_0
1566: invokestatic  #17
1569: new           #10
1572: dup
1573: invokespecial #11
1576: ldc           #12
1578: invokevirtual #13
1581: dload         66
1583: invokevirtual #60
1586: ldc           #15
1588: invokevirtual #13
1591: dconst_1
1592: invokevirtual #60
1595: ldc           #12
1597: invokevirtual #13
1600: invokevirtual #16
1603: dload         66
1605: dconst_1
1606: dcmpl
1607: ifne          1614
1610: iconst_1
1611: goto          1615
1614: iconst_0
1615: invokestatic  #17
1618: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 5631
End line: 5711
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(100.0d);
        double double87 = vector3D30.getNormSq();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector88 = vector3D30.getZero();
        boolean boolean89 = vector3D30.isNaN();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0000000000000002d + "'", double87 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #451
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #68
499: invokevirtual #107
502: astore        64
504: aload         20
506: invokevirtual #111
509: dstore        65
511: aload         20
513: invokevirtual #198
516: astore        67
518: aload         20
520: invokevirtual #307
523: istore        68
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         4
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         4
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: new           #10
577: dup
578: invokespecial #11
581: ldc           #12
583: invokevirtual #13
586: dload         6
588: invokevirtual #60
591: ldc           #15
593: invokevirtual #13
596: dconst_0
597: invokevirtual #60
600: ldc           #12
602: invokevirtual #13
605: invokevirtual #16
608: dload         6
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: new           #10
626: dup
627: invokespecial #11
630: ldc           #12
632: invokevirtual #13
635: dload         11
637: invokevirtual #60
640: ldc           #15
642: invokevirtual #13
645: dconst_0
646: invokevirtual #60
649: ldc           #12
651: invokevirtual #13
654: invokevirtual #16
657: dload         11
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #17
672: new           #10
675: dup
676: invokespecial #11
679: ldc           #12
681: invokevirtual #13
684: dload         13
686: invokevirtual #60
689: ldc           #15
691: invokevirtual #13
694: dconst_0
695: invokevirtual #60
698: ldc           #12
700: invokevirtual #13
703: invokevirtual #16
706: dload         13
708: dconst_0
709: dcmpl
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #17
721: new           #10
724: dup
725: invokespecial #11
728: ldc           #12
730: invokevirtual #13
733: iload         15
735: invokevirtual #14
738: ldc           #15
740: invokevirtual #13
743: iconst_0
744: invokevirtual #14
747: ldc           #12
749: invokevirtual #13
752: invokevirtual #16
755: iload         15
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: dload         16
782: invokevirtual #60
785: ldc           #15
787: invokevirtual #13
790: dconst_0
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         16
804: dconst_0
805: dcmpl
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #17
817: aload         18
819: invokestatic  #33
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         21
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         21
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: new           #10
874: dup
875: invokespecial #11
878: ldc           #12
880: invokevirtual #13
883: dload         25
885: invokevirtual #60
888: ldc           #15
890: invokevirtual #13
893: dconst_0
894: invokevirtual #60
897: ldc           #12
899: invokevirtual #13
902: invokevirtual #16
905: dload         25
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: dload         27
934: invokevirtual #60
937: ldc           #15
939: invokevirtual #13
942: ldc2_w        #61
945: invokevirtual #60
948: ldc           #12
950: invokevirtual #13
953: invokevirtual #16
956: dload         27
958: ldc2_w        #61
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #17
973: new           #10
976: dup
977: invokespecial #11
980: ldc           #12
982: invokevirtual #13
985: dload         31
987: invokevirtual #60
990: ldc           #15
992: invokevirtual #13
995: dconst_0
996: invokevirtual #60
999: ldc           #12
1001: invokevirtual #13
1004: invokevirtual #16
1007: dload         31
1009: dconst_0
1010: dcmpl
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #17
1022: new           #10
1025: dup
1026: invokespecial #11
1029: ldc           #12
1031: invokevirtual #13
1034: dload         33
1036: invokevirtual #60
1039: ldc           #15
1041: invokevirtual #13
1044: ldc2_w        #61
1047: invokevirtual #60
1050: ldc           #12
1052: invokevirtual #13
1055: invokevirtual #16
1058: dload         33
1060: ldc2_w        #61
1063: dcmpl
1064: ifne          1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #17
1075: new           #10
1078: dup
1079: invokespecial #11
1082: ldc           #12
1084: invokevirtual #13
1087: dload         35
1089: invokevirtual #60
1092: ldc           #15
1094: invokevirtual #13
1097: dconst_0
1098: invokevirtual #60
1101: ldc           #12
1103: invokevirtual #13
1106: invokevirtual #16
1109: dload         35
1111: dconst_0
1112: dcmpl
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #17
1124: new           #10
1127: dup
1128: invokespecial #11
1131: ldc           #12
1133: invokevirtual #13
1136: dload         40
1138: invokevirtual #60
1141: ldc           #15
1143: invokevirtual #13
1146: dconst_0
1147: invokevirtual #60
1150: ldc           #12
1152: invokevirtual #13
1155: invokevirtual #16
1158: dload         40
1160: dconst_0
1161: dcmpl
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #17
1173: new           #10
1176: dup
1177: invokespecial #11
1180: ldc           #12
1182: invokevirtual #13
1185: dload         42
1187: invokevirtual #60
1190: ldc           #15
1192: invokevirtual #13
1195: dconst_0
1196: invokevirtual #60
1199: ldc           #12
1201: invokevirtual #13
1204: invokevirtual #16
1207: dload         42
1209: dconst_0
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #17
1222: new           #10
1225: dup
1226: invokespecial #11
1229: ldc           #12
1231: invokevirtual #13
1234: dload         47
1236: invokevirtual #60
1239: ldc           #15
1241: invokevirtual #13
1244: dconst_0
1245: invokevirtual #60
1248: ldc           #12
1250: invokevirtual #13
1253: invokevirtual #16
1256: dload         47
1258: dconst_0
1259: dcmpl
1260: ifne          1267
1263: iconst_1
1264: goto          1268
1267: iconst_0
1268: invokestatic  #17
1271: new           #10
1274: dup
1275: invokespecial #11
1278: ldc           #12
1280: invokevirtual #13
1283: dload         49
1285: invokevirtual #60
1288: ldc           #15
1290: invokevirtual #13
1293: dconst_0
1294: invokevirtual #60
1297: ldc           #12
1299: invokevirtual #13
1302: invokevirtual #16
1305: dload         49
1307: dconst_0
1308: dcmpl
1309: ifne          1316
1312: iconst_1
1313: goto          1317
1316: iconst_0
1317: invokestatic  #17
1320: new           #10
1323: dup
1324: invokespecial #11
1327: ldc           #12
1329: invokevirtual #13
1332: iload         51
1334: invokevirtual #14
1337: ldc           #15
1339: invokevirtual #13
1342: iconst_0
1343: invokevirtual #14
1346: ldc           #12
1348: invokevirtual #13
1351: invokevirtual #16
1354: iload         51
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: dload         52
1381: invokevirtual #60
1384: ldc           #15
1386: invokevirtual #13
1389: dconst_0
1390: invokevirtual #60
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: dload         52
1403: dconst_0
1404: dcmpl
1405: ifne          1412
1408: iconst_1
1409: goto          1413
1412: iconst_0
1413: invokestatic  #17
1416: aload         54
1418: invokestatic  #33
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         57
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         57
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         59
1472: invokestatic  #33
1475: aload         60
1477: invokestatic  #33
1480: new           #10
1483: dup
1484: invokespecial #11
1487: ldc           #12
1489: invokevirtual #13
1492: dload         61
1494: invokevirtual #60
1497: ldc           #15
1499: invokevirtual #13
1502: ldc2_w        #63
1505: invokevirtual #60
1508: ldc           #12
1510: invokevirtual #13
1513: invokevirtual #16
1516: dload         61
1518: ldc2_w        #63
1521: dcmpl
1522: ifne          1529
1525: iconst_1
1526: goto          1530
1529: iconst_0
1530: invokestatic  #17
1533: aload         64
1535: invokestatic  #33
1538: new           #10
1541: dup
1542: invokespecial #11
1545: ldc           #12
1547: invokevirtual #13
1550: dload         65
1552: invokevirtual #60
1555: ldc           #15
1557: invokevirtual #13
1560: ldc2_w        #63
1563: invokevirtual #60
1566: ldc           #12
1568: invokevirtual #13
1571: invokevirtual #16
1574: dload         65
1576: ldc2_w        #63
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: aload         67
1593: invokestatic  #33
1596: new           #10
1599: dup
1600: invokespecial #11
1603: ldc           #12
1605: invokevirtual #13
1608: iload         68
1610: invokevirtual #14
1613: ldc           #15
1615: invokevirtual #13
1618: iconst_0
1619: invokevirtual #14
1622: ldc           #12
1624: invokevirtual #13
1627: invokevirtual #16
1630: iload         68
1632: ifne          1639
1635: iconst_1
1636: goto          1640
1639: iconst_0
1640: invokestatic  #17
1643: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 5714
End line: 5781
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double double65 = rotation64.getQ1();
        double double66 = rotation64.getQ1();
        double double67 = rotation64.getQ2();
        double double68 = rotation64.getQ1();
        double double69 = rotation64.getQ0();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #94
387: dstore        50
389: aload         49
391: invokevirtual #94
394: dstore        52
396: aload         49
398: invokevirtual #139
401: dstore        54
403: aload         49
405: invokevirtual #94
408: dstore        56
410: aload         49
412: invokevirtual #241
415: dstore        58
417: new           #10
420: dup
421: invokespecial #11
424: ldc           #12
426: invokevirtual #13
429: dload         4
431: invokevirtual #60
434: ldc           #15
436: invokevirtual #13
439: dconst_0
440: invokevirtual #60
443: ldc           #12
445: invokevirtual #13
448: invokevirtual #16
451: dload         4
453: dconst_0
454: dcmpl
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #17
466: new           #10
469: dup
470: invokespecial #11
473: ldc           #12
475: invokevirtual #13
478: dload         6
480: invokevirtual #60
483: ldc           #15
485: invokevirtual #13
488: dconst_0
489: invokevirtual #60
492: ldc           #12
494: invokevirtual #13
497: invokevirtual #16
500: dload         6
502: dconst_0
503: dcmpl
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #17
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: iload         8
529: invokevirtual #14
532: ldc           #15
534: invokevirtual #13
537: iconst_0
538: invokevirtual #14
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: iload         8
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #17
562: new           #10
565: dup
566: invokespecial #11
569: ldc           #12
571: invokevirtual #13
574: dload         9
576: invokevirtual #60
579: ldc           #15
581: invokevirtual #13
584: ldc2_w        #167
587: invokevirtual #60
590: ldc           #12
592: invokevirtual #13
595: invokevirtual #16
598: dload         9
600: ldc2_w        #167
603: dcmpl
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #17
615: new           #10
618: dup
619: invokespecial #11
622: ldc           #12
624: invokevirtual #13
627: dload         13
629: invokevirtual #60
632: ldc           #15
634: invokevirtual #13
637: dconst_0
638: invokevirtual #60
641: ldc           #12
643: invokevirtual #13
646: invokevirtual #16
649: dload         13
651: dconst_0
652: dcmpl
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #17
664: new           #10
667: dup
668: invokespecial #11
671: ldc           #12
673: invokevirtual #13
676: dload         15
678: invokevirtual #60
681: ldc           #15
683: invokevirtual #13
686: ldc2_w        #61
689: invokevirtual #60
692: ldc           #12
694: invokevirtual #13
697: invokevirtual #16
700: dload         15
702: ldc2_w        #61
705: dcmpl
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #17
717: new           #10
720: dup
721: invokespecial #11
724: ldc           #12
726: invokevirtual #13
729: dload         19
731: invokevirtual #60
734: ldc           #15
736: invokevirtual #13
739: dconst_0
740: invokevirtual #60
743: ldc           #12
745: invokevirtual #13
748: invokevirtual #16
751: dload         19
753: dconst_0
754: dcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         21
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: ldc2_w        #61
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         21
804: ldc2_w        #61
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #17
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         23
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: dconst_0
842: invokevirtual #60
845: ldc           #12
847: invokevirtual #13
850: invokevirtual #16
853: dload         23
855: dconst_0
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         28
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         28
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         30
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: dconst_0
940: invokevirtual #60
943: ldc           #12
945: invokevirtual #13
948: invokevirtual #16
951: dload         30
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         35
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: dconst_0
989: invokevirtual #60
992: ldc           #12
994: invokevirtual #13
997: invokevirtual #16
1000: dload         35
1002: dconst_0
1003: dcmpl
1004: ifne          1011
1007: iconst_1
1008: goto          1012
1011: iconst_0
1012: invokestatic  #17
1015: new           #10
1018: dup
1019: invokespecial #11
1022: ldc           #12
1024: invokevirtual #13
1027: dload         37
1029: invokevirtual #60
1032: ldc           #15
1034: invokevirtual #13
1037: dconst_0
1038: invokevirtual #60
1041: ldc           #12
1043: invokevirtual #13
1046: invokevirtual #16
1049: dload         37
1051: dconst_0
1052: dcmpl
1053: ifne          1060
1056: iconst_1
1057: goto          1061
1060: iconst_0
1061: invokestatic  #17
1064: new           #10
1067: dup
1068: invokespecial #11
1071: ldc           #12
1073: invokevirtual #13
1076: iload         39
1078: invokevirtual #14
1081: ldc           #15
1083: invokevirtual #13
1086: iconst_0
1087: invokevirtual #14
1090: ldc           #12
1092: invokevirtual #13
1095: invokevirtual #16
1098: iload         39
1100: ifne          1107
1103: iconst_1
1104: goto          1108
1107: iconst_0
1108: invokestatic  #17
1111: new           #10
1114: dup
1115: invokespecial #11
1118: ldc           #12
1120: invokevirtual #13
1123: dload         40
1125: invokevirtual #60
1128: ldc           #15
1130: invokevirtual #13
1133: dconst_0
1134: invokevirtual #60
1137: ldc           #12
1139: invokevirtual #13
1142: invokevirtual #16
1145: dload         40
1147: dconst_0
1148: dcmpl
1149: ifne          1156
1152: iconst_1
1153: goto          1157
1156: iconst_0
1157: invokestatic  #17
1160: aload         42
1162: invokestatic  #33
1165: new           #10
1168: dup
1169: invokespecial #11
1172: ldc           #12
1174: invokevirtual #13
1177: dload         45
1179: invokevirtual #60
1182: ldc           #15
1184: invokevirtual #13
1187: dconst_0
1188: invokevirtual #60
1191: ldc           #12
1193: invokevirtual #13
1196: invokevirtual #16
1199: dload         45
1201: dconst_0
1202: dcmpl
1203: ifne          1210
1206: iconst_1
1207: goto          1211
1210: iconst_0
1211: invokestatic  #17
1214: aload         47
1216: invokestatic  #33
1219: aload         48
1221: invokestatic  #33
1224: new           #10
1227: dup
1228: invokespecial #11
1231: ldc           #12
1233: invokevirtual #13
1236: dload         50
1238: invokevirtual #60
1241: ldc           #15
1243: invokevirtual #13
1246: dconst_0
1247: invokevirtual #60
1250: ldc           #12
1252: invokevirtual #13
1255: invokevirtual #16
1258: dload         50
1260: dconst_0
1261: dcmpl
1262: ifne          1269
1265: iconst_1
1266: goto          1270
1269: iconst_0
1270: invokestatic  #17
1273: new           #10
1276: dup
1277: invokespecial #11
1280: ldc           #12
1282: invokevirtual #13
1285: dload         52
1287: invokevirtual #60
1290: ldc           #15
1292: invokevirtual #13
1295: dconst_0
1296: invokevirtual #60
1299: ldc           #12
1301: invokevirtual #13
1304: invokevirtual #16
1307: dload         52
1309: dconst_0
1310: dcmpl
1311: ifne          1318
1314: iconst_1
1315: goto          1319
1318: iconst_0
1319: invokestatic  #17
1322: new           #10
1325: dup
1326: invokespecial #11
1329: ldc           #12
1331: invokevirtual #13
1334: dload         54
1336: invokevirtual #60
1339: ldc           #15
1341: invokevirtual #13
1344: dconst_0
1345: invokevirtual #60
1348: ldc           #12
1350: invokevirtual #13
1353: invokevirtual #16
1356: dload         54
1358: dconst_0
1359: dcmpl
1360: ifne          1367
1363: iconst_1
1364: goto          1368
1367: iconst_0
1368: invokestatic  #17
1371: new           #10
1374: dup
1375: invokespecial #11
1378: ldc           #12
1380: invokevirtual #13
1383: dload         56
1385: invokevirtual #60
1388: ldc           #15
1390: invokevirtual #13
1393: dconst_0
1394: invokevirtual #60
1397: ldc           #12
1399: invokevirtual #13
1402: invokevirtual #16
1405: dload         56
1407: dconst_0
1408: dcmpl
1409: ifne          1416
1412: iconst_1
1413: goto          1417
1416: iconst_0
1417: invokestatic  #17
1420: new           #10
1423: dup
1424: invokespecial #11
1427: ldc           #12
1429: invokevirtual #13
1432: dload         58
1434: invokevirtual #60
1437: ldc           #15
1439: invokevirtual #13
1442: dconst_1
1443: invokevirtual #60
1446: ldc           #12
1448: invokevirtual #13
1451: invokevirtual #16
1454: dload         58
1456: dconst_1
1457: dcmpl
1458: ifne          1465
1461: iconst_1
1462: goto          1466
1465: iconst_0
1466: invokestatic  #17
1469: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 5784
End line: 5798
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = rotation6.getAxis();
        double[][] doubleArray9 = rotation6.getMatrix();
        org.apache.commons.math.exception.MathArithmeticException mathArithmeticException10 = new org.apache.commons.math.exception.MathArithmeticException(localizable0, (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.exception.util.ExceptionContext exceptionContext11 = mathArithmeticException10.getContext();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(exceptionContext11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: ldc2_w        #146
34: ldc2_w        #72
37: ldc2_w        #148
40: dconst_1
41: iconst_0
42: invokespecial #150
45: astore_2
46: aload_2
47: invokevirtual #96
50: astore_3
51: aload_2
52: invokevirtual #96
55: astore        4
57: aload_2
58: invokevirtual #222
61: astore        5
63: new           #441
66: dup
67: aload_1
68: aload         5
70: checkcast     #248
73: invokespecial #442
76: astore        6
78: aload         6
80: invokevirtual #454
83: astore        7
85: aload_3
86: invokestatic  #33
89: aload         4
91: invokestatic  #33
94: aload         5
96: invokestatic  #33
99: aload         7
101: invokestatic  #33
104: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 5801
End line: 5866
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        org.apache.commons.math.geometry.Space space65 = vector3D18.getSpace();
        int int66 = space65.getDimension();
        int int67 = space65.getDimension();
        int int68 = space65.getDimension();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(space65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         12
384: invokevirtual #51
387: astore        50
389: aload         50
391: invokeinterface #456,  1
396: istore        51
398: aload         50
400: invokeinterface #456,  1
405: istore        52
407: aload         50
409: invokeinterface #456,  1
414: istore        53
416: new           #10
419: dup
420: invokespecial #11
423: ldc           #12
425: invokevirtual #13
428: dload         4
430: invokevirtual #60
433: ldc           #15
435: invokevirtual #13
438: dconst_0
439: invokevirtual #60
442: ldc           #12
444: invokevirtual #13
447: invokevirtual #16
450: dload         4
452: dconst_0
453: dcmpl
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #17
465: new           #10
468: dup
469: invokespecial #11
472: ldc           #12
474: invokevirtual #13
477: dload         6
479: invokevirtual #60
482: ldc           #15
484: invokevirtual #13
487: dconst_0
488: invokevirtual #60
491: ldc           #12
493: invokevirtual #13
496: invokevirtual #16
499: dload         6
501: dconst_0
502: dcmpl
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #17
514: new           #10
517: dup
518: invokespecial #11
521: ldc           #12
523: invokevirtual #13
526: iload         8
528: invokevirtual #14
531: ldc           #15
533: invokevirtual #13
536: iconst_0
537: invokevirtual #14
540: ldc           #12
542: invokevirtual #13
545: invokevirtual #16
548: iload         8
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #17
561: new           #10
564: dup
565: invokespecial #11
568: ldc           #12
570: invokevirtual #13
573: dload         9
575: invokevirtual #60
578: ldc           #15
580: invokevirtual #13
583: ldc2_w        #167
586: invokevirtual #60
589: ldc           #12
591: invokevirtual #13
594: invokevirtual #16
597: dload         9
599: ldc2_w        #167
602: dcmpl
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #17
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: dload         13
628: invokevirtual #60
631: ldc           #15
633: invokevirtual #13
636: dconst_0
637: invokevirtual #60
640: ldc           #12
642: invokevirtual #13
645: invokevirtual #16
648: dload         13
650: dconst_0
651: dcmpl
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #17
663: new           #10
666: dup
667: invokespecial #11
670: ldc           #12
672: invokevirtual #13
675: dload         15
677: invokevirtual #60
680: ldc           #15
682: invokevirtual #13
685: ldc2_w        #61
688: invokevirtual #60
691: ldc           #12
693: invokevirtual #13
696: invokevirtual #16
699: dload         15
701: ldc2_w        #61
704: dcmpl
705: ifne          712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #17
716: new           #10
719: dup
720: invokespecial #11
723: ldc           #12
725: invokevirtual #13
728: dload         19
730: invokevirtual #60
733: ldc           #15
735: invokevirtual #13
738: dconst_0
739: invokevirtual #60
742: ldc           #12
744: invokevirtual #13
747: invokevirtual #16
750: dload         19
752: dconst_0
753: dcmpl
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #17
765: new           #10
768: dup
769: invokespecial #11
772: ldc           #12
774: invokevirtual #13
777: dload         21
779: invokevirtual #60
782: ldc           #15
784: invokevirtual #13
787: ldc2_w        #61
790: invokevirtual #60
793: ldc           #12
795: invokevirtual #13
798: invokevirtual #16
801: dload         21
803: ldc2_w        #61
806: dcmpl
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #17
818: new           #10
821: dup
822: invokespecial #11
825: ldc           #12
827: invokevirtual #13
830: dload         23
832: invokevirtual #60
835: ldc           #15
837: invokevirtual #13
840: dconst_0
841: invokevirtual #60
844: ldc           #12
846: invokevirtual #13
849: invokevirtual #16
852: dload         23
854: dconst_0
855: dcmpl
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #17
867: new           #10
870: dup
871: invokespecial #11
874: ldc           #12
876: invokevirtual #13
879: dload         28
881: invokevirtual #60
884: ldc           #15
886: invokevirtual #13
889: dconst_0
890: invokevirtual #60
893: ldc           #12
895: invokevirtual #13
898: invokevirtual #16
901: dload         28
903: dconst_0
904: dcmpl
905: ifne          912
908: iconst_1
909: goto          913
912: iconst_0
913: invokestatic  #17
916: new           #10
919: dup
920: invokespecial #11
923: ldc           #12
925: invokevirtual #13
928: dload         30
930: invokevirtual #60
933: ldc           #15
935: invokevirtual #13
938: dconst_0
939: invokevirtual #60
942: ldc           #12
944: invokevirtual #13
947: invokevirtual #16
950: dload         30
952: dconst_0
953: dcmpl
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #17
965: new           #10
968: dup
969: invokespecial #11
972: ldc           #12
974: invokevirtual #13
977: dload         35
979: invokevirtual #60
982: ldc           #15
984: invokevirtual #13
987: dconst_0
988: invokevirtual #60
991: ldc           #12
993: invokevirtual #13
996: invokevirtual #16
999: dload         35
1001: dconst_0
1002: dcmpl
1003: ifne          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #17
1014: new           #10
1017: dup
1018: invokespecial #11
1021: ldc           #12
1023: invokevirtual #13
1026: dload         37
1028: invokevirtual #60
1031: ldc           #15
1033: invokevirtual #13
1036: dconst_0
1037: invokevirtual #60
1040: ldc           #12
1042: invokevirtual #13
1045: invokevirtual #16
1048: dload         37
1050: dconst_0
1051: dcmpl
1052: ifne          1059
1055: iconst_1
1056: goto          1060
1059: iconst_0
1060: invokestatic  #17
1063: new           #10
1066: dup
1067: invokespecial #11
1070: ldc           #12
1072: invokevirtual #13
1075: iload         39
1077: invokevirtual #14
1080: ldc           #15
1082: invokevirtual #13
1085: iconst_0
1086: invokevirtual #14
1089: ldc           #12
1091: invokevirtual #13
1094: invokevirtual #16
1097: iload         39
1099: ifne          1106
1102: iconst_1
1103: goto          1107
1106: iconst_0
1107: invokestatic  #17
1110: new           #10
1113: dup
1114: invokespecial #11
1117: ldc           #12
1119: invokevirtual #13
1122: dload         40
1124: invokevirtual #60
1127: ldc           #15
1129: invokevirtual #13
1132: dconst_0
1133: invokevirtual #60
1136: ldc           #12
1138: invokevirtual #13
1141: invokevirtual #16
1144: dload         40
1146: dconst_0
1147: dcmpl
1148: ifne          1155
1151: iconst_1
1152: goto          1156
1155: iconst_0
1156: invokestatic  #17
1159: aload         42
1161: invokestatic  #33
1164: new           #10
1167: dup
1168: invokespecial #11
1171: ldc           #12
1173: invokevirtual #13
1176: dload         45
1178: invokevirtual #60
1181: ldc           #15
1183: invokevirtual #13
1186: dconst_0
1187: invokevirtual #60
1190: ldc           #12
1192: invokevirtual #13
1195: invokevirtual #16
1198: dload         45
1200: dconst_0
1201: dcmpl
1202: ifne          1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #17
1213: aload         47
1215: invokestatic  #33
1218: aload         48
1220: invokestatic  #33
1223: aload         50
1225: invokestatic  #33
1228: new           #10
1231: dup
1232: invokespecial #11
1235: ldc           #12
1237: invokevirtual #13
1240: iload         51
1242: invokevirtual #457
1245: ldc           #15
1247: invokevirtual #13
1250: iconst_3
1251: invokevirtual #457
1254: ldc           #12
1256: invokevirtual #13
1259: invokevirtual #16
1262: iload         51
1264: iconst_3
1265: if_icmpne     1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: iload         52
1290: invokevirtual #457
1293: ldc           #15
1295: invokevirtual #13
1298: iconst_3
1299: invokevirtual #457
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: iload         52
1312: iconst_3
1313: if_icmpne     1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #17
1324: new           #10
1327: dup
1328: invokespecial #11
1331: ldc           #12
1333: invokevirtual #13
1336: iload         53
1338: invokevirtual #457
1341: ldc           #15
1343: invokevirtual #13
1346: iconst_3
1347: invokevirtual #457
1350: ldc           #12
1352: invokevirtual #13
1355: invokevirtual #16
1358: iload         53
1360: iconst_3
1361: if_icmpne     1368
1364: iconst_1
1365: goto          1369
1368: iconst_0
1369: invokestatic  #17
1372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 5869
End line: 5950
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException3 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 100.0f, (java.lang.Number) Double.POSITIVE_INFINITY, (int) (short) 10);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        double double91 = rotation90.getQ2();
        double[][] doubleArray92 = rotation90.getMatrix();
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException(localizable5, (java.lang.Object[]) doubleArray92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException3, localizable4, (java.lang.Object[]) doubleArray92);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #321
28: dup
29: ldc_w         #437
32: invokestatic  #379
35: ldc2_w        #133
38: invokestatic  #319
41: bipush        10
43: invokespecial #325
46: astore_1
47: aconst_null
48: astore_2
49: aconst_null
50: astore_3
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore        4
64: new           #43
67: dup
68: dconst_1
69: ldc2_w        #44
72: invokespecial #46
75: astore        5
77: new           #43
80: dup
81: dconst_1
82: ldc2_w        #44
85: invokespecial #46
88: astore        6
90: aload         5
92: aload         6
94: invokevirtual #47
97: dstore        7
99: aload         4
101: aload         6
103: invokestatic  #48
106: dstore        9
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: new           #43
124: dup
125: dconst_1
126: ldc2_w        #44
129: invokespecial #46
132: astore        12
134: new           #43
137: dup
138: dconst_1
139: ldc2_w        #44
142: invokespecial #46
145: astore        13
147: aload         12
149: aload         13
151: invokevirtual #47
154: dstore        14
156: aload         11
158: aload         13
160: invokestatic  #48
163: dstore        16
165: aload         11
167: invokevirtual #49
170: istore        18
172: aload         4
174: aload         11
176: invokevirtual #50
179: dstore        19
181: aload         11
183: invokevirtual #51
186: astore        21
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        22
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        23
214: aload         22
216: aload         23
218: invokevirtual #47
221: dstore        24
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        26
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        27
249: aload         26
251: aload         27
253: invokevirtual #47
256: dstore        28
258: aload         27
260: invokevirtual #52
263: dstore        30
265: new           #43
268: dup
269: dconst_1
270: ldc2_w        #44
273: invokespecial #46
276: astore        32
278: new           #43
281: dup
282: dconst_1
283: ldc2_w        #44
286: invokespecial #46
289: astore        33
291: aload         32
293: aload         33
295: invokevirtual #47
298: dstore        34
300: aload         33
302: invokevirtual #52
305: dstore        36
307: aload         27
309: aload         33
311: invokevirtual #53
314: dstore        38
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        40
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        41
342: new           #43
345: dup
346: dconst_1
347: ldc2_w        #44
350: invokespecial #46
353: astore        42
355: aload         41
357: aload         42
359: invokevirtual #47
362: dstore        43
364: aload         40
366: aload         42
368: invokestatic  #48
371: dstore        45
373: new           #43
376: dup
377: dconst_1
378: ldc2_w        #44
381: invokespecial #46
384: astore        47
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        48
399: new           #43
402: dup
403: dconst_1
404: ldc2_w        #44
407: invokespecial #46
410: astore        49
412: aload         48
414: aload         49
416: invokevirtual #47
419: dstore        50
421: aload         47
423: aload         49
425: invokestatic  #48
428: dstore        52
430: aload         47
432: invokevirtual #49
435: istore        54
437: aload         40
439: aload         47
441: invokevirtual #50
444: dstore        55
446: aload         47
448: invokevirtual #54
451: astore        57
453: new           #43
456: dup
457: dconst_1
458: ldc2_w        #44
461: invokespecial #46
464: astore        58
466: new           #43
469: dup
470: dconst_1
471: ldc2_w        #44
474: invokespecial #46
477: astore        59
479: aload         58
481: aload         59
483: invokevirtual #47
486: dstore        60
488: aload         57
490: aload         58
492: invokevirtual #55
495: astore        62
497: aload         27
499: aload         62
501: invokevirtual #55
504: astore        63
506: aload         23
508: aload         62
510: invokevirtual #53
513: dstore        64
515: new           #27
518: dup
519: aload         11
521: aload         23
523: invokespecial #56
526: astore        66
528: aload         66
530: invokevirtual #139
533: dstore        67
535: aload         66
537: invokevirtual #222
540: astore        69
542: new           #265
545: dup
546: aload_3
547: aload         69
549: checkcast     #248
552: invokespecial #266
555: astore        70
557: new           #265
560: dup
561: aload_1
562: aload_2
563: aload         69
565: checkcast     #248
568: invokespecial #383
571: astore        71
573: new           #10
576: dup
577: invokespecial #11
580: ldc           #12
582: invokevirtual #13
585: dload         7
587: invokevirtual #60
590: ldc           #15
592: invokevirtual #13
595: dconst_0
596: invokevirtual #60
599: ldc           #12
601: invokevirtual #13
604: invokevirtual #16
607: dload         7
609: dconst_0
610: dcmpl
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #17
622: new           #10
625: dup
626: invokespecial #11
629: ldc           #12
631: invokevirtual #13
634: dload         9
636: invokevirtual #60
639: ldc           #15
641: invokevirtual #13
644: dconst_0
645: invokevirtual #60
648: ldc           #12
650: invokevirtual #13
653: invokevirtual #16
656: dload         9
658: dconst_0
659: dcmpl
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #17
671: new           #10
674: dup
675: invokespecial #11
678: ldc           #12
680: invokevirtual #13
683: dload         14
685: invokevirtual #60
688: ldc           #15
690: invokevirtual #13
693: dconst_0
694: invokevirtual #60
697: ldc           #12
699: invokevirtual #13
702: invokevirtual #16
705: dload         14
707: dconst_0
708: dcmpl
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #17
720: new           #10
723: dup
724: invokespecial #11
727: ldc           #12
729: invokevirtual #13
732: dload         16
734: invokevirtual #60
737: ldc           #15
739: invokevirtual #13
742: dconst_0
743: invokevirtual #60
746: ldc           #12
748: invokevirtual #13
751: invokevirtual #16
754: dload         16
756: dconst_0
757: dcmpl
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #17
769: new           #10
772: dup
773: invokespecial #11
776: ldc           #12
778: invokevirtual #13
781: iload         18
783: invokevirtual #14
786: ldc           #15
788: invokevirtual #13
791: iconst_0
792: invokevirtual #14
795: ldc           #12
797: invokevirtual #13
800: invokevirtual #16
803: iload         18
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #17
816: new           #10
819: dup
820: invokespecial #11
823: ldc           #12
825: invokevirtual #13
828: dload         19
830: invokevirtual #60
833: ldc           #15
835: invokevirtual #13
838: dconst_0
839: invokevirtual #60
842: ldc           #12
844: invokevirtual #13
847: invokevirtual #16
850: dload         19
852: dconst_0
853: dcmpl
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #17
865: aload         21
867: invokestatic  #33
870: new           #10
873: dup
874: invokespecial #11
877: ldc           #12
879: invokevirtual #13
882: dload         24
884: invokevirtual #60
887: ldc           #15
889: invokevirtual #13
892: dconst_0
893: invokevirtual #60
896: ldc           #12
898: invokevirtual #13
901: invokevirtual #16
904: dload         24
906: dconst_0
907: dcmpl
908: ifne          915
911: iconst_1
912: goto          916
915: iconst_0
916: invokestatic  #17
919: new           #10
922: dup
923: invokespecial #11
926: ldc           #12
928: invokevirtual #13
931: dload         28
933: invokevirtual #60
936: ldc           #15
938: invokevirtual #13
941: dconst_0
942: invokevirtual #60
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: dload         28
955: dconst_0
956: dcmpl
957: ifne          964
960: iconst_1
961: goto          965
964: iconst_0
965: invokestatic  #17
968: new           #10
971: dup
972: invokespecial #11
975: ldc           #12
977: invokevirtual #13
980: dload         30
982: invokevirtual #60
985: ldc           #15
987: invokevirtual #13
990: ldc2_w        #61
993: invokevirtual #60
996: ldc           #12
998: invokevirtual #13
1001: invokevirtual #16
1004: dload         30
1006: ldc2_w        #61
1009: dcmpl
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #17
1021: new           #10
1024: dup
1025: invokespecial #11
1028: ldc           #12
1030: invokevirtual #13
1033: dload         34
1035: invokevirtual #60
1038: ldc           #15
1040: invokevirtual #13
1043: dconst_0
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         34
1057: dconst_0
1058: dcmpl
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #17
1070: new           #10
1073: dup
1074: invokespecial #11
1077: ldc           #12
1079: invokevirtual #13
1082: dload         36
1084: invokevirtual #60
1087: ldc           #15
1089: invokevirtual #13
1092: ldc2_w        #61
1095: invokevirtual #60
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: dload         36
1108: ldc2_w        #61
1111: dcmpl
1112: ifne          1119
1115: iconst_1
1116: goto          1120
1119: iconst_0
1120: invokestatic  #17
1123: new           #10
1126: dup
1127: invokespecial #11
1130: ldc           #12
1132: invokevirtual #13
1135: dload         38
1137: invokevirtual #60
1140: ldc           #15
1142: invokevirtual #13
1145: dconst_0
1146: invokevirtual #60
1149: ldc           #12
1151: invokevirtual #13
1154: invokevirtual #16
1157: dload         38
1159: dconst_0
1160: dcmpl
1161: ifne          1168
1164: iconst_1
1165: goto          1169
1168: iconst_0
1169: invokestatic  #17
1172: new           #10
1175: dup
1176: invokespecial #11
1179: ldc           #12
1181: invokevirtual #13
1184: dload         43
1186: invokevirtual #60
1189: ldc           #15
1191: invokevirtual #13
1194: dconst_0
1195: invokevirtual #60
1198: ldc           #12
1200: invokevirtual #13
1203: invokevirtual #16
1206: dload         43
1208: dconst_0
1209: dcmpl
1210: ifne          1217
1213: iconst_1
1214: goto          1218
1217: iconst_0
1218: invokestatic  #17
1221: new           #10
1224: dup
1225: invokespecial #11
1228: ldc           #12
1230: invokevirtual #13
1233: dload         45
1235: invokevirtual #60
1238: ldc           #15
1240: invokevirtual #13
1243: dconst_0
1244: invokevirtual #60
1247: ldc           #12
1249: invokevirtual #13
1252: invokevirtual #16
1255: dload         45
1257: dconst_0
1258: dcmpl
1259: ifne          1266
1262: iconst_1
1263: goto          1267
1266: iconst_0
1267: invokestatic  #17
1270: new           #10
1273: dup
1274: invokespecial #11
1277: ldc           #12
1279: invokevirtual #13
1282: dload         50
1284: invokevirtual #60
1287: ldc           #15
1289: invokevirtual #13
1292: dconst_0
1293: invokevirtual #60
1296: ldc           #12
1298: invokevirtual #13
1301: invokevirtual #16
1304: dload         50
1306: dconst_0
1307: dcmpl
1308: ifne          1315
1311: iconst_1
1312: goto          1316
1315: iconst_0
1316: invokestatic  #17
1319: new           #10
1322: dup
1323: invokespecial #11
1326: ldc           #12
1328: invokevirtual #13
1331: dload         52
1333: invokevirtual #60
1336: ldc           #15
1338: invokevirtual #13
1341: dconst_0
1342: invokevirtual #60
1345: ldc           #12
1347: invokevirtual #13
1350: invokevirtual #16
1353: dload         52
1355: dconst_0
1356: dcmpl
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: iload         54
1382: invokevirtual #14
1385: ldc           #15
1387: invokevirtual #13
1390: iconst_0
1391: invokevirtual #14
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: iload         54
1404: ifne          1411
1407: iconst_1
1408: goto          1412
1411: iconst_0
1412: invokestatic  #17
1415: new           #10
1418: dup
1419: invokespecial #11
1422: ldc           #12
1424: invokevirtual #13
1427: dload         55
1429: invokevirtual #60
1432: ldc           #15
1434: invokevirtual #13
1437: dconst_0
1438: invokevirtual #60
1441: ldc           #12
1443: invokevirtual #13
1446: invokevirtual #16
1449: dload         55
1451: dconst_0
1452: dcmpl
1453: ifne          1460
1456: iconst_1
1457: goto          1461
1460: iconst_0
1461: invokestatic  #17
1464: aload         57
1466: invokestatic  #33
1469: new           #10
1472: dup
1473: invokespecial #11
1476: ldc           #12
1478: invokevirtual #13
1481: dload         60
1483: invokevirtual #60
1486: ldc           #15
1488: invokevirtual #13
1491: dconst_0
1492: invokevirtual #60
1495: ldc           #12
1497: invokevirtual #13
1500: invokevirtual #16
1503: dload         60
1505: dconst_0
1506: dcmpl
1507: ifne          1514
1510: iconst_1
1511: goto          1515
1514: iconst_0
1515: invokestatic  #17
1518: aload         62
1520: invokestatic  #33
1523: aload         63
1525: invokestatic  #33
1528: new           #10
1531: dup
1532: invokespecial #11
1535: ldc           #12
1537: invokevirtual #13
1540: dload         64
1542: invokevirtual #60
1545: ldc           #15
1547: invokevirtual #13
1550: ldc2_w        #63
1553: invokevirtual #60
1556: ldc           #12
1558: invokevirtual #13
1561: invokevirtual #16
1564: dload         64
1566: ldc2_w        #63
1569: dcmpl
1570: ifne          1577
1573: iconst_1
1574: goto          1578
1577: iconst_0
1578: invokestatic  #17
1581: new           #10
1584: dup
1585: invokespecial #11
1588: ldc           #12
1590: invokevirtual #13
1593: dload         67
1595: invokevirtual #60
1598: ldc           #15
1600: invokevirtual #13
1603: dconst_0
1604: invokevirtual #60
1607: ldc           #12
1609: invokevirtual #13
1612: invokevirtual #16
1615: dload         67
1617: dconst_0
1618: dcmpl
1619: ifne          1626
1622: iconst_1
1623: goto          1627
1626: iconst_0
1627: invokestatic  #17
1630: aload         69
1632: invokestatic  #33
1635: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 5953
End line: 6031
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(100.0d);
        double double87 = vector3D30.getNormSq();
        org.apache.commons.math.geometry.Space space88 = vector3D30.getSpace();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0000000000000002d + "'", double87 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(space88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #68
499: invokevirtual #107
502: astore        64
504: aload         20
506: invokevirtual #111
509: dstore        65
511: aload         20
513: invokevirtual #51
516: astore        67
518: new           #10
521: dup
522: invokespecial #11
525: ldc           #12
527: invokevirtual #13
530: dload         4
532: invokevirtual #60
535: ldc           #15
537: invokevirtual #13
540: dconst_0
541: invokevirtual #60
544: ldc           #12
546: invokevirtual #13
549: invokevirtual #16
552: dload         4
554: dconst_0
555: dcmpl
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #17
567: new           #10
570: dup
571: invokespecial #11
574: ldc           #12
576: invokevirtual #13
579: dload         6
581: invokevirtual #60
584: ldc           #15
586: invokevirtual #13
589: dconst_0
590: invokevirtual #60
593: ldc           #12
595: invokevirtual #13
598: invokevirtual #16
601: dload         6
603: dconst_0
604: dcmpl
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #17
616: new           #10
619: dup
620: invokespecial #11
623: ldc           #12
625: invokevirtual #13
628: dload         11
630: invokevirtual #60
633: ldc           #15
635: invokevirtual #13
638: dconst_0
639: invokevirtual #60
642: ldc           #12
644: invokevirtual #13
647: invokevirtual #16
650: dload         11
652: dconst_0
653: dcmpl
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #17
665: new           #10
668: dup
669: invokespecial #11
672: ldc           #12
674: invokevirtual #13
677: dload         13
679: invokevirtual #60
682: ldc           #15
684: invokevirtual #13
687: dconst_0
688: invokevirtual #60
691: ldc           #12
693: invokevirtual #13
696: invokevirtual #16
699: dload         13
701: dconst_0
702: dcmpl
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #17
714: new           #10
717: dup
718: invokespecial #11
721: ldc           #12
723: invokevirtual #13
726: iload         15
728: invokevirtual #14
731: ldc           #15
733: invokevirtual #13
736: iconst_0
737: invokevirtual #14
740: ldc           #12
742: invokevirtual #13
745: invokevirtual #16
748: iload         15
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #17
761: new           #10
764: dup
765: invokespecial #11
768: ldc           #12
770: invokevirtual #13
773: dload         16
775: invokevirtual #60
778: ldc           #15
780: invokevirtual #13
783: dconst_0
784: invokevirtual #60
787: ldc           #12
789: invokevirtual #13
792: invokevirtual #16
795: dload         16
797: dconst_0
798: dcmpl
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #17
810: aload         18
812: invokestatic  #33
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         21
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: dconst_0
838: invokevirtual #60
841: ldc           #12
843: invokevirtual #13
846: invokevirtual #16
849: dload         21
851: dconst_0
852: dcmpl
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #17
864: new           #10
867: dup
868: invokespecial #11
871: ldc           #12
873: invokevirtual #13
876: dload         25
878: invokevirtual #60
881: ldc           #15
883: invokevirtual #13
886: dconst_0
887: invokevirtual #60
890: ldc           #12
892: invokevirtual #13
895: invokevirtual #16
898: dload         25
900: dconst_0
901: dcmpl
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #17
913: new           #10
916: dup
917: invokespecial #11
920: ldc           #12
922: invokevirtual #13
925: dload         27
927: invokevirtual #60
930: ldc           #15
932: invokevirtual #13
935: ldc2_w        #61
938: invokevirtual #60
941: ldc           #12
943: invokevirtual #13
946: invokevirtual #16
949: dload         27
951: ldc2_w        #61
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         31
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: dconst_0
989: invokevirtual #60
992: ldc           #12
994: invokevirtual #13
997: invokevirtual #16
1000: dload         31
1002: dconst_0
1003: dcmpl
1004: ifne          1011
1007: iconst_1
1008: goto          1012
1011: iconst_0
1012: invokestatic  #17
1015: new           #10
1018: dup
1019: invokespecial #11
1022: ldc           #12
1024: invokevirtual #13
1027: dload         33
1029: invokevirtual #60
1032: ldc           #15
1034: invokevirtual #13
1037: ldc2_w        #61
1040: invokevirtual #60
1043: ldc           #12
1045: invokevirtual #13
1048: invokevirtual #16
1051: dload         33
1053: ldc2_w        #61
1056: dcmpl
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #17
1068: new           #10
1071: dup
1072: invokespecial #11
1075: ldc           #12
1077: invokevirtual #13
1080: dload         35
1082: invokevirtual #60
1085: ldc           #15
1087: invokevirtual #13
1090: dconst_0
1091: invokevirtual #60
1094: ldc           #12
1096: invokevirtual #13
1099: invokevirtual #16
1102: dload         35
1104: dconst_0
1105: dcmpl
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #17
1117: new           #10
1120: dup
1121: invokespecial #11
1124: ldc           #12
1126: invokevirtual #13
1129: dload         40
1131: invokevirtual #60
1134: ldc           #15
1136: invokevirtual #13
1139: dconst_0
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         40
1153: dconst_0
1154: dcmpl
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #17
1166: new           #10
1169: dup
1170: invokespecial #11
1173: ldc           #12
1175: invokevirtual #13
1178: dload         42
1180: invokevirtual #60
1183: ldc           #15
1185: invokevirtual #13
1188: dconst_0
1189: invokevirtual #60
1192: ldc           #12
1194: invokevirtual #13
1197: invokevirtual #16
1200: dload         42
1202: dconst_0
1203: dcmpl
1204: ifne          1211
1207: iconst_1
1208: goto          1212
1211: iconst_0
1212: invokestatic  #17
1215: new           #10
1218: dup
1219: invokespecial #11
1222: ldc           #12
1224: invokevirtual #13
1227: dload         47
1229: invokevirtual #60
1232: ldc           #15
1234: invokevirtual #13
1237: dconst_0
1238: invokevirtual #60
1241: ldc           #12
1243: invokevirtual #13
1246: invokevirtual #16
1249: dload         47
1251: dconst_0
1252: dcmpl
1253: ifne          1260
1256: iconst_1
1257: goto          1261
1260: iconst_0
1261: invokestatic  #17
1264: new           #10
1267: dup
1268: invokespecial #11
1271: ldc           #12
1273: invokevirtual #13
1276: dload         49
1278: invokevirtual #60
1281: ldc           #15
1283: invokevirtual #13
1286: dconst_0
1287: invokevirtual #60
1290: ldc           #12
1292: invokevirtual #13
1295: invokevirtual #16
1298: dload         49
1300: dconst_0
1301: dcmpl
1302: ifne          1309
1305: iconst_1
1306: goto          1310
1309: iconst_0
1310: invokestatic  #17
1313: new           #10
1316: dup
1317: invokespecial #11
1320: ldc           #12
1322: invokevirtual #13
1325: iload         51
1327: invokevirtual #14
1330: ldc           #15
1332: invokevirtual #13
1335: iconst_0
1336: invokevirtual #14
1339: ldc           #12
1341: invokevirtual #13
1344: invokevirtual #16
1347: iload         51
1349: ifne          1356
1352: iconst_1
1353: goto          1357
1356: iconst_0
1357: invokestatic  #17
1360: new           #10
1363: dup
1364: invokespecial #11
1367: ldc           #12
1369: invokevirtual #13
1372: dload         52
1374: invokevirtual #60
1377: ldc           #15
1379: invokevirtual #13
1382: dconst_0
1383: invokevirtual #60
1386: ldc           #12
1388: invokevirtual #13
1391: invokevirtual #16
1394: dload         52
1396: dconst_0
1397: dcmpl
1398: ifne          1405
1401: iconst_1
1402: goto          1406
1405: iconst_0
1406: invokestatic  #17
1409: aload         54
1411: invokestatic  #33
1414: new           #10
1417: dup
1418: invokespecial #11
1421: ldc           #12
1423: invokevirtual #13
1426: dload         57
1428: invokevirtual #60
1431: ldc           #15
1433: invokevirtual #13
1436: dconst_0
1437: invokevirtual #60
1440: ldc           #12
1442: invokevirtual #13
1445: invokevirtual #16
1448: dload         57
1450: dconst_0
1451: dcmpl
1452: ifne          1459
1455: iconst_1
1456: goto          1460
1459: iconst_0
1460: invokestatic  #17
1463: aload         59
1465: invokestatic  #33
1468: aload         60
1470: invokestatic  #33
1473: new           #10
1476: dup
1477: invokespecial #11
1480: ldc           #12
1482: invokevirtual #13
1485: dload         61
1487: invokevirtual #60
1490: ldc           #15
1492: invokevirtual #13
1495: ldc2_w        #63
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         61
1511: ldc2_w        #63
1514: dcmpl
1515: ifne          1522
1518: iconst_1
1519: goto          1523
1522: iconst_0
1523: invokestatic  #17
1526: aload         64
1528: invokestatic  #33
1531: new           #10
1534: dup
1535: invokespecial #11
1538: ldc           #12
1540: invokevirtual #13
1543: dload         65
1545: invokevirtual #60
1548: ldc           #15
1550: invokevirtual #13
1553: ldc2_w        #63
1556: invokevirtual #60
1559: ldc           #12
1561: invokevirtual #13
1564: invokevirtual #16
1567: dload         65
1569: ldc2_w        #63
1572: dcmpl
1573: ifne          1580
1576: iconst_1
1577: goto          1581
1580: iconst_0
1581: invokestatic  #17
1584: aload         67
1586: invokestatic  #33
1589: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 6034
End line: 6048
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = rotation5.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector10 = vector3D8.negate();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(euclidean3DVector10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #95
53: dstore_3
54: getstatic     #314
57: astore        5
59: aload_1
60: aload         5
62: invokevirtual #98
65: astore        6
67: aload         5
69: invokevirtual #54
72: astore        7
74: aload_2
75: invokestatic  #33
78: new           #10
81: dup
82: invokespecial #11
85: ldc           #12
87: invokevirtual #13
90: dload_3
91: invokevirtual #60
94: ldc           #15
96: invokevirtual #13
99: dconst_1
100: invokevirtual #60
103: ldc           #12
105: invokevirtual #13
108: invokevirtual #16
111: dload_3
112: dconst_1
113: dcmpl
114: ifne          121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #17
125: aload         5
127: invokestatic  #33
130: aload         6
132: invokestatic  #33
135: aload         7
137: invokestatic  #33
140: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 6051
End line: 6057
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #93
48: astore_2
49: aload_2
50: invokestatic  #33
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 6060
End line: 6066
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((-0.6241063992932315d), 3.332894621696E12d, (-0.7853981633974483d), (double) (-11L), false);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #462
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #463
32: ldc2_w        #409
35: ldc2_w        #101
38: ldc2_w        #465
41: iconst_0
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #240
50: dstore_2
51: dload_2
52: invokestatic  #242
55: invokestatic  #243
58: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 6069
End line: 6149
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 0.0f, 2979.3803161142273d, 101.0d, 1.0000000000000002d, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D8.getNorm();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = vector3D15.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        boolean boolean41 = vector3D32.isInfinite();
        double double42 = vector3D21.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double43 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D18, vector3D32);
        double double44 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D15, vector3D32);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector45 = vector3D8.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double46 = vector3D8.getDelta();
        double double47 = vector3D8.getX();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double57 = vector3D53.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D50, vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double68 = vector3D64.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        double double69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D61, vector3D67);
        boolean boolean70 = vector3D61.isInfinite();
        double double71 = vector3D50.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double81 = vector3D77.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D80);
        double double82 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D74, vector3D80);
        boolean boolean83 = vector3D74.isInfinite();
        double double84 = vector3D50.dotProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        org.apache.commons.math.geometry.Space space85 = vector3D50.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = vector3D8.crossProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D50);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation5.applyTo(vector3D50);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D50.getZero();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.7345682747147468d + "'", double17 == 0.7345682747147468d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + Double.POSITIVE_INFINITY + "'", double43 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.7345682747147468d + "'", double46 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.4009692518823901d + "'", double47 == 0.4009692518823901d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0000000000000002d + "'", double84 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(space85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: dconst_0
30: ldc2_w        #468
33: ldc2_w        #170
36: ldc2_w        #63
39: iconst_0
40: invokespecial #150
43: astore_1
44: new           #43
47: dup
48: dconst_1
49: ldc2_w        #44
52: invokespecial #46
55: astore_2
56: aload_2
57: invokevirtual #261
60: dstore_3
61: new           #43
64: dup
65: dconst_1
66: ldc2_w        #44
69: invokespecial #46
72: astore        5
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        6
87: aload         5
89: aload         6
91: invokevirtual #47
94: dstore        7
96: aload         6
98: invokevirtual #52
101: dstore        9
103: getstatic     #126
106: astore        11
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        12
121: new           #43
124: dup
125: dconst_1
126: ldc2_w        #44
129: invokespecial #46
132: astore        13
134: new           #43
137: dup
138: dconst_1
139: ldc2_w        #44
142: invokespecial #46
145: astore        14
147: aload         13
149: aload         14
151: invokevirtual #47
154: dstore        15
156: aload         12
158: aload         14
160: invokestatic  #48
163: dstore        17
165: new           #43
168: dup
169: dconst_1
170: ldc2_w        #44
173: invokespecial #46
176: astore        19
178: new           #43
181: dup
182: dconst_1
183: ldc2_w        #44
186: invokespecial #46
189: astore        20
191: new           #43
194: dup
195: dconst_1
196: ldc2_w        #44
199: invokespecial #46
202: astore        21
204: aload         20
206: aload         21
208: invokevirtual #47
211: dstore        22
213: aload         19
215: aload         21
217: invokestatic  #48
220: dstore        24
222: aload         19
224: invokevirtual #49
227: istore        26
229: aload         12
231: aload         19
233: invokevirtual #50
236: dstore        27
238: aload         11
240: aload         19
242: invokestatic  #127
245: dstore        29
247: aload         6
249: aload         19
251: invokestatic  #128
254: dstore        31
256: aload_2
257: aload         6
259: invokevirtual #55
262: astore        33
264: aload_2
265: invokevirtual #52
268: dstore        34
270: aload_2
271: invokevirtual #99
274: dstore        36
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        38
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        39
302: new           #43
305: dup
306: dconst_1
307: ldc2_w        #44
310: invokespecial #46
313: astore        40
315: aload         39
317: aload         40
319: invokevirtual #47
322: dstore        41
324: aload         38
326: aload         40
328: invokestatic  #48
331: dstore        43
333: new           #43
336: dup
337: dconst_1
338: ldc2_w        #44
341: invokespecial #46
344: astore        45
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        46
359: new           #43
362: dup
363: dconst_1
364: ldc2_w        #44
367: invokespecial #46
370: astore        47
372: aload         46
374: aload         47
376: invokevirtual #47
379: dstore        48
381: aload         45
383: aload         47
385: invokestatic  #48
388: dstore        50
390: aload         45
392: invokevirtual #49
395: istore        52
397: aload         38
399: aload         45
401: invokevirtual #50
404: dstore        53
406: new           #43
409: dup
410: dconst_1
411: ldc2_w        #44
414: invokespecial #46
417: astore        55
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        56
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        57
445: aload         56
447: aload         57
449: invokevirtual #47
452: dstore        58
454: aload         55
456: aload         57
458: invokestatic  #48
461: dstore        60
463: aload         55
465: invokevirtual #49
468: istore        62
470: aload         38
472: aload         55
474: invokevirtual #470
477: dstore        63
479: aload         38
481: invokevirtual #51
484: astore        65
486: aload_2
487: aload         38
489: invokevirtual #365
492: astore        66
494: aload_1
495: aload         38
497: invokevirtual #140
500: astore        67
502: aload         38
504: invokevirtual #198
507: astore        68
509: new           #10
512: dup
513: invokespecial #11
516: ldc           #12
518: invokevirtual #13
521: dload_3
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_1
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload_3
543: dconst_1
544: dcmpl
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #17
556: new           #10
559: dup
560: invokespecial #11
563: ldc           #12
565: invokevirtual #13
568: dload         7
570: invokevirtual #60
573: ldc           #15
575: invokevirtual #13
578: dconst_0
579: invokevirtual #60
582: ldc           #12
584: invokevirtual #13
587: invokevirtual #16
590: dload         7
592: dconst_0
593: dcmpl
594: ifne          601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #17
605: new           #10
608: dup
609: invokespecial #11
612: ldc           #12
614: invokevirtual #13
617: dload         9
619: invokevirtual #60
622: ldc           #15
624: invokevirtual #13
627: ldc2_w        #61
630: invokevirtual #60
633: ldc           #12
635: invokevirtual #13
638: invokevirtual #16
641: dload         9
643: ldc2_w        #61
646: dcmpl
647: ifne          654
650: iconst_1
651: goto          655
654: iconst_0
655: invokestatic  #17
658: aload         11
660: invokestatic  #33
663: new           #10
666: dup
667: invokespecial #11
670: ldc           #12
672: invokevirtual #13
675: dload         15
677: invokevirtual #60
680: ldc           #15
682: invokevirtual #13
685: dconst_0
686: invokevirtual #60
689: ldc           #12
691: invokevirtual #13
694: invokevirtual #16
697: dload         15
699: dconst_0
700: dcmpl
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #17
712: new           #10
715: dup
716: invokespecial #11
719: ldc           #12
721: invokevirtual #13
724: dload         17
726: invokevirtual #60
729: ldc           #15
731: invokevirtual #13
734: dconst_0
735: invokevirtual #60
738: ldc           #12
740: invokevirtual #13
743: invokevirtual #16
746: dload         17
748: dconst_0
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #17
761: new           #10
764: dup
765: invokespecial #11
768: ldc           #12
770: invokevirtual #13
773: dload         22
775: invokevirtual #60
778: ldc           #15
780: invokevirtual #13
783: dconst_0
784: invokevirtual #60
787: ldc           #12
789: invokevirtual #13
792: invokevirtual #16
795: dload         22
797: dconst_0
798: dcmpl
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #17
810: new           #10
813: dup
814: invokespecial #11
817: ldc           #12
819: invokevirtual #13
822: dload         24
824: invokevirtual #60
827: ldc           #15
829: invokevirtual #13
832: dconst_0
833: invokevirtual #60
836: ldc           #12
838: invokevirtual #13
841: invokevirtual #16
844: dload         24
846: dconst_0
847: dcmpl
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #17
859: new           #10
862: dup
863: invokespecial #11
866: ldc           #12
868: invokevirtual #13
871: iload         26
873: invokevirtual #14
876: ldc           #15
878: invokevirtual #13
881: iconst_0
882: invokevirtual #14
885: ldc           #12
887: invokevirtual #13
890: invokevirtual #16
893: iload         26
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #17
906: new           #10
909: dup
910: invokespecial #11
913: ldc           #12
915: invokevirtual #13
918: dload         27
920: invokevirtual #60
923: ldc           #15
925: invokevirtual #13
928: dconst_0
929: invokevirtual #60
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: dload         27
942: dconst_0
943: dcmpl
944: ifne          951
947: iconst_1
948: goto          952
951: iconst_0
952: invokestatic  #17
955: new           #10
958: dup
959: invokespecial #11
962: ldc           #12
964: invokevirtual #13
967: dload         29
969: invokevirtual #60
972: ldc           #15
974: invokevirtual #13
977: ldc2_w        #133
980: invokevirtual #60
983: ldc           #12
985: invokevirtual #13
988: invokevirtual #16
991: dload         29
993: ldc2_w        #133
996: dcmpl
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #17
1008: new           #10
1011: dup
1012: invokespecial #11
1015: ldc           #12
1017: invokevirtual #13
1020: dload         31
1022: invokevirtual #60
1025: ldc           #15
1027: invokevirtual #13
1030: dconst_0
1031: invokevirtual #60
1034: ldc           #12
1036: invokevirtual #13
1039: invokevirtual #16
1042: dload         31
1044: dconst_0
1045: dcmpl
1046: ifne          1053
1049: iconst_1
1050: goto          1054
1053: iconst_0
1054: invokestatic  #17
1057: aload         33
1059: invokestatic  #33
1062: new           #10
1065: dup
1066: invokespecial #11
1069: ldc           #12
1071: invokevirtual #13
1074: dload         34
1076: invokevirtual #60
1079: ldc           #15
1081: invokevirtual #13
1084: ldc2_w        #61
1087: invokevirtual #60
1090: ldc           #12
1092: invokevirtual #13
1095: invokevirtual #16
1098: dload         34
1100: ldc2_w        #61
1103: dcmpl
1104: ifne          1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #17
1115: new           #10
1118: dup
1119: invokespecial #11
1122: ldc           #12
1124: invokevirtual #13
1127: dload         36
1129: invokevirtual #60
1132: ldc           #15
1134: invokevirtual #13
1137: ldc2_w        #471
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         36
1153: ldc2_w        #471
1156: dcmpl
1157: ifne          1164
1160: iconst_1
1161: goto          1165
1164: iconst_0
1165: invokestatic  #17
1168: new           #10
1171: dup
1172: invokespecial #11
1175: ldc           #12
1177: invokevirtual #13
1180: dload         41
1182: invokevirtual #60
1185: ldc           #15
1187: invokevirtual #13
1190: dconst_0
1191: invokevirtual #60
1194: ldc           #12
1196: invokevirtual #13
1199: invokevirtual #16
1202: dload         41
1204: dconst_0
1205: dcmpl
1206: ifne          1213
1209: iconst_1
1210: goto          1214
1213: iconst_0
1214: invokestatic  #17
1217: new           #10
1220: dup
1221: invokespecial #11
1224: ldc           #12
1226: invokevirtual #13
1229: dload         43
1231: invokevirtual #60
1234: ldc           #15
1236: invokevirtual #13
1239: dconst_0
1240: invokevirtual #60
1243: ldc           #12
1245: invokevirtual #13
1248: invokevirtual #16
1251: dload         43
1253: dconst_0
1254: dcmpl
1255: ifne          1262
1258: iconst_1
1259: goto          1263
1262: iconst_0
1263: invokestatic  #17
1266: new           #10
1269: dup
1270: invokespecial #11
1273: ldc           #12
1275: invokevirtual #13
1278: dload         48
1280: invokevirtual #60
1283: ldc           #15
1285: invokevirtual #13
1288: dconst_0
1289: invokevirtual #60
1292: ldc           #12
1294: invokevirtual #13
1297: invokevirtual #16
1300: dload         48
1302: dconst_0
1303: dcmpl
1304: ifne          1311
1307: iconst_1
1308: goto          1312
1311: iconst_0
1312: invokestatic  #17
1315: new           #10
1318: dup
1319: invokespecial #11
1322: ldc           #12
1324: invokevirtual #13
1327: dload         50
1329: invokevirtual #60
1332: ldc           #15
1334: invokevirtual #13
1337: dconst_0
1338: invokevirtual #60
1341: ldc           #12
1343: invokevirtual #13
1346: invokevirtual #16
1349: dload         50
1351: dconst_0
1352: dcmpl
1353: ifne          1360
1356: iconst_1
1357: goto          1361
1360: iconst_0
1361: invokestatic  #17
1364: new           #10
1367: dup
1368: invokespecial #11
1371: ldc           #12
1373: invokevirtual #13
1376: iload         52
1378: invokevirtual #14
1381: ldc           #15
1383: invokevirtual #13
1386: iconst_0
1387: invokevirtual #14
1390: ldc           #12
1392: invokevirtual #13
1395: invokevirtual #16
1398: iload         52
1400: ifne          1407
1403: iconst_1
1404: goto          1408
1407: iconst_0
1408: invokestatic  #17
1411: new           #10
1414: dup
1415: invokespecial #11
1418: ldc           #12
1420: invokevirtual #13
1423: dload         53
1425: invokevirtual #60
1428: ldc           #15
1430: invokevirtual #13
1433: dconst_0
1434: invokevirtual #60
1437: ldc           #12
1439: invokevirtual #13
1442: invokevirtual #16
1445: dload         53
1447: dconst_0
1448: dcmpl
1449: ifne          1456
1452: iconst_1
1453: goto          1457
1456: iconst_0
1457: invokestatic  #17
1460: new           #10
1463: dup
1464: invokespecial #11
1467: ldc           #12
1469: invokevirtual #13
1472: dload         58
1474: invokevirtual #60
1477: ldc           #15
1479: invokevirtual #13
1482: dconst_0
1483: invokevirtual #60
1486: ldc           #12
1488: invokevirtual #13
1491: invokevirtual #16
1494: dload         58
1496: dconst_0
1497: dcmpl
1498: ifne          1505
1501: iconst_1
1502: goto          1506
1505: iconst_0
1506: invokestatic  #17
1509: new           #10
1512: dup
1513: invokespecial #11
1516: ldc           #12
1518: invokevirtual #13
1521: dload         60
1523: invokevirtual #60
1526: ldc           #15
1528: invokevirtual #13
1531: dconst_0
1532: invokevirtual #60
1535: ldc           #12
1537: invokevirtual #13
1540: invokevirtual #16
1543: dload         60
1545: dconst_0
1546: dcmpl
1547: ifne          1554
1550: iconst_1
1551: goto          1555
1554: iconst_0
1555: invokestatic  #17
1558: new           #10
1561: dup
1562: invokespecial #11
1565: ldc           #12
1567: invokevirtual #13
1570: iload         62
1572: invokevirtual #14
1575: ldc           #15
1577: invokevirtual #13
1580: iconst_0
1581: invokevirtual #14
1584: ldc           #12
1586: invokevirtual #13
1589: invokevirtual #16
1592: iload         62
1594: ifne          1601
1597: iconst_1
1598: goto          1602
1601: iconst_0
1602: invokestatic  #17
1605: new           #10
1608: dup
1609: invokespecial #11
1612: ldc           #12
1614: invokevirtual #13
1617: dload         63
1619: invokevirtual #60
1622: ldc           #15
1624: invokevirtual #13
1627: ldc2_w        #63
1630: invokevirtual #60
1633: ldc           #12
1635: invokevirtual #13
1638: invokevirtual #16
1641: dload         63
1643: ldc2_w        #63
1646: dcmpl
1647: ifne          1654
1650: iconst_1
1651: goto          1655
1654: iconst_0
1655: invokestatic  #17
1658: aload         65
1660: invokestatic  #33
1663: aload         66
1665: invokestatic  #33
1668: aload         67
1670: invokestatic  #33
1673: aload         68
1675: invokestatic  #33
1678: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 6152
End line: 6189
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = rotation7.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D12, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D23, vector3D29);
        boolean boolean32 = vector3D23.isInfinite();
        double double33 = vector3D12.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D23);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector35 = vector3D9.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation37 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D9, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation38 = rotation7.applyInverseTo(rotation37);
        double[][] doubleArray39 = rotation7.getMatrix();
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException40 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (-9.999999f), (java.lang.Object[]) doubleArray39);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(euclidean3DVector35);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #473
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: ldc2_w        #146
34: ldc2_w        #72
37: ldc2_w        #148
40: dconst_1
41: iconst_0
42: invokespecial #150
45: astore_2
46: aload_2
47: invokevirtual #96
50: astore_3
51: getstatic     #126
54: astore        4
56: new           #43
59: dup
60: dconst_1
61: ldc2_w        #44
64: invokespecial #46
67: astore        5
69: new           #43
72: dup
73: dconst_1
74: ldc2_w        #44
77: invokespecial #46
80: astore        6
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        7
95: aload         6
97: aload         7
99: invokevirtual #47
102: dstore        8
104: aload         5
106: aload         7
108: invokestatic  #48
111: dstore        10
113: new           #43
116: dup
117: dconst_1
118: ldc2_w        #44
121: invokespecial #46
124: astore        12
126: new           #43
129: dup
130: dconst_1
131: ldc2_w        #44
134: invokespecial #46
137: astore        13
139: new           #43
142: dup
143: dconst_1
144: ldc2_w        #44
147: invokespecial #46
150: astore        14
152: aload         13
154: aload         14
156: invokevirtual #47
159: dstore        15
161: aload         12
163: aload         14
165: invokestatic  #48
168: dstore        17
170: aload         12
172: invokevirtual #49
175: istore        19
177: aload         5
179: aload         12
181: invokevirtual #50
184: dstore        20
186: aload         12
188: invokevirtual #54
191: astore        22
193: aload         4
195: aload         22
197: invokevirtual #55
200: astore        23
202: new           #27
205: dup
206: aload         4
208: ldc2_w        #72
211: invokespecial #103
214: astore        24
216: aload_2
217: aload         24
219: invokevirtual #474
222: astore        25
224: aload_2
225: invokevirtual #222
228: astore        26
230: new           #438
233: dup
234: aload_1
235: ldc_w         #475
238: invokestatic  #379
241: aload         26
243: checkcast     #248
246: invokespecial #440
249: astore        27
251: aload_3
252: invokestatic  #33
255: aload         4
257: invokestatic  #33
260: new           #10
263: dup
264: invokespecial #11
267: ldc           #12
269: invokevirtual #13
272: dload         8
274: invokevirtual #60
277: ldc           #15
279: invokevirtual #13
282: dconst_0
283: invokevirtual #60
286: ldc           #12
288: invokevirtual #13
291: invokevirtual #16
294: dload         8
296: dconst_0
297: dcmpl
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #17
309: new           #10
312: dup
313: invokespecial #11
316: ldc           #12
318: invokevirtual #13
321: dload         10
323: invokevirtual #60
326: ldc           #15
328: invokevirtual #13
331: dconst_0
332: invokevirtual #60
335: ldc           #12
337: invokevirtual #13
340: invokevirtual #16
343: dload         10
345: dconst_0
346: dcmpl
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #17
358: new           #10
361: dup
362: invokespecial #11
365: ldc           #12
367: invokevirtual #13
370: dload         15
372: invokevirtual #60
375: ldc           #15
377: invokevirtual #13
380: dconst_0
381: invokevirtual #60
384: ldc           #12
386: invokevirtual #13
389: invokevirtual #16
392: dload         15
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #17
407: new           #10
410: dup
411: invokespecial #11
414: ldc           #12
416: invokevirtual #13
419: dload         17
421: invokevirtual #60
424: ldc           #15
426: invokevirtual #13
429: dconst_0
430: invokevirtual #60
433: ldc           #12
435: invokevirtual #13
438: invokevirtual #16
441: dload         17
443: dconst_0
444: dcmpl
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #17
456: new           #10
459: dup
460: invokespecial #11
463: ldc           #12
465: invokevirtual #13
468: iload         19
470: invokevirtual #14
473: ldc           #15
475: invokevirtual #13
478: iconst_0
479: invokevirtual #14
482: ldc           #12
484: invokevirtual #13
487: invokevirtual #16
490: iload         19
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #17
503: new           #10
506: dup
507: invokespecial #11
510: ldc           #12
512: invokevirtual #13
515: dload         20
517: invokevirtual #60
520: ldc           #15
522: invokevirtual #13
525: dconst_0
526: invokevirtual #60
529: ldc           #12
531: invokevirtual #13
534: invokevirtual #16
537: dload         20
539: dconst_0
540: dcmpl
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #17
552: aload         22
554: invokestatic  #33
557: aload         23
559: invokestatic  #33
562: aload         25
564: invokestatic  #33
567: aload         26
569: invokestatic  #33
572: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 6192
End line: 6262
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double67 = vector3D27.getZ();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation73 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = rotation73.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector76 = vector3D75.normalize();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector77 = vector3D27.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D75);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.6702668260599606d + "'", double67 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(euclidean3DVector76);
        org.junit.Assert.assertNotNull(euclidean3DVector77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         19
396: invokevirtual #311
399: dstore        51
401: new           #27
404: dup
405: ldc2_w        #146
408: ldc2_w        #72
411: ldc2_w        #148
414: dconst_1
415: iconst_0
416: invokespecial #150
419: astore        53
421: aload         53
423: invokevirtual #96
426: astore        54
428: aload         53
430: invokevirtual #96
433: astore        55
435: aload         55
437: invokevirtual #193
440: astore        56
442: aload         19
444: aload         55
446: invokevirtual #109
449: astore        57
451: new           #10
454: dup
455: invokespecial #11
458: ldc           #12
460: invokevirtual #13
463: dload         4
465: invokevirtual #60
468: ldc           #15
470: invokevirtual #13
473: dconst_0
474: invokevirtual #60
477: ldc           #12
479: invokevirtual #13
482: invokevirtual #16
485: dload         4
487: dconst_0
488: dcmpl
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #17
500: new           #10
503: dup
504: invokespecial #11
507: ldc           #12
509: invokevirtual #13
512: dload         6
514: invokevirtual #60
517: ldc           #15
519: invokevirtual #13
522: dconst_0
523: invokevirtual #60
526: ldc           #12
528: invokevirtual #13
531: invokevirtual #16
534: dload         6
536: dconst_0
537: dcmpl
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #17
549: new           #10
552: dup
553: invokespecial #11
556: ldc           #12
558: invokevirtual #13
561: dload         11
563: invokevirtual #60
566: ldc           #15
568: invokevirtual #13
571: dconst_0
572: invokevirtual #60
575: ldc           #12
577: invokevirtual #13
580: invokevirtual #16
583: dload         11
585: dconst_0
586: dcmpl
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #17
598: new           #10
601: dup
602: invokespecial #11
605: ldc           #12
607: invokevirtual #13
610: dload         13
612: invokevirtual #60
615: ldc           #15
617: invokevirtual #13
620: dconst_0
621: invokevirtual #60
624: ldc           #12
626: invokevirtual #13
629: invokevirtual #16
632: dload         13
634: dconst_0
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #17
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: iload         15
661: invokevirtual #14
664: ldc           #15
666: invokevirtual #13
669: iconst_0
670: invokevirtual #14
673: ldc           #12
675: invokevirtual #13
678: invokevirtual #16
681: iload         15
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #17
694: new           #10
697: dup
698: invokespecial #11
701: ldc           #12
703: invokevirtual #13
706: dload         16
708: invokevirtual #60
711: ldc           #15
713: invokevirtual #13
716: dconst_0
717: invokevirtual #60
720: ldc           #12
722: invokevirtual #13
725: invokevirtual #16
728: dload         16
730: dconst_0
731: dcmpl
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #17
743: aload         18
745: invokestatic  #33
748: new           #10
751: dup
752: invokespecial #11
755: ldc           #12
757: invokevirtual #13
760: dload         21
762: invokevirtual #60
765: ldc           #15
767: invokevirtual #13
770: dconst_0
771: invokevirtual #60
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: dload         21
784: dconst_0
785: dcmpl
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #17
797: aload         23
799: invokestatic  #33
802: aload         24
804: invokestatic  #33
807: new           #10
810: dup
811: invokespecial #11
814: ldc           #12
816: invokevirtual #13
819: dload         29
821: invokevirtual #60
824: ldc           #15
826: invokevirtual #13
829: dconst_0
830: invokevirtual #60
833: ldc           #12
835: invokevirtual #13
838: invokevirtual #16
841: dload         29
843: dconst_0
844: dcmpl
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #17
856: new           #10
859: dup
860: invokespecial #11
863: ldc           #12
865: invokevirtual #13
868: dload         31
870: invokevirtual #60
873: ldc           #15
875: invokevirtual #13
878: dconst_0
879: invokevirtual #60
882: ldc           #12
884: invokevirtual #13
887: invokevirtual #16
890: dload         31
892: dconst_0
893: dcmpl
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #17
905: new           #10
908: dup
909: invokespecial #11
912: ldc           #12
914: invokevirtual #13
917: dload         35
919: invokevirtual #60
922: ldc           #15
924: invokevirtual #13
927: dconst_0
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         35
941: dconst_0
942: dcmpl
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #17
954: new           #10
957: dup
958: invokespecial #11
961: ldc           #12
963: invokevirtual #13
966: dload         37
968: invokevirtual #60
971: ldc           #15
973: invokevirtual #13
976: ldc2_w        #61
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         37
992: ldc2_w        #61
995: dcmpl
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #17
1007: new           #10
1010: dup
1011: invokespecial #11
1014: ldc           #12
1016: invokevirtual #13
1019: dload         41
1021: invokevirtual #60
1024: ldc           #15
1026: invokevirtual #13
1029: dconst_0
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         41
1043: dconst_0
1044: dcmpl
1045: ifne          1052
1048: iconst_1
1049: goto          1053
1052: iconst_0
1053: invokestatic  #17
1056: new           #10
1059: dup
1060: invokespecial #11
1063: ldc           #12
1065: invokevirtual #13
1068: dload         43
1070: invokevirtual #60
1073: ldc           #15
1075: invokevirtual #13
1078: ldc2_w        #61
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         43
1094: ldc2_w        #61
1097: dcmpl
1098: ifne          1105
1101: iconst_1
1102: goto          1106
1105: iconst_0
1106: invokestatic  #17
1109: new           #10
1112: dup
1113: invokespecial #11
1116: ldc           #12
1118: invokevirtual #13
1121: dload         45
1123: invokevirtual #60
1126: ldc           #15
1128: invokevirtual #13
1131: dconst_0
1132: invokevirtual #60
1135: ldc           #12
1137: invokevirtual #13
1140: invokevirtual #16
1143: dload         45
1145: dconst_0
1146: dcmpl
1147: ifne          1154
1150: iconst_1
1151: goto          1155
1154: iconst_0
1155: invokestatic  #17
1158: new           #10
1161: dup
1162: invokespecial #11
1165: ldc           #12
1167: invokevirtual #13
1170: dload         47
1172: invokevirtual #60
1175: ldc           #15
1177: invokevirtual #13
1180: dconst_0
1181: invokevirtual #60
1184: ldc           #12
1186: invokevirtual #13
1189: invokevirtual #16
1192: dload         47
1194: dconst_0
1195: dcmpl
1196: ifne          1203
1199: iconst_1
1200: goto          1204
1203: iconst_0
1204: invokestatic  #17
1207: aload         49
1209: invokestatic  #33
1212: aload         50
1214: invokestatic  #33
1217: new           #10
1220: dup
1221: invokespecial #11
1224: ldc           #12
1226: invokevirtual #13
1229: dload         51
1231: invokevirtual #60
1234: ldc           #15
1236: invokevirtual #13
1239: ldc2_w        #79
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         51
1255: ldc2_w        #79
1258: dcmpl
1259: ifne          1266
1262: iconst_1
1263: goto          1267
1266: iconst_0
1267: invokestatic  #17
1270: aload         54
1272: invokestatic  #33
1275: aload         55
1277: invokestatic  #33
1280: aload         56
1282: invokestatic  #33
1285: aload         57
1287: invokestatic  #33
1290: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 6265
End line: 6283
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation10 = rotation5.applyTo(rotation9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #477
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: aload_1
55: invokevirtual #222
58: astore        4
60: aconst_null
61: astore        5
63: aload_1
64: aload         5
66: invokevirtual #160
69: astore        6
71: ldc           #20
73: invokestatic  #21
76: goto          81
79: astore        6
81: aload_2
82: invokestatic  #33
85: aload_3
86: invokestatic  #33
89: aload         4
91: invokestatic  #33
94: return
Exception table:
from    to  target type
63    76    79   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 6286
End line: 6367
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.Space space32 = vector3D21.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        double double56 = vector3D45.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double66 = vector3D62.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        double double67 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D59, vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double77 = vector3D73.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        double double78 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D70, vector3D76);
        boolean boolean79 = vector3D70.isInfinite();
        double double80 = vector3D59.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D70.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double88 = vector3D84.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D81.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D45.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        double double91 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D21, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation7.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector94 = vector3D0.subtract((-1024.0d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double95 = vector3D0.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(space32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0000000000000002d + "'", double91 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(euclidean3DVector94);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #314
28: astore_1
29: new           #27
32: dup
33: ldc2_w        #146
36: ldc2_w        #72
39: ldc2_w        #148
42: dconst_1
43: iconst_0
44: invokespecial #150
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: new           #43
63: dup
64: dconst_1
65: ldc2_w        #44
68: invokespecial #46
71: astore        4
73: new           #43
76: dup
77: dconst_1
78: ldc2_w        #44
81: invokespecial #46
84: astore        5
86: aload         4
88: aload         5
90: invokevirtual #47
93: dstore        6
95: aload_3
96: aload         5
98: invokestatic  #48
101: dstore        8
103: new           #43
106: dup
107: dconst_1
108: ldc2_w        #44
111: invokespecial #46
114: astore        10
116: new           #43
119: dup
120: dconst_1
121: ldc2_w        #44
124: invokespecial #46
127: astore        11
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        12
142: aload         11
144: aload         12
146: invokevirtual #47
149: dstore        13
151: aload         10
153: aload         12
155: invokestatic  #48
158: dstore        15
160: aload         10
162: invokevirtual #49
165: istore        17
167: aload_3
168: aload         10
170: invokevirtual #50
173: dstore        18
175: aload         10
177: invokevirtual #51
180: astore        20
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        21
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        22
208: aload         21
210: aload         22
212: invokevirtual #47
215: dstore        23
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        25
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        26
243: aload         25
245: aload         26
247: invokevirtual #47
250: dstore        27
252: aload         26
254: invokevirtual #52
257: dstore        29
259: new           #43
262: dup
263: dconst_1
264: ldc2_w        #44
267: invokespecial #46
270: astore        31
272: new           #43
275: dup
276: dconst_1
277: ldc2_w        #44
280: invokespecial #46
283: astore        32
285: aload         31
287: aload         32
289: invokevirtual #47
292: dstore        33
294: aload         32
296: invokevirtual #52
299: dstore        35
301: aload         26
303: aload         32
305: invokevirtual #53
308: dstore        37
310: new           #43
313: dup
314: dconst_1
315: ldc2_w        #44
318: invokespecial #46
321: astore        39
323: new           #43
326: dup
327: dconst_1
328: ldc2_w        #44
331: invokespecial #46
334: astore        40
336: new           #43
339: dup
340: dconst_1
341: ldc2_w        #44
344: invokespecial #46
347: astore        41
349: aload         40
351: aload         41
353: invokevirtual #47
356: dstore        42
358: aload         39
360: aload         41
362: invokestatic  #48
365: dstore        44
367: new           #43
370: dup
371: dconst_1
372: ldc2_w        #44
375: invokespecial #46
378: astore        46
380: new           #43
383: dup
384: dconst_1
385: ldc2_w        #44
388: invokespecial #46
391: astore        47
393: new           #43
396: dup
397: dconst_1
398: ldc2_w        #44
401: invokespecial #46
404: astore        48
406: aload         47
408: aload         48
410: invokevirtual #47
413: dstore        49
415: aload         46
417: aload         48
419: invokestatic  #48
422: dstore        51
424: aload         46
426: invokevirtual #49
429: istore        53
431: aload         39
433: aload         46
435: invokevirtual #50
438: dstore        54
440: aload         46
442: invokevirtual #54
445: astore        56
447: new           #43
450: dup
451: dconst_1
452: ldc2_w        #44
455: invokespecial #46
458: astore        57
460: new           #43
463: dup
464: dconst_1
465: ldc2_w        #44
468: invokespecial #46
471: astore        58
473: aload         57
475: aload         58
477: invokevirtual #47
480: dstore        59
482: aload         56
484: aload         57
486: invokevirtual #55
489: astore        61
491: aload         26
493: aload         61
495: invokevirtual #55
498: astore        62
500: aload         22
502: aload         61
504: invokevirtual #53
507: dstore        63
509: new           #27
512: dup
513: aload         10
515: aload         22
517: invokespecial #56
520: astore        65
522: aload_2
523: aload         22
525: invokevirtual #98
528: astore        66
530: aload_1
531: ldc2_w        #352
534: aload         22
536: invokevirtual #354
539: astore        67
541: aload_1
542: invokevirtual #99
545: dstore        68
547: aload_1
548: invokestatic  #33
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         6
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         6
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         8
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         8
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         13
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         13
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         15
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         15
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         17
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         17
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         18
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         18
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         20
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         23
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         23
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         27
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         27
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         29
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         29
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         33
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         33
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         35
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         35
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         37
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         37
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         42
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         42
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         44
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         44
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         49
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         49
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         51
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         51
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         53
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         53
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         54
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         54
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         56
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         59
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         59
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         61
1498: invokestatic  #33
1501: aload         62
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         63
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         63
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         66
1561: invokestatic  #33
1564: aload         67
1566: invokestatic  #33
1569: dload         68
1571: invokestatic  #242
1574: invokestatic  #243
1577: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 6370
End line: 6448
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        double double85 = rotation84.getQ2();
        double double86 = rotation84.getQ2();
        double double87 = rotation84.getQ2();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #139
499: dstore        64
501: aload         63
503: invokevirtual #139
506: dstore        66
508: aload         63
510: invokevirtual #139
513: dstore        68
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: dload         4
529: invokevirtual #60
532: ldc           #15
534: invokevirtual #13
537: dconst_0
538: invokevirtual #60
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: dload         4
551: dconst_0
552: dcmpl
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #17
564: new           #10
567: dup
568: invokespecial #11
571: ldc           #12
573: invokevirtual #13
576: dload         6
578: invokevirtual #60
581: ldc           #15
583: invokevirtual #13
586: dconst_0
587: invokevirtual #60
590: ldc           #12
592: invokevirtual #13
595: invokevirtual #16
598: dload         6
600: dconst_0
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #17
613: new           #10
616: dup
617: invokespecial #11
620: ldc           #12
622: invokevirtual #13
625: dload         11
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload         11
649: dconst_0
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: dload         13
676: invokevirtual #60
679: ldc           #15
681: invokevirtual #13
684: dconst_0
685: invokevirtual #60
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: dload         13
698: dconst_0
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #17
711: new           #10
714: dup
715: invokespecial #11
718: ldc           #12
720: invokevirtual #13
723: iload         15
725: invokevirtual #14
728: ldc           #15
730: invokevirtual #13
733: iconst_0
734: invokevirtual #14
737: ldc           #12
739: invokevirtual #13
742: invokevirtual #16
745: iload         15
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: dload         16
772: invokevirtual #60
775: ldc           #15
777: invokevirtual #13
780: dconst_0
781: invokevirtual #60
784: ldc           #12
786: invokevirtual #13
789: invokevirtual #16
792: dload         16
794: dconst_0
795: dcmpl
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #17
807: aload         18
809: invokestatic  #33
812: new           #10
815: dup
816: invokespecial #11
819: ldc           #12
821: invokevirtual #13
824: dload         21
826: invokevirtual #60
829: ldc           #15
831: invokevirtual #13
834: dconst_0
835: invokevirtual #60
838: ldc           #12
840: invokevirtual #13
843: invokevirtual #16
846: dload         21
848: dconst_0
849: dcmpl
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #17
861: new           #10
864: dup
865: invokespecial #11
868: ldc           #12
870: invokevirtual #13
873: dload         25
875: invokevirtual #60
878: ldc           #15
880: invokevirtual #13
883: dconst_0
884: invokevirtual #60
887: ldc           #12
889: invokevirtual #13
892: invokevirtual #16
895: dload         25
897: dconst_0
898: dcmpl
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #17
910: new           #10
913: dup
914: invokespecial #11
917: ldc           #12
919: invokevirtual #13
922: dload         27
924: invokevirtual #60
927: ldc           #15
929: invokevirtual #13
932: ldc2_w        #61
935: invokevirtual #60
938: ldc           #12
940: invokevirtual #13
943: invokevirtual #16
946: dload         27
948: ldc2_w        #61
951: dcmpl
952: ifne          959
955: iconst_1
956: goto          960
959: iconst_0
960: invokestatic  #17
963: new           #10
966: dup
967: invokespecial #11
970: ldc           #12
972: invokevirtual #13
975: dload         31
977: invokevirtual #60
980: ldc           #15
982: invokevirtual #13
985: dconst_0
986: invokevirtual #60
989: ldc           #12
991: invokevirtual #13
994: invokevirtual #16
997: dload         31
999: dconst_0
1000: dcmpl
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #17
1012: new           #10
1015: dup
1016: invokespecial #11
1019: ldc           #12
1021: invokevirtual #13
1024: dload         33
1026: invokevirtual #60
1029: ldc           #15
1031: invokevirtual #13
1034: ldc2_w        #61
1037: invokevirtual #60
1040: ldc           #12
1042: invokevirtual #13
1045: invokevirtual #16
1048: dload         33
1050: ldc2_w        #61
1053: dcmpl
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #17
1065: new           #10
1068: dup
1069: invokespecial #11
1072: ldc           #12
1074: invokevirtual #13
1077: dload         35
1079: invokevirtual #60
1082: ldc           #15
1084: invokevirtual #13
1087: dconst_0
1088: invokevirtual #60
1091: ldc           #12
1093: invokevirtual #13
1096: invokevirtual #16
1099: dload         35
1101: dconst_0
1102: dcmpl
1103: ifne          1110
1106: iconst_1
1107: goto          1111
1110: iconst_0
1111: invokestatic  #17
1114: new           #10
1117: dup
1118: invokespecial #11
1121: ldc           #12
1123: invokevirtual #13
1126: dload         40
1128: invokevirtual #60
1131: ldc           #15
1133: invokevirtual #13
1136: dconst_0
1137: invokevirtual #60
1140: ldc           #12
1142: invokevirtual #13
1145: invokevirtual #16
1148: dload         40
1150: dconst_0
1151: dcmpl
1152: ifne          1159
1155: iconst_1
1156: goto          1160
1159: iconst_0
1160: invokestatic  #17
1163: new           #10
1166: dup
1167: invokespecial #11
1170: ldc           #12
1172: invokevirtual #13
1175: dload         42
1177: invokevirtual #60
1180: ldc           #15
1182: invokevirtual #13
1185: dconst_0
1186: invokevirtual #60
1189: ldc           #12
1191: invokevirtual #13
1194: invokevirtual #16
1197: dload         42
1199: dconst_0
1200: dcmpl
1201: ifne          1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #17
1212: new           #10
1215: dup
1216: invokespecial #11
1219: ldc           #12
1221: invokevirtual #13
1224: dload         47
1226: invokevirtual #60
1229: ldc           #15
1231: invokevirtual #13
1234: dconst_0
1235: invokevirtual #60
1238: ldc           #12
1240: invokevirtual #13
1243: invokevirtual #16
1246: dload         47
1248: dconst_0
1249: dcmpl
1250: ifne          1257
1253: iconst_1
1254: goto          1258
1257: iconst_0
1258: invokestatic  #17
1261: new           #10
1264: dup
1265: invokespecial #11
1268: ldc           #12
1270: invokevirtual #13
1273: dload         49
1275: invokevirtual #60
1278: ldc           #15
1280: invokevirtual #13
1283: dconst_0
1284: invokevirtual #60
1287: ldc           #12
1289: invokevirtual #13
1292: invokevirtual #16
1295: dload         49
1297: dconst_0
1298: dcmpl
1299: ifne          1306
1302: iconst_1
1303: goto          1307
1306: iconst_0
1307: invokestatic  #17
1310: new           #10
1313: dup
1314: invokespecial #11
1317: ldc           #12
1319: invokevirtual #13
1322: iload         51
1324: invokevirtual #14
1327: ldc           #15
1329: invokevirtual #13
1332: iconst_0
1333: invokevirtual #14
1336: ldc           #12
1338: invokevirtual #13
1341: invokevirtual #16
1344: iload         51
1346: ifne          1353
1349: iconst_1
1350: goto          1354
1353: iconst_0
1354: invokestatic  #17
1357: new           #10
1360: dup
1361: invokespecial #11
1364: ldc           #12
1366: invokevirtual #13
1369: dload         52
1371: invokevirtual #60
1374: ldc           #15
1376: invokevirtual #13
1379: dconst_0
1380: invokevirtual #60
1383: ldc           #12
1385: invokevirtual #13
1388: invokevirtual #16
1391: dload         52
1393: dconst_0
1394: dcmpl
1395: ifne          1402
1398: iconst_1
1399: goto          1403
1402: iconst_0
1403: invokestatic  #17
1406: aload         54
1408: invokestatic  #33
1411: new           #10
1414: dup
1415: invokespecial #11
1418: ldc           #12
1420: invokevirtual #13
1423: dload         57
1425: invokevirtual #60
1428: ldc           #15
1430: invokevirtual #13
1433: dconst_0
1434: invokevirtual #60
1437: ldc           #12
1439: invokevirtual #13
1442: invokevirtual #16
1445: dload         57
1447: dconst_0
1448: dcmpl
1449: ifne          1456
1452: iconst_1
1453: goto          1457
1456: iconst_0
1457: invokestatic  #17
1460: aload         59
1462: invokestatic  #33
1465: aload         60
1467: invokestatic  #33
1470: new           #10
1473: dup
1474: invokespecial #11
1477: ldc           #12
1479: invokevirtual #13
1482: dload         61
1484: invokevirtual #60
1487: ldc           #15
1489: invokevirtual #13
1492: ldc2_w        #63
1495: invokevirtual #60
1498: ldc           #12
1500: invokevirtual #13
1503: invokevirtual #16
1506: dload         61
1508: ldc2_w        #63
1511: dcmpl
1512: ifne          1519
1515: iconst_1
1516: goto          1520
1519: iconst_0
1520: invokestatic  #17
1523: new           #10
1526: dup
1527: invokespecial #11
1530: ldc           #12
1532: invokevirtual #13
1535: dload         64
1537: invokevirtual #60
1540: ldc           #15
1542: invokevirtual #13
1545: dconst_0
1546: invokevirtual #60
1549: ldc           #12
1551: invokevirtual #13
1554: invokevirtual #16
1557: dload         64
1559: dconst_0
1560: dcmpl
1561: ifne          1568
1564: iconst_1
1565: goto          1569
1568: iconst_0
1569: invokestatic  #17
1572: new           #10
1575: dup
1576: invokespecial #11
1579: ldc           #12
1581: invokevirtual #13
1584: dload         66
1586: invokevirtual #60
1589: ldc           #15
1591: invokevirtual #13
1594: dconst_0
1595: invokevirtual #60
1598: ldc           #12
1600: invokevirtual #13
1603: invokevirtual #16
1606: dload         66
1608: dconst_0
1609: dcmpl
1610: ifne          1617
1613: iconst_1
1614: goto          1618
1617: iconst_0
1618: invokestatic  #17
1621: new           #10
1624: dup
1625: invokespecial #11
1628: ldc           #12
1630: invokevirtual #13
1633: dload         68
1635: invokevirtual #60
1638: ldc           #15
1640: invokevirtual #13
1643: dconst_0
1644: invokevirtual #60
1647: ldc           #12
1649: invokevirtual #13
1652: invokevirtual #16
1655: dload         68
1657: dconst_0
1658: dcmpl
1659: ifne          1666
1662: iconst_1
1663: goto          1667
1666: iconst_0
1667: invokestatic  #17
1670: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 6451
End line: 6455
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(4.827119634E10d, (double) (-100L), (-9.79006006351717d), 1.7229210080217563d, true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #481
32: ldc2_w        #483
35: ldc2_w        #485
38: ldc2_w        #487
41: iconst_1
42: invokespecial #150
45: astore_1
46: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 6458
End line: 6468
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation8 = rotation5.revert();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(rotation8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #489
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #95
53: dstore_3
54: aload_1
55: invokevirtual #93
58: astore        5
60: aload_2
61: invokestatic  #33
64: new           #10
67: dup
68: invokespecial #11
71: ldc           #12
73: invokevirtual #13
76: dload_3
77: invokevirtual #60
80: ldc           #15
82: invokevirtual #13
85: dconst_1
86: invokevirtual #60
89: ldc           #12
91: invokevirtual #13
94: invokevirtual #16
97: dload_3
98: dconst_1
99: dcmpl
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #17
111: aload         5
113: invokestatic  #33
116: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 6471
End line: 6562
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation94.getQ3();
        double double99 = rotation94.getQ1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 1.079574538E9d + "'", double99 == 1.079574538E9d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         70
567: invokevirtual #95
570: dstore        75
572: aload         70
574: invokevirtual #94
577: dstore        77
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         4
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         4
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         6
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         6
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         11
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         11
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         13
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         13
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         15
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         15
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         16
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         16
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         18
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         21
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         21
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         25
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         25
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         27
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         27
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         31
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         31
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         33
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         33
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         35
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         35
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         40
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         40
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         42
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         42
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         47
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         47
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         49
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         49
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         51
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         51
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         52
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         52
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         54
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         57
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         57
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         59
1526: invokestatic  #33
1529: aload         60
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         61
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         61
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: aload         64
1589: invokestatic  #33
1592: new           #10
1595: dup
1596: invokespecial #11
1599: ldc           #12
1601: invokevirtual #13
1604: dload         65
1606: invokevirtual #60
1609: ldc           #15
1611: invokevirtual #13
1614: dconst_0
1615: invokevirtual #60
1618: ldc           #12
1620: invokevirtual #13
1623: invokevirtual #16
1626: dload         65
1628: dconst_0
1629: dcmpl
1630: ifne          1637
1633: iconst_1
1634: goto          1638
1637: iconst_0
1638: invokestatic  #17
1641: new           #10
1644: dup
1645: invokespecial #11
1648: ldc           #12
1650: invokevirtual #13
1653: dload         67
1655: invokevirtual #60
1658: ldc           #15
1660: invokevirtual #13
1663: dconst_0
1664: invokevirtual #60
1667: ldc           #12
1669: invokevirtual #13
1672: invokevirtual #16
1675: dload         67
1677: dconst_0
1678: dcmpl
1679: ifne          1686
1682: iconst_1
1683: goto          1687
1686: iconst_0
1687: invokestatic  #17
1690: aload         69
1692: invokestatic  #33
1695: aload         71
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         72
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #148
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         72
1738: ldc2_w        #148
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: aload         74
1755: invokestatic  #33
1758: new           #10
1761: dup
1762: invokespecial #11
1765: ldc           #12
1767: invokevirtual #13
1770: dload         75
1772: invokevirtual #60
1775: ldc           #15
1777: invokevirtual #13
1780: dconst_1
1781: invokevirtual #60
1784: ldc           #12
1786: invokevirtual #13
1789: invokevirtual #16
1792: dload         75
1794: dconst_1
1795: dcmpl
1796: ifne          1803
1799: iconst_1
1800: goto          1804
1803: iconst_0
1804: invokestatic  #17
1807: new           #10
1810: dup
1811: invokespecial #11
1814: ldc           #12
1816: invokevirtual #13
1819: dload         77
1821: invokevirtual #60
1824: ldc           #15
1826: invokevirtual #13
1829: ldc2_w        #72
1832: invokevirtual #60
1835: ldc           #12
1837: invokevirtual #13
1840: invokevirtual #16
1843: dload         77
1845: ldc2_w        #72
1848: dcmpl
1849: ifne          1856
1852: iconst_1
1853: goto          1857
1856: iconst_0
1857: invokestatic  #17
1860: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 6565
End line: 6638
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double73 = vector3D69.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        double double74 = vector3D72.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_I;
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D75);
        double double77 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D66, vector3D75);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D75.scalarMultiply((double) 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.7345682747147468d + "'", double74 == 0.7345682747147468d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.40096925188239d + "'", double76 == 1.40096925188239d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.391417376346165d + "'", double77 == 4.391417376346165d);
        org.junit.Assert.assertNotNull(vector3D79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: new           #43
397: dup
398: dconst_1
399: ldc2_w        #44
402: invokespecial #46
405: astore        51
407: new           #43
410: dup
411: dconst_1
412: ldc2_w        #44
415: invokespecial #46
418: astore        52
420: aload         51
422: aload         52
424: invokevirtual #47
427: dstore        53
429: aload         52
431: invokevirtual #52
434: dstore        55
436: getstatic     #355
439: astore        57
441: aload         52
443: aload         57
445: invokestatic  #48
448: dstore        58
450: aload         50
452: aload         57
454: invokestatic  #127
457: dstore        60
459: aload         57
461: dconst_0
462: invokevirtual #107
465: astore        62
467: new           #10
470: dup
471: invokespecial #11
474: ldc           #12
476: invokevirtual #13
479: dload         4
481: invokevirtual #60
484: ldc           #15
486: invokevirtual #13
489: dconst_0
490: invokevirtual #60
493: ldc           #12
495: invokevirtual #13
498: invokevirtual #16
501: dload         4
503: dconst_0
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #17
516: new           #10
519: dup
520: invokespecial #11
523: ldc           #12
525: invokevirtual #13
528: dload         6
530: invokevirtual #60
533: ldc           #15
535: invokevirtual #13
538: dconst_0
539: invokevirtual #60
542: ldc           #12
544: invokevirtual #13
547: invokevirtual #16
550: dload         6
552: dconst_0
553: dcmpl
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #17
565: new           #10
568: dup
569: invokespecial #11
572: ldc           #12
574: invokevirtual #13
577: dload         11
579: invokevirtual #60
582: ldc           #15
584: invokevirtual #13
587: dconst_0
588: invokevirtual #60
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: dload         11
601: dconst_0
602: dcmpl
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #17
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: dload         13
628: invokevirtual #60
631: ldc           #15
633: invokevirtual #13
636: dconst_0
637: invokevirtual #60
640: ldc           #12
642: invokevirtual #13
645: invokevirtual #16
648: dload         13
650: dconst_0
651: dcmpl
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #17
663: new           #10
666: dup
667: invokespecial #11
670: ldc           #12
672: invokevirtual #13
675: iload         15
677: invokevirtual #14
680: ldc           #15
682: invokevirtual #13
685: iconst_0
686: invokevirtual #14
689: ldc           #12
691: invokevirtual #13
694: invokevirtual #16
697: iload         15
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: new           #10
713: dup
714: invokespecial #11
717: ldc           #12
719: invokevirtual #13
722: dload         16
724: invokevirtual #60
727: ldc           #15
729: invokevirtual #13
732: dconst_0
733: invokevirtual #60
736: ldc           #12
738: invokevirtual #13
741: invokevirtual #16
744: dload         16
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: aload         18
761: invokestatic  #33
764: new           #10
767: dup
768: invokespecial #11
771: ldc           #12
773: invokevirtual #13
776: dload         21
778: invokevirtual #60
781: ldc           #15
783: invokevirtual #13
786: dconst_0
787: invokevirtual #60
790: ldc           #12
792: invokevirtual #13
795: invokevirtual #16
798: dload         21
800: dconst_0
801: dcmpl
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #17
813: aload         23
815: invokestatic  #33
818: aload         24
820: invokestatic  #33
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         29
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: dconst_0
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         29
859: dconst_0
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         31
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         31
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         35
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: dconst_0
944: invokevirtual #60
947: ldc           #12
949: invokevirtual #13
952: invokevirtual #16
955: dload         35
957: dconst_0
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         37
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: ldc2_w        #61
995: invokevirtual #60
998: ldc           #12
1000: invokevirtual #13
1003: invokevirtual #16
1006: dload         37
1008: ldc2_w        #61
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         41
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: dconst_0
1046: invokevirtual #60
1049: ldc           #12
1051: invokevirtual #13
1054: invokevirtual #16
1057: dload         41
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: dload         43
1086: invokevirtual #60
1089: ldc           #15
1091: invokevirtual #13
1094: ldc2_w        #61
1097: invokevirtual #60
1100: ldc           #12
1102: invokevirtual #13
1105: invokevirtual #16
1108: dload         43
1110: ldc2_w        #61
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         45
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         45
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         47
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: dconst_0
1197: invokevirtual #60
1200: ldc           #12
1202: invokevirtual #13
1205: invokevirtual #16
1208: dload         47
1210: dconst_0
1211: dcmpl
1212: ifne          1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #17
1223: aload         49
1225: invokestatic  #33
1228: aload         50
1230: invokestatic  #33
1233: new           #10
1236: dup
1237: invokespecial #11
1240: ldc           #12
1242: invokevirtual #13
1245: dload         53
1247: invokevirtual #60
1250: ldc           #15
1252: invokevirtual #13
1255: dconst_0
1256: invokevirtual #60
1259: ldc           #12
1261: invokevirtual #13
1264: invokevirtual #16
1267: dload         53
1269: dconst_0
1270: dcmpl
1271: ifne          1278
1274: iconst_1
1275: goto          1279
1278: iconst_0
1279: invokestatic  #17
1282: new           #10
1285: dup
1286: invokespecial #11
1289: ldc           #12
1291: invokevirtual #13
1294: dload         55
1296: invokevirtual #60
1299: ldc           #15
1301: invokevirtual #13
1304: ldc2_w        #61
1307: invokevirtual #60
1310: ldc           #12
1312: invokevirtual #13
1315: invokevirtual #16
1318: dload         55
1320: ldc2_w        #61
1323: dcmpl
1324: ifne          1331
1327: iconst_1
1328: goto          1332
1331: iconst_0
1332: invokestatic  #17
1335: aload         57
1337: invokestatic  #33
1340: new           #10
1343: dup
1344: invokespecial #11
1347: ldc           #12
1349: invokevirtual #13
1352: dload         58
1354: invokevirtual #60
1357: ldc           #15
1359: invokevirtual #13
1362: ldc2_w        #492
1365: invokevirtual #60
1368: ldc           #12
1370: invokevirtual #13
1373: invokevirtual #16
1376: dload         58
1378: ldc2_w        #492
1381: dcmpl
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         60
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: ldc2_w        #494
1418: invokevirtual #60
1421: ldc           #12
1423: invokevirtual #13
1426: invokevirtual #16
1429: dload         60
1431: ldc2_w        #494
1434: dcmpl
1435: ifne          1442
1438: iconst_1
1439: goto          1443
1442: iconst_0
1443: invokestatic  #17
1446: aload         62
1448: invokestatic  #33
1451: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 6641
End line: 6702
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double67 = vector3D27.getAlpha();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #496
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: aload         19
396: invokevirtual #497
399: dstore        51
401: new           #10
404: dup
405: invokespecial #11
408: ldc           #12
410: invokevirtual #13
413: dload         4
415: invokevirtual #60
418: ldc           #15
420: invokevirtual #13
423: dconst_0
424: invokevirtual #60
427: ldc           #12
429: invokevirtual #13
432: invokevirtual #16
435: dload         4
437: dconst_0
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #17
450: new           #10
453: dup
454: invokespecial #11
457: ldc           #12
459: invokevirtual #13
462: dload         6
464: invokevirtual #60
467: ldc           #15
469: invokevirtual #13
472: dconst_0
473: invokevirtual #60
476: ldc           #12
478: invokevirtual #13
481: invokevirtual #16
484: dload         6
486: dconst_0
487: dcmpl
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #17
499: new           #10
502: dup
503: invokespecial #11
506: ldc           #12
508: invokevirtual #13
511: dload         11
513: invokevirtual #60
516: ldc           #15
518: invokevirtual #13
521: dconst_0
522: invokevirtual #60
525: ldc           #12
527: invokevirtual #13
530: invokevirtual #16
533: dload         11
535: dconst_0
536: dcmpl
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #17
548: new           #10
551: dup
552: invokespecial #11
555: ldc           #12
557: invokevirtual #13
560: dload         13
562: invokevirtual #60
565: ldc           #15
567: invokevirtual #13
570: dconst_0
571: invokevirtual #60
574: ldc           #12
576: invokevirtual #13
579: invokevirtual #16
582: dload         13
584: dconst_0
585: dcmpl
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #17
597: new           #10
600: dup
601: invokespecial #11
604: ldc           #12
606: invokevirtual #13
609: iload         15
611: invokevirtual #14
614: ldc           #15
616: invokevirtual #13
619: iconst_0
620: invokevirtual #14
623: ldc           #12
625: invokevirtual #13
628: invokevirtual #16
631: iload         15
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #17
644: new           #10
647: dup
648: invokespecial #11
651: ldc           #12
653: invokevirtual #13
656: dload         16
658: invokevirtual #60
661: ldc           #15
663: invokevirtual #13
666: dconst_0
667: invokevirtual #60
670: ldc           #12
672: invokevirtual #13
675: invokevirtual #16
678: dload         16
680: dconst_0
681: dcmpl
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #17
693: aload         18
695: invokestatic  #33
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         21
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         21
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: aload         23
749: invokestatic  #33
752: aload         24
754: invokestatic  #33
757: new           #10
760: dup
761: invokespecial #11
764: ldc           #12
766: invokevirtual #13
769: dload         29
771: invokevirtual #60
774: ldc           #15
776: invokevirtual #13
779: dconst_0
780: invokevirtual #60
783: ldc           #12
785: invokevirtual #13
788: invokevirtual #16
791: dload         29
793: dconst_0
794: dcmpl
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #17
806: new           #10
809: dup
810: invokespecial #11
813: ldc           #12
815: invokevirtual #13
818: dload         31
820: invokevirtual #60
823: ldc           #15
825: invokevirtual #13
828: dconst_0
829: invokevirtual #60
832: ldc           #12
834: invokevirtual #13
837: invokevirtual #16
840: dload         31
842: dconst_0
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #17
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         35
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         35
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         37
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: ldc2_w        #61
929: invokevirtual #60
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: dload         37
942: ldc2_w        #61
945: dcmpl
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #17
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         41
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: dconst_0
980: invokevirtual #60
983: ldc           #12
985: invokevirtual #13
988: invokevirtual #16
991: dload         41
993: dconst_0
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         43
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: ldc2_w        #61
1031: invokevirtual #60
1034: ldc           #12
1036: invokevirtual #13
1039: invokevirtual #16
1042: dload         43
1044: ldc2_w        #61
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: dload         45
1073: invokevirtual #60
1076: ldc           #15
1078: invokevirtual #13
1081: dconst_0
1082: invokevirtual #60
1085: ldc           #12
1087: invokevirtual #13
1090: invokevirtual #16
1093: dload         45
1095: dconst_0
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         47
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         47
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: aload         49
1159: invokestatic  #33
1162: aload         50
1164: invokestatic  #33
1167: new           #10
1170: dup
1171: invokespecial #11
1174: ldc           #12
1176: invokevirtual #13
1179: dload         51
1181: invokevirtual #60
1184: ldc           #15
1186: invokevirtual #13
1189: dconst_1
1190: invokevirtual #60
1193: ldc           #12
1195: invokevirtual #13
1198: invokevirtual #16
1201: dload         51
1203: dconst_1
1204: dcmpl
1205: ifne          1212
1208: iconst_1
1209: goto          1213
1212: iconst_0
1213: invokestatic  #17
1216: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 6705
End line: 6738
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        java.lang.Object obj27 = null;
        boolean boolean28 = vector3D25.equals(obj27);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation30 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D25, 0.7345682747147468d);
        double[][] doubleArray31 = rotation30.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #498
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: aconst_null
170: astore        21
172: aload         19
174: aload         21
176: invokevirtual #302
179: istore        22
181: new           #27
184: dup
185: aload         19
187: ldc2_w        #61
190: invokespecial #103
193: astore        23
195: aload         23
197: invokevirtual #222
200: astore        24
202: aload_1
203: invokestatic  #33
206: new           #10
209: dup
210: invokespecial #11
213: ldc           #12
215: invokevirtual #13
218: dload         5
220: invokevirtual #60
223: ldc           #15
225: invokevirtual #13
228: dconst_0
229: invokevirtual #60
232: ldc           #12
234: invokevirtual #13
237: invokevirtual #16
240: dload         5
242: dconst_0
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #17
255: new           #10
258: dup
259: invokespecial #11
262: ldc           #12
264: invokevirtual #13
267: dload         7
269: invokevirtual #60
272: ldc           #15
274: invokevirtual #13
277: dconst_0
278: invokevirtual #60
281: ldc           #12
283: invokevirtual #13
286: invokevirtual #16
289: dload         7
291: dconst_0
292: dcmpl
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #17
304: new           #10
307: dup
308: invokespecial #11
311: ldc           #12
313: invokevirtual #13
316: dload         12
318: invokevirtual #60
321: ldc           #15
323: invokevirtual #13
326: dconst_0
327: invokevirtual #60
330: ldc           #12
332: invokevirtual #13
335: invokevirtual #16
338: dload         12
340: dconst_0
341: dcmpl
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #17
353: new           #10
356: dup
357: invokespecial #11
360: ldc           #12
362: invokevirtual #13
365: dload         14
367: invokevirtual #60
370: ldc           #15
372: invokevirtual #13
375: dconst_0
376: invokevirtual #60
379: ldc           #12
381: invokevirtual #13
384: invokevirtual #16
387: dload         14
389: dconst_0
390: dcmpl
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #17
402: new           #10
405: dup
406: invokespecial #11
409: ldc           #12
411: invokevirtual #13
414: iload         16
416: invokevirtual #14
419: ldc           #15
421: invokevirtual #13
424: iconst_0
425: invokevirtual #14
428: ldc           #12
430: invokevirtual #13
433: invokevirtual #16
436: iload         16
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #17
449: new           #10
452: dup
453: invokespecial #11
456: ldc           #12
458: invokevirtual #13
461: dload         17
463: invokevirtual #60
466: ldc           #15
468: invokevirtual #13
471: dconst_0
472: invokevirtual #60
475: ldc           #12
477: invokevirtual #13
480: invokevirtual #16
483: dload         17
485: dconst_0
486: dcmpl
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #17
498: aload         19
500: invokestatic  #33
503: aload         20
505: invokestatic  #33
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: iload         22
522: invokevirtual #14
525: ldc           #15
527: invokevirtual #13
530: iconst_0
531: invokevirtual #14
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: iload         22
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #17
555: aload         24
557: invokestatic  #33
560: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 6741
End line: 6832
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation92.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = rotation92.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = rotation85.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder96 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray97 = rotation95.getAngles(rotationOrder96);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotation95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #499
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: new           #27
511: dup
512: ldc2_w        #146
515: ldc2_w        #72
518: ldc2_w        #148
521: dconst_1
522: iconst_0
523: invokespecial #150
526: astore        67
528: aload         67
530: invokevirtual #96
533: astore        68
535: aload         67
537: invokevirtual #96
540: astore        69
542: aload         64
544: aload         67
546: invokevirtual #474
549: astore        70
551: aconst_null
552: astore        71
554: aload         70
556: aload         71
558: invokevirtual #57
561: astore        72
563: ldc           #58
565: invokestatic  #21
568: goto          573
571: astore        72
573: new           #10
576: dup
577: invokespecial #11
580: ldc           #12
582: invokevirtual #13
585: dload         4
587: invokevirtual #60
590: ldc           #15
592: invokevirtual #13
595: dconst_0
596: invokevirtual #60
599: ldc           #12
601: invokevirtual #13
604: invokevirtual #16
607: dload         4
609: dconst_0
610: dcmpl
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #17
622: new           #10
625: dup
626: invokespecial #11
629: ldc           #12
631: invokevirtual #13
634: dload         6
636: invokevirtual #60
639: ldc           #15
641: invokevirtual #13
644: dconst_0
645: invokevirtual #60
648: ldc           #12
650: invokevirtual #13
653: invokevirtual #16
656: dload         6
658: dconst_0
659: dcmpl
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #17
671: new           #10
674: dup
675: invokespecial #11
678: ldc           #12
680: invokevirtual #13
683: dload         11
685: invokevirtual #60
688: ldc           #15
690: invokevirtual #13
693: dconst_0
694: invokevirtual #60
697: ldc           #12
699: invokevirtual #13
702: invokevirtual #16
705: dload         11
707: dconst_0
708: dcmpl
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #17
720: new           #10
723: dup
724: invokespecial #11
727: ldc           #12
729: invokevirtual #13
732: dload         13
734: invokevirtual #60
737: ldc           #15
739: invokevirtual #13
742: dconst_0
743: invokevirtual #60
746: ldc           #12
748: invokevirtual #13
751: invokevirtual #16
754: dload         13
756: dconst_0
757: dcmpl
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #17
769: new           #10
772: dup
773: invokespecial #11
776: ldc           #12
778: invokevirtual #13
781: iload         15
783: invokevirtual #14
786: ldc           #15
788: invokevirtual #13
791: iconst_0
792: invokevirtual #14
795: ldc           #12
797: invokevirtual #13
800: invokevirtual #16
803: iload         15
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #17
816: new           #10
819: dup
820: invokespecial #11
823: ldc           #12
825: invokevirtual #13
828: dload         16
830: invokevirtual #60
833: ldc           #15
835: invokevirtual #13
838: dconst_0
839: invokevirtual #60
842: ldc           #12
844: invokevirtual #13
847: invokevirtual #16
850: dload         16
852: dconst_0
853: dcmpl
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #17
865: aload         18
867: invokestatic  #33
870: new           #10
873: dup
874: invokespecial #11
877: ldc           #12
879: invokevirtual #13
882: dload         21
884: invokevirtual #60
887: ldc           #15
889: invokevirtual #13
892: dconst_0
893: invokevirtual #60
896: ldc           #12
898: invokevirtual #13
901: invokevirtual #16
904: dload         21
906: dconst_0
907: dcmpl
908: ifne          915
911: iconst_1
912: goto          916
915: iconst_0
916: invokestatic  #17
919: new           #10
922: dup
923: invokespecial #11
926: ldc           #12
928: invokevirtual #13
931: dload         25
933: invokevirtual #60
936: ldc           #15
938: invokevirtual #13
941: dconst_0
942: invokevirtual #60
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: dload         25
955: dconst_0
956: dcmpl
957: ifne          964
960: iconst_1
961: goto          965
964: iconst_0
965: invokestatic  #17
968: new           #10
971: dup
972: invokespecial #11
975: ldc           #12
977: invokevirtual #13
980: dload         27
982: invokevirtual #60
985: ldc           #15
987: invokevirtual #13
990: ldc2_w        #61
993: invokevirtual #60
996: ldc           #12
998: invokevirtual #13
1001: invokevirtual #16
1004: dload         27
1006: ldc2_w        #61
1009: dcmpl
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #17
1021: new           #10
1024: dup
1025: invokespecial #11
1028: ldc           #12
1030: invokevirtual #13
1033: dload         31
1035: invokevirtual #60
1038: ldc           #15
1040: invokevirtual #13
1043: dconst_0
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         31
1057: dconst_0
1058: dcmpl
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #17
1070: new           #10
1073: dup
1074: invokespecial #11
1077: ldc           #12
1079: invokevirtual #13
1082: dload         33
1084: invokevirtual #60
1087: ldc           #15
1089: invokevirtual #13
1092: ldc2_w        #61
1095: invokevirtual #60
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: dload         33
1108: ldc2_w        #61
1111: dcmpl
1112: ifne          1119
1115: iconst_1
1116: goto          1120
1119: iconst_0
1120: invokestatic  #17
1123: new           #10
1126: dup
1127: invokespecial #11
1130: ldc           #12
1132: invokevirtual #13
1135: dload         35
1137: invokevirtual #60
1140: ldc           #15
1142: invokevirtual #13
1145: dconst_0
1146: invokevirtual #60
1149: ldc           #12
1151: invokevirtual #13
1154: invokevirtual #16
1157: dload         35
1159: dconst_0
1160: dcmpl
1161: ifne          1168
1164: iconst_1
1165: goto          1169
1168: iconst_0
1169: invokestatic  #17
1172: new           #10
1175: dup
1176: invokespecial #11
1179: ldc           #12
1181: invokevirtual #13
1184: dload         40
1186: invokevirtual #60
1189: ldc           #15
1191: invokevirtual #13
1194: dconst_0
1195: invokevirtual #60
1198: ldc           #12
1200: invokevirtual #13
1203: invokevirtual #16
1206: dload         40
1208: dconst_0
1209: dcmpl
1210: ifne          1217
1213: iconst_1
1214: goto          1218
1217: iconst_0
1218: invokestatic  #17
1221: new           #10
1224: dup
1225: invokespecial #11
1228: ldc           #12
1230: invokevirtual #13
1233: dload         42
1235: invokevirtual #60
1238: ldc           #15
1240: invokevirtual #13
1243: dconst_0
1244: invokevirtual #60
1247: ldc           #12
1249: invokevirtual #13
1252: invokevirtual #16
1255: dload         42
1257: dconst_0
1258: dcmpl
1259: ifne          1266
1262: iconst_1
1263: goto          1267
1266: iconst_0
1267: invokestatic  #17
1270: new           #10
1273: dup
1274: invokespecial #11
1277: ldc           #12
1279: invokevirtual #13
1282: dload         47
1284: invokevirtual #60
1287: ldc           #15
1289: invokevirtual #13
1292: dconst_0
1293: invokevirtual #60
1296: ldc           #12
1298: invokevirtual #13
1301: invokevirtual #16
1304: dload         47
1306: dconst_0
1307: dcmpl
1308: ifne          1315
1311: iconst_1
1312: goto          1316
1315: iconst_0
1316: invokestatic  #17
1319: new           #10
1322: dup
1323: invokespecial #11
1326: ldc           #12
1328: invokevirtual #13
1331: dload         49
1333: invokevirtual #60
1336: ldc           #15
1338: invokevirtual #13
1341: dconst_0
1342: invokevirtual #60
1345: ldc           #12
1347: invokevirtual #13
1350: invokevirtual #16
1353: dload         49
1355: dconst_0
1356: dcmpl
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: iload         51
1382: invokevirtual #14
1385: ldc           #15
1387: invokevirtual #13
1390: iconst_0
1391: invokevirtual #14
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: iload         51
1404: ifne          1411
1407: iconst_1
1408: goto          1412
1411: iconst_0
1412: invokestatic  #17
1415: new           #10
1418: dup
1419: invokespecial #11
1422: ldc           #12
1424: invokevirtual #13
1427: dload         52
1429: invokevirtual #60
1432: ldc           #15
1434: invokevirtual #13
1437: dconst_0
1438: invokevirtual #60
1441: ldc           #12
1443: invokevirtual #13
1446: invokevirtual #16
1449: dload         52
1451: dconst_0
1452: dcmpl
1453: ifne          1460
1456: iconst_1
1457: goto          1461
1460: iconst_0
1461: invokestatic  #17
1464: aload         54
1466: invokestatic  #33
1469: new           #10
1472: dup
1473: invokespecial #11
1476: ldc           #12
1478: invokevirtual #13
1481: dload         57
1483: invokevirtual #60
1486: ldc           #15
1488: invokevirtual #13
1491: dconst_0
1492: invokevirtual #60
1495: ldc           #12
1497: invokevirtual #13
1500: invokevirtual #16
1503: dload         57
1505: dconst_0
1506: dcmpl
1507: ifne          1514
1510: iconst_1
1511: goto          1515
1514: iconst_0
1515: invokestatic  #17
1518: aload         59
1520: invokestatic  #33
1523: aload         60
1525: invokestatic  #33
1528: new           #10
1531: dup
1532: invokespecial #11
1535: ldc           #12
1537: invokevirtual #13
1540: dload         61
1542: invokevirtual #60
1545: ldc           #15
1547: invokevirtual #13
1550: ldc2_w        #63
1553: invokevirtual #60
1556: ldc           #12
1558: invokevirtual #13
1561: invokevirtual #16
1564: dload         61
1566: ldc2_w        #63
1569: dcmpl
1570: ifne          1577
1573: iconst_1
1574: goto          1578
1577: iconst_0
1578: invokestatic  #17
1581: aload         64
1583: invokestatic  #33
1586: new           #10
1589: dup
1590: invokespecial #11
1593: ldc           #12
1595: invokevirtual #13
1598: dload         65
1600: invokevirtual #60
1603: ldc           #15
1605: invokevirtual #13
1608: dconst_0
1609: invokevirtual #60
1612: ldc           #12
1614: invokevirtual #13
1617: invokevirtual #16
1620: dload         65
1622: dconst_0
1623: dcmpl
1624: ifne          1631
1627: iconst_1
1628: goto          1632
1631: iconst_0
1632: invokestatic  #17
1635: aload         68
1637: invokestatic  #33
1640: aload         69
1642: invokestatic  #33
1645: aload         70
1647: invokestatic  #33
1650: return
Exception table:
from    to  target type
554   568   571   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 6835
End line: 6925
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 32, (double) 10.0f);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D6, vector3D12);
        boolean boolean15 = vector3D6.isInfinite();
        double double16 = vector3D6.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double23 = vector3D19.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double24 = vector3D22.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        double double32 = vector3D30.getDelta();
        double double33 = vector3D22.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double43 = vector3D39.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        double double44 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D36, vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D47, vector3D53);
        boolean boolean56 = vector3D47.isInfinite();
        double double57 = vector3D36.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = vector3D47.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double65 = vector3D61.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D58.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = vector3D22.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation68 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D6, vector3D22);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double79 = vector3D75.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        double double80 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D78);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double90 = vector3D86.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        double double91 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D83, vector3D89);
        boolean boolean92 = vector3D83.isInfinite();
        double double93 = vector3D72.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = vector3D83.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector95 = vector3D69.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D94);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = vector3D69.orthogonal();
        double double97 = vector3D6.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D98 = vector3D2.add(0.6702668260599606d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        double double99 = vector3D69.getNorm();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.6957086881730823d + "'", double16 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.7345682747147468d + "'", double24 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.7345682747147468d + "'", double32 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(euclidean3DVector95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + Double.POSITIVE_INFINITY + "'", double97 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + Double.POSITIVE_INFINITY + "'", double99 == Double.POSITIVE_INFINITY);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #500
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: ldc2_w        #70
32: ldc2_w        #83
35: invokespecial #46
38: astore_1
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_2
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore_3
63: new           #43
66: dup
67: dconst_1
68: ldc2_w        #44
71: invokespecial #46
74: astore        4
76: aload_3
77: aload         4
79: invokevirtual #47
82: dstore        5
84: aload_2
85: aload         4
87: invokestatic  #48
90: dstore        7
92: aload_2
93: invokevirtual #49
96: istore        9
98: aload_2
99: invokevirtual #162
102: dstore        10
104: new           #43
107: dup
108: dconst_1
109: ldc2_w        #44
112: invokespecial #46
115: astore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        13
130: aload         12
132: aload         13
134: invokevirtual #47
137: dstore        14
139: aload         13
141: invokevirtual #52
144: dstore        16
146: new           #43
149: dup
150: dconst_1
151: ldc2_w        #44
154: invokespecial #46
157: astore        18
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        19
172: aload         18
174: aload         19
176: invokevirtual #47
179: dstore        20
181: aload         19
183: invokevirtual #52
186: dstore        22
188: aload         13
190: aload         19
192: invokevirtual #53
195: dstore        24
197: new           #43
200: dup
201: dconst_1
202: ldc2_w        #44
205: invokespecial #46
208: astore        26
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        27
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        28
236: aload         27
238: aload         28
240: invokevirtual #47
243: dstore        29
245: aload         26
247: aload         28
249: invokestatic  #48
252: dstore        31
254: new           #43
257: dup
258: dconst_1
259: ldc2_w        #44
262: invokespecial #46
265: astore        33
267: new           #43
270: dup
271: dconst_1
272: ldc2_w        #44
275: invokespecial #46
278: astore        34
280: new           #43
283: dup
284: dconst_1
285: ldc2_w        #44
288: invokespecial #46
291: astore        35
293: aload         34
295: aload         35
297: invokevirtual #47
300: dstore        36
302: aload         33
304: aload         35
306: invokestatic  #48
309: dstore        38
311: aload         33
313: invokevirtual #49
316: istore        40
318: aload         26
320: aload         33
322: invokevirtual #50
325: dstore        41
327: aload         33
329: invokevirtual #54
332: astore        43
334: new           #43
337: dup
338: dconst_1
339: ldc2_w        #44
342: invokespecial #46
345: astore        44
347: new           #43
350: dup
351: dconst_1
352: ldc2_w        #44
355: invokespecial #46
358: astore        45
360: aload         44
362: aload         45
364: invokevirtual #47
367: dstore        46
369: aload         43
371: aload         44
373: invokevirtual #55
376: astore        48
378: aload         13
380: aload         48
382: invokevirtual #55
385: astore        49
387: new           #27
390: dup
391: aload_2
392: aload         13
394: invokespecial #56
397: astore        50
399: getstatic     #126
402: astore        51
404: new           #43
407: dup
408: dconst_1
409: ldc2_w        #44
412: invokespecial #46
415: astore        52
417: new           #43
420: dup
421: dconst_1
422: ldc2_w        #44
425: invokespecial #46
428: astore        53
430: new           #43
433: dup
434: dconst_1
435: ldc2_w        #44
438: invokespecial #46
441: astore        54
443: aload         53
445: aload         54
447: invokevirtual #47
450: dstore        55
452: aload         52
454: aload         54
456: invokestatic  #48
459: dstore        57
461: new           #43
464: dup
465: dconst_1
466: ldc2_w        #44
469: invokespecial #46
472: astore        59
474: new           #43
477: dup
478: dconst_1
479: ldc2_w        #44
482: invokespecial #46
485: astore        60
487: new           #43
490: dup
491: dconst_1
492: ldc2_w        #44
495: invokespecial #46
498: astore        61
500: aload         60
502: aload         61
504: invokevirtual #47
507: dstore        62
509: aload         59
511: aload         61
513: invokestatic  #48
516: dstore        64
518: aload         59
520: invokevirtual #49
523: istore        66
525: aload         52
527: aload         59
529: invokevirtual #50
532: dstore        67
534: aload         59
536: invokevirtual #54
539: astore        69
541: aload         51
543: aload         69
545: invokevirtual #55
548: astore        70
550: aload         51
552: invokevirtual #163
555: astore        71
557: aload_2
558: aload         51
560: invokevirtual #50
563: dstore        72
565: aload_1
566: ldc2_w        #79
569: aload         51
571: invokevirtual #182
574: astore        74
576: aload         51
578: invokevirtual #261
581: dstore        75
583: new           #10
586: dup
587: invokespecial #11
590: ldc           #12
592: invokevirtual #13
595: dload         5
597: invokevirtual #60
600: ldc           #15
602: invokevirtual #13
605: dconst_0
606: invokevirtual #60
609: ldc           #12
611: invokevirtual #13
614: invokevirtual #16
617: dload         5
619: dconst_0
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #17
632: new           #10
635: dup
636: invokespecial #11
639: ldc           #12
641: invokevirtual #13
644: dload         7
646: invokevirtual #60
649: ldc           #15
651: invokevirtual #13
654: dconst_0
655: invokevirtual #60
658: ldc           #12
660: invokevirtual #13
663: invokevirtual #16
666: dload         7
668: dconst_0
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #17
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: iload         9
695: invokevirtual #14
698: ldc           #15
700: invokevirtual #13
703: iconst_0
704: invokevirtual #14
707: ldc           #12
709: invokevirtual #13
712: invokevirtual #16
715: iload         9
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #17
728: new           #10
731: dup
732: invokespecial #11
735: ldc           #12
737: invokevirtual #13
740: dload         10
742: invokevirtual #60
745: ldc           #15
747: invokevirtual #13
750: ldc2_w        #167
753: invokevirtual #60
756: ldc           #12
758: invokevirtual #13
761: invokevirtual #16
764: dload         10
766: ldc2_w        #167
769: dcmpl
770: ifne          777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #17
781: new           #10
784: dup
785: invokespecial #11
788: ldc           #12
790: invokevirtual #13
793: dload         14
795: invokevirtual #60
798: ldc           #15
800: invokevirtual #13
803: dconst_0
804: invokevirtual #60
807: ldc           #12
809: invokevirtual #13
812: invokevirtual #16
815: dload         14
817: dconst_0
818: dcmpl
819: ifne          826
822: iconst_1
823: goto          827
826: iconst_0
827: invokestatic  #17
830: new           #10
833: dup
834: invokespecial #11
837: ldc           #12
839: invokevirtual #13
842: dload         16
844: invokevirtual #60
847: ldc           #15
849: invokevirtual #13
852: ldc2_w        #61
855: invokevirtual #60
858: ldc           #12
860: invokevirtual #13
863: invokevirtual #16
866: dload         16
868: ldc2_w        #61
871: dcmpl
872: ifne          879
875: iconst_1
876: goto          880
879: iconst_0
880: invokestatic  #17
883: new           #10
886: dup
887: invokespecial #11
890: ldc           #12
892: invokevirtual #13
895: dload         20
897: invokevirtual #60
900: ldc           #15
902: invokevirtual #13
905: dconst_0
906: invokevirtual #60
909: ldc           #12
911: invokevirtual #13
914: invokevirtual #16
917: dload         20
919: dconst_0
920: dcmpl
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: new           #10
935: dup
936: invokespecial #11
939: ldc           #12
941: invokevirtual #13
944: dload         22
946: invokevirtual #60
949: ldc           #15
951: invokevirtual #13
954: ldc2_w        #61
957: invokevirtual #60
960: ldc           #12
962: invokevirtual #13
965: invokevirtual #16
968: dload         22
970: ldc2_w        #61
973: dcmpl
974: ifne          981
977: iconst_1
978: goto          982
981: iconst_0
982: invokestatic  #17
985: new           #10
988: dup
989: invokespecial #11
992: ldc           #12
994: invokevirtual #13
997: dload         24
999: invokevirtual #60
1002: ldc           #15
1004: invokevirtual #13
1007: dconst_0
1008: invokevirtual #60
1011: ldc           #12
1013: invokevirtual #13
1016: invokevirtual #16
1019: dload         24
1021: dconst_0
1022: dcmpl
1023: ifne          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #17
1034: new           #10
1037: dup
1038: invokespecial #11
1041: ldc           #12
1043: invokevirtual #13
1046: dload         29
1048: invokevirtual #60
1051: ldc           #15
1053: invokevirtual #13
1056: dconst_0
1057: invokevirtual #60
1060: ldc           #12
1062: invokevirtual #13
1065: invokevirtual #16
1068: dload         29
1070: dconst_0
1071: dcmpl
1072: ifne          1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #17
1083: new           #10
1086: dup
1087: invokespecial #11
1090: ldc           #12
1092: invokevirtual #13
1095: dload         31
1097: invokevirtual #60
1100: ldc           #15
1102: invokevirtual #13
1105: dconst_0
1106: invokevirtual #60
1109: ldc           #12
1111: invokevirtual #13
1114: invokevirtual #16
1117: dload         31
1119: dconst_0
1120: dcmpl
1121: ifne          1128
1124: iconst_1
1125: goto          1129
1128: iconst_0
1129: invokestatic  #17
1132: new           #10
1135: dup
1136: invokespecial #11
1139: ldc           #12
1141: invokevirtual #13
1144: dload         36
1146: invokevirtual #60
1149: ldc           #15
1151: invokevirtual #13
1154: dconst_0
1155: invokevirtual #60
1158: ldc           #12
1160: invokevirtual #13
1163: invokevirtual #16
1166: dload         36
1168: dconst_0
1169: dcmpl
1170: ifne          1177
1173: iconst_1
1174: goto          1178
1177: iconst_0
1178: invokestatic  #17
1181: new           #10
1184: dup
1185: invokespecial #11
1188: ldc           #12
1190: invokevirtual #13
1193: dload         38
1195: invokevirtual #60
1198: ldc           #15
1200: invokevirtual #13
1203: dconst_0
1204: invokevirtual #60
1207: ldc           #12
1209: invokevirtual #13
1212: invokevirtual #16
1215: dload         38
1217: dconst_0
1218: dcmpl
1219: ifne          1226
1222: iconst_1
1223: goto          1227
1226: iconst_0
1227: invokestatic  #17
1230: new           #10
1233: dup
1234: invokespecial #11
1237: ldc           #12
1239: invokevirtual #13
1242: iload         40
1244: invokevirtual #14
1247: ldc           #15
1249: invokevirtual #13
1252: iconst_0
1253: invokevirtual #14
1256: ldc           #12
1258: invokevirtual #13
1261: invokevirtual #16
1264: iload         40
1266: ifne          1273
1269: iconst_1
1270: goto          1274
1273: iconst_0
1274: invokestatic  #17
1277: new           #10
1280: dup
1281: invokespecial #11
1284: ldc           #12
1286: invokevirtual #13
1289: dload         41
1291: invokevirtual #60
1294: ldc           #15
1296: invokevirtual #13
1299: dconst_0
1300: invokevirtual #60
1303: ldc           #12
1305: invokevirtual #13
1308: invokevirtual #16
1311: dload         41
1313: dconst_0
1314: dcmpl
1315: ifne          1322
1318: iconst_1
1319: goto          1323
1322: iconst_0
1323: invokestatic  #17
1326: aload         43
1328: invokestatic  #33
1331: new           #10
1334: dup
1335: invokespecial #11
1338: ldc           #12
1340: invokevirtual #13
1343: dload         46
1345: invokevirtual #60
1348: ldc           #15
1350: invokevirtual #13
1353: dconst_0
1354: invokevirtual #60
1357: ldc           #12
1359: invokevirtual #13
1362: invokevirtual #16
1365: dload         46
1367: dconst_0
1368: dcmpl
1369: ifne          1376
1372: iconst_1
1373: goto          1377
1376: iconst_0
1377: invokestatic  #17
1380: aload         48
1382: invokestatic  #33
1385: aload         49
1387: invokestatic  #33
1390: aload         51
1392: invokestatic  #33
1395: new           #10
1398: dup
1399: invokespecial #11
1402: ldc           #12
1404: invokevirtual #13
1407: dload         55
1409: invokevirtual #60
1412: ldc           #15
1414: invokevirtual #13
1417: dconst_0
1418: invokevirtual #60
1421: ldc           #12
1423: invokevirtual #13
1426: invokevirtual #16
1429: dload         55
1431: dconst_0
1432: dcmpl
1433: ifne          1440
1436: iconst_1
1437: goto          1441
1440: iconst_0
1441: invokestatic  #17
1444: new           #10
1447: dup
1448: invokespecial #11
1451: ldc           #12
1453: invokevirtual #13
1456: dload         57
1458: invokevirtual #60
1461: ldc           #15
1463: invokevirtual #13
1466: dconst_0
1467: invokevirtual #60
1470: ldc           #12
1472: invokevirtual #13
1475: invokevirtual #16
1478: dload         57
1480: dconst_0
1481: dcmpl
1482: ifne          1489
1485: iconst_1
1486: goto          1490
1489: iconst_0
1490: invokestatic  #17
1493: new           #10
1496: dup
1497: invokespecial #11
1500: ldc           #12
1502: invokevirtual #13
1505: dload         62
1507: invokevirtual #60
1510: ldc           #15
1512: invokevirtual #13
1515: dconst_0
1516: invokevirtual #60
1519: ldc           #12
1521: invokevirtual #13
1524: invokevirtual #16
1527: dload         62
1529: dconst_0
1530: dcmpl
1531: ifne          1538
1534: iconst_1
1535: goto          1539
1538: iconst_0
1539: invokestatic  #17
1542: new           #10
1545: dup
1546: invokespecial #11
1549: ldc           #12
1551: invokevirtual #13
1554: dload         64
1556: invokevirtual #60
1559: ldc           #15
1561: invokevirtual #13
1564: dconst_0
1565: invokevirtual #60
1568: ldc           #12
1570: invokevirtual #13
1573: invokevirtual #16
1576: dload         64
1578: dconst_0
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: new           #10
1594: dup
1595: invokespecial #11
1598: ldc           #12
1600: invokevirtual #13
1603: iload         66
1605: invokevirtual #14
1608: ldc           #15
1610: invokevirtual #13
1613: iconst_0
1614: invokevirtual #14
1617: ldc           #12
1619: invokevirtual #13
1622: invokevirtual #16
1625: iload         66
1627: ifne          1634
1630: iconst_1
1631: goto          1635
1634: iconst_0
1635: invokestatic  #17
1638: new           #10
1641: dup
1642: invokespecial #11
1645: ldc           #12
1647: invokevirtual #13
1650: dload         67
1652: invokevirtual #60
1655: ldc           #15
1657: invokevirtual #13
1660: dconst_0
1661: invokevirtual #60
1664: ldc           #12
1666: invokevirtual #13
1669: invokevirtual #16
1672: dload         67
1674: dconst_0
1675: dcmpl
1676: ifne          1683
1679: iconst_1
1680: goto          1684
1683: iconst_0
1684: invokestatic  #17
1687: aload         69
1689: invokestatic  #33
1692: aload         70
1694: invokestatic  #33
1697: aload         71
1699: invokestatic  #33
1702: new           #10
1705: dup
1706: invokespecial #11
1709: ldc           #12
1711: invokevirtual #13
1714: dload         72
1716: invokevirtual #60
1719: ldc           #15
1721: invokevirtual #13
1724: ldc2_w        #133
1727: invokevirtual #60
1730: ldc           #12
1732: invokevirtual #13
1735: invokevirtual #16
1738: dload         72
1740: ldc2_w        #133
1743: dcmpl
1744: ifne          1751
1747: iconst_1
1748: goto          1752
1751: iconst_0
1752: invokestatic  #17
1755: aload         74
1757: invokestatic  #33
1760: new           #10
1763: dup
1764: invokespecial #11
1767: ldc           #12
1769: invokevirtual #13
1772: dload         75
1774: invokevirtual #60
1777: ldc           #15
1779: invokevirtual #13
1782: ldc2_w        #133
1785: invokevirtual #60
1788: ldc           #12
1790: invokevirtual #13
1793: invokevirtual #16
1796: dload         75
1798: ldc2_w        #133
1801: dcmpl
1802: ifne          1809
1805: iconst_1
1806: goto          1810
1809: iconst_0
1810: invokestatic  #17
1813: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 6928
End line: 6991
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = rotation65.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D67.negate();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #501
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #139
394: dstore        50
396: aload         49
398: invokevirtual #96
401: astore        52
403: aload         52
405: invokevirtual #54
408: astore        53
410: new           #10
413: dup
414: invokespecial #11
417: ldc           #12
419: invokevirtual #13
422: dload_3
423: invokevirtual #60
426: ldc           #15
428: invokevirtual #13
431: dconst_0
432: invokevirtual #60
435: ldc           #12
437: invokevirtual #13
440: invokevirtual #16
443: dload_3
444: dconst_0
445: dcmpl
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #17
457: new           #10
460: dup
461: invokespecial #11
464: ldc           #12
466: invokevirtual #13
469: dload         7
471: invokevirtual #60
474: ldc           #15
476: invokevirtual #13
479: dconst_0
480: invokevirtual #60
483: ldc           #12
485: invokevirtual #13
488: invokevirtual #16
491: dload         7
493: dconst_0
494: dcmpl
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #17
506: new           #10
509: dup
510: invokespecial #11
513: ldc           #12
515: invokevirtual #13
518: dload         9
520: invokevirtual #60
523: ldc           #15
525: invokevirtual #13
528: ldc2_w        #61
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         9
544: ldc2_w        #61
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #17
559: new           #10
562: dup
563: invokespecial #11
566: ldc           #12
568: invokevirtual #13
571: dload         13
573: invokevirtual #60
576: ldc           #15
578: invokevirtual #13
581: dconst_0
582: invokevirtual #60
585: ldc           #12
587: invokevirtual #13
590: invokevirtual #16
593: dload         13
595: dconst_0
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #17
608: new           #10
611: dup
612: invokespecial #11
615: ldc           #12
617: invokevirtual #13
620: dload         15
622: invokevirtual #60
625: ldc           #15
627: invokevirtual #13
630: ldc2_w        #61
633: invokevirtual #60
636: ldc           #12
638: invokevirtual #13
641: invokevirtual #16
644: dload         15
646: ldc2_w        #61
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #17
661: new           #10
664: dup
665: invokespecial #11
668: ldc           #12
670: invokevirtual #13
673: dload         17
675: invokevirtual #60
678: ldc           #15
680: invokevirtual #13
683: dconst_0
684: invokevirtual #60
687: ldc           #12
689: invokevirtual #13
692: invokevirtual #16
695: dload         17
697: dconst_0
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: new           #10
713: dup
714: invokespecial #11
717: ldc           #12
719: invokevirtual #13
722: dload         22
724: invokevirtual #60
727: ldc           #15
729: invokevirtual #13
732: dconst_0
733: invokevirtual #60
736: ldc           #12
738: invokevirtual #13
741: invokevirtual #16
744: dload         22
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: new           #10
762: dup
763: invokespecial #11
766: ldc           #12
768: invokevirtual #13
771: dload         24
773: invokevirtual #60
776: ldc           #15
778: invokevirtual #13
781: dconst_0
782: invokevirtual #60
785: ldc           #12
787: invokevirtual #13
790: invokevirtual #16
793: dload         24
795: dconst_0
796: dcmpl
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #17
808: new           #10
811: dup
812: invokespecial #11
815: ldc           #12
817: invokevirtual #13
820: dload         29
822: invokevirtual #60
825: ldc           #15
827: invokevirtual #13
830: dconst_0
831: invokevirtual #60
834: ldc           #12
836: invokevirtual #13
839: invokevirtual #16
842: dload         29
844: dconst_0
845: dcmpl
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #17
857: new           #10
860: dup
861: invokespecial #11
864: ldc           #12
866: invokevirtual #13
869: dload         31
871: invokevirtual #60
874: ldc           #15
876: invokevirtual #13
879: dconst_0
880: invokevirtual #60
883: ldc           #12
885: invokevirtual #13
888: invokevirtual #16
891: dload         31
893: dconst_0
894: dcmpl
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #17
906: new           #10
909: dup
910: invokespecial #11
913: ldc           #12
915: invokevirtual #13
918: iload         33
920: invokevirtual #14
923: ldc           #15
925: invokevirtual #13
928: iconst_0
929: invokevirtual #14
932: ldc           #12
934: invokevirtual #13
937: invokevirtual #16
940: iload         33
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #17
953: new           #10
956: dup
957: invokespecial #11
960: ldc           #12
962: invokevirtual #13
965: dload         34
967: invokevirtual #60
970: ldc           #15
972: invokevirtual #13
975: dconst_0
976: invokevirtual #60
979: ldc           #12
981: invokevirtual #13
984: invokevirtual #16
987: dload         34
989: dconst_0
990: dcmpl
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #17
1002: aload         36
1004: invokestatic  #33
1007: new           #10
1010: dup
1011: invokespecial #11
1014: ldc           #12
1016: invokevirtual #13
1019: dload         39
1021: invokevirtual #60
1024: ldc           #15
1026: invokevirtual #13
1029: dconst_0
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         39
1043: dconst_0
1044: dcmpl
1045: ifne          1052
1048: iconst_1
1049: goto          1053
1052: iconst_0
1053: invokestatic  #17
1056: aload         41
1058: invokestatic  #33
1061: aload         42
1063: invokestatic  #33
1066: new           #10
1069: dup
1070: invokespecial #11
1073: ldc           #12
1075: invokevirtual #13
1078: dload         43
1080: invokevirtual #60
1083: ldc           #15
1085: invokevirtual #13
1088: ldc2_w        #63
1091: invokevirtual #60
1094: ldc           #12
1096: invokevirtual #13
1099: invokevirtual #16
1102: dload         43
1104: ldc2_w        #63
1107: dcmpl
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #17
1119: new           #10
1122: dup
1123: invokespecial #11
1126: ldc           #12
1128: invokevirtual #13
1131: dload         46
1133: invokevirtual #60
1136: ldc           #15
1138: invokevirtual #13
1141: ldc2_w        #79
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         46
1157: ldc2_w        #79
1160: dcmpl
1161: ifne          1168
1164: iconst_1
1165: goto          1169
1168: iconst_0
1169: invokestatic  #17
1172: aload         48
1174: invokestatic  #33
1177: new           #10
1180: dup
1181: invokespecial #11
1184: ldc           #12
1186: invokevirtual #13
1189: dload         50
1191: invokevirtual #60
1194: ldc           #15
1196: invokevirtual #13
1199: ldc2_w        #141
1202: invokevirtual #60
1205: ldc           #12
1207: invokevirtual #13
1210: invokevirtual #16
1213: dload         50
1215: ldc2_w        #141
1218: dcmpl
1219: ifne          1226
1222: iconst_1
1223: goto          1227
1226: iconst_0
1227: invokestatic  #17
1230: aload         52
1232: invokestatic  #33
1235: aload         53
1237: invokestatic  #33
1240: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 6994
End line: 7079
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation92.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = rotation92.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = rotation85.applyInverseTo(rotation92);
        double[][] doubleArray96 = rotation85.getMatrix();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #502
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: new           #27
511: dup
512: ldc2_w        #146
515: ldc2_w        #72
518: ldc2_w        #148
521: dconst_1
522: iconst_0
523: invokespecial #150
526: astore        67
528: aload         67
530: invokevirtual #96
533: astore        68
535: aload         67
537: invokevirtual #96
540: astore        69
542: aload         64
544: aload         67
546: invokevirtual #474
549: astore        70
551: aload         64
553: invokevirtual #222
556: astore        71
558: new           #10
561: dup
562: invokespecial #11
565: ldc           #12
567: invokevirtual #13
570: dload         4
572: invokevirtual #60
575: ldc           #15
577: invokevirtual #13
580: dconst_0
581: invokevirtual #60
584: ldc           #12
586: invokevirtual #13
589: invokevirtual #16
592: dload         4
594: dconst_0
595: dcmpl
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #17
607: new           #10
610: dup
611: invokespecial #11
614: ldc           #12
616: invokevirtual #13
619: dload         6
621: invokevirtual #60
624: ldc           #15
626: invokevirtual #13
629: dconst_0
630: invokevirtual #60
633: ldc           #12
635: invokevirtual #13
638: invokevirtual #16
641: dload         6
643: dconst_0
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #17
656: new           #10
659: dup
660: invokespecial #11
663: ldc           #12
665: invokevirtual #13
668: dload         11
670: invokevirtual #60
673: ldc           #15
675: invokevirtual #13
678: dconst_0
679: invokevirtual #60
682: ldc           #12
684: invokevirtual #13
687: invokevirtual #16
690: dload         11
692: dconst_0
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #17
705: new           #10
708: dup
709: invokespecial #11
712: ldc           #12
714: invokevirtual #13
717: dload         13
719: invokevirtual #60
722: ldc           #15
724: invokevirtual #13
727: dconst_0
728: invokevirtual #60
731: ldc           #12
733: invokevirtual #13
736: invokevirtual #16
739: dload         13
741: dconst_0
742: dcmpl
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #17
754: new           #10
757: dup
758: invokespecial #11
761: ldc           #12
763: invokevirtual #13
766: iload         15
768: invokevirtual #14
771: ldc           #15
773: invokevirtual #13
776: iconst_0
777: invokevirtual #14
780: ldc           #12
782: invokevirtual #13
785: invokevirtual #16
788: iload         15
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #17
801: new           #10
804: dup
805: invokespecial #11
808: ldc           #12
810: invokevirtual #13
813: dload         16
815: invokevirtual #60
818: ldc           #15
820: invokevirtual #13
823: dconst_0
824: invokevirtual #60
827: ldc           #12
829: invokevirtual #13
832: invokevirtual #16
835: dload         16
837: dconst_0
838: dcmpl
839: ifne          846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #17
850: aload         18
852: invokestatic  #33
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         21
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         21
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         25
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: dconst_0
927: invokevirtual #60
930: ldc           #12
932: invokevirtual #13
935: invokevirtual #16
938: dload         25
940: dconst_0
941: dcmpl
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #17
953: new           #10
956: dup
957: invokespecial #11
960: ldc           #12
962: invokevirtual #13
965: dload         27
967: invokevirtual #60
970: ldc           #15
972: invokevirtual #13
975: ldc2_w        #61
978: invokevirtual #60
981: ldc           #12
983: invokevirtual #13
986: invokevirtual #16
989: dload         27
991: ldc2_w        #61
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         31
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: dconst_0
1029: invokevirtual #60
1032: ldc           #12
1034: invokevirtual #13
1037: invokevirtual #16
1040: dload         31
1042: dconst_0
1043: dcmpl
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #17
1055: new           #10
1058: dup
1059: invokespecial #11
1062: ldc           #12
1064: invokevirtual #13
1067: dload         33
1069: invokevirtual #60
1072: ldc           #15
1074: invokevirtual #13
1077: ldc2_w        #61
1080: invokevirtual #60
1083: ldc           #12
1085: invokevirtual #13
1088: invokevirtual #16
1091: dload         33
1093: ldc2_w        #61
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         35
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         35
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: new           #10
1160: dup
1161: invokespecial #11
1164: ldc           #12
1166: invokevirtual #13
1169: dload         40
1171: invokevirtual #60
1174: ldc           #15
1176: invokevirtual #13
1179: dconst_0
1180: invokevirtual #60
1183: ldc           #12
1185: invokevirtual #13
1188: invokevirtual #16
1191: dload         40
1193: dconst_0
1194: dcmpl
1195: ifne          1202
1198: iconst_1
1199: goto          1203
1202: iconst_0
1203: invokestatic  #17
1206: new           #10
1209: dup
1210: invokespecial #11
1213: ldc           #12
1215: invokevirtual #13
1218: dload         42
1220: invokevirtual #60
1223: ldc           #15
1225: invokevirtual #13
1228: dconst_0
1229: invokevirtual #60
1232: ldc           #12
1234: invokevirtual #13
1237: invokevirtual #16
1240: dload         42
1242: dconst_0
1243: dcmpl
1244: ifne          1251
1247: iconst_1
1248: goto          1252
1251: iconst_0
1252: invokestatic  #17
1255: new           #10
1258: dup
1259: invokespecial #11
1262: ldc           #12
1264: invokevirtual #13
1267: dload         47
1269: invokevirtual #60
1272: ldc           #15
1274: invokevirtual #13
1277: dconst_0
1278: invokevirtual #60
1281: ldc           #12
1283: invokevirtual #13
1286: invokevirtual #16
1289: dload         47
1291: dconst_0
1292: dcmpl
1293: ifne          1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #17
1304: new           #10
1307: dup
1308: invokespecial #11
1311: ldc           #12
1313: invokevirtual #13
1316: dload         49
1318: invokevirtual #60
1321: ldc           #15
1323: invokevirtual #13
1326: dconst_0
1327: invokevirtual #60
1330: ldc           #12
1332: invokevirtual #13
1335: invokevirtual #16
1338: dload         49
1340: dconst_0
1341: dcmpl
1342: ifne          1349
1345: iconst_1
1346: goto          1350
1349: iconst_0
1350: invokestatic  #17
1353: new           #10
1356: dup
1357: invokespecial #11
1360: ldc           #12
1362: invokevirtual #13
1365: iload         51
1367: invokevirtual #14
1370: ldc           #15
1372: invokevirtual #13
1375: iconst_0
1376: invokevirtual #14
1379: ldc           #12
1381: invokevirtual #13
1384: invokevirtual #16
1387: iload         51
1389: ifne          1396
1392: iconst_1
1393: goto          1397
1396: iconst_0
1397: invokestatic  #17
1400: new           #10
1403: dup
1404: invokespecial #11
1407: ldc           #12
1409: invokevirtual #13
1412: dload         52
1414: invokevirtual #60
1417: ldc           #15
1419: invokevirtual #13
1422: dconst_0
1423: invokevirtual #60
1426: ldc           #12
1428: invokevirtual #13
1431: invokevirtual #16
1434: dload         52
1436: dconst_0
1437: dcmpl
1438: ifne          1445
1441: iconst_1
1442: goto          1446
1445: iconst_0
1446: invokestatic  #17
1449: aload         54
1451: invokestatic  #33
1454: new           #10
1457: dup
1458: invokespecial #11
1461: ldc           #12
1463: invokevirtual #13
1466: dload         57
1468: invokevirtual #60
1471: ldc           #15
1473: invokevirtual #13
1476: dconst_0
1477: invokevirtual #60
1480: ldc           #12
1482: invokevirtual #13
1485: invokevirtual #16
1488: dload         57
1490: dconst_0
1491: dcmpl
1492: ifne          1499
1495: iconst_1
1496: goto          1500
1499: iconst_0
1500: invokestatic  #17
1503: aload         59
1505: invokestatic  #33
1508: aload         60
1510: invokestatic  #33
1513: new           #10
1516: dup
1517: invokespecial #11
1520: ldc           #12
1522: invokevirtual #13
1525: dload         61
1527: invokevirtual #60
1530: ldc           #15
1532: invokevirtual #13
1535: ldc2_w        #63
1538: invokevirtual #60
1541: ldc           #12
1543: invokevirtual #13
1546: invokevirtual #16
1549: dload         61
1551: ldc2_w        #63
1554: dcmpl
1555: ifne          1562
1558: iconst_1
1559: goto          1563
1562: iconst_0
1563: invokestatic  #17
1566: aload         64
1568: invokestatic  #33
1571: new           #10
1574: dup
1575: invokespecial #11
1578: ldc           #12
1580: invokevirtual #13
1583: dload         65
1585: invokevirtual #60
1588: ldc           #15
1590: invokevirtual #13
1593: dconst_0
1594: invokevirtual #60
1597: ldc           #12
1599: invokevirtual #13
1602: invokevirtual #16
1605: dload         65
1607: dconst_0
1608: dcmpl
1609: ifne          1616
1612: iconst_1
1613: goto          1617
1616: iconst_0
1617: invokestatic  #17
1620: aload         68
1622: invokestatic  #33
1625: aload         69
1627: invokestatic  #33
1630: aload         70
1632: invokestatic  #33
1635: aload         71
1637: invokestatic  #33
1640: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 7082
End line: 7127
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = vector3D16.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        double double27 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double28 = vector3D8.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double35 = vector3D31.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        double double36 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector38 = vector3D37.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_K;
        double double40 = vector3D39.getNormSq();
        double double41 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D37, vector3D39);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation43 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D37, 0.0d);
        double double44 = rotation43.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.7345682747147468d + "'", double18 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(euclidean3DVector38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.8277126831424906d + "'", double41 == 1.8277126831424906d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #503
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: aload         8
103: aload         9
105: invokevirtual #47
108: dstore        10
110: aload         9
112: invokevirtual #52
115: dstore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        14
130: new           #43
133: dup
134: dconst_1
135: ldc2_w        #44
138: invokespecial #46
141: astore        15
143: aload         14
145: aload         15
147: invokevirtual #47
150: dstore        16
152: aload         15
154: invokevirtual #52
157: dstore        18
159: aload         9
161: aload         15
163: invokevirtual #53
166: dstore        20
168: aload_3
169: aload         9
171: invokevirtual #129
174: dstore        22
176: new           #43
179: dup
180: dconst_1
181: ldc2_w        #44
184: invokespecial #46
187: astore        24
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        25
202: aload         24
204: aload         25
206: invokevirtual #47
209: dstore        26
211: aload         9
213: aload         24
215: invokevirtual #53
218: dstore        28
220: aload         24
222: invokevirtual #193
225: astore        30
227: aload         30
229: invokevirtual #198
232: astore        31
234: getstatic     #504
237: astore        32
239: aload         32
241: invokevirtual #111
244: dstore        33
246: aload         30
248: aload         32
250: invokestatic  #128
253: dstore        35
255: new           #27
258: dup
259: aload         30
261: dconst_0
262: invokespecial #103
265: astore        37
267: aload         37
269: invokevirtual #95
272: dstore        38
274: new           #10
277: dup
278: invokespecial #11
281: ldc           #12
283: invokevirtual #13
286: dload         4
288: invokevirtual #60
291: ldc           #15
293: invokevirtual #13
296: dconst_0
297: invokevirtual #60
300: ldc           #12
302: invokevirtual #13
305: invokevirtual #16
308: dload         4
310: dconst_0
311: dcmpl
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #17
323: new           #10
326: dup
327: invokespecial #11
330: ldc           #12
332: invokevirtual #13
335: dload         6
337: invokevirtual #60
340: ldc           #15
342: invokevirtual #13
345: dconst_0
346: invokevirtual #60
349: ldc           #12
351: invokevirtual #13
354: invokevirtual #16
357: dload         6
359: dconst_0
360: dcmpl
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #17
372: new           #10
375: dup
376: invokespecial #11
379: ldc           #12
381: invokevirtual #13
384: dload         10
386: invokevirtual #60
389: ldc           #15
391: invokevirtual #13
394: dconst_0
395: invokevirtual #60
398: ldc           #12
400: invokevirtual #13
403: invokevirtual #16
406: dload         10
408: dconst_0
409: dcmpl
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #17
421: new           #10
424: dup
425: invokespecial #11
428: ldc           #12
430: invokevirtual #13
433: dload         12
435: invokevirtual #60
438: ldc           #15
440: invokevirtual #13
443: ldc2_w        #61
446: invokevirtual #60
449: ldc           #12
451: invokevirtual #13
454: invokevirtual #16
457: dload         12
459: ldc2_w        #61
462: dcmpl
463: ifne          470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #17
474: new           #10
477: dup
478: invokespecial #11
481: ldc           #12
483: invokevirtual #13
486: dload         16
488: invokevirtual #60
491: ldc           #15
493: invokevirtual #13
496: dconst_0
497: invokevirtual #60
500: ldc           #12
502: invokevirtual #13
505: invokevirtual #16
508: dload         16
510: dconst_0
511: dcmpl
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #17
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: dload         18
537: invokevirtual #60
540: ldc           #15
542: invokevirtual #13
545: ldc2_w        #61
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         18
561: ldc2_w        #61
564: dcmpl
565: ifne          572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #17
576: new           #10
579: dup
580: invokespecial #11
583: ldc           #12
585: invokevirtual #13
588: dload         20
590: invokevirtual #60
593: ldc           #15
595: invokevirtual #13
598: dconst_0
599: invokevirtual #60
602: ldc           #12
604: invokevirtual #13
607: invokevirtual #16
610: dload         20
612: dconst_0
613: dcmpl
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #17
625: new           #10
628: dup
629: invokespecial #11
632: ldc           #12
634: invokevirtual #13
637: dload         22
639: invokevirtual #60
642: ldc           #15
644: invokevirtual #13
647: dconst_0
648: invokevirtual #60
651: ldc           #12
653: invokevirtual #13
656: invokevirtual #16
659: dload         22
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: new           #10
677: dup
678: invokespecial #11
681: ldc           #12
683: invokevirtual #13
686: dload         26
688: invokevirtual #60
691: ldc           #15
693: invokevirtual #13
696: dconst_0
697: invokevirtual #60
700: ldc           #12
702: invokevirtual #13
705: invokevirtual #16
708: dload         26
710: dconst_0
711: dcmpl
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #17
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: dload         28
737: invokevirtual #60
740: ldc           #15
742: invokevirtual #13
745: dconst_0
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         28
759: dconst_0
760: dcmpl
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: aload         30
774: invokestatic  #33
777: aload         31
779: invokestatic  #33
782: aload         32
784: invokestatic  #33
787: new           #10
790: dup
791: invokespecial #11
794: ldc           #12
796: invokevirtual #13
799: dload         33
801: invokevirtual #60
804: ldc           #15
806: invokevirtual #13
809: dconst_1
810: invokevirtual #60
813: ldc           #12
815: invokevirtual #13
818: invokevirtual #16
821: dload         33
823: dconst_1
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         35
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: ldc2_w        #505
861: invokevirtual #60
864: ldc           #12
866: invokevirtual #13
869: invokevirtual #16
872: dload         35
874: ldc2_w        #505
877: dcmpl
878: ifne          885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #17
889: new           #10
892: dup
893: invokespecial #11
896: ldc           #12
898: invokevirtual #13
901: dload         38
903: invokevirtual #60
906: ldc           #15
908: invokevirtual #13
911: ldc2_w        #507
914: invokevirtual #60
917: ldc           #12
919: invokevirtual #13
922: invokevirtual #16
925: dload         38
927: ldc2_w        #507
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #17
942: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 7130
End line: 7141
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 161.87410369014313d, (double) 18.0f, (double) 41L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #509
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #510
35: ldc2_w        #512
38: ldc2_w        #237
41: invokespecial #81
44: astore_2
45: ldc           #20
47: invokestatic  #21
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
27    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 7144
End line: 7179
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector33 = vector3D7.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D7, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = rotation5.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = rotation35.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(euclidean3DVector33);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #514
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: getstatic     #126
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: new           #43
69: dup
70: dconst_1
71: ldc2_w        #44
74: invokespecial #46
77: astore        5
79: new           #43
82: dup
83: dconst_1
84: ldc2_w        #44
87: invokespecial #46
90: astore        6
92: aload         5
94: aload         6
96: invokevirtual #47
99: dstore        7
101: aload         4
103: aload         6
105: invokestatic  #48
108: dstore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        11
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        12
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        13
149: aload         12
151: aload         13
153: invokevirtual #47
156: dstore        14
158: aload         11
160: aload         13
162: invokestatic  #48
165: dstore        16
167: aload         11
169: invokevirtual #49
172: istore        18
174: aload         4
176: aload         11
178: invokevirtual #50
181: dstore        19
183: aload         11
185: invokevirtual #54
188: astore        21
190: aload_3
191: aload         21
193: invokevirtual #55
196: astore        22
198: new           #27
201: dup
202: aload_3
203: ldc2_w        #72
206: invokespecial #103
209: astore        23
211: aload_1
212: aload         23
214: invokevirtual #474
217: astore        24
219: aload         23
221: invokevirtual #96
224: astore        25
226: aload_2
227: invokestatic  #33
230: aload_3
231: invokestatic  #33
234: new           #10
237: dup
238: invokespecial #11
241: ldc           #12
243: invokevirtual #13
246: dload         7
248: invokevirtual #60
251: ldc           #15
253: invokevirtual #13
256: dconst_0
257: invokevirtual #60
260: ldc           #12
262: invokevirtual #13
265: invokevirtual #16
268: dload         7
270: dconst_0
271: dcmpl
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #17
283: new           #10
286: dup
287: invokespecial #11
290: ldc           #12
292: invokevirtual #13
295: dload         9
297: invokevirtual #60
300: ldc           #15
302: invokevirtual #13
305: dconst_0
306: invokevirtual #60
309: ldc           #12
311: invokevirtual #13
314: invokevirtual #16
317: dload         9
319: dconst_0
320: dcmpl
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #17
332: new           #10
335: dup
336: invokespecial #11
339: ldc           #12
341: invokevirtual #13
344: dload         14
346: invokevirtual #60
349: ldc           #15
351: invokevirtual #13
354: dconst_0
355: invokevirtual #60
358: ldc           #12
360: invokevirtual #13
363: invokevirtual #16
366: dload         14
368: dconst_0
369: dcmpl
370: ifne          377
373: iconst_1
374: goto          378
377: iconst_0
378: invokestatic  #17
381: new           #10
384: dup
385: invokespecial #11
388: ldc           #12
390: invokevirtual #13
393: dload         16
395: invokevirtual #60
398: ldc           #15
400: invokevirtual #13
403: dconst_0
404: invokevirtual #60
407: ldc           #12
409: invokevirtual #13
412: invokevirtual #16
415: dload         16
417: dconst_0
418: dcmpl
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #17
430: new           #10
433: dup
434: invokespecial #11
437: ldc           #12
439: invokevirtual #13
442: iload         18
444: invokevirtual #14
447: ldc           #15
449: invokevirtual #13
452: iconst_0
453: invokevirtual #14
456: ldc           #12
458: invokevirtual #13
461: invokevirtual #16
464: iload         18
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #17
477: new           #10
480: dup
481: invokespecial #11
484: ldc           #12
486: invokevirtual #13
489: dload         19
491: invokevirtual #60
494: ldc           #15
496: invokevirtual #13
499: dconst_0
500: invokevirtual #60
503: ldc           #12
505: invokevirtual #13
508: invokevirtual #16
511: dload         19
513: dconst_0
514: dcmpl
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #17
526: aload         21
528: invokestatic  #33
531: aload         22
533: invokestatic  #33
536: aload         24
538: invokestatic  #33
541: aload         25
543: invokestatic  #33
546: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 7182
End line: 7243
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = vector3D61.getNorm();
        double double67 = vector3D61.getAlpha();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         45
391: invokevirtual #261
394: dstore        50
396: aload         45
398: invokevirtual #497
401: dstore        52
403: new           #10
406: dup
407: invokespecial #11
410: ldc           #12
412: invokevirtual #13
415: dload_3
416: invokevirtual #60
419: ldc           #15
421: invokevirtual #13
424: dconst_0
425: invokevirtual #60
428: ldc           #12
430: invokevirtual #13
433: invokevirtual #16
436: dload_3
437: dconst_0
438: dcmpl
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #17
450: new           #10
453: dup
454: invokespecial #11
457: ldc           #12
459: invokevirtual #13
462: dload         7
464: invokevirtual #60
467: ldc           #15
469: invokevirtual #13
472: dconst_0
473: invokevirtual #60
476: ldc           #12
478: invokevirtual #13
481: invokevirtual #16
484: dload         7
486: dconst_0
487: dcmpl
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #17
499: new           #10
502: dup
503: invokespecial #11
506: ldc           #12
508: invokevirtual #13
511: dload         9
513: invokevirtual #60
516: ldc           #15
518: invokevirtual #13
521: ldc2_w        #61
524: invokevirtual #60
527: ldc           #12
529: invokevirtual #13
532: invokevirtual #16
535: dload         9
537: ldc2_w        #61
540: dcmpl
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #17
552: new           #10
555: dup
556: invokespecial #11
559: ldc           #12
561: invokevirtual #13
564: dload         13
566: invokevirtual #60
569: ldc           #15
571: invokevirtual #13
574: dconst_0
575: invokevirtual #60
578: ldc           #12
580: invokevirtual #13
583: invokevirtual #16
586: dload         13
588: dconst_0
589: dcmpl
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         15
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: ldc2_w        #61
626: invokevirtual #60
629: ldc           #12
631: invokevirtual #13
634: invokevirtual #16
637: dload         15
639: ldc2_w        #61
642: dcmpl
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #17
654: new           #10
657: dup
658: invokespecial #11
661: ldc           #12
663: invokevirtual #13
666: dload         17
668: invokevirtual #60
671: ldc           #15
673: invokevirtual #13
676: dconst_0
677: invokevirtual #60
680: ldc           #12
682: invokevirtual #13
685: invokevirtual #16
688: dload         17
690: dconst_0
691: dcmpl
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #17
703: new           #10
706: dup
707: invokespecial #11
710: ldc           #12
712: invokevirtual #13
715: dload         22
717: invokevirtual #60
720: ldc           #15
722: invokevirtual #13
725: dconst_0
726: invokevirtual #60
729: ldc           #12
731: invokevirtual #13
734: invokevirtual #16
737: dload         22
739: dconst_0
740: dcmpl
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #17
752: new           #10
755: dup
756: invokespecial #11
759: ldc           #12
761: invokevirtual #13
764: dload         24
766: invokevirtual #60
769: ldc           #15
771: invokevirtual #13
774: dconst_0
775: invokevirtual #60
778: ldc           #12
780: invokevirtual #13
783: invokevirtual #16
786: dload         24
788: dconst_0
789: dcmpl
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #17
801: new           #10
804: dup
805: invokespecial #11
808: ldc           #12
810: invokevirtual #13
813: dload         29
815: invokevirtual #60
818: ldc           #15
820: invokevirtual #13
823: dconst_0
824: invokevirtual #60
827: ldc           #12
829: invokevirtual #13
832: invokevirtual #16
835: dload         29
837: dconst_0
838: dcmpl
839: ifne          846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #17
850: new           #10
853: dup
854: invokespecial #11
857: ldc           #12
859: invokevirtual #13
862: dload         31
864: invokevirtual #60
867: ldc           #15
869: invokevirtual #13
872: dconst_0
873: invokevirtual #60
876: ldc           #12
878: invokevirtual #13
881: invokevirtual #16
884: dload         31
886: dconst_0
887: dcmpl
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #17
899: new           #10
902: dup
903: invokespecial #11
906: ldc           #12
908: invokevirtual #13
911: iload         33
913: invokevirtual #14
916: ldc           #15
918: invokevirtual #13
921: iconst_0
922: invokevirtual #14
925: ldc           #12
927: invokevirtual #13
930: invokevirtual #16
933: iload         33
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         34
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: dconst_0
969: invokevirtual #60
972: ldc           #12
974: invokevirtual #13
977: invokevirtual #16
980: dload         34
982: dconst_0
983: dcmpl
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #17
995: aload         36
997: invokestatic  #33
1000: new           #10
1003: dup
1004: invokespecial #11
1007: ldc           #12
1009: invokevirtual #13
1012: dload         39
1014: invokevirtual #60
1017: ldc           #15
1019: invokevirtual #13
1022: dconst_0
1023: invokevirtual #60
1026: ldc           #12
1028: invokevirtual #13
1031: invokevirtual #16
1034: dload         39
1036: dconst_0
1037: dcmpl
1038: ifne          1045
1041: iconst_1
1042: goto          1046
1045: iconst_0
1046: invokestatic  #17
1049: aload         41
1051: invokestatic  #33
1054: aload         42
1056: invokestatic  #33
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: dload         43
1073: invokevirtual #60
1076: ldc           #15
1078: invokevirtual #13
1081: ldc2_w        #63
1084: invokevirtual #60
1087: ldc           #12
1089: invokevirtual #13
1092: invokevirtual #16
1095: dload         43
1097: ldc2_w        #63
1100: dcmpl
1101: ifne          1108
1104: iconst_1
1105: goto          1109
1108: iconst_0
1109: invokestatic  #17
1112: new           #10
1115: dup
1116: invokespecial #11
1119: ldc           #12
1121: invokevirtual #13
1124: dload         46
1126: invokevirtual #60
1129: ldc           #15
1131: invokevirtual #13
1134: ldc2_w        #79
1137: invokevirtual #60
1140: ldc           #12
1142: invokevirtual #13
1145: invokevirtual #16
1148: dload         46
1150: ldc2_w        #79
1153: dcmpl
1154: ifne          1161
1157: iconst_1
1158: goto          1162
1161: iconst_0
1162: invokestatic  #17
1165: aload         48
1167: invokestatic  #33
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         50
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_1
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         50
1206: dconst_1
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         52
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_1
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         52
1255: dconst_1
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 7246
End line: 7361
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        double[] doubleArray1 = new double[] { (byte) 1 };
        double[] doubleArray2 = new double[] {};
        boolean boolean3 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray1, doubleArray2);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray1);
        double[] doubleArray6 = new double[] { (byte) 1 };
        double[] doubleArray7 = new double[] {};
        boolean boolean8 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray6, doubleArray7);
        double[] doubleArray10 = new double[] { (byte) 1 };
        double[] doubleArray11 = new double[] {};
        boolean boolean12 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray10, doubleArray11);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray10);
        boolean boolean14 = org.apache.commons.math.util.MathUtils.equals(doubleArray7, doubleArray10);
        double double15 = org.apache.commons.math.util.MathUtils.distance(doubleArray1, doubleArray10);
        int int16 = org.apache.commons.math.util.MathUtils.hash(doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 1 };
        double[] doubleArray19 = new double[] {};
        boolean boolean20 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray18, doubleArray19);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray18);
        double[] doubleArray23 = new double[] { (byte) 1 };
        double[] doubleArray24 = new double[] {};
        boolean boolean25 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray23, doubleArray24);
        double[] doubleArray27 = new double[] { (byte) 1 };
        double[] doubleArray28 = new double[] {};
        boolean boolean29 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray27, doubleArray28);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray27);
        boolean boolean31 = org.apache.commons.math.util.MathUtils.equals(doubleArray24, doubleArray27);
        double double32 = org.apache.commons.math.util.MathUtils.distance(doubleArray18, doubleArray27);
        double double33 = org.apache.commons.math.util.MathUtils.safeNorm(doubleArray18);
        double[] doubleArray35 = org.apache.commons.math.util.MathUtils.copyOf(doubleArray18, (int) (short) 1);
        boolean boolean36 = org.apache.commons.math.util.MathUtils.equals(doubleArray10, doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.util.MathUtils.normalizeArray(doubleArray35, (double) 1);
        org.apache.commons.math.util.MathUtils.checkOrder(doubleArray35);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation45 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = rotation45.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double57 = vector3D53.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D50, vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double68 = vector3D64.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        double double69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D61, vector3D67);
        boolean boolean70 = vector3D61.isInfinite();
        double double71 = vector3D50.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = vector3D61.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector73 = vector3D47.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation75 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D47, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation76 = rotation45.applyInverseTo(rotation75);
        double[][] doubleArray77 = rotation45.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray35, doubleArray77);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 3 != 1");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1072693279 + "'", int16 == 1072693279);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(euclidean3DVector73);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       double
28: dup
29: iconst_0
30: dconst_1
31: dastore
32: astore_1
33: iconst_0
34: newarray       double
36: astore_2
37: aload_1
38: aload_2
39: invokestatic  #24
42: istore_3
43: aload_1
44: invokestatic  #337
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: dconst_1
53: dastore
54: astore        4
56: iconst_0
57: newarray       double
59: astore        5
61: aload         4
63: aload         5
65: invokestatic  #24
68: istore        6
70: iconst_1
71: newarray       double
73: dup
74: iconst_0
75: dconst_1
76: dastore
77: astore        7
79: iconst_0
80: newarray       double
82: astore        8
84: aload         7
86: aload         8
88: invokestatic  #24
91: istore        9
93: aload         7
95: invokestatic  #337
98: aload         5
100: aload         7
102: invokestatic  #338
105: istore        10
107: aload_1
108: aload         7
110: invokestatic  #339
113: dstore        11
115: aload         7
117: invokestatic  #517
120: istore        13
122: iconst_1
123: newarray       double
125: dup
126: iconst_0
127: dconst_1
128: dastore
129: astore        14
131: iconst_0
132: newarray       double
134: astore        15
136: aload         14
138: aload         15
140: invokestatic  #24
143: istore        16
145: aload         14
147: invokestatic  #337
150: iconst_1
151: newarray       double
153: dup
154: iconst_0
155: dconst_1
156: dastore
157: astore        17
159: iconst_0
160: newarray       double
162: astore        18
164: aload         17
166: aload         18
168: invokestatic  #24
171: istore        19
173: iconst_1
174: newarray       double
176: dup
177: iconst_0
178: dconst_1
179: dastore
180: astore        20
182: iconst_0
183: newarray       double
185: astore        21
187: aload         20
189: aload         21
191: invokestatic  #24
194: istore        22
196: aload         20
198: invokestatic  #337
201: aload         18
203: aload         20
205: invokestatic  #338
208: istore        23
210: aload         14
212: aload         20
214: invokestatic  #339
217: dstore        24
219: aload         14
221: invokestatic  #340
224: dstore        26
226: aload         14
228: iconst_1
229: invokestatic  #153
232: astore        28
234: aload         7
236: aload         28
238: invokestatic  #338
241: istore        29
243: aload         28
245: dconst_1
246: invokestatic  #518
249: astore        30
251: aload         28
253: invokestatic  #519
256: new           #27
259: dup
260: ldc2_w        #146
263: ldc2_w        #72
266: ldc2_w        #148
269: dconst_1
270: iconst_0
271: invokespecial #150
274: astore        31
276: aload         31
278: invokevirtual #96
281: astore        32
283: getstatic     #126
286: astore        33
288: new           #43
291: dup
292: dconst_1
293: ldc2_w        #44
296: invokespecial #46
299: astore        34
301: new           #43
304: dup
305: dconst_1
306: ldc2_w        #44
309: invokespecial #46
312: astore        35
314: new           #43
317: dup
318: dconst_1
319: ldc2_w        #44
322: invokespecial #46
325: astore        36
327: aload         35
329: aload         36
331: invokevirtual #47
334: dstore        37
336: aload         34
338: aload         36
340: invokestatic  #48
343: dstore        39
345: new           #43
348: dup
349: dconst_1
350: ldc2_w        #44
353: invokespecial #46
356: astore        41
358: new           #43
361: dup
362: dconst_1
363: ldc2_w        #44
366: invokespecial #46
369: astore        42
371: new           #43
374: dup
375: dconst_1
376: ldc2_w        #44
379: invokespecial #46
382: astore        43
384: aload         42
386: aload         43
388: invokevirtual #47
391: dstore        44
393: aload         41
395: aload         43
397: invokestatic  #48
400: dstore        46
402: aload         41
404: invokevirtual #49
407: istore        48
409: aload         34
411: aload         41
413: invokevirtual #50
416: dstore        49
418: aload         41
420: invokevirtual #54
423: astore        51
425: aload         33
427: aload         51
429: invokevirtual #55
432: astore        52
434: new           #27
437: dup
438: aload         33
440: ldc2_w        #72
443: invokespecial #103
446: astore        53
448: aload         31
450: aload         53
452: invokevirtual #474
455: astore        54
457: aload         31
459: invokevirtual #222
462: astore        55
464: aload         28
466: aload         55
468: invokestatic  #154
471: ldc_w         #520
474: invokestatic  #21
477: goto          482
480: astore        56
482: aload_1
483: invokestatic  #33
486: aload_1
487: invokestatic  #34
490: ldc           #35
492: invokestatic  #36
495: aload_2
496: invokestatic  #33
499: aload_2
500: invokestatic  #34
503: ldc           #37
505: invokestatic  #36
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: iload_3
521: invokevirtual #14
524: ldc           #15
526: invokevirtual #13
529: iconst_0
530: invokevirtual #14
533: ldc           #12
535: invokevirtual #13
538: invokevirtual #16
541: iload_3
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #17
553: aload         4
555: invokestatic  #33
558: aload         4
560: invokestatic  #34
563: ldc           #35
565: invokestatic  #36
568: aload         5
570: invokestatic  #33
573: aload         5
575: invokestatic  #34
578: ldc           #37
580: invokestatic  #36
583: new           #10
586: dup
587: invokespecial #11
590: ldc           #12
592: invokevirtual #13
595: iload         6
597: invokevirtual #14
600: ldc           #15
602: invokevirtual #13
605: iconst_0
606: invokevirtual #14
609: ldc           #12
611: invokevirtual #13
614: invokevirtual #16
617: iload         6
619: ifne          626
622: iconst_1
623: goto          627
626: iconst_0
627: invokestatic  #17
630: aload         7
632: invokestatic  #33
635: aload         7
637: invokestatic  #34
640: ldc           #35
642: invokestatic  #36
645: aload         8
647: invokestatic  #33
650: aload         8
652: invokestatic  #34
655: ldc           #37
657: invokestatic  #36
660: new           #10
663: dup
664: invokespecial #11
667: ldc           #12
669: invokevirtual #13
672: iload         9
674: invokevirtual #14
677: ldc           #15
679: invokevirtual #13
682: iconst_0
683: invokevirtual #14
686: ldc           #12
688: invokevirtual #13
691: invokevirtual #16
694: iload         9
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #17
707: new           #10
710: dup
711: invokespecial #11
714: ldc           #12
716: invokevirtual #13
719: iload         10
721: invokevirtual #14
724: ldc           #15
726: invokevirtual #13
729: iconst_0
730: invokevirtual #14
733: ldc           #12
735: invokevirtual #13
738: invokevirtual #16
741: iload         10
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #17
754: new           #10
757: dup
758: invokespecial #11
761: ldc           #12
763: invokevirtual #13
766: dload         11
768: invokevirtual #60
771: ldc           #15
773: invokevirtual #13
776: dconst_0
777: invokevirtual #60
780: ldc           #12
782: invokevirtual #13
785: invokevirtual #16
788: dload         11
790: dconst_0
791: dcmpl
792: ifne          799
795: iconst_1
796: goto          800
799: iconst_0
800: invokestatic  #17
803: new           #10
806: dup
807: invokespecial #11
810: ldc           #12
812: invokevirtual #13
815: iload         13
817: invokevirtual #457
820: ldc           #15
822: invokevirtual #13
825: ldc_w         #521
828: invokevirtual #457
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: iload         13
841: ldc_w         #521
844: if_icmpne     851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #17
855: aload         14
857: invokestatic  #33
860: aload         14
862: invokestatic  #34
865: ldc           #35
867: invokestatic  #36
870: aload         15
872: invokestatic  #33
875: aload         15
877: invokestatic  #34
880: ldc           #37
882: invokestatic  #36
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: iload         16
899: invokevirtual #14
902: ldc           #15
904: invokevirtual #13
907: iconst_0
908: invokevirtual #14
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: iload         16
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: aload         17
934: invokestatic  #33
937: aload         17
939: invokestatic  #34
942: ldc           #35
944: invokestatic  #36
947: aload         18
949: invokestatic  #33
952: aload         18
954: invokestatic  #34
957: ldc           #37
959: invokestatic  #36
962: new           #10
965: dup
966: invokespecial #11
969: ldc           #12
971: invokevirtual #13
974: iload         19
976: invokevirtual #14
979: ldc           #15
981: invokevirtual #13
984: iconst_0
985: invokevirtual #14
988: ldc           #12
990: invokevirtual #13
993: invokevirtual #16
996: iload         19
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #17
1009: aload         20
1011: invokestatic  #33
1014: aload         20
1016: invokestatic  #34
1019: ldc           #35
1021: invokestatic  #36
1024: aload         21
1026: invokestatic  #33
1029: aload         21
1031: invokestatic  #34
1034: ldc           #37
1036: invokestatic  #36
1039: new           #10
1042: dup
1043: invokespecial #11
1046: ldc           #12
1048: invokevirtual #13
1051: iload         22
1053: invokevirtual #14
1056: ldc           #15
1058: invokevirtual #13
1061: iconst_0
1062: invokevirtual #14
1065: ldc           #12
1067: invokevirtual #13
1070: invokevirtual #16
1073: iload         22
1075: ifne          1082
1078: iconst_1
1079: goto          1083
1082: iconst_0
1083: invokestatic  #17
1086: new           #10
1089: dup
1090: invokespecial #11
1093: ldc           #12
1095: invokevirtual #13
1098: iload         23
1100: invokevirtual #14
1103: ldc           #15
1105: invokevirtual #13
1108: iconst_0
1109: invokevirtual #14
1112: ldc           #12
1114: invokevirtual #13
1117: invokevirtual #16
1120: iload         23
1122: ifne          1129
1125: iconst_1
1126: goto          1130
1129: iconst_0
1130: invokestatic  #17
1133: new           #10
1136: dup
1137: invokespecial #11
1140: ldc           #12
1142: invokevirtual #13
1145: dload         24
1147: invokevirtual #60
1150: ldc           #15
1152: invokevirtual #13
1155: dconst_0
1156: invokevirtual #60
1159: ldc           #12
1161: invokevirtual #13
1164: invokevirtual #16
1167: dload         24
1169: dconst_0
1170: dcmpl
1171: ifne          1178
1174: iconst_1
1175: goto          1179
1178: iconst_0
1179: invokestatic  #17
1182: new           #10
1185: dup
1186: invokespecial #11
1189: ldc           #12
1191: invokevirtual #13
1194: dload         26
1196: invokevirtual #60
1199: ldc           #15
1201: invokevirtual #13
1204: dconst_1
1205: invokevirtual #60
1208: ldc           #12
1210: invokevirtual #13
1213: invokevirtual #16
1216: dload         26
1218: dconst_1
1219: dcmpl
1220: ifne          1227
1223: iconst_1
1224: goto          1228
1227: iconst_0
1228: invokestatic  #17
1231: aload         28
1233: invokestatic  #33
1236: aload         28
1238: invokestatic  #34
1241: ldc           #35
1243: invokestatic  #36
1246: new           #10
1249: dup
1250: invokespecial #11
1253: ldc           #12
1255: invokevirtual #13
1258: iload         29
1260: invokevirtual #14
1263: ldc           #15
1265: invokevirtual #13
1268: iconst_1
1269: invokevirtual #14
1272: ldc           #12
1274: invokevirtual #13
1277: invokevirtual #16
1280: iload         29
1282: iconst_1
1283: if_icmpne     1290
1286: iconst_1
1287: goto          1291
1290: iconst_0
1291: invokestatic  #17
1294: aload         30
1296: invokestatic  #33
1299: aload         30
1301: invokestatic  #34
1304: ldc           #35
1306: invokestatic  #36
1309: aload         32
1311: invokestatic  #33
1314: aload         33
1316: invokestatic  #33
1319: new           #10
1322: dup
1323: invokespecial #11
1326: ldc           #12
1328: invokevirtual #13
1331: dload         37
1333: invokevirtual #60
1336: ldc           #15
1338: invokevirtual #13
1341: dconst_0
1342: invokevirtual #60
1345: ldc           #12
1347: invokevirtual #13
1350: invokevirtual #16
1353: dload         37
1355: dconst_0
1356: dcmpl
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: dload         39
1382: invokevirtual #60
1385: ldc           #15
1387: invokevirtual #13
1390: dconst_0
1391: invokevirtual #60
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: dload         39
1404: dconst_0
1405: dcmpl
1406: ifne          1413
1409: iconst_1
1410: goto          1414
1413: iconst_0
1414: invokestatic  #17
1417: new           #10
1420: dup
1421: invokespecial #11
1424: ldc           #12
1426: invokevirtual #13
1429: dload         44
1431: invokevirtual #60
1434: ldc           #15
1436: invokevirtual #13
1439: dconst_0
1440: invokevirtual #60
1443: ldc           #12
1445: invokevirtual #13
1448: invokevirtual #16
1451: dload         44
1453: dconst_0
1454: dcmpl
1455: ifne          1462
1458: iconst_1
1459: goto          1463
1462: iconst_0
1463: invokestatic  #17
1466: new           #10
1469: dup
1470: invokespecial #11
1473: ldc           #12
1475: invokevirtual #13
1478: dload         46
1480: invokevirtual #60
1483: ldc           #15
1485: invokevirtual #13
1488: dconst_0
1489: invokevirtual #60
1492: ldc           #12
1494: invokevirtual #13
1497: invokevirtual #16
1500: dload         46
1502: dconst_0
1503: dcmpl
1504: ifne          1511
1507: iconst_1
1508: goto          1512
1511: iconst_0
1512: invokestatic  #17
1515: new           #10
1518: dup
1519: invokespecial #11
1522: ldc           #12
1524: invokevirtual #13
1527: iload         48
1529: invokevirtual #14
1532: ldc           #15
1534: invokevirtual #13
1537: iconst_0
1538: invokevirtual #14
1541: ldc           #12
1543: invokevirtual #13
1546: invokevirtual #16
1549: iload         48
1551: ifne          1558
1554: iconst_1
1555: goto          1559
1558: iconst_0
1559: invokestatic  #17
1562: new           #10
1565: dup
1566: invokespecial #11
1569: ldc           #12
1571: invokevirtual #13
1574: dload         49
1576: invokevirtual #60
1579: ldc           #15
1581: invokevirtual #13
1584: dconst_0
1585: invokevirtual #60
1588: ldc           #12
1590: invokevirtual #13
1593: invokevirtual #16
1596: dload         49
1598: dconst_0
1599: dcmpl
1600: ifne          1607
1603: iconst_1
1604: goto          1608
1607: iconst_0
1608: invokestatic  #17
1611: aload         51
1613: invokestatic  #33
1616: aload         52
1618: invokestatic  #33
1621: aload         54
1623: invokestatic  #33
1626: aload         55
1628: invokestatic  #33
1631: return
Exception table:
from    to  target type
464   477   480   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 7364
End line: 7370
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.5430806348152435d, 9.179881164491475d, (double) 3L, (double) 100.0f, false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 9.179881164491475d + "'", double6 == 9.179881164491475d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #523
32: ldc2_w        #525
35: ldc2_w        #190
38: ldc2_w        #68
41: iconst_0
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #94
50: dstore_2
51: new           #10
54: dup
55: invokespecial #11
58: ldc           #12
60: invokevirtual #13
63: dload_2
64: invokevirtual #60
67: ldc           #15
69: invokevirtual #13
72: ldc2_w        #525
75: invokevirtual #60
78: ldc           #12
80: invokevirtual #13
83: invokevirtual #16
86: dload_2
87: ldc2_w        #525
90: dcmpl
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #17
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 7373
End line: 7449
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation86 = rotation85.revert();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #527
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #93
506: astore        65
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: dload         4
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_0
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         4
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #17
557: new           #10
560: dup
561: invokespecial #11
564: ldc           #12
566: invokevirtual #13
569: dload         6
571: invokevirtual #60
574: ldc           #15
576: invokevirtual #13
579: dconst_0
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         6
593: dconst_0
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: new           #10
609: dup
610: invokespecial #11
613: ldc           #12
615: invokevirtual #13
618: dload         11
620: invokevirtual #60
623: ldc           #15
625: invokevirtual #13
628: dconst_0
629: invokevirtual #60
632: ldc           #12
634: invokevirtual #13
637: invokevirtual #16
640: dload         11
642: dconst_0
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #17
655: new           #10
658: dup
659: invokespecial #11
662: ldc           #12
664: invokevirtual #13
667: dload         13
669: invokevirtual #60
672: ldc           #15
674: invokevirtual #13
677: dconst_0
678: invokevirtual #60
681: ldc           #12
683: invokevirtual #13
686: invokevirtual #16
689: dload         13
691: dconst_0
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #17
704: new           #10
707: dup
708: invokespecial #11
711: ldc           #12
713: invokevirtual #13
716: iload         15
718: invokevirtual #14
721: ldc           #15
723: invokevirtual #13
726: iconst_0
727: invokevirtual #14
730: ldc           #12
732: invokevirtual #13
735: invokevirtual #16
738: iload         15
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: new           #10
754: dup
755: invokespecial #11
758: ldc           #12
760: invokevirtual #13
763: dload         16
765: invokevirtual #60
768: ldc           #15
770: invokevirtual #13
773: dconst_0
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         16
787: dconst_0
788: dcmpl
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #17
800: aload         18
802: invokestatic  #33
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         21
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         21
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         25
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         25
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         27
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #61
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         27
941: ldc2_w        #61
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         31
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         31
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         33
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: ldc2_w        #61
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         33
1043: ldc2_w        #61
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: dconst_0
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         35
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #17
1107: new           #10
1110: dup
1111: invokespecial #11
1114: ldc           #12
1116: invokevirtual #13
1119: dload         40
1121: invokevirtual #60
1124: ldc           #15
1126: invokevirtual #13
1129: dconst_0
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         40
1143: dconst_0
1144: dcmpl
1145: ifne          1152
1148: iconst_1
1149: goto          1153
1152: iconst_0
1153: invokestatic  #17
1156: new           #10
1159: dup
1160: invokespecial #11
1163: ldc           #12
1165: invokevirtual #13
1168: dload         42
1170: invokevirtual #60
1173: ldc           #15
1175: invokevirtual #13
1178: dconst_0
1179: invokevirtual #60
1182: ldc           #12
1184: invokevirtual #13
1187: invokevirtual #16
1190: dload         42
1192: dconst_0
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #17
1205: new           #10
1208: dup
1209: invokespecial #11
1212: ldc           #12
1214: invokevirtual #13
1217: dload         47
1219: invokevirtual #60
1222: ldc           #15
1224: invokevirtual #13
1227: dconst_0
1228: invokevirtual #60
1231: ldc           #12
1233: invokevirtual #13
1236: invokevirtual #16
1239: dload         47
1241: dconst_0
1242: dcmpl
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #17
1254: new           #10
1257: dup
1258: invokespecial #11
1261: ldc           #12
1263: invokevirtual #13
1266: dload         49
1268: invokevirtual #60
1271: ldc           #15
1273: invokevirtual #13
1276: dconst_0
1277: invokevirtual #60
1280: ldc           #12
1282: invokevirtual #13
1285: invokevirtual #16
1288: dload         49
1290: dconst_0
1291: dcmpl
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #17
1303: new           #10
1306: dup
1307: invokespecial #11
1310: ldc           #12
1312: invokevirtual #13
1315: iload         51
1317: invokevirtual #14
1320: ldc           #15
1322: invokevirtual #13
1325: iconst_0
1326: invokevirtual #14
1329: ldc           #12
1331: invokevirtual #13
1334: invokevirtual #16
1337: iload         51
1339: ifne          1346
1342: iconst_1
1343: goto          1347
1346: iconst_0
1347: invokestatic  #17
1350: new           #10
1353: dup
1354: invokespecial #11
1357: ldc           #12
1359: invokevirtual #13
1362: dload         52
1364: invokevirtual #60
1367: ldc           #15
1369: invokevirtual #13
1372: dconst_0
1373: invokevirtual #60
1376: ldc           #12
1378: invokevirtual #13
1381: invokevirtual #16
1384: dload         52
1386: dconst_0
1387: dcmpl
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #17
1399: aload         54
1401: invokestatic  #33
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         57
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         57
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         59
1455: invokestatic  #33
1458: aload         60
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         61
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: ldc2_w        #63
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         61
1501: ldc2_w        #63
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: aload         64
1518: invokestatic  #33
1521: aload         65
1523: invokestatic  #33
1526: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 7452
End line: 7491
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector33 = vector3D7.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D7, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = rotation5.applyInverseTo(rotation35);
        double double37 = rotation36.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = rotation36.getAxis();
        double double39 = rotation36.getQ1();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(euclidean3DVector33);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #528
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: getstatic     #126
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: new           #43
69: dup
70: dconst_1
71: ldc2_w        #44
74: invokespecial #46
77: astore        5
79: new           #43
82: dup
83: dconst_1
84: ldc2_w        #44
87: invokespecial #46
90: astore        6
92: aload         5
94: aload         6
96: invokevirtual #47
99: dstore        7
101: aload         4
103: aload         6
105: invokestatic  #48
108: dstore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        11
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        12
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        13
149: aload         12
151: aload         13
153: invokevirtual #47
156: dstore        14
158: aload         11
160: aload         13
162: invokestatic  #48
165: dstore        16
167: aload         11
169: invokevirtual #49
172: istore        18
174: aload         4
176: aload         11
178: invokevirtual #50
181: dstore        19
183: aload         11
185: invokevirtual #54
188: astore        21
190: aload_3
191: aload         21
193: invokevirtual #55
196: astore        22
198: new           #27
201: dup
202: aload_3
203: ldc2_w        #72
206: invokespecial #103
209: astore        23
211: aload_1
212: aload         23
214: invokevirtual #474
217: astore        24
219: aload         24
221: invokevirtual #139
224: dstore        25
226: aload         24
228: invokevirtual #96
231: astore        27
233: aload         24
235: invokevirtual #94
238: dstore        28
240: aload_2
241: invokestatic  #33
244: aload_3
245: invokestatic  #33
248: new           #10
251: dup
252: invokespecial #11
255: ldc           #12
257: invokevirtual #13
260: dload         7
262: invokevirtual #60
265: ldc           #15
267: invokevirtual #13
270: dconst_0
271: invokevirtual #60
274: ldc           #12
276: invokevirtual #13
279: invokevirtual #16
282: dload         7
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #17
297: new           #10
300: dup
301: invokespecial #11
304: ldc           #12
306: invokevirtual #13
309: dload         9
311: invokevirtual #60
314: ldc           #15
316: invokevirtual #13
319: dconst_0
320: invokevirtual #60
323: ldc           #12
325: invokevirtual #13
328: invokevirtual #16
331: dload         9
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #17
346: new           #10
349: dup
350: invokespecial #11
353: ldc           #12
355: invokevirtual #13
358: dload         14
360: invokevirtual #60
363: ldc           #15
365: invokevirtual #13
368: dconst_0
369: invokevirtual #60
372: ldc           #12
374: invokevirtual #13
377: invokevirtual #16
380: dload         14
382: dconst_0
383: dcmpl
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #17
395: new           #10
398: dup
399: invokespecial #11
402: ldc           #12
404: invokevirtual #13
407: dload         16
409: invokevirtual #60
412: ldc           #15
414: invokevirtual #13
417: dconst_0
418: invokevirtual #60
421: ldc           #12
423: invokevirtual #13
426: invokevirtual #16
429: dload         16
431: dconst_0
432: dcmpl
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #17
444: new           #10
447: dup
448: invokespecial #11
451: ldc           #12
453: invokevirtual #13
456: iload         18
458: invokevirtual #14
461: ldc           #15
463: invokevirtual #13
466: iconst_0
467: invokevirtual #14
470: ldc           #12
472: invokevirtual #13
475: invokevirtual #16
478: iload         18
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #17
491: new           #10
494: dup
495: invokespecial #11
498: ldc           #12
500: invokevirtual #13
503: dload         19
505: invokevirtual #60
508: ldc           #15
510: invokevirtual #13
513: dconst_0
514: invokevirtual #60
517: ldc           #12
519: invokevirtual #13
522: invokevirtual #16
525: dload         19
527: dconst_0
528: dcmpl
529: ifne          536
532: iconst_1
533: goto          537
536: iconst_0
537: invokestatic  #17
540: aload         21
542: invokestatic  #33
545: aload         22
547: invokestatic  #33
550: aload         24
552: invokestatic  #33
555: dload         25
557: invokestatic  #242
560: invokestatic  #243
563: aload         27
565: invokestatic  #33
568: dload         28
570: invokestatic  #242
573: invokestatic  #243
576: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 7494
End line: 7505
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 0.0d, 0.8620394103101474d, 8.259397137504762E70d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #529
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: dconst_0
33: ldc2_w        #530
36: ldc2_w        #532
39: invokespecial #81
42: astore_2
43: ldc           #20
45: invokestatic  #21
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 7508
End line: 7599
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation97.getQ0();
        double double99 = rotation97.getAngle();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-9.033252629052738d) + "'", double98 == (-9.033252629052738d));
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #534
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         74
567: invokevirtual #241
570: dstore        75
572: aload         74
574: invokevirtual #240
577: dstore        77
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         4
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         4
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         6
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         6
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         11
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         11
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         13
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         13
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         15
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         15
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         16
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         16
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         18
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         21
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         21
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         25
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         25
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         27
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         27
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         31
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         31
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         33
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         33
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         35
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         35
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         40
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         40
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         42
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         42
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         47
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         47
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         49
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         49
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         51
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         51
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         52
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         52
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         54
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         57
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         57
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         59
1526: invokestatic  #33
1529: aload         60
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         61
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         61
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: aload         64
1589: invokestatic  #33
1592: new           #10
1595: dup
1596: invokespecial #11
1599: ldc           #12
1601: invokevirtual #13
1604: dload         65
1606: invokevirtual #60
1609: ldc           #15
1611: invokevirtual #13
1614: dconst_0
1615: invokevirtual #60
1618: ldc           #12
1620: invokevirtual #13
1623: invokevirtual #16
1626: dload         65
1628: dconst_0
1629: dcmpl
1630: ifne          1637
1633: iconst_1
1634: goto          1638
1637: iconst_0
1638: invokestatic  #17
1641: new           #10
1644: dup
1645: invokespecial #11
1648: ldc           #12
1650: invokevirtual #13
1653: dload         67
1655: invokevirtual #60
1658: ldc           #15
1660: invokevirtual #13
1663: dconst_0
1664: invokevirtual #60
1667: ldc           #12
1669: invokevirtual #13
1672: invokevirtual #16
1675: dload         67
1677: dconst_0
1678: dcmpl
1679: ifne          1686
1682: iconst_1
1683: goto          1687
1686: iconst_0
1687: invokestatic  #17
1690: aload         69
1692: invokestatic  #33
1695: aload         71
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         72
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #148
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         72
1738: ldc2_w        #148
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: aload         74
1755: invokestatic  #33
1758: new           #10
1761: dup
1762: invokespecial #11
1765: ldc           #12
1767: invokevirtual #13
1770: dload         75
1772: invokevirtual #60
1775: ldc           #15
1777: invokevirtual #13
1780: ldc2_w        #535
1783: invokevirtual #60
1786: ldc           #12
1788: invokevirtual #13
1791: invokevirtual #16
1794: dload         75
1796: ldc2_w        #535
1799: dcmpl
1800: ifne          1807
1803: iconst_1
1804: goto          1808
1807: iconst_0
1808: invokestatic  #17
1811: dload         77
1813: invokestatic  #242
1816: invokestatic  #243
1819: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 7602
End line: 7654
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double14 = vector3D10.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        double double15 = vector3D13.getDelta();
        double double16 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector18 = vector3D13.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        boolean boolean41 = vector3D32.isInfinite();
        double double42 = vector3D21.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = vector3D32.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = vector3D46.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation53 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D46);
        double double54 = rotation53.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7345682747147468d + "'", double15 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(euclidean3DVector18);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #537
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: aload_2
56: invokevirtual #52
59: dstore        5
61: new           #43
64: dup
65: dconst_1
66: ldc2_w        #44
69: invokespecial #46
72: astore        7
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: aload         7
89: aload         8
91: invokevirtual #47
94: dstore        9
96: aload         8
98: invokevirtual #52
101: dstore        11
103: aload_2
104: aload         8
106: invokevirtual #53
109: dstore        13
111: aload         8
113: invokevirtual #54
116: astore        15
118: aload         8
120: invokevirtual #193
123: astore        16
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        17
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        18
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        19
164: aload         18
166: aload         19
168: invokevirtual #47
171: dstore        20
173: aload         17
175: aload         19
177: invokestatic  #48
180: dstore        22
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        24
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        25
208: new           #43
211: dup
212: dconst_1
213: ldc2_w        #44
216: invokespecial #46
219: astore        26
221: aload         25
223: aload         26
225: invokevirtual #47
228: dstore        27
230: aload         24
232: aload         26
234: invokestatic  #48
237: dstore        29
239: aload         24
241: invokevirtual #49
244: istore        31
246: aload         17
248: aload         24
250: invokevirtual #50
253: dstore        32
255: aload         24
257: invokevirtual #54
260: astore        34
262: new           #43
265: dup
266: dconst_1
267: ldc2_w        #44
270: invokespecial #46
273: astore        35
275: new           #43
278: dup
279: dconst_1
280: ldc2_w        #44
283: invokespecial #46
286: astore        36
288: aload         35
290: aload         36
292: invokevirtual #47
295: dstore        37
297: aload         34
299: aload         35
301: invokevirtual #55
304: astore        39
306: aload         35
308: invokevirtual #193
311: astore        40
313: new           #27
316: dup
317: aload         8
319: aload         35
321: invokespecial #56
324: astore        41
326: aload         41
328: invokevirtual #94
331: dstore        42
333: new           #10
336: dup
337: invokespecial #11
340: ldc           #12
342: invokevirtual #13
345: dload_3
346: invokevirtual #60
349: ldc           #15
351: invokevirtual #13
354: dconst_0
355: invokevirtual #60
358: ldc           #12
360: invokevirtual #13
363: invokevirtual #16
366: dload_3
367: dconst_0
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #17
380: new           #10
383: dup
384: invokespecial #11
387: ldc           #12
389: invokevirtual #13
392: dload         5
394: invokevirtual #60
397: ldc           #15
399: invokevirtual #13
402: ldc2_w        #61
405: invokevirtual #60
408: ldc           #12
410: invokevirtual #13
413: invokevirtual #16
416: dload         5
418: ldc2_w        #61
421: dcmpl
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #17
433: new           #10
436: dup
437: invokespecial #11
440: ldc           #12
442: invokevirtual #13
445: dload         9
447: invokevirtual #60
450: ldc           #15
452: invokevirtual #13
455: dconst_0
456: invokevirtual #60
459: ldc           #12
461: invokevirtual #13
464: invokevirtual #16
467: dload         9
469: dconst_0
470: dcmpl
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #17
482: new           #10
485: dup
486: invokespecial #11
489: ldc           #12
491: invokevirtual #13
494: dload         11
496: invokevirtual #60
499: ldc           #15
501: invokevirtual #13
504: ldc2_w        #61
507: invokevirtual #60
510: ldc           #12
512: invokevirtual #13
515: invokevirtual #16
518: dload         11
520: ldc2_w        #61
523: dcmpl
524: ifne          531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #17
535: new           #10
538: dup
539: invokespecial #11
542: ldc           #12
544: invokevirtual #13
547: dload         13
549: invokevirtual #60
552: ldc           #15
554: invokevirtual #13
557: dconst_0
558: invokevirtual #60
561: ldc           #12
563: invokevirtual #13
566: invokevirtual #16
569: dload         13
571: dconst_0
572: dcmpl
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #17
584: aload         15
586: invokestatic  #33
589: aload         16
591: invokestatic  #33
594: new           #10
597: dup
598: invokespecial #11
601: ldc           #12
603: invokevirtual #13
606: dload         20
608: invokevirtual #60
611: ldc           #15
613: invokevirtual #13
616: dconst_0
617: invokevirtual #60
620: ldc           #12
622: invokevirtual #13
625: invokevirtual #16
628: dload         20
630: dconst_0
631: dcmpl
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #17
643: new           #10
646: dup
647: invokespecial #11
650: ldc           #12
652: invokevirtual #13
655: dload         22
657: invokevirtual #60
660: ldc           #15
662: invokevirtual #13
665: dconst_0
666: invokevirtual #60
669: ldc           #12
671: invokevirtual #13
674: invokevirtual #16
677: dload         22
679: dconst_0
680: dcmpl
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #17
692: new           #10
695: dup
696: invokespecial #11
699: ldc           #12
701: invokevirtual #13
704: dload         27
706: invokevirtual #60
709: ldc           #15
711: invokevirtual #13
714: dconst_0
715: invokevirtual #60
718: ldc           #12
720: invokevirtual #13
723: invokevirtual #16
726: dload         27
728: dconst_0
729: dcmpl
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #17
741: new           #10
744: dup
745: invokespecial #11
748: ldc           #12
750: invokevirtual #13
753: dload         29
755: invokevirtual #60
758: ldc           #15
760: invokevirtual #13
763: dconst_0
764: invokevirtual #60
767: ldc           #12
769: invokevirtual #13
772: invokevirtual #16
775: dload         29
777: dconst_0
778: dcmpl
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #17
790: new           #10
793: dup
794: invokespecial #11
797: ldc           #12
799: invokevirtual #13
802: iload         31
804: invokevirtual #14
807: ldc           #15
809: invokevirtual #13
812: iconst_0
813: invokevirtual #14
816: ldc           #12
818: invokevirtual #13
821: invokevirtual #16
824: iload         31
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #17
837: new           #10
840: dup
841: invokespecial #11
844: ldc           #12
846: invokevirtual #13
849: dload         32
851: invokevirtual #60
854: ldc           #15
856: invokevirtual #13
859: dconst_0
860: invokevirtual #60
863: ldc           #12
865: invokevirtual #13
868: invokevirtual #16
871: dload         32
873: dconst_0
874: dcmpl
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #17
886: aload         34
888: invokestatic  #33
891: new           #10
894: dup
895: invokespecial #11
898: ldc           #12
900: invokevirtual #13
903: dload         37
905: invokevirtual #60
908: ldc           #15
910: invokevirtual #13
913: dconst_0
914: invokevirtual #60
917: ldc           #12
919: invokevirtual #13
922: invokevirtual #16
925: dload         37
927: dconst_0
928: dcmpl
929: ifne          936
932: iconst_1
933: goto          937
936: iconst_0
937: invokestatic  #17
940: aload         39
942: invokestatic  #33
945: aload         40
947: invokestatic  #33
950: new           #10
953: dup
954: invokespecial #11
957: ldc           #12
959: invokevirtual #13
962: dload         42
964: invokevirtual #60
967: ldc           #15
969: invokevirtual #13
972: dconst_0
973: invokevirtual #60
976: ldc           #12
978: invokevirtual #13
981: invokevirtual #16
984: dload         42
986: dconst_0
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 7657
End line: 7732
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        double double34 = vector3D33.getNormInf();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = vector3D33.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double57 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D49, vector3D55);
        boolean boolean58 = vector3D49.isInfinite();
        double double59 = vector3D38.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = vector3D49.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double67 = vector3D63.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D60.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D63.normalize();
        double double70 = vector3D69.getNormInf();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation71 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D35, vector3D69);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.6702668260599606d + "'", double34 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.6702668260599606d + "'", double70 == 0.6702668260599606d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #538
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: aload         24
207: invokevirtual #136
210: dstore        25
212: aload         24
214: invokevirtual #198
217: astore        27
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        28
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        29
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        30
258: aload         29
260: aload         30
262: invokevirtual #47
265: dstore        31
267: aload         28
269: aload         30
271: invokestatic  #48
274: dstore        33
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        35
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        36
302: new           #43
305: dup
306: dconst_1
307: ldc2_w        #44
310: invokespecial #46
313: astore        37
315: aload         36
317: aload         37
319: invokevirtual #47
322: dstore        38
324: aload         35
326: aload         37
328: invokestatic  #48
331: dstore        40
333: aload         35
335: invokevirtual #49
338: istore        42
340: aload         28
342: aload         35
344: invokevirtual #50
347: dstore        43
349: aload         35
351: invokevirtual #54
354: astore        45
356: new           #43
359: dup
360: dconst_1
361: ldc2_w        #44
364: invokespecial #46
367: astore        46
369: new           #43
372: dup
373: dconst_1
374: ldc2_w        #44
377: invokespecial #46
380: astore        47
382: aload         46
384: aload         47
386: invokevirtual #47
389: dstore        48
391: aload         45
393: aload         46
395: invokevirtual #55
398: astore        50
400: aload         46
402: invokevirtual #193
405: astore        51
407: aload         51
409: invokevirtual #136
412: dstore        52
414: new           #27
417: dup
418: aload         27
420: aload         51
422: invokespecial #56
425: astore        54
427: ldc_w         #539
430: invokestatic  #21
433: goto          479
436: astore        54
438: aload         54
440: invokevirtual #541
443: invokevirtual #542
446: ifne          479
449: new           #10
452: dup
453: invokespecial #11
456: ldc_w         #543
459: invokevirtual #13
462: aload         54
464: invokevirtual #541
467: invokevirtual #544
470: invokevirtual #13
473: invokevirtual #16
476: invokestatic  #21
479: new           #10
482: dup
483: invokespecial #11
486: ldc           #12
488: invokevirtual #13
491: dload         4
493: invokevirtual #60
496: ldc           #15
498: invokevirtual #13
501: dconst_0
502: invokevirtual #60
505: ldc           #12
507: invokevirtual #13
510: invokevirtual #16
513: dload         4
515: dconst_0
516: dcmpl
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #17
528: new           #10
531: dup
532: invokespecial #11
535: ldc           #12
537: invokevirtual #13
540: dload         6
542: invokevirtual #60
545: ldc           #15
547: invokevirtual #13
550: dconst_0
551: invokevirtual #60
554: ldc           #12
556: invokevirtual #13
559: invokevirtual #16
562: dload         6
564: dconst_0
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #17
577: new           #10
580: dup
581: invokespecial #11
584: ldc           #12
586: invokevirtual #13
589: dload         11
591: invokevirtual #60
594: ldc           #15
596: invokevirtual #13
599: dconst_0
600: invokevirtual #60
603: ldc           #12
605: invokevirtual #13
608: invokevirtual #16
611: dload         11
613: dconst_0
614: dcmpl
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #17
626: new           #10
629: dup
630: invokespecial #11
633: ldc           #12
635: invokevirtual #13
638: dload         13
640: invokevirtual #60
643: ldc           #15
645: invokevirtual #13
648: dconst_0
649: invokevirtual #60
652: ldc           #12
654: invokevirtual #13
657: invokevirtual #16
660: dload         13
662: dconst_0
663: dcmpl
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #17
675: new           #10
678: dup
679: invokespecial #11
682: ldc           #12
684: invokevirtual #13
687: iload         15
689: invokevirtual #14
692: ldc           #15
694: invokevirtual #13
697: iconst_0
698: invokevirtual #14
701: ldc           #12
703: invokevirtual #13
706: invokevirtual #16
709: iload         15
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #17
722: new           #10
725: dup
726: invokespecial #11
729: ldc           #12
731: invokevirtual #13
734: dload         16
736: invokevirtual #60
739: ldc           #15
741: invokevirtual #13
744: dconst_0
745: invokevirtual #60
748: ldc           #12
750: invokevirtual #13
753: invokevirtual #16
756: dload         16
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #17
771: aload         18
773: invokestatic  #33
776: new           #10
779: dup
780: invokespecial #11
783: ldc           #12
785: invokevirtual #13
788: dload         21
790: invokevirtual #60
793: ldc           #15
795: invokevirtual #13
798: dconst_0
799: invokevirtual #60
802: ldc           #12
804: invokevirtual #13
807: invokevirtual #16
810: dload         21
812: dconst_0
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #17
825: aload         23
827: invokestatic  #33
830: aload         24
832: invokestatic  #33
835: new           #10
838: dup
839: invokespecial #11
842: ldc           #12
844: invokevirtual #13
847: dload         25
849: invokevirtual #60
852: ldc           #15
854: invokevirtual #13
857: ldc2_w        #79
860: invokevirtual #60
863: ldc           #12
865: invokevirtual #13
868: invokevirtual #16
871: dload         25
873: ldc2_w        #79
876: dcmpl
877: ifne          884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #17
888: aload         27
890: invokestatic  #33
893: new           #10
896: dup
897: invokespecial #11
900: ldc           #12
902: invokevirtual #13
905: dload         31
907: invokevirtual #60
910: ldc           #15
912: invokevirtual #13
915: dconst_0
916: invokevirtual #60
919: ldc           #12
921: invokevirtual #13
924: invokevirtual #16
927: dload         31
929: dconst_0
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #17
942: new           #10
945: dup
946: invokespecial #11
949: ldc           #12
951: invokevirtual #13
954: dload         33
956: invokevirtual #60
959: ldc           #15
961: invokevirtual #13
964: dconst_0
965: invokevirtual #60
968: ldc           #12
970: invokevirtual #13
973: invokevirtual #16
976: dload         33
978: dconst_0
979: dcmpl
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #17
991: new           #10
994: dup
995: invokespecial #11
998: ldc           #12
1000: invokevirtual #13
1003: dload         38
1005: invokevirtual #60
1008: ldc           #15
1010: invokevirtual #13
1013: dconst_0
1014: invokevirtual #60
1017: ldc           #12
1019: invokevirtual #13
1022: invokevirtual #16
1025: dload         38
1027: dconst_0
1028: dcmpl
1029: ifne          1036
1032: iconst_1
1033: goto          1037
1036: iconst_0
1037: invokestatic  #17
1040: new           #10
1043: dup
1044: invokespecial #11
1047: ldc           #12
1049: invokevirtual #13
1052: dload         40
1054: invokevirtual #60
1057: ldc           #15
1059: invokevirtual #13
1062: dconst_0
1063: invokevirtual #60
1066: ldc           #12
1068: invokevirtual #13
1071: invokevirtual #16
1074: dload         40
1076: dconst_0
1077: dcmpl
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #17
1089: new           #10
1092: dup
1093: invokespecial #11
1096: ldc           #12
1098: invokevirtual #13
1101: iload         42
1103: invokevirtual #14
1106: ldc           #15
1108: invokevirtual #13
1111: iconst_0
1112: invokevirtual #14
1115: ldc           #12
1117: invokevirtual #13
1120: invokevirtual #16
1123: iload         42
1125: ifne          1132
1128: iconst_1
1129: goto          1133
1132: iconst_0
1133: invokestatic  #17
1136: new           #10
1139: dup
1140: invokespecial #11
1143: ldc           #12
1145: invokevirtual #13
1148: dload         43
1150: invokevirtual #60
1153: ldc           #15
1155: invokevirtual #13
1158: dconst_0
1159: invokevirtual #60
1162: ldc           #12
1164: invokevirtual #13
1167: invokevirtual #16
1170: dload         43
1172: dconst_0
1173: dcmpl
1174: ifne          1181
1177: iconst_1
1178: goto          1182
1181: iconst_0
1182: invokestatic  #17
1185: aload         45
1187: invokestatic  #33
1190: new           #10
1193: dup
1194: invokespecial #11
1197: ldc           #12
1199: invokevirtual #13
1202: dload         48
1204: invokevirtual #60
1207: ldc           #15
1209: invokevirtual #13
1212: dconst_0
1213: invokevirtual #60
1216: ldc           #12
1218: invokevirtual #13
1221: invokevirtual #16
1224: dload         48
1226: dconst_0
1227: dcmpl
1228: ifne          1235
1231: iconst_1
1232: goto          1236
1235: iconst_0
1236: invokestatic  #17
1239: aload         50
1241: invokestatic  #33
1244: aload         51
1246: invokestatic  #33
1249: new           #10
1252: dup
1253: invokespecial #11
1256: ldc           #12
1258: invokevirtual #13
1261: dload         52
1263: invokevirtual #60
1266: ldc           #15
1268: invokevirtual #13
1271: ldc2_w        #79
1274: invokevirtual #60
1277: ldc           #12
1279: invokevirtual #13
1282: invokevirtual #16
1285: dload         52
1287: ldc2_w        #79
1290: dcmpl
1291: ifne          1298
1294: iconst_1
1295: goto          1299
1298: iconst_0
1299: invokestatic  #17
1302: return
Exception table:
from    to  target type
414   433   436   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 7735
End line: 7744
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 9700L, 1.053671212772351E-8d, (-0.7853981633974483d), (double) 3, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 1079574538L, 0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = rotation5.applyTo(vector3D8);
        double double10 = vector3D8.getNorm1();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.382349300424506d + "'", double10 == 1.382349300424506d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #545
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #186
32: ldc2_w        #188
35: ldc2_w        #101
38: ldc2_w        #190
41: iconst_0
42: invokespecial #150
45: astore_1
46: new           #43
49: dup
50: ldc2_w        #72
53: dconst_0
54: invokespecial #46
57: astore_2
58: aload_1
59: aload_2
60: invokevirtual #140
63: astore_3
64: aload_2
65: invokevirtual #162
68: dstore        4
70: aload_3
71: invokestatic  #33
74: new           #10
77: dup
78: invokespecial #11
81: ldc           #12
83: invokevirtual #13
86: dload         4
88: invokevirtual #60
91: ldc           #15
93: invokevirtual #13
96: ldc2_w        #546
99: invokevirtual #60
102: ldc           #12
104: invokevirtual #13
107: invokevirtual #16
110: dload         4
112: ldc2_w        #546
115: dcmpl
116: ifne          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #17
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 7747
End line: 7818
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double double65 = rotation64.getQ1();
        double double66 = rotation64.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation67 = rotation64.revert();
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder68 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray69 = rotation67.getAngles(rotationOrder68);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(rotation67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #548
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #94
387: dstore        50
389: aload         49
391: invokevirtual #94
394: dstore        52
396: aload         49
398: invokevirtual #93
401: astore        54
403: aconst_null
404: astore        55
406: aload         54
408: aload         55
410: invokevirtual #57
413: astore        56
415: ldc           #58
417: invokestatic  #21
420: goto          425
423: astore        56
425: new           #10
428: dup
429: invokespecial #11
432: ldc           #12
434: invokevirtual #13
437: dload         4
439: invokevirtual #60
442: ldc           #15
444: invokevirtual #13
447: dconst_0
448: invokevirtual #60
451: ldc           #12
453: invokevirtual #13
456: invokevirtual #16
459: dload         4
461: dconst_0
462: dcmpl
463: ifne          470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #17
474: new           #10
477: dup
478: invokespecial #11
481: ldc           #12
483: invokevirtual #13
486: dload         6
488: invokevirtual #60
491: ldc           #15
493: invokevirtual #13
496: dconst_0
497: invokevirtual #60
500: ldc           #12
502: invokevirtual #13
505: invokevirtual #16
508: dload         6
510: dconst_0
511: dcmpl
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #17
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: iload         8
537: invokevirtual #14
540: ldc           #15
542: invokevirtual #13
545: iconst_0
546: invokevirtual #14
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: iload         8
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #17
570: new           #10
573: dup
574: invokespecial #11
577: ldc           #12
579: invokevirtual #13
582: dload         9
584: invokevirtual #60
587: ldc           #15
589: invokevirtual #13
592: ldc2_w        #167
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         9
608: ldc2_w        #167
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: new           #10
626: dup
627: invokespecial #11
630: ldc           #12
632: invokevirtual #13
635: dload         13
637: invokevirtual #60
640: ldc           #15
642: invokevirtual #13
645: dconst_0
646: invokevirtual #60
649: ldc           #12
651: invokevirtual #13
654: invokevirtual #16
657: dload         13
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #17
672: new           #10
675: dup
676: invokespecial #11
679: ldc           #12
681: invokevirtual #13
684: dload         15
686: invokevirtual #60
689: ldc           #15
691: invokevirtual #13
694: ldc2_w        #61
697: invokevirtual #60
700: ldc           #12
702: invokevirtual #13
705: invokevirtual #16
708: dload         15
710: ldc2_w        #61
713: dcmpl
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #17
725: new           #10
728: dup
729: invokespecial #11
732: ldc           #12
734: invokevirtual #13
737: dload         19
739: invokevirtual #60
742: ldc           #15
744: invokevirtual #13
747: dconst_0
748: invokevirtual #60
751: ldc           #12
753: invokevirtual #13
756: invokevirtual #16
759: dload         19
761: dconst_0
762: dcmpl
763: ifne          770
766: iconst_1
767: goto          771
770: iconst_0
771: invokestatic  #17
774: new           #10
777: dup
778: invokespecial #11
781: ldc           #12
783: invokevirtual #13
786: dload         21
788: invokevirtual #60
791: ldc           #15
793: invokevirtual #13
796: ldc2_w        #61
799: invokevirtual #60
802: ldc           #12
804: invokevirtual #13
807: invokevirtual #16
810: dload         21
812: ldc2_w        #61
815: dcmpl
816: ifne          823
819: iconst_1
820: goto          824
823: iconst_0
824: invokestatic  #17
827: new           #10
830: dup
831: invokespecial #11
834: ldc           #12
836: invokevirtual #13
839: dload         23
841: invokevirtual #60
844: ldc           #15
846: invokevirtual #13
849: dconst_0
850: invokevirtual #60
853: ldc           #12
855: invokevirtual #13
858: invokevirtual #16
861: dload         23
863: dconst_0
864: dcmpl
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #17
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         28
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         28
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         30
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         30
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         35
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         35
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         37
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: dconst_0
1046: invokevirtual #60
1049: ldc           #12
1051: invokevirtual #13
1054: invokevirtual #16
1057: dload         37
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: iload         39
1086: invokevirtual #14
1089: ldc           #15
1091: invokevirtual #13
1094: iconst_0
1095: invokevirtual #14
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: iload         39
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #17
1119: new           #10
1122: dup
1123: invokespecial #11
1126: ldc           #12
1128: invokevirtual #13
1131: dload         40
1133: invokevirtual #60
1136: ldc           #15
1138: invokevirtual #13
1141: dconst_0
1142: invokevirtual #60
1145: ldc           #12
1147: invokevirtual #13
1150: invokevirtual #16
1153: dload         40
1155: dconst_0
1156: dcmpl
1157: ifne          1164
1160: iconst_1
1161: goto          1165
1164: iconst_0
1165: invokestatic  #17
1168: aload         42
1170: invokestatic  #33
1173: new           #10
1176: dup
1177: invokespecial #11
1180: ldc           #12
1182: invokevirtual #13
1185: dload         45
1187: invokevirtual #60
1190: ldc           #15
1192: invokevirtual #13
1195: dconst_0
1196: invokevirtual #60
1199: ldc           #12
1201: invokevirtual #13
1204: invokevirtual #16
1207: dload         45
1209: dconst_0
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #17
1222: aload         47
1224: invokestatic  #33
1227: aload         48
1229: invokestatic  #33
1232: new           #10
1235: dup
1236: invokespecial #11
1239: ldc           #12
1241: invokevirtual #13
1244: dload         50
1246: invokevirtual #60
1249: ldc           #15
1251: invokevirtual #13
1254: dconst_0
1255: invokevirtual #60
1258: ldc           #12
1260: invokevirtual #13
1263: invokevirtual #16
1266: dload         50
1268: dconst_0
1269: dcmpl
1270: ifne          1277
1273: iconst_1
1274: goto          1278
1277: iconst_0
1278: invokestatic  #17
1281: new           #10
1284: dup
1285: invokespecial #11
1288: ldc           #12
1290: invokevirtual #13
1293: dload         52
1295: invokevirtual #60
1298: ldc           #15
1300: invokevirtual #13
1303: dconst_0
1304: invokevirtual #60
1307: ldc           #12
1309: invokevirtual #13
1312: invokevirtual #16
1315: dload         52
1317: dconst_0
1318: dcmpl
1319: ifne          1326
1322: iconst_1
1323: goto          1327
1326: iconst_0
1327: invokestatic  #17
1330: aload         54
1332: invokestatic  #33
1335: return
Exception table:
from    to  target type
406   420   423   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 7821
End line: 7908
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = rotation85.applyTo(rotation88);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double96 = rotation95.getQ0();
        double double97 = org.apache.commons.math.geometry.euclidean.threed.Rotation.distance(rotation89, rotation95);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.079574528E9d + "'", double96 == 1.079574528E9d);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #549
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #222
506: astore        65
508: aload         64
510: invokevirtual #96
513: astore        66
515: getstatic     #309
518: astore        67
520: aload         64
522: aload         67
524: invokevirtual #160
527: astore        68
529: new           #27
532: dup
533: ldc2_w        #271
536: dconst_0
537: ldc2_w        #273
540: ldc2_w        #66
543: iconst_0
544: invokespecial #150
547: astore        69
549: aload         69
551: invokevirtual #241
554: dstore        70
556: aload         68
558: aload         69
560: invokestatic  #19
563: dstore        72
565: new           #10
568: dup
569: invokespecial #11
572: ldc           #12
574: invokevirtual #13
577: dload         4
579: invokevirtual #60
582: ldc           #15
584: invokevirtual #13
587: dconst_0
588: invokevirtual #60
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: dload         4
601: dconst_0
602: dcmpl
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #17
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: dload         6
628: invokevirtual #60
631: ldc           #15
633: invokevirtual #13
636: dconst_0
637: invokevirtual #60
640: ldc           #12
642: invokevirtual #13
645: invokevirtual #16
648: dload         6
650: dconst_0
651: dcmpl
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #17
663: new           #10
666: dup
667: invokespecial #11
670: ldc           #12
672: invokevirtual #13
675: dload         11
677: invokevirtual #60
680: ldc           #15
682: invokevirtual #13
685: dconst_0
686: invokevirtual #60
689: ldc           #12
691: invokevirtual #13
694: invokevirtual #16
697: dload         11
699: dconst_0
700: dcmpl
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #17
712: new           #10
715: dup
716: invokespecial #11
719: ldc           #12
721: invokevirtual #13
724: dload         13
726: invokevirtual #60
729: ldc           #15
731: invokevirtual #13
734: dconst_0
735: invokevirtual #60
738: ldc           #12
740: invokevirtual #13
743: invokevirtual #16
746: dload         13
748: dconst_0
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #17
761: new           #10
764: dup
765: invokespecial #11
768: ldc           #12
770: invokevirtual #13
773: iload         15
775: invokevirtual #14
778: ldc           #15
780: invokevirtual #13
783: iconst_0
784: invokevirtual #14
787: ldc           #12
789: invokevirtual #13
792: invokevirtual #16
795: iload         15
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #17
808: new           #10
811: dup
812: invokespecial #11
815: ldc           #12
817: invokevirtual #13
820: dload         16
822: invokevirtual #60
825: ldc           #15
827: invokevirtual #13
830: dconst_0
831: invokevirtual #60
834: ldc           #12
836: invokevirtual #13
839: invokevirtual #16
842: dload         16
844: dconst_0
845: dcmpl
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #17
857: aload         18
859: invokestatic  #33
862: new           #10
865: dup
866: invokespecial #11
869: ldc           #12
871: invokevirtual #13
874: dload         21
876: invokevirtual #60
879: ldc           #15
881: invokevirtual #13
884: dconst_0
885: invokevirtual #60
888: ldc           #12
890: invokevirtual #13
893: invokevirtual #16
896: dload         21
898: dconst_0
899: dcmpl
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #17
911: new           #10
914: dup
915: invokespecial #11
918: ldc           #12
920: invokevirtual #13
923: dload         25
925: invokevirtual #60
928: ldc           #15
930: invokevirtual #13
933: dconst_0
934: invokevirtual #60
937: ldc           #12
939: invokevirtual #13
942: invokevirtual #16
945: dload         25
947: dconst_0
948: dcmpl
949: ifne          956
952: iconst_1
953: goto          957
956: iconst_0
957: invokestatic  #17
960: new           #10
963: dup
964: invokespecial #11
967: ldc           #12
969: invokevirtual #13
972: dload         27
974: invokevirtual #60
977: ldc           #15
979: invokevirtual #13
982: ldc2_w        #61
985: invokevirtual #60
988: ldc           #12
990: invokevirtual #13
993: invokevirtual #16
996: dload         27
998: ldc2_w        #61
1001: dcmpl
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #17
1013: new           #10
1016: dup
1017: invokespecial #11
1020: ldc           #12
1022: invokevirtual #13
1025: dload         31
1027: invokevirtual #60
1030: ldc           #15
1032: invokevirtual #13
1035: dconst_0
1036: invokevirtual #60
1039: ldc           #12
1041: invokevirtual #13
1044: invokevirtual #16
1047: dload         31
1049: dconst_0
1050: dcmpl
1051: ifne          1058
1054: iconst_1
1055: goto          1059
1058: iconst_0
1059: invokestatic  #17
1062: new           #10
1065: dup
1066: invokespecial #11
1069: ldc           #12
1071: invokevirtual #13
1074: dload         33
1076: invokevirtual #60
1079: ldc           #15
1081: invokevirtual #13
1084: ldc2_w        #61
1087: invokevirtual #60
1090: ldc           #12
1092: invokevirtual #13
1095: invokevirtual #16
1098: dload         33
1100: ldc2_w        #61
1103: dcmpl
1104: ifne          1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #17
1115: new           #10
1118: dup
1119: invokespecial #11
1122: ldc           #12
1124: invokevirtual #13
1127: dload         35
1129: invokevirtual #60
1132: ldc           #15
1134: invokevirtual #13
1137: dconst_0
1138: invokevirtual #60
1141: ldc           #12
1143: invokevirtual #13
1146: invokevirtual #16
1149: dload         35
1151: dconst_0
1152: dcmpl
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #17
1164: new           #10
1167: dup
1168: invokespecial #11
1171: ldc           #12
1173: invokevirtual #13
1176: dload         40
1178: invokevirtual #60
1181: ldc           #15
1183: invokevirtual #13
1186: dconst_0
1187: invokevirtual #60
1190: ldc           #12
1192: invokevirtual #13
1195: invokevirtual #16
1198: dload         40
1200: dconst_0
1201: dcmpl
1202: ifne          1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #17
1213: new           #10
1216: dup
1217: invokespecial #11
1220: ldc           #12
1222: invokevirtual #13
1225: dload         42
1227: invokevirtual #60
1230: ldc           #15
1232: invokevirtual #13
1235: dconst_0
1236: invokevirtual #60
1239: ldc           #12
1241: invokevirtual #13
1244: invokevirtual #16
1247: dload         42
1249: dconst_0
1250: dcmpl
1251: ifne          1258
1254: iconst_1
1255: goto          1259
1258: iconst_0
1259: invokestatic  #17
1262: new           #10
1265: dup
1266: invokespecial #11
1269: ldc           #12
1271: invokevirtual #13
1274: dload         47
1276: invokevirtual #60
1279: ldc           #15
1281: invokevirtual #13
1284: dconst_0
1285: invokevirtual #60
1288: ldc           #12
1290: invokevirtual #13
1293: invokevirtual #16
1296: dload         47
1298: dconst_0
1299: dcmpl
1300: ifne          1307
1303: iconst_1
1304: goto          1308
1307: iconst_0
1308: invokestatic  #17
1311: new           #10
1314: dup
1315: invokespecial #11
1318: ldc           #12
1320: invokevirtual #13
1323: dload         49
1325: invokevirtual #60
1328: ldc           #15
1330: invokevirtual #13
1333: dconst_0
1334: invokevirtual #60
1337: ldc           #12
1339: invokevirtual #13
1342: invokevirtual #16
1345: dload         49
1347: dconst_0
1348: dcmpl
1349: ifne          1356
1352: iconst_1
1353: goto          1357
1356: iconst_0
1357: invokestatic  #17
1360: new           #10
1363: dup
1364: invokespecial #11
1367: ldc           #12
1369: invokevirtual #13
1372: iload         51
1374: invokevirtual #14
1377: ldc           #15
1379: invokevirtual #13
1382: iconst_0
1383: invokevirtual #14
1386: ldc           #12
1388: invokevirtual #13
1391: invokevirtual #16
1394: iload         51
1396: ifne          1403
1399: iconst_1
1400: goto          1404
1403: iconst_0
1404: invokestatic  #17
1407: new           #10
1410: dup
1411: invokespecial #11
1414: ldc           #12
1416: invokevirtual #13
1419: dload         52
1421: invokevirtual #60
1424: ldc           #15
1426: invokevirtual #13
1429: dconst_0
1430: invokevirtual #60
1433: ldc           #12
1435: invokevirtual #13
1438: invokevirtual #16
1441: dload         52
1443: dconst_0
1444: dcmpl
1445: ifne          1452
1448: iconst_1
1449: goto          1453
1452: iconst_0
1453: invokestatic  #17
1456: aload         54
1458: invokestatic  #33
1461: new           #10
1464: dup
1465: invokespecial #11
1468: ldc           #12
1470: invokevirtual #13
1473: dload         57
1475: invokevirtual #60
1478: ldc           #15
1480: invokevirtual #13
1483: dconst_0
1484: invokevirtual #60
1487: ldc           #12
1489: invokevirtual #13
1492: invokevirtual #16
1495: dload         57
1497: dconst_0
1498: dcmpl
1499: ifne          1506
1502: iconst_1
1503: goto          1507
1506: iconst_0
1507: invokestatic  #17
1510: aload         59
1512: invokestatic  #33
1515: aload         60
1517: invokestatic  #33
1520: new           #10
1523: dup
1524: invokespecial #11
1527: ldc           #12
1529: invokevirtual #13
1532: dload         61
1534: invokevirtual #60
1537: ldc           #15
1539: invokevirtual #13
1542: ldc2_w        #63
1545: invokevirtual #60
1548: ldc           #12
1550: invokevirtual #13
1553: invokevirtual #16
1556: dload         61
1558: ldc2_w        #63
1561: dcmpl
1562: ifne          1569
1565: iconst_1
1566: goto          1570
1569: iconst_0
1570: invokestatic  #17
1573: aload         64
1575: invokestatic  #33
1578: aload         65
1580: invokestatic  #33
1583: aload         66
1585: invokestatic  #33
1588: aload         67
1590: invokestatic  #33
1593: aload         68
1595: invokestatic  #33
1598: new           #10
1601: dup
1602: invokespecial #11
1605: ldc           #12
1607: invokevirtual #13
1610: dload         70
1612: invokevirtual #60
1615: ldc           #15
1617: invokevirtual #13
1620: ldc2_w        #271
1623: invokevirtual #60
1626: ldc           #12
1628: invokevirtual #13
1631: invokevirtual #16
1634: dload         70
1636: ldc2_w        #271
1639: dcmpl
1640: ifne          1647
1643: iconst_1
1644: goto          1648
1647: iconst_0
1648: invokestatic  #17
1651: dload         72
1653: invokestatic  #242
1656: invokestatic  #243
1659: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 7911
End line: 7927
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = rotation5.getAxis();
        double[][] doubleArray10 = rotation5.getMatrix();
        double double11 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #550
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: aload_1
55: invokevirtual #222
58: astore        4
60: aload_1
61: invokevirtual #96
64: astore        5
66: aload_1
67: invokevirtual #222
70: astore        6
72: aload_1
73: invokevirtual #240
76: dstore        7
78: aload_2
79: invokestatic  #33
82: aload_3
83: invokestatic  #33
86: aload         4
88: invokestatic  #33
91: aload         5
93: invokestatic  #33
96: aload         6
98: invokestatic  #33
101: dload         7
103: invokestatic  #242
106: invokestatic  #243
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 7930
End line: 8015
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        double double94 = vector3D92.getZ();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 32.0d + "'", double94 == 32.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #551
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #43
525: dup
526: dconst_0
527: ldc2_w        #68
530: ldc2_w        #70
533: invokespecial #97
536: astore        70
538: aload         64
540: aload         70
542: invokevirtual #98
545: astore        71
547: aload         70
549: invokevirtual #311
552: dstore        72
554: new           #10
557: dup
558: invokespecial #11
561: ldc           #12
563: invokevirtual #13
566: dload         4
568: invokevirtual #60
571: ldc           #15
573: invokevirtual #13
576: dconst_0
577: invokevirtual #60
580: ldc           #12
582: invokevirtual #13
585: invokevirtual #16
588: dload         4
590: dconst_0
591: dcmpl
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #17
603: new           #10
606: dup
607: invokespecial #11
610: ldc           #12
612: invokevirtual #13
615: dload         6
617: invokevirtual #60
620: ldc           #15
622: invokevirtual #13
625: dconst_0
626: invokevirtual #60
629: ldc           #12
631: invokevirtual #13
634: invokevirtual #16
637: dload         6
639: dconst_0
640: dcmpl
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #17
652: new           #10
655: dup
656: invokespecial #11
659: ldc           #12
661: invokevirtual #13
664: dload         11
666: invokevirtual #60
669: ldc           #15
671: invokevirtual #13
674: dconst_0
675: invokevirtual #60
678: ldc           #12
680: invokevirtual #13
683: invokevirtual #16
686: dload         11
688: dconst_0
689: dcmpl
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #17
701: new           #10
704: dup
705: invokespecial #11
708: ldc           #12
710: invokevirtual #13
713: dload         13
715: invokevirtual #60
718: ldc           #15
720: invokevirtual #13
723: dconst_0
724: invokevirtual #60
727: ldc           #12
729: invokevirtual #13
732: invokevirtual #16
735: dload         13
737: dconst_0
738: dcmpl
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #17
750: new           #10
753: dup
754: invokespecial #11
757: ldc           #12
759: invokevirtual #13
762: iload         15
764: invokevirtual #14
767: ldc           #15
769: invokevirtual #13
772: iconst_0
773: invokevirtual #14
776: ldc           #12
778: invokevirtual #13
781: invokevirtual #16
784: iload         15
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #17
797: new           #10
800: dup
801: invokespecial #11
804: ldc           #12
806: invokevirtual #13
809: dload         16
811: invokevirtual #60
814: ldc           #15
816: invokevirtual #13
819: dconst_0
820: invokevirtual #60
823: ldc           #12
825: invokevirtual #13
828: invokevirtual #16
831: dload         16
833: dconst_0
834: dcmpl
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #17
846: aload         18
848: invokestatic  #33
851: new           #10
854: dup
855: invokespecial #11
858: ldc           #12
860: invokevirtual #13
863: dload         21
865: invokevirtual #60
868: ldc           #15
870: invokevirtual #13
873: dconst_0
874: invokevirtual #60
877: ldc           #12
879: invokevirtual #13
882: invokevirtual #16
885: dload         21
887: dconst_0
888: dcmpl
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #17
900: new           #10
903: dup
904: invokespecial #11
907: ldc           #12
909: invokevirtual #13
912: dload         25
914: invokevirtual #60
917: ldc           #15
919: invokevirtual #13
922: dconst_0
923: invokevirtual #60
926: ldc           #12
928: invokevirtual #13
931: invokevirtual #16
934: dload         25
936: dconst_0
937: dcmpl
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #17
949: new           #10
952: dup
953: invokespecial #11
956: ldc           #12
958: invokevirtual #13
961: dload         27
963: invokevirtual #60
966: ldc           #15
968: invokevirtual #13
971: ldc2_w        #61
974: invokevirtual #60
977: ldc           #12
979: invokevirtual #13
982: invokevirtual #16
985: dload         27
987: ldc2_w        #61
990: dcmpl
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #17
1002: new           #10
1005: dup
1006: invokespecial #11
1009: ldc           #12
1011: invokevirtual #13
1014: dload         31
1016: invokevirtual #60
1019: ldc           #15
1021: invokevirtual #13
1024: dconst_0
1025: invokevirtual #60
1028: ldc           #12
1030: invokevirtual #13
1033: invokevirtual #16
1036: dload         31
1038: dconst_0
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #17
1051: new           #10
1054: dup
1055: invokespecial #11
1058: ldc           #12
1060: invokevirtual #13
1063: dload         33
1065: invokevirtual #60
1068: ldc           #15
1070: invokevirtual #13
1073: ldc2_w        #61
1076: invokevirtual #60
1079: ldc           #12
1081: invokevirtual #13
1084: invokevirtual #16
1087: dload         33
1089: ldc2_w        #61
1092: dcmpl
1093: ifne          1100
1096: iconst_1
1097: goto          1101
1100: iconst_0
1101: invokestatic  #17
1104: new           #10
1107: dup
1108: invokespecial #11
1111: ldc           #12
1113: invokevirtual #13
1116: dload         35
1118: invokevirtual #60
1121: ldc           #15
1123: invokevirtual #13
1126: dconst_0
1127: invokevirtual #60
1130: ldc           #12
1132: invokevirtual #13
1135: invokevirtual #16
1138: dload         35
1140: dconst_0
1141: dcmpl
1142: ifne          1149
1145: iconst_1
1146: goto          1150
1149: iconst_0
1150: invokestatic  #17
1153: new           #10
1156: dup
1157: invokespecial #11
1160: ldc           #12
1162: invokevirtual #13
1165: dload         40
1167: invokevirtual #60
1170: ldc           #15
1172: invokevirtual #13
1175: dconst_0
1176: invokevirtual #60
1179: ldc           #12
1181: invokevirtual #13
1184: invokevirtual #16
1187: dload         40
1189: dconst_0
1190: dcmpl
1191: ifne          1198
1194: iconst_1
1195: goto          1199
1198: iconst_0
1199: invokestatic  #17
1202: new           #10
1205: dup
1206: invokespecial #11
1209: ldc           #12
1211: invokevirtual #13
1214: dload         42
1216: invokevirtual #60
1219: ldc           #15
1221: invokevirtual #13
1224: dconst_0
1225: invokevirtual #60
1228: ldc           #12
1230: invokevirtual #13
1233: invokevirtual #16
1236: dload         42
1238: dconst_0
1239: dcmpl
1240: ifne          1247
1243: iconst_1
1244: goto          1248
1247: iconst_0
1248: invokestatic  #17
1251: new           #10
1254: dup
1255: invokespecial #11
1258: ldc           #12
1260: invokevirtual #13
1263: dload         47
1265: invokevirtual #60
1268: ldc           #15
1270: invokevirtual #13
1273: dconst_0
1274: invokevirtual #60
1277: ldc           #12
1279: invokevirtual #13
1282: invokevirtual #16
1285: dload         47
1287: dconst_0
1288: dcmpl
1289: ifne          1296
1292: iconst_1
1293: goto          1297
1296: iconst_0
1297: invokestatic  #17
1300: new           #10
1303: dup
1304: invokespecial #11
1307: ldc           #12
1309: invokevirtual #13
1312: dload         49
1314: invokevirtual #60
1317: ldc           #15
1319: invokevirtual #13
1322: dconst_0
1323: invokevirtual #60
1326: ldc           #12
1328: invokevirtual #13
1331: invokevirtual #16
1334: dload         49
1336: dconst_0
1337: dcmpl
1338: ifne          1345
1341: iconst_1
1342: goto          1346
1345: iconst_0
1346: invokestatic  #17
1349: new           #10
1352: dup
1353: invokespecial #11
1356: ldc           #12
1358: invokevirtual #13
1361: iload         51
1363: invokevirtual #14
1366: ldc           #15
1368: invokevirtual #13
1371: iconst_0
1372: invokevirtual #14
1375: ldc           #12
1377: invokevirtual #13
1380: invokevirtual #16
1383: iload         51
1385: ifne          1392
1388: iconst_1
1389: goto          1393
1392: iconst_0
1393: invokestatic  #17
1396: new           #10
1399: dup
1400: invokespecial #11
1403: ldc           #12
1405: invokevirtual #13
1408: dload         52
1410: invokevirtual #60
1413: ldc           #15
1415: invokevirtual #13
1418: dconst_0
1419: invokevirtual #60
1422: ldc           #12
1424: invokevirtual #13
1427: invokevirtual #16
1430: dload         52
1432: dconst_0
1433: dcmpl
1434: ifne          1441
1437: iconst_1
1438: goto          1442
1441: iconst_0
1442: invokestatic  #17
1445: aload         54
1447: invokestatic  #33
1450: new           #10
1453: dup
1454: invokespecial #11
1457: ldc           #12
1459: invokevirtual #13
1462: dload         57
1464: invokevirtual #60
1467: ldc           #15
1469: invokevirtual #13
1472: dconst_0
1473: invokevirtual #60
1476: ldc           #12
1478: invokevirtual #13
1481: invokevirtual #16
1484: dload         57
1486: dconst_0
1487: dcmpl
1488: ifne          1495
1491: iconst_1
1492: goto          1496
1495: iconst_0
1496: invokestatic  #17
1499: aload         59
1501: invokestatic  #33
1504: aload         60
1506: invokestatic  #33
1509: new           #10
1512: dup
1513: invokespecial #11
1516: ldc           #12
1518: invokevirtual #13
1521: dload         61
1523: invokevirtual #60
1526: ldc           #15
1528: invokevirtual #13
1531: ldc2_w        #63
1534: invokevirtual #60
1537: ldc           #12
1539: invokevirtual #13
1542: invokevirtual #16
1545: dload         61
1547: ldc2_w        #63
1550: dcmpl
1551: ifne          1558
1554: iconst_1
1555: goto          1559
1558: iconst_0
1559: invokestatic  #17
1562: aload         64
1564: invokestatic  #33
1567: new           #10
1570: dup
1571: invokespecial #11
1574: ldc           #12
1576: invokevirtual #13
1579: dload         65
1581: invokevirtual #60
1584: ldc           #15
1586: invokevirtual #13
1589: dconst_0
1590: invokevirtual #60
1593: ldc           #12
1595: invokevirtual #13
1598: invokevirtual #16
1601: dload         65
1603: dconst_0
1604: dcmpl
1605: ifne          1612
1608: iconst_1
1609: goto          1613
1612: iconst_0
1613: invokestatic  #17
1616: new           #10
1619: dup
1620: invokespecial #11
1623: ldc           #12
1625: invokevirtual #13
1628: dload         67
1630: invokevirtual #60
1633: ldc           #15
1635: invokevirtual #13
1638: dconst_0
1639: invokevirtual #60
1642: ldc           #12
1644: invokevirtual #13
1647: invokevirtual #16
1650: dload         67
1652: dconst_0
1653: dcmpl
1654: ifne          1661
1657: iconst_1
1658: goto          1662
1661: iconst_0
1662: invokestatic  #17
1665: aload         69
1667: invokestatic  #33
1670: aload         71
1672: invokestatic  #33
1675: new           #10
1678: dup
1679: invokespecial #11
1682: ldc           #12
1684: invokevirtual #13
1687: dload         72
1689: invokevirtual #60
1692: ldc           #15
1694: invokevirtual #13
1697: ldc2_w        #70
1700: invokevirtual #60
1703: ldc           #12
1705: invokevirtual #13
1708: invokevirtual #16
1711: dload         72
1713: ldc2_w        #70
1716: dcmpl
1717: ifne          1724
1720: iconst_1
1721: goto          1725
1724: iconst_0
1725: invokestatic  #17
1728: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 8018
End line: 8107
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation97.getQ1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-1.079574538E9d) + "'", double98 == (-1.079574538E9d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #552
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         74
567: invokevirtual #94
570: dstore        75
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         4
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         4
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         6
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         6
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         11
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         11
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: dload         13
733: invokevirtual #60
736: ldc           #15
738: invokevirtual #13
741: dconst_0
742: invokevirtual #60
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: dload         13
755: dconst_0
756: dcmpl
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: iload         15
782: invokevirtual #14
785: ldc           #15
787: invokevirtual #13
790: iconst_0
791: invokevirtual #14
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: iload         15
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         16
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: dconst_0
838: invokevirtual #60
841: ldc           #12
843: invokevirtual #13
846: invokevirtual #16
849: dload         16
851: dconst_0
852: dcmpl
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #17
864: aload         18
866: invokestatic  #33
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         21
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         21
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         25
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: dconst_0
941: invokevirtual #60
944: ldc           #12
946: invokevirtual #13
949: invokevirtual #16
952: dload         25
954: dconst_0
955: dcmpl
956: ifne          963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #17
967: new           #10
970: dup
971: invokespecial #11
974: ldc           #12
976: invokevirtual #13
979: dload         27
981: invokevirtual #60
984: ldc           #15
986: invokevirtual #13
989: ldc2_w        #61
992: invokevirtual #60
995: ldc           #12
997: invokevirtual #13
1000: invokevirtual #16
1003: dload         27
1005: ldc2_w        #61
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         31
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: dconst_0
1043: invokevirtual #60
1046: ldc           #12
1048: invokevirtual #13
1051: invokevirtual #16
1054: dload         31
1056: dconst_0
1057: dcmpl
1058: ifne          1065
1061: iconst_1
1062: goto          1066
1065: iconst_0
1066: invokestatic  #17
1069: new           #10
1072: dup
1073: invokespecial #11
1076: ldc           #12
1078: invokevirtual #13
1081: dload         33
1083: invokevirtual #60
1086: ldc           #15
1088: invokevirtual #13
1091: ldc2_w        #61
1094: invokevirtual #60
1097: ldc           #12
1099: invokevirtual #13
1102: invokevirtual #16
1105: dload         33
1107: ldc2_w        #61
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         35
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         35
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         40
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         40
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         42
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         42
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         47
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         47
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: dload         49
1332: invokevirtual #60
1335: ldc           #15
1337: invokevirtual #13
1340: dconst_0
1341: invokevirtual #60
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: dload         49
1354: dconst_0
1355: dcmpl
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: iload         51
1381: invokevirtual #14
1384: ldc           #15
1386: invokevirtual #13
1389: iconst_0
1390: invokevirtual #14
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: iload         51
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: new           #10
1417: dup
1418: invokespecial #11
1421: ldc           #12
1423: invokevirtual #13
1426: dload         52
1428: invokevirtual #60
1431: ldc           #15
1433: invokevirtual #13
1436: dconst_0
1437: invokevirtual #60
1440: ldc           #12
1442: invokevirtual #13
1445: invokevirtual #16
1448: dload         52
1450: dconst_0
1451: dcmpl
1452: ifne          1459
1455: iconst_1
1456: goto          1460
1459: iconst_0
1460: invokestatic  #17
1463: aload         54
1465: invokestatic  #33
1468: new           #10
1471: dup
1472: invokespecial #11
1475: ldc           #12
1477: invokevirtual #13
1480: dload         57
1482: invokevirtual #60
1485: ldc           #15
1487: invokevirtual #13
1490: dconst_0
1491: invokevirtual #60
1494: ldc           #12
1496: invokevirtual #13
1499: invokevirtual #16
1502: dload         57
1504: dconst_0
1505: dcmpl
1506: ifne          1513
1509: iconst_1
1510: goto          1514
1513: iconst_0
1514: invokestatic  #17
1517: aload         59
1519: invokestatic  #33
1522: aload         60
1524: invokestatic  #33
1527: new           #10
1530: dup
1531: invokespecial #11
1534: ldc           #12
1536: invokevirtual #13
1539: dload         61
1541: invokevirtual #60
1544: ldc           #15
1546: invokevirtual #13
1549: ldc2_w        #63
1552: invokevirtual #60
1555: ldc           #12
1557: invokevirtual #13
1560: invokevirtual #16
1563: dload         61
1565: ldc2_w        #63
1568: dcmpl
1569: ifne          1576
1572: iconst_1
1573: goto          1577
1576: iconst_0
1577: invokestatic  #17
1580: aload         64
1582: invokestatic  #33
1585: new           #10
1588: dup
1589: invokespecial #11
1592: ldc           #12
1594: invokevirtual #13
1597: dload         65
1599: invokevirtual #60
1602: ldc           #15
1604: invokevirtual #13
1607: dconst_0
1608: invokevirtual #60
1611: ldc           #12
1613: invokevirtual #13
1616: invokevirtual #16
1619: dload         65
1621: dconst_0
1622: dcmpl
1623: ifne          1630
1626: iconst_1
1627: goto          1631
1630: iconst_0
1631: invokestatic  #17
1634: new           #10
1637: dup
1638: invokespecial #11
1641: ldc           #12
1643: invokevirtual #13
1646: dload         67
1648: invokevirtual #60
1651: ldc           #15
1653: invokevirtual #13
1656: dconst_0
1657: invokevirtual #60
1660: ldc           #12
1662: invokevirtual #13
1665: invokevirtual #16
1668: dload         67
1670: dconst_0
1671: dcmpl
1672: ifne          1679
1675: iconst_1
1676: goto          1680
1679: iconst_0
1680: invokestatic  #17
1683: aload         69
1685: invokestatic  #33
1688: aload         71
1690: invokestatic  #33
1693: new           #10
1696: dup
1697: invokespecial #11
1700: ldc           #12
1702: invokevirtual #13
1705: dload         72
1707: invokevirtual #60
1710: ldc           #15
1712: invokevirtual #13
1715: ldc2_w        #148
1718: invokevirtual #60
1721: ldc           #12
1723: invokevirtual #13
1726: invokevirtual #16
1729: dload         72
1731: ldc2_w        #148
1734: dcmpl
1735: ifne          1742
1738: iconst_1
1739: goto          1743
1742: iconst_0
1743: invokestatic  #17
1746: aload         74
1748: invokestatic  #33
1751: new           #10
1754: dup
1755: invokespecial #11
1758: ldc           #12
1760: invokevirtual #13
1763: dload         75
1765: invokevirtual #60
1768: ldc           #15
1770: invokevirtual #13
1773: ldc2_w        #553
1776: invokevirtual #60
1779: ldc           #12
1781: invokevirtual #13
1784: invokevirtual #16
1787: dload         75
1789: ldc2_w        #553
1792: dcmpl
1793: ifne          1800
1796: iconst_1
1797: goto          1801
1800: iconst_0
1801: invokestatic  #17
1804: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 8110
End line: 8185
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 1.0f, '#', '4', 10.0f };
        org.apache.commons.math.exception.NullArgumentException nullArgumentException9 = new org.apache.commons.math.exception.NullArgumentException(localizable3, objArray8);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException10 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable1, (java.lang.Number) (short) -1, objArray8);
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException11 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, objArray8);
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException15 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10.0f, (java.lang.Number) 20.793438379014997d, (int) (byte) -1);
        boolean boolean16 = nonMonotonousSequenceException15.getStrict();
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D20.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        double double38 = vector3D36.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = vector3D44.getDelta();
        double double47 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double57 = vector3D53.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D50, vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double68 = vector3D64.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        double double69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D61, vector3D67);
        boolean boolean70 = vector3D61.isInfinite();
        double double71 = vector3D50.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = vector3D61.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double79 = vector3D75.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = vector3D72.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D75);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D36.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D80);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation82 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D20, vector3D36);
        double[][] doubleArray83 = rotation82.getMatrix();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException15, localizable17, (java.lang.Object[]) doubleArray83);
        mathIllegalArgumentException11.addSuppressed((java.lang.Throwable) mathException84);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[1.0, #, 4, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[1.0, #, 4, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.6957086881730823d + "'", double30 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.7345682747147468d + "'", double38 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.7345682747147468d + "'", double46 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #555
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aconst_null
30: astore_3
31: iconst_4
32: anewarray     #5
35: dup
36: iconst_0
37: fconst_1
38: invokestatic  #379
41: aastore
42: dup
43: iconst_1
44: bipush        35
46: invokestatic  #556
49: aastore
50: dup
51: iconst_2
52: bipush        52
54: invokestatic  #556
57: aastore
58: dup
59: iconst_3
60: ldc           #8
62: invokestatic  #379
65: aastore
66: astore        4
68: new           #263
71: dup
72: aload_3
73: aload         4
75: invokespecial #264
78: astore        5
80: new           #438
83: dup
84: aload_2
85: iconst_m1
86: invokestatic  #439
89: aload         4
91: invokespecial #440
94: astore        6
96: new           #247
99: dup
100: aload_1
101: aload         4
103: invokespecial #249
106: astore        7
108: new           #321
111: dup
112: ldc           #8
114: invokestatic  #379
117: ldc2_w        #380
120: invokestatic  #319
123: iconst_m1
124: invokespecial #325
127: astore        8
129: aload         8
131: invokevirtual #382
134: istore        9
136: aconst_null
137: astore        10
139: new           #43
142: dup
143: dconst_1
144: ldc2_w        #44
147: invokespecial #46
150: astore        11
152: new           #43
155: dup
156: dconst_1
157: ldc2_w        #44
160: invokespecial #46
163: astore        12
165: new           #43
168: dup
169: dconst_1
170: ldc2_w        #44
173: invokespecial #46
176: astore        13
178: aload         12
180: aload         13
182: invokevirtual #47
185: dstore        14
187: aload         11
189: aload         13
191: invokestatic  #48
194: dstore        16
196: aload         11
198: invokevirtual #49
201: istore        18
203: aload         11
205: invokevirtual #162
208: dstore        19
210: new           #43
213: dup
214: dconst_1
215: ldc2_w        #44
218: invokespecial #46
221: astore        21
223: new           #43
226: dup
227: dconst_1
228: ldc2_w        #44
231: invokespecial #46
234: astore        22
236: aload         21
238: aload         22
240: invokevirtual #47
243: dstore        23
245: aload         22
247: invokevirtual #52
250: dstore        25
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        27
265: new           #43
268: dup
269: dconst_1
270: ldc2_w        #44
273: invokespecial #46
276: astore        28
278: aload         27
280: aload         28
282: invokevirtual #47
285: dstore        29
287: aload         28
289: invokevirtual #52
292: dstore        31
294: aload         22
296: aload         28
298: invokevirtual #53
301: dstore        33
303: new           #43
306: dup
307: dconst_1
308: ldc2_w        #44
311: invokespecial #46
314: astore        35
316: new           #43
319: dup
320: dconst_1
321: ldc2_w        #44
324: invokespecial #46
327: astore        36
329: new           #43
332: dup
333: dconst_1
334: ldc2_w        #44
337: invokespecial #46
340: astore        37
342: aload         36
344: aload         37
346: invokevirtual #47
349: dstore        38
351: aload         35
353: aload         37
355: invokestatic  #48
358: dstore        40
360: new           #43
363: dup
364: dconst_1
365: ldc2_w        #44
368: invokespecial #46
371: astore        42
373: new           #43
376: dup
377: dconst_1
378: ldc2_w        #44
381: invokespecial #46
384: astore        43
386: new           #43
389: dup
390: dconst_1
391: ldc2_w        #44
394: invokespecial #46
397: astore        44
399: aload         43
401: aload         44
403: invokevirtual #47
406: dstore        45
408: aload         42
410: aload         44
412: invokestatic  #48
415: dstore        47
417: aload         42
419: invokevirtual #49
422: istore        49
424: aload         35
426: aload         42
428: invokevirtual #50
431: dstore        50
433: aload         42
435: invokevirtual #54
438: astore        52
440: new           #43
443: dup
444: dconst_1
445: ldc2_w        #44
448: invokespecial #46
451: astore        53
453: new           #43
456: dup
457: dconst_1
458: ldc2_w        #44
461: invokespecial #46
464: astore        54
466: aload         53
468: aload         54
470: invokevirtual #47
473: dstore        55
475: aload         52
477: aload         53
479: invokevirtual #55
482: astore        57
484: aload         22
486: aload         57
488: invokevirtual #55
491: astore        58
493: new           #27
496: dup
497: aload         11
499: aload         22
501: invokespecial #56
504: astore        59
506: aload         59
508: invokevirtual #222
511: astore        60
513: new           #265
516: dup
517: aload         8
519: aload         10
521: aload         60
523: checkcast     #248
526: invokespecial #383
529: astore        61
531: aload         7
533: aload         61
535: invokevirtual #557
538: aload         4
540: invokestatic  #33
543: aload         4
545: invokestatic  #558
548: ldc_w         #559
551: invokestatic  #36
554: aload         4
556: invokestatic  #560
559: ldc_w         #559
562: invokestatic  #36
565: new           #10
568: dup
569: invokespecial #11
572: ldc           #12
574: invokevirtual #13
577: iload         9
579: invokevirtual #14
582: ldc           #15
584: invokevirtual #13
587: iconst_1
588: invokevirtual #14
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: iload         9
601: iconst_1
602: if_icmpne     609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #17
613: new           #10
616: dup
617: invokespecial #11
620: ldc           #12
622: invokevirtual #13
625: dload         14
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload         14
649: dconst_0
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: dload         16
676: invokevirtual #60
679: ldc           #15
681: invokevirtual #13
684: dconst_0
685: invokevirtual #60
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: dload         16
698: dconst_0
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #17
711: new           #10
714: dup
715: invokespecial #11
718: ldc           #12
720: invokevirtual #13
723: iload         18
725: invokevirtual #14
728: ldc           #15
730: invokevirtual #13
733: iconst_0
734: invokevirtual #14
737: ldc           #12
739: invokevirtual #13
742: invokevirtual #16
745: iload         18
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: dload         19
772: invokevirtual #60
775: ldc           #15
777: invokevirtual #13
780: ldc2_w        #167
783: invokevirtual #60
786: ldc           #12
788: invokevirtual #13
791: invokevirtual #16
794: dload         19
796: ldc2_w        #167
799: dcmpl
800: ifne          807
803: iconst_1
804: goto          808
807: iconst_0
808: invokestatic  #17
811: new           #10
814: dup
815: invokespecial #11
818: ldc           #12
820: invokevirtual #13
823: dload         23
825: invokevirtual #60
828: ldc           #15
830: invokevirtual #13
833: dconst_0
834: invokevirtual #60
837: ldc           #12
839: invokevirtual #13
842: invokevirtual #16
845: dload         23
847: dconst_0
848: dcmpl
849: ifne          856
852: iconst_1
853: goto          857
856: iconst_0
857: invokestatic  #17
860: new           #10
863: dup
864: invokespecial #11
867: ldc           #12
869: invokevirtual #13
872: dload         25
874: invokevirtual #60
877: ldc           #15
879: invokevirtual #13
882: ldc2_w        #61
885: invokevirtual #60
888: ldc           #12
890: invokevirtual #13
893: invokevirtual #16
896: dload         25
898: ldc2_w        #61
901: dcmpl
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #17
913: new           #10
916: dup
917: invokespecial #11
920: ldc           #12
922: invokevirtual #13
925: dload         29
927: invokevirtual #60
930: ldc           #15
932: invokevirtual #13
935: dconst_0
936: invokevirtual #60
939: ldc           #12
941: invokevirtual #13
944: invokevirtual #16
947: dload         29
949: dconst_0
950: dcmpl
951: ifne          958
954: iconst_1
955: goto          959
958: iconst_0
959: invokestatic  #17
962: new           #10
965: dup
966: invokespecial #11
969: ldc           #12
971: invokevirtual #13
974: dload         31
976: invokevirtual #60
979: ldc           #15
981: invokevirtual #13
984: ldc2_w        #61
987: invokevirtual #60
990: ldc           #12
992: invokevirtual #13
995: invokevirtual #16
998: dload         31
1000: ldc2_w        #61
1003: dcmpl
1004: ifne          1011
1007: iconst_1
1008: goto          1012
1011: iconst_0
1012: invokestatic  #17
1015: new           #10
1018: dup
1019: invokespecial #11
1022: ldc           #12
1024: invokevirtual #13
1027: dload         33
1029: invokevirtual #60
1032: ldc           #15
1034: invokevirtual #13
1037: dconst_0
1038: invokevirtual #60
1041: ldc           #12
1043: invokevirtual #13
1046: invokevirtual #16
1049: dload         33
1051: dconst_0
1052: dcmpl
1053: ifne          1060
1056: iconst_1
1057: goto          1061
1060: iconst_0
1061: invokestatic  #17
1064: new           #10
1067: dup
1068: invokespecial #11
1071: ldc           #12
1073: invokevirtual #13
1076: dload         38
1078: invokevirtual #60
1081: ldc           #15
1083: invokevirtual #13
1086: dconst_0
1087: invokevirtual #60
1090: ldc           #12
1092: invokevirtual #13
1095: invokevirtual #16
1098: dload         38
1100: dconst_0
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #17
1113: new           #10
1116: dup
1117: invokespecial #11
1120: ldc           #12
1122: invokevirtual #13
1125: dload         40
1127: invokevirtual #60
1130: ldc           #15
1132: invokevirtual #13
1135: dconst_0
1136: invokevirtual #60
1139: ldc           #12
1141: invokevirtual #13
1144: invokevirtual #16
1147: dload         40
1149: dconst_0
1150: dcmpl
1151: ifne          1158
1154: iconst_1
1155: goto          1159
1158: iconst_0
1159: invokestatic  #17
1162: new           #10
1165: dup
1166: invokespecial #11
1169: ldc           #12
1171: invokevirtual #13
1174: dload         45
1176: invokevirtual #60
1179: ldc           #15
1181: invokevirtual #13
1184: dconst_0
1185: invokevirtual #60
1188: ldc           #12
1190: invokevirtual #13
1193: invokevirtual #16
1196: dload         45
1198: dconst_0
1199: dcmpl
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #17
1211: new           #10
1214: dup
1215: invokespecial #11
1218: ldc           #12
1220: invokevirtual #13
1223: dload         47
1225: invokevirtual #60
1228: ldc           #15
1230: invokevirtual #13
1233: dconst_0
1234: invokevirtual #60
1237: ldc           #12
1239: invokevirtual #13
1242: invokevirtual #16
1245: dload         47
1247: dconst_0
1248: dcmpl
1249: ifne          1256
1252: iconst_1
1253: goto          1257
1256: iconst_0
1257: invokestatic  #17
1260: new           #10
1263: dup
1264: invokespecial #11
1267: ldc           #12
1269: invokevirtual #13
1272: iload         49
1274: invokevirtual #14
1277: ldc           #15
1279: invokevirtual #13
1282: iconst_0
1283: invokevirtual #14
1286: ldc           #12
1288: invokevirtual #13
1291: invokevirtual #16
1294: iload         49
1296: ifne          1303
1299: iconst_1
1300: goto          1304
1303: iconst_0
1304: invokestatic  #17
1307: new           #10
1310: dup
1311: invokespecial #11
1314: ldc           #12
1316: invokevirtual #13
1319: dload         50
1321: invokevirtual #60
1324: ldc           #15
1326: invokevirtual #13
1329: dconst_0
1330: invokevirtual #60
1333: ldc           #12
1335: invokevirtual #13
1338: invokevirtual #16
1341: dload         50
1343: dconst_0
1344: dcmpl
1345: ifne          1352
1348: iconst_1
1349: goto          1353
1352: iconst_0
1353: invokestatic  #17
1356: aload         52
1358: invokestatic  #33
1361: new           #10
1364: dup
1365: invokespecial #11
1368: ldc           #12
1370: invokevirtual #13
1373: dload         55
1375: invokevirtual #60
1378: ldc           #15
1380: invokevirtual #13
1383: dconst_0
1384: invokevirtual #60
1387: ldc           #12
1389: invokevirtual #13
1392: invokevirtual #16
1395: dload         55
1397: dconst_0
1398: dcmpl
1399: ifne          1406
1402: iconst_1
1403: goto          1407
1406: iconst_0
1407: invokestatic  #17
1410: aload         57
1412: invokestatic  #33
1415: aload         58
1417: invokestatic  #33
1420: aload         60
1422: invokestatic  #33
1425: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 8188
End line: 8255
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = vector3D21.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = vector3D29.getDelta();
        double double32 = vector3D21.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double42 = vector3D38.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        double double43 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D35, vector3D41);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D46, vector3D52);
        boolean boolean55 = vector3D46.isInfinite();
        double double56 = vector3D35.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D46.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = vector3D57.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D21.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        double double67 = vector3D14.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double71 = vector3D70.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector72 = vector3D65.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation74 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D70, 3.6535299896840334E43d);
        double double75 = vector3D70.getNorm();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector76 = vector3D5.subtract(2.7182818284590455d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.7345682747147468d + "'", double23 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.7345682747147468d + "'", double31 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0000000000000002d + "'", double67 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.6702668260599606d + "'", double71 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector72);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #561
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: aload_2
56: invokevirtual #52
59: dstore        5
61: new           #43
64: dup
65: dconst_1
66: ldc2_w        #44
69: invokespecial #46
72: astore        7
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: aload         7
89: aload         8
91: invokevirtual #47
94: dstore        9
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        11
109: new           #43
112: dup
113: dconst_1
114: ldc2_w        #44
117: invokespecial #46
120: astore        12
122: aload         11
124: aload         12
126: invokevirtual #47
129: dstore        13
131: aload         12
133: invokevirtual #52
136: dstore        15
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        17
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        18
164: aload         17
166: aload         18
168: invokevirtual #47
171: dstore        19
173: aload         18
175: invokevirtual #52
178: dstore        21
180: aload         12
182: aload         18
184: invokevirtual #53
187: dstore        23
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        25
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        26
215: new           #43
218: dup
219: dconst_1
220: ldc2_w        #44
223: invokespecial #46
226: astore        27
228: aload         26
230: aload         27
232: invokevirtual #47
235: dstore        28
237: aload         25
239: aload         27
241: invokestatic  #48
244: dstore        30
246: new           #43
249: dup
250: dconst_1
251: ldc2_w        #44
254: invokespecial #46
257: astore        32
259: new           #43
262: dup
263: dconst_1
264: ldc2_w        #44
267: invokespecial #46
270: astore        33
272: new           #43
275: dup
276: dconst_1
277: ldc2_w        #44
280: invokespecial #46
283: astore        34
285: aload         33
287: aload         34
289: invokevirtual #47
292: dstore        35
294: aload         32
296: aload         34
298: invokestatic  #48
301: dstore        37
303: aload         32
305: invokevirtual #49
308: istore        39
310: aload         25
312: aload         32
314: invokevirtual #50
317: dstore        40
319: aload         32
321: invokevirtual #54
324: astore        42
326: new           #43
329: dup
330: dconst_1
331: ldc2_w        #44
334: invokespecial #46
337: astore        43
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: aload         43
354: aload         44
356: invokevirtual #47
359: dstore        45
361: aload         42
363: aload         43
365: invokevirtual #55
368: astore        47
370: aload         12
372: aload         47
374: invokevirtual #55
377: astore        48
379: aload         8
381: aload         47
383: invokevirtual #53
386: dstore        49
388: new           #43
391: dup
392: dconst_1
393: ldc2_w        #44
396: invokespecial #46
399: astore        51
401: aload         51
403: invokevirtual #136
406: dstore        52
408: aload         47
410: aload         51
412: invokevirtual #109
415: astore        54
417: new           #27
420: dup
421: aload         51
423: ldc2_w        #137
426: invokespecial #103
429: astore        55
431: aload         51
433: invokevirtual #261
436: dstore        56
438: aload_2
439: ldc2_w        #562
442: aload         51
444: invokevirtual #354
447: astore        58
449: new           #10
452: dup
453: invokespecial #11
456: ldc           #12
458: invokevirtual #13
461: dload_3
462: invokevirtual #60
465: ldc           #15
467: invokevirtual #13
470: dconst_0
471: invokevirtual #60
474: ldc           #12
476: invokevirtual #13
479: invokevirtual #16
482: dload_3
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #17
496: new           #10
499: dup
500: invokespecial #11
503: ldc           #12
505: invokevirtual #13
508: dload         5
510: invokevirtual #60
513: ldc           #15
515: invokevirtual #13
518: ldc2_w        #61
521: invokevirtual #60
524: ldc           #12
526: invokevirtual #13
529: invokevirtual #16
532: dload         5
534: ldc2_w        #61
537: dcmpl
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #17
549: new           #10
552: dup
553: invokespecial #11
556: ldc           #12
558: invokevirtual #13
561: dload         9
563: invokevirtual #60
566: ldc           #15
568: invokevirtual #13
571: dconst_0
572: invokevirtual #60
575: ldc           #12
577: invokevirtual #13
580: invokevirtual #16
583: dload         9
585: dconst_0
586: dcmpl
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #17
598: new           #10
601: dup
602: invokespecial #11
605: ldc           #12
607: invokevirtual #13
610: dload         13
612: invokevirtual #60
615: ldc           #15
617: invokevirtual #13
620: dconst_0
621: invokevirtual #60
624: ldc           #12
626: invokevirtual #13
629: invokevirtual #16
632: dload         13
634: dconst_0
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #17
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: dload         15
661: invokevirtual #60
664: ldc           #15
666: invokevirtual #13
669: ldc2_w        #61
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         15
685: ldc2_w        #61
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #17
700: new           #10
703: dup
704: invokespecial #11
707: ldc           #12
709: invokevirtual #13
712: dload         19
714: invokevirtual #60
717: ldc           #15
719: invokevirtual #13
722: dconst_0
723: invokevirtual #60
726: ldc           #12
728: invokevirtual #13
731: invokevirtual #16
734: dload         19
736: dconst_0
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #17
749: new           #10
752: dup
753: invokespecial #11
756: ldc           #12
758: invokevirtual #13
761: dload         21
763: invokevirtual #60
766: ldc           #15
768: invokevirtual #13
771: ldc2_w        #61
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         21
787: ldc2_w        #61
790: dcmpl
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #17
802: new           #10
805: dup
806: invokespecial #11
809: ldc           #12
811: invokevirtual #13
814: dload         23
816: invokevirtual #60
819: ldc           #15
821: invokevirtual #13
824: dconst_0
825: invokevirtual #60
828: ldc           #12
830: invokevirtual #13
833: invokevirtual #16
836: dload         23
838: dconst_0
839: dcmpl
840: ifne          847
843: iconst_1
844: goto          848
847: iconst_0
848: invokestatic  #17
851: new           #10
854: dup
855: invokespecial #11
858: ldc           #12
860: invokevirtual #13
863: dload         28
865: invokevirtual #60
868: ldc           #15
870: invokevirtual #13
873: dconst_0
874: invokevirtual #60
877: ldc           #12
879: invokevirtual #13
882: invokevirtual #16
885: dload         28
887: dconst_0
888: dcmpl
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #17
900: new           #10
903: dup
904: invokespecial #11
907: ldc           #12
909: invokevirtual #13
912: dload         30
914: invokevirtual #60
917: ldc           #15
919: invokevirtual #13
922: dconst_0
923: invokevirtual #60
926: ldc           #12
928: invokevirtual #13
931: invokevirtual #16
934: dload         30
936: dconst_0
937: dcmpl
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #17
949: new           #10
952: dup
953: invokespecial #11
956: ldc           #12
958: invokevirtual #13
961: dload         35
963: invokevirtual #60
966: ldc           #15
968: invokevirtual #13
971: dconst_0
972: invokevirtual #60
975: ldc           #12
977: invokevirtual #13
980: invokevirtual #16
983: dload         35
985: dconst_0
986: dcmpl
987: ifne          994
990: iconst_1
991: goto          995
994: iconst_0
995: invokestatic  #17
998: new           #10
1001: dup
1002: invokespecial #11
1005: ldc           #12
1007: invokevirtual #13
1010: dload         37
1012: invokevirtual #60
1015: ldc           #15
1017: invokevirtual #13
1020: dconst_0
1021: invokevirtual #60
1024: ldc           #12
1026: invokevirtual #13
1029: invokevirtual #16
1032: dload         37
1034: dconst_0
1035: dcmpl
1036: ifne          1043
1039: iconst_1
1040: goto          1044
1043: iconst_0
1044: invokestatic  #17
1047: new           #10
1050: dup
1051: invokespecial #11
1054: ldc           #12
1056: invokevirtual #13
1059: iload         39
1061: invokevirtual #14
1064: ldc           #15
1066: invokevirtual #13
1069: iconst_0
1070: invokevirtual #14
1073: ldc           #12
1075: invokevirtual #13
1078: invokevirtual #16
1081: iload         39
1083: ifne          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #17
1094: new           #10
1097: dup
1098: invokespecial #11
1101: ldc           #12
1103: invokevirtual #13
1106: dload         40
1108: invokevirtual #60
1111: ldc           #15
1113: invokevirtual #13
1116: dconst_0
1117: invokevirtual #60
1120: ldc           #12
1122: invokevirtual #13
1125: invokevirtual #16
1128: dload         40
1130: dconst_0
1131: dcmpl
1132: ifne          1139
1135: iconst_1
1136: goto          1140
1139: iconst_0
1140: invokestatic  #17
1143: aload         42
1145: invokestatic  #33
1148: new           #10
1151: dup
1152: invokespecial #11
1155: ldc           #12
1157: invokevirtual #13
1160: dload         45
1162: invokevirtual #60
1165: ldc           #15
1167: invokevirtual #13
1170: dconst_0
1171: invokevirtual #60
1174: ldc           #12
1176: invokevirtual #13
1179: invokevirtual #16
1182: dload         45
1184: dconst_0
1185: dcmpl
1186: ifne          1193
1189: iconst_1
1190: goto          1194
1193: iconst_0
1194: invokestatic  #17
1197: aload         47
1199: invokestatic  #33
1202: aload         48
1204: invokestatic  #33
1207: new           #10
1210: dup
1211: invokespecial #11
1214: ldc           #12
1216: invokevirtual #13
1219: dload         49
1221: invokevirtual #60
1224: ldc           #15
1226: invokevirtual #13
1229: ldc2_w        #63
1232: invokevirtual #60
1235: ldc           #12
1237: invokevirtual #13
1240: invokevirtual #16
1243: dload         49
1245: ldc2_w        #63
1248: dcmpl
1249: ifne          1256
1252: iconst_1
1253: goto          1257
1256: iconst_0
1257: invokestatic  #17
1260: new           #10
1263: dup
1264: invokespecial #11
1267: ldc           #12
1269: invokevirtual #13
1272: dload         52
1274: invokevirtual #60
1277: ldc           #15
1279: invokevirtual #13
1282: ldc2_w        #79
1285: invokevirtual #60
1288: ldc           #12
1290: invokevirtual #13
1293: invokevirtual #16
1296: dload         52
1298: ldc2_w        #79
1301: dcmpl
1302: ifne          1309
1305: iconst_1
1306: goto          1310
1309: iconst_0
1310: invokestatic  #17
1313: aload         54
1315: invokestatic  #33
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: dload         56
1332: invokevirtual #60
1335: ldc           #15
1337: invokevirtual #13
1340: dconst_1
1341: invokevirtual #60
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: dload         56
1354: dconst_1
1355: dcmpl
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: aload         58
1369: invokestatic  #33
1372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 8258
End line: 8340
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(1.0795745269752887E11d);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector87 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double88 = vector3D30.distanceInf(euclidean3DVector87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #564
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #425
499: invokevirtual #107
502: astore        64
504: aconst_null
505: astore        65
507: aload         20
509: aload         65
511: invokevirtual #47
514: dstore        66
516: ldc           #20
518: invokestatic  #21
521: goto          526
524: astore        66
526: new           #10
529: dup
530: invokespecial #11
533: ldc           #12
535: invokevirtual #13
538: dload         4
540: invokevirtual #60
543: ldc           #15
545: invokevirtual #13
548: dconst_0
549: invokevirtual #60
552: ldc           #12
554: invokevirtual #13
557: invokevirtual #16
560: dload         4
562: dconst_0
563: dcmpl
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #17
575: new           #10
578: dup
579: invokespecial #11
582: ldc           #12
584: invokevirtual #13
587: dload         6
589: invokevirtual #60
592: ldc           #15
594: invokevirtual #13
597: dconst_0
598: invokevirtual #60
601: ldc           #12
603: invokevirtual #13
606: invokevirtual #16
609: dload         6
611: dconst_0
612: dcmpl
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #17
624: new           #10
627: dup
628: invokespecial #11
631: ldc           #12
633: invokevirtual #13
636: dload         11
638: invokevirtual #60
641: ldc           #15
643: invokevirtual #13
646: dconst_0
647: invokevirtual #60
650: ldc           #12
652: invokevirtual #13
655: invokevirtual #16
658: dload         11
660: dconst_0
661: dcmpl
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #17
673: new           #10
676: dup
677: invokespecial #11
680: ldc           #12
682: invokevirtual #13
685: dload         13
687: invokevirtual #60
690: ldc           #15
692: invokevirtual #13
695: dconst_0
696: invokevirtual #60
699: ldc           #12
701: invokevirtual #13
704: invokevirtual #16
707: dload         13
709: dconst_0
710: dcmpl
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #17
722: new           #10
725: dup
726: invokespecial #11
729: ldc           #12
731: invokevirtual #13
734: iload         15
736: invokevirtual #14
739: ldc           #15
741: invokevirtual #13
744: iconst_0
745: invokevirtual #14
748: ldc           #12
750: invokevirtual #13
753: invokevirtual #16
756: iload         15
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #17
769: new           #10
772: dup
773: invokespecial #11
776: ldc           #12
778: invokevirtual #13
781: dload         16
783: invokevirtual #60
786: ldc           #15
788: invokevirtual #13
791: dconst_0
792: invokevirtual #60
795: ldc           #12
797: invokevirtual #13
800: invokevirtual #16
803: dload         16
805: dconst_0
806: dcmpl
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #17
818: aload         18
820: invokestatic  #33
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         21
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: dconst_0
846: invokevirtual #60
849: ldc           #12
851: invokevirtual #13
854: invokevirtual #16
857: dload         21
859: dconst_0
860: dcmpl
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #17
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         25
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         25
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         27
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: ldc2_w        #61
946: invokevirtual #60
949: ldc           #12
951: invokevirtual #13
954: invokevirtual #16
957: dload         27
959: ldc2_w        #61
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         31
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         31
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         33
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: ldc2_w        #61
1048: invokevirtual #60
1051: ldc           #12
1053: invokevirtual #13
1056: invokevirtual #16
1059: dload         33
1061: ldc2_w        #61
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         35
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: dconst_0
1099: invokevirtual #60
1102: ldc           #12
1104: invokevirtual #13
1107: invokevirtual #16
1110: dload         35
1112: dconst_0
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         40
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         40
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         42
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: dconst_0
1197: invokevirtual #60
1200: ldc           #12
1202: invokevirtual #13
1205: invokevirtual #16
1208: dload         42
1210: dconst_0
1211: dcmpl
1212: ifne          1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #17
1223: new           #10
1226: dup
1227: invokespecial #11
1230: ldc           #12
1232: invokevirtual #13
1235: dload         47
1237: invokevirtual #60
1240: ldc           #15
1242: invokevirtual #13
1245: dconst_0
1246: invokevirtual #60
1249: ldc           #12
1251: invokevirtual #13
1254: invokevirtual #16
1257: dload         47
1259: dconst_0
1260: dcmpl
1261: ifne          1268
1264: iconst_1
1265: goto          1269
1268: iconst_0
1269: invokestatic  #17
1272: new           #10
1275: dup
1276: invokespecial #11
1279: ldc           #12
1281: invokevirtual #13
1284: dload         49
1286: invokevirtual #60
1289: ldc           #15
1291: invokevirtual #13
1294: dconst_0
1295: invokevirtual #60
1298: ldc           #12
1300: invokevirtual #13
1303: invokevirtual #16
1306: dload         49
1308: dconst_0
1309: dcmpl
1310: ifne          1317
1313: iconst_1
1314: goto          1318
1317: iconst_0
1318: invokestatic  #17
1321: new           #10
1324: dup
1325: invokespecial #11
1328: ldc           #12
1330: invokevirtual #13
1333: iload         51
1335: invokevirtual #14
1338: ldc           #15
1340: invokevirtual #13
1343: iconst_0
1344: invokevirtual #14
1347: ldc           #12
1349: invokevirtual #13
1352: invokevirtual #16
1355: iload         51
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: dload         52
1382: invokevirtual #60
1385: ldc           #15
1387: invokevirtual #13
1390: dconst_0
1391: invokevirtual #60
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: dload         52
1404: dconst_0
1405: dcmpl
1406: ifne          1413
1409: iconst_1
1410: goto          1414
1413: iconst_0
1414: invokestatic  #17
1417: aload         54
1419: invokestatic  #33
1422: new           #10
1425: dup
1426: invokespecial #11
1429: ldc           #12
1431: invokevirtual #13
1434: dload         57
1436: invokevirtual #60
1439: ldc           #15
1441: invokevirtual #13
1444: dconst_0
1445: invokevirtual #60
1448: ldc           #12
1450: invokevirtual #13
1453: invokevirtual #16
1456: dload         57
1458: dconst_0
1459: dcmpl
1460: ifne          1467
1463: iconst_1
1464: goto          1468
1467: iconst_0
1468: invokestatic  #17
1471: aload         59
1473: invokestatic  #33
1476: aload         60
1478: invokestatic  #33
1481: new           #10
1484: dup
1485: invokespecial #11
1488: ldc           #12
1490: invokevirtual #13
1493: dload         61
1495: invokevirtual #60
1498: ldc           #15
1500: invokevirtual #13
1503: ldc2_w        #63
1506: invokevirtual #60
1509: ldc           #12
1511: invokevirtual #13
1514: invokevirtual #16
1517: dload         61
1519: ldc2_w        #63
1522: dcmpl
1523: ifne          1530
1526: iconst_1
1527: goto          1531
1530: iconst_0
1531: invokestatic  #17
1534: aload         64
1536: invokestatic  #33
1539: return
Exception table:
from    to  target type
507   521   524   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 8343
End line: 8355
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder6 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray7 = rotation5.getAngles(rotationOrder6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aconst_null
45: astore_2
46: aload_1
47: aload_2
48: invokevirtual #57
51: astore_3
52: ldc           #58
54: invokestatic  #21
57: goto          61
60: astore_3
61: return
Exception table:
from    to  target type
46    57    60   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 8358
End line: 8368
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Space space8 = vector3D7.getSpace();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(space8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: aload_3
55: invokevirtual #51
58: astore        4
60: aload_2
61: invokestatic  #33
64: aload_3
65: invokestatic  #33
68: aload         4
70: invokestatic  #33
73: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 8371
End line: 8462
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        double double98 = rotation94.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D99 = rotation94.getAxis();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #567
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         70
567: invokevirtual #95
570: dstore        75
572: aload         70
574: invokevirtual #96
577: astore        77
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         4
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         4
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         6
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         6
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         11
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         11
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         13
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         13
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         15
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         15
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         16
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         16
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         18
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         21
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         21
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         25
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         25
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         27
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         27
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         31
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         31
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         33
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         33
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         35
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         35
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         40
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         40
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         42
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         42
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         47
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         47
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         49
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         49
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         51
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         51
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         52
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         52
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         54
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         57
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         57
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         59
1526: invokestatic  #33
1529: aload         60
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         61
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         61
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: aload         64
1589: invokestatic  #33
1592: new           #10
1595: dup
1596: invokespecial #11
1599: ldc           #12
1601: invokevirtual #13
1604: dload         65
1606: invokevirtual #60
1609: ldc           #15
1611: invokevirtual #13
1614: dconst_0
1615: invokevirtual #60
1618: ldc           #12
1620: invokevirtual #13
1623: invokevirtual #16
1626: dload         65
1628: dconst_0
1629: dcmpl
1630: ifne          1637
1633: iconst_1
1634: goto          1638
1637: iconst_0
1638: invokestatic  #17
1641: new           #10
1644: dup
1645: invokespecial #11
1648: ldc           #12
1650: invokevirtual #13
1653: dload         67
1655: invokevirtual #60
1658: ldc           #15
1660: invokevirtual #13
1663: dconst_0
1664: invokevirtual #60
1667: ldc           #12
1669: invokevirtual #13
1672: invokevirtual #16
1675: dload         67
1677: dconst_0
1678: dcmpl
1679: ifne          1686
1682: iconst_1
1683: goto          1687
1686: iconst_0
1687: invokestatic  #17
1690: aload         69
1692: invokestatic  #33
1695: aload         71
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         72
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #148
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         72
1738: ldc2_w        #148
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: aload         74
1755: invokestatic  #33
1758: new           #10
1761: dup
1762: invokespecial #11
1765: ldc           #12
1767: invokevirtual #13
1770: dload         75
1772: invokevirtual #60
1775: ldc           #15
1777: invokevirtual #13
1780: dconst_1
1781: invokevirtual #60
1784: ldc           #12
1786: invokevirtual #13
1789: invokevirtual #16
1792: dload         75
1794: dconst_1
1795: dcmpl
1796: ifne          1803
1799: iconst_1
1800: goto          1804
1803: iconst_0
1804: invokestatic  #17
1807: aload         77
1809: invokestatic  #33
1812: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 8465
End line: 8501
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double31 = vector3D2.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D20.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D20, vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D20, (double) 52.0f);
        double double37 = rotation36.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.3057624914054009d) + "'", double37 == (-0.3057624914054009d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #568
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: new           #43
84: dup
85: dconst_1
86: ldc2_w        #44
89: invokespecial #46
92: astore        7
94: aload         6
96: aload         7
98: invokevirtual #47
101: dstore        8
103: aload         5
105: aload         7
107: invokestatic  #48
110: dstore        10
112: new           #43
115: dup
116: dconst_1
117: ldc2_w        #44
120: invokespecial #46
123: astore        12
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        13
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        14
151: aload         13
153: aload         14
155: invokevirtual #47
158: dstore        15
160: aload         12
162: aload         14
164: invokestatic  #48
167: dstore        17
169: aload         12
171: invokevirtual #49
174: istore        19
176: aload         5
178: aload         12
180: invokevirtual #50
183: dstore        20
185: aload_1
186: aload         12
188: invokevirtual #129
191: dstore        22
193: aload         12
195: invokevirtual #54
198: astore        24
200: getstatic     #314
203: astore        25
205: aload         12
207: aload         25
209: invokestatic  #128
212: dstore        26
214: new           #27
217: dup
218: aload         12
220: ldc2_w        #297
223: invokespecial #103
226: astore        28
228: aload         28
230: invokevirtual #94
233: dstore        29
235: new           #10
238: dup
239: invokespecial #11
242: ldc           #12
244: invokevirtual #13
247: dload_3
248: invokevirtual #60
251: ldc           #15
253: invokevirtual #13
256: dconst_0
257: invokevirtual #60
260: ldc           #12
262: invokevirtual #13
265: invokevirtual #16
268: dload_3
269: dconst_0
270: dcmpl
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #17
282: new           #10
285: dup
286: invokespecial #11
289: ldc           #12
291: invokevirtual #13
294: dload         8
296: invokevirtual #60
299: ldc           #15
301: invokevirtual #13
304: dconst_0
305: invokevirtual #60
308: ldc           #12
310: invokevirtual #13
313: invokevirtual #16
316: dload         8
318: dconst_0
319: dcmpl
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #17
331: new           #10
334: dup
335: invokespecial #11
338: ldc           #12
340: invokevirtual #13
343: dload         10
345: invokevirtual #60
348: ldc           #15
350: invokevirtual #13
353: dconst_0
354: invokevirtual #60
357: ldc           #12
359: invokevirtual #13
362: invokevirtual #16
365: dload         10
367: dconst_0
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #17
380: new           #10
383: dup
384: invokespecial #11
387: ldc           #12
389: invokevirtual #13
392: dload         15
394: invokevirtual #60
397: ldc           #15
399: invokevirtual #13
402: dconst_0
403: invokevirtual #60
406: ldc           #12
408: invokevirtual #13
411: invokevirtual #16
414: dload         15
416: dconst_0
417: dcmpl
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #17
429: new           #10
432: dup
433: invokespecial #11
436: ldc           #12
438: invokevirtual #13
441: dload         17
443: invokevirtual #60
446: ldc           #15
448: invokevirtual #13
451: dconst_0
452: invokevirtual #60
455: ldc           #12
457: invokevirtual #13
460: invokevirtual #16
463: dload         17
465: dconst_0
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #17
478: new           #10
481: dup
482: invokespecial #11
485: ldc           #12
487: invokevirtual #13
490: iload         19
492: invokevirtual #14
495: ldc           #15
497: invokevirtual #13
500: iconst_0
501: invokevirtual #14
504: ldc           #12
506: invokevirtual #13
509: invokevirtual #16
512: iload         19
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #17
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         20
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         20
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: new           #10
577: dup
578: invokespecial #11
581: ldc           #12
583: invokevirtual #13
586: dload         22
588: invokevirtual #60
591: ldc           #15
593: invokevirtual #13
596: dconst_0
597: invokevirtual #60
600: ldc           #12
602: invokevirtual #13
605: invokevirtual #16
608: dload         22
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: aload         24
625: invokestatic  #33
628: aload         25
630: invokestatic  #33
633: dload         26
635: invokestatic  #242
638: invokestatic  #243
641: new           #10
644: dup
645: invokespecial #11
648: ldc           #12
650: invokevirtual #13
653: dload         29
655: invokevirtual #60
658: ldc           #15
660: invokevirtual #13
663: ldc2_w        #569
666: invokevirtual #60
669: ldc           #12
671: invokevirtual #13
674: invokevirtual #16
677: dload         29
679: ldc2_w        #569
682: dcmpl
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #17
694: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 8504
End line: 8565
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        double[] doubleArray2 = new double[] { (byte) 1 };
        double[] doubleArray3 = new double[] {};
        boolean boolean4 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray2, doubleArray3);
        double[] doubleArray6 = new double[] { (byte) 1 };
        double[] doubleArray7 = new double[] {};
        boolean boolean8 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray6, doubleArray7);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray6);
        boolean boolean10 = org.apache.commons.math.util.MathUtils.equals(doubleArray3, doubleArray6);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection11 = org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING;
        double[] doubleArray13 = new double[] { (byte) 1 };
        double[] doubleArray14 = new double[] {};
        boolean boolean15 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray13, doubleArray14);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection16 = null;
        double[] doubleArray18 = new double[] { 0 };
        double[] doubleArray20 = new double[] { 0 };
        double[] doubleArray22 = new double[] { 0 };
        double[] doubleArray24 = new double[] { 0 };
        double[] doubleArray26 = new double[] { 0 };
        double[][] doubleArray27 = new double[][] { doubleArray18, doubleArray20, doubleArray22, doubleArray24, doubleArray26 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray13, orderDirection16, doubleArray27);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray6, orderDirection11, doubleArray27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException(localizable0, (java.lang.Object[]) doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation32 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray27, (double) 9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + orderDirection11 + "' != '" + org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING + "'", orderDirection11.equals(org.apache.commons.math.util.MathUtils.OrderDirection.INCREASING));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #571
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: newarray       double
30: dup
31: iconst_0
32: dconst_1
33: dastore
34: astore_2
35: iconst_0
36: newarray       double
38: astore_3
39: aload_2
40: aload_3
41: invokestatic  #24
44: istore        4
46: iconst_1
47: newarray       double
49: dup
50: iconst_0
51: dconst_1
52: dastore
53: astore        5
55: iconst_0
56: newarray       double
58: astore        6
60: aload         5
62: aload         6
64: invokestatic  #24
67: istore        7
69: aload         5
71: invokestatic  #337
74: aload_3
75: aload         5
77: invokestatic  #338
80: istore        8
82: getstatic     #341
85: astore        9
87: iconst_1
88: newarray       double
90: dup
91: iconst_0
92: dconst_1
93: dastore
94: astore        10
96: iconst_0
97: newarray       double
99: astore        11
101: aload         10
103: aload         11
105: invokestatic  #24
108: istore        12
110: aconst_null
111: astore        13
113: iconst_1
114: newarray       double
116: dup
117: iconst_0
118: dconst_0
119: dastore
120: astore        14
122: iconst_1
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: astore        15
131: iconst_1
132: newarray       double
134: dup
135: iconst_0
136: dconst_0
137: dastore
138: astore        16
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: dconst_0
146: dastore
147: astore        17
149: iconst_1
150: newarray       double
152: dup
153: iconst_0
154: dconst_0
155: dastore
156: astore        18
158: iconst_5
159: anewarray     #25
162: dup
163: iconst_0
164: aload         14
166: aastore
167: dup
168: iconst_1
169: aload         15
171: aastore
172: dup
173: iconst_2
174: aload         16
176: aastore
177: dup
178: iconst_3
179: aload         17
181: aastore
182: dup
183: iconst_4
184: aload         18
186: aastore
187: astore        19
189: aload         10
191: aload         13
193: aload         19
195: invokestatic  #26
198: aload         5
200: aload         9
202: aload         19
204: invokestatic  #26
207: new           #265
210: dup
211: aload_1
212: aload         19
214: checkcast     #248
217: invokespecial #266
220: astore        20
222: new           #27
225: dup
226: aload         19
228: ldc2_w        #572
231: invokespecial #30
234: astore        21
236: ldc           #31
238: invokestatic  #21
241: goto          246
244: astore        21
246: aload_2
247: invokestatic  #33
250: aload_2
251: invokestatic  #34
254: ldc           #35
256: invokestatic  #36
259: aload_3
260: invokestatic  #33
263: aload_3
264: invokestatic  #34
267: ldc           #37
269: invokestatic  #36
272: new           #10
275: dup
276: invokespecial #11
279: ldc           #12
281: invokevirtual #13
284: iload         4
286: invokevirtual #14
289: ldc           #15
291: invokevirtual #13
294: iconst_0
295: invokevirtual #14
298: ldc           #12
300: invokevirtual #13
303: invokevirtual #16
306: iload         4
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #17
319: aload         5
321: invokestatic  #33
324: aload         5
326: invokestatic  #34
329: ldc           #35
331: invokestatic  #36
334: aload         6
336: invokestatic  #33
339: aload         6
341: invokestatic  #34
344: ldc           #37
346: invokestatic  #36
349: new           #10
352: dup
353: invokespecial #11
356: ldc           #12
358: invokevirtual #13
361: iload         7
363: invokevirtual #14
366: ldc           #15
368: invokevirtual #13
371: iconst_0
372: invokevirtual #14
375: ldc           #12
377: invokevirtual #13
380: invokevirtual #16
383: iload         7
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #17
396: new           #10
399: dup
400: invokespecial #11
403: ldc           #12
405: invokevirtual #13
408: iload         8
410: invokevirtual #14
413: ldc           #15
415: invokevirtual #13
418: iconst_0
419: invokevirtual #14
422: ldc           #12
424: invokevirtual #13
427: invokevirtual #16
430: iload         8
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #17
443: new           #10
446: dup
447: invokespecial #11
450: ldc           #12
452: invokevirtual #13
455: aload         9
457: invokevirtual #348
460: ldc           #15
462: invokevirtual #13
465: getstatic     #341
468: invokevirtual #348
471: ldc           #12
473: invokevirtual #13
476: invokevirtual #16
479: aload         9
481: getstatic     #341
484: invokevirtual #349
487: invokestatic  #17
490: aload         10
492: invokestatic  #33
495: aload         10
497: invokestatic  #34
500: ldc           #35
502: invokestatic  #36
505: aload         11
507: invokestatic  #33
510: aload         11
512: invokestatic  #34
515: ldc           #37
517: invokestatic  #36
520: new           #10
523: dup
524: invokespecial #11
527: ldc           #12
529: invokevirtual #13
532: iload         12
534: invokevirtual #14
537: ldc           #15
539: invokevirtual #13
542: iconst_0
543: invokevirtual #14
546: ldc           #12
548: invokevirtual #13
551: invokevirtual #16
554: iload         12
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #17
567: aload         14
569: invokestatic  #33
572: aload         14
574: invokestatic  #34
577: ldc           #38
579: invokestatic  #36
582: aload         15
584: invokestatic  #33
587: aload         15
589: invokestatic  #34
592: ldc           #38
594: invokestatic  #36
597: aload         16
599: invokestatic  #33
602: aload         16
604: invokestatic  #34
607: ldc           #38
609: invokestatic  #36
612: aload         17
614: invokestatic  #33
617: aload         17
619: invokestatic  #34
622: ldc           #38
624: invokestatic  #36
627: aload         18
629: invokestatic  #33
632: aload         18
634: invokestatic  #34
637: ldc           #38
639: invokestatic  #36
642: aload         19
644: invokestatic  #33
647: return
Exception table:
from    to  target type
222   241   244   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 8568
End line: 8601
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        boolean boolean17 = vector3D8.isInfinite();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = vector3D8.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector19 = vector3D3.subtract(0.0d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 30, vector3D3);
        double double21 = vector3D3.getX();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation27 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = rotation27.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector30 = vector3D29.normalize();
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.angle(vector3D3, vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D29.orthogonal();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(euclidean3DVector19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.4009692518823901d + "'", double21 == 0.4009692518823901d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(euclidean3DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.983370962257916d + "'", double31 == 1.983370962257916d);
        org.junit.Assert.assertNotNull(vector3D32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #574
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: aload_1
38: invokevirtual #261
41: dstore_2
42: new           #43
45: dup
46: dconst_1
47: ldc2_w        #44
50: invokespecial #46
53: astore        4
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         4
92: aload         6
94: invokestatic  #48
97: dstore        9
99: aload         4
101: invokevirtual #49
104: istore        11
106: aload         4
108: invokevirtual #54
111: astore        12
113: aload_1
114: dconst_0
115: aload         12
117: invokevirtual #354
120: astore        13
122: new           #43
125: dup
126: ldc2_w        #121
129: aload_1
130: invokespecial #305
133: astore        14
135: aload_1
136: invokevirtual #99
139: dstore        15
141: new           #27
144: dup
145: ldc2_w        #146
148: ldc2_w        #72
151: ldc2_w        #148
154: dconst_1
155: iconst_0
156: invokespecial #150
159: astore        17
161: aload         17
163: invokevirtual #96
166: astore        18
168: aload         17
170: invokevirtual #96
173: astore        19
175: aload         19
177: invokevirtual #193
180: astore        20
182: aload_1
183: aload         19
185: invokestatic  #363
188: dstore        21
190: aload         19
192: invokevirtual #163
195: astore        23
197: new           #10
200: dup
201: invokespecial #11
204: ldc           #12
206: invokevirtual #13
209: dload_2
210: invokevirtual #60
213: ldc           #15
215: invokevirtual #13
218: dconst_1
219: invokevirtual #60
222: ldc           #12
224: invokevirtual #13
227: invokevirtual #16
230: dload_2
231: dconst_1
232: dcmpl
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #17
244: new           #10
247: dup
248: invokespecial #11
251: ldc           #12
253: invokevirtual #13
256: dload         7
258: invokevirtual #60
261: ldc           #15
263: invokevirtual #13
266: dconst_0
267: invokevirtual #60
270: ldc           #12
272: invokevirtual #13
275: invokevirtual #16
278: dload         7
280: dconst_0
281: dcmpl
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #17
293: new           #10
296: dup
297: invokespecial #11
300: ldc           #12
302: invokevirtual #13
305: dload         9
307: invokevirtual #60
310: ldc           #15
312: invokevirtual #13
315: dconst_0
316: invokevirtual #60
319: ldc           #12
321: invokevirtual #13
324: invokevirtual #16
327: dload         9
329: dconst_0
330: dcmpl
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #17
342: new           #10
345: dup
346: invokespecial #11
349: ldc           #12
351: invokevirtual #13
354: iload         11
356: invokevirtual #14
359: ldc           #15
361: invokevirtual #13
364: iconst_0
365: invokevirtual #14
368: ldc           #12
370: invokevirtual #13
373: invokevirtual #16
376: iload         11
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #17
389: aload         12
391: invokestatic  #33
394: aload         13
396: invokestatic  #33
399: new           #10
402: dup
403: invokespecial #11
406: ldc           #12
408: invokevirtual #13
411: dload         15
413: invokevirtual #60
416: ldc           #15
418: invokevirtual #13
421: ldc2_w        #471
424: invokevirtual #60
427: ldc           #12
429: invokevirtual #13
432: invokevirtual #16
435: dload         15
437: ldc2_w        #471
440: dcmpl
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #17
452: aload         18
454: invokestatic  #33
457: aload         19
459: invokestatic  #33
462: aload         20
464: invokestatic  #33
467: new           #10
470: dup
471: invokespecial #11
474: ldc           #12
476: invokevirtual #13
479: dload         21
481: invokevirtual #60
484: ldc           #15
486: invokevirtual #13
489: ldc2_w        #575
492: invokevirtual #60
495: ldc           #12
497: invokevirtual #13
500: invokevirtual #16
503: dload         21
505: ldc2_w        #575
508: dcmpl
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #17
520: aload         23
522: invokestatic  #33
525: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 8604
End line: 8646
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector33 = vector3D7.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D7, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = rotation5.applyInverseTo(rotation35);
        double[][] doubleArray37 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation39 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray37, 1.916729449409635d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(euclidean3DVector33);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: getstatic     #126
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: new           #43
69: dup
70: dconst_1
71: ldc2_w        #44
74: invokespecial #46
77: astore        5
79: new           #43
82: dup
83: dconst_1
84: ldc2_w        #44
87: invokespecial #46
90: astore        6
92: aload         5
94: aload         6
96: invokevirtual #47
99: dstore        7
101: aload         4
103: aload         6
105: invokestatic  #48
108: dstore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        11
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        12
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        13
149: aload         12
151: aload         13
153: invokevirtual #47
156: dstore        14
158: aload         11
160: aload         13
162: invokestatic  #48
165: dstore        16
167: aload         11
169: invokevirtual #49
172: istore        18
174: aload         4
176: aload         11
178: invokevirtual #50
181: dstore        19
183: aload         11
185: invokevirtual #54
188: astore        21
190: aload_3
191: aload         21
193: invokevirtual #55
196: astore        22
198: new           #27
201: dup
202: aload_3
203: ldc2_w        #72
206: invokespecial #103
209: astore        23
211: aload_1
212: aload         23
214: invokevirtual #474
217: astore        24
219: aload_1
220: invokevirtual #222
223: astore        25
225: new           #27
228: dup
229: aload         25
231: ldc2_w        #578
234: invokespecial #30
237: astore        26
239: ldc_w         #580
242: invokestatic  #21
245: goto          250
248: astore        26
250: aload_2
251: invokestatic  #33
254: aload_3
255: invokestatic  #33
258: new           #10
261: dup
262: invokespecial #11
265: ldc           #12
267: invokevirtual #13
270: dload         7
272: invokevirtual #60
275: ldc           #15
277: invokevirtual #13
280: dconst_0
281: invokevirtual #60
284: ldc           #12
286: invokevirtual #13
289: invokevirtual #16
292: dload         7
294: dconst_0
295: dcmpl
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #17
307: new           #10
310: dup
311: invokespecial #11
314: ldc           #12
316: invokevirtual #13
319: dload         9
321: invokevirtual #60
324: ldc           #15
326: invokevirtual #13
329: dconst_0
330: invokevirtual #60
333: ldc           #12
335: invokevirtual #13
338: invokevirtual #16
341: dload         9
343: dconst_0
344: dcmpl
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #17
356: new           #10
359: dup
360: invokespecial #11
363: ldc           #12
365: invokevirtual #13
368: dload         14
370: invokevirtual #60
373: ldc           #15
375: invokevirtual #13
378: dconst_0
379: invokevirtual #60
382: ldc           #12
384: invokevirtual #13
387: invokevirtual #16
390: dload         14
392: dconst_0
393: dcmpl
394: ifne          401
397: iconst_1
398: goto          402
401: iconst_0
402: invokestatic  #17
405: new           #10
408: dup
409: invokespecial #11
412: ldc           #12
414: invokevirtual #13
417: dload         16
419: invokevirtual #60
422: ldc           #15
424: invokevirtual #13
427: dconst_0
428: invokevirtual #60
431: ldc           #12
433: invokevirtual #13
436: invokevirtual #16
439: dload         16
441: dconst_0
442: dcmpl
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #17
454: new           #10
457: dup
458: invokespecial #11
461: ldc           #12
463: invokevirtual #13
466: iload         18
468: invokevirtual #14
471: ldc           #15
473: invokevirtual #13
476: iconst_0
477: invokevirtual #14
480: ldc           #12
482: invokevirtual #13
485: invokevirtual #16
488: iload         18
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #17
501: new           #10
504: dup
505: invokespecial #11
508: ldc           #12
510: invokevirtual #13
513: dload         19
515: invokevirtual #60
518: ldc           #15
520: invokevirtual #13
523: dconst_0
524: invokevirtual #60
527: ldc           #12
529: invokevirtual #13
532: invokevirtual #16
535: dload         19
537: dconst_0
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #17
550: aload         21
552: invokestatic  #33
555: aload         22
557: invokestatic  #33
560: aload         24
562: invokestatic  #33
565: aload         25
567: invokestatic  #33
570: return
Exception table:
from    to  target type
225   245   248   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 8649
End line: 8657
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.999999999999999E69d, 0.7591741244664781d, (-9.033252629052738d), 1.7160033436347992d, true);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = rotation5.revert();
        double double7 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.7160033436347995E-70d + "'", double7 == 1.7160033436347995E-70d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #581
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #582
32: ldc2_w        #584
35: ldc2_w        #535
38: ldc2_w        #586
41: iconst_1
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #93
50: astore_2
51: aload_1
52: invokevirtual #95
55: dstore_3
56: aload_2
57: invokestatic  #33
60: new           #10
63: dup
64: invokespecial #11
67: ldc           #12
69: invokevirtual #13
72: dload_3
73: invokevirtual #60
76: ldc           #15
78: invokevirtual #13
81: ldc2_w        #588
84: invokevirtual #60
87: ldc           #12
89: invokevirtual #13
92: invokevirtual #16
95: dload_3
96: ldc2_w        #588
99: dcmpl
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #17
111: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 8660
End line: 8722
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        boolean boolean12 = vector3D3.isInfinite();
        double double13 = vector3D3.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = vector3D19.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = vector3D27.getDelta();
        double double30 = vector3D19.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double40 = vector3D36.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D39);
        double double41 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D33, vector3D39);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double51 = vector3D47.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D50);
        double double52 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D44, vector3D50);
        boolean boolean53 = vector3D44.isInfinite();
        double double54 = vector3D33.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = vector3D44.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D58.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D55.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D58);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = vector3D19.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D3, vector3D19);
        double[][] doubleArray66 = rotation65.getMatrix();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException67 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray66);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation69 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray66, 0.8657694832396587d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.6957086881730823d + "'", double13 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.7345682747147468d + "'", double21 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.7345682747147468d + "'", double29 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(doubleArray66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #590
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #43
30: dup
31: dconst_1
32: ldc2_w        #44
35: invokespecial #46
38: astore_2
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_3
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore        4
64: aload_3
65: aload         4
67: invokevirtual #47
70: dstore        5
72: aload_2
73: aload         4
75: invokestatic  #48
78: dstore        7
80: aload_2
81: invokevirtual #49
84: istore        9
86: aload_2
87: invokevirtual #162
90: dstore        10
92: new           #43
95: dup
96: dconst_1
97: ldc2_w        #44
100: invokespecial #46
103: astore        12
105: new           #43
108: dup
109: dconst_1
110: ldc2_w        #44
113: invokespecial #46
116: astore        13
118: aload         12
120: aload         13
122: invokevirtual #47
125: dstore        14
127: aload         13
129: invokevirtual #52
132: dstore        16
134: new           #43
137: dup
138: dconst_1
139: ldc2_w        #44
142: invokespecial #46
145: astore        18
147: new           #43
150: dup
151: dconst_1
152: ldc2_w        #44
155: invokespecial #46
158: astore        19
160: aload         18
162: aload         19
164: invokevirtual #47
167: dstore        20
169: aload         19
171: invokevirtual #52
174: dstore        22
176: aload         13
178: aload         19
180: invokevirtual #53
183: dstore        24
185: new           #43
188: dup
189: dconst_1
190: ldc2_w        #44
193: invokespecial #46
196: astore        26
198: new           #43
201: dup
202: dconst_1
203: ldc2_w        #44
206: invokespecial #46
209: astore        27
211: new           #43
214: dup
215: dconst_1
216: ldc2_w        #44
219: invokespecial #46
222: astore        28
224: aload         27
226: aload         28
228: invokevirtual #47
231: dstore        29
233: aload         26
235: aload         28
237: invokestatic  #48
240: dstore        31
242: new           #43
245: dup
246: dconst_1
247: ldc2_w        #44
250: invokespecial #46
253: astore        33
255: new           #43
258: dup
259: dconst_1
260: ldc2_w        #44
263: invokespecial #46
266: astore        34
268: new           #43
271: dup
272: dconst_1
273: ldc2_w        #44
276: invokespecial #46
279: astore        35
281: aload         34
283: aload         35
285: invokevirtual #47
288: dstore        36
290: aload         33
292: aload         35
294: invokestatic  #48
297: dstore        38
299: aload         33
301: invokevirtual #49
304: istore        40
306: aload         26
308: aload         33
310: invokevirtual #50
313: dstore        41
315: aload         33
317: invokevirtual #54
320: astore        43
322: new           #43
325: dup
326: dconst_1
327: ldc2_w        #44
330: invokespecial #46
333: astore        44
335: new           #43
338: dup
339: dconst_1
340: ldc2_w        #44
343: invokespecial #46
346: astore        45
348: aload         44
350: aload         45
352: invokevirtual #47
355: dstore        46
357: aload         43
359: aload         44
361: invokevirtual #55
364: astore        48
366: aload         13
368: aload         48
370: invokevirtual #55
373: astore        49
375: new           #27
378: dup
379: aload_2
380: aload         13
382: invokespecial #56
385: astore        50
387: aload         50
389: invokevirtual #222
392: astore        51
394: new           #247
397: dup
398: aload_1
399: aload         51
401: checkcast     #248
404: invokespecial #249
407: astore        52
409: new           #27
412: dup
413: aload         51
415: ldc2_w        #591
418: invokespecial #30
421: astore        53
423: new           #10
426: dup
427: invokespecial #11
430: ldc           #12
432: invokevirtual #13
435: dload         5
437: invokevirtual #60
440: ldc           #15
442: invokevirtual #13
445: dconst_0
446: invokevirtual #60
449: ldc           #12
451: invokevirtual #13
454: invokevirtual #16
457: dload         5
459: dconst_0
460: dcmpl
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #17
472: new           #10
475: dup
476: invokespecial #11
479: ldc           #12
481: invokevirtual #13
484: dload         7
486: invokevirtual #60
489: ldc           #15
491: invokevirtual #13
494: dconst_0
495: invokevirtual #60
498: ldc           #12
500: invokevirtual #13
503: invokevirtual #16
506: dload         7
508: dconst_0
509: dcmpl
510: ifne          517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #17
521: new           #10
524: dup
525: invokespecial #11
528: ldc           #12
530: invokevirtual #13
533: iload         9
535: invokevirtual #14
538: ldc           #15
540: invokevirtual #13
543: iconst_0
544: invokevirtual #14
547: ldc           #12
549: invokevirtual #13
552: invokevirtual #16
555: iload         9
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #17
568: new           #10
571: dup
572: invokespecial #11
575: ldc           #12
577: invokevirtual #13
580: dload         10
582: invokevirtual #60
585: ldc           #15
587: invokevirtual #13
590: ldc2_w        #167
593: invokevirtual #60
596: ldc           #12
598: invokevirtual #13
601: invokevirtual #16
604: dload         10
606: ldc2_w        #167
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         14
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         14
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         16
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: ldc2_w        #61
695: invokevirtual #60
698: ldc           #12
700: invokevirtual #13
703: invokevirtual #16
706: dload         16
708: ldc2_w        #61
711: dcmpl
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #17
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: dload         20
737: invokevirtual #60
740: ldc           #15
742: invokevirtual #13
745: dconst_0
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         20
759: dconst_0
760: dcmpl
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         22
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: ldc2_w        #61
797: invokevirtual #60
800: ldc           #12
802: invokevirtual #13
805: invokevirtual #16
808: dload         22
810: ldc2_w        #61
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #17
825: new           #10
828: dup
829: invokespecial #11
832: ldc           #12
834: invokevirtual #13
837: dload         24
839: invokevirtual #60
842: ldc           #15
844: invokevirtual #13
847: dconst_0
848: invokevirtual #60
851: ldc           #12
853: invokevirtual #13
856: invokevirtual #16
859: dload         24
861: dconst_0
862: dcmpl
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #17
874: new           #10
877: dup
878: invokespecial #11
881: ldc           #12
883: invokevirtual #13
886: dload         29
888: invokevirtual #60
891: ldc           #15
893: invokevirtual #13
896: dconst_0
897: invokevirtual #60
900: ldc           #12
902: invokevirtual #13
905: invokevirtual #16
908: dload         29
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #17
923: new           #10
926: dup
927: invokespecial #11
930: ldc           #12
932: invokevirtual #13
935: dload         31
937: invokevirtual #60
940: ldc           #15
942: invokevirtual #13
945: dconst_0
946: invokevirtual #60
949: ldc           #12
951: invokevirtual #13
954: invokevirtual #16
957: dload         31
959: dconst_0
960: dcmpl
961: ifne          968
964: iconst_1
965: goto          969
968: iconst_0
969: invokestatic  #17
972: new           #10
975: dup
976: invokespecial #11
979: ldc           #12
981: invokevirtual #13
984: dload         36
986: invokevirtual #60
989: ldc           #15
991: invokevirtual #13
994: dconst_0
995: invokevirtual #60
998: ldc           #12
1000: invokevirtual #13
1003: invokevirtual #16
1006: dload         36
1008: dconst_0
1009: dcmpl
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #17
1021: new           #10
1024: dup
1025: invokespecial #11
1028: ldc           #12
1030: invokevirtual #13
1033: dload         38
1035: invokevirtual #60
1038: ldc           #15
1040: invokevirtual #13
1043: dconst_0
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         38
1057: dconst_0
1058: dcmpl
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #17
1070: new           #10
1073: dup
1074: invokespecial #11
1077: ldc           #12
1079: invokevirtual #13
1082: iload         40
1084: invokevirtual #14
1087: ldc           #15
1089: invokevirtual #13
1092: iconst_0
1093: invokevirtual #14
1096: ldc           #12
1098: invokevirtual #13
1101: invokevirtual #16
1104: iload         40
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #17
1117: new           #10
1120: dup
1121: invokespecial #11
1124: ldc           #12
1126: invokevirtual #13
1129: dload         41
1131: invokevirtual #60
1134: ldc           #15
1136: invokevirtual #13
1139: dconst_0
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         41
1153: dconst_0
1154: dcmpl
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #17
1166: aload         43
1168: invokestatic  #33
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         46
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         46
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: aload         48
1222: invokestatic  #33
1225: aload         49
1227: invokestatic  #33
1230: aload         51
1232: invokestatic  #33
1235: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 8725
End line: 8739
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.999999999999999E69d, 0.7591741244664781d, (-9.033252629052738d), 1.7160033436347992d, true);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double8 = vector3D6.distanceInf(euclidean3DVector7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #582
32: ldc2_w        #584
35: ldc2_w        #535
38: ldc2_w        #586
41: iconst_1
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #96
50: astore_2
51: aconst_null
52: astore_3
53: aload_2
54: aload_3
55: invokevirtual #47
58: dstore        4
60: ldc           #20
62: invokestatic  #21
65: goto          70
68: astore        4
70: aload_2
71: invokestatic  #33
74: return
Exception table:
from    to  target type
53    65    68   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 8742
End line: 8748
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((-103.27892990343184d), 0.0d, (double) 18.0f, (-1.5707963267948966d), true);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #594
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #595
32: dconst_0
33: ldc2_w        #512
36: ldc2_w        #597
39: iconst_1
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_2
50: invokestatic  #33
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 8751
End line: 8757
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.1102230246251565E-16d, (-0.45054953406980713d), 20.796610300773242d, (double) 0, true);
        double double6 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.141592653589793d + "'", double6 == 3.141592653589793d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #599
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #600
32: ldc2_w        #602
35: ldc2_w        #604
38: dconst_0
39: iconst_1
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #240
48: dstore_2
49: new           #10
52: dup
53: invokespecial #11
56: ldc           #12
58: invokevirtual #13
61: dload_2
62: invokevirtual #60
65: ldc           #15
67: invokevirtual #13
70: ldc2_w        #207
73: invokevirtual #60
76: ldc           #12
78: invokevirtual #13
81: invokevirtual #16
84: dload_2
85: ldc2_w        #207
88: dcmpl
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #17
100: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 8760
End line: 8766
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.1102230246251565E-16d, (-0.45054953406980713d), 20.796610300773242d, (double) 0, true);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #606
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #600
32: ldc2_w        #602
35: ldc2_w        #604
38: dconst_0
39: iconst_1
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #93
48: astore_2
49: aload_2
50: invokestatic  #33
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 8769
End line: 8852
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.Space space32 = vector3D21.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        double double56 = vector3D45.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double66 = vector3D62.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        double double67 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D59, vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double77 = vector3D73.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        double double78 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D70, vector3D76);
        boolean boolean79 = vector3D70.isInfinite();
        double double80 = vector3D59.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D70.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double88 = vector3D84.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D81.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D45.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        double double91 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation92 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D21, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation7.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector94 = vector3D0.subtract((-1024.0d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = vector3D0.scalarMultiply(147.4131591025766d);
        double double97 = vector3D96.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(space32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0000000000000002d + "'", double91 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(euclidean3DVector94);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #607
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #314
28: astore_1
29: new           #27
32: dup
33: ldc2_w        #146
36: ldc2_w        #72
39: ldc2_w        #148
42: dconst_1
43: iconst_0
44: invokespecial #150
47: astore_2
48: new           #43
51: dup
52: dconst_1
53: ldc2_w        #44
56: invokespecial #46
59: astore_3
60: new           #43
63: dup
64: dconst_1
65: ldc2_w        #44
68: invokespecial #46
71: astore        4
73: new           #43
76: dup
77: dconst_1
78: ldc2_w        #44
81: invokespecial #46
84: astore        5
86: aload         4
88: aload         5
90: invokevirtual #47
93: dstore        6
95: aload_3
96: aload         5
98: invokestatic  #48
101: dstore        8
103: new           #43
106: dup
107: dconst_1
108: ldc2_w        #44
111: invokespecial #46
114: astore        10
116: new           #43
119: dup
120: dconst_1
121: ldc2_w        #44
124: invokespecial #46
127: astore        11
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        12
142: aload         11
144: aload         12
146: invokevirtual #47
149: dstore        13
151: aload         10
153: aload         12
155: invokestatic  #48
158: dstore        15
160: aload         10
162: invokevirtual #49
165: istore        17
167: aload_3
168: aload         10
170: invokevirtual #50
173: dstore        18
175: aload         10
177: invokevirtual #51
180: astore        20
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        21
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        22
208: aload         21
210: aload         22
212: invokevirtual #47
215: dstore        23
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        25
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        26
243: aload         25
245: aload         26
247: invokevirtual #47
250: dstore        27
252: aload         26
254: invokevirtual #52
257: dstore        29
259: new           #43
262: dup
263: dconst_1
264: ldc2_w        #44
267: invokespecial #46
270: astore        31
272: new           #43
275: dup
276: dconst_1
277: ldc2_w        #44
280: invokespecial #46
283: astore        32
285: aload         31
287: aload         32
289: invokevirtual #47
292: dstore        33
294: aload         32
296: invokevirtual #52
299: dstore        35
301: aload         26
303: aload         32
305: invokevirtual #53
308: dstore        37
310: new           #43
313: dup
314: dconst_1
315: ldc2_w        #44
318: invokespecial #46
321: astore        39
323: new           #43
326: dup
327: dconst_1
328: ldc2_w        #44
331: invokespecial #46
334: astore        40
336: new           #43
339: dup
340: dconst_1
341: ldc2_w        #44
344: invokespecial #46
347: astore        41
349: aload         40
351: aload         41
353: invokevirtual #47
356: dstore        42
358: aload         39
360: aload         41
362: invokestatic  #48
365: dstore        44
367: new           #43
370: dup
371: dconst_1
372: ldc2_w        #44
375: invokespecial #46
378: astore        46
380: new           #43
383: dup
384: dconst_1
385: ldc2_w        #44
388: invokespecial #46
391: astore        47
393: new           #43
396: dup
397: dconst_1
398: ldc2_w        #44
401: invokespecial #46
404: astore        48
406: aload         47
408: aload         48
410: invokevirtual #47
413: dstore        49
415: aload         46
417: aload         48
419: invokestatic  #48
422: dstore        51
424: aload         46
426: invokevirtual #49
429: istore        53
431: aload         39
433: aload         46
435: invokevirtual #50
438: dstore        54
440: aload         46
442: invokevirtual #54
445: astore        56
447: new           #43
450: dup
451: dconst_1
452: ldc2_w        #44
455: invokespecial #46
458: astore        57
460: new           #43
463: dup
464: dconst_1
465: ldc2_w        #44
468: invokespecial #46
471: astore        58
473: aload         57
475: aload         58
477: invokevirtual #47
480: dstore        59
482: aload         56
484: aload         57
486: invokevirtual #55
489: astore        61
491: aload         26
493: aload         61
495: invokevirtual #55
498: astore        62
500: aload         22
502: aload         61
504: invokevirtual #53
507: dstore        63
509: new           #27
512: dup
513: aload         10
515: aload         22
517: invokespecial #56
520: astore        65
522: aload_2
523: aload         22
525: invokevirtual #98
528: astore        66
530: aload_1
531: ldc2_w        #352
534: aload         22
536: invokevirtual #354
539: astore        67
541: aload_1
542: ldc2_w        #608
545: invokevirtual #107
548: astore        68
550: aload         68
552: invokevirtual #311
555: dstore        69
557: aload_1
558: invokestatic  #33
561: new           #10
564: dup
565: invokespecial #11
568: ldc           #12
570: invokevirtual #13
573: dload         6
575: invokevirtual #60
578: ldc           #15
580: invokevirtual #13
583: dconst_0
584: invokevirtual #60
587: ldc           #12
589: invokevirtual #13
592: invokevirtual #16
595: dload         6
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #17
610: new           #10
613: dup
614: invokespecial #11
617: ldc           #12
619: invokevirtual #13
622: dload         8
624: invokevirtual #60
627: ldc           #15
629: invokevirtual #13
632: dconst_0
633: invokevirtual #60
636: ldc           #12
638: invokevirtual #13
641: invokevirtual #16
644: dload         8
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #17
659: new           #10
662: dup
663: invokespecial #11
666: ldc           #12
668: invokevirtual #13
671: dload         13
673: invokevirtual #60
676: ldc           #15
678: invokevirtual #13
681: dconst_0
682: invokevirtual #60
685: ldc           #12
687: invokevirtual #13
690: invokevirtual #16
693: dload         13
695: dconst_0
696: dcmpl
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #17
708: new           #10
711: dup
712: invokespecial #11
715: ldc           #12
717: invokevirtual #13
720: dload         15
722: invokevirtual #60
725: ldc           #15
727: invokevirtual #13
730: dconst_0
731: invokevirtual #60
734: ldc           #12
736: invokevirtual #13
739: invokevirtual #16
742: dload         15
744: dconst_0
745: dcmpl
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #17
757: new           #10
760: dup
761: invokespecial #11
764: ldc           #12
766: invokevirtual #13
769: iload         17
771: invokevirtual #14
774: ldc           #15
776: invokevirtual #13
779: iconst_0
780: invokevirtual #14
783: ldc           #12
785: invokevirtual #13
788: invokevirtual #16
791: iload         17
793: ifne          800
796: iconst_1
797: goto          801
800: iconst_0
801: invokestatic  #17
804: new           #10
807: dup
808: invokespecial #11
811: ldc           #12
813: invokevirtual #13
816: dload         18
818: invokevirtual #60
821: ldc           #15
823: invokevirtual #13
826: dconst_0
827: invokevirtual #60
830: ldc           #12
832: invokevirtual #13
835: invokevirtual #16
838: dload         18
840: dconst_0
841: dcmpl
842: ifne          849
845: iconst_1
846: goto          850
849: iconst_0
850: invokestatic  #17
853: aload         20
855: invokestatic  #33
858: new           #10
861: dup
862: invokespecial #11
865: ldc           #12
867: invokevirtual #13
870: dload         23
872: invokevirtual #60
875: ldc           #15
877: invokevirtual #13
880: dconst_0
881: invokevirtual #60
884: ldc           #12
886: invokevirtual #13
889: invokevirtual #16
892: dload         23
894: dconst_0
895: dcmpl
896: ifne          903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #17
907: new           #10
910: dup
911: invokespecial #11
914: ldc           #12
916: invokevirtual #13
919: dload         27
921: invokevirtual #60
924: ldc           #15
926: invokevirtual #13
929: dconst_0
930: invokevirtual #60
933: ldc           #12
935: invokevirtual #13
938: invokevirtual #16
941: dload         27
943: dconst_0
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         29
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: ldc2_w        #61
981: invokevirtual #60
984: ldc           #12
986: invokevirtual #13
989: invokevirtual #16
992: dload         29
994: ldc2_w        #61
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #17
1009: new           #10
1012: dup
1013: invokespecial #11
1016: ldc           #12
1018: invokevirtual #13
1021: dload         33
1023: invokevirtual #60
1026: ldc           #15
1028: invokevirtual #13
1031: dconst_0
1032: invokevirtual #60
1035: ldc           #12
1037: invokevirtual #13
1040: invokevirtual #16
1043: dload         33
1045: dconst_0
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: ldc2_w        #61
1083: invokevirtual #60
1086: ldc           #12
1088: invokevirtual #13
1091: invokevirtual #16
1094: dload         35
1096: ldc2_w        #61
1099: dcmpl
1100: ifne          1107
1103: iconst_1
1104: goto          1108
1107: iconst_0
1108: invokestatic  #17
1111: new           #10
1114: dup
1115: invokespecial #11
1118: ldc           #12
1120: invokevirtual #13
1123: dload         37
1125: invokevirtual #60
1128: ldc           #15
1130: invokevirtual #13
1133: dconst_0
1134: invokevirtual #60
1137: ldc           #12
1139: invokevirtual #13
1142: invokevirtual #16
1145: dload         37
1147: dconst_0
1148: dcmpl
1149: ifne          1156
1152: iconst_1
1153: goto          1157
1156: iconst_0
1157: invokestatic  #17
1160: new           #10
1163: dup
1164: invokespecial #11
1167: ldc           #12
1169: invokevirtual #13
1172: dload         42
1174: invokevirtual #60
1177: ldc           #15
1179: invokevirtual #13
1182: dconst_0
1183: invokevirtual #60
1186: ldc           #12
1188: invokevirtual #13
1191: invokevirtual #16
1194: dload         42
1196: dconst_0
1197: dcmpl
1198: ifne          1205
1201: iconst_1
1202: goto          1206
1205: iconst_0
1206: invokestatic  #17
1209: new           #10
1212: dup
1213: invokespecial #11
1216: ldc           #12
1218: invokevirtual #13
1221: dload         44
1223: invokevirtual #60
1226: ldc           #15
1228: invokevirtual #13
1231: dconst_0
1232: invokevirtual #60
1235: ldc           #12
1237: invokevirtual #13
1240: invokevirtual #16
1243: dload         44
1245: dconst_0
1246: dcmpl
1247: ifne          1254
1250: iconst_1
1251: goto          1255
1254: iconst_0
1255: invokestatic  #17
1258: new           #10
1261: dup
1262: invokespecial #11
1265: ldc           #12
1267: invokevirtual #13
1270: dload         49
1272: invokevirtual #60
1275: ldc           #15
1277: invokevirtual #13
1280: dconst_0
1281: invokevirtual #60
1284: ldc           #12
1286: invokevirtual #13
1289: invokevirtual #16
1292: dload         49
1294: dconst_0
1295: dcmpl
1296: ifne          1303
1299: iconst_1
1300: goto          1304
1303: iconst_0
1304: invokestatic  #17
1307: new           #10
1310: dup
1311: invokespecial #11
1314: ldc           #12
1316: invokevirtual #13
1319: dload         51
1321: invokevirtual #60
1324: ldc           #15
1326: invokevirtual #13
1329: dconst_0
1330: invokevirtual #60
1333: ldc           #12
1335: invokevirtual #13
1338: invokevirtual #16
1341: dload         51
1343: dconst_0
1344: dcmpl
1345: ifne          1352
1348: iconst_1
1349: goto          1353
1352: iconst_0
1353: invokestatic  #17
1356: new           #10
1359: dup
1360: invokespecial #11
1363: ldc           #12
1365: invokevirtual #13
1368: iload         53
1370: invokevirtual #14
1373: ldc           #15
1375: invokevirtual #13
1378: iconst_0
1379: invokevirtual #14
1382: ldc           #12
1384: invokevirtual #13
1387: invokevirtual #16
1390: iload         53
1392: ifne          1399
1395: iconst_1
1396: goto          1400
1399: iconst_0
1400: invokestatic  #17
1403: new           #10
1406: dup
1407: invokespecial #11
1410: ldc           #12
1412: invokevirtual #13
1415: dload         54
1417: invokevirtual #60
1420: ldc           #15
1422: invokevirtual #13
1425: dconst_0
1426: invokevirtual #60
1429: ldc           #12
1431: invokevirtual #13
1434: invokevirtual #16
1437: dload         54
1439: dconst_0
1440: dcmpl
1441: ifne          1448
1444: iconst_1
1445: goto          1449
1448: iconst_0
1449: invokestatic  #17
1452: aload         56
1454: invokestatic  #33
1457: new           #10
1460: dup
1461: invokespecial #11
1464: ldc           #12
1466: invokevirtual #13
1469: dload         59
1471: invokevirtual #60
1474: ldc           #15
1476: invokevirtual #13
1479: dconst_0
1480: invokevirtual #60
1483: ldc           #12
1485: invokevirtual #13
1488: invokevirtual #16
1491: dload         59
1493: dconst_0
1494: dcmpl
1495: ifne          1502
1498: iconst_1
1499: goto          1503
1502: iconst_0
1503: invokestatic  #17
1506: aload         61
1508: invokestatic  #33
1511: aload         62
1513: invokestatic  #33
1516: new           #10
1519: dup
1520: invokespecial #11
1523: ldc           #12
1525: invokevirtual #13
1528: dload         63
1530: invokevirtual #60
1533: ldc           #15
1535: invokevirtual #13
1538: ldc2_w        #63
1541: invokevirtual #60
1544: ldc           #12
1546: invokevirtual #13
1549: invokevirtual #16
1552: dload         63
1554: ldc2_w        #63
1557: dcmpl
1558: ifne          1565
1561: iconst_1
1562: goto          1566
1565: iconst_0
1566: invokestatic  #17
1569: aload         66
1571: invokestatic  #33
1574: aload         67
1576: invokestatic  #33
1579: aload         68
1581: invokestatic  #33
1584: dload         69
1586: invokestatic  #242
1589: invokestatic  #243
1592: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 8855
End line: 8920
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D25.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = vector3D28.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D28, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D39, vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = vector3D53.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D58.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double63 = vector3D61.getDelta();
        double double64 = vector3D53.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double65 = vector3D45.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector66 = vector3D45.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = vector3D28.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = rotation0.applyTo(vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D68.orthogonal();
        org.junit.Assert.assertNotNull(rotation0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7345682747147468d + "'", double55 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.7345682747147468d + "'", double63 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #610
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #309
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         20
200: invokevirtual #55
203: astore        24
205: aload         20
207: invokevirtual #193
210: astore        25
212: new           #27
215: dup
216: aload         20
218: ldc2_w        #259
221: invokespecial #103
224: astore        26
226: new           #43
229: dup
230: dconst_1
231: ldc2_w        #44
234: invokespecial #46
237: astore        27
239: new           #43
242: dup
243: dconst_1
244: ldc2_w        #44
247: invokespecial #46
250: astore        28
252: new           #43
255: dup
256: dconst_1
257: ldc2_w        #44
260: invokespecial #46
263: astore        29
265: aload         28
267: aload         29
269: invokevirtual #47
272: dstore        30
274: aload         27
276: aload         29
278: invokestatic  #48
281: dstore        32
283: new           #43
286: dup
287: dconst_1
288: ldc2_w        #44
291: invokespecial #46
294: astore        34
296: new           #43
299: dup
300: dconst_1
301: ldc2_w        #44
304: invokespecial #46
307: astore        35
309: aload         34
311: aload         35
313: invokevirtual #47
316: dstore        36
318: aload         35
320: invokevirtual #52
323: dstore        38
325: new           #43
328: dup
329: dconst_1
330: ldc2_w        #44
333: invokespecial #46
336: astore        40
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        41
351: aload         40
353: aload         41
355: invokevirtual #47
358: dstore        42
360: aload         41
362: invokevirtual #52
365: dstore        44
367: aload         35
369: aload         41
371: invokevirtual #53
374: dstore        46
376: aload         29
378: aload         35
380: invokevirtual #129
383: dstore        48
385: aload         29
387: invokevirtual #193
390: astore        50
392: aload         20
394: aload         29
396: invokevirtual #55
399: astore        51
401: aload_1
402: aload         20
404: invokevirtual #140
407: astore        52
409: aload         52
411: invokevirtual #163
414: astore        53
416: aload_1
417: invokestatic  #33
420: new           #10
423: dup
424: invokespecial #11
427: ldc           #12
429: invokevirtual #13
432: dload         5
434: invokevirtual #60
437: ldc           #15
439: invokevirtual #13
442: dconst_0
443: invokevirtual #60
446: ldc           #12
448: invokevirtual #13
451: invokevirtual #16
454: dload         5
456: dconst_0
457: dcmpl
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #17
469: new           #10
472: dup
473: invokespecial #11
476: ldc           #12
478: invokevirtual #13
481: dload         7
483: invokevirtual #60
486: ldc           #15
488: invokevirtual #13
491: dconst_0
492: invokevirtual #60
495: ldc           #12
497: invokevirtual #13
500: invokevirtual #16
503: dload         7
505: dconst_0
506: dcmpl
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #17
518: new           #10
521: dup
522: invokespecial #11
525: ldc           #12
527: invokevirtual #13
530: dload         12
532: invokevirtual #60
535: ldc           #15
537: invokevirtual #13
540: dconst_0
541: invokevirtual #60
544: ldc           #12
546: invokevirtual #13
549: invokevirtual #16
552: dload         12
554: dconst_0
555: dcmpl
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #17
567: new           #10
570: dup
571: invokespecial #11
574: ldc           #12
576: invokevirtual #13
579: dload         14
581: invokevirtual #60
584: ldc           #15
586: invokevirtual #13
589: dconst_0
590: invokevirtual #60
593: ldc           #12
595: invokevirtual #13
598: invokevirtual #16
601: dload         14
603: dconst_0
604: dcmpl
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #17
616: new           #10
619: dup
620: invokespecial #11
623: ldc           #12
625: invokevirtual #13
628: iload         16
630: invokevirtual #14
633: ldc           #15
635: invokevirtual #13
638: iconst_0
639: invokevirtual #14
642: ldc           #12
644: invokevirtual #13
647: invokevirtual #16
650: iload         16
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #17
663: new           #10
666: dup
667: invokespecial #11
670: ldc           #12
672: invokevirtual #13
675: dload         17
677: invokevirtual #60
680: ldc           #15
682: invokevirtual #13
685: dconst_0
686: invokevirtual #60
689: ldc           #12
691: invokevirtual #13
694: invokevirtual #16
697: dload         17
699: dconst_0
700: dcmpl
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #17
712: aload         19
714: invokestatic  #33
717: new           #10
720: dup
721: invokespecial #11
724: ldc           #12
726: invokevirtual #13
729: dload         22
731: invokevirtual #60
734: ldc           #15
736: invokevirtual #13
739: dconst_0
740: invokevirtual #60
743: ldc           #12
745: invokevirtual #13
748: invokevirtual #16
751: dload         22
753: dconst_0
754: dcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: aload         24
768: invokestatic  #33
771: aload         25
773: invokestatic  #33
776: new           #10
779: dup
780: invokespecial #11
783: ldc           #12
785: invokevirtual #13
788: dload         30
790: invokevirtual #60
793: ldc           #15
795: invokevirtual #13
798: dconst_0
799: invokevirtual #60
802: ldc           #12
804: invokevirtual #13
807: invokevirtual #16
810: dload         30
812: dconst_0
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #17
825: new           #10
828: dup
829: invokespecial #11
832: ldc           #12
834: invokevirtual #13
837: dload         32
839: invokevirtual #60
842: ldc           #15
844: invokevirtual #13
847: dconst_0
848: invokevirtual #60
851: ldc           #12
853: invokevirtual #13
856: invokevirtual #16
859: dload         32
861: dconst_0
862: dcmpl
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #17
874: new           #10
877: dup
878: invokespecial #11
881: ldc           #12
883: invokevirtual #13
886: dload         36
888: invokevirtual #60
891: ldc           #15
893: invokevirtual #13
896: dconst_0
897: invokevirtual #60
900: ldc           #12
902: invokevirtual #13
905: invokevirtual #16
908: dload         36
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #17
923: new           #10
926: dup
927: invokespecial #11
930: ldc           #12
932: invokevirtual #13
935: dload         38
937: invokevirtual #60
940: ldc           #15
942: invokevirtual #13
945: ldc2_w        #61
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         38
961: ldc2_w        #61
964: dcmpl
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #17
976: new           #10
979: dup
980: invokespecial #11
983: ldc           #12
985: invokevirtual #13
988: dload         42
990: invokevirtual #60
993: ldc           #15
995: invokevirtual #13
998: dconst_0
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         42
1012: dconst_0
1013: dcmpl
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #17
1025: new           #10
1028: dup
1029: invokespecial #11
1032: ldc           #12
1034: invokevirtual #13
1037: dload         44
1039: invokevirtual #60
1042: ldc           #15
1044: invokevirtual #13
1047: ldc2_w        #61
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         44
1063: ldc2_w        #61
1066: dcmpl
1067: ifne          1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #17
1078: new           #10
1081: dup
1082: invokespecial #11
1085: ldc           #12
1087: invokevirtual #13
1090: dload         46
1092: invokevirtual #60
1095: ldc           #15
1097: invokevirtual #13
1100: dconst_0
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         46
1114: dconst_0
1115: dcmpl
1116: ifne          1123
1119: iconst_1
1120: goto          1124
1123: iconst_0
1124: invokestatic  #17
1127: new           #10
1130: dup
1131: invokespecial #11
1134: ldc           #12
1136: invokevirtual #13
1139: dload         48
1141: invokevirtual #60
1144: ldc           #15
1146: invokevirtual #13
1149: dconst_0
1150: invokevirtual #60
1153: ldc           #12
1155: invokevirtual #13
1158: invokevirtual #16
1161: dload         48
1163: dconst_0
1164: dcmpl
1165: ifne          1172
1168: iconst_1
1169: goto          1173
1172: iconst_0
1173: invokestatic  #17
1176: aload         50
1178: invokestatic  #33
1181: aload         51
1183: invokestatic  #33
1186: aload         52
1188: invokestatic  #33
1191: aload         53
1193: invokestatic  #33
1196: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 8923
End line: 8984
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation28 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector55 = vector3D29.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector58 = vector3D56.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation60 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D56, 5.298292365610485d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation61 = rotation28.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = rotation60.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(euclidean3DVector55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(euclidean3DVector58);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #611
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: new           #27
172: dup
173: aload_1
174: ldc2_w        #72
177: invokespecial #103
180: astore        21
182: getstatic     #126
185: astore        22
187: new           #43
190: dup
191: dconst_1
192: ldc2_w        #44
195: invokespecial #46
198: astore        23
200: new           #43
203: dup
204: dconst_1
205: ldc2_w        #44
208: invokespecial #46
211: astore        24
213: new           #43
216: dup
217: dconst_1
218: ldc2_w        #44
221: invokespecial #46
224: astore        25
226: aload         24
228: aload         25
230: invokevirtual #47
233: dstore        26
235: aload         23
237: aload         25
239: invokestatic  #48
242: dstore        28
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: new           #43
260: dup
261: dconst_1
262: ldc2_w        #44
265: invokespecial #46
268: astore        31
270: new           #43
273: dup
274: dconst_1
275: ldc2_w        #44
278: invokespecial #46
281: astore        32
283: aload         31
285: aload         32
287: invokevirtual #47
290: dstore        33
292: aload         30
294: aload         32
296: invokestatic  #48
299: dstore        35
301: aload         30
303: invokevirtual #49
306: istore        37
308: aload         23
310: aload         30
312: invokevirtual #50
315: dstore        38
317: aload         30
319: invokevirtual #54
322: astore        40
324: aload         22
326: aload         40
328: invokevirtual #55
331: astore        41
333: aload         22
335: invokevirtual #163
338: astore        42
340: aload         42
342: dconst_0
343: invokevirtual #107
346: astore        43
348: new           #27
351: dup
352: aload         42
354: ldc2_w        #612
357: invokespecial #103
360: astore        44
362: aload         21
364: aload         44
366: invokevirtual #474
369: astore        45
371: aload         44
373: invokevirtual #96
376: astore        46
378: aload_1
379: invokestatic  #33
382: new           #10
385: dup
386: invokespecial #11
389: ldc           #12
391: invokevirtual #13
394: dload         5
396: invokevirtual #60
399: ldc           #15
401: invokevirtual #13
404: dconst_0
405: invokevirtual #60
408: ldc           #12
410: invokevirtual #13
413: invokevirtual #16
416: dload         5
418: dconst_0
419: dcmpl
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #17
431: new           #10
434: dup
435: invokespecial #11
438: ldc           #12
440: invokevirtual #13
443: dload         7
445: invokevirtual #60
448: ldc           #15
450: invokevirtual #13
453: dconst_0
454: invokevirtual #60
457: ldc           #12
459: invokevirtual #13
462: invokevirtual #16
465: dload         7
467: dconst_0
468: dcmpl
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #17
480: new           #10
483: dup
484: invokespecial #11
487: ldc           #12
489: invokevirtual #13
492: dload         12
494: invokevirtual #60
497: ldc           #15
499: invokevirtual #13
502: dconst_0
503: invokevirtual #60
506: ldc           #12
508: invokevirtual #13
511: invokevirtual #16
514: dload         12
516: dconst_0
517: dcmpl
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #17
529: new           #10
532: dup
533: invokespecial #11
536: ldc           #12
538: invokevirtual #13
541: dload         14
543: invokevirtual #60
546: ldc           #15
548: invokevirtual #13
551: dconst_0
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         14
565: dconst_0
566: dcmpl
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #17
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: iload         16
592: invokevirtual #14
595: ldc           #15
597: invokevirtual #13
600: iconst_0
601: invokevirtual #14
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: iload         16
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #17
625: new           #10
628: dup
629: invokespecial #11
632: ldc           #12
634: invokevirtual #13
637: dload         17
639: invokevirtual #60
642: ldc           #15
644: invokevirtual #13
647: dconst_0
648: invokevirtual #60
651: ldc           #12
653: invokevirtual #13
656: invokevirtual #16
659: dload         17
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: aload         19
676: invokestatic  #33
679: aload         20
681: invokestatic  #33
684: aload         22
686: invokestatic  #33
689: new           #10
692: dup
693: invokespecial #11
696: ldc           #12
698: invokevirtual #13
701: dload         26
703: invokevirtual #60
706: ldc           #15
708: invokevirtual #13
711: dconst_0
712: invokevirtual #60
715: ldc           #12
717: invokevirtual #13
720: invokevirtual #16
723: dload         26
725: dconst_0
726: dcmpl
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #17
738: new           #10
741: dup
742: invokespecial #11
745: ldc           #12
747: invokevirtual #13
750: dload         28
752: invokevirtual #60
755: ldc           #15
757: invokevirtual #13
760: dconst_0
761: invokevirtual #60
764: ldc           #12
766: invokevirtual #13
769: invokevirtual #16
772: dload         28
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #17
787: new           #10
790: dup
791: invokespecial #11
794: ldc           #12
796: invokevirtual #13
799: dload         33
801: invokevirtual #60
804: ldc           #15
806: invokevirtual #13
809: dconst_0
810: invokevirtual #60
813: ldc           #12
815: invokevirtual #13
818: invokevirtual #16
821: dload         33
823: dconst_0
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         35
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: dconst_0
859: invokevirtual #60
862: ldc           #12
864: invokevirtual #13
867: invokevirtual #16
870: dload         35
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #17
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: iload         37
899: invokevirtual #14
902: ldc           #15
904: invokevirtual #13
907: iconst_0
908: invokevirtual #14
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: iload         37
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: new           #10
935: dup
936: invokespecial #11
939: ldc           #12
941: invokevirtual #13
944: dload         38
946: invokevirtual #60
949: ldc           #15
951: invokevirtual #13
954: dconst_0
955: invokevirtual #60
958: ldc           #12
960: invokevirtual #13
963: invokevirtual #16
966: dload         38
968: dconst_0
969: dcmpl
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #17
981: aload         40
983: invokestatic  #33
986: aload         41
988: invokestatic  #33
991: aload         42
993: invokestatic  #33
996: aload         43
998: invokestatic  #33
1001: aload         45
1003: invokestatic  #33
1006: aload         46
1008: invokestatic  #33
1011: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 8987
End line: 9053
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double double65 = rotation64.getQ1();
        double double66 = rotation64.getQ1();
        double double67 = rotation64.getQ1();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation73 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) (-1), (double) 97L, (double) 100.00001f, 31.0d, false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation74 = rotation64.applyInverseTo(rotation73);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #614
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #94
387: dstore        50
389: aload         49
391: invokevirtual #94
394: dstore        52
396: aload         49
398: invokevirtual #94
401: dstore        54
403: new           #27
406: dup
407: ldc2_w        #66
410: ldc2_w        #615
413: ldc2_w        #617
416: ldc2_w        #273
419: iconst_0
420: invokespecial #150
423: astore        56
425: aload         49
427: aload         56
429: invokevirtual #474
432: astore        57
434: new           #10
437: dup
438: invokespecial #11
441: ldc           #12
443: invokevirtual #13
446: dload         4
448: invokevirtual #60
451: ldc           #15
453: invokevirtual #13
456: dconst_0
457: invokevirtual #60
460: ldc           #12
462: invokevirtual #13
465: invokevirtual #16
468: dload         4
470: dconst_0
471: dcmpl
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #17
483: new           #10
486: dup
487: invokespecial #11
490: ldc           #12
492: invokevirtual #13
495: dload         6
497: invokevirtual #60
500: ldc           #15
502: invokevirtual #13
505: dconst_0
506: invokevirtual #60
509: ldc           #12
511: invokevirtual #13
514: invokevirtual #16
517: dload         6
519: dconst_0
520: dcmpl
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #17
532: new           #10
535: dup
536: invokespecial #11
539: ldc           #12
541: invokevirtual #13
544: iload         8
546: invokevirtual #14
549: ldc           #15
551: invokevirtual #13
554: iconst_0
555: invokevirtual #14
558: ldc           #12
560: invokevirtual #13
563: invokevirtual #16
566: iload         8
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #17
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         9
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: ldc2_w        #167
604: invokevirtual #60
607: ldc           #12
609: invokevirtual #13
612: invokevirtual #16
615: dload         9
617: ldc2_w        #167
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #17
632: new           #10
635: dup
636: invokespecial #11
639: ldc           #12
641: invokevirtual #13
644: dload         13
646: invokevirtual #60
649: ldc           #15
651: invokevirtual #13
654: dconst_0
655: invokevirtual #60
658: ldc           #12
660: invokevirtual #13
663: invokevirtual #16
666: dload         13
668: dconst_0
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #17
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: dload         15
695: invokevirtual #60
698: ldc           #15
700: invokevirtual #13
703: ldc2_w        #61
706: invokevirtual #60
709: ldc           #12
711: invokevirtual #13
714: invokevirtual #16
717: dload         15
719: ldc2_w        #61
722: dcmpl
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #17
734: new           #10
737: dup
738: invokespecial #11
741: ldc           #12
743: invokevirtual #13
746: dload         19
748: invokevirtual #60
751: ldc           #15
753: invokevirtual #13
756: dconst_0
757: invokevirtual #60
760: ldc           #12
762: invokevirtual #13
765: invokevirtual #16
768: dload         19
770: dconst_0
771: dcmpl
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #17
783: new           #10
786: dup
787: invokespecial #11
790: ldc           #12
792: invokevirtual #13
795: dload         21
797: invokevirtual #60
800: ldc           #15
802: invokevirtual #13
805: ldc2_w        #61
808: invokevirtual #60
811: ldc           #12
813: invokevirtual #13
816: invokevirtual #16
819: dload         21
821: ldc2_w        #61
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         23
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: dconst_0
859: invokevirtual #60
862: ldc           #12
864: invokevirtual #13
867: invokevirtual #16
870: dload         23
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #17
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: dload         28
899: invokevirtual #60
902: ldc           #15
904: invokevirtual #13
907: dconst_0
908: invokevirtual #60
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: dload         28
921: dconst_0
922: dcmpl
923: ifne          930
926: iconst_1
927: goto          931
930: iconst_0
931: invokestatic  #17
934: new           #10
937: dup
938: invokespecial #11
941: ldc           #12
943: invokevirtual #13
946: dload         30
948: invokevirtual #60
951: ldc           #15
953: invokevirtual #13
956: dconst_0
957: invokevirtual #60
960: ldc           #12
962: invokevirtual #13
965: invokevirtual #16
968: dload         30
970: dconst_0
971: dcmpl
972: ifne          979
975: iconst_1
976: goto          980
979: iconst_0
980: invokestatic  #17
983: new           #10
986: dup
987: invokespecial #11
990: ldc           #12
992: invokevirtual #13
995: dload         35
997: invokevirtual #60
1000: ldc           #15
1002: invokevirtual #13
1005: dconst_0
1006: invokevirtual #60
1009: ldc           #12
1011: invokevirtual #13
1014: invokevirtual #16
1017: dload         35
1019: dconst_0
1020: dcmpl
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #17
1032: new           #10
1035: dup
1036: invokespecial #11
1039: ldc           #12
1041: invokevirtual #13
1044: dload         37
1046: invokevirtual #60
1049: ldc           #15
1051: invokevirtual #13
1054: dconst_0
1055: invokevirtual #60
1058: ldc           #12
1060: invokevirtual #13
1063: invokevirtual #16
1066: dload         37
1068: dconst_0
1069: dcmpl
1070: ifne          1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #17
1081: new           #10
1084: dup
1085: invokespecial #11
1088: ldc           #12
1090: invokevirtual #13
1093: iload         39
1095: invokevirtual #14
1098: ldc           #15
1100: invokevirtual #13
1103: iconst_0
1104: invokevirtual #14
1107: ldc           #12
1109: invokevirtual #13
1112: invokevirtual #16
1115: iload         39
1117: ifne          1124
1120: iconst_1
1121: goto          1125
1124: iconst_0
1125: invokestatic  #17
1128: new           #10
1131: dup
1132: invokespecial #11
1135: ldc           #12
1137: invokevirtual #13
1140: dload         40
1142: invokevirtual #60
1145: ldc           #15
1147: invokevirtual #13
1150: dconst_0
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         40
1164: dconst_0
1165: dcmpl
1166: ifne          1173
1169: iconst_1
1170: goto          1174
1173: iconst_0
1174: invokestatic  #17
1177: aload         42
1179: invokestatic  #33
1182: new           #10
1185: dup
1186: invokespecial #11
1189: ldc           #12
1191: invokevirtual #13
1194: dload         45
1196: invokevirtual #60
1199: ldc           #15
1201: invokevirtual #13
1204: dconst_0
1205: invokevirtual #60
1208: ldc           #12
1210: invokevirtual #13
1213: invokevirtual #16
1216: dload         45
1218: dconst_0
1219: dcmpl
1220: ifne          1227
1223: iconst_1
1224: goto          1228
1227: iconst_0
1228: invokestatic  #17
1231: aload         47
1233: invokestatic  #33
1236: aload         48
1238: invokestatic  #33
1241: new           #10
1244: dup
1245: invokespecial #11
1248: ldc           #12
1250: invokevirtual #13
1253: dload         50
1255: invokevirtual #60
1258: ldc           #15
1260: invokevirtual #13
1263: dconst_0
1264: invokevirtual #60
1267: ldc           #12
1269: invokevirtual #13
1272: invokevirtual #16
1275: dload         50
1277: dconst_0
1278: dcmpl
1279: ifne          1286
1282: iconst_1
1283: goto          1287
1286: iconst_0
1287: invokestatic  #17
1290: new           #10
1293: dup
1294: invokespecial #11
1297: ldc           #12
1299: invokevirtual #13
1302: dload         52
1304: invokevirtual #60
1307: ldc           #15
1309: invokevirtual #13
1312: dconst_0
1313: invokevirtual #60
1316: ldc           #12
1318: invokevirtual #13
1321: invokevirtual #16
1324: dload         52
1326: dconst_0
1327: dcmpl
1328: ifne          1335
1331: iconst_1
1332: goto          1336
1335: iconst_0
1336: invokestatic  #17
1339: new           #10
1342: dup
1343: invokespecial #11
1346: ldc           #12
1348: invokevirtual #13
1351: dload         54
1353: invokevirtual #60
1356: ldc           #15
1358: invokevirtual #13
1361: dconst_0
1362: invokevirtual #60
1365: ldc           #12
1367: invokevirtual #13
1370: invokevirtual #16
1373: dload         54
1375: dconst_0
1376: dcmpl
1377: ifne          1384
1380: iconst_1
1381: goto          1385
1384: iconst_0
1385: invokestatic  #17
1388: aload         57
1390: invokestatic  #33
1393: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 9056
End line: 9136
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = vector3D16.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        double double27 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        double double38 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D30, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double48 = vector3D44.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double49 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D41, vector3D47);
        boolean boolean50 = vector3D41.isInfinite();
        double double51 = vector3D30.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D41);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = vector3D41.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double59 = vector3D55.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D58);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = vector3D52.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = vector3D16.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.angle(vector3D2, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double73 = vector3D69.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        double double74 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D66, vector3D72);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double84 = vector3D80.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        double double85 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D77, vector3D83);
        boolean boolean86 = vector3D77.isInfinite();
        double double87 = vector3D66.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((-1.5574077246549023d), vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D88.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D89);
        double double91 = vector3D89.getNormInf();
        org.apache.commons.math.geometry.Space space92 = vector3D89.getSpace();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.7345682747147468d + "'", double18 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.7316592469266796d + "'", double91 == 0.7316592469266796d);
        org.junit.Assert.assertNotNull(space92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #619
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: aload         8
103: aload         9
105: invokevirtual #47
108: dstore        10
110: aload         9
112: invokevirtual #52
115: dstore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        14
130: new           #43
133: dup
134: dconst_1
135: ldc2_w        #44
138: invokespecial #46
141: astore        15
143: aload         14
145: aload         15
147: invokevirtual #47
150: dstore        16
152: aload         15
154: invokevirtual #52
157: dstore        18
159: aload         9
161: aload         15
163: invokevirtual #53
166: dstore        20
168: new           #43
171: dup
172: dconst_1
173: ldc2_w        #44
176: invokespecial #46
179: astore        22
181: new           #43
184: dup
185: dconst_1
186: ldc2_w        #44
189: invokespecial #46
192: astore        23
194: new           #43
197: dup
198: dconst_1
199: ldc2_w        #44
202: invokespecial #46
205: astore        24
207: aload         23
209: aload         24
211: invokevirtual #47
214: dstore        25
216: aload         22
218: aload         24
220: invokestatic  #48
223: dstore        27
225: new           #43
228: dup
229: dconst_1
230: ldc2_w        #44
233: invokespecial #46
236: astore        29
238: new           #43
241: dup
242: dconst_1
243: ldc2_w        #44
246: invokespecial #46
249: astore        30
251: new           #43
254: dup
255: dconst_1
256: ldc2_w        #44
259: invokespecial #46
262: astore        31
264: aload         30
266: aload         31
268: invokevirtual #47
271: dstore        32
273: aload         29
275: aload         31
277: invokestatic  #48
280: dstore        34
282: aload         29
284: invokevirtual #49
287: istore        36
289: aload         22
291: aload         29
293: invokevirtual #50
296: dstore        37
298: aload         29
300: invokevirtual #54
303: astore        39
305: new           #43
308: dup
309: dconst_1
310: ldc2_w        #44
313: invokespecial #46
316: astore        40
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        41
331: aload         40
333: aload         41
335: invokevirtual #47
338: dstore        42
340: aload         39
342: aload         40
344: invokevirtual #55
347: astore        44
349: aload         9
351: aload         44
353: invokevirtual #55
356: astore        45
358: aload_1
359: aload         9
361: invokestatic  #363
364: dstore        46
366: new           #43
369: dup
370: dconst_1
371: ldc2_w        #44
374: invokespecial #46
377: astore        48
379: new           #43
382: dup
383: dconst_1
384: ldc2_w        #44
387: invokespecial #46
390: astore        49
392: new           #43
395: dup
396: dconst_1
397: ldc2_w        #44
400: invokespecial #46
403: astore        50
405: aload         49
407: aload         50
409: invokevirtual #47
412: dstore        51
414: aload         48
416: aload         50
418: invokestatic  #48
421: dstore        53
423: new           #43
426: dup
427: dconst_1
428: ldc2_w        #44
431: invokespecial #46
434: astore        55
436: new           #43
439: dup
440: dconst_1
441: ldc2_w        #44
444: invokespecial #46
447: astore        56
449: new           #43
452: dup
453: dconst_1
454: ldc2_w        #44
457: invokespecial #46
460: astore        57
462: aload         56
464: aload         57
466: invokevirtual #47
469: dstore        58
471: aload         55
473: aload         57
475: invokestatic  #48
478: dstore        60
480: aload         55
482: invokevirtual #49
485: istore        62
487: aload         48
489: aload         55
491: invokevirtual #50
494: dstore        63
496: new           #43
499: dup
500: ldc2_w        #620
503: aload         48
505: invokespecial #305
508: astore        65
510: aload         65
512: invokevirtual #163
515: astore        66
517: new           #27
520: dup
521: aload_1
522: aload         66
524: invokespecial #56
527: astore        67
529: aload         66
531: invokevirtual #136
534: dstore        68
536: aload         66
538: invokevirtual #51
541: astore        70
543: new           #10
546: dup
547: invokespecial #11
550: ldc           #12
552: invokevirtual #13
555: dload         4
557: invokevirtual #60
560: ldc           #15
562: invokevirtual #13
565: dconst_0
566: invokevirtual #60
569: ldc           #12
571: invokevirtual #13
574: invokevirtual #16
577: dload         4
579: dconst_0
580: dcmpl
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #17
592: new           #10
595: dup
596: invokespecial #11
599: ldc           #12
601: invokevirtual #13
604: dload         6
606: invokevirtual #60
609: ldc           #15
611: invokevirtual #13
614: dconst_0
615: invokevirtual #60
618: ldc           #12
620: invokevirtual #13
623: invokevirtual #16
626: dload         6
628: dconst_0
629: dcmpl
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #17
641: new           #10
644: dup
645: invokespecial #11
648: ldc           #12
650: invokevirtual #13
653: dload         10
655: invokevirtual #60
658: ldc           #15
660: invokevirtual #13
663: dconst_0
664: invokevirtual #60
667: ldc           #12
669: invokevirtual #13
672: invokevirtual #16
675: dload         10
677: dconst_0
678: dcmpl
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #17
690: new           #10
693: dup
694: invokespecial #11
697: ldc           #12
699: invokevirtual #13
702: dload         12
704: invokevirtual #60
707: ldc           #15
709: invokevirtual #13
712: ldc2_w        #61
715: invokevirtual #60
718: ldc           #12
720: invokevirtual #13
723: invokevirtual #16
726: dload         12
728: ldc2_w        #61
731: dcmpl
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #17
743: new           #10
746: dup
747: invokespecial #11
750: ldc           #12
752: invokevirtual #13
755: dload         16
757: invokevirtual #60
760: ldc           #15
762: invokevirtual #13
765: dconst_0
766: invokevirtual #60
769: ldc           #12
771: invokevirtual #13
774: invokevirtual #16
777: dload         16
779: dconst_0
780: dcmpl
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #17
792: new           #10
795: dup
796: invokespecial #11
799: ldc           #12
801: invokevirtual #13
804: dload         18
806: invokevirtual #60
809: ldc           #15
811: invokevirtual #13
814: ldc2_w        #61
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         18
830: ldc2_w        #61
833: dcmpl
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #17
845: new           #10
848: dup
849: invokespecial #11
852: ldc           #12
854: invokevirtual #13
857: dload         20
859: invokevirtual #60
862: ldc           #15
864: invokevirtual #13
867: dconst_0
868: invokevirtual #60
871: ldc           #12
873: invokevirtual #13
876: invokevirtual #16
879: dload         20
881: dconst_0
882: dcmpl
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #17
894: new           #10
897: dup
898: invokespecial #11
901: ldc           #12
903: invokevirtual #13
906: dload         25
908: invokevirtual #60
911: ldc           #15
913: invokevirtual #13
916: dconst_0
917: invokevirtual #60
920: ldc           #12
922: invokevirtual #13
925: invokevirtual #16
928: dload         25
930: dconst_0
931: dcmpl
932: ifne          939
935: iconst_1
936: goto          940
939: iconst_0
940: invokestatic  #17
943: new           #10
946: dup
947: invokespecial #11
950: ldc           #12
952: invokevirtual #13
955: dload         27
957: invokevirtual #60
960: ldc           #15
962: invokevirtual #13
965: dconst_0
966: invokevirtual #60
969: ldc           #12
971: invokevirtual #13
974: invokevirtual #16
977: dload         27
979: dconst_0
980: dcmpl
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #17
992: new           #10
995: dup
996: invokespecial #11
999: ldc           #12
1001: invokevirtual #13
1004: dload         32
1006: invokevirtual #60
1009: ldc           #15
1011: invokevirtual #13
1014: dconst_0
1015: invokevirtual #60
1018: ldc           #12
1020: invokevirtual #13
1023: invokevirtual #16
1026: dload         32
1028: dconst_0
1029: dcmpl
1030: ifne          1037
1033: iconst_1
1034: goto          1038
1037: iconst_0
1038: invokestatic  #17
1041: new           #10
1044: dup
1045: invokespecial #11
1048: ldc           #12
1050: invokevirtual #13
1053: dload         34
1055: invokevirtual #60
1058: ldc           #15
1060: invokevirtual #13
1063: dconst_0
1064: invokevirtual #60
1067: ldc           #12
1069: invokevirtual #13
1072: invokevirtual #16
1075: dload         34
1077: dconst_0
1078: dcmpl
1079: ifne          1086
1082: iconst_1
1083: goto          1087
1086: iconst_0
1087: invokestatic  #17
1090: new           #10
1093: dup
1094: invokespecial #11
1097: ldc           #12
1099: invokevirtual #13
1102: iload         36
1104: invokevirtual #14
1107: ldc           #15
1109: invokevirtual #13
1112: iconst_0
1113: invokevirtual #14
1116: ldc           #12
1118: invokevirtual #13
1121: invokevirtual #16
1124: iload         36
1126: ifne          1133
1129: iconst_1
1130: goto          1134
1133: iconst_0
1134: invokestatic  #17
1137: new           #10
1140: dup
1141: invokespecial #11
1144: ldc           #12
1146: invokevirtual #13
1149: dload         37
1151: invokevirtual #60
1154: ldc           #15
1156: invokevirtual #13
1159: dconst_0
1160: invokevirtual #60
1163: ldc           #12
1165: invokevirtual #13
1168: invokevirtual #16
1171: dload         37
1173: dconst_0
1174: dcmpl
1175: ifne          1182
1178: iconst_1
1179: goto          1183
1182: iconst_0
1183: invokestatic  #17
1186: aload         39
1188: invokestatic  #33
1191: new           #10
1194: dup
1195: invokespecial #11
1198: ldc           #12
1200: invokevirtual #13
1203: dload         42
1205: invokevirtual #60
1208: ldc           #15
1210: invokevirtual #13
1213: dconst_0
1214: invokevirtual #60
1217: ldc           #12
1219: invokevirtual #13
1222: invokevirtual #16
1225: dload         42
1227: dconst_0
1228: dcmpl
1229: ifne          1236
1232: iconst_1
1233: goto          1237
1236: iconst_0
1237: invokestatic  #17
1240: aload         44
1242: invokestatic  #33
1245: aload         45
1247: invokestatic  #33
1250: new           #10
1253: dup
1254: invokespecial #11
1257: ldc           #12
1259: invokevirtual #13
1262: dload         46
1264: invokevirtual #60
1267: ldc           #15
1269: invokevirtual #13
1272: dconst_0
1273: invokevirtual #60
1276: ldc           #12
1278: invokevirtual #13
1281: invokevirtual #16
1284: dload         46
1286: dconst_0
1287: dcmpl
1288: ifne          1295
1291: iconst_1
1292: goto          1296
1295: iconst_0
1296: invokestatic  #17
1299: new           #10
1302: dup
1303: invokespecial #11
1306: ldc           #12
1308: invokevirtual #13
1311: dload         51
1313: invokevirtual #60
1316: ldc           #15
1318: invokevirtual #13
1321: dconst_0
1322: invokevirtual #60
1325: ldc           #12
1327: invokevirtual #13
1330: invokevirtual #16
1333: dload         51
1335: dconst_0
1336: dcmpl
1337: ifne          1344
1340: iconst_1
1341: goto          1345
1344: iconst_0
1345: invokestatic  #17
1348: new           #10
1351: dup
1352: invokespecial #11
1355: ldc           #12
1357: invokevirtual #13
1360: dload         53
1362: invokevirtual #60
1365: ldc           #15
1367: invokevirtual #13
1370: dconst_0
1371: invokevirtual #60
1374: ldc           #12
1376: invokevirtual #13
1379: invokevirtual #16
1382: dload         53
1384: dconst_0
1385: dcmpl
1386: ifne          1393
1389: iconst_1
1390: goto          1394
1393: iconst_0
1394: invokestatic  #17
1397: new           #10
1400: dup
1401: invokespecial #11
1404: ldc           #12
1406: invokevirtual #13
1409: dload         58
1411: invokevirtual #60
1414: ldc           #15
1416: invokevirtual #13
1419: dconst_0
1420: invokevirtual #60
1423: ldc           #12
1425: invokevirtual #13
1428: invokevirtual #16
1431: dload         58
1433: dconst_0
1434: dcmpl
1435: ifne          1442
1438: iconst_1
1439: goto          1443
1442: iconst_0
1443: invokestatic  #17
1446: new           #10
1449: dup
1450: invokespecial #11
1453: ldc           #12
1455: invokevirtual #13
1458: dload         60
1460: invokevirtual #60
1463: ldc           #15
1465: invokevirtual #13
1468: dconst_0
1469: invokevirtual #60
1472: ldc           #12
1474: invokevirtual #13
1477: invokevirtual #16
1480: dload         60
1482: dconst_0
1483: dcmpl
1484: ifne          1491
1487: iconst_1
1488: goto          1492
1491: iconst_0
1492: invokestatic  #17
1495: new           #10
1498: dup
1499: invokespecial #11
1502: ldc           #12
1504: invokevirtual #13
1507: iload         62
1509: invokevirtual #14
1512: ldc           #15
1514: invokevirtual #13
1517: iconst_0
1518: invokevirtual #14
1521: ldc           #12
1523: invokevirtual #13
1526: invokevirtual #16
1529: iload         62
1531: ifne          1538
1534: iconst_1
1535: goto          1539
1538: iconst_0
1539: invokestatic  #17
1542: new           #10
1545: dup
1546: invokespecial #11
1549: ldc           #12
1551: invokevirtual #13
1554: dload         63
1556: invokevirtual #60
1559: ldc           #15
1561: invokevirtual #13
1564: dconst_0
1565: invokevirtual #60
1568: ldc           #12
1570: invokevirtual #13
1573: invokevirtual #16
1576: dload         63
1578: dconst_0
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: aload         66
1593: invokestatic  #33
1596: new           #10
1599: dup
1600: invokespecial #11
1603: ldc           #12
1605: invokevirtual #13
1608: dload         68
1610: invokevirtual #60
1613: ldc           #15
1615: invokevirtual #13
1618: ldc2_w        #622
1621: invokevirtual #60
1624: ldc           #12
1626: invokevirtual #13
1629: invokevirtual #16
1632: dload         68
1634: ldc2_w        #622
1637: dcmpl
1638: ifne          1645
1641: iconst_1
1642: goto          1646
1645: iconst_0
1646: invokestatic  #17
1649: aload         70
1651: invokestatic  #33
1654: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 9139
End line: 9156
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 101L, (-30.055369951229576d), (double) 1.07957466E9f, (-1024.0d), false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation11 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = rotation11.getAxis();
        double double13 = rotation11.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D14);
        double double17 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #624
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #170
32: ldc2_w        #625
35: ldc2_w        #627
38: ldc2_w        #352
41: iconst_0
42: invokespecial #150
45: astore_1
46: new           #27
49: dup
50: ldc2_w        #146
53: ldc2_w        #72
56: ldc2_w        #148
59: dconst_1
60: iconst_0
61: invokespecial #150
64: astore_2
65: aload_2
66: invokevirtual #96
69: astore_3
70: aload_2
71: invokevirtual #95
74: dstore        4
76: getstatic     #314
79: astore        6
81: aload_2
82: aload         6
84: invokevirtual #98
87: astore        7
89: aload_1
90: aload         6
92: invokevirtual #98
95: astore        8
97: aload_1
98: invokevirtual #241
101: dstore        9
103: aload_3
104: invokestatic  #33
107: new           #10
110: dup
111: invokespecial #11
114: ldc           #12
116: invokevirtual #13
119: dload         4
121: invokevirtual #60
124: ldc           #15
126: invokevirtual #13
129: dconst_1
130: invokevirtual #60
133: ldc           #12
135: invokevirtual #13
138: invokevirtual #16
141: dload         4
143: dconst_1
144: dcmpl
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #17
156: aload         6
158: invokestatic  #33
161: aload         7
163: invokestatic  #33
166: aload         8
168: invokestatic  #33
171: new           #10
174: dup
175: invokespecial #11
178: ldc           #12
180: invokevirtual #13
183: dload         9
185: invokevirtual #60
188: ldc           #15
190: invokevirtual #13
193: ldc2_w        #170
196: invokevirtual #60
199: ldc           #12
201: invokevirtual #13
204: invokevirtual #16
207: dload         9
209: ldc2_w        #170
212: dcmpl
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #17
224: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 9159
End line: 9241
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double18 = vector3D14.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D17);
        double double19 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D11, vector3D17);
        double double20 = vector3D8.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D11);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D23, vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double49 = vector3D29.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double50 = vector3D8.dotProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        boolean boolean51 = vector3D37.isInfinite();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D58.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double63 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D55, vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double73 = vector3D69.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        double double74 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D66, vector3D72);
        boolean boolean75 = vector3D66.isInfinite();
        double double76 = vector3D55.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D66);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = vector3D66.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector78 = vector3D52.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector81 = vector3D79.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        double double83 = vector3D79.getNormSq();
        double double84 = vector3D79.getZ();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = rotation5.applyInverseTo(vector3D79);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 31.0d + "'", double6 == 31.0d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + Double.POSITIVE_INFINITY + "'", double20 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(euclidean3DVector78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(euclidean3DVector81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(vector3D85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #629
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #139
48: dstore_2
49: aload_1
50: invokevirtual #93
53: astore        4
55: getstatic     #126
58: astore        5
60: new           #43
63: dup
64: dconst_1
65: ldc2_w        #44
68: invokespecial #46
71: astore        6
73: new           #43
76: dup
77: dconst_1
78: ldc2_w        #44
81: invokespecial #46
84: astore        7
86: new           #43
89: dup
90: dconst_1
91: ldc2_w        #44
94: invokespecial #46
97: astore        8
99: aload         7
101: aload         8
103: invokevirtual #47
106: dstore        9
108: aload         6
110: aload         8
112: invokestatic  #48
115: dstore        11
117: aload         5
119: aload         6
121: invokevirtual #53
124: dstore        13
126: new           #43
129: dup
130: dconst_1
131: ldc2_w        #44
134: invokespecial #46
137: astore        15
139: new           #43
142: dup
143: dconst_1
144: ldc2_w        #44
147: invokespecial #46
150: astore        16
152: new           #43
155: dup
156: dconst_1
157: ldc2_w        #44
160: invokespecial #46
163: astore        17
165: aload         16
167: aload         17
169: invokevirtual #47
172: dstore        18
174: aload         15
176: aload         17
178: invokestatic  #48
181: dstore        20
183: new           #43
186: dup
187: dconst_1
188: ldc2_w        #44
191: invokespecial #46
194: astore        22
196: new           #43
199: dup
200: dconst_1
201: ldc2_w        #44
204: invokespecial #46
207: astore        23
209: aload         22
211: aload         23
213: invokevirtual #47
216: dstore        24
218: aload         23
220: invokevirtual #52
223: dstore        26
225: new           #43
228: dup
229: dconst_1
230: ldc2_w        #44
233: invokespecial #46
236: astore        28
238: new           #43
241: dup
242: dconst_1
243: ldc2_w        #44
246: invokespecial #46
249: astore        29
251: aload         28
253: aload         29
255: invokevirtual #47
258: dstore        30
260: aload         29
262: invokevirtual #52
265: dstore        32
267: aload         23
269: aload         29
271: invokevirtual #53
274: dstore        34
276: aload         17
278: aload         23
280: invokevirtual #129
283: dstore        36
285: aload         5
287: aload         23
289: invokevirtual #470
292: dstore        38
294: aload         23
296: invokevirtual #49
299: istore        40
301: getstatic     #126
304: astore        41
306: new           #43
309: dup
310: dconst_1
311: ldc2_w        #44
314: invokespecial #46
317: astore        42
319: new           #43
322: dup
323: dconst_1
324: ldc2_w        #44
327: invokespecial #46
330: astore        43
332: new           #43
335: dup
336: dconst_1
337: ldc2_w        #44
340: invokespecial #46
343: astore        44
345: aload         43
347: aload         44
349: invokevirtual #47
352: dstore        45
354: aload         42
356: aload         44
358: invokestatic  #48
361: dstore        47
363: new           #43
366: dup
367: dconst_1
368: ldc2_w        #44
371: invokespecial #46
374: astore        49
376: new           #43
379: dup
380: dconst_1
381: ldc2_w        #44
384: invokespecial #46
387: astore        50
389: new           #43
392: dup
393: dconst_1
394: ldc2_w        #44
397: invokespecial #46
400: astore        51
402: aload         50
404: aload         51
406: invokevirtual #47
409: dstore        52
411: aload         49
413: aload         51
415: invokestatic  #48
418: dstore        54
420: aload         49
422: invokevirtual #49
425: istore        56
427: aload         42
429: aload         49
431: invokevirtual #50
434: dstore        57
436: aload         49
438: invokevirtual #54
441: astore        59
443: aload         41
445: aload         59
447: invokevirtual #55
450: astore        60
452: aload         41
454: invokevirtual #163
457: astore        61
459: aload         61
461: dconst_0
462: invokevirtual #107
465: astore        62
467: aload         23
469: aload         61
471: invokevirtual #55
474: astore        63
476: aload         61
478: invokevirtual #111
481: dstore        64
483: aload         61
485: invokevirtual #311
488: dstore        66
490: aload_1
491: aload         61
493: invokevirtual #98
496: astore        68
498: new           #10
501: dup
502: invokespecial #11
505: ldc           #12
507: invokevirtual #13
510: dload_2
511: invokevirtual #60
514: ldc           #15
516: invokevirtual #13
519: ldc2_w        #273
522: invokevirtual #60
525: ldc           #12
527: invokevirtual #13
530: invokevirtual #16
533: dload_2
534: ldc2_w        #273
537: dcmpl
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #17
549: aload         4
551: invokestatic  #33
554: aload         5
556: invokestatic  #33
559: new           #10
562: dup
563: invokespecial #11
566: ldc           #12
568: invokevirtual #13
571: dload         9
573: invokevirtual #60
576: ldc           #15
578: invokevirtual #13
581: dconst_0
582: invokevirtual #60
585: ldc           #12
587: invokevirtual #13
590: invokevirtual #16
593: dload         9
595: dconst_0
596: dcmpl
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #17
608: new           #10
611: dup
612: invokespecial #11
615: ldc           #12
617: invokevirtual #13
620: dload         11
622: invokevirtual #60
625: ldc           #15
627: invokevirtual #13
630: dconst_0
631: invokevirtual #60
634: ldc           #12
636: invokevirtual #13
639: invokevirtual #16
642: dload         11
644: dconst_0
645: dcmpl
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #17
657: new           #10
660: dup
661: invokespecial #11
664: ldc           #12
666: invokevirtual #13
669: dload         13
671: invokevirtual #60
674: ldc           #15
676: invokevirtual #13
679: ldc2_w        #133
682: invokevirtual #60
685: ldc           #12
687: invokevirtual #13
690: invokevirtual #16
693: dload         13
695: ldc2_w        #133
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: new           #10
713: dup
714: invokespecial #11
717: ldc           #12
719: invokevirtual #13
722: dload         18
724: invokevirtual #60
727: ldc           #15
729: invokevirtual #13
732: dconst_0
733: invokevirtual #60
736: ldc           #12
738: invokevirtual #13
741: invokevirtual #16
744: dload         18
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: new           #10
762: dup
763: invokespecial #11
766: ldc           #12
768: invokevirtual #13
771: dload         20
773: invokevirtual #60
776: ldc           #15
778: invokevirtual #13
781: dconst_0
782: invokevirtual #60
785: ldc           #12
787: invokevirtual #13
790: invokevirtual #16
793: dload         20
795: dconst_0
796: dcmpl
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #17
808: new           #10
811: dup
812: invokespecial #11
815: ldc           #12
817: invokevirtual #13
820: dload         24
822: invokevirtual #60
825: ldc           #15
827: invokevirtual #13
830: dconst_0
831: invokevirtual #60
834: ldc           #12
836: invokevirtual #13
839: invokevirtual #16
842: dload         24
844: dconst_0
845: dcmpl
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #17
857: new           #10
860: dup
861: invokespecial #11
864: ldc           #12
866: invokevirtual #13
869: dload         26
871: invokevirtual #60
874: ldc           #15
876: invokevirtual #13
879: ldc2_w        #61
882: invokevirtual #60
885: ldc           #12
887: invokevirtual #13
890: invokevirtual #16
893: dload         26
895: ldc2_w        #61
898: dcmpl
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #17
910: new           #10
913: dup
914: invokespecial #11
917: ldc           #12
919: invokevirtual #13
922: dload         30
924: invokevirtual #60
927: ldc           #15
929: invokevirtual #13
932: dconst_0
933: invokevirtual #60
936: ldc           #12
938: invokevirtual #13
941: invokevirtual #16
944: dload         30
946: dconst_0
947: dcmpl
948: ifne          955
951: iconst_1
952: goto          956
955: iconst_0
956: invokestatic  #17
959: new           #10
962: dup
963: invokespecial #11
966: ldc           #12
968: invokevirtual #13
971: dload         32
973: invokevirtual #60
976: ldc           #15
978: invokevirtual #13
981: ldc2_w        #61
984: invokevirtual #60
987: ldc           #12
989: invokevirtual #13
992: invokevirtual #16
995: dload         32
997: ldc2_w        #61
1000: dcmpl
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #17
1012: new           #10
1015: dup
1016: invokespecial #11
1019: ldc           #12
1021: invokevirtual #13
1024: dload         34
1026: invokevirtual #60
1029: ldc           #15
1031: invokevirtual #13
1034: dconst_0
1035: invokevirtual #60
1038: ldc           #12
1040: invokevirtual #13
1043: invokevirtual #16
1046: dload         34
1048: dconst_0
1049: dcmpl
1050: ifne          1057
1053: iconst_1
1054: goto          1058
1057: iconst_0
1058: invokestatic  #17
1061: new           #10
1064: dup
1065: invokespecial #11
1068: ldc           #12
1070: invokevirtual #13
1073: dload         36
1075: invokevirtual #60
1078: ldc           #15
1080: invokevirtual #13
1083: dconst_0
1084: invokevirtual #60
1087: ldc           #12
1089: invokevirtual #13
1092: invokevirtual #16
1095: dload         36
1097: dconst_0
1098: dcmpl
1099: ifne          1106
1102: iconst_1
1103: goto          1107
1106: iconst_0
1107: invokestatic  #17
1110: dload         38
1112: invokestatic  #242
1115: invokestatic  #243
1118: new           #10
1121: dup
1122: invokespecial #11
1125: ldc           #12
1127: invokevirtual #13
1130: iload         40
1132: invokevirtual #14
1135: ldc           #15
1137: invokevirtual #13
1140: iconst_0
1141: invokevirtual #14
1144: ldc           #12
1146: invokevirtual #13
1149: invokevirtual #16
1152: iload         40
1154: ifne          1161
1157: iconst_1
1158: goto          1162
1161: iconst_0
1162: invokestatic  #17
1165: aload         41
1167: invokestatic  #33
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         45
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         45
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         47
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         47
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         52
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         52
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: dload         54
1331: invokevirtual #60
1334: ldc           #15
1336: invokevirtual #13
1339: dconst_0
1340: invokevirtual #60
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: dload         54
1353: dconst_0
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #17
1366: new           #10
1369: dup
1370: invokespecial #11
1373: ldc           #12
1375: invokevirtual #13
1378: iload         56
1380: invokevirtual #14
1383: ldc           #15
1385: invokevirtual #13
1388: iconst_0
1389: invokevirtual #14
1392: ldc           #12
1394: invokevirtual #13
1397: invokevirtual #16
1400: iload         56
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: new           #10
1416: dup
1417: invokespecial #11
1420: ldc           #12
1422: invokevirtual #13
1425: dload         57
1427: invokevirtual #60
1430: ldc           #15
1432: invokevirtual #13
1435: dconst_0
1436: invokevirtual #60
1439: ldc           #12
1441: invokevirtual #13
1444: invokevirtual #16
1447: dload         57
1449: dconst_0
1450: dcmpl
1451: ifne          1458
1454: iconst_1
1455: goto          1459
1458: iconst_0
1459: invokestatic  #17
1462: aload         59
1464: invokestatic  #33
1467: aload         60
1469: invokestatic  #33
1472: aload         61
1474: invokestatic  #33
1477: aload         62
1479: invokestatic  #33
1482: aload         63
1484: invokestatic  #33
1487: dload         64
1489: invokestatic  #242
1492: invokestatic  #243
1495: dload         66
1497: invokestatic  #242
1500: invokestatic  #243
1503: aload         68
1505: invokestatic  #33
1508: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 9244
End line: 9275
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D4 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double11 = vector3D7.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D10);
        double double12 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D4, vector3D10);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        boolean boolean24 = vector3D15.isInfinite();
        double double25 = vector3D4.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector27 = vector3D1.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation29 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D1, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) (-8516736541997678255L), vector3D1);
        boolean boolean31 = vector3D30.isNaN();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(euclidean3DVector27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #630
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: new           #27
172: dup
173: aload_1
174: ldc2_w        #72
177: invokespecial #103
180: astore        21
182: new           #43
185: dup
186: ldc2_w        #631
189: aload_1
190: invokespecial #305
193: astore        22
195: aload         22
197: invokevirtual #307
200: istore        23
202: aload_1
203: invokestatic  #33
206: new           #10
209: dup
210: invokespecial #11
213: ldc           #12
215: invokevirtual #13
218: dload         5
220: invokevirtual #60
223: ldc           #15
225: invokevirtual #13
228: dconst_0
229: invokevirtual #60
232: ldc           #12
234: invokevirtual #13
237: invokevirtual #16
240: dload         5
242: dconst_0
243: dcmpl
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #17
255: new           #10
258: dup
259: invokespecial #11
262: ldc           #12
264: invokevirtual #13
267: dload         7
269: invokevirtual #60
272: ldc           #15
274: invokevirtual #13
277: dconst_0
278: invokevirtual #60
281: ldc           #12
283: invokevirtual #13
286: invokevirtual #16
289: dload         7
291: dconst_0
292: dcmpl
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #17
304: new           #10
307: dup
308: invokespecial #11
311: ldc           #12
313: invokevirtual #13
316: dload         12
318: invokevirtual #60
321: ldc           #15
323: invokevirtual #13
326: dconst_0
327: invokevirtual #60
330: ldc           #12
332: invokevirtual #13
335: invokevirtual #16
338: dload         12
340: dconst_0
341: dcmpl
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #17
353: new           #10
356: dup
357: invokespecial #11
360: ldc           #12
362: invokevirtual #13
365: dload         14
367: invokevirtual #60
370: ldc           #15
372: invokevirtual #13
375: dconst_0
376: invokevirtual #60
379: ldc           #12
381: invokevirtual #13
384: invokevirtual #16
387: dload         14
389: dconst_0
390: dcmpl
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #17
402: new           #10
405: dup
406: invokespecial #11
409: ldc           #12
411: invokevirtual #13
414: iload         16
416: invokevirtual #14
419: ldc           #15
421: invokevirtual #13
424: iconst_0
425: invokevirtual #14
428: ldc           #12
430: invokevirtual #13
433: invokevirtual #16
436: iload         16
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #17
449: new           #10
452: dup
453: invokespecial #11
456: ldc           #12
458: invokevirtual #13
461: dload         17
463: invokevirtual #60
466: ldc           #15
468: invokevirtual #13
471: dconst_0
472: invokevirtual #60
475: ldc           #12
477: invokevirtual #13
480: invokevirtual #16
483: dload         17
485: dconst_0
486: dcmpl
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #17
498: aload         19
500: invokestatic  #33
503: aload         20
505: invokestatic  #33
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: iload         23
522: invokevirtual #14
525: ldc           #15
527: invokevirtual #13
530: iconst_0
531: invokevirtual #14
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: iload         23
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #17
555: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 9278
End line: 9320
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        double double12 = vector3D0.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D3);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = vector3D29.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        double double40 = vector3D29.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double41 = vector3D21.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double42 = vector3D0.dotProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation44 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D29, (double) 45L);
        double double45 = rotation44.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + Double.POSITIVE_INFINITY + "'", double12 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.7345682747147468d + "'", double31 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.3042271394340984d + "'", double45 == 0.3042271394340984d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #633
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: aload_1
83: aload_2
84: invokevirtual #53
87: dstore        9
89: new           #43
92: dup
93: dconst_1
94: ldc2_w        #44
97: invokespecial #46
100: astore        11
102: new           #43
105: dup
106: dconst_1
107: ldc2_w        #44
110: invokespecial #46
113: astore        12
115: new           #43
118: dup
119: dconst_1
120: ldc2_w        #44
123: invokespecial #46
126: astore        13
128: aload         12
130: aload         13
132: invokevirtual #47
135: dstore        14
137: aload         11
139: aload         13
141: invokestatic  #48
144: dstore        16
146: new           #43
149: dup
150: dconst_1
151: ldc2_w        #44
154: invokespecial #46
157: astore        18
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        19
172: aload         18
174: aload         19
176: invokevirtual #47
179: dstore        20
181: aload         19
183: invokevirtual #52
186: dstore        22
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        24
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        25
214: aload         24
216: aload         25
218: invokevirtual #47
221: dstore        26
223: aload         25
225: invokevirtual #52
228: dstore        28
230: aload         19
232: aload         25
234: invokevirtual #53
237: dstore        30
239: aload         13
241: aload         19
243: invokevirtual #129
246: dstore        32
248: aload_1
249: aload         19
251: invokevirtual #470
254: dstore        34
256: new           #27
259: dup
260: aload         19
262: ldc2_w        #634
265: invokespecial #103
268: astore        36
270: aload         36
272: invokevirtual #139
275: dstore        37
277: aload_1
278: invokestatic  #33
281: new           #10
284: dup
285: invokespecial #11
288: ldc           #12
290: invokevirtual #13
293: dload         5
295: invokevirtual #60
298: ldc           #15
300: invokevirtual #13
303: dconst_0
304: invokevirtual #60
307: ldc           #12
309: invokevirtual #13
312: invokevirtual #16
315: dload         5
317: dconst_0
318: dcmpl
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #17
330: new           #10
333: dup
334: invokespecial #11
337: ldc           #12
339: invokevirtual #13
342: dload         7
344: invokevirtual #60
347: ldc           #15
349: invokevirtual #13
352: dconst_0
353: invokevirtual #60
356: ldc           #12
358: invokevirtual #13
361: invokevirtual #16
364: dload         7
366: dconst_0
367: dcmpl
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #17
379: new           #10
382: dup
383: invokespecial #11
386: ldc           #12
388: invokevirtual #13
391: dload         9
393: invokevirtual #60
396: ldc           #15
398: invokevirtual #13
401: ldc2_w        #133
404: invokevirtual #60
407: ldc           #12
409: invokevirtual #13
412: invokevirtual #16
415: dload         9
417: ldc2_w        #133
420: dcmpl
421: ifne          428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #17
432: new           #10
435: dup
436: invokespecial #11
439: ldc           #12
441: invokevirtual #13
444: dload         14
446: invokevirtual #60
449: ldc           #15
451: invokevirtual #13
454: dconst_0
455: invokevirtual #60
458: ldc           #12
460: invokevirtual #13
463: invokevirtual #16
466: dload         14
468: dconst_0
469: dcmpl
470: ifne          477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #17
481: new           #10
484: dup
485: invokespecial #11
488: ldc           #12
490: invokevirtual #13
493: dload         16
495: invokevirtual #60
498: ldc           #15
500: invokevirtual #13
503: dconst_0
504: invokevirtual #60
507: ldc           #12
509: invokevirtual #13
512: invokevirtual #16
515: dload         16
517: dconst_0
518: dcmpl
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #17
530: new           #10
533: dup
534: invokespecial #11
537: ldc           #12
539: invokevirtual #13
542: dload         20
544: invokevirtual #60
547: ldc           #15
549: invokevirtual #13
552: dconst_0
553: invokevirtual #60
556: ldc           #12
558: invokevirtual #13
561: invokevirtual #16
564: dload         20
566: dconst_0
567: dcmpl
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #17
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         22
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: ldc2_w        #61
604: invokevirtual #60
607: ldc           #12
609: invokevirtual #13
612: invokevirtual #16
615: dload         22
617: ldc2_w        #61
620: dcmpl
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #17
632: new           #10
635: dup
636: invokespecial #11
639: ldc           #12
641: invokevirtual #13
644: dload         26
646: invokevirtual #60
649: ldc           #15
651: invokevirtual #13
654: dconst_0
655: invokevirtual #60
658: ldc           #12
660: invokevirtual #13
663: invokevirtual #16
666: dload         26
668: dconst_0
669: dcmpl
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #17
681: new           #10
684: dup
685: invokespecial #11
688: ldc           #12
690: invokevirtual #13
693: dload         28
695: invokevirtual #60
698: ldc           #15
700: invokevirtual #13
703: ldc2_w        #61
706: invokevirtual #60
709: ldc           #12
711: invokevirtual #13
714: invokevirtual #16
717: dload         28
719: ldc2_w        #61
722: dcmpl
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #17
734: new           #10
737: dup
738: invokespecial #11
741: ldc           #12
743: invokevirtual #13
746: dload         30
748: invokevirtual #60
751: ldc           #15
753: invokevirtual #13
756: dconst_0
757: invokevirtual #60
760: ldc           #12
762: invokevirtual #13
765: invokevirtual #16
768: dload         30
770: dconst_0
771: dcmpl
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #17
783: new           #10
786: dup
787: invokespecial #11
790: ldc           #12
792: invokevirtual #13
795: dload         32
797: invokevirtual #60
800: ldc           #15
802: invokevirtual #13
805: dconst_0
806: invokevirtual #60
809: ldc           #12
811: invokevirtual #13
814: invokevirtual #16
817: dload         32
819: dconst_0
820: dcmpl
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #17
832: dload         34
834: invokestatic  #242
837: invokestatic  #243
840: new           #10
843: dup
844: invokespecial #11
847: ldc           #12
849: invokevirtual #13
852: dload         37
854: invokevirtual #60
857: ldc           #15
859: invokevirtual #13
862: ldc2_w        #636
865: invokevirtual #60
868: ldc           #12
870: invokevirtual #13
873: invokevirtual #16
876: dload         37
878: ldc2_w        #636
881: dcmpl
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #17
893: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 9323
End line: 9403
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector86 = vector3D30.scalarMultiply(100.0d);
        double double87 = vector3D30.getNormSq();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector88 = vector3D30.getZero();
        double double89 = vector3D30.getNorm();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0000000000000002d + "'", double87 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(euclidean3DVector88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #638
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: ldc2_w        #68
499: invokevirtual #107
502: astore        64
504: aload         20
506: invokevirtual #111
509: dstore        65
511: aload         20
513: invokevirtual #198
516: astore        67
518: aload         20
520: invokevirtual #261
523: dstore        68
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         4
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         4
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: new           #10
577: dup
578: invokespecial #11
581: ldc           #12
583: invokevirtual #13
586: dload         6
588: invokevirtual #60
591: ldc           #15
593: invokevirtual #13
596: dconst_0
597: invokevirtual #60
600: ldc           #12
602: invokevirtual #13
605: invokevirtual #16
608: dload         6
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: new           #10
626: dup
627: invokespecial #11
630: ldc           #12
632: invokevirtual #13
635: dload         11
637: invokevirtual #60
640: ldc           #15
642: invokevirtual #13
645: dconst_0
646: invokevirtual #60
649: ldc           #12
651: invokevirtual #13
654: invokevirtual #16
657: dload         11
659: dconst_0
660: dcmpl
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #17
672: new           #10
675: dup
676: invokespecial #11
679: ldc           #12
681: invokevirtual #13
684: dload         13
686: invokevirtual #60
689: ldc           #15
691: invokevirtual #13
694: dconst_0
695: invokevirtual #60
698: ldc           #12
700: invokevirtual #13
703: invokevirtual #16
706: dload         13
708: dconst_0
709: dcmpl
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #17
721: new           #10
724: dup
725: invokespecial #11
728: ldc           #12
730: invokevirtual #13
733: iload         15
735: invokevirtual #14
738: ldc           #15
740: invokevirtual #13
743: iconst_0
744: invokevirtual #14
747: ldc           #12
749: invokevirtual #13
752: invokevirtual #16
755: iload         15
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: dload         16
782: invokevirtual #60
785: ldc           #15
787: invokevirtual #13
790: dconst_0
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         16
804: dconst_0
805: dcmpl
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #17
817: aload         18
819: invokestatic  #33
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         21
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         21
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: new           #10
874: dup
875: invokespecial #11
878: ldc           #12
880: invokevirtual #13
883: dload         25
885: invokevirtual #60
888: ldc           #15
890: invokevirtual #13
893: dconst_0
894: invokevirtual #60
897: ldc           #12
899: invokevirtual #13
902: invokevirtual #16
905: dload         25
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: dload         27
934: invokevirtual #60
937: ldc           #15
939: invokevirtual #13
942: ldc2_w        #61
945: invokevirtual #60
948: ldc           #12
950: invokevirtual #13
953: invokevirtual #16
956: dload         27
958: ldc2_w        #61
961: dcmpl
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #17
973: new           #10
976: dup
977: invokespecial #11
980: ldc           #12
982: invokevirtual #13
985: dload         31
987: invokevirtual #60
990: ldc           #15
992: invokevirtual #13
995: dconst_0
996: invokevirtual #60
999: ldc           #12
1001: invokevirtual #13
1004: invokevirtual #16
1007: dload         31
1009: dconst_0
1010: dcmpl
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #17
1022: new           #10
1025: dup
1026: invokespecial #11
1029: ldc           #12
1031: invokevirtual #13
1034: dload         33
1036: invokevirtual #60
1039: ldc           #15
1041: invokevirtual #13
1044: ldc2_w        #61
1047: invokevirtual #60
1050: ldc           #12
1052: invokevirtual #13
1055: invokevirtual #16
1058: dload         33
1060: ldc2_w        #61
1063: dcmpl
1064: ifne          1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #17
1075: new           #10
1078: dup
1079: invokespecial #11
1082: ldc           #12
1084: invokevirtual #13
1087: dload         35
1089: invokevirtual #60
1092: ldc           #15
1094: invokevirtual #13
1097: dconst_0
1098: invokevirtual #60
1101: ldc           #12
1103: invokevirtual #13
1106: invokevirtual #16
1109: dload         35
1111: dconst_0
1112: dcmpl
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #17
1124: new           #10
1127: dup
1128: invokespecial #11
1131: ldc           #12
1133: invokevirtual #13
1136: dload         40
1138: invokevirtual #60
1141: ldc           #15
1143: invokevirtual #13
1146: dconst_0
1147: invokevirtual #60
1150: ldc           #12
1152: invokevirtual #13
1155: invokevirtual #16
1158: dload         40
1160: dconst_0
1161: dcmpl
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #17
1173: new           #10
1176: dup
1177: invokespecial #11
1180: ldc           #12
1182: invokevirtual #13
1185: dload         42
1187: invokevirtual #60
1190: ldc           #15
1192: invokevirtual #13
1195: dconst_0
1196: invokevirtual #60
1199: ldc           #12
1201: invokevirtual #13
1204: invokevirtual #16
1207: dload         42
1209: dconst_0
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #17
1222: new           #10
1225: dup
1226: invokespecial #11
1229: ldc           #12
1231: invokevirtual #13
1234: dload         47
1236: invokevirtual #60
1239: ldc           #15
1241: invokevirtual #13
1244: dconst_0
1245: invokevirtual #60
1248: ldc           #12
1250: invokevirtual #13
1253: invokevirtual #16
1256: dload         47
1258: dconst_0
1259: dcmpl
1260: ifne          1267
1263: iconst_1
1264: goto          1268
1267: iconst_0
1268: invokestatic  #17
1271: new           #10
1274: dup
1275: invokespecial #11
1278: ldc           #12
1280: invokevirtual #13
1283: dload         49
1285: invokevirtual #60
1288: ldc           #15
1290: invokevirtual #13
1293: dconst_0
1294: invokevirtual #60
1297: ldc           #12
1299: invokevirtual #13
1302: invokevirtual #16
1305: dload         49
1307: dconst_0
1308: dcmpl
1309: ifne          1316
1312: iconst_1
1313: goto          1317
1316: iconst_0
1317: invokestatic  #17
1320: new           #10
1323: dup
1324: invokespecial #11
1327: ldc           #12
1329: invokevirtual #13
1332: iload         51
1334: invokevirtual #14
1337: ldc           #15
1339: invokevirtual #13
1342: iconst_0
1343: invokevirtual #14
1346: ldc           #12
1348: invokevirtual #13
1351: invokevirtual #16
1354: iload         51
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: dload         52
1381: invokevirtual #60
1384: ldc           #15
1386: invokevirtual #13
1389: dconst_0
1390: invokevirtual #60
1393: ldc           #12
1395: invokevirtual #13
1398: invokevirtual #16
1401: dload         52
1403: dconst_0
1404: dcmpl
1405: ifne          1412
1408: iconst_1
1409: goto          1413
1412: iconst_0
1413: invokestatic  #17
1416: aload         54
1418: invokestatic  #33
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         57
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         57
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         59
1472: invokestatic  #33
1475: aload         60
1477: invokestatic  #33
1480: new           #10
1483: dup
1484: invokespecial #11
1487: ldc           #12
1489: invokevirtual #13
1492: dload         61
1494: invokevirtual #60
1497: ldc           #15
1499: invokevirtual #13
1502: ldc2_w        #63
1505: invokevirtual #60
1508: ldc           #12
1510: invokevirtual #13
1513: invokevirtual #16
1516: dload         61
1518: ldc2_w        #63
1521: dcmpl
1522: ifne          1529
1525: iconst_1
1526: goto          1530
1529: iconst_0
1530: invokestatic  #17
1533: aload         64
1535: invokestatic  #33
1538: new           #10
1541: dup
1542: invokespecial #11
1545: ldc           #12
1547: invokevirtual #13
1550: dload         65
1552: invokevirtual #60
1555: ldc           #15
1557: invokevirtual #13
1560: ldc2_w        #63
1563: invokevirtual #60
1566: ldc           #12
1568: invokevirtual #13
1571: invokevirtual #16
1574: dload         65
1576: ldc2_w        #63
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: aload         67
1593: invokestatic  #33
1596: new           #10
1599: dup
1600: invokespecial #11
1603: ldc           #12
1605: invokevirtual #13
1608: dload         68
1610: invokevirtual #60
1613: ldc           #15
1615: invokevirtual #13
1618: dconst_1
1619: invokevirtual #60
1622: ldc           #12
1624: invokevirtual #13
1627: invokevirtual #16
1630: dload         68
1632: dconst_1
1633: dcmpl
1634: ifne          1641
1637: iconst_1
1638: goto          1642
1641: iconst_0
1642: invokestatic  #17
1645: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 9406
End line: 9488
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = rotation84.getAngles(rotationOrder86);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #639
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aconst_null
502: astore        65
504: aload         63
506: aload         65
508: invokevirtual #57
511: astore        66
513: ldc           #58
515: invokestatic  #21
518: goto          523
521: astore        66
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: dload         4
537: invokevirtual #60
540: ldc           #15
542: invokevirtual #13
545: dconst_0
546: invokevirtual #60
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: dload         4
559: dconst_0
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #17
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         6
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         6
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         11
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         11
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         13
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         13
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: iload         15
733: invokevirtual #14
736: ldc           #15
738: invokevirtual #13
741: iconst_0
742: invokevirtual #14
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: iload         15
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         16
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: dconst_0
789: invokevirtual #60
792: ldc           #12
794: invokevirtual #13
797: invokevirtual #16
800: dload         16
802: dconst_0
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: aload         18
817: invokestatic  #33
820: new           #10
823: dup
824: invokespecial #11
827: ldc           #12
829: invokevirtual #13
832: dload         21
834: invokevirtual #60
837: ldc           #15
839: invokevirtual #13
842: dconst_0
843: invokevirtual #60
846: ldc           #12
848: invokevirtual #13
851: invokevirtual #16
854: dload         21
856: dconst_0
857: dcmpl
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #17
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         25
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         25
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         27
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: ldc2_w        #61
943: invokevirtual #60
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: dload         27
956: ldc2_w        #61
959: dcmpl
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #17
971: new           #10
974: dup
975: invokespecial #11
978: ldc           #12
980: invokevirtual #13
983: dload         31
985: invokevirtual #60
988: ldc           #15
990: invokevirtual #13
993: dconst_0
994: invokevirtual #60
997: ldc           #12
999: invokevirtual #13
1002: invokevirtual #16
1005: dload         31
1007: dconst_0
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         33
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: ldc2_w        #61
1045: invokevirtual #60
1048: ldc           #12
1050: invokevirtual #13
1053: invokevirtual #16
1056: dload         33
1058: ldc2_w        #61
1061: dcmpl
1062: ifne          1069
1065: iconst_1
1066: goto          1070
1069: iconst_0
1070: invokestatic  #17
1073: new           #10
1076: dup
1077: invokespecial #11
1080: ldc           #12
1082: invokevirtual #13
1085: dload         35
1087: invokevirtual #60
1090: ldc           #15
1092: invokevirtual #13
1095: dconst_0
1096: invokevirtual #60
1099: ldc           #12
1101: invokevirtual #13
1104: invokevirtual #16
1107: dload         35
1109: dconst_0
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         40
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         40
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         42
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         42
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         47
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         47
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         49
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         49
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: iload         51
1332: invokevirtual #14
1335: ldc           #15
1337: invokevirtual #13
1340: iconst_0
1341: invokevirtual #14
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: iload         51
1354: ifne          1361
1357: iconst_1
1358: goto          1362
1361: iconst_0
1362: invokestatic  #17
1365: new           #10
1368: dup
1369: invokespecial #11
1372: ldc           #12
1374: invokevirtual #13
1377: dload         52
1379: invokevirtual #60
1382: ldc           #15
1384: invokevirtual #13
1387: dconst_0
1388: invokevirtual #60
1391: ldc           #12
1393: invokevirtual #13
1396: invokevirtual #16
1399: dload         52
1401: dconst_0
1402: dcmpl
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: aload         54
1416: invokestatic  #33
1419: new           #10
1422: dup
1423: invokespecial #11
1426: ldc           #12
1428: invokevirtual #13
1431: dload         57
1433: invokevirtual #60
1436: ldc           #15
1438: invokevirtual #13
1441: dconst_0
1442: invokevirtual #60
1445: ldc           #12
1447: invokevirtual #13
1450: invokevirtual #16
1453: dload         57
1455: dconst_0
1456: dcmpl
1457: ifne          1464
1460: iconst_1
1461: goto          1465
1464: iconst_0
1465: invokestatic  #17
1468: aload         59
1470: invokestatic  #33
1473: aload         60
1475: invokestatic  #33
1478: new           #10
1481: dup
1482: invokespecial #11
1485: ldc           #12
1487: invokevirtual #13
1490: dload         61
1492: invokevirtual #60
1495: ldc           #15
1497: invokevirtual #13
1500: ldc2_w        #63
1503: invokevirtual #60
1506: ldc           #12
1508: invokevirtual #13
1511: invokevirtual #16
1514: dload         61
1516: ldc2_w        #63
1519: dcmpl
1520: ifne          1527
1523: iconst_1
1524: goto          1528
1527: iconst_0
1528: invokestatic  #17
1531: aload         64
1533: invokestatic  #33
1536: return
Exception table:
from    to  target type
504   518   521   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 9491
End line: 9567
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        double double85 = rotation84.getQ3();
        double double86 = rotation84.getQ2();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #640
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #95
499: dstore        64
501: aload         63
503: invokevirtual #139
506: dstore        66
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: dload         4
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_0
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         4
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #17
557: new           #10
560: dup
561: invokespecial #11
564: ldc           #12
566: invokevirtual #13
569: dload         6
571: invokevirtual #60
574: ldc           #15
576: invokevirtual #13
579: dconst_0
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         6
593: dconst_0
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: new           #10
609: dup
610: invokespecial #11
613: ldc           #12
615: invokevirtual #13
618: dload         11
620: invokevirtual #60
623: ldc           #15
625: invokevirtual #13
628: dconst_0
629: invokevirtual #60
632: ldc           #12
634: invokevirtual #13
637: invokevirtual #16
640: dload         11
642: dconst_0
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #17
655: new           #10
658: dup
659: invokespecial #11
662: ldc           #12
664: invokevirtual #13
667: dload         13
669: invokevirtual #60
672: ldc           #15
674: invokevirtual #13
677: dconst_0
678: invokevirtual #60
681: ldc           #12
683: invokevirtual #13
686: invokevirtual #16
689: dload         13
691: dconst_0
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #17
704: new           #10
707: dup
708: invokespecial #11
711: ldc           #12
713: invokevirtual #13
716: iload         15
718: invokevirtual #14
721: ldc           #15
723: invokevirtual #13
726: iconst_0
727: invokevirtual #14
730: ldc           #12
732: invokevirtual #13
735: invokevirtual #16
738: iload         15
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: new           #10
754: dup
755: invokespecial #11
758: ldc           #12
760: invokevirtual #13
763: dload         16
765: invokevirtual #60
768: ldc           #15
770: invokevirtual #13
773: dconst_0
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         16
787: dconst_0
788: dcmpl
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #17
800: aload         18
802: invokestatic  #33
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         21
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         21
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         25
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         25
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         27
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #61
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         27
941: ldc2_w        #61
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         31
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         31
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         33
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: ldc2_w        #61
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         33
1043: ldc2_w        #61
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: dconst_0
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         35
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #17
1107: new           #10
1110: dup
1111: invokespecial #11
1114: ldc           #12
1116: invokevirtual #13
1119: dload         40
1121: invokevirtual #60
1124: ldc           #15
1126: invokevirtual #13
1129: dconst_0
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         40
1143: dconst_0
1144: dcmpl
1145: ifne          1152
1148: iconst_1
1149: goto          1153
1152: iconst_0
1153: invokestatic  #17
1156: new           #10
1159: dup
1160: invokespecial #11
1163: ldc           #12
1165: invokevirtual #13
1168: dload         42
1170: invokevirtual #60
1173: ldc           #15
1175: invokevirtual #13
1178: dconst_0
1179: invokevirtual #60
1182: ldc           #12
1184: invokevirtual #13
1187: invokevirtual #16
1190: dload         42
1192: dconst_0
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #17
1205: new           #10
1208: dup
1209: invokespecial #11
1212: ldc           #12
1214: invokevirtual #13
1217: dload         47
1219: invokevirtual #60
1222: ldc           #15
1224: invokevirtual #13
1227: dconst_0
1228: invokevirtual #60
1231: ldc           #12
1233: invokevirtual #13
1236: invokevirtual #16
1239: dload         47
1241: dconst_0
1242: dcmpl
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #17
1254: new           #10
1257: dup
1258: invokespecial #11
1261: ldc           #12
1263: invokevirtual #13
1266: dload         49
1268: invokevirtual #60
1271: ldc           #15
1273: invokevirtual #13
1276: dconst_0
1277: invokevirtual #60
1280: ldc           #12
1282: invokevirtual #13
1285: invokevirtual #16
1288: dload         49
1290: dconst_0
1291: dcmpl
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #17
1303: new           #10
1306: dup
1307: invokespecial #11
1310: ldc           #12
1312: invokevirtual #13
1315: iload         51
1317: invokevirtual #14
1320: ldc           #15
1322: invokevirtual #13
1325: iconst_0
1326: invokevirtual #14
1329: ldc           #12
1331: invokevirtual #13
1334: invokevirtual #16
1337: iload         51
1339: ifne          1346
1342: iconst_1
1343: goto          1347
1346: iconst_0
1347: invokestatic  #17
1350: new           #10
1353: dup
1354: invokespecial #11
1357: ldc           #12
1359: invokevirtual #13
1362: dload         52
1364: invokevirtual #60
1367: ldc           #15
1369: invokevirtual #13
1372: dconst_0
1373: invokevirtual #60
1376: ldc           #12
1378: invokevirtual #13
1381: invokevirtual #16
1384: dload         52
1386: dconst_0
1387: dcmpl
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #17
1399: aload         54
1401: invokestatic  #33
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         57
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         57
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         59
1455: invokestatic  #33
1458: aload         60
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         61
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: ldc2_w        #63
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         61
1501: ldc2_w        #63
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: new           #10
1519: dup
1520: invokespecial #11
1523: ldc           #12
1525: invokevirtual #13
1528: dload         64
1530: invokevirtual #60
1533: ldc           #15
1535: invokevirtual #13
1538: dconst_0
1539: invokevirtual #60
1542: ldc           #12
1544: invokevirtual #13
1547: invokevirtual #16
1550: dload         64
1552: dconst_0
1553: dcmpl
1554: ifne          1561
1557: iconst_1
1558: goto          1562
1561: iconst_0
1562: invokestatic  #17
1565: new           #10
1568: dup
1569: invokespecial #11
1572: ldc           #12
1574: invokevirtual #13
1577: dload         66
1579: invokevirtual #60
1582: ldc           #15
1584: invokevirtual #13
1587: dconst_0
1588: invokevirtual #60
1591: ldc           #12
1593: invokevirtual #13
1596: invokevirtual #16
1599: dload         66
1601: dconst_0
1602: dcmpl
1603: ifne          1610
1606: iconst_1
1607: goto          1611
1610: iconst_0
1611: invokestatic  #17
1614: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 9570
End line: 9657
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        double double94 = rotation85.getQ2();
        double[][] doubleArray95 = rotation85.getMatrix();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #641
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #43
525: dup
526: dconst_0
527: ldc2_w        #68
530: ldc2_w        #70
533: invokespecial #97
536: astore        70
538: aload         64
540: aload         70
542: invokevirtual #98
545: astore        71
547: aload         64
549: invokevirtual #139
552: dstore        72
554: aload         64
556: invokevirtual #222
559: astore        74
561: new           #10
564: dup
565: invokespecial #11
568: ldc           #12
570: invokevirtual #13
573: dload         4
575: invokevirtual #60
578: ldc           #15
580: invokevirtual #13
583: dconst_0
584: invokevirtual #60
587: ldc           #12
589: invokevirtual #13
592: invokevirtual #16
595: dload         4
597: dconst_0
598: dcmpl
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #17
610: new           #10
613: dup
614: invokespecial #11
617: ldc           #12
619: invokevirtual #13
622: dload         6
624: invokevirtual #60
627: ldc           #15
629: invokevirtual #13
632: dconst_0
633: invokevirtual #60
636: ldc           #12
638: invokevirtual #13
641: invokevirtual #16
644: dload         6
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #17
659: new           #10
662: dup
663: invokespecial #11
666: ldc           #12
668: invokevirtual #13
671: dload         11
673: invokevirtual #60
676: ldc           #15
678: invokevirtual #13
681: dconst_0
682: invokevirtual #60
685: ldc           #12
687: invokevirtual #13
690: invokevirtual #16
693: dload         11
695: dconst_0
696: dcmpl
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #17
708: new           #10
711: dup
712: invokespecial #11
715: ldc           #12
717: invokevirtual #13
720: dload         13
722: invokevirtual #60
725: ldc           #15
727: invokevirtual #13
730: dconst_0
731: invokevirtual #60
734: ldc           #12
736: invokevirtual #13
739: invokevirtual #16
742: dload         13
744: dconst_0
745: dcmpl
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #17
757: new           #10
760: dup
761: invokespecial #11
764: ldc           #12
766: invokevirtual #13
769: iload         15
771: invokevirtual #14
774: ldc           #15
776: invokevirtual #13
779: iconst_0
780: invokevirtual #14
783: ldc           #12
785: invokevirtual #13
788: invokevirtual #16
791: iload         15
793: ifne          800
796: iconst_1
797: goto          801
800: iconst_0
801: invokestatic  #17
804: new           #10
807: dup
808: invokespecial #11
811: ldc           #12
813: invokevirtual #13
816: dload         16
818: invokevirtual #60
821: ldc           #15
823: invokevirtual #13
826: dconst_0
827: invokevirtual #60
830: ldc           #12
832: invokevirtual #13
835: invokevirtual #16
838: dload         16
840: dconst_0
841: dcmpl
842: ifne          849
845: iconst_1
846: goto          850
849: iconst_0
850: invokestatic  #17
853: aload         18
855: invokestatic  #33
858: new           #10
861: dup
862: invokespecial #11
865: ldc           #12
867: invokevirtual #13
870: dload         21
872: invokevirtual #60
875: ldc           #15
877: invokevirtual #13
880: dconst_0
881: invokevirtual #60
884: ldc           #12
886: invokevirtual #13
889: invokevirtual #16
892: dload         21
894: dconst_0
895: dcmpl
896: ifne          903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #17
907: new           #10
910: dup
911: invokespecial #11
914: ldc           #12
916: invokevirtual #13
919: dload         25
921: invokevirtual #60
924: ldc           #15
926: invokevirtual #13
929: dconst_0
930: invokevirtual #60
933: ldc           #12
935: invokevirtual #13
938: invokevirtual #16
941: dload         25
943: dconst_0
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         27
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: ldc2_w        #61
981: invokevirtual #60
984: ldc           #12
986: invokevirtual #13
989: invokevirtual #16
992: dload         27
994: ldc2_w        #61
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #17
1009: new           #10
1012: dup
1013: invokespecial #11
1016: ldc           #12
1018: invokevirtual #13
1021: dload         31
1023: invokevirtual #60
1026: ldc           #15
1028: invokevirtual #13
1031: dconst_0
1032: invokevirtual #60
1035: ldc           #12
1037: invokevirtual #13
1040: invokevirtual #16
1043: dload         31
1045: dconst_0
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         33
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: ldc2_w        #61
1083: invokevirtual #60
1086: ldc           #12
1088: invokevirtual #13
1091: invokevirtual #16
1094: dload         33
1096: ldc2_w        #61
1099: dcmpl
1100: ifne          1107
1103: iconst_1
1104: goto          1108
1107: iconst_0
1108: invokestatic  #17
1111: new           #10
1114: dup
1115: invokespecial #11
1118: ldc           #12
1120: invokevirtual #13
1123: dload         35
1125: invokevirtual #60
1128: ldc           #15
1130: invokevirtual #13
1133: dconst_0
1134: invokevirtual #60
1137: ldc           #12
1139: invokevirtual #13
1142: invokevirtual #16
1145: dload         35
1147: dconst_0
1148: dcmpl
1149: ifne          1156
1152: iconst_1
1153: goto          1157
1156: iconst_0
1157: invokestatic  #17
1160: new           #10
1163: dup
1164: invokespecial #11
1167: ldc           #12
1169: invokevirtual #13
1172: dload         40
1174: invokevirtual #60
1177: ldc           #15
1179: invokevirtual #13
1182: dconst_0
1183: invokevirtual #60
1186: ldc           #12
1188: invokevirtual #13
1191: invokevirtual #16
1194: dload         40
1196: dconst_0
1197: dcmpl
1198: ifne          1205
1201: iconst_1
1202: goto          1206
1205: iconst_0
1206: invokestatic  #17
1209: new           #10
1212: dup
1213: invokespecial #11
1216: ldc           #12
1218: invokevirtual #13
1221: dload         42
1223: invokevirtual #60
1226: ldc           #15
1228: invokevirtual #13
1231: dconst_0
1232: invokevirtual #60
1235: ldc           #12
1237: invokevirtual #13
1240: invokevirtual #16
1243: dload         42
1245: dconst_0
1246: dcmpl
1247: ifne          1254
1250: iconst_1
1251: goto          1255
1254: iconst_0
1255: invokestatic  #17
1258: new           #10
1261: dup
1262: invokespecial #11
1265: ldc           #12
1267: invokevirtual #13
1270: dload         47
1272: invokevirtual #60
1275: ldc           #15
1277: invokevirtual #13
1280: dconst_0
1281: invokevirtual #60
1284: ldc           #12
1286: invokevirtual #13
1289: invokevirtual #16
1292: dload         47
1294: dconst_0
1295: dcmpl
1296: ifne          1303
1299: iconst_1
1300: goto          1304
1303: iconst_0
1304: invokestatic  #17
1307: new           #10
1310: dup
1311: invokespecial #11
1314: ldc           #12
1316: invokevirtual #13
1319: dload         49
1321: invokevirtual #60
1324: ldc           #15
1326: invokevirtual #13
1329: dconst_0
1330: invokevirtual #60
1333: ldc           #12
1335: invokevirtual #13
1338: invokevirtual #16
1341: dload         49
1343: dconst_0
1344: dcmpl
1345: ifne          1352
1348: iconst_1
1349: goto          1353
1352: iconst_0
1353: invokestatic  #17
1356: new           #10
1359: dup
1360: invokespecial #11
1363: ldc           #12
1365: invokevirtual #13
1368: iload         51
1370: invokevirtual #14
1373: ldc           #15
1375: invokevirtual #13
1378: iconst_0
1379: invokevirtual #14
1382: ldc           #12
1384: invokevirtual #13
1387: invokevirtual #16
1390: iload         51
1392: ifne          1399
1395: iconst_1
1396: goto          1400
1399: iconst_0
1400: invokestatic  #17
1403: new           #10
1406: dup
1407: invokespecial #11
1410: ldc           #12
1412: invokevirtual #13
1415: dload         52
1417: invokevirtual #60
1420: ldc           #15
1422: invokevirtual #13
1425: dconst_0
1426: invokevirtual #60
1429: ldc           #12
1431: invokevirtual #13
1434: invokevirtual #16
1437: dload         52
1439: dconst_0
1440: dcmpl
1441: ifne          1448
1444: iconst_1
1445: goto          1449
1448: iconst_0
1449: invokestatic  #17
1452: aload         54
1454: invokestatic  #33
1457: new           #10
1460: dup
1461: invokespecial #11
1464: ldc           #12
1466: invokevirtual #13
1469: dload         57
1471: invokevirtual #60
1474: ldc           #15
1476: invokevirtual #13
1479: dconst_0
1480: invokevirtual #60
1483: ldc           #12
1485: invokevirtual #13
1488: invokevirtual #16
1491: dload         57
1493: dconst_0
1494: dcmpl
1495: ifne          1502
1498: iconst_1
1499: goto          1503
1502: iconst_0
1503: invokestatic  #17
1506: aload         59
1508: invokestatic  #33
1511: aload         60
1513: invokestatic  #33
1516: new           #10
1519: dup
1520: invokespecial #11
1523: ldc           #12
1525: invokevirtual #13
1528: dload         61
1530: invokevirtual #60
1533: ldc           #15
1535: invokevirtual #13
1538: ldc2_w        #63
1541: invokevirtual #60
1544: ldc           #12
1546: invokevirtual #13
1549: invokevirtual #16
1552: dload         61
1554: ldc2_w        #63
1557: dcmpl
1558: ifne          1565
1561: iconst_1
1562: goto          1566
1565: iconst_0
1566: invokestatic  #17
1569: aload         64
1571: invokestatic  #33
1574: new           #10
1577: dup
1578: invokespecial #11
1581: ldc           #12
1583: invokevirtual #13
1586: dload         65
1588: invokevirtual #60
1591: ldc           #15
1593: invokevirtual #13
1596: dconst_0
1597: invokevirtual #60
1600: ldc           #12
1602: invokevirtual #13
1605: invokevirtual #16
1608: dload         65
1610: dconst_0
1611: dcmpl
1612: ifne          1619
1615: iconst_1
1616: goto          1620
1619: iconst_0
1620: invokestatic  #17
1623: new           #10
1626: dup
1627: invokespecial #11
1630: ldc           #12
1632: invokevirtual #13
1635: dload         67
1637: invokevirtual #60
1640: ldc           #15
1642: invokevirtual #13
1645: dconst_0
1646: invokevirtual #60
1649: ldc           #12
1651: invokevirtual #13
1654: invokevirtual #16
1657: dload         67
1659: dconst_0
1660: dcmpl
1661: ifne          1668
1664: iconst_1
1665: goto          1669
1668: iconst_0
1669: invokestatic  #17
1672: aload         69
1674: invokestatic  #33
1677: aload         71
1679: invokestatic  #33
1682: new           #10
1685: dup
1686: invokespecial #11
1689: ldc           #12
1691: invokevirtual #13
1694: dload         72
1696: invokevirtual #60
1699: ldc           #15
1701: invokevirtual #13
1704: dconst_0
1705: invokevirtual #60
1708: ldc           #12
1710: invokevirtual #13
1713: invokevirtual #16
1716: dload         72
1718: dconst_0
1719: dcmpl
1720: ifne          1727
1723: iconst_1
1724: goto          1728
1727: iconst_0
1728: invokestatic  #17
1731: aload         74
1733: invokestatic  #33
1736: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 9660
End line: 9754
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = vector3D16.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        double double27 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double28 = vector3D8.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double29 = vector3D16.getNormInf();
        double double30 = vector3D16.getNormInf();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D31.negate();
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D16, vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double41 = vector3D37.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D40);
        double double42 = vector3D40.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double49 = vector3D45.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        double double50 = vector3D48.getDelta();
        double double51 = vector3D40.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = vector3D48.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector53 = vector3D48.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double63 = vector3D59.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        double double64 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D56, vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double74 = vector3D70.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D73);
        double double75 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D67, vector3D73);
        boolean boolean76 = vector3D67.isInfinite();
        double double77 = vector3D56.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = vector3D67.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double85 = vector3D81.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D84);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = vector3D78.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D81.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D48, vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D94 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double95 = vector3D91.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D94);
        double double96 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D48, vector3D94);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D16, vector3D48);
        double[][] doubleArray98 = rotation97.getMatrix();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.7345682747147468d + "'", double18 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.6702668260599606d + "'", double29 == 0.6702668260599606d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.6702668260599606d + "'", double30 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0945599555233236d + "'", double34 == 1.0945599555233236d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.7345682747147468d + "'", double42 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.7345682747147468d + "'", double50 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(euclidean3DVector53);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #642
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: aload         8
103: aload         9
105: invokevirtual #47
108: dstore        10
110: aload         9
112: invokevirtual #52
115: dstore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        14
130: new           #43
133: dup
134: dconst_1
135: ldc2_w        #44
138: invokespecial #46
141: astore        15
143: aload         14
145: aload         15
147: invokevirtual #47
150: dstore        16
152: aload         15
154: invokevirtual #52
157: dstore        18
159: aload         9
161: aload         15
163: invokevirtual #53
166: dstore        20
168: aload_3
169: aload         9
171: invokevirtual #129
174: dstore        22
176: aload         9
178: invokevirtual #136
181: dstore        24
183: aload         9
185: invokevirtual #136
188: dstore        26
190: getstatic     #432
193: astore        28
195: aload         28
197: invokevirtual #163
200: astore        29
202: aload         28
204: invokevirtual #54
207: astore        30
209: aload         9
211: aload         28
213: invokestatic  #128
216: dstore        31
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        33
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        34
244: aload         33
246: aload         34
248: invokevirtual #47
251: dstore        35
253: aload         34
255: invokevirtual #52
258: dstore        37
260: new           #43
263: dup
264: dconst_1
265: ldc2_w        #44
268: invokespecial #46
271: astore        39
273: new           #43
276: dup
277: dconst_1
278: ldc2_w        #44
281: invokespecial #46
284: astore        40
286: aload         39
288: aload         40
290: invokevirtual #47
293: dstore        41
295: aload         40
297: invokevirtual #52
300: dstore        43
302: aload         34
304: aload         40
306: invokevirtual #53
309: dstore        45
311: aload         40
313: invokevirtual #54
316: astore        47
318: aload         40
320: invokevirtual #193
323: astore        48
325: new           #43
328: dup
329: dconst_1
330: ldc2_w        #44
333: invokespecial #46
336: astore        49
338: new           #43
341: dup
342: dconst_1
343: ldc2_w        #44
346: invokespecial #46
349: astore        50
351: new           #43
354: dup
355: dconst_1
356: ldc2_w        #44
359: invokespecial #46
362: astore        51
364: aload         50
366: aload         51
368: invokevirtual #47
371: dstore        52
373: aload         49
375: aload         51
377: invokestatic  #48
380: dstore        54
382: new           #43
385: dup
386: dconst_1
387: ldc2_w        #44
390: invokespecial #46
393: astore        56
395: new           #43
398: dup
399: dconst_1
400: ldc2_w        #44
403: invokespecial #46
406: astore        57
408: new           #43
411: dup
412: dconst_1
413: ldc2_w        #44
416: invokespecial #46
419: astore        58
421: aload         57
423: aload         58
425: invokevirtual #47
428: dstore        59
430: aload         56
432: aload         58
434: invokestatic  #48
437: dstore        61
439: aload         56
441: invokevirtual #49
444: istore        63
446: aload         49
448: aload         56
450: invokevirtual #50
453: dstore        64
455: aload         56
457: invokevirtual #54
460: astore        66
462: new           #43
465: dup
466: dconst_1
467: ldc2_w        #44
470: invokespecial #46
473: astore        67
475: new           #43
478: dup
479: dconst_1
480: ldc2_w        #44
483: invokespecial #46
486: astore        68
488: aload         67
490: aload         68
492: invokevirtual #47
495: dstore        69
497: aload         66
499: aload         67
501: invokevirtual #55
504: astore        71
506: aload         67
508: invokevirtual #193
511: astore        72
513: new           #27
516: dup
517: aload         40
519: aload         67
521: invokespecial #56
524: astore        73
526: new           #43
529: dup
530: dconst_1
531: ldc2_w        #44
534: invokespecial #46
537: astore        74
539: new           #43
542: dup
543: dconst_1
544: ldc2_w        #44
547: invokespecial #46
550: astore        75
552: aload         74
554: aload         75
556: invokevirtual #47
559: dstore        76
561: aload         40
563: aload         75
565: invokestatic  #127
568: dstore        78
570: new           #27
573: dup
574: aload         9
576: aload         40
578: invokespecial #56
581: astore        80
583: aload         80
585: invokevirtual #222
588: astore        81
590: new           #10
593: dup
594: invokespecial #11
597: ldc           #12
599: invokevirtual #13
602: dload         4
604: invokevirtual #60
607: ldc           #15
609: invokevirtual #13
612: dconst_0
613: invokevirtual #60
616: ldc           #12
618: invokevirtual #13
621: invokevirtual #16
624: dload         4
626: dconst_0
627: dcmpl
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #17
639: new           #10
642: dup
643: invokespecial #11
646: ldc           #12
648: invokevirtual #13
651: dload         6
653: invokevirtual #60
656: ldc           #15
658: invokevirtual #13
661: dconst_0
662: invokevirtual #60
665: ldc           #12
667: invokevirtual #13
670: invokevirtual #16
673: dload         6
675: dconst_0
676: dcmpl
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #17
688: new           #10
691: dup
692: invokespecial #11
695: ldc           #12
697: invokevirtual #13
700: dload         10
702: invokevirtual #60
705: ldc           #15
707: invokevirtual #13
710: dconst_0
711: invokevirtual #60
714: ldc           #12
716: invokevirtual #13
719: invokevirtual #16
722: dload         10
724: dconst_0
725: dcmpl
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #17
737: new           #10
740: dup
741: invokespecial #11
744: ldc           #12
746: invokevirtual #13
749: dload         12
751: invokevirtual #60
754: ldc           #15
756: invokevirtual #13
759: ldc2_w        #61
762: invokevirtual #60
765: ldc           #12
767: invokevirtual #13
770: invokevirtual #16
773: dload         12
775: ldc2_w        #61
778: dcmpl
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #17
790: new           #10
793: dup
794: invokespecial #11
797: ldc           #12
799: invokevirtual #13
802: dload         16
804: invokevirtual #60
807: ldc           #15
809: invokevirtual #13
812: dconst_0
813: invokevirtual #60
816: ldc           #12
818: invokevirtual #13
821: invokevirtual #16
824: dload         16
826: dconst_0
827: dcmpl
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #17
839: new           #10
842: dup
843: invokespecial #11
846: ldc           #12
848: invokevirtual #13
851: dload         18
853: invokevirtual #60
856: ldc           #15
858: invokevirtual #13
861: ldc2_w        #61
864: invokevirtual #60
867: ldc           #12
869: invokevirtual #13
872: invokevirtual #16
875: dload         18
877: ldc2_w        #61
880: dcmpl
881: ifne          888
884: iconst_1
885: goto          889
888: iconst_0
889: invokestatic  #17
892: new           #10
895: dup
896: invokespecial #11
899: ldc           #12
901: invokevirtual #13
904: dload         20
906: invokevirtual #60
909: ldc           #15
911: invokevirtual #13
914: dconst_0
915: invokevirtual #60
918: ldc           #12
920: invokevirtual #13
923: invokevirtual #16
926: dload         20
928: dconst_0
929: dcmpl
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #17
941: new           #10
944: dup
945: invokespecial #11
948: ldc           #12
950: invokevirtual #13
953: dload         22
955: invokevirtual #60
958: ldc           #15
960: invokevirtual #13
963: dconst_0
964: invokevirtual #60
967: ldc           #12
969: invokevirtual #13
972: invokevirtual #16
975: dload         22
977: dconst_0
978: dcmpl
979: ifne          986
982: iconst_1
983: goto          987
986: iconst_0
987: invokestatic  #17
990: new           #10
993: dup
994: invokespecial #11
997: ldc           #12
999: invokevirtual #13
1002: dload         24
1004: invokevirtual #60
1007: ldc           #15
1009: invokevirtual #13
1012: ldc2_w        #79
1015: invokevirtual #60
1018: ldc           #12
1020: invokevirtual #13
1023: invokevirtual #16
1026: dload         24
1028: ldc2_w        #79
1031: dcmpl
1032: ifne          1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #17
1043: new           #10
1046: dup
1047: invokespecial #11
1050: ldc           #12
1052: invokevirtual #13
1055: dload         26
1057: invokevirtual #60
1060: ldc           #15
1062: invokevirtual #13
1065: ldc2_w        #79
1068: invokevirtual #60
1071: ldc           #12
1073: invokevirtual #13
1076: invokevirtual #16
1079: dload         26
1081: ldc2_w        #79
1084: dcmpl
1085: ifne          1092
1088: iconst_1
1089: goto          1093
1092: iconst_0
1093: invokestatic  #17
1096: aload         28
1098: invokestatic  #33
1101: aload         29
1103: invokestatic  #33
1106: aload         30
1108: invokestatic  #33
1111: new           #10
1114: dup
1115: invokespecial #11
1118: ldc           #12
1120: invokevirtual #13
1123: dload         31
1125: invokevirtual #60
1128: ldc           #15
1130: invokevirtual #13
1133: ldc2_w        #643
1136: invokevirtual #60
1139: ldc           #12
1141: invokevirtual #13
1144: invokevirtual #16
1147: dload         31
1149: ldc2_w        #643
1152: dcmpl
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #17
1164: new           #10
1167: dup
1168: invokespecial #11
1171: ldc           #12
1173: invokevirtual #13
1176: dload         35
1178: invokevirtual #60
1181: ldc           #15
1183: invokevirtual #13
1186: dconst_0
1187: invokevirtual #60
1190: ldc           #12
1192: invokevirtual #13
1195: invokevirtual #16
1198: dload         35
1200: dconst_0
1201: dcmpl
1202: ifne          1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #17
1213: new           #10
1216: dup
1217: invokespecial #11
1220: ldc           #12
1222: invokevirtual #13
1225: dload         37
1227: invokevirtual #60
1230: ldc           #15
1232: invokevirtual #13
1235: ldc2_w        #61
1238: invokevirtual #60
1241: ldc           #12
1243: invokevirtual #13
1246: invokevirtual #16
1249: dload         37
1251: ldc2_w        #61
1254: dcmpl
1255: ifne          1262
1258: iconst_1
1259: goto          1263
1262: iconst_0
1263: invokestatic  #17
1266: new           #10
1269: dup
1270: invokespecial #11
1273: ldc           #12
1275: invokevirtual #13
1278: dload         41
1280: invokevirtual #60
1283: ldc           #15
1285: invokevirtual #13
1288: dconst_0
1289: invokevirtual #60
1292: ldc           #12
1294: invokevirtual #13
1297: invokevirtual #16
1300: dload         41
1302: dconst_0
1303: dcmpl
1304: ifne          1311
1307: iconst_1
1308: goto          1312
1311: iconst_0
1312: invokestatic  #17
1315: new           #10
1318: dup
1319: invokespecial #11
1322: ldc           #12
1324: invokevirtual #13
1327: dload         43
1329: invokevirtual #60
1332: ldc           #15
1334: invokevirtual #13
1337: ldc2_w        #61
1340: invokevirtual #60
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: dload         43
1353: ldc2_w        #61
1356: dcmpl
1357: ifne          1364
1360: iconst_1
1361: goto          1365
1364: iconst_0
1365: invokestatic  #17
1368: new           #10
1371: dup
1372: invokespecial #11
1375: ldc           #12
1377: invokevirtual #13
1380: dload         45
1382: invokevirtual #60
1385: ldc           #15
1387: invokevirtual #13
1390: dconst_0
1391: invokevirtual #60
1394: ldc           #12
1396: invokevirtual #13
1399: invokevirtual #16
1402: dload         45
1404: dconst_0
1405: dcmpl
1406: ifne          1413
1409: iconst_1
1410: goto          1414
1413: iconst_0
1414: invokestatic  #17
1417: aload         47
1419: invokestatic  #33
1422: aload         48
1424: invokestatic  #33
1427: new           #10
1430: dup
1431: invokespecial #11
1434: ldc           #12
1436: invokevirtual #13
1439: dload         52
1441: invokevirtual #60
1444: ldc           #15
1446: invokevirtual #13
1449: dconst_0
1450: invokevirtual #60
1453: ldc           #12
1455: invokevirtual #13
1458: invokevirtual #16
1461: dload         52
1463: dconst_0
1464: dcmpl
1465: ifne          1472
1468: iconst_1
1469: goto          1473
1472: iconst_0
1473: invokestatic  #17
1476: new           #10
1479: dup
1480: invokespecial #11
1483: ldc           #12
1485: invokevirtual #13
1488: dload         54
1490: invokevirtual #60
1493: ldc           #15
1495: invokevirtual #13
1498: dconst_0
1499: invokevirtual #60
1502: ldc           #12
1504: invokevirtual #13
1507: invokevirtual #16
1510: dload         54
1512: dconst_0
1513: dcmpl
1514: ifne          1521
1517: iconst_1
1518: goto          1522
1521: iconst_0
1522: invokestatic  #17
1525: new           #10
1528: dup
1529: invokespecial #11
1532: ldc           #12
1534: invokevirtual #13
1537: dload         59
1539: invokevirtual #60
1542: ldc           #15
1544: invokevirtual #13
1547: dconst_0
1548: invokevirtual #60
1551: ldc           #12
1553: invokevirtual #13
1556: invokevirtual #16
1559: dload         59
1561: dconst_0
1562: dcmpl
1563: ifne          1570
1566: iconst_1
1567: goto          1571
1570: iconst_0
1571: invokestatic  #17
1574: new           #10
1577: dup
1578: invokespecial #11
1581: ldc           #12
1583: invokevirtual #13
1586: dload         61
1588: invokevirtual #60
1591: ldc           #15
1593: invokevirtual #13
1596: dconst_0
1597: invokevirtual #60
1600: ldc           #12
1602: invokevirtual #13
1605: invokevirtual #16
1608: dload         61
1610: dconst_0
1611: dcmpl
1612: ifne          1619
1615: iconst_1
1616: goto          1620
1619: iconst_0
1620: invokestatic  #17
1623: new           #10
1626: dup
1627: invokespecial #11
1630: ldc           #12
1632: invokevirtual #13
1635: iload         63
1637: invokevirtual #14
1640: ldc           #15
1642: invokevirtual #13
1645: iconst_0
1646: invokevirtual #14
1649: ldc           #12
1651: invokevirtual #13
1654: invokevirtual #16
1657: iload         63
1659: ifne          1666
1662: iconst_1
1663: goto          1667
1666: iconst_0
1667: invokestatic  #17
1670: new           #10
1673: dup
1674: invokespecial #11
1677: ldc           #12
1679: invokevirtual #13
1682: dload         64
1684: invokevirtual #60
1687: ldc           #15
1689: invokevirtual #13
1692: dconst_0
1693: invokevirtual #60
1696: ldc           #12
1698: invokevirtual #13
1701: invokevirtual #16
1704: dload         64
1706: dconst_0
1707: dcmpl
1708: ifne          1715
1711: iconst_1
1712: goto          1716
1715: iconst_0
1716: invokestatic  #17
1719: aload         66
1721: invokestatic  #33
1724: new           #10
1727: dup
1728: invokespecial #11
1731: ldc           #12
1733: invokevirtual #13
1736: dload         69
1738: invokevirtual #60
1741: ldc           #15
1743: invokevirtual #13
1746: dconst_0
1747: invokevirtual #60
1750: ldc           #12
1752: invokevirtual #13
1755: invokevirtual #16
1758: dload         69
1760: dconst_0
1761: dcmpl
1762: ifne          1769
1765: iconst_1
1766: goto          1770
1769: iconst_0
1770: invokestatic  #17
1773: aload         71
1775: invokestatic  #33
1778: aload         72
1780: invokestatic  #33
1783: new           #10
1786: dup
1787: invokespecial #11
1790: ldc           #12
1792: invokevirtual #13
1795: dload         76
1797: invokevirtual #60
1800: ldc           #15
1802: invokevirtual #13
1805: dconst_0
1806: invokevirtual #60
1809: ldc           #12
1811: invokevirtual #13
1814: invokevirtual #16
1817: dload         76
1819: dconst_0
1820: dcmpl
1821: ifne          1828
1824: iconst_1
1825: goto          1829
1828: iconst_0
1829: invokestatic  #17
1832: new           #10
1835: dup
1836: invokespecial #11
1839: ldc           #12
1841: invokevirtual #13
1844: dload         78
1846: invokevirtual #60
1849: ldc           #15
1851: invokevirtual #13
1854: dconst_0
1855: invokevirtual #60
1858: ldc           #12
1860: invokevirtual #13
1863: invokevirtual #16
1866: dload         78
1868: dconst_0
1869: dcmpl
1870: ifne          1877
1873: iconst_1
1874: goto          1878
1877: iconst_0
1878: invokestatic  #17
1881: aload         81
1883: invokestatic  #33
1886: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 9757
End line: 9769
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        double[][] doubleArray8 = rotation5.getMatrix();
        java.lang.Class<?> wildcardClass9 = rotation5.getClass();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #645
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: aload_1
55: invokevirtual #222
58: astore        4
60: aload_1
61: invokevirtual #541
64: astore        5
66: aload_2
67: invokestatic  #33
70: aload_3
71: invokestatic  #33
74: aload         4
76: invokestatic  #33
79: aload         5
81: invokestatic  #33
84: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 9772
End line: 9809
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = vector3D16.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double25 = vector3D21.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double26 = vector3D24.getDelta();
        double double27 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D24);
        double double28 = vector3D8.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double35 = vector3D31.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        double double36 = vector3D16.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        double double37 = vector3D31.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation39 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D31, (double) 51L);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = rotation39.getAxis();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.7345682747147468d + "'", double18 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.7345682747147468d + "'", double26 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0000000000000002d + "'", double37 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #646
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: aload         8
103: aload         9
105: invokevirtual #47
108: dstore        10
110: aload         9
112: invokevirtual #52
115: dstore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        14
130: new           #43
133: dup
134: dconst_1
135: ldc2_w        #44
138: invokespecial #46
141: astore        15
143: aload         14
145: aload         15
147: invokevirtual #47
150: dstore        16
152: aload         15
154: invokevirtual #52
157: dstore        18
159: aload         9
161: aload         15
163: invokevirtual #53
166: dstore        20
168: aload_3
169: aload         9
171: invokevirtual #129
174: dstore        22
176: new           #43
179: dup
180: dconst_1
181: ldc2_w        #44
184: invokespecial #46
187: astore        24
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        25
202: aload         24
204: aload         25
206: invokevirtual #47
209: dstore        26
211: aload         9
213: aload         24
215: invokevirtual #53
218: dstore        28
220: aload         24
222: invokevirtual #111
225: dstore        30
227: new           #27
230: dup
231: aload         24
233: ldc2_w        #647
236: invokespecial #103
239: astore        32
241: aload         32
243: invokevirtual #96
246: astore        33
248: new           #10
251: dup
252: invokespecial #11
255: ldc           #12
257: invokevirtual #13
260: dload         4
262: invokevirtual #60
265: ldc           #15
267: invokevirtual #13
270: dconst_0
271: invokevirtual #60
274: ldc           #12
276: invokevirtual #13
279: invokevirtual #16
282: dload         4
284: dconst_0
285: dcmpl
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #17
297: new           #10
300: dup
301: invokespecial #11
304: ldc           #12
306: invokevirtual #13
309: dload         6
311: invokevirtual #60
314: ldc           #15
316: invokevirtual #13
319: dconst_0
320: invokevirtual #60
323: ldc           #12
325: invokevirtual #13
328: invokevirtual #16
331: dload         6
333: dconst_0
334: dcmpl
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #17
346: new           #10
349: dup
350: invokespecial #11
353: ldc           #12
355: invokevirtual #13
358: dload         10
360: invokevirtual #60
363: ldc           #15
365: invokevirtual #13
368: dconst_0
369: invokevirtual #60
372: ldc           #12
374: invokevirtual #13
377: invokevirtual #16
380: dload         10
382: dconst_0
383: dcmpl
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #17
395: new           #10
398: dup
399: invokespecial #11
402: ldc           #12
404: invokevirtual #13
407: dload         12
409: invokevirtual #60
412: ldc           #15
414: invokevirtual #13
417: ldc2_w        #61
420: invokevirtual #60
423: ldc           #12
425: invokevirtual #13
428: invokevirtual #16
431: dload         12
433: ldc2_w        #61
436: dcmpl
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #17
448: new           #10
451: dup
452: invokespecial #11
455: ldc           #12
457: invokevirtual #13
460: dload         16
462: invokevirtual #60
465: ldc           #15
467: invokevirtual #13
470: dconst_0
471: invokevirtual #60
474: ldc           #12
476: invokevirtual #13
479: invokevirtual #16
482: dload         16
484: dconst_0
485: dcmpl
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #17
497: new           #10
500: dup
501: invokespecial #11
504: ldc           #12
506: invokevirtual #13
509: dload         18
511: invokevirtual #60
514: ldc           #15
516: invokevirtual #13
519: ldc2_w        #61
522: invokevirtual #60
525: ldc           #12
527: invokevirtual #13
530: invokevirtual #16
533: dload         18
535: ldc2_w        #61
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #17
550: new           #10
553: dup
554: invokespecial #11
557: ldc           #12
559: invokevirtual #13
562: dload         20
564: invokevirtual #60
567: ldc           #15
569: invokevirtual #13
572: dconst_0
573: invokevirtual #60
576: ldc           #12
578: invokevirtual #13
581: invokevirtual #16
584: dload         20
586: dconst_0
587: dcmpl
588: ifne          595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #17
599: new           #10
602: dup
603: invokespecial #11
606: ldc           #12
608: invokevirtual #13
611: dload         22
613: invokevirtual #60
616: ldc           #15
618: invokevirtual #13
621: dconst_0
622: invokevirtual #60
625: ldc           #12
627: invokevirtual #13
630: invokevirtual #16
633: dload         22
635: dconst_0
636: dcmpl
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #17
648: new           #10
651: dup
652: invokespecial #11
655: ldc           #12
657: invokevirtual #13
660: dload         26
662: invokevirtual #60
665: ldc           #15
667: invokevirtual #13
670: dconst_0
671: invokevirtual #60
674: ldc           #12
676: invokevirtual #13
679: invokevirtual #16
682: dload         26
684: dconst_0
685: dcmpl
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #17
697: new           #10
700: dup
701: invokespecial #11
704: ldc           #12
706: invokevirtual #13
709: dload         28
711: invokevirtual #60
714: ldc           #15
716: invokevirtual #13
719: dconst_0
720: invokevirtual #60
723: ldc           #12
725: invokevirtual #13
728: invokevirtual #16
731: dload         28
733: dconst_0
734: dcmpl
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #17
746: new           #10
749: dup
750: invokespecial #11
753: ldc           #12
755: invokevirtual #13
758: dload         30
760: invokevirtual #60
763: ldc           #15
765: invokevirtual #13
768: ldc2_w        #63
771: invokevirtual #60
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: dload         30
784: ldc2_w        #63
787: dcmpl
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #17
799: aload         33
801: invokestatic  #33
804: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 9812
End line: 9818
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 0.0f, 2979.3803161142273d, 101.0d, 1.0000000000000002d, false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2979.3803161142273d + "'", double6 == 2979.3803161142273d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #649
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: dconst_0
30: ldc2_w        #468
33: ldc2_w        #170
36: ldc2_w        #63
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #94
48: dstore_2
49: new           #10
52: dup
53: invokespecial #11
56: ldc           #12
58: invokevirtual #13
61: dload_2
62: invokevirtual #60
65: ldc           #15
67: invokevirtual #13
70: ldc2_w        #468
73: invokevirtual #60
76: ldc           #12
78: invokevirtual #13
81: invokevirtual #16
84: dload_2
85: ldc2_w        #468
88: dcmpl
89: ifne          96
92: iconst_1
93: goto          97
96: iconst_0
97: invokestatic  #17
100: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 9821
End line: 9832
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, 0.0d, 1.382349300424506d, 22.24871540768837d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #650
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: dconst_0
33: ldc2_w        #546
36: ldc2_w        #651
39: invokespecial #81
42: astore_2
43: ldc           #20
45: invokestatic  #21
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 9835
End line: 9843
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ1();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.079574538E9d + "'", double7 == 1.079574538E9d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #653
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #93
48: astore_2
49: aload_2
50: invokevirtual #94
53: dstore_3
54: aload_2
55: invokestatic  #33
58: new           #10
61: dup
62: invokespecial #11
65: ldc           #12
67: invokevirtual #13
70: dload_3
71: invokevirtual #60
74: ldc           #15
76: invokevirtual #13
79: ldc2_w        #72
82: invokevirtual #60
85: ldc           #12
87: invokevirtual #13
90: invokevirtual #16
93: dload_3
94: ldc2_w        #72
97: dcmpl
98: ifne          105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #17
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 9846
End line: 9936
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        double double87 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D79, vector3D85);
        boolean boolean88 = vector3D79.isInfinite();
        double double89 = vector3D68.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector91 = vector3D65.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D90);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D65.orthogonal();
        double double93 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, 2.7681156723791426E13d);
        org.apache.commons.math.geometry.Space space96 = vector3D2.getSpace();
        int int97 = space96.getDimension();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(euclidean3DVector91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + Double.POSITIVE_INFINITY + "'", double93 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(space96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 3 + "'", int97 == 3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #654
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: getstatic     #126
385: astore        50
387: new           #43
390: dup
391: dconst_1
392: ldc2_w        #44
395: invokespecial #46
398: astore        51
400: new           #43
403: dup
404: dconst_1
405: ldc2_w        #44
408: invokespecial #46
411: astore        52
413: new           #43
416: dup
417: dconst_1
418: ldc2_w        #44
421: invokespecial #46
424: astore        53
426: aload         52
428: aload         53
430: invokevirtual #47
433: dstore        54
435: aload         51
437: aload         53
439: invokestatic  #48
442: dstore        56
444: new           #43
447: dup
448: dconst_1
449: ldc2_w        #44
452: invokespecial #46
455: astore        58
457: new           #43
460: dup
461: dconst_1
462: ldc2_w        #44
465: invokespecial #46
468: astore        59
470: new           #43
473: dup
474: dconst_1
475: ldc2_w        #44
478: invokespecial #46
481: astore        60
483: aload         59
485: aload         60
487: invokevirtual #47
490: dstore        61
492: aload         58
494: aload         60
496: invokestatic  #48
499: dstore        63
501: aload         58
503: invokevirtual #49
506: istore        65
508: aload         51
510: aload         58
512: invokevirtual #50
515: dstore        66
517: aload         58
519: invokevirtual #54
522: astore        68
524: aload         50
526: aload         68
528: invokevirtual #55
531: astore        69
533: aload         50
535: invokevirtual #163
538: astore        70
540: aload_1
541: aload         50
543: invokevirtual #50
546: dstore        71
548: new           #27
551: dup
552: aload_1
553: ldc2_w        #164
556: invokespecial #103
559: astore        73
561: aload_1
562: invokevirtual #51
565: astore        74
567: aload         74
569: invokeinterface #456,  1
574: istore        75
576: new           #10
579: dup
580: invokespecial #11
583: ldc           #12
585: invokevirtual #13
588: dload         4
590: invokevirtual #60
593: ldc           #15
595: invokevirtual #13
598: dconst_0
599: invokevirtual #60
602: ldc           #12
604: invokevirtual #13
607: invokevirtual #16
610: dload         4
612: dconst_0
613: dcmpl
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #17
625: new           #10
628: dup
629: invokespecial #11
632: ldc           #12
634: invokevirtual #13
637: dload         6
639: invokevirtual #60
642: ldc           #15
644: invokevirtual #13
647: dconst_0
648: invokevirtual #60
651: ldc           #12
653: invokevirtual #13
656: invokevirtual #16
659: dload         6
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: new           #10
677: dup
678: invokespecial #11
681: ldc           #12
683: invokevirtual #13
686: iload         8
688: invokevirtual #14
691: ldc           #15
693: invokevirtual #13
696: iconst_0
697: invokevirtual #14
700: ldc           #12
702: invokevirtual #13
705: invokevirtual #16
708: iload         8
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #17
721: new           #10
724: dup
725: invokespecial #11
728: ldc           #12
730: invokevirtual #13
733: dload         9
735: invokevirtual #60
738: ldc           #15
740: invokevirtual #13
743: ldc2_w        #167
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         9
759: ldc2_w        #167
762: dcmpl
763: ifne          770
766: iconst_1
767: goto          771
770: iconst_0
771: invokestatic  #17
774: new           #10
777: dup
778: invokespecial #11
781: ldc           #12
783: invokevirtual #13
786: dload         13
788: invokevirtual #60
791: ldc           #15
793: invokevirtual #13
796: dconst_0
797: invokevirtual #60
800: ldc           #12
802: invokevirtual #13
805: invokevirtual #16
808: dload         13
810: dconst_0
811: dcmpl
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #17
823: new           #10
826: dup
827: invokespecial #11
830: ldc           #12
832: invokevirtual #13
835: dload         15
837: invokevirtual #60
840: ldc           #15
842: invokevirtual #13
845: ldc2_w        #61
848: invokevirtual #60
851: ldc           #12
853: invokevirtual #13
856: invokevirtual #16
859: dload         15
861: ldc2_w        #61
864: dcmpl
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #17
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         19
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         19
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         21
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: ldc2_w        #61
950: invokevirtual #60
953: ldc           #12
955: invokevirtual #13
958: invokevirtual #16
961: dload         21
963: ldc2_w        #61
966: dcmpl
967: ifne          974
970: iconst_1
971: goto          975
974: iconst_0
975: invokestatic  #17
978: new           #10
981: dup
982: invokespecial #11
985: ldc           #12
987: invokevirtual #13
990: dload         23
992: invokevirtual #60
995: ldc           #15
997: invokevirtual #13
1000: dconst_0
1001: invokevirtual #60
1004: ldc           #12
1006: invokevirtual #13
1009: invokevirtual #16
1012: dload         23
1014: dconst_0
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         28
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         28
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         30
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: dconst_0
1099: invokevirtual #60
1102: ldc           #12
1104: invokevirtual #13
1107: invokevirtual #16
1110: dload         30
1112: dconst_0
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         35
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         35
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         37
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: dconst_0
1197: invokevirtual #60
1200: ldc           #12
1202: invokevirtual #13
1205: invokevirtual #16
1208: dload         37
1210: dconst_0
1211: dcmpl
1212: ifne          1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #17
1223: new           #10
1226: dup
1227: invokespecial #11
1230: ldc           #12
1232: invokevirtual #13
1235: iload         39
1237: invokevirtual #14
1240: ldc           #15
1242: invokevirtual #13
1245: iconst_0
1246: invokevirtual #14
1249: ldc           #12
1251: invokevirtual #13
1254: invokevirtual #16
1257: iload         39
1259: ifne          1266
1262: iconst_1
1263: goto          1267
1266: iconst_0
1267: invokestatic  #17
1270: new           #10
1273: dup
1274: invokespecial #11
1277: ldc           #12
1279: invokevirtual #13
1282: dload         40
1284: invokevirtual #60
1287: ldc           #15
1289: invokevirtual #13
1292: dconst_0
1293: invokevirtual #60
1296: ldc           #12
1298: invokevirtual #13
1301: invokevirtual #16
1304: dload         40
1306: dconst_0
1307: dcmpl
1308: ifne          1315
1311: iconst_1
1312: goto          1316
1315: iconst_0
1316: invokestatic  #17
1319: aload         42
1321: invokestatic  #33
1324: new           #10
1327: dup
1328: invokespecial #11
1331: ldc           #12
1333: invokevirtual #13
1336: dload         45
1338: invokevirtual #60
1341: ldc           #15
1343: invokevirtual #13
1346: dconst_0
1347: invokevirtual #60
1350: ldc           #12
1352: invokevirtual #13
1355: invokevirtual #16
1358: dload         45
1360: dconst_0
1361: dcmpl
1362: ifne          1369
1365: iconst_1
1366: goto          1370
1369: iconst_0
1370: invokestatic  #17
1373: aload         47
1375: invokestatic  #33
1378: aload         48
1380: invokestatic  #33
1383: aload         50
1385: invokestatic  #33
1388: new           #10
1391: dup
1392: invokespecial #11
1395: ldc           #12
1397: invokevirtual #13
1400: dload         54
1402: invokevirtual #60
1405: ldc           #15
1407: invokevirtual #13
1410: dconst_0
1411: invokevirtual #60
1414: ldc           #12
1416: invokevirtual #13
1419: invokevirtual #16
1422: dload         54
1424: dconst_0
1425: dcmpl
1426: ifne          1433
1429: iconst_1
1430: goto          1434
1433: iconst_0
1434: invokestatic  #17
1437: new           #10
1440: dup
1441: invokespecial #11
1444: ldc           #12
1446: invokevirtual #13
1449: dload         56
1451: invokevirtual #60
1454: ldc           #15
1456: invokevirtual #13
1459: dconst_0
1460: invokevirtual #60
1463: ldc           #12
1465: invokevirtual #13
1468: invokevirtual #16
1471: dload         56
1473: dconst_0
1474: dcmpl
1475: ifne          1482
1478: iconst_1
1479: goto          1483
1482: iconst_0
1483: invokestatic  #17
1486: new           #10
1489: dup
1490: invokespecial #11
1493: ldc           #12
1495: invokevirtual #13
1498: dload         61
1500: invokevirtual #60
1503: ldc           #15
1505: invokevirtual #13
1508: dconst_0
1509: invokevirtual #60
1512: ldc           #12
1514: invokevirtual #13
1517: invokevirtual #16
1520: dload         61
1522: dconst_0
1523: dcmpl
1524: ifne          1531
1527: iconst_1
1528: goto          1532
1531: iconst_0
1532: invokestatic  #17
1535: new           #10
1538: dup
1539: invokespecial #11
1542: ldc           #12
1544: invokevirtual #13
1547: dload         63
1549: invokevirtual #60
1552: ldc           #15
1554: invokevirtual #13
1557: dconst_0
1558: invokevirtual #60
1561: ldc           #12
1563: invokevirtual #13
1566: invokevirtual #16
1569: dload         63
1571: dconst_0
1572: dcmpl
1573: ifne          1580
1576: iconst_1
1577: goto          1581
1580: iconst_0
1581: invokestatic  #17
1584: new           #10
1587: dup
1588: invokespecial #11
1591: ldc           #12
1593: invokevirtual #13
1596: iload         65
1598: invokevirtual #14
1601: ldc           #15
1603: invokevirtual #13
1606: iconst_0
1607: invokevirtual #14
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: iload         65
1620: ifne          1627
1623: iconst_1
1624: goto          1628
1627: iconst_0
1628: invokestatic  #17
1631: new           #10
1634: dup
1635: invokespecial #11
1638: ldc           #12
1640: invokevirtual #13
1643: dload         66
1645: invokevirtual #60
1648: ldc           #15
1650: invokevirtual #13
1653: dconst_0
1654: invokevirtual #60
1657: ldc           #12
1659: invokevirtual #13
1662: invokevirtual #16
1665: dload         66
1667: dconst_0
1668: dcmpl
1669: ifne          1676
1672: iconst_1
1673: goto          1677
1676: iconst_0
1677: invokestatic  #17
1680: aload         68
1682: invokestatic  #33
1685: aload         69
1687: invokestatic  #33
1690: aload         70
1692: invokestatic  #33
1695: new           #10
1698: dup
1699: invokespecial #11
1702: ldc           #12
1704: invokevirtual #13
1707: dload         71
1709: invokevirtual #60
1712: ldc           #15
1714: invokevirtual #13
1717: ldc2_w        #133
1720: invokevirtual #60
1723: ldc           #12
1725: invokevirtual #13
1728: invokevirtual #16
1731: dload         71
1733: ldc2_w        #133
1736: dcmpl
1737: ifne          1744
1740: iconst_1
1741: goto          1745
1744: iconst_0
1745: invokestatic  #17
1748: aload         74
1750: invokestatic  #33
1753: new           #10
1756: dup
1757: invokespecial #11
1760: ldc           #12
1762: invokevirtual #13
1765: iload         75
1767: invokevirtual #457
1770: ldc           #15
1772: invokevirtual #13
1775: iconst_3
1776: invokevirtual #457
1779: ldc           #12
1781: invokevirtual #13
1784: invokevirtual #16
1787: iload         75
1789: iconst_3
1790: if_icmpne     1797
1793: iconst_1
1794: goto          1798
1797: iconst_0
1798: invokestatic  #17
1801: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 9939
End line: 10021
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation85.applyTo(vector3D86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #655
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aconst_null
502: astore        65
504: aload         64
506: aload         65
508: invokevirtual #140
511: astore        66
513: ldc           #20
515: invokestatic  #21
518: goto          523
521: astore        66
523: new           #10
526: dup
527: invokespecial #11
530: ldc           #12
532: invokevirtual #13
535: dload         4
537: invokevirtual #60
540: ldc           #15
542: invokevirtual #13
545: dconst_0
546: invokevirtual #60
549: ldc           #12
551: invokevirtual #13
554: invokevirtual #16
557: dload         4
559: dconst_0
560: dcmpl
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #17
572: new           #10
575: dup
576: invokespecial #11
579: ldc           #12
581: invokevirtual #13
584: dload         6
586: invokevirtual #60
589: ldc           #15
591: invokevirtual #13
594: dconst_0
595: invokevirtual #60
598: ldc           #12
600: invokevirtual #13
603: invokevirtual #16
606: dload         6
608: dconst_0
609: dcmpl
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #17
621: new           #10
624: dup
625: invokespecial #11
628: ldc           #12
630: invokevirtual #13
633: dload         11
635: invokevirtual #60
638: ldc           #15
640: invokevirtual #13
643: dconst_0
644: invokevirtual #60
647: ldc           #12
649: invokevirtual #13
652: invokevirtual #16
655: dload         11
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #17
670: new           #10
673: dup
674: invokespecial #11
677: ldc           #12
679: invokevirtual #13
682: dload         13
684: invokevirtual #60
687: ldc           #15
689: invokevirtual #13
692: dconst_0
693: invokevirtual #60
696: ldc           #12
698: invokevirtual #13
701: invokevirtual #16
704: dload         13
706: dconst_0
707: dcmpl
708: ifne          715
711: iconst_1
712: goto          716
715: iconst_0
716: invokestatic  #17
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: iload         15
733: invokevirtual #14
736: ldc           #15
738: invokevirtual #13
741: iconst_0
742: invokevirtual #14
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: iload         15
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         16
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: dconst_0
789: invokevirtual #60
792: ldc           #12
794: invokevirtual #13
797: invokevirtual #16
800: dload         16
802: dconst_0
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: aload         18
817: invokestatic  #33
820: new           #10
823: dup
824: invokespecial #11
827: ldc           #12
829: invokevirtual #13
832: dload         21
834: invokevirtual #60
837: ldc           #15
839: invokevirtual #13
842: dconst_0
843: invokevirtual #60
846: ldc           #12
848: invokevirtual #13
851: invokevirtual #16
854: dload         21
856: dconst_0
857: dcmpl
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #17
869: new           #10
872: dup
873: invokespecial #11
876: ldc           #12
878: invokevirtual #13
881: dload         25
883: invokevirtual #60
886: ldc           #15
888: invokevirtual #13
891: dconst_0
892: invokevirtual #60
895: ldc           #12
897: invokevirtual #13
900: invokevirtual #16
903: dload         25
905: dconst_0
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #17
918: new           #10
921: dup
922: invokespecial #11
925: ldc           #12
927: invokevirtual #13
930: dload         27
932: invokevirtual #60
935: ldc           #15
937: invokevirtual #13
940: ldc2_w        #61
943: invokevirtual #60
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: dload         27
956: ldc2_w        #61
959: dcmpl
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #17
971: new           #10
974: dup
975: invokespecial #11
978: ldc           #12
980: invokevirtual #13
983: dload         31
985: invokevirtual #60
988: ldc           #15
990: invokevirtual #13
993: dconst_0
994: invokevirtual #60
997: ldc           #12
999: invokevirtual #13
1002: invokevirtual #16
1005: dload         31
1007: dconst_0
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: new           #10
1023: dup
1024: invokespecial #11
1027: ldc           #12
1029: invokevirtual #13
1032: dload         33
1034: invokevirtual #60
1037: ldc           #15
1039: invokevirtual #13
1042: ldc2_w        #61
1045: invokevirtual #60
1048: ldc           #12
1050: invokevirtual #13
1053: invokevirtual #16
1056: dload         33
1058: ldc2_w        #61
1061: dcmpl
1062: ifne          1069
1065: iconst_1
1066: goto          1070
1069: iconst_0
1070: invokestatic  #17
1073: new           #10
1076: dup
1077: invokespecial #11
1080: ldc           #12
1082: invokevirtual #13
1085: dload         35
1087: invokevirtual #60
1090: ldc           #15
1092: invokevirtual #13
1095: dconst_0
1096: invokevirtual #60
1099: ldc           #12
1101: invokevirtual #13
1104: invokevirtual #16
1107: dload         35
1109: dconst_0
1110: dcmpl
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #17
1122: new           #10
1125: dup
1126: invokespecial #11
1129: ldc           #12
1131: invokevirtual #13
1134: dload         40
1136: invokevirtual #60
1139: ldc           #15
1141: invokevirtual #13
1144: dconst_0
1145: invokevirtual #60
1148: ldc           #12
1150: invokevirtual #13
1153: invokevirtual #16
1156: dload         40
1158: dconst_0
1159: dcmpl
1160: ifne          1167
1163: iconst_1
1164: goto          1168
1167: iconst_0
1168: invokestatic  #17
1171: new           #10
1174: dup
1175: invokespecial #11
1178: ldc           #12
1180: invokevirtual #13
1183: dload         42
1185: invokevirtual #60
1188: ldc           #15
1190: invokevirtual #13
1193: dconst_0
1194: invokevirtual #60
1197: ldc           #12
1199: invokevirtual #13
1202: invokevirtual #16
1205: dload         42
1207: dconst_0
1208: dcmpl
1209: ifne          1216
1212: iconst_1
1213: goto          1217
1216: iconst_0
1217: invokestatic  #17
1220: new           #10
1223: dup
1224: invokespecial #11
1227: ldc           #12
1229: invokevirtual #13
1232: dload         47
1234: invokevirtual #60
1237: ldc           #15
1239: invokevirtual #13
1242: dconst_0
1243: invokevirtual #60
1246: ldc           #12
1248: invokevirtual #13
1251: invokevirtual #16
1254: dload         47
1256: dconst_0
1257: dcmpl
1258: ifne          1265
1261: iconst_1
1262: goto          1266
1265: iconst_0
1266: invokestatic  #17
1269: new           #10
1272: dup
1273: invokespecial #11
1276: ldc           #12
1278: invokevirtual #13
1281: dload         49
1283: invokevirtual #60
1286: ldc           #15
1288: invokevirtual #13
1291: dconst_0
1292: invokevirtual #60
1295: ldc           #12
1297: invokevirtual #13
1300: invokevirtual #16
1303: dload         49
1305: dconst_0
1306: dcmpl
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #17
1318: new           #10
1321: dup
1322: invokespecial #11
1325: ldc           #12
1327: invokevirtual #13
1330: iload         51
1332: invokevirtual #14
1335: ldc           #15
1337: invokevirtual #13
1340: iconst_0
1341: invokevirtual #14
1344: ldc           #12
1346: invokevirtual #13
1349: invokevirtual #16
1352: iload         51
1354: ifne          1361
1357: iconst_1
1358: goto          1362
1361: iconst_0
1362: invokestatic  #17
1365: new           #10
1368: dup
1369: invokespecial #11
1372: ldc           #12
1374: invokevirtual #13
1377: dload         52
1379: invokevirtual #60
1382: ldc           #15
1384: invokevirtual #13
1387: dconst_0
1388: invokevirtual #60
1391: ldc           #12
1393: invokevirtual #13
1396: invokevirtual #16
1399: dload         52
1401: dconst_0
1402: dcmpl
1403: ifne          1410
1406: iconst_1
1407: goto          1411
1410: iconst_0
1411: invokestatic  #17
1414: aload         54
1416: invokestatic  #33
1419: new           #10
1422: dup
1423: invokespecial #11
1426: ldc           #12
1428: invokevirtual #13
1431: dload         57
1433: invokevirtual #60
1436: ldc           #15
1438: invokevirtual #13
1441: dconst_0
1442: invokevirtual #60
1445: ldc           #12
1447: invokevirtual #13
1450: invokevirtual #16
1453: dload         57
1455: dconst_0
1456: dcmpl
1457: ifne          1464
1460: iconst_1
1461: goto          1465
1464: iconst_0
1465: invokestatic  #17
1468: aload         59
1470: invokestatic  #33
1473: aload         60
1475: invokestatic  #33
1478: new           #10
1481: dup
1482: invokespecial #11
1485: ldc           #12
1487: invokevirtual #13
1490: dload         61
1492: invokevirtual #60
1495: ldc           #15
1497: invokevirtual #13
1500: ldc2_w        #63
1503: invokevirtual #60
1506: ldc           #12
1508: invokevirtual #13
1511: invokevirtual #16
1514: dload         61
1516: ldc2_w        #63
1519: dcmpl
1520: ifne          1527
1523: iconst_1
1524: goto          1528
1527: iconst_0
1528: invokestatic  #17
1531: aload         64
1533: invokestatic  #33
1536: return
Exception table:
from    to  target type
504   518   521   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 10024
End line: 10060
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector29 = vector3D27.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation31 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, 5.298292365610485d);
        double double32 = vector3D27.getNorm();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector34 = vector3D27.scalarMultiply(1.2323671327895391d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(euclidean3DVector29);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(euclidean3DVector34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #656
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: aload_1
170: invokevirtual #163
173: astore        21
175: aload         21
177: dconst_0
178: invokevirtual #107
181: astore        22
183: new           #27
186: dup
187: aload         21
189: ldc2_w        #612
192: invokespecial #103
195: astore        23
197: aload         21
199: invokevirtual #261
202: dstore        24
204: aload         21
206: ldc2_w        #657
209: invokevirtual #107
212: astore        26
214: aload_1
215: invokestatic  #33
218: new           #10
221: dup
222: invokespecial #11
225: ldc           #12
227: invokevirtual #13
230: dload         5
232: invokevirtual #60
235: ldc           #15
237: invokevirtual #13
240: dconst_0
241: invokevirtual #60
244: ldc           #12
246: invokevirtual #13
249: invokevirtual #16
252: dload         5
254: dconst_0
255: dcmpl
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #17
267: new           #10
270: dup
271: invokespecial #11
274: ldc           #12
276: invokevirtual #13
279: dload         7
281: invokevirtual #60
284: ldc           #15
286: invokevirtual #13
289: dconst_0
290: invokevirtual #60
293: ldc           #12
295: invokevirtual #13
298: invokevirtual #16
301: dload         7
303: dconst_0
304: dcmpl
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #17
316: new           #10
319: dup
320: invokespecial #11
323: ldc           #12
325: invokevirtual #13
328: dload         12
330: invokevirtual #60
333: ldc           #15
335: invokevirtual #13
338: dconst_0
339: invokevirtual #60
342: ldc           #12
344: invokevirtual #13
347: invokevirtual #16
350: dload         12
352: dconst_0
353: dcmpl
354: ifne          361
357: iconst_1
358: goto          362
361: iconst_0
362: invokestatic  #17
365: new           #10
368: dup
369: invokespecial #11
372: ldc           #12
374: invokevirtual #13
377: dload         14
379: invokevirtual #60
382: ldc           #15
384: invokevirtual #13
387: dconst_0
388: invokevirtual #60
391: ldc           #12
393: invokevirtual #13
396: invokevirtual #16
399: dload         14
401: dconst_0
402: dcmpl
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #17
414: new           #10
417: dup
418: invokespecial #11
421: ldc           #12
423: invokevirtual #13
426: iload         16
428: invokevirtual #14
431: ldc           #15
433: invokevirtual #13
436: iconst_0
437: invokevirtual #14
440: ldc           #12
442: invokevirtual #13
445: invokevirtual #16
448: iload         16
450: ifne          457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #17
461: new           #10
464: dup
465: invokespecial #11
468: ldc           #12
470: invokevirtual #13
473: dload         17
475: invokevirtual #60
478: ldc           #15
480: invokevirtual #13
483: dconst_0
484: invokevirtual #60
487: ldc           #12
489: invokevirtual #13
492: invokevirtual #16
495: dload         17
497: dconst_0
498: dcmpl
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #17
510: aload         19
512: invokestatic  #33
515: aload         20
517: invokestatic  #33
520: aload         21
522: invokestatic  #33
525: aload         22
527: invokestatic  #33
530: dload         24
532: invokestatic  #242
535: invokestatic  #243
538: aload         26
540: invokestatic  #33
543: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 10063
End line: 10117
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double14 = vector3D10.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        double double15 = vector3D13.getDelta();
        double double16 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector18 = vector3D13.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        boolean boolean41 = vector3D32.isInfinite();
        double double42 = vector3D21.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = vector3D32.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = vector3D46.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation53 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D46);
        double double54 = rotation53.getAngle();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = rotation53.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7345682747147468d + "'", double15 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(euclidean3DVector18);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #659
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: aload_2
56: invokevirtual #52
59: dstore        5
61: new           #43
64: dup
65: dconst_1
66: ldc2_w        #44
69: invokespecial #46
72: astore        7
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: aload         7
89: aload         8
91: invokevirtual #47
94: dstore        9
96: aload         8
98: invokevirtual #52
101: dstore        11
103: aload_2
104: aload         8
106: invokevirtual #53
109: dstore        13
111: aload         8
113: invokevirtual #54
116: astore        15
118: aload         8
120: invokevirtual #193
123: astore        16
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        17
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        18
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        19
164: aload         18
166: aload         19
168: invokevirtual #47
171: dstore        20
173: aload         17
175: aload         19
177: invokestatic  #48
180: dstore        22
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        24
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        25
208: new           #43
211: dup
212: dconst_1
213: ldc2_w        #44
216: invokespecial #46
219: astore        26
221: aload         25
223: aload         26
225: invokevirtual #47
228: dstore        27
230: aload         24
232: aload         26
234: invokestatic  #48
237: dstore        29
239: aload         24
241: invokevirtual #49
244: istore        31
246: aload         17
248: aload         24
250: invokevirtual #50
253: dstore        32
255: aload         24
257: invokevirtual #54
260: astore        34
262: new           #43
265: dup
266: dconst_1
267: ldc2_w        #44
270: invokespecial #46
273: astore        35
275: new           #43
278: dup
279: dconst_1
280: ldc2_w        #44
283: invokespecial #46
286: astore        36
288: aload         35
290: aload         36
292: invokevirtual #47
295: dstore        37
297: aload         34
299: aload         35
301: invokevirtual #55
304: astore        39
306: aload         35
308: invokevirtual #193
311: astore        40
313: new           #27
316: dup
317: aload         8
319: aload         35
321: invokespecial #56
324: astore        41
326: aload         41
328: invokevirtual #240
331: dstore        42
333: aload         41
335: invokevirtual #96
338: astore        44
340: new           #10
343: dup
344: invokespecial #11
347: ldc           #12
349: invokevirtual #13
352: dload_3
353: invokevirtual #60
356: ldc           #15
358: invokevirtual #13
361: dconst_0
362: invokevirtual #60
365: ldc           #12
367: invokevirtual #13
370: invokevirtual #16
373: dload_3
374: dconst_0
375: dcmpl
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #17
387: new           #10
390: dup
391: invokespecial #11
394: ldc           #12
396: invokevirtual #13
399: dload         5
401: invokevirtual #60
404: ldc           #15
406: invokevirtual #13
409: ldc2_w        #61
412: invokevirtual #60
415: ldc           #12
417: invokevirtual #13
420: invokevirtual #16
423: dload         5
425: ldc2_w        #61
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #17
440: new           #10
443: dup
444: invokespecial #11
447: ldc           #12
449: invokevirtual #13
452: dload         9
454: invokevirtual #60
457: ldc           #15
459: invokevirtual #13
462: dconst_0
463: invokevirtual #60
466: ldc           #12
468: invokevirtual #13
471: invokevirtual #16
474: dload         9
476: dconst_0
477: dcmpl
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #17
489: new           #10
492: dup
493: invokespecial #11
496: ldc           #12
498: invokevirtual #13
501: dload         11
503: invokevirtual #60
506: ldc           #15
508: invokevirtual #13
511: ldc2_w        #61
514: invokevirtual #60
517: ldc           #12
519: invokevirtual #13
522: invokevirtual #16
525: dload         11
527: ldc2_w        #61
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #17
542: new           #10
545: dup
546: invokespecial #11
549: ldc           #12
551: invokevirtual #13
554: dload         13
556: invokevirtual #60
559: ldc           #15
561: invokevirtual #13
564: dconst_0
565: invokevirtual #60
568: ldc           #12
570: invokevirtual #13
573: invokevirtual #16
576: dload         13
578: dconst_0
579: dcmpl
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #17
591: aload         15
593: invokestatic  #33
596: aload         16
598: invokestatic  #33
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         20
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: dconst_0
624: invokevirtual #60
627: ldc           #12
629: invokevirtual #13
632: invokevirtual #16
635: dload         20
637: dconst_0
638: dcmpl
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #17
650: new           #10
653: dup
654: invokespecial #11
657: ldc           #12
659: invokevirtual #13
662: dload         22
664: invokevirtual #60
667: ldc           #15
669: invokevirtual #13
672: dconst_0
673: invokevirtual #60
676: ldc           #12
678: invokevirtual #13
681: invokevirtual #16
684: dload         22
686: dconst_0
687: dcmpl
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #17
699: new           #10
702: dup
703: invokespecial #11
706: ldc           #12
708: invokevirtual #13
711: dload         27
713: invokevirtual #60
716: ldc           #15
718: invokevirtual #13
721: dconst_0
722: invokevirtual #60
725: ldc           #12
727: invokevirtual #13
730: invokevirtual #16
733: dload         27
735: dconst_0
736: dcmpl
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #17
748: new           #10
751: dup
752: invokespecial #11
755: ldc           #12
757: invokevirtual #13
760: dload         29
762: invokevirtual #60
765: ldc           #15
767: invokevirtual #13
770: dconst_0
771: invokevirtual #60
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: dload         29
784: dconst_0
785: dcmpl
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #17
797: new           #10
800: dup
801: invokespecial #11
804: ldc           #12
806: invokevirtual #13
809: iload         31
811: invokevirtual #14
814: ldc           #15
816: invokevirtual #13
819: iconst_0
820: invokevirtual #14
823: ldc           #12
825: invokevirtual #13
828: invokevirtual #16
831: iload         31
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #17
844: new           #10
847: dup
848: invokespecial #11
851: ldc           #12
853: invokevirtual #13
856: dload         32
858: invokevirtual #60
861: ldc           #15
863: invokevirtual #13
866: dconst_0
867: invokevirtual #60
870: ldc           #12
872: invokevirtual #13
875: invokevirtual #16
878: dload         32
880: dconst_0
881: dcmpl
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #17
893: aload         34
895: invokestatic  #33
898: new           #10
901: dup
902: invokespecial #11
905: ldc           #12
907: invokevirtual #13
910: dload         37
912: invokevirtual #60
915: ldc           #15
917: invokevirtual #13
920: dconst_0
921: invokevirtual #60
924: ldc           #12
926: invokevirtual #13
929: invokevirtual #16
932: dload         37
934: dconst_0
935: dcmpl
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #17
947: aload         39
949: invokestatic  #33
952: aload         40
954: invokestatic  #33
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         42
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: dconst_0
980: invokevirtual #60
983: ldc           #12
985: invokevirtual #13
988: invokevirtual #16
991: dload         42
993: dconst_0
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: aload         44
1008: invokestatic  #33
1011: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 10120
End line: 10200
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation84.getQ2();
        double[][] doubleArray87 = rotation84.getMatrix();
        double double88 = rotation84.getQ3();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #660
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         63
503: invokevirtual #139
506: dstore        65
508: aload         63
510: invokevirtual #222
513: astore        67
515: aload         63
517: invokevirtual #95
520: dstore        68
522: new           #10
525: dup
526: invokespecial #11
529: ldc           #12
531: invokevirtual #13
534: dload         4
536: invokevirtual #60
539: ldc           #15
541: invokevirtual #13
544: dconst_0
545: invokevirtual #60
548: ldc           #12
550: invokevirtual #13
553: invokevirtual #16
556: dload         4
558: dconst_0
559: dcmpl
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #17
571: new           #10
574: dup
575: invokespecial #11
578: ldc           #12
580: invokevirtual #13
583: dload         6
585: invokevirtual #60
588: ldc           #15
590: invokevirtual #13
593: dconst_0
594: invokevirtual #60
597: ldc           #12
599: invokevirtual #13
602: invokevirtual #16
605: dload         6
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         11
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         11
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         13
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         13
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: iload         15
732: invokevirtual #14
735: ldc           #15
737: invokevirtual #13
740: iconst_0
741: invokevirtual #14
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: iload         15
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #17
765: new           #10
768: dup
769: invokespecial #11
772: ldc           #12
774: invokevirtual #13
777: dload         16
779: invokevirtual #60
782: ldc           #15
784: invokevirtual #13
787: dconst_0
788: invokevirtual #60
791: ldc           #12
793: invokevirtual #13
796: invokevirtual #16
799: dload         16
801: dconst_0
802: dcmpl
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: aload         18
816: invokestatic  #33
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         21
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: dconst_0
842: invokevirtual #60
845: ldc           #12
847: invokevirtual #13
850: invokevirtual #16
853: dload         21
855: dconst_0
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         25
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         25
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         27
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: ldc2_w        #61
942: invokevirtual #60
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: dload         27
955: ldc2_w        #61
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         31
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: dconst_0
993: invokevirtual #60
996: ldc           #12
998: invokevirtual #13
1001: invokevirtual #16
1004: dload         31
1006: dconst_0
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         33
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: ldc2_w        #61
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         33
1057: ldc2_w        #61
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: dload         35
1086: invokevirtual #60
1089: ldc           #15
1091: invokevirtual #13
1094: dconst_0
1095: invokevirtual #60
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: dload         35
1108: dconst_0
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         40
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         40
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         42
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         42
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         47
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         47
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         49
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         49
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: iload         51
1331: invokevirtual #14
1334: ldc           #15
1336: invokevirtual #13
1339: iconst_0
1340: invokevirtual #14
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: iload         51
1353: ifne          1360
1356: iconst_1
1357: goto          1361
1360: iconst_0
1361: invokestatic  #17
1364: new           #10
1367: dup
1368: invokespecial #11
1371: ldc           #12
1373: invokevirtual #13
1376: dload         52
1378: invokevirtual #60
1381: ldc           #15
1383: invokevirtual #13
1386: dconst_0
1387: invokevirtual #60
1390: ldc           #12
1392: invokevirtual #13
1395: invokevirtual #16
1398: dload         52
1400: dconst_0
1401: dcmpl
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: aload         54
1415: invokestatic  #33
1418: new           #10
1421: dup
1422: invokespecial #11
1425: ldc           #12
1427: invokevirtual #13
1430: dload         57
1432: invokevirtual #60
1435: ldc           #15
1437: invokevirtual #13
1440: dconst_0
1441: invokevirtual #60
1444: ldc           #12
1446: invokevirtual #13
1449: invokevirtual #16
1452: dload         57
1454: dconst_0
1455: dcmpl
1456: ifne          1463
1459: iconst_1
1460: goto          1464
1463: iconst_0
1464: invokestatic  #17
1467: aload         59
1469: invokestatic  #33
1472: aload         60
1474: invokestatic  #33
1477: new           #10
1480: dup
1481: invokespecial #11
1484: ldc           #12
1486: invokevirtual #13
1489: dload         61
1491: invokevirtual #60
1494: ldc           #15
1496: invokevirtual #13
1499: ldc2_w        #63
1502: invokevirtual #60
1505: ldc           #12
1507: invokevirtual #13
1510: invokevirtual #16
1513: dload         61
1515: ldc2_w        #63
1518: dcmpl
1519: ifne          1526
1522: iconst_1
1523: goto          1527
1526: iconst_0
1527: invokestatic  #17
1530: aload         64
1532: invokestatic  #33
1535: new           #10
1538: dup
1539: invokespecial #11
1542: ldc           #12
1544: invokevirtual #13
1547: dload         65
1549: invokevirtual #60
1552: ldc           #15
1554: invokevirtual #13
1557: dconst_0
1558: invokevirtual #60
1561: ldc           #12
1563: invokevirtual #13
1566: invokevirtual #16
1569: dload         65
1571: dconst_0
1572: dcmpl
1573: ifne          1580
1576: iconst_1
1577: goto          1581
1580: iconst_0
1581: invokestatic  #17
1584: aload         67
1586: invokestatic  #33
1589: new           #10
1592: dup
1593: invokespecial #11
1596: ldc           #12
1598: invokevirtual #13
1601: dload         68
1603: invokevirtual #60
1606: ldc           #15
1608: invokevirtual #13
1611: dconst_0
1612: invokevirtual #60
1615: ldc           #12
1617: invokevirtual #13
1620: invokevirtual #16
1623: dload         68
1625: dconst_0
1626: dcmpl
1627: ifne          1634
1630: iconst_1
1631: goto          1635
1634: iconst_0
1635: invokestatic  #17
1638: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 10203
End line: 10214
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, (double) 48271196340L, (double) 35, 14.202575730137095d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #661
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #481
35: ldc2_w        #40
38: ldc2_w        #662
41: invokespecial #81
44: astore_2
45: ldc           #20
47: invokestatic  #21
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
27    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 10217
End line: 10228
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, (double) (-18), 0.0d, (-0.356407136945152d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #664
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #395
35: dconst_0
36: ldc2_w        #665
39: invokespecial #81
42: astore_2
43: ldc           #20
45: invokestatic  #21
48: goto          52
51: astore_2
52: return
Exception table:
from    to  target type
27    48    51   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 10231
End line: 10237
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #667
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #94
48: dstore_2
49: new           #10
52: dup
53: invokespecial #11
56: ldc           #12
58: invokevirtual #13
61: dload_2
62: invokevirtual #60
65: ldc           #15
67: invokevirtual #13
70: dconst_0
71: invokevirtual #60
74: ldc           #12
76: invokevirtual #13
79: invokevirtual #16
82: dload_2
83: dconst_0
84: dcmpl
85: ifne          92
88: iconst_1
89: goto          93
92: iconst_0
93: invokestatic  #17
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 10240
End line: 10296
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector29 = vector3D27.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation31 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, 5.298292365610485d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double43 = vector3D39.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        double double44 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D36, vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D50 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double54 = vector3D50.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D53);
        double double55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D47, vector3D53);
        boolean boolean56 = vector3D47.isInfinite();
        double double57 = vector3D36.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D33, vector3D47);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector59 = vector3D27.subtract((double) 2046, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(euclidean3DVector29);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + Double.POSITIVE_INFINITY + "'", double58 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(euclidean3DVector59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #668
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: aload_1
170: invokevirtual #163
173: astore        21
175: aload         21
177: dconst_0
178: invokevirtual #107
181: astore        22
183: new           #27
186: dup
187: aload         21
189: ldc2_w        #612
192: invokespecial #103
195: astore        23
197: getstatic     #126
200: astore        24
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        25
215: new           #43
218: dup
219: dconst_1
220: ldc2_w        #44
223: invokespecial #46
226: astore        26
228: new           #43
231: dup
232: dconst_1
233: ldc2_w        #44
236: invokespecial #46
239: astore        27
241: aload         26
243: aload         27
245: invokevirtual #47
248: dstore        28
250: aload         25
252: aload         27
254: invokestatic  #48
257: dstore        30
259: new           #43
262: dup
263: dconst_1
264: ldc2_w        #44
267: invokespecial #46
270: astore        32
272: new           #43
275: dup
276: dconst_1
277: ldc2_w        #44
280: invokespecial #46
283: astore        33
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        34
298: aload         33
300: aload         34
302: invokevirtual #47
305: dstore        35
307: aload         32
309: aload         34
311: invokestatic  #48
314: dstore        37
316: aload         32
318: invokevirtual #49
321: istore        39
323: aload         25
325: aload         32
327: invokevirtual #50
330: dstore        40
332: aload         24
334: aload         32
336: invokestatic  #127
339: dstore        42
341: aload         21
343: ldc2_w        #669
346: aload         32
348: invokevirtual #354
351: astore        44
353: aload_1
354: invokestatic  #33
357: new           #10
360: dup
361: invokespecial #11
364: ldc           #12
366: invokevirtual #13
369: dload         5
371: invokevirtual #60
374: ldc           #15
376: invokevirtual #13
379: dconst_0
380: invokevirtual #60
383: ldc           #12
385: invokevirtual #13
388: invokevirtual #16
391: dload         5
393: dconst_0
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #17
406: new           #10
409: dup
410: invokespecial #11
413: ldc           #12
415: invokevirtual #13
418: dload         7
420: invokevirtual #60
423: ldc           #15
425: invokevirtual #13
428: dconst_0
429: invokevirtual #60
432: ldc           #12
434: invokevirtual #13
437: invokevirtual #16
440: dload         7
442: dconst_0
443: dcmpl
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #17
455: new           #10
458: dup
459: invokespecial #11
462: ldc           #12
464: invokevirtual #13
467: dload         12
469: invokevirtual #60
472: ldc           #15
474: invokevirtual #13
477: dconst_0
478: invokevirtual #60
481: ldc           #12
483: invokevirtual #13
486: invokevirtual #16
489: dload         12
491: dconst_0
492: dcmpl
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #17
504: new           #10
507: dup
508: invokespecial #11
511: ldc           #12
513: invokevirtual #13
516: dload         14
518: invokevirtual #60
521: ldc           #15
523: invokevirtual #13
526: dconst_0
527: invokevirtual #60
530: ldc           #12
532: invokevirtual #13
535: invokevirtual #16
538: dload         14
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #17
553: new           #10
556: dup
557: invokespecial #11
560: ldc           #12
562: invokevirtual #13
565: iload         16
567: invokevirtual #14
570: ldc           #15
572: invokevirtual #13
575: iconst_0
576: invokevirtual #14
579: ldc           #12
581: invokevirtual #13
584: invokevirtual #16
587: iload         16
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         17
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         17
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: aload         19
651: invokestatic  #33
654: aload         20
656: invokestatic  #33
659: aload         21
661: invokestatic  #33
664: aload         22
666: invokestatic  #33
669: aload         24
671: invokestatic  #33
674: new           #10
677: dup
678: invokespecial #11
681: ldc           #12
683: invokevirtual #13
686: dload         28
688: invokevirtual #60
691: ldc           #15
693: invokevirtual #13
696: dconst_0
697: invokevirtual #60
700: ldc           #12
702: invokevirtual #13
705: invokevirtual #16
708: dload         28
710: dconst_0
711: dcmpl
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #17
723: new           #10
726: dup
727: invokespecial #11
730: ldc           #12
732: invokevirtual #13
735: dload         30
737: invokevirtual #60
740: ldc           #15
742: invokevirtual #13
745: dconst_0
746: invokevirtual #60
749: ldc           #12
751: invokevirtual #13
754: invokevirtual #16
757: dload         30
759: dconst_0
760: dcmpl
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         35
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: dconst_0
795: invokevirtual #60
798: ldc           #12
800: invokevirtual #13
803: invokevirtual #16
806: dload         35
808: dconst_0
809: dcmpl
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: new           #10
824: dup
825: invokespecial #11
828: ldc           #12
830: invokevirtual #13
833: dload         37
835: invokevirtual #60
838: ldc           #15
840: invokevirtual #13
843: dconst_0
844: invokevirtual #60
847: ldc           #12
849: invokevirtual #13
852: invokevirtual #16
855: dload         37
857: dconst_0
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #17
870: new           #10
873: dup
874: invokespecial #11
877: ldc           #12
879: invokevirtual #13
882: iload         39
884: invokevirtual #14
887: ldc           #15
889: invokevirtual #13
892: iconst_0
893: invokevirtual #14
896: ldc           #12
898: invokevirtual #13
901: invokevirtual #16
904: iload         39
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         40
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: dconst_0
940: invokevirtual #60
943: ldc           #12
945: invokevirtual #13
948: invokevirtual #16
951: dload         40
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         42
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: ldc2_w        #133
991: invokevirtual #60
994: ldc           #12
996: invokevirtual #13
999: invokevirtual #16
1002: dload         42
1004: ldc2_w        #133
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: aload         44
1021: invokestatic  #33
1024: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 10299
End line: 10390
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double18 = vector3D14.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D17);
        double double19 = vector3D17.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = vector3D25.getDelta();
        double double28 = vector3D17.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D31, vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double49 = vector3D45.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D48);
        double double50 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D42, vector3D48);
        boolean boolean51 = vector3D42.isInfinite();
        double double52 = vector3D31.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = vector3D42.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double60 = vector3D56.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D59);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = vector3D53.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D17.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        double double63 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.angle(vector3D3, vector3D17);
        double double64 = vector3D3.getNormInf();
        java.lang.String str65 = vector3D3.toString();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D67.negate();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray71 = null;
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D69, localizable70, objArray71);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.ZERO;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = vector3D74.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation83 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = rotation83.getAxis();
        double double85 = rotation83.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation83.applyInverseTo(vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D74.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        double double89 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D73, vector3D88);
        double double90 = vector3D69.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, vector3D3, (double) (-9700L), vector3D88);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.7345682747147468d + "'", double19 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.7345682747147468d + "'", double27 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.6702668260599606d + "'", double64 == 0.6702668260599606d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str65, "{0.4; 0.62; 0.67}");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #671
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: aload         8
103: aload         9
105: invokevirtual #47
108: dstore        10
110: aload         9
112: invokevirtual #52
115: dstore        12
117: new           #43
120: dup
121: dconst_1
122: ldc2_w        #44
125: invokespecial #46
128: astore        14
130: new           #43
133: dup
134: dconst_1
135: ldc2_w        #44
138: invokespecial #46
141: astore        15
143: aload         14
145: aload         15
147: invokevirtual #47
150: dstore        16
152: aload         15
154: invokevirtual #52
157: dstore        18
159: aload         9
161: aload         15
163: invokevirtual #53
166: dstore        20
168: new           #43
171: dup
172: dconst_1
173: ldc2_w        #44
176: invokespecial #46
179: astore        22
181: new           #43
184: dup
185: dconst_1
186: ldc2_w        #44
189: invokespecial #46
192: astore        23
194: new           #43
197: dup
198: dconst_1
199: ldc2_w        #44
202: invokespecial #46
205: astore        24
207: aload         23
209: aload         24
211: invokevirtual #47
214: dstore        25
216: aload         22
218: aload         24
220: invokestatic  #48
223: dstore        27
225: new           #43
228: dup
229: dconst_1
230: ldc2_w        #44
233: invokespecial #46
236: astore        29
238: new           #43
241: dup
242: dconst_1
243: ldc2_w        #44
246: invokespecial #46
249: astore        30
251: new           #43
254: dup
255: dconst_1
256: ldc2_w        #44
259: invokespecial #46
262: astore        31
264: aload         30
266: aload         31
268: invokevirtual #47
271: dstore        32
273: aload         29
275: aload         31
277: invokestatic  #48
280: dstore        34
282: aload         29
284: invokevirtual #49
287: istore        36
289: aload         22
291: aload         29
293: invokevirtual #50
296: dstore        37
298: aload         29
300: invokevirtual #54
303: astore        39
305: new           #43
308: dup
309: dconst_1
310: ldc2_w        #44
313: invokespecial #46
316: astore        40
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        41
331: aload         40
333: aload         41
335: invokevirtual #47
338: dstore        42
340: aload         39
342: aload         40
344: invokevirtual #55
347: astore        44
349: aload         9
351: aload         44
353: invokevirtual #55
356: astore        45
358: aload_1
359: aload         9
361: invokestatic  #363
364: dstore        46
366: aload_1
367: invokevirtual #136
370: dstore        48
372: aload_1
373: invokevirtual #364
376: astore        50
378: getstatic     #432
381: astore        51
383: aload         51
385: invokevirtual #163
388: astore        52
390: aload         51
392: invokevirtual #54
395: astore        53
397: aconst_null
398: astore        54
400: aconst_null
401: astore        55
403: aload         53
405: aload         54
407: aload         55
409: invokestatic  #328
412: getstatic     #433
415: astore        56
417: getstatic     #432
420: astore        57
422: aload         57
424: invokevirtual #163
427: astore        58
429: aload         57
431: invokevirtual #54
434: astore        59
436: new           #27
439: dup
440: ldc2_w        #146
443: ldc2_w        #72
446: ldc2_w        #148
449: dconst_1
450: iconst_0
451: invokespecial #150
454: astore        60
456: aload         60
458: invokevirtual #96
461: astore        61
463: aload         60
465: invokevirtual #95
468: dstore        62
470: getstatic     #314
473: astore        64
475: aload         60
477: aload         64
479: invokevirtual #98
482: astore        65
484: aload         57
486: ldc2_w        #434
489: aload         64
491: invokevirtual #182
494: astore        66
496: aload         56
498: aload         66
500: invokestatic  #127
503: dstore        67
505: aload         53
507: aload         66
509: invokevirtual #53
512: dstore        69
514: new           #43
517: dup
518: dconst_0
519: aload_1
520: ldc2_w        #672
523: aload         66
525: invokespecial #130
528: astore        71
530: new           #10
533: dup
534: invokespecial #11
537: ldc           #12
539: invokevirtual #13
542: dload         4
544: invokevirtual #60
547: ldc           #15
549: invokevirtual #13
552: dconst_0
553: invokevirtual #60
556: ldc           #12
558: invokevirtual #13
561: invokevirtual #16
564: dload         4
566: dconst_0
567: dcmpl
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #17
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         6
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         6
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         10
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         10
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         12
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: ldc2_w        #61
702: invokevirtual #60
705: ldc           #12
707: invokevirtual #13
710: invokevirtual #16
713: dload         12
715: ldc2_w        #61
718: dcmpl
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #17
730: new           #10
733: dup
734: invokespecial #11
737: ldc           #12
739: invokevirtual #13
742: dload         16
744: invokevirtual #60
747: ldc           #15
749: invokevirtual #13
752: dconst_0
753: invokevirtual #60
756: ldc           #12
758: invokevirtual #13
761: invokevirtual #16
764: dload         16
766: dconst_0
767: dcmpl
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #17
779: new           #10
782: dup
783: invokespecial #11
786: ldc           #12
788: invokevirtual #13
791: dload         18
793: invokevirtual #60
796: ldc           #15
798: invokevirtual #13
801: ldc2_w        #61
804: invokevirtual #60
807: ldc           #12
809: invokevirtual #13
812: invokevirtual #16
815: dload         18
817: ldc2_w        #61
820: dcmpl
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #17
832: new           #10
835: dup
836: invokespecial #11
839: ldc           #12
841: invokevirtual #13
844: dload         20
846: invokevirtual #60
849: ldc           #15
851: invokevirtual #13
854: dconst_0
855: invokevirtual #60
858: ldc           #12
860: invokevirtual #13
863: invokevirtual #16
866: dload         20
868: dconst_0
869: dcmpl
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #17
881: new           #10
884: dup
885: invokespecial #11
888: ldc           #12
890: invokevirtual #13
893: dload         25
895: invokevirtual #60
898: ldc           #15
900: invokevirtual #13
903: dconst_0
904: invokevirtual #60
907: ldc           #12
909: invokevirtual #13
912: invokevirtual #16
915: dload         25
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #17
930: new           #10
933: dup
934: invokespecial #11
937: ldc           #12
939: invokevirtual #13
942: dload         27
944: invokevirtual #60
947: ldc           #15
949: invokevirtual #13
952: dconst_0
953: invokevirtual #60
956: ldc           #12
958: invokevirtual #13
961: invokevirtual #16
964: dload         27
966: dconst_0
967: dcmpl
968: ifne          975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #17
979: new           #10
982: dup
983: invokespecial #11
986: ldc           #12
988: invokevirtual #13
991: dload         32
993: invokevirtual #60
996: ldc           #15
998: invokevirtual #13
1001: dconst_0
1002: invokevirtual #60
1005: ldc           #12
1007: invokevirtual #13
1010: invokevirtual #16
1013: dload         32
1015: dconst_0
1016: dcmpl
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #17
1028: new           #10
1031: dup
1032: invokespecial #11
1035: ldc           #12
1037: invokevirtual #13
1040: dload         34
1042: invokevirtual #60
1045: ldc           #15
1047: invokevirtual #13
1050: dconst_0
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         34
1064: dconst_0
1065: dcmpl
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #17
1077: new           #10
1080: dup
1081: invokespecial #11
1084: ldc           #12
1086: invokevirtual #13
1089: iload         36
1091: invokevirtual #14
1094: ldc           #15
1096: invokevirtual #13
1099: iconst_0
1100: invokevirtual #14
1103: ldc           #12
1105: invokevirtual #13
1108: invokevirtual #16
1111: iload         36
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #17
1124: new           #10
1127: dup
1128: invokespecial #11
1131: ldc           #12
1133: invokevirtual #13
1136: dload         37
1138: invokevirtual #60
1141: ldc           #15
1143: invokevirtual #13
1146: dconst_0
1147: invokevirtual #60
1150: ldc           #12
1152: invokevirtual #13
1155: invokevirtual #16
1158: dload         37
1160: dconst_0
1161: dcmpl
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #17
1173: aload         39
1175: invokestatic  #33
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         42
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         42
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: aload         44
1229: invokestatic  #33
1232: aload         45
1234: invokestatic  #33
1237: new           #10
1240: dup
1241: invokespecial #11
1244: ldc           #12
1246: invokevirtual #13
1249: dload         46
1251: invokevirtual #60
1254: ldc           #15
1256: invokevirtual #13
1259: dconst_0
1260: invokevirtual #60
1263: ldc           #12
1265: invokevirtual #13
1268: invokevirtual #16
1271: dload         46
1273: dconst_0
1274: dcmpl
1275: ifne          1282
1278: iconst_1
1279: goto          1283
1282: iconst_0
1283: invokestatic  #17
1286: new           #10
1289: dup
1290: invokespecial #11
1293: ldc           #12
1295: invokevirtual #13
1298: dload         48
1300: invokevirtual #60
1303: ldc           #15
1305: invokevirtual #13
1308: ldc2_w        #79
1311: invokevirtual #60
1314: ldc           #12
1316: invokevirtual #13
1319: invokevirtual #16
1322: dload         48
1324: ldc2_w        #79
1327: dcmpl
1328: ifne          1335
1331: iconst_1
1332: goto          1336
1335: iconst_0
1336: invokestatic  #17
1339: new           #10
1342: dup
1343: invokespecial #11
1346: ldc           #12
1348: invokevirtual #13
1351: aload         50
1353: invokevirtual #13
1356: ldc_w         #368
1359: invokevirtual #13
1362: invokevirtual #16
1365: aload         50
1367: ldc_w         #369
1370: invokestatic  #335
1373: aload         51
1375: invokestatic  #33
1378: aload         52
1380: invokestatic  #33
1383: aload         53
1385: invokestatic  #33
1388: aload         56
1390: invokestatic  #33
1393: aload         57
1395: invokestatic  #33
1398: aload         58
1400: invokestatic  #33
1403: aload         59
1405: invokestatic  #33
1408: aload         61
1410: invokestatic  #33
1413: new           #10
1416: dup
1417: invokespecial #11
1420: ldc           #12
1422: invokevirtual #13
1425: dload         62
1427: invokevirtual #60
1430: ldc           #15
1432: invokevirtual #13
1435: dconst_1
1436: invokevirtual #60
1439: ldc           #12
1441: invokevirtual #13
1444: invokevirtual #16
1447: dload         62
1449: dconst_1
1450: dcmpl
1451: ifne          1458
1454: iconst_1
1455: goto          1459
1458: iconst_0
1459: invokestatic  #17
1462: aload         64
1464: invokestatic  #33
1467: aload         65
1469: invokestatic  #33
1472: aload         66
1474: invokestatic  #33
1477: dload         67
1479: invokestatic  #242
1482: invokestatic  #243
1485: dload         69
1487: invokestatic  #242
1490: invokestatic  #243
1493: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 10393
End line: 10424
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        boolean boolean17 = vector3D8.isInfinite();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = vector3D8.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector19 = vector3D3.subtract(0.0d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 30, vector3D3);
        double double21 = vector3D3.getX();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = vector3D3.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_J;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation25 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D23, (-11013.232874703393d));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = vector3D3.crossProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D23);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector28 = vector3D23.scalarMultiply((double) 6L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(euclidean3DVector19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.4009692518823901d + "'", double21 == 0.4009692518823901d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(euclidean3DVector28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #674
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: aload_1
38: invokevirtual #261
41: dstore_2
42: new           #43
45: dup
46: dconst_1
47: ldc2_w        #44
50: invokespecial #46
53: astore        4
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         4
92: aload         6
94: invokestatic  #48
97: dstore        9
99: aload         4
101: invokevirtual #49
104: istore        11
106: aload         4
108: invokevirtual #54
111: astore        12
113: aload_1
114: dconst_0
115: aload         12
117: invokevirtual #354
120: astore        13
122: new           #43
125: dup
126: ldc2_w        #121
129: aload_1
130: invokespecial #305
133: astore        14
135: aload_1
136: invokevirtual #99
139: dstore        15
141: aload_1
142: invokevirtual #193
145: astore        17
147: getstatic     #675
150: astore        18
152: new           #27
155: dup
156: aload         18
158: ldc2_w        #676
161: invokespecial #103
164: astore        19
166: aload_1
167: aload         18
169: invokevirtual #365
172: astore        20
174: aload         18
176: ldc2_w        #678
179: invokevirtual #107
182: astore        21
184: new           #10
187: dup
188: invokespecial #11
191: ldc           #12
193: invokevirtual #13
196: dload_2
197: invokevirtual #60
200: ldc           #15
202: invokevirtual #13
205: dconst_1
206: invokevirtual #60
209: ldc           #12
211: invokevirtual #13
214: invokevirtual #16
217: dload_2
218: dconst_1
219: dcmpl
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #17
231: new           #10
234: dup
235: invokespecial #11
238: ldc           #12
240: invokevirtual #13
243: dload         7
245: invokevirtual #60
248: ldc           #15
250: invokevirtual #13
253: dconst_0
254: invokevirtual #60
257: ldc           #12
259: invokevirtual #13
262: invokevirtual #16
265: dload         7
267: dconst_0
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #17
280: new           #10
283: dup
284: invokespecial #11
287: ldc           #12
289: invokevirtual #13
292: dload         9
294: invokevirtual #60
297: ldc           #15
299: invokevirtual #13
302: dconst_0
303: invokevirtual #60
306: ldc           #12
308: invokevirtual #13
311: invokevirtual #16
314: dload         9
316: dconst_0
317: dcmpl
318: ifne          325
321: iconst_1
322: goto          326
325: iconst_0
326: invokestatic  #17
329: new           #10
332: dup
333: invokespecial #11
336: ldc           #12
338: invokevirtual #13
341: iload         11
343: invokevirtual #14
346: ldc           #15
348: invokevirtual #13
351: iconst_0
352: invokevirtual #14
355: ldc           #12
357: invokevirtual #13
360: invokevirtual #16
363: iload         11
365: ifne          372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #17
376: aload         12
378: invokestatic  #33
381: aload         13
383: invokestatic  #33
386: new           #10
389: dup
390: invokespecial #11
393: ldc           #12
395: invokevirtual #13
398: dload         15
400: invokevirtual #60
403: ldc           #15
405: invokevirtual #13
408: ldc2_w        #471
411: invokevirtual #60
414: ldc           #12
416: invokevirtual #13
419: invokevirtual #16
422: dload         15
424: ldc2_w        #471
427: dcmpl
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #17
439: aload         17
441: invokestatic  #33
444: aload         18
446: invokestatic  #33
449: aload         20
451: invokestatic  #33
454: aload         21
456: invokestatic  #33
459: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 10427
End line: 10433
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) (short) 10, (double) (-3407872), 49.407010626447445d, 22.24871540768837d, false);
        double double6 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 49.407010626447445d + "'", double6 == 49.407010626447445d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #680
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #83
32: ldc2_w        #681
35: ldc2_w        #683
38: ldc2_w        #651
41: iconst_0
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #139
50: dstore_2
51: new           #10
54: dup
55: invokespecial #11
58: ldc           #12
60: invokevirtual #13
63: dload_2
64: invokevirtual #60
67: ldc           #15
69: invokevirtual #13
72: ldc2_w        #683
75: invokevirtual #60
78: ldc           #12
80: invokevirtual #13
83: invokevirtual #16
86: dload_2
87: ldc2_w        #683
90: dcmpl
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #17
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 10436
End line: 10512
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        java.lang.String str85 = vector3D30.toString();
        java.lang.String str86 = vector3D30.toString();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str85, "{0.4; 0.62; 0.67}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str86, "{0.4; 0.62; 0.67}");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #685
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: invokevirtual #364
499: astore        64
501: aload         20
503: invokevirtual #364
506: astore        65
508: new           #10
511: dup
512: invokespecial #11
515: ldc           #12
517: invokevirtual #13
520: dload         4
522: invokevirtual #60
525: ldc           #15
527: invokevirtual #13
530: dconst_0
531: invokevirtual #60
534: ldc           #12
536: invokevirtual #13
539: invokevirtual #16
542: dload         4
544: dconst_0
545: dcmpl
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #17
557: new           #10
560: dup
561: invokespecial #11
564: ldc           #12
566: invokevirtual #13
569: dload         6
571: invokevirtual #60
574: ldc           #15
576: invokevirtual #13
579: dconst_0
580: invokevirtual #60
583: ldc           #12
585: invokevirtual #13
588: invokevirtual #16
591: dload         6
593: dconst_0
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #17
606: new           #10
609: dup
610: invokespecial #11
613: ldc           #12
615: invokevirtual #13
618: dload         11
620: invokevirtual #60
623: ldc           #15
625: invokevirtual #13
628: dconst_0
629: invokevirtual #60
632: ldc           #12
634: invokevirtual #13
637: invokevirtual #16
640: dload         11
642: dconst_0
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #17
655: new           #10
658: dup
659: invokespecial #11
662: ldc           #12
664: invokevirtual #13
667: dload         13
669: invokevirtual #60
672: ldc           #15
674: invokevirtual #13
677: dconst_0
678: invokevirtual #60
681: ldc           #12
683: invokevirtual #13
686: invokevirtual #16
689: dload         13
691: dconst_0
692: dcmpl
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #17
704: new           #10
707: dup
708: invokespecial #11
711: ldc           #12
713: invokevirtual #13
716: iload         15
718: invokevirtual #14
721: ldc           #15
723: invokevirtual #13
726: iconst_0
727: invokevirtual #14
730: ldc           #12
732: invokevirtual #13
735: invokevirtual #16
738: iload         15
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: new           #10
754: dup
755: invokespecial #11
758: ldc           #12
760: invokevirtual #13
763: dload         16
765: invokevirtual #60
768: ldc           #15
770: invokevirtual #13
773: dconst_0
774: invokevirtual #60
777: ldc           #12
779: invokevirtual #13
782: invokevirtual #16
785: dload         16
787: dconst_0
788: dcmpl
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #17
800: aload         18
802: invokestatic  #33
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         21
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         21
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         25
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         25
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         27
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: ldc2_w        #61
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         27
941: ldc2_w        #61
944: dcmpl
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #17
956: new           #10
959: dup
960: invokespecial #11
963: ldc           #12
965: invokevirtual #13
968: dload         31
970: invokevirtual #60
973: ldc           #15
975: invokevirtual #13
978: dconst_0
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         31
992: dconst_0
993: dcmpl
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #17
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: dload         33
1019: invokevirtual #60
1022: ldc           #15
1024: invokevirtual #13
1027: ldc2_w        #61
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         33
1043: ldc2_w        #61
1046: dcmpl
1047: ifne          1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #17
1058: new           #10
1061: dup
1062: invokespecial #11
1065: ldc           #12
1067: invokevirtual #13
1070: dload         35
1072: invokevirtual #60
1075: ldc           #15
1077: invokevirtual #13
1080: dconst_0
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         35
1094: dconst_0
1095: dcmpl
1096: ifne          1103
1099: iconst_1
1100: goto          1104
1103: iconst_0
1104: invokestatic  #17
1107: new           #10
1110: dup
1111: invokespecial #11
1114: ldc           #12
1116: invokevirtual #13
1119: dload         40
1121: invokevirtual #60
1124: ldc           #15
1126: invokevirtual #13
1129: dconst_0
1130: invokevirtual #60
1133: ldc           #12
1135: invokevirtual #13
1138: invokevirtual #16
1141: dload         40
1143: dconst_0
1144: dcmpl
1145: ifne          1152
1148: iconst_1
1149: goto          1153
1152: iconst_0
1153: invokestatic  #17
1156: new           #10
1159: dup
1160: invokespecial #11
1163: ldc           #12
1165: invokevirtual #13
1168: dload         42
1170: invokevirtual #60
1173: ldc           #15
1175: invokevirtual #13
1178: dconst_0
1179: invokevirtual #60
1182: ldc           #12
1184: invokevirtual #13
1187: invokevirtual #16
1190: dload         42
1192: dconst_0
1193: dcmpl
1194: ifne          1201
1197: iconst_1
1198: goto          1202
1201: iconst_0
1202: invokestatic  #17
1205: new           #10
1208: dup
1209: invokespecial #11
1212: ldc           #12
1214: invokevirtual #13
1217: dload         47
1219: invokevirtual #60
1222: ldc           #15
1224: invokevirtual #13
1227: dconst_0
1228: invokevirtual #60
1231: ldc           #12
1233: invokevirtual #13
1236: invokevirtual #16
1239: dload         47
1241: dconst_0
1242: dcmpl
1243: ifne          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #17
1254: new           #10
1257: dup
1258: invokespecial #11
1261: ldc           #12
1263: invokevirtual #13
1266: dload         49
1268: invokevirtual #60
1271: ldc           #15
1273: invokevirtual #13
1276: dconst_0
1277: invokevirtual #60
1280: ldc           #12
1282: invokevirtual #13
1285: invokevirtual #16
1288: dload         49
1290: dconst_0
1291: dcmpl
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #17
1303: new           #10
1306: dup
1307: invokespecial #11
1310: ldc           #12
1312: invokevirtual #13
1315: iload         51
1317: invokevirtual #14
1320: ldc           #15
1322: invokevirtual #13
1325: iconst_0
1326: invokevirtual #14
1329: ldc           #12
1331: invokevirtual #13
1334: invokevirtual #16
1337: iload         51
1339: ifne          1346
1342: iconst_1
1343: goto          1347
1346: iconst_0
1347: invokestatic  #17
1350: new           #10
1353: dup
1354: invokespecial #11
1357: ldc           #12
1359: invokevirtual #13
1362: dload         52
1364: invokevirtual #60
1367: ldc           #15
1369: invokevirtual #13
1372: dconst_0
1373: invokevirtual #60
1376: ldc           #12
1378: invokevirtual #13
1381: invokevirtual #16
1384: dload         52
1386: dconst_0
1387: dcmpl
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #17
1399: aload         54
1401: invokestatic  #33
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         57
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         57
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         59
1455: invokestatic  #33
1458: aload         60
1460: invokestatic  #33
1463: new           #10
1466: dup
1467: invokespecial #11
1470: ldc           #12
1472: invokevirtual #13
1475: dload         61
1477: invokevirtual #60
1480: ldc           #15
1482: invokevirtual #13
1485: ldc2_w        #63
1488: invokevirtual #60
1491: ldc           #12
1493: invokevirtual #13
1496: invokevirtual #16
1499: dload         61
1501: ldc2_w        #63
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: new           #10
1519: dup
1520: invokespecial #11
1523: ldc           #12
1525: invokevirtual #13
1528: aload         64
1530: invokevirtual #13
1533: ldc_w         #368
1536: invokevirtual #13
1539: invokevirtual #16
1542: aload         64
1544: ldc_w         #369
1547: invokestatic  #335
1550: new           #10
1553: dup
1554: invokespecial #11
1557: ldc           #12
1559: invokevirtual #13
1562: aload         65
1564: invokevirtual #13
1567: ldc_w         #368
1570: invokevirtual #13
1573: invokevirtual #16
1576: aload         65
1578: ldc_w         #369
1581: invokestatic  #335
1584: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 10515
End line: 10599
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.Space space25 = vector3D14.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = vector3D38.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double47 = vector3D43.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        double double48 = vector3D46.getDelta();
        double double49 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double59 = vector3D55.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D58);
        double double60 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D52, vector3D58);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double70 = vector3D66.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        double double71 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D63, vector3D69);
        boolean boolean72 = vector3D63.isInfinite();
        double double73 = vector3D52.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = vector3D63.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D77 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double81 = vector3D77.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D80);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D74.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D77);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D38.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        double double84 = vector3D31.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D14, vector3D31);
        java.lang.String str86 = vector3D31.toString();
        double double87 = vector3D31.getX();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 157247029, vector3D31, (double) 5363466260L, vector3D89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(space25);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.7345682747147468d + "'", double40 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.7345682747147468d + "'", double48 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0000000000000002d + "'", double84 == 1.0000000000000002d);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str86, "{0.4; 0.62; 0.67}");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.4009692518823901d + "'", double87 == 0.4009692518823901d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #686
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: invokevirtual #364
499: astore        64
501: aload         20
503: invokevirtual #99
506: dstore        65
508: aconst_null
509: astore        67
511: new           #43
514: dup
515: ldc2_w        #229
518: aload         20
520: ldc2_w        #687
523: aload         67
525: invokespecial #130
528: astore        68
530: ldc           #20
532: invokestatic  #21
535: goto          540
538: astore        68
540: new           #10
543: dup
544: invokespecial #11
547: ldc           #12
549: invokevirtual #13
552: dload         4
554: invokevirtual #60
557: ldc           #15
559: invokevirtual #13
562: dconst_0
563: invokevirtual #60
566: ldc           #12
568: invokevirtual #13
571: invokevirtual #16
574: dload         4
576: dconst_0
577: dcmpl
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #17
589: new           #10
592: dup
593: invokespecial #11
596: ldc           #12
598: invokevirtual #13
601: dload         6
603: invokevirtual #60
606: ldc           #15
608: invokevirtual #13
611: dconst_0
612: invokevirtual #60
615: ldc           #12
617: invokevirtual #13
620: invokevirtual #16
623: dload         6
625: dconst_0
626: dcmpl
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #17
638: new           #10
641: dup
642: invokespecial #11
645: ldc           #12
647: invokevirtual #13
650: dload         11
652: invokevirtual #60
655: ldc           #15
657: invokevirtual #13
660: dconst_0
661: invokevirtual #60
664: ldc           #12
666: invokevirtual #13
669: invokevirtual #16
672: dload         11
674: dconst_0
675: dcmpl
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #17
687: new           #10
690: dup
691: invokespecial #11
694: ldc           #12
696: invokevirtual #13
699: dload         13
701: invokevirtual #60
704: ldc           #15
706: invokevirtual #13
709: dconst_0
710: invokevirtual #60
713: ldc           #12
715: invokevirtual #13
718: invokevirtual #16
721: dload         13
723: dconst_0
724: dcmpl
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #17
736: new           #10
739: dup
740: invokespecial #11
743: ldc           #12
745: invokevirtual #13
748: iload         15
750: invokevirtual #14
753: ldc           #15
755: invokevirtual #13
758: iconst_0
759: invokevirtual #14
762: ldc           #12
764: invokevirtual #13
767: invokevirtual #16
770: iload         15
772: ifne          779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #17
783: new           #10
786: dup
787: invokespecial #11
790: ldc           #12
792: invokevirtual #13
795: dload         16
797: invokevirtual #60
800: ldc           #15
802: invokevirtual #13
805: dconst_0
806: invokevirtual #60
809: ldc           #12
811: invokevirtual #13
814: invokevirtual #16
817: dload         16
819: dconst_0
820: dcmpl
821: ifne          828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #17
832: aload         18
834: invokestatic  #33
837: new           #10
840: dup
841: invokespecial #11
844: ldc           #12
846: invokevirtual #13
849: dload         21
851: invokevirtual #60
854: ldc           #15
856: invokevirtual #13
859: dconst_0
860: invokevirtual #60
863: ldc           #12
865: invokevirtual #13
868: invokevirtual #16
871: dload         21
873: dconst_0
874: dcmpl
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #17
886: new           #10
889: dup
890: invokespecial #11
893: ldc           #12
895: invokevirtual #13
898: dload         25
900: invokevirtual #60
903: ldc           #15
905: invokevirtual #13
908: dconst_0
909: invokevirtual #60
912: ldc           #12
914: invokevirtual #13
917: invokevirtual #16
920: dload         25
922: dconst_0
923: dcmpl
924: ifne          931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #17
935: new           #10
938: dup
939: invokespecial #11
942: ldc           #12
944: invokevirtual #13
947: dload         27
949: invokevirtual #60
952: ldc           #15
954: invokevirtual #13
957: ldc2_w        #61
960: invokevirtual #60
963: ldc           #12
965: invokevirtual #13
968: invokevirtual #16
971: dload         27
973: ldc2_w        #61
976: dcmpl
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #17
988: new           #10
991: dup
992: invokespecial #11
995: ldc           #12
997: invokevirtual #13
1000: dload         31
1002: invokevirtual #60
1005: ldc           #15
1007: invokevirtual #13
1010: dconst_0
1011: invokevirtual #60
1014: ldc           #12
1016: invokevirtual #13
1019: invokevirtual #16
1022: dload         31
1024: dconst_0
1025: dcmpl
1026: ifne          1033
1029: iconst_1
1030: goto          1034
1033: iconst_0
1034: invokestatic  #17
1037: new           #10
1040: dup
1041: invokespecial #11
1044: ldc           #12
1046: invokevirtual #13
1049: dload         33
1051: invokevirtual #60
1054: ldc           #15
1056: invokevirtual #13
1059: ldc2_w        #61
1062: invokevirtual #60
1065: ldc           #12
1067: invokevirtual #13
1070: invokevirtual #16
1073: dload         33
1075: ldc2_w        #61
1078: dcmpl
1079: ifne          1086
1082: iconst_1
1083: goto          1087
1086: iconst_0
1087: invokestatic  #17
1090: new           #10
1093: dup
1094: invokespecial #11
1097: ldc           #12
1099: invokevirtual #13
1102: dload         35
1104: invokevirtual #60
1107: ldc           #15
1109: invokevirtual #13
1112: dconst_0
1113: invokevirtual #60
1116: ldc           #12
1118: invokevirtual #13
1121: invokevirtual #16
1124: dload         35
1126: dconst_0
1127: dcmpl
1128: ifne          1135
1131: iconst_1
1132: goto          1136
1135: iconst_0
1136: invokestatic  #17
1139: new           #10
1142: dup
1143: invokespecial #11
1146: ldc           #12
1148: invokevirtual #13
1151: dload         40
1153: invokevirtual #60
1156: ldc           #15
1158: invokevirtual #13
1161: dconst_0
1162: invokevirtual #60
1165: ldc           #12
1167: invokevirtual #13
1170: invokevirtual #16
1173: dload         40
1175: dconst_0
1176: dcmpl
1177: ifne          1184
1180: iconst_1
1181: goto          1185
1184: iconst_0
1185: invokestatic  #17
1188: new           #10
1191: dup
1192: invokespecial #11
1195: ldc           #12
1197: invokevirtual #13
1200: dload         42
1202: invokevirtual #60
1205: ldc           #15
1207: invokevirtual #13
1210: dconst_0
1211: invokevirtual #60
1214: ldc           #12
1216: invokevirtual #13
1219: invokevirtual #16
1222: dload         42
1224: dconst_0
1225: dcmpl
1226: ifne          1233
1229: iconst_1
1230: goto          1234
1233: iconst_0
1234: invokestatic  #17
1237: new           #10
1240: dup
1241: invokespecial #11
1244: ldc           #12
1246: invokevirtual #13
1249: dload         47
1251: invokevirtual #60
1254: ldc           #15
1256: invokevirtual #13
1259: dconst_0
1260: invokevirtual #60
1263: ldc           #12
1265: invokevirtual #13
1268: invokevirtual #16
1271: dload         47
1273: dconst_0
1274: dcmpl
1275: ifne          1282
1278: iconst_1
1279: goto          1283
1282: iconst_0
1283: invokestatic  #17
1286: new           #10
1289: dup
1290: invokespecial #11
1293: ldc           #12
1295: invokevirtual #13
1298: dload         49
1300: invokevirtual #60
1303: ldc           #15
1305: invokevirtual #13
1308: dconst_0
1309: invokevirtual #60
1312: ldc           #12
1314: invokevirtual #13
1317: invokevirtual #16
1320: dload         49
1322: dconst_0
1323: dcmpl
1324: ifne          1331
1327: iconst_1
1328: goto          1332
1331: iconst_0
1332: invokestatic  #17
1335: new           #10
1338: dup
1339: invokespecial #11
1342: ldc           #12
1344: invokevirtual #13
1347: iload         51
1349: invokevirtual #14
1352: ldc           #15
1354: invokevirtual #13
1357: iconst_0
1358: invokevirtual #14
1361: ldc           #12
1363: invokevirtual #13
1366: invokevirtual #16
1369: iload         51
1371: ifne          1378
1374: iconst_1
1375: goto          1379
1378: iconst_0
1379: invokestatic  #17
1382: new           #10
1385: dup
1386: invokespecial #11
1389: ldc           #12
1391: invokevirtual #13
1394: dload         52
1396: invokevirtual #60
1399: ldc           #15
1401: invokevirtual #13
1404: dconst_0
1405: invokevirtual #60
1408: ldc           #12
1410: invokevirtual #13
1413: invokevirtual #16
1416: dload         52
1418: dconst_0
1419: dcmpl
1420: ifne          1427
1423: iconst_1
1424: goto          1428
1427: iconst_0
1428: invokestatic  #17
1431: aload         54
1433: invokestatic  #33
1436: new           #10
1439: dup
1440: invokespecial #11
1443: ldc           #12
1445: invokevirtual #13
1448: dload         57
1450: invokevirtual #60
1453: ldc           #15
1455: invokevirtual #13
1458: dconst_0
1459: invokevirtual #60
1462: ldc           #12
1464: invokevirtual #13
1467: invokevirtual #16
1470: dload         57
1472: dconst_0
1473: dcmpl
1474: ifne          1481
1477: iconst_1
1478: goto          1482
1481: iconst_0
1482: invokestatic  #17
1485: aload         59
1487: invokestatic  #33
1490: aload         60
1492: invokestatic  #33
1495: new           #10
1498: dup
1499: invokespecial #11
1502: ldc           #12
1504: invokevirtual #13
1507: dload         61
1509: invokevirtual #60
1512: ldc           #15
1514: invokevirtual #13
1517: ldc2_w        #63
1520: invokevirtual #60
1523: ldc           #12
1525: invokevirtual #13
1528: invokevirtual #16
1531: dload         61
1533: ldc2_w        #63
1536: dcmpl
1537: ifne          1544
1540: iconst_1
1541: goto          1545
1544: iconst_0
1545: invokestatic  #17
1548: new           #10
1551: dup
1552: invokespecial #11
1555: ldc           #12
1557: invokevirtual #13
1560: aload         64
1562: invokevirtual #13
1565: ldc_w         #368
1568: invokevirtual #13
1571: invokevirtual #16
1574: aload         64
1576: ldc_w         #369
1579: invokestatic  #335
1582: new           #10
1585: dup
1586: invokespecial #11
1589: ldc           #12
1591: invokevirtual #13
1594: dload         65
1596: invokevirtual #60
1599: ldc           #15
1601: invokevirtual #13
1604: ldc2_w        #471
1607: invokevirtual #60
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: dload         65
1620: ldc2_w        #471
1623: dcmpl
1624: ifne          1631
1627: iconst_1
1628: goto          1632
1631: iconst_0
1632: invokestatic  #17
1635: return
Exception table:
from    to  target type
511   535   538   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 10602
End line: 10684
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation5.applyInverseTo(vector3D36);
        double double92 = vector3D91.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D96 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(Double.NEGATIVE_INFINITY, (double) 31, (double) (short) 1);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector97 = vector3D96.getZero();
        double double98 = vector3D91.dotProduct(euclidean3DVector97);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.3957773939515577E-8d + "'", double92 == 1.3957773939515577E-8d);
        org.junit.Assert.assertNotNull(euclidean3DVector97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #689
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: new           #43
47: dup
48: dconst_1
49: ldc2_w        #44
52: invokespecial #46
55: astore_2
56: new           #43
59: dup
60: dconst_1
61: ldc2_w        #44
64: invokespecial #46
67: astore_3
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        4
81: aload_3
82: aload         4
84: invokevirtual #47
87: dstore        5
89: aload_2
90: aload         4
92: invokestatic  #48
95: dstore        7
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        10
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        11
136: aload         10
138: aload         11
140: invokevirtual #47
143: dstore        12
145: aload         9
147: aload         11
149: invokestatic  #48
152: dstore        14
154: aload         9
156: invokevirtual #49
159: istore        16
161: aload_2
162: aload         9
164: invokevirtual #50
167: dstore        17
169: aload         9
171: invokevirtual #51
174: astore        19
176: new           #43
179: dup
180: dconst_1
181: ldc2_w        #44
184: invokespecial #46
187: astore        20
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        21
202: aload         20
204: aload         21
206: invokevirtual #47
209: dstore        22
211: new           #43
214: dup
215: dconst_1
216: ldc2_w        #44
219: invokespecial #46
222: astore        24
224: new           #43
227: dup
228: dconst_1
229: ldc2_w        #44
232: invokespecial #46
235: astore        25
237: aload         24
239: aload         25
241: invokevirtual #47
244: dstore        26
246: aload         25
248: invokevirtual #52
251: dstore        28
253: new           #43
256: dup
257: dconst_1
258: ldc2_w        #44
261: invokespecial #46
264: astore        30
266: new           #43
269: dup
270: dconst_1
271: ldc2_w        #44
274: invokespecial #46
277: astore        31
279: aload         30
281: aload         31
283: invokevirtual #47
286: dstore        32
288: aload         31
290: invokevirtual #52
293: dstore        34
295: aload         25
297: aload         31
299: invokevirtual #53
302: dstore        36
304: new           #43
307: dup
308: dconst_1
309: ldc2_w        #44
312: invokespecial #46
315: astore        38
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        39
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        40
343: aload         39
345: aload         40
347: invokevirtual #47
350: dstore        41
352: aload         38
354: aload         40
356: invokestatic  #48
359: dstore        43
361: new           #43
364: dup
365: dconst_1
366: ldc2_w        #44
369: invokespecial #46
372: astore        45
374: new           #43
377: dup
378: dconst_1
379: ldc2_w        #44
382: invokespecial #46
385: astore        46
387: new           #43
390: dup
391: dconst_1
392: ldc2_w        #44
395: invokespecial #46
398: astore        47
400: aload         46
402: aload         47
404: invokevirtual #47
407: dstore        48
409: aload         45
411: aload         47
413: invokestatic  #48
416: dstore        50
418: aload         45
420: invokevirtual #49
423: istore        52
425: aload         38
427: aload         45
429: invokevirtual #50
432: dstore        53
434: aload         45
436: invokevirtual #54
439: astore        55
441: new           #43
444: dup
445: dconst_1
446: ldc2_w        #44
449: invokespecial #46
452: astore        56
454: new           #43
457: dup
458: dconst_1
459: ldc2_w        #44
462: invokespecial #46
465: astore        57
467: aload         56
469: aload         57
471: invokevirtual #47
474: dstore        58
476: aload         55
478: aload         56
480: invokevirtual #55
483: astore        60
485: aload         25
487: aload         60
489: invokevirtual #55
492: astore        61
494: aload         21
496: aload         60
498: invokevirtual #53
501: dstore        62
503: new           #27
506: dup
507: aload         9
509: aload         21
511: invokespecial #56
514: astore        64
516: aload_1
517: aload         21
519: invokevirtual #98
522: astore        65
524: aload         65
526: invokevirtual #52
529: dstore        66
531: new           #43
534: dup
535: ldc2_w        #690
538: ldc2_w        #273
541: dconst_1
542: invokespecial #97
545: astore        68
547: aload         68
549: invokevirtual #198
552: astore        69
554: aload         65
556: aload         69
558: invokevirtual #470
561: dstore        70
563: new           #10
566: dup
567: invokespecial #11
570: ldc           #12
572: invokevirtual #13
575: dload         5
577: invokevirtual #60
580: ldc           #15
582: invokevirtual #13
585: dconst_0
586: invokevirtual #60
589: ldc           #12
591: invokevirtual #13
594: invokevirtual #16
597: dload         5
599: dconst_0
600: dcmpl
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #17
612: new           #10
615: dup
616: invokespecial #11
619: ldc           #12
621: invokevirtual #13
624: dload         7
626: invokevirtual #60
629: ldc           #15
631: invokevirtual #13
634: dconst_0
635: invokevirtual #60
638: ldc           #12
640: invokevirtual #13
643: invokevirtual #16
646: dload         7
648: dconst_0
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #17
661: new           #10
664: dup
665: invokespecial #11
668: ldc           #12
670: invokevirtual #13
673: dload         12
675: invokevirtual #60
678: ldc           #15
680: invokevirtual #13
683: dconst_0
684: invokevirtual #60
687: ldc           #12
689: invokevirtual #13
692: invokevirtual #16
695: dload         12
697: dconst_0
698: dcmpl
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #17
710: new           #10
713: dup
714: invokespecial #11
717: ldc           #12
719: invokevirtual #13
722: dload         14
724: invokevirtual #60
727: ldc           #15
729: invokevirtual #13
732: dconst_0
733: invokevirtual #60
736: ldc           #12
738: invokevirtual #13
741: invokevirtual #16
744: dload         14
746: dconst_0
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #17
759: new           #10
762: dup
763: invokespecial #11
766: ldc           #12
768: invokevirtual #13
771: iload         16
773: invokevirtual #14
776: ldc           #15
778: invokevirtual #13
781: iconst_0
782: invokevirtual #14
785: ldc           #12
787: invokevirtual #13
790: invokevirtual #16
793: iload         16
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #17
806: new           #10
809: dup
810: invokespecial #11
813: ldc           #12
815: invokevirtual #13
818: dload         17
820: invokevirtual #60
823: ldc           #15
825: invokevirtual #13
828: dconst_0
829: invokevirtual #60
832: ldc           #12
834: invokevirtual #13
837: invokevirtual #16
840: dload         17
842: dconst_0
843: dcmpl
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #17
855: aload         19
857: invokestatic  #33
860: new           #10
863: dup
864: invokespecial #11
867: ldc           #12
869: invokevirtual #13
872: dload         22
874: invokevirtual #60
877: ldc           #15
879: invokevirtual #13
882: dconst_0
883: invokevirtual #60
886: ldc           #12
888: invokevirtual #13
891: invokevirtual #16
894: dload         22
896: dconst_0
897: dcmpl
898: ifne          905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #17
909: new           #10
912: dup
913: invokespecial #11
916: ldc           #12
918: invokevirtual #13
921: dload         26
923: invokevirtual #60
926: ldc           #15
928: invokevirtual #13
931: dconst_0
932: invokevirtual #60
935: ldc           #12
937: invokevirtual #13
940: invokevirtual #16
943: dload         26
945: dconst_0
946: dcmpl
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #17
958: new           #10
961: dup
962: invokespecial #11
965: ldc           #12
967: invokevirtual #13
970: dload         28
972: invokevirtual #60
975: ldc           #15
977: invokevirtual #13
980: ldc2_w        #61
983: invokevirtual #60
986: ldc           #12
988: invokevirtual #13
991: invokevirtual #16
994: dload         28
996: ldc2_w        #61
999: dcmpl
1000: ifne          1007
1003: iconst_1
1004: goto          1008
1007: iconst_0
1008: invokestatic  #17
1011: new           #10
1014: dup
1015: invokespecial #11
1018: ldc           #12
1020: invokevirtual #13
1023: dload         32
1025: invokevirtual #60
1028: ldc           #15
1030: invokevirtual #13
1033: dconst_0
1034: invokevirtual #60
1037: ldc           #12
1039: invokevirtual #13
1042: invokevirtual #16
1045: dload         32
1047: dconst_0
1048: dcmpl
1049: ifne          1056
1052: iconst_1
1053: goto          1057
1056: iconst_0
1057: invokestatic  #17
1060: new           #10
1063: dup
1064: invokespecial #11
1067: ldc           #12
1069: invokevirtual #13
1072: dload         34
1074: invokevirtual #60
1077: ldc           #15
1079: invokevirtual #13
1082: ldc2_w        #61
1085: invokevirtual #60
1088: ldc           #12
1090: invokevirtual #13
1093: invokevirtual #16
1096: dload         34
1098: ldc2_w        #61
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #17
1113: new           #10
1116: dup
1117: invokespecial #11
1120: ldc           #12
1122: invokevirtual #13
1125: dload         36
1127: invokevirtual #60
1130: ldc           #15
1132: invokevirtual #13
1135: dconst_0
1136: invokevirtual #60
1139: ldc           #12
1141: invokevirtual #13
1144: invokevirtual #16
1147: dload         36
1149: dconst_0
1150: dcmpl
1151: ifne          1158
1154: iconst_1
1155: goto          1159
1158: iconst_0
1159: invokestatic  #17
1162: new           #10
1165: dup
1166: invokespecial #11
1169: ldc           #12
1171: invokevirtual #13
1174: dload         41
1176: invokevirtual #60
1179: ldc           #15
1181: invokevirtual #13
1184: dconst_0
1185: invokevirtual #60
1188: ldc           #12
1190: invokevirtual #13
1193: invokevirtual #16
1196: dload         41
1198: dconst_0
1199: dcmpl
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #17
1211: new           #10
1214: dup
1215: invokespecial #11
1218: ldc           #12
1220: invokevirtual #13
1223: dload         43
1225: invokevirtual #60
1228: ldc           #15
1230: invokevirtual #13
1233: dconst_0
1234: invokevirtual #60
1237: ldc           #12
1239: invokevirtual #13
1242: invokevirtual #16
1245: dload         43
1247: dconst_0
1248: dcmpl
1249: ifne          1256
1252: iconst_1
1253: goto          1257
1256: iconst_0
1257: invokestatic  #17
1260: new           #10
1263: dup
1264: invokespecial #11
1267: ldc           #12
1269: invokevirtual #13
1272: dload         48
1274: invokevirtual #60
1277: ldc           #15
1279: invokevirtual #13
1282: dconst_0
1283: invokevirtual #60
1286: ldc           #12
1288: invokevirtual #13
1291: invokevirtual #16
1294: dload         48
1296: dconst_0
1297: dcmpl
1298: ifne          1305
1301: iconst_1
1302: goto          1306
1305: iconst_0
1306: invokestatic  #17
1309: new           #10
1312: dup
1313: invokespecial #11
1316: ldc           #12
1318: invokevirtual #13
1321: dload         50
1323: invokevirtual #60
1326: ldc           #15
1328: invokevirtual #13
1331: dconst_0
1332: invokevirtual #60
1335: ldc           #12
1337: invokevirtual #13
1340: invokevirtual #16
1343: dload         50
1345: dconst_0
1346: dcmpl
1347: ifne          1354
1350: iconst_1
1351: goto          1355
1354: iconst_0
1355: invokestatic  #17
1358: new           #10
1361: dup
1362: invokespecial #11
1365: ldc           #12
1367: invokevirtual #13
1370: iload         52
1372: invokevirtual #14
1375: ldc           #15
1377: invokevirtual #13
1380: iconst_0
1381: invokevirtual #14
1384: ldc           #12
1386: invokevirtual #13
1389: invokevirtual #16
1392: iload         52
1394: ifne          1401
1397: iconst_1
1398: goto          1402
1401: iconst_0
1402: invokestatic  #17
1405: new           #10
1408: dup
1409: invokespecial #11
1412: ldc           #12
1414: invokevirtual #13
1417: dload         53
1419: invokevirtual #60
1422: ldc           #15
1424: invokevirtual #13
1427: dconst_0
1428: invokevirtual #60
1431: ldc           #12
1433: invokevirtual #13
1436: invokevirtual #16
1439: dload         53
1441: dconst_0
1442: dcmpl
1443: ifne          1450
1446: iconst_1
1447: goto          1451
1450: iconst_0
1451: invokestatic  #17
1454: aload         55
1456: invokestatic  #33
1459: new           #10
1462: dup
1463: invokespecial #11
1466: ldc           #12
1468: invokevirtual #13
1471: dload         58
1473: invokevirtual #60
1476: ldc           #15
1478: invokevirtual #13
1481: dconst_0
1482: invokevirtual #60
1485: ldc           #12
1487: invokevirtual #13
1490: invokevirtual #16
1493: dload         58
1495: dconst_0
1496: dcmpl
1497: ifne          1504
1500: iconst_1
1501: goto          1505
1504: iconst_0
1505: invokestatic  #17
1508: aload         60
1510: invokestatic  #33
1513: aload         61
1515: invokestatic  #33
1518: new           #10
1521: dup
1522: invokespecial #11
1525: ldc           #12
1527: invokevirtual #13
1530: dload         62
1532: invokevirtual #60
1535: ldc           #15
1537: invokevirtual #13
1540: ldc2_w        #63
1543: invokevirtual #60
1546: ldc           #12
1548: invokevirtual #13
1551: invokevirtual #16
1554: dload         62
1556: ldc2_w        #63
1559: dcmpl
1560: ifne          1567
1563: iconst_1
1564: goto          1568
1567: iconst_0
1568: invokestatic  #17
1571: aload         65
1573: invokestatic  #33
1576: new           #10
1579: dup
1580: invokespecial #11
1583: ldc           #12
1585: invokevirtual #13
1588: dload         66
1590: invokevirtual #60
1593: ldc           #15
1595: invokevirtual #13
1598: ldc2_w        #692
1601: invokevirtual #60
1604: ldc           #12
1606: invokevirtual #13
1609: invokevirtual #16
1612: dload         66
1614: ldc2_w        #692
1617: dcmpl
1618: ifne          1625
1621: iconst_1
1622: goto          1626
1625: iconst_0
1626: invokestatic  #17
1629: aload         69
1631: invokestatic  #33
1634: new           #10
1637: dup
1638: invokespecial #11
1641: ldc           #12
1643: invokevirtual #13
1646: dload         70
1648: invokevirtual #60
1651: ldc           #15
1653: invokevirtual #13
1656: dconst_0
1657: invokevirtual #60
1660: ldc           #12
1662: invokevirtual #13
1665: invokevirtual #16
1668: dload         70
1670: dconst_0
1671: dcmpl
1672: ifne          1679
1675: iconst_1
1676: goto          1680
1679: iconst_0
1680: invokestatic  #17
1683: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 10687
End line: 10704
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 101L, (-30.055369951229576d), (double) 1.07957466E9f, (-1024.0d), false);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation11 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = rotation11.getAxis();
        double double13 = rotation11.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = rotation5.applyInverseTo(vector3D14);
        double double17 = vector3D16.getNorm();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #694
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #170
32: ldc2_w        #625
35: ldc2_w        #627
38: ldc2_w        #352
41: iconst_0
42: invokespecial #150
45: astore_1
46: new           #27
49: dup
50: ldc2_w        #146
53: ldc2_w        #72
56: ldc2_w        #148
59: dconst_1
60: iconst_0
61: invokespecial #150
64: astore_2
65: aload_2
66: invokevirtual #96
69: astore_3
70: aload_2
71: invokevirtual #95
74: dstore        4
76: getstatic     #314
79: astore        6
81: aload_2
82: aload         6
84: invokevirtual #98
87: astore        7
89: aload_1
90: aload         6
92: invokevirtual #98
95: astore        8
97: aload         8
99: invokevirtual #261
102: dstore        9
104: aload_3
105: invokestatic  #33
108: new           #10
111: dup
112: invokespecial #11
115: ldc           #12
117: invokevirtual #13
120: dload         4
122: invokevirtual #60
125: ldc           #15
127: invokevirtual #13
130: dconst_1
131: invokevirtual #60
134: ldc           #12
136: invokevirtual #13
139: invokevirtual #16
142: dload         4
144: dconst_1
145: dcmpl
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #17
157: aload         6
159: invokestatic  #33
162: aload         7
164: invokestatic  #33
167: aload         8
169: invokestatic  #33
172: dload         9
174: invokestatic  #242
177: invokestatic  #243
180: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 10707
End line: 10780
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D27.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D27, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double62 = vector3D60.getDelta();
        double double63 = vector3D52.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        double double64 = vector3D44.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector65 = vector3D44.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D66 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double73 = vector3D69.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        double double74 = vector3D72.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_I;
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D75);
        double double77 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D66, vector3D75);
        boolean boolean78 = vector3D66.isNaN();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.7345682747147468d + "'", double62 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.7345682747147468d + "'", double74 == 0.7345682747147468d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.40096925188239d + "'", double76 == 1.40096925188239d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.391417376346165d + "'", double77 == 4.391417376346165d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #695
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #193
203: astore        24
205: new           #27
208: dup
209: aload         19
211: ldc2_w        #259
214: invokespecial #103
217: astore        25
219: new           #43
222: dup
223: dconst_1
224: ldc2_w        #44
227: invokespecial #46
230: astore        26
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        27
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        28
258: aload         27
260: aload         28
262: invokevirtual #47
265: dstore        29
267: aload         26
269: aload         28
271: invokestatic  #48
274: dstore        31
276: new           #43
279: dup
280: dconst_1
281: ldc2_w        #44
284: invokespecial #46
287: astore        33
289: new           #43
292: dup
293: dconst_1
294: ldc2_w        #44
297: invokespecial #46
300: astore        34
302: aload         33
304: aload         34
306: invokevirtual #47
309: dstore        35
311: aload         34
313: invokevirtual #52
316: dstore        37
318: new           #43
321: dup
322: dconst_1
323: ldc2_w        #44
326: invokespecial #46
329: astore        39
331: new           #43
334: dup
335: dconst_1
336: ldc2_w        #44
339: invokespecial #46
342: astore        40
344: aload         39
346: aload         40
348: invokevirtual #47
351: dstore        41
353: aload         40
355: invokevirtual #52
358: dstore        43
360: aload         34
362: aload         40
364: invokevirtual #53
367: dstore        45
369: aload         28
371: aload         34
373: invokevirtual #129
376: dstore        47
378: aload         28
380: invokevirtual #193
383: astore        49
385: aload         19
387: aload         28
389: invokevirtual #55
392: astore        50
394: new           #43
397: dup
398: dconst_1
399: ldc2_w        #44
402: invokespecial #46
405: astore        51
407: new           #43
410: dup
411: dconst_1
412: ldc2_w        #44
415: invokespecial #46
418: astore        52
420: aload         51
422: aload         52
424: invokevirtual #47
427: dstore        53
429: aload         52
431: invokevirtual #52
434: dstore        55
436: getstatic     #355
439: astore        57
441: aload         52
443: aload         57
445: invokestatic  #48
448: dstore        58
450: aload         50
452: aload         57
454: invokestatic  #127
457: dstore        60
459: aload         50
461: invokevirtual #307
464: istore        62
466: new           #10
469: dup
470: invokespecial #11
473: ldc           #12
475: invokevirtual #13
478: dload         4
480: invokevirtual #60
483: ldc           #15
485: invokevirtual #13
488: dconst_0
489: invokevirtual #60
492: ldc           #12
494: invokevirtual #13
497: invokevirtual #16
500: dload         4
502: dconst_0
503: dcmpl
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #17
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: dload         6
529: invokevirtual #60
532: ldc           #15
534: invokevirtual #13
537: dconst_0
538: invokevirtual #60
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: dload         6
551: dconst_0
552: dcmpl
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #17
564: new           #10
567: dup
568: invokespecial #11
571: ldc           #12
573: invokevirtual #13
576: dload         11
578: invokevirtual #60
581: ldc           #15
583: invokevirtual #13
586: dconst_0
587: invokevirtual #60
590: ldc           #12
592: invokevirtual #13
595: invokevirtual #16
598: dload         11
600: dconst_0
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #17
613: new           #10
616: dup
617: invokespecial #11
620: ldc           #12
622: invokevirtual #13
625: dload         13
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload         13
649: dconst_0
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: iload         15
676: invokevirtual #14
679: ldc           #15
681: invokevirtual #13
684: iconst_0
685: invokevirtual #14
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: iload         15
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #17
709: new           #10
712: dup
713: invokespecial #11
716: ldc           #12
718: invokevirtual #13
721: dload         16
723: invokevirtual #60
726: ldc           #15
728: invokevirtual #13
731: dconst_0
732: invokevirtual #60
735: ldc           #12
737: invokevirtual #13
740: invokevirtual #16
743: dload         16
745: dconst_0
746: dcmpl
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: aload         18
760: invokestatic  #33
763: new           #10
766: dup
767: invokespecial #11
770: ldc           #12
772: invokevirtual #13
775: dload         21
777: invokevirtual #60
780: ldc           #15
782: invokevirtual #13
785: dconst_0
786: invokevirtual #60
789: ldc           #12
791: invokevirtual #13
794: invokevirtual #16
797: dload         21
799: dconst_0
800: dcmpl
801: ifne          808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #17
812: aload         23
814: invokestatic  #33
817: aload         24
819: invokestatic  #33
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         29
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         29
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: new           #10
874: dup
875: invokespecial #11
878: ldc           #12
880: invokevirtual #13
883: dload         31
885: invokevirtual #60
888: ldc           #15
890: invokevirtual #13
893: dconst_0
894: invokevirtual #60
897: ldc           #12
899: invokevirtual #13
902: invokevirtual #16
905: dload         31
907: dconst_0
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: dload         35
934: invokevirtual #60
937: ldc           #15
939: invokevirtual #13
942: dconst_0
943: invokevirtual #60
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: dload         35
956: dconst_0
957: dcmpl
958: ifne          965
961: iconst_1
962: goto          966
965: iconst_0
966: invokestatic  #17
969: new           #10
972: dup
973: invokespecial #11
976: ldc           #12
978: invokevirtual #13
981: dload         37
983: invokevirtual #60
986: ldc           #15
988: invokevirtual #13
991: ldc2_w        #61
994: invokevirtual #60
997: ldc           #12
999: invokevirtual #13
1002: invokevirtual #16
1005: dload         37
1007: ldc2_w        #61
1010: dcmpl
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #17
1022: new           #10
1025: dup
1026: invokespecial #11
1029: ldc           #12
1031: invokevirtual #13
1034: dload         41
1036: invokevirtual #60
1039: ldc           #15
1041: invokevirtual #13
1044: dconst_0
1045: invokevirtual #60
1048: ldc           #12
1050: invokevirtual #13
1053: invokevirtual #16
1056: dload         41
1058: dconst_0
1059: dcmpl
1060: ifne          1067
1063: iconst_1
1064: goto          1068
1067: iconst_0
1068: invokestatic  #17
1071: new           #10
1074: dup
1075: invokespecial #11
1078: ldc           #12
1080: invokevirtual #13
1083: dload         43
1085: invokevirtual #60
1088: ldc           #15
1090: invokevirtual #13
1093: ldc2_w        #61
1096: invokevirtual #60
1099: ldc           #12
1101: invokevirtual #13
1104: invokevirtual #16
1107: dload         43
1109: ldc2_w        #61
1112: dcmpl
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #17
1124: new           #10
1127: dup
1128: invokespecial #11
1131: ldc           #12
1133: invokevirtual #13
1136: dload         45
1138: invokevirtual #60
1141: ldc           #15
1143: invokevirtual #13
1146: dconst_0
1147: invokevirtual #60
1150: ldc           #12
1152: invokevirtual #13
1155: invokevirtual #16
1158: dload         45
1160: dconst_0
1161: dcmpl
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #17
1173: new           #10
1176: dup
1177: invokespecial #11
1180: ldc           #12
1182: invokevirtual #13
1185: dload         47
1187: invokevirtual #60
1190: ldc           #15
1192: invokevirtual #13
1195: dconst_0
1196: invokevirtual #60
1199: ldc           #12
1201: invokevirtual #13
1204: invokevirtual #16
1207: dload         47
1209: dconst_0
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #17
1222: aload         49
1224: invokestatic  #33
1227: aload         50
1229: invokestatic  #33
1232: new           #10
1235: dup
1236: invokespecial #11
1239: ldc           #12
1241: invokevirtual #13
1244: dload         53
1246: invokevirtual #60
1249: ldc           #15
1251: invokevirtual #13
1254: dconst_0
1255: invokevirtual #60
1258: ldc           #12
1260: invokevirtual #13
1263: invokevirtual #16
1266: dload         53
1268: dconst_0
1269: dcmpl
1270: ifne          1277
1273: iconst_1
1274: goto          1278
1277: iconst_0
1278: invokestatic  #17
1281: new           #10
1284: dup
1285: invokespecial #11
1288: ldc           #12
1290: invokevirtual #13
1293: dload         55
1295: invokevirtual #60
1298: ldc           #15
1300: invokevirtual #13
1303: ldc2_w        #61
1306: invokevirtual #60
1309: ldc           #12
1311: invokevirtual #13
1314: invokevirtual #16
1317: dload         55
1319: ldc2_w        #61
1322: dcmpl
1323: ifne          1330
1326: iconst_1
1327: goto          1331
1330: iconst_0
1331: invokestatic  #17
1334: aload         57
1336: invokestatic  #33
1339: new           #10
1342: dup
1343: invokespecial #11
1346: ldc           #12
1348: invokevirtual #13
1351: dload         58
1353: invokevirtual #60
1356: ldc           #15
1358: invokevirtual #13
1361: ldc2_w        #492
1364: invokevirtual #60
1367: ldc           #12
1369: invokevirtual #13
1372: invokevirtual #16
1375: dload         58
1377: ldc2_w        #492
1380: dcmpl
1381: ifne          1388
1384: iconst_1
1385: goto          1389
1388: iconst_0
1389: invokestatic  #17
1392: new           #10
1395: dup
1396: invokespecial #11
1399: ldc           #12
1401: invokevirtual #13
1404: dload         60
1406: invokevirtual #60
1409: ldc           #15
1411: invokevirtual #13
1414: ldc2_w        #494
1417: invokevirtual #60
1420: ldc           #12
1422: invokevirtual #13
1425: invokevirtual #16
1428: dload         60
1430: ldc2_w        #494
1433: dcmpl
1434: ifne          1441
1437: iconst_1
1438: goto          1442
1441: iconst_0
1442: invokestatic  #17
1445: new           #10
1448: dup
1449: invokespecial #11
1452: ldc           #12
1454: invokevirtual #13
1457: iload         62
1459: invokevirtual #14
1462: ldc           #15
1464: invokevirtual #13
1467: iconst_0
1468: invokevirtual #14
1471: ldc           #12
1473: invokevirtual #13
1476: invokevirtual #16
1479: iload         62
1481: ifne          1488
1484: iconst_1
1485: goto          1489
1488: iconst_0
1489: invokestatic  #17
1492: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 10783
End line: 10806
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = vector3D1.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = vector3D1.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation10 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = rotation10.getAxis();
        double double12 = rotation10.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = rotation10.applyInverseTo(vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = vector3D1.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) (-9603), vector3D15);
        boolean boolean17 = vector3D15.isNaN();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #696
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #432
28: astore_1
29: aload_1
30: invokevirtual #163
33: astore_2
34: aload_1
35: invokevirtual #54
38: astore_3
39: new           #27
42: dup
43: ldc2_w        #146
46: ldc2_w        #72
49: ldc2_w        #148
52: dconst_1
53: iconst_0
54: invokespecial #150
57: astore        4
59: aload         4
61: invokevirtual #96
64: astore        5
66: aload         4
68: invokevirtual #95
71: dstore        6
73: getstatic     #314
76: astore        8
78: aload         4
80: aload         8
82: invokevirtual #98
85: astore        9
87: aload_1
88: ldc2_w        #434
91: aload         8
93: invokevirtual #182
96: astore        10
98: new           #43
101: dup
102: ldc2_w        #697
105: aload         10
107: invokespecial #305
110: astore        11
112: aload         10
114: invokevirtual #307
117: istore        12
119: aload_1
120: invokestatic  #33
123: aload_2
124: invokestatic  #33
127: aload_3
128: invokestatic  #33
131: aload         5
133: invokestatic  #33
136: new           #10
139: dup
140: invokespecial #11
143: ldc           #12
145: invokevirtual #13
148: dload         6
150: invokevirtual #60
153: ldc           #15
155: invokevirtual #13
158: dconst_1
159: invokevirtual #60
162: ldc           #12
164: invokevirtual #13
167: invokevirtual #16
170: dload         6
172: dconst_1
173: dcmpl
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #17
185: aload         8
187: invokestatic  #33
190: aload         9
192: invokestatic  #33
195: aload         10
197: invokestatic  #33
200: new           #10
203: dup
204: invokespecial #11
207: ldc           #12
209: invokevirtual #13
212: iload         12
214: invokevirtual #14
217: ldc           #15
219: invokevirtual #13
222: iconst_1
223: invokevirtual #14
226: ldc           #12
228: invokevirtual #13
231: invokevirtual #16
234: iload         12
236: iconst_1
237: if_icmpne     244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #17
248: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 10809
End line: 10892
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D4 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double11 = vector3D7.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D10);
        double double12 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D4, vector3D10);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        boolean boolean24 = vector3D15.isInfinite();
        double double25 = vector3D4.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        org.apache.commons.math.geometry.Space space26 = vector3D15.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double40 = vector3D36.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D39);
        double double41 = vector3D39.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double48 = vector3D44.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double49 = vector3D47.getDelta();
        double double50 = vector3D39.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double60 = vector3D56.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D59);
        double double61 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D53, vector3D59);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double71 = vector3D67.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        double double72 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D64, vector3D70);
        boolean boolean73 = vector3D64.isInfinite();
        double double74 = vector3D53.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = vector3D64.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double82 = vector3D78.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D75.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = vector3D39.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        double double85 = vector3D32.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation86 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D15, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation87 = rotation86.revert();
        double double88 = rotation87.getQ1();
        double double89 = rotation87.getQ3();
        double[][] doubleArray90 = rotation87.getMatrix();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException91 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable1, (java.lang.Object[]) doubleArray90);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException92 = new org.apache.commons.math.exception.NotFiniteNumberException((java.lang.Number) 35L, (java.lang.Object[]) doubleArray90);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(space26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.7345682747147468d + "'", double41 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.7345682747147468d + "'", double49 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0000000000000002d + "'", double85 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #699
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #43
30: dup
31: dconst_1
32: ldc2_w        #44
35: invokespecial #46
38: astore_2
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_3
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore        4
64: aload_3
65: aload         4
67: invokevirtual #47
70: dstore        5
72: aload_2
73: aload         4
75: invokestatic  #48
78: dstore        7
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        9
93: new           #43
96: dup
97: dconst_1
98: ldc2_w        #44
101: invokespecial #46
104: astore        10
106: new           #43
109: dup
110: dconst_1
111: ldc2_w        #44
114: invokespecial #46
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #47
126: dstore        12
128: aload         9
130: aload         11
132: invokestatic  #48
135: dstore        14
137: aload         9
139: invokevirtual #49
142: istore        16
144: aload_2
145: aload         9
147: invokevirtual #50
150: dstore        17
152: aload         9
154: invokevirtual #51
157: astore        19
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        20
172: new           #43
175: dup
176: dconst_1
177: ldc2_w        #44
180: invokespecial #46
183: astore        21
185: aload         20
187: aload         21
189: invokevirtual #47
192: dstore        22
194: new           #43
197: dup
198: dconst_1
199: ldc2_w        #44
202: invokespecial #46
205: astore        24
207: new           #43
210: dup
211: dconst_1
212: ldc2_w        #44
215: invokespecial #46
218: astore        25
220: aload         24
222: aload         25
224: invokevirtual #47
227: dstore        26
229: aload         25
231: invokevirtual #52
234: dstore        28
236: new           #43
239: dup
240: dconst_1
241: ldc2_w        #44
244: invokespecial #46
247: astore        30
249: new           #43
252: dup
253: dconst_1
254: ldc2_w        #44
257: invokespecial #46
260: astore        31
262: aload         30
264: aload         31
266: invokevirtual #47
269: dstore        32
271: aload         31
273: invokevirtual #52
276: dstore        34
278: aload         25
280: aload         31
282: invokevirtual #53
285: dstore        36
287: new           #43
290: dup
291: dconst_1
292: ldc2_w        #44
295: invokespecial #46
298: astore        38
300: new           #43
303: dup
304: dconst_1
305: ldc2_w        #44
308: invokespecial #46
311: astore        39
313: new           #43
316: dup
317: dconst_1
318: ldc2_w        #44
321: invokespecial #46
324: astore        40
326: aload         39
328: aload         40
330: invokevirtual #47
333: dstore        41
335: aload         38
337: aload         40
339: invokestatic  #48
342: dstore        43
344: new           #43
347: dup
348: dconst_1
349: ldc2_w        #44
352: invokespecial #46
355: astore        45
357: new           #43
360: dup
361: dconst_1
362: ldc2_w        #44
365: invokespecial #46
368: astore        46
370: new           #43
373: dup
374: dconst_1
375: ldc2_w        #44
378: invokespecial #46
381: astore        47
383: aload         46
385: aload         47
387: invokevirtual #47
390: dstore        48
392: aload         45
394: aload         47
396: invokestatic  #48
399: dstore        50
401: aload         45
403: invokevirtual #49
406: istore        52
408: aload         38
410: aload         45
412: invokevirtual #50
415: dstore        53
417: aload         45
419: invokevirtual #54
422: astore        55
424: new           #43
427: dup
428: dconst_1
429: ldc2_w        #44
432: invokespecial #46
435: astore        56
437: new           #43
440: dup
441: dconst_1
442: ldc2_w        #44
445: invokespecial #46
448: astore        57
450: aload         56
452: aload         57
454: invokevirtual #47
457: dstore        58
459: aload         55
461: aload         56
463: invokevirtual #55
466: astore        60
468: aload         25
470: aload         60
472: invokevirtual #55
475: astore        61
477: aload         21
479: aload         60
481: invokevirtual #53
484: dstore        62
486: new           #27
489: dup
490: aload         9
492: aload         21
494: invokespecial #56
497: astore        64
499: aload         64
501: invokevirtual #93
504: astore        65
506: aload         65
508: invokevirtual #94
511: dstore        66
513: aload         65
515: invokevirtual #95
518: dstore        68
520: aload         65
522: invokevirtual #222
525: astore        70
527: new           #247
530: dup
531: aload_1
532: aload         70
534: checkcast     #248
537: invokespecial #249
540: astore        71
542: new           #438
545: dup
546: ldc2_w        #700
549: invokestatic  #324
552: aload         70
554: checkcast     #248
557: invokespecial #702
560: astore        72
562: new           #10
565: dup
566: invokespecial #11
569: ldc           #12
571: invokevirtual #13
574: dload         5
576: invokevirtual #60
579: ldc           #15
581: invokevirtual #13
584: dconst_0
585: invokevirtual #60
588: ldc           #12
590: invokevirtual #13
593: invokevirtual #16
596: dload         5
598: dconst_0
599: dcmpl
600: ifne          607
603: iconst_1
604: goto          608
607: iconst_0
608: invokestatic  #17
611: new           #10
614: dup
615: invokespecial #11
618: ldc           #12
620: invokevirtual #13
623: dload         7
625: invokevirtual #60
628: ldc           #15
630: invokevirtual #13
633: dconst_0
634: invokevirtual #60
637: ldc           #12
639: invokevirtual #13
642: invokevirtual #16
645: dload         7
647: dconst_0
648: dcmpl
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #17
660: new           #10
663: dup
664: invokespecial #11
667: ldc           #12
669: invokevirtual #13
672: dload         12
674: invokevirtual #60
677: ldc           #15
679: invokevirtual #13
682: dconst_0
683: invokevirtual #60
686: ldc           #12
688: invokevirtual #13
691: invokevirtual #16
694: dload         12
696: dconst_0
697: dcmpl
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #17
709: new           #10
712: dup
713: invokespecial #11
716: ldc           #12
718: invokevirtual #13
721: dload         14
723: invokevirtual #60
726: ldc           #15
728: invokevirtual #13
731: dconst_0
732: invokevirtual #60
735: ldc           #12
737: invokevirtual #13
740: invokevirtual #16
743: dload         14
745: dconst_0
746: dcmpl
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: iload         16
772: invokevirtual #14
775: ldc           #15
777: invokevirtual #13
780: iconst_0
781: invokevirtual #14
784: ldc           #12
786: invokevirtual #13
789: invokevirtual #16
792: iload         16
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #17
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         17
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         17
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: aload         19
856: invokestatic  #33
859: new           #10
862: dup
863: invokespecial #11
866: ldc           #12
868: invokevirtual #13
871: dload         22
873: invokevirtual #60
876: ldc           #15
878: invokevirtual #13
881: dconst_0
882: invokevirtual #60
885: ldc           #12
887: invokevirtual #13
890: invokevirtual #16
893: dload         22
895: dconst_0
896: dcmpl
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #17
908: new           #10
911: dup
912: invokespecial #11
915: ldc           #12
917: invokevirtual #13
920: dload         26
922: invokevirtual #60
925: ldc           #15
927: invokevirtual #13
930: dconst_0
931: invokevirtual #60
934: ldc           #12
936: invokevirtual #13
939: invokevirtual #16
942: dload         26
944: dconst_0
945: dcmpl
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #17
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         28
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: ldc2_w        #61
982: invokevirtual #60
985: ldc           #12
987: invokevirtual #13
990: invokevirtual #16
993: dload         28
995: ldc2_w        #61
998: dcmpl
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #17
1010: new           #10
1013: dup
1014: invokespecial #11
1017: ldc           #12
1019: invokevirtual #13
1022: dload         32
1024: invokevirtual #60
1027: ldc           #15
1029: invokevirtual #13
1032: dconst_0
1033: invokevirtual #60
1036: ldc           #12
1038: invokevirtual #13
1041: invokevirtual #16
1044: dload         32
1046: dconst_0
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: new           #10
1062: dup
1063: invokespecial #11
1066: ldc           #12
1068: invokevirtual #13
1071: dload         34
1073: invokevirtual #60
1076: ldc           #15
1078: invokevirtual #13
1081: ldc2_w        #61
1084: invokevirtual #60
1087: ldc           #12
1089: invokevirtual #13
1092: invokevirtual #16
1095: dload         34
1097: ldc2_w        #61
1100: dcmpl
1101: ifne          1108
1104: iconst_1
1105: goto          1109
1108: iconst_0
1109: invokestatic  #17
1112: new           #10
1115: dup
1116: invokespecial #11
1119: ldc           #12
1121: invokevirtual #13
1124: dload         36
1126: invokevirtual #60
1129: ldc           #15
1131: invokevirtual #13
1134: dconst_0
1135: invokevirtual #60
1138: ldc           #12
1140: invokevirtual #13
1143: invokevirtual #16
1146: dload         36
1148: dconst_0
1149: dcmpl
1150: ifne          1157
1153: iconst_1
1154: goto          1158
1157: iconst_0
1158: invokestatic  #17
1161: new           #10
1164: dup
1165: invokespecial #11
1168: ldc           #12
1170: invokevirtual #13
1173: dload         41
1175: invokevirtual #60
1178: ldc           #15
1180: invokevirtual #13
1183: dconst_0
1184: invokevirtual #60
1187: ldc           #12
1189: invokevirtual #13
1192: invokevirtual #16
1195: dload         41
1197: dconst_0
1198: dcmpl
1199: ifne          1206
1202: iconst_1
1203: goto          1207
1206: iconst_0
1207: invokestatic  #17
1210: new           #10
1213: dup
1214: invokespecial #11
1217: ldc           #12
1219: invokevirtual #13
1222: dload         43
1224: invokevirtual #60
1227: ldc           #15
1229: invokevirtual #13
1232: dconst_0
1233: invokevirtual #60
1236: ldc           #12
1238: invokevirtual #13
1241: invokevirtual #16
1244: dload         43
1246: dconst_0
1247: dcmpl
1248: ifne          1255
1251: iconst_1
1252: goto          1256
1255: iconst_0
1256: invokestatic  #17
1259: new           #10
1262: dup
1263: invokespecial #11
1266: ldc           #12
1268: invokevirtual #13
1271: dload         48
1273: invokevirtual #60
1276: ldc           #15
1278: invokevirtual #13
1281: dconst_0
1282: invokevirtual #60
1285: ldc           #12
1287: invokevirtual #13
1290: invokevirtual #16
1293: dload         48
1295: dconst_0
1296: dcmpl
1297: ifne          1304
1300: iconst_1
1301: goto          1305
1304: iconst_0
1305: invokestatic  #17
1308: new           #10
1311: dup
1312: invokespecial #11
1315: ldc           #12
1317: invokevirtual #13
1320: dload         50
1322: invokevirtual #60
1325: ldc           #15
1327: invokevirtual #13
1330: dconst_0
1331: invokevirtual #60
1334: ldc           #12
1336: invokevirtual #13
1339: invokevirtual #16
1342: dload         50
1344: dconst_0
1345: dcmpl
1346: ifne          1353
1349: iconst_1
1350: goto          1354
1353: iconst_0
1354: invokestatic  #17
1357: new           #10
1360: dup
1361: invokespecial #11
1364: ldc           #12
1366: invokevirtual #13
1369: iload         52
1371: invokevirtual #14
1374: ldc           #15
1376: invokevirtual #13
1379: iconst_0
1380: invokevirtual #14
1383: ldc           #12
1385: invokevirtual #13
1388: invokevirtual #16
1391: iload         52
1393: ifne          1400
1396: iconst_1
1397: goto          1401
1400: iconst_0
1401: invokestatic  #17
1404: new           #10
1407: dup
1408: invokespecial #11
1411: ldc           #12
1413: invokevirtual #13
1416: dload         53
1418: invokevirtual #60
1421: ldc           #15
1423: invokevirtual #13
1426: dconst_0
1427: invokevirtual #60
1430: ldc           #12
1432: invokevirtual #13
1435: invokevirtual #16
1438: dload         53
1440: dconst_0
1441: dcmpl
1442: ifne          1449
1445: iconst_1
1446: goto          1450
1449: iconst_0
1450: invokestatic  #17
1453: aload         55
1455: invokestatic  #33
1458: new           #10
1461: dup
1462: invokespecial #11
1465: ldc           #12
1467: invokevirtual #13
1470: dload         58
1472: invokevirtual #60
1475: ldc           #15
1477: invokevirtual #13
1480: dconst_0
1481: invokevirtual #60
1484: ldc           #12
1486: invokevirtual #13
1489: invokevirtual #16
1492: dload         58
1494: dconst_0
1495: dcmpl
1496: ifne          1503
1499: iconst_1
1500: goto          1504
1503: iconst_0
1504: invokestatic  #17
1507: aload         60
1509: invokestatic  #33
1512: aload         61
1514: invokestatic  #33
1517: new           #10
1520: dup
1521: invokespecial #11
1524: ldc           #12
1526: invokevirtual #13
1529: dload         62
1531: invokevirtual #60
1534: ldc           #15
1536: invokevirtual #13
1539: ldc2_w        #63
1542: invokevirtual #60
1545: ldc           #12
1547: invokevirtual #13
1550: invokevirtual #16
1553: dload         62
1555: ldc2_w        #63
1558: dcmpl
1559: ifne          1566
1562: iconst_1
1563: goto          1567
1566: iconst_0
1567: invokestatic  #17
1570: aload         65
1572: invokestatic  #33
1575: new           #10
1578: dup
1579: invokespecial #11
1582: ldc           #12
1584: invokevirtual #13
1587: dload         66
1589: invokevirtual #60
1592: ldc           #15
1594: invokevirtual #13
1597: dconst_0
1598: invokevirtual #60
1601: ldc           #12
1603: invokevirtual #13
1606: invokevirtual #16
1609: dload         66
1611: dconst_0
1612: dcmpl
1613: ifne          1620
1616: iconst_1
1617: goto          1621
1620: iconst_0
1621: invokestatic  #17
1624: new           #10
1627: dup
1628: invokespecial #11
1631: ldc           #12
1633: invokevirtual #13
1636: dload         68
1638: invokevirtual #60
1641: ldc           #15
1643: invokevirtual #13
1646: dconst_0
1647: invokevirtual #60
1650: ldc           #12
1652: invokevirtual #13
1655: invokevirtual #16
1658: dload         68
1660: dconst_0
1661: dcmpl
1662: ifne          1669
1665: iconst_1
1666: goto          1670
1669: iconst_0
1670: invokestatic  #17
1673: aload         70
1675: invokestatic  #33
1678: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 10895
End line: 10943
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        double double12 = vector3D0.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D3);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double30 = vector3D26.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double31 = vector3D29.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        double double40 = vector3D29.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double41 = vector3D21.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        double double42 = vector3D0.dotProduct((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation44 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D29, (double) 45L);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.crossProduct(vector3D29, vector3D45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + Double.POSITIVE_INFINITY + "'", double12 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.7345682747147468d + "'", double31 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #703
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: aload_1
83: aload_2
84: invokevirtual #53
87: dstore        9
89: new           #43
92: dup
93: dconst_1
94: ldc2_w        #44
97: invokespecial #46
100: astore        11
102: new           #43
105: dup
106: dconst_1
107: ldc2_w        #44
110: invokespecial #46
113: astore        12
115: new           #43
118: dup
119: dconst_1
120: ldc2_w        #44
123: invokespecial #46
126: astore        13
128: aload         12
130: aload         13
132: invokevirtual #47
135: dstore        14
137: aload         11
139: aload         13
141: invokestatic  #48
144: dstore        16
146: new           #43
149: dup
150: dconst_1
151: ldc2_w        #44
154: invokespecial #46
157: astore        18
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        19
172: aload         18
174: aload         19
176: invokevirtual #47
179: dstore        20
181: aload         19
183: invokevirtual #52
186: dstore        22
188: new           #43
191: dup
192: dconst_1
193: ldc2_w        #44
196: invokespecial #46
199: astore        24
201: new           #43
204: dup
205: dconst_1
206: ldc2_w        #44
209: invokespecial #46
212: astore        25
214: aload         24
216: aload         25
218: invokevirtual #47
221: dstore        26
223: aload         25
225: invokevirtual #52
228: dstore        28
230: aload         19
232: aload         25
234: invokevirtual #53
237: dstore        30
239: aload         13
241: aload         19
243: invokevirtual #129
246: dstore        32
248: aload_1
249: aload         19
251: invokevirtual #470
254: dstore        34
256: new           #27
259: dup
260: aload         19
262: ldc2_w        #634
265: invokespecial #103
268: astore        36
270: aconst_null
271: astore        37
273: aload         19
275: aload         37
277: invokestatic  #361
280: astore        38
282: ldc           #20
284: invokestatic  #21
287: goto          292
290: astore        38
292: aload_1
293: invokestatic  #33
296: new           #10
299: dup
300: invokespecial #11
303: ldc           #12
305: invokevirtual #13
308: dload         5
310: invokevirtual #60
313: ldc           #15
315: invokevirtual #13
318: dconst_0
319: invokevirtual #60
322: ldc           #12
324: invokevirtual #13
327: invokevirtual #16
330: dload         5
332: dconst_0
333: dcmpl
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #17
345: new           #10
348: dup
349: invokespecial #11
352: ldc           #12
354: invokevirtual #13
357: dload         7
359: invokevirtual #60
362: ldc           #15
364: invokevirtual #13
367: dconst_0
368: invokevirtual #60
371: ldc           #12
373: invokevirtual #13
376: invokevirtual #16
379: dload         7
381: dconst_0
382: dcmpl
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #17
394: new           #10
397: dup
398: invokespecial #11
401: ldc           #12
403: invokevirtual #13
406: dload         9
408: invokevirtual #60
411: ldc           #15
413: invokevirtual #13
416: ldc2_w        #133
419: invokevirtual #60
422: ldc           #12
424: invokevirtual #13
427: invokevirtual #16
430: dload         9
432: ldc2_w        #133
435: dcmpl
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #17
447: new           #10
450: dup
451: invokespecial #11
454: ldc           #12
456: invokevirtual #13
459: dload         14
461: invokevirtual #60
464: ldc           #15
466: invokevirtual #13
469: dconst_0
470: invokevirtual #60
473: ldc           #12
475: invokevirtual #13
478: invokevirtual #16
481: dload         14
483: dconst_0
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #17
496: new           #10
499: dup
500: invokespecial #11
503: ldc           #12
505: invokevirtual #13
508: dload         16
510: invokevirtual #60
513: ldc           #15
515: invokevirtual #13
518: dconst_0
519: invokevirtual #60
522: ldc           #12
524: invokevirtual #13
527: invokevirtual #16
530: dload         16
532: dconst_0
533: dcmpl
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #17
545: new           #10
548: dup
549: invokespecial #11
552: ldc           #12
554: invokevirtual #13
557: dload         20
559: invokevirtual #60
562: ldc           #15
564: invokevirtual #13
567: dconst_0
568: invokevirtual #60
571: ldc           #12
573: invokevirtual #13
576: invokevirtual #16
579: dload         20
581: dconst_0
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #17
594: new           #10
597: dup
598: invokespecial #11
601: ldc           #12
603: invokevirtual #13
606: dload         22
608: invokevirtual #60
611: ldc           #15
613: invokevirtual #13
616: ldc2_w        #61
619: invokevirtual #60
622: ldc           #12
624: invokevirtual #13
627: invokevirtual #16
630: dload         22
632: ldc2_w        #61
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #17
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: dload         26
661: invokevirtual #60
664: ldc           #15
666: invokevirtual #13
669: dconst_0
670: invokevirtual #60
673: ldc           #12
675: invokevirtual #13
678: invokevirtual #16
681: dload         26
683: dconst_0
684: dcmpl
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #17
696: new           #10
699: dup
700: invokespecial #11
703: ldc           #12
705: invokevirtual #13
708: dload         28
710: invokevirtual #60
713: ldc           #15
715: invokevirtual #13
718: ldc2_w        #61
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         28
734: ldc2_w        #61
737: dcmpl
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #17
749: new           #10
752: dup
753: invokespecial #11
756: ldc           #12
758: invokevirtual #13
761: dload         30
763: invokevirtual #60
766: ldc           #15
768: invokevirtual #13
771: dconst_0
772: invokevirtual #60
775: ldc           #12
777: invokevirtual #13
780: invokevirtual #16
783: dload         30
785: dconst_0
786: dcmpl
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #17
798: new           #10
801: dup
802: invokespecial #11
805: ldc           #12
807: invokevirtual #13
810: dload         32
812: invokevirtual #60
815: ldc           #15
817: invokevirtual #13
820: dconst_0
821: invokevirtual #60
824: ldc           #12
826: invokevirtual #13
829: invokevirtual #16
832: dload         32
834: dconst_0
835: dcmpl
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #17
847: dload         34
849: invokestatic  #242
852: invokestatic  #243
855: return
Exception table:
from    to  target type
273   287   290   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 10946
End line: 10954
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation7 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) (-2.5138477123978046E97d), localizable1, (java.lang.Object[]) doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #704
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: ldc2_w        #271
34: dconst_0
35: ldc2_w        #273
38: ldc2_w        #66
41: iconst_0
42: invokespecial #150
45: astore_2
46: aload_2
47: invokevirtual #222
50: astore_3
51: ldc2_w        #705
54: invokestatic  #319
57: aload_1
58: aload_3
59: checkcast     #248
62: invokestatic  #328
65: aload_3
66: invokestatic  #33
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 10957
End line: 11047
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = rotation85.revert();
        double double89 = rotation85.getAngle();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = rotation85.applyTo(vector3D90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #707
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #93
520: astore        69
522: aload         64
524: invokevirtual #240
527: dstore        70
529: aconst_null
530: astore        72
532: aload         64
534: aload         72
536: invokevirtual #140
539: astore        73
541: ldc           #20
543: invokestatic  #21
546: goto          551
549: astore        73
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         4
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         4
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         6
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         6
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         11
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         11
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         13
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         13
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         15
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         15
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         16
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         16
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         18
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         21
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         21
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         25
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         25
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         27
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         27
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         31
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         31
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         33
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         33
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         35
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         35
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         40
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         40
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         42
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         42
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         47
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         47
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         49
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         49
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         51
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         51
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         52
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         52
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         54
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         57
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         57
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         59
1498: invokestatic  #33
1501: aload         60
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         61
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         61
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         64
1561: invokestatic  #33
1564: new           #10
1567: dup
1568: invokespecial #11
1571: ldc           #12
1573: invokevirtual #13
1576: dload         65
1578: invokevirtual #60
1581: ldc           #15
1583: invokevirtual #13
1586: dconst_0
1587: invokevirtual #60
1590: ldc           #12
1592: invokevirtual #13
1595: invokevirtual #16
1598: dload         65
1600: dconst_0
1601: dcmpl
1602: ifne          1609
1605: iconst_1
1606: goto          1610
1609: iconst_0
1610: invokestatic  #17
1613: new           #10
1616: dup
1617: invokespecial #11
1620: ldc           #12
1622: invokevirtual #13
1625: dload         67
1627: invokevirtual #60
1630: ldc           #15
1632: invokevirtual #13
1635: dconst_0
1636: invokevirtual #60
1639: ldc           #12
1641: invokevirtual #13
1644: invokevirtual #16
1647: dload         67
1649: dconst_0
1650: dcmpl
1651: ifne          1658
1654: iconst_1
1655: goto          1659
1658: iconst_0
1659: invokestatic  #17
1662: aload         69
1664: invokestatic  #33
1667: new           #10
1670: dup
1671: invokespecial #11
1674: ldc           #12
1676: invokevirtual #13
1679: dload         70
1681: invokevirtual #60
1684: ldc           #15
1686: invokevirtual #13
1689: dconst_0
1690: invokevirtual #60
1693: ldc           #12
1695: invokevirtual #13
1698: invokevirtual #16
1701: dload         70
1703: dconst_0
1704: dcmpl
1705: ifne          1712
1708: iconst_1
1709: goto          1713
1712: iconst_0
1713: invokestatic  #17
1716: return
Exception table:
from    to  target type
532   546   549   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 11050
End line: 11076
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_K;
        double double1 = vector3D0.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D4 = vector3D2.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation11 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = rotation11.getAxis();
        double double13 = rotation11.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = rotation11.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = vector3D2.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D0, vector3D2);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.4142135623730951d + "'", double17 == 1.4142135623730951d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #708
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #504
28: astore_1
29: aload_1
30: invokevirtual #111
33: dstore_2
34: getstatic     #432
37: astore        4
39: aload         4
41: invokevirtual #163
44: astore        5
46: aload         4
48: invokevirtual #54
51: astore        6
53: new           #27
56: dup
57: ldc2_w        #146
60: ldc2_w        #72
63: ldc2_w        #148
66: dconst_1
67: iconst_0
68: invokespecial #150
71: astore        7
73: aload         7
75: invokevirtual #96
78: astore        8
80: aload         7
82: invokevirtual #95
85: dstore        9
87: getstatic     #314
90: astore        11
92: aload         7
94: aload         11
96: invokevirtual #98
99: astore        12
101: aload         4
103: ldc2_w        #434
106: aload         11
108: invokevirtual #182
111: astore        13
113: aload_1
114: aload         4
116: invokestatic  #128
119: dstore        14
121: aload_1
122: invokestatic  #33
125: new           #10
128: dup
129: invokespecial #11
132: ldc           #12
134: invokevirtual #13
137: dload_2
138: invokevirtual #60
141: ldc           #15
143: invokevirtual #13
146: dconst_1
147: invokevirtual #60
150: ldc           #12
152: invokevirtual #13
155: invokevirtual #16
158: dload_2
159: dconst_1
160: dcmpl
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #17
172: aload         4
174: invokestatic  #33
177: aload         5
179: invokestatic  #33
182: aload         6
184: invokestatic  #33
187: aload         8
189: invokestatic  #33
192: new           #10
195: dup
196: invokespecial #11
199: ldc           #12
201: invokevirtual #13
204: dload         9
206: invokevirtual #60
209: ldc           #15
211: invokevirtual #13
214: dconst_1
215: invokevirtual #60
218: ldc           #12
220: invokevirtual #13
223: invokevirtual #16
226: dload         9
228: dconst_1
229: dcmpl
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #17
241: aload         11
243: invokestatic  #33
246: aload         12
248: invokestatic  #33
251: aload         13
253: invokestatic  #33
256: new           #10
259: dup
260: invokespecial #11
263: ldc           #12
265: invokevirtual #13
268: dload         14
270: invokevirtual #60
273: ldc           #15
275: invokevirtual #13
278: ldc2_w        #709
281: invokevirtual #60
284: ldc           #12
286: invokevirtual #13
289: invokevirtual #16
292: dload         14
294: ldc2_w        #709
297: dcmpl
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #17
309: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 11079
End line: 11157
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        java.lang.String str85 = vector3D30.toString();
        double double86 = vector3D30.getX();
        double double87 = vector3D30.getNorm1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{0.4; 0.62; 0.67}" + "'", str85, "{0.4; 0.62; 0.67}");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.4009692518823901d + "'", double86 == 0.4009692518823901d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.6957086881730823d + "'", double87 == 1.6957086881730823d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #711
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         20
496: invokevirtual #364
499: astore        64
501: aload         20
503: invokevirtual #99
506: dstore        65
508: aload         20
510: invokevirtual #162
513: dstore        67
515: new           #10
518: dup
519: invokespecial #11
522: ldc           #12
524: invokevirtual #13
527: dload         4
529: invokevirtual #60
532: ldc           #15
534: invokevirtual #13
537: dconst_0
538: invokevirtual #60
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: dload         4
551: dconst_0
552: dcmpl
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #17
564: new           #10
567: dup
568: invokespecial #11
571: ldc           #12
573: invokevirtual #13
576: dload         6
578: invokevirtual #60
581: ldc           #15
583: invokevirtual #13
586: dconst_0
587: invokevirtual #60
590: ldc           #12
592: invokevirtual #13
595: invokevirtual #16
598: dload         6
600: dconst_0
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #17
613: new           #10
616: dup
617: invokespecial #11
620: ldc           #12
622: invokevirtual #13
625: dload         11
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload         11
649: dconst_0
650: dcmpl
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #17
662: new           #10
665: dup
666: invokespecial #11
669: ldc           #12
671: invokevirtual #13
674: dload         13
676: invokevirtual #60
679: ldc           #15
681: invokevirtual #13
684: dconst_0
685: invokevirtual #60
688: ldc           #12
690: invokevirtual #13
693: invokevirtual #16
696: dload         13
698: dconst_0
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #17
711: new           #10
714: dup
715: invokespecial #11
718: ldc           #12
720: invokevirtual #13
723: iload         15
725: invokevirtual #14
728: ldc           #15
730: invokevirtual #13
733: iconst_0
734: invokevirtual #14
737: ldc           #12
739: invokevirtual #13
742: invokevirtual #16
745: iload         15
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #17
758: new           #10
761: dup
762: invokespecial #11
765: ldc           #12
767: invokevirtual #13
770: dload         16
772: invokevirtual #60
775: ldc           #15
777: invokevirtual #13
780: dconst_0
781: invokevirtual #60
784: ldc           #12
786: invokevirtual #13
789: invokevirtual #16
792: dload         16
794: dconst_0
795: dcmpl
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #17
807: aload         18
809: invokestatic  #33
812: new           #10
815: dup
816: invokespecial #11
819: ldc           #12
821: invokevirtual #13
824: dload         21
826: invokevirtual #60
829: ldc           #15
831: invokevirtual #13
834: dconst_0
835: invokevirtual #60
838: ldc           #12
840: invokevirtual #13
843: invokevirtual #16
846: dload         21
848: dconst_0
849: dcmpl
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #17
861: new           #10
864: dup
865: invokespecial #11
868: ldc           #12
870: invokevirtual #13
873: dload         25
875: invokevirtual #60
878: ldc           #15
880: invokevirtual #13
883: dconst_0
884: invokevirtual #60
887: ldc           #12
889: invokevirtual #13
892: invokevirtual #16
895: dload         25
897: dconst_0
898: dcmpl
899: ifne          906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #17
910: new           #10
913: dup
914: invokespecial #11
917: ldc           #12
919: invokevirtual #13
922: dload         27
924: invokevirtual #60
927: ldc           #15
929: invokevirtual #13
932: ldc2_w        #61
935: invokevirtual #60
938: ldc           #12
940: invokevirtual #13
943: invokevirtual #16
946: dload         27
948: ldc2_w        #61
951: dcmpl
952: ifne          959
955: iconst_1
956: goto          960
959: iconst_0
960: invokestatic  #17
963: new           #10
966: dup
967: invokespecial #11
970: ldc           #12
972: invokevirtual #13
975: dload         31
977: invokevirtual #60
980: ldc           #15
982: invokevirtual #13
985: dconst_0
986: invokevirtual #60
989: ldc           #12
991: invokevirtual #13
994: invokevirtual #16
997: dload         31
999: dconst_0
1000: dcmpl
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #17
1012: new           #10
1015: dup
1016: invokespecial #11
1019: ldc           #12
1021: invokevirtual #13
1024: dload         33
1026: invokevirtual #60
1029: ldc           #15
1031: invokevirtual #13
1034: ldc2_w        #61
1037: invokevirtual #60
1040: ldc           #12
1042: invokevirtual #13
1045: invokevirtual #16
1048: dload         33
1050: ldc2_w        #61
1053: dcmpl
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #17
1065: new           #10
1068: dup
1069: invokespecial #11
1072: ldc           #12
1074: invokevirtual #13
1077: dload         35
1079: invokevirtual #60
1082: ldc           #15
1084: invokevirtual #13
1087: dconst_0
1088: invokevirtual #60
1091: ldc           #12
1093: invokevirtual #13
1096: invokevirtual #16
1099: dload         35
1101: dconst_0
1102: dcmpl
1103: ifne          1110
1106: iconst_1
1107: goto          1111
1110: iconst_0
1111: invokestatic  #17
1114: new           #10
1117: dup
1118: invokespecial #11
1121: ldc           #12
1123: invokevirtual #13
1126: dload         40
1128: invokevirtual #60
1131: ldc           #15
1133: invokevirtual #13
1136: dconst_0
1137: invokevirtual #60
1140: ldc           #12
1142: invokevirtual #13
1145: invokevirtual #16
1148: dload         40
1150: dconst_0
1151: dcmpl
1152: ifne          1159
1155: iconst_1
1156: goto          1160
1159: iconst_0
1160: invokestatic  #17
1163: new           #10
1166: dup
1167: invokespecial #11
1170: ldc           #12
1172: invokevirtual #13
1175: dload         42
1177: invokevirtual #60
1180: ldc           #15
1182: invokevirtual #13
1185: dconst_0
1186: invokevirtual #60
1189: ldc           #12
1191: invokevirtual #13
1194: invokevirtual #16
1197: dload         42
1199: dconst_0
1200: dcmpl
1201: ifne          1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #17
1212: new           #10
1215: dup
1216: invokespecial #11
1219: ldc           #12
1221: invokevirtual #13
1224: dload         47
1226: invokevirtual #60
1229: ldc           #15
1231: invokevirtual #13
1234: dconst_0
1235: invokevirtual #60
1238: ldc           #12
1240: invokevirtual #13
1243: invokevirtual #16
1246: dload         47
1248: dconst_0
1249: dcmpl
1250: ifne          1257
1253: iconst_1
1254: goto          1258
1257: iconst_0
1258: invokestatic  #17
1261: new           #10
1264: dup
1265: invokespecial #11
1268: ldc           #12
1270: invokevirtual #13
1273: dload         49
1275: invokevirtual #60
1278: ldc           #15
1280: invokevirtual #13
1283: dconst_0
1284: invokevirtual #60
1287: ldc           #12
1289: invokevirtual #13
1292: invokevirtual #16
1295: dload         49
1297: dconst_0
1298: dcmpl
1299: ifne          1306
1302: iconst_1
1303: goto          1307
1306: iconst_0
1307: invokestatic  #17
1310: new           #10
1313: dup
1314: invokespecial #11
1317: ldc           #12
1319: invokevirtual #13
1322: iload         51
1324: invokevirtual #14
1327: ldc           #15
1329: invokevirtual #13
1332: iconst_0
1333: invokevirtual #14
1336: ldc           #12
1338: invokevirtual #13
1341: invokevirtual #16
1344: iload         51
1346: ifne          1353
1349: iconst_1
1350: goto          1354
1353: iconst_0
1354: invokestatic  #17
1357: new           #10
1360: dup
1361: invokespecial #11
1364: ldc           #12
1366: invokevirtual #13
1369: dload         52
1371: invokevirtual #60
1374: ldc           #15
1376: invokevirtual #13
1379: dconst_0
1380: invokevirtual #60
1383: ldc           #12
1385: invokevirtual #13
1388: invokevirtual #16
1391: dload         52
1393: dconst_0
1394: dcmpl
1395: ifne          1402
1398: iconst_1
1399: goto          1403
1402: iconst_0
1403: invokestatic  #17
1406: aload         54
1408: invokestatic  #33
1411: new           #10
1414: dup
1415: invokespecial #11
1418: ldc           #12
1420: invokevirtual #13
1423: dload         57
1425: invokevirtual #60
1428: ldc           #15
1430: invokevirtual #13
1433: dconst_0
1434: invokevirtual #60
1437: ldc           #12
1439: invokevirtual #13
1442: invokevirtual #16
1445: dload         57
1447: dconst_0
1448: dcmpl
1449: ifne          1456
1452: iconst_1
1453: goto          1457
1456: iconst_0
1457: invokestatic  #17
1460: aload         59
1462: invokestatic  #33
1465: aload         60
1467: invokestatic  #33
1470: new           #10
1473: dup
1474: invokespecial #11
1477: ldc           #12
1479: invokevirtual #13
1482: dload         61
1484: invokevirtual #60
1487: ldc           #15
1489: invokevirtual #13
1492: ldc2_w        #63
1495: invokevirtual #60
1498: ldc           #12
1500: invokevirtual #13
1503: invokevirtual #16
1506: dload         61
1508: ldc2_w        #63
1511: dcmpl
1512: ifne          1519
1515: iconst_1
1516: goto          1520
1519: iconst_0
1520: invokestatic  #17
1523: new           #10
1526: dup
1527: invokespecial #11
1530: ldc           #12
1532: invokevirtual #13
1535: aload         64
1537: invokevirtual #13
1540: ldc_w         #368
1543: invokevirtual #13
1546: invokevirtual #16
1549: aload         64
1551: ldc_w         #369
1554: invokestatic  #335
1557: new           #10
1560: dup
1561: invokespecial #11
1564: ldc           #12
1566: invokevirtual #13
1569: dload         65
1571: invokevirtual #60
1574: ldc           #15
1576: invokevirtual #13
1579: ldc2_w        #471
1582: invokevirtual #60
1585: ldc           #12
1587: invokevirtual #13
1590: invokevirtual #16
1593: dload         65
1595: ldc2_w        #471
1598: dcmpl
1599: ifne          1606
1602: iconst_1
1603: goto          1607
1606: iconst_0
1607: invokestatic  #17
1610: new           #10
1613: dup
1614: invokespecial #11
1617: ldc           #12
1619: invokevirtual #13
1622: dload         67
1624: invokevirtual #60
1627: ldc           #15
1629: invokevirtual #13
1632: ldc2_w        #167
1635: invokevirtual #60
1638: ldc           #12
1640: invokevirtual #13
1643: invokevirtual #16
1646: dload         67
1648: ldc2_w        #167
1651: dcmpl
1652: ifne          1659
1655: iconst_1
1656: goto          1660
1659: iconst_0
1660: invokestatic  #17
1663: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 11160
End line: 11250
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double[][] doubleArray86 = rotation85.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation89 = rotation85.applyTo(rotation88);
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder90 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = rotation85.getAngles(rotationOrder90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException; message: Euler angles singularity");
        } catch (org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #712
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #222
506: astore        65
508: aload         64
510: invokevirtual #96
513: astore        66
515: getstatic     #309
518: astore        67
520: aload         64
522: aload         67
524: invokevirtual #160
527: astore        68
529: aconst_null
530: astore        69
532: aload         64
534: aload         69
536: invokevirtual #57
539: astore        70
541: ldc           #58
543: invokestatic  #21
546: goto          551
549: astore        70
551: new           #10
554: dup
555: invokespecial #11
558: ldc           #12
560: invokevirtual #13
563: dload         4
565: invokevirtual #60
568: ldc           #15
570: invokevirtual #13
573: dconst_0
574: invokevirtual #60
577: ldc           #12
579: invokevirtual #13
582: invokevirtual #16
585: dload         4
587: dconst_0
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #17
600: new           #10
603: dup
604: invokespecial #11
607: ldc           #12
609: invokevirtual #13
612: dload         6
614: invokevirtual #60
617: ldc           #15
619: invokevirtual #13
622: dconst_0
623: invokevirtual #60
626: ldc           #12
628: invokevirtual #13
631: invokevirtual #16
634: dload         6
636: dconst_0
637: dcmpl
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #17
649: new           #10
652: dup
653: invokespecial #11
656: ldc           #12
658: invokevirtual #13
661: dload         11
663: invokevirtual #60
666: ldc           #15
668: invokevirtual #13
671: dconst_0
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         11
685: dconst_0
686: dcmpl
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #17
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         13
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: dconst_0
721: invokevirtual #60
724: ldc           #12
726: invokevirtual #13
729: invokevirtual #16
732: dload         13
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #17
747: new           #10
750: dup
751: invokespecial #11
754: ldc           #12
756: invokevirtual #13
759: iload         15
761: invokevirtual #14
764: ldc           #15
766: invokevirtual #13
769: iconst_0
770: invokevirtual #14
773: ldc           #12
775: invokevirtual #13
778: invokevirtual #16
781: iload         15
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #17
794: new           #10
797: dup
798: invokespecial #11
801: ldc           #12
803: invokevirtual #13
806: dload         16
808: invokevirtual #60
811: ldc           #15
813: invokevirtual #13
816: dconst_0
817: invokevirtual #60
820: ldc           #12
822: invokevirtual #13
825: invokevirtual #16
828: dload         16
830: dconst_0
831: dcmpl
832: ifne          839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #17
843: aload         18
845: invokestatic  #33
848: new           #10
851: dup
852: invokespecial #11
855: ldc           #12
857: invokevirtual #13
860: dload         21
862: invokevirtual #60
865: ldc           #15
867: invokevirtual #13
870: dconst_0
871: invokevirtual #60
874: ldc           #12
876: invokevirtual #13
879: invokevirtual #16
882: dload         21
884: dconst_0
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #17
897: new           #10
900: dup
901: invokespecial #11
904: ldc           #12
906: invokevirtual #13
909: dload         25
911: invokevirtual #60
914: ldc           #15
916: invokevirtual #13
919: dconst_0
920: invokevirtual #60
923: ldc           #12
925: invokevirtual #13
928: invokevirtual #16
931: dload         25
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #17
946: new           #10
949: dup
950: invokespecial #11
953: ldc           #12
955: invokevirtual #13
958: dload         27
960: invokevirtual #60
963: ldc           #15
965: invokevirtual #13
968: ldc2_w        #61
971: invokevirtual #60
974: ldc           #12
976: invokevirtual #13
979: invokevirtual #16
982: dload         27
984: ldc2_w        #61
987: dcmpl
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #17
999: new           #10
1002: dup
1003: invokespecial #11
1006: ldc           #12
1008: invokevirtual #13
1011: dload         31
1013: invokevirtual #60
1016: ldc           #15
1018: invokevirtual #13
1021: dconst_0
1022: invokevirtual #60
1025: ldc           #12
1027: invokevirtual #13
1030: invokevirtual #16
1033: dload         31
1035: dconst_0
1036: dcmpl
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #17
1048: new           #10
1051: dup
1052: invokespecial #11
1055: ldc           #12
1057: invokevirtual #13
1060: dload         33
1062: invokevirtual #60
1065: ldc           #15
1067: invokevirtual #13
1070: ldc2_w        #61
1073: invokevirtual #60
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: dload         33
1086: ldc2_w        #61
1089: dcmpl
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #17
1101: new           #10
1104: dup
1105: invokespecial #11
1108: ldc           #12
1110: invokevirtual #13
1113: dload         35
1115: invokevirtual #60
1118: ldc           #15
1120: invokevirtual #13
1123: dconst_0
1124: invokevirtual #60
1127: ldc           #12
1129: invokevirtual #13
1132: invokevirtual #16
1135: dload         35
1137: dconst_0
1138: dcmpl
1139: ifne          1146
1142: iconst_1
1143: goto          1147
1146: iconst_0
1147: invokestatic  #17
1150: new           #10
1153: dup
1154: invokespecial #11
1157: ldc           #12
1159: invokevirtual #13
1162: dload         40
1164: invokevirtual #60
1167: ldc           #15
1169: invokevirtual #13
1172: dconst_0
1173: invokevirtual #60
1176: ldc           #12
1178: invokevirtual #13
1181: invokevirtual #16
1184: dload         40
1186: dconst_0
1187: dcmpl
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #17
1199: new           #10
1202: dup
1203: invokespecial #11
1206: ldc           #12
1208: invokevirtual #13
1211: dload         42
1213: invokevirtual #60
1216: ldc           #15
1218: invokevirtual #13
1221: dconst_0
1222: invokevirtual #60
1225: ldc           #12
1227: invokevirtual #13
1230: invokevirtual #16
1233: dload         42
1235: dconst_0
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: new           #10
1251: dup
1252: invokespecial #11
1255: ldc           #12
1257: invokevirtual #13
1260: dload         47
1262: invokevirtual #60
1265: ldc           #15
1267: invokevirtual #13
1270: dconst_0
1271: invokevirtual #60
1274: ldc           #12
1276: invokevirtual #13
1279: invokevirtual #16
1282: dload         47
1284: dconst_0
1285: dcmpl
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #17
1297: new           #10
1300: dup
1301: invokespecial #11
1304: ldc           #12
1306: invokevirtual #13
1309: dload         49
1311: invokevirtual #60
1314: ldc           #15
1316: invokevirtual #13
1319: dconst_0
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         49
1333: dconst_0
1334: dcmpl
1335: ifne          1342
1338: iconst_1
1339: goto          1343
1342: iconst_0
1343: invokestatic  #17
1346: new           #10
1349: dup
1350: invokespecial #11
1353: ldc           #12
1355: invokevirtual #13
1358: iload         51
1360: invokevirtual #14
1363: ldc           #15
1365: invokevirtual #13
1368: iconst_0
1369: invokevirtual #14
1372: ldc           #12
1374: invokevirtual #13
1377: invokevirtual #16
1380: iload         51
1382: ifne          1389
1385: iconst_1
1386: goto          1390
1389: iconst_0
1390: invokestatic  #17
1393: new           #10
1396: dup
1397: invokespecial #11
1400: ldc           #12
1402: invokevirtual #13
1405: dload         52
1407: invokevirtual #60
1410: ldc           #15
1412: invokevirtual #13
1415: dconst_0
1416: invokevirtual #60
1419: ldc           #12
1421: invokevirtual #13
1424: invokevirtual #16
1427: dload         52
1429: dconst_0
1430: dcmpl
1431: ifne          1438
1434: iconst_1
1435: goto          1439
1438: iconst_0
1439: invokestatic  #17
1442: aload         54
1444: invokestatic  #33
1447: new           #10
1450: dup
1451: invokespecial #11
1454: ldc           #12
1456: invokevirtual #13
1459: dload         57
1461: invokevirtual #60
1464: ldc           #15
1466: invokevirtual #13
1469: dconst_0
1470: invokevirtual #60
1473: ldc           #12
1475: invokevirtual #13
1478: invokevirtual #16
1481: dload         57
1483: dconst_0
1484: dcmpl
1485: ifne          1492
1488: iconst_1
1489: goto          1493
1492: iconst_0
1493: invokestatic  #17
1496: aload         59
1498: invokestatic  #33
1501: aload         60
1503: invokestatic  #33
1506: new           #10
1509: dup
1510: invokespecial #11
1513: ldc           #12
1515: invokevirtual #13
1518: dload         61
1520: invokevirtual #60
1523: ldc           #15
1525: invokevirtual #13
1528: ldc2_w        #63
1531: invokevirtual #60
1534: ldc           #12
1536: invokevirtual #13
1539: invokevirtual #16
1542: dload         61
1544: ldc2_w        #63
1547: dcmpl
1548: ifne          1555
1551: iconst_1
1552: goto          1556
1555: iconst_0
1556: invokestatic  #17
1559: aload         64
1561: invokestatic  #33
1564: aload         65
1566: invokestatic  #33
1569: aload         66
1571: invokestatic  #33
1574: aload         67
1576: invokestatic  #33
1579: aload         68
1581: invokestatic  #33
1584: return
Exception table:
from    to  target type
532   546   549   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 11253
End line: 11314
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation28 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector55 = vector3D29.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector58 = vector3D56.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation60 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D56, 5.298292365610485d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation61 = rotation28.applyInverseTo(rotation60);
        double double62 = rotation28.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(euclidean3DVector55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(euclidean3DVector58);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #713
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: new           #27
172: dup
173: aload_1
174: ldc2_w        #72
177: invokespecial #103
180: astore        21
182: getstatic     #126
185: astore        22
187: new           #43
190: dup
191: dconst_1
192: ldc2_w        #44
195: invokespecial #46
198: astore        23
200: new           #43
203: dup
204: dconst_1
205: ldc2_w        #44
208: invokespecial #46
211: astore        24
213: new           #43
216: dup
217: dconst_1
218: ldc2_w        #44
221: invokespecial #46
224: astore        25
226: aload         24
228: aload         25
230: invokevirtual #47
233: dstore        26
235: aload         23
237: aload         25
239: invokestatic  #48
242: dstore        28
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: new           #43
260: dup
261: dconst_1
262: ldc2_w        #44
265: invokespecial #46
268: astore        31
270: new           #43
273: dup
274: dconst_1
275: ldc2_w        #44
278: invokespecial #46
281: astore        32
283: aload         31
285: aload         32
287: invokevirtual #47
290: dstore        33
292: aload         30
294: aload         32
296: invokestatic  #48
299: dstore        35
301: aload         30
303: invokevirtual #49
306: istore        37
308: aload         23
310: aload         30
312: invokevirtual #50
315: dstore        38
317: aload         30
319: invokevirtual #54
322: astore        40
324: aload         22
326: aload         40
328: invokevirtual #55
331: astore        41
333: aload         22
335: invokevirtual #163
338: astore        42
340: aload         42
342: dconst_0
343: invokevirtual #107
346: astore        43
348: new           #27
351: dup
352: aload         42
354: ldc2_w        #612
357: invokespecial #103
360: astore        44
362: aload         21
364: aload         44
366: invokevirtual #474
369: astore        45
371: aload         21
373: invokevirtual #240
376: dstore        46
378: aload_1
379: invokestatic  #33
382: new           #10
385: dup
386: invokespecial #11
389: ldc           #12
391: invokevirtual #13
394: dload         5
396: invokevirtual #60
399: ldc           #15
401: invokevirtual #13
404: dconst_0
405: invokevirtual #60
408: ldc           #12
410: invokevirtual #13
413: invokevirtual #16
416: dload         5
418: dconst_0
419: dcmpl
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #17
431: new           #10
434: dup
435: invokespecial #11
438: ldc           #12
440: invokevirtual #13
443: dload         7
445: invokevirtual #60
448: ldc           #15
450: invokevirtual #13
453: dconst_0
454: invokevirtual #60
457: ldc           #12
459: invokevirtual #13
462: invokevirtual #16
465: dload         7
467: dconst_0
468: dcmpl
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #17
480: new           #10
483: dup
484: invokespecial #11
487: ldc           #12
489: invokevirtual #13
492: dload         12
494: invokevirtual #60
497: ldc           #15
499: invokevirtual #13
502: dconst_0
503: invokevirtual #60
506: ldc           #12
508: invokevirtual #13
511: invokevirtual #16
514: dload         12
516: dconst_0
517: dcmpl
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #17
529: new           #10
532: dup
533: invokespecial #11
536: ldc           #12
538: invokevirtual #13
541: dload         14
543: invokevirtual #60
546: ldc           #15
548: invokevirtual #13
551: dconst_0
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         14
565: dconst_0
566: dcmpl
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #17
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: iload         16
592: invokevirtual #14
595: ldc           #15
597: invokevirtual #13
600: iconst_0
601: invokevirtual #14
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: iload         16
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #17
625: new           #10
628: dup
629: invokespecial #11
632: ldc           #12
634: invokevirtual #13
637: dload         17
639: invokevirtual #60
642: ldc           #15
644: invokevirtual #13
647: dconst_0
648: invokevirtual #60
651: ldc           #12
653: invokevirtual #13
656: invokevirtual #16
659: dload         17
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: aload         19
676: invokestatic  #33
679: aload         20
681: invokestatic  #33
684: aload         22
686: invokestatic  #33
689: new           #10
692: dup
693: invokespecial #11
696: ldc           #12
698: invokevirtual #13
701: dload         26
703: invokevirtual #60
706: ldc           #15
708: invokevirtual #13
711: dconst_0
712: invokevirtual #60
715: ldc           #12
717: invokevirtual #13
720: invokevirtual #16
723: dload         26
725: dconst_0
726: dcmpl
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #17
738: new           #10
741: dup
742: invokespecial #11
745: ldc           #12
747: invokevirtual #13
750: dload         28
752: invokevirtual #60
755: ldc           #15
757: invokevirtual #13
760: dconst_0
761: invokevirtual #60
764: ldc           #12
766: invokevirtual #13
769: invokevirtual #16
772: dload         28
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #17
787: new           #10
790: dup
791: invokespecial #11
794: ldc           #12
796: invokevirtual #13
799: dload         33
801: invokevirtual #60
804: ldc           #15
806: invokevirtual #13
809: dconst_0
810: invokevirtual #60
813: ldc           #12
815: invokevirtual #13
818: invokevirtual #16
821: dload         33
823: dconst_0
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         35
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: dconst_0
859: invokevirtual #60
862: ldc           #12
864: invokevirtual #13
867: invokevirtual #16
870: dload         35
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #17
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: iload         37
899: invokevirtual #14
902: ldc           #15
904: invokevirtual #13
907: iconst_0
908: invokevirtual #14
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: iload         37
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: new           #10
935: dup
936: invokespecial #11
939: ldc           #12
941: invokevirtual #13
944: dload         38
946: invokevirtual #60
949: ldc           #15
951: invokevirtual #13
954: dconst_0
955: invokevirtual #60
958: ldc           #12
960: invokevirtual #13
963: invokevirtual #16
966: dload         38
968: dconst_0
969: dcmpl
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #17
981: aload         40
983: invokestatic  #33
986: aload         41
988: invokestatic  #33
991: aload         42
993: invokestatic  #33
996: aload         43
998: invokestatic  #33
1001: aload         45
1003: invokestatic  #33
1006: dload         46
1008: invokestatic  #242
1011: invokestatic  #243
1014: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 11317
End line: 11353
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double31 = vector3D2.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D20.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D20, vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D20, (double) 52.0f);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation37 = rotation36.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(rotation37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #714
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: new           #43
84: dup
85: dconst_1
86: ldc2_w        #44
89: invokespecial #46
92: astore        7
94: aload         6
96: aload         7
98: invokevirtual #47
101: dstore        8
103: aload         5
105: aload         7
107: invokestatic  #48
110: dstore        10
112: new           #43
115: dup
116: dconst_1
117: ldc2_w        #44
120: invokespecial #46
123: astore        12
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        13
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        14
151: aload         13
153: aload         14
155: invokevirtual #47
158: dstore        15
160: aload         12
162: aload         14
164: invokestatic  #48
167: dstore        17
169: aload         12
171: invokevirtual #49
174: istore        19
176: aload         5
178: aload         12
180: invokevirtual #50
183: dstore        20
185: aload_1
186: aload         12
188: invokevirtual #129
191: dstore        22
193: aload         12
195: invokevirtual #54
198: astore        24
200: getstatic     #314
203: astore        25
205: aload         12
207: aload         25
209: invokestatic  #128
212: dstore        26
214: new           #27
217: dup
218: aload         12
220: ldc2_w        #297
223: invokespecial #103
226: astore        28
228: aload         28
230: invokevirtual #93
233: astore        29
235: new           #10
238: dup
239: invokespecial #11
242: ldc           #12
244: invokevirtual #13
247: dload_3
248: invokevirtual #60
251: ldc           #15
253: invokevirtual #13
256: dconst_0
257: invokevirtual #60
260: ldc           #12
262: invokevirtual #13
265: invokevirtual #16
268: dload_3
269: dconst_0
270: dcmpl
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #17
282: new           #10
285: dup
286: invokespecial #11
289: ldc           #12
291: invokevirtual #13
294: dload         8
296: invokevirtual #60
299: ldc           #15
301: invokevirtual #13
304: dconst_0
305: invokevirtual #60
308: ldc           #12
310: invokevirtual #13
313: invokevirtual #16
316: dload         8
318: dconst_0
319: dcmpl
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #17
331: new           #10
334: dup
335: invokespecial #11
338: ldc           #12
340: invokevirtual #13
343: dload         10
345: invokevirtual #60
348: ldc           #15
350: invokevirtual #13
353: dconst_0
354: invokevirtual #60
357: ldc           #12
359: invokevirtual #13
362: invokevirtual #16
365: dload         10
367: dconst_0
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #17
380: new           #10
383: dup
384: invokespecial #11
387: ldc           #12
389: invokevirtual #13
392: dload         15
394: invokevirtual #60
397: ldc           #15
399: invokevirtual #13
402: dconst_0
403: invokevirtual #60
406: ldc           #12
408: invokevirtual #13
411: invokevirtual #16
414: dload         15
416: dconst_0
417: dcmpl
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #17
429: new           #10
432: dup
433: invokespecial #11
436: ldc           #12
438: invokevirtual #13
441: dload         17
443: invokevirtual #60
446: ldc           #15
448: invokevirtual #13
451: dconst_0
452: invokevirtual #60
455: ldc           #12
457: invokevirtual #13
460: invokevirtual #16
463: dload         17
465: dconst_0
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #17
478: new           #10
481: dup
482: invokespecial #11
485: ldc           #12
487: invokevirtual #13
490: iload         19
492: invokevirtual #14
495: ldc           #15
497: invokevirtual #13
500: iconst_0
501: invokevirtual #14
504: ldc           #12
506: invokevirtual #13
509: invokevirtual #16
512: iload         19
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #17
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         20
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         20
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: new           #10
577: dup
578: invokespecial #11
581: ldc           #12
583: invokevirtual #13
586: dload         22
588: invokevirtual #60
591: ldc           #15
593: invokevirtual #13
596: dconst_0
597: invokevirtual #60
600: ldc           #12
602: invokevirtual #13
605: invokevirtual #16
608: dload         22
610: dconst_0
611: dcmpl
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #17
623: aload         24
625: invokestatic  #33
628: aload         25
630: invokestatic  #33
633: dload         26
635: invokestatic  #242
638: invokestatic  #243
641: aload         29
643: invokestatic  #33
646: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 11356
End line: 11414
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 101L, (-30.055369951229576d), (double) 1.07957466E9f, (-1024.0d), false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double12 = vector3D8.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D11);
        double double13 = vector3D11.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = vector3D19.getDelta();
        double double22 = vector3D11.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = vector3D19.negate();
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double34 = vector3D30.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        double double35 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D27, vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D38, vector3D44);
        boolean boolean47 = vector3D38.isInfinite();
        double double48 = vector3D27.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = vector3D38.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D49.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D23, vector3D49);
        org.apache.commons.math.geometry.Space space59 = vector3D23.getSpace();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector60 = vector3D23.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = rotation5.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector62 = vector3D61.getZero();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.7345682747147468d + "'", double13 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.7345682747147468d + "'", double21 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.6702668260599606d) + "'", double24 == (-0.6702668260599606d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(space59);
        org.junit.Assert.assertNotNull(euclidean3DVector60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(euclidean3DVector62);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #715
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #170
32: ldc2_w        #625
35: ldc2_w        #627
38: ldc2_w        #352
41: iconst_0
42: invokespecial #150
45: astore_1
46: new           #43
49: dup
50: dconst_1
51: ldc2_w        #44
54: invokespecial #46
57: astore_2
58: new           #43
61: dup
62: dconst_1
63: ldc2_w        #44
66: invokespecial #46
69: astore_3
70: aload_2
71: aload_3
72: invokevirtual #47
75: dstore        4
77: aload_3
78: invokevirtual #52
81: dstore        6
83: new           #43
86: dup
87: dconst_1
88: ldc2_w        #44
91: invokespecial #46
94: astore        8
96: new           #43
99: dup
100: dconst_1
101: ldc2_w        #44
104: invokespecial #46
107: astore        9
109: aload         8
111: aload         9
113: invokevirtual #47
116: dstore        10
118: aload         9
120: invokevirtual #52
123: dstore        12
125: aload_3
126: aload         9
128: invokevirtual #53
131: dstore        14
133: aload         9
135: invokevirtual #54
138: astore        16
140: aload         16
142: invokevirtual #311
145: dstore        17
147: new           #43
150: dup
151: dconst_1
152: ldc2_w        #44
155: invokespecial #46
158: astore        19
160: new           #43
163: dup
164: dconst_1
165: ldc2_w        #44
168: invokespecial #46
171: astore        20
173: new           #43
176: dup
177: dconst_1
178: ldc2_w        #44
181: invokespecial #46
184: astore        21
186: aload         20
188: aload         21
190: invokevirtual #47
193: dstore        22
195: aload         19
197: aload         21
199: invokestatic  #48
202: dstore        24
204: new           #43
207: dup
208: dconst_1
209: ldc2_w        #44
212: invokespecial #46
215: astore        26
217: new           #43
220: dup
221: dconst_1
222: ldc2_w        #44
225: invokespecial #46
228: astore        27
230: new           #43
233: dup
234: dconst_1
235: ldc2_w        #44
238: invokespecial #46
241: astore        28
243: aload         27
245: aload         28
247: invokevirtual #47
250: dstore        29
252: aload         26
254: aload         28
256: invokestatic  #48
259: dstore        31
261: aload         26
263: invokevirtual #49
266: istore        33
268: aload         19
270: aload         26
272: invokevirtual #50
275: dstore        34
277: aload         26
279: invokevirtual #54
282: astore        36
284: new           #43
287: dup
288: dconst_1
289: ldc2_w        #44
292: invokespecial #46
295: astore        37
297: new           #43
300: dup
301: dconst_1
302: ldc2_w        #44
305: invokespecial #46
308: astore        38
310: aload         37
312: aload         38
314: invokevirtual #47
317: dstore        39
319: aload         36
321: aload         37
323: invokevirtual #55
326: astore        41
328: aload         16
330: aload         36
332: invokestatic  #128
335: dstore        42
337: aload         16
339: invokevirtual #51
342: astore        44
344: aload         16
346: invokevirtual #193
349: astore        45
351: aload_1
352: aload         16
354: invokevirtual #98
357: astore        46
359: aload         46
361: invokevirtual #198
364: astore        47
366: new           #10
369: dup
370: invokespecial #11
373: ldc           #12
375: invokevirtual #13
378: dload         4
380: invokevirtual #60
383: ldc           #15
385: invokevirtual #13
388: dconst_0
389: invokevirtual #60
392: ldc           #12
394: invokevirtual #13
397: invokevirtual #16
400: dload         4
402: dconst_0
403: dcmpl
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #17
415: new           #10
418: dup
419: invokespecial #11
422: ldc           #12
424: invokevirtual #13
427: dload         6
429: invokevirtual #60
432: ldc           #15
434: invokevirtual #13
437: ldc2_w        #61
440: invokevirtual #60
443: ldc           #12
445: invokevirtual #13
448: invokevirtual #16
451: dload         6
453: ldc2_w        #61
456: dcmpl
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #17
468: new           #10
471: dup
472: invokespecial #11
475: ldc           #12
477: invokevirtual #13
480: dload         10
482: invokevirtual #60
485: ldc           #15
487: invokevirtual #13
490: dconst_0
491: invokevirtual #60
494: ldc           #12
496: invokevirtual #13
499: invokevirtual #16
502: dload         10
504: dconst_0
505: dcmpl
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #17
517: new           #10
520: dup
521: invokespecial #11
524: ldc           #12
526: invokevirtual #13
529: dload         12
531: invokevirtual #60
534: ldc           #15
536: invokevirtual #13
539: ldc2_w        #61
542: invokevirtual #60
545: ldc           #12
547: invokevirtual #13
550: invokevirtual #16
553: dload         12
555: ldc2_w        #61
558: dcmpl
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #17
570: new           #10
573: dup
574: invokespecial #11
577: ldc           #12
579: invokevirtual #13
582: dload         14
584: invokevirtual #60
587: ldc           #15
589: invokevirtual #13
592: dconst_0
593: invokevirtual #60
596: ldc           #12
598: invokevirtual #13
601: invokevirtual #16
604: dload         14
606: dconst_0
607: dcmpl
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #17
619: aload         16
621: invokestatic  #33
624: new           #10
627: dup
628: invokespecial #11
631: ldc           #12
633: invokevirtual #13
636: dload         17
638: invokevirtual #60
641: ldc           #15
643: invokevirtual #13
646: ldc2_w        #716
649: invokevirtual #60
652: ldc           #12
654: invokevirtual #13
657: invokevirtual #16
660: dload         17
662: ldc2_w        #716
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         22
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         22
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         24
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         24
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: dload         29
789: invokevirtual #60
792: ldc           #15
794: invokevirtual #13
797: dconst_0
798: invokevirtual #60
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: dload         29
811: dconst_0
812: dcmpl
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #17
824: new           #10
827: dup
828: invokespecial #11
831: ldc           #12
833: invokevirtual #13
836: dload         31
838: invokevirtual #60
841: ldc           #15
843: invokevirtual #13
846: dconst_0
847: invokevirtual #60
850: ldc           #12
852: invokevirtual #13
855: invokevirtual #16
858: dload         31
860: dconst_0
861: dcmpl
862: ifne          869
865: iconst_1
866: goto          870
869: iconst_0
870: invokestatic  #17
873: new           #10
876: dup
877: invokespecial #11
880: ldc           #12
882: invokevirtual #13
885: iload         33
887: invokevirtual #14
890: ldc           #15
892: invokevirtual #13
895: iconst_0
896: invokevirtual #14
899: ldc           #12
901: invokevirtual #13
904: invokevirtual #16
907: iload         33
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #17
920: new           #10
923: dup
924: invokespecial #11
927: ldc           #12
929: invokevirtual #13
932: dload         34
934: invokevirtual #60
937: ldc           #15
939: invokevirtual #13
942: dconst_0
943: invokevirtual #60
946: ldc           #12
948: invokevirtual #13
951: invokevirtual #16
954: dload         34
956: dconst_0
957: dcmpl
958: ifne          965
961: iconst_1
962: goto          966
965: iconst_0
966: invokestatic  #17
969: aload         36
971: invokestatic  #33
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         39
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         39
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: aload         41
1025: invokestatic  #33
1028: new           #10
1031: dup
1032: invokespecial #11
1035: ldc           #12
1037: invokevirtual #13
1040: dload         42
1042: invokevirtual #60
1045: ldc           #15
1047: invokevirtual #13
1050: dconst_0
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         42
1064: dconst_0
1065: dcmpl
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #17
1077: aload         44
1079: invokestatic  #33
1082: aload         45
1084: invokestatic  #33
1087: aload         46
1089: invokestatic  #33
1092: aload         47
1094: invokestatic  #33
1097: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 11417
End line: 11509
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation88 = rotation85.revert();
        double double89 = rotation85.getAngle();
        double double90 = rotation85.getAngle();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = rotation85.applyTo(vector3D91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #718
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #93
520: astore        69
522: aload         64
524: invokevirtual #240
527: dstore        70
529: aload         64
531: invokevirtual #240
534: dstore        72
536: aconst_null
537: astore        74
539: aload         64
541: aload         74
543: invokevirtual #140
546: astore        75
548: ldc           #20
550: invokestatic  #21
553: goto          558
556: astore        75
558: new           #10
561: dup
562: invokespecial #11
565: ldc           #12
567: invokevirtual #13
570: dload         4
572: invokevirtual #60
575: ldc           #15
577: invokevirtual #13
580: dconst_0
581: invokevirtual #60
584: ldc           #12
586: invokevirtual #13
589: invokevirtual #16
592: dload         4
594: dconst_0
595: dcmpl
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #17
607: new           #10
610: dup
611: invokespecial #11
614: ldc           #12
616: invokevirtual #13
619: dload         6
621: invokevirtual #60
624: ldc           #15
626: invokevirtual #13
629: dconst_0
630: invokevirtual #60
633: ldc           #12
635: invokevirtual #13
638: invokevirtual #16
641: dload         6
643: dconst_0
644: dcmpl
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #17
656: new           #10
659: dup
660: invokespecial #11
663: ldc           #12
665: invokevirtual #13
668: dload         11
670: invokevirtual #60
673: ldc           #15
675: invokevirtual #13
678: dconst_0
679: invokevirtual #60
682: ldc           #12
684: invokevirtual #13
687: invokevirtual #16
690: dload         11
692: dconst_0
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #17
705: new           #10
708: dup
709: invokespecial #11
712: ldc           #12
714: invokevirtual #13
717: dload         13
719: invokevirtual #60
722: ldc           #15
724: invokevirtual #13
727: dconst_0
728: invokevirtual #60
731: ldc           #12
733: invokevirtual #13
736: invokevirtual #16
739: dload         13
741: dconst_0
742: dcmpl
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #17
754: new           #10
757: dup
758: invokespecial #11
761: ldc           #12
763: invokevirtual #13
766: iload         15
768: invokevirtual #14
771: ldc           #15
773: invokevirtual #13
776: iconst_0
777: invokevirtual #14
780: ldc           #12
782: invokevirtual #13
785: invokevirtual #16
788: iload         15
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #17
801: new           #10
804: dup
805: invokespecial #11
808: ldc           #12
810: invokevirtual #13
813: dload         16
815: invokevirtual #60
818: ldc           #15
820: invokevirtual #13
823: dconst_0
824: invokevirtual #60
827: ldc           #12
829: invokevirtual #13
832: invokevirtual #16
835: dload         16
837: dconst_0
838: dcmpl
839: ifne          846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #17
850: aload         18
852: invokestatic  #33
855: new           #10
858: dup
859: invokespecial #11
862: ldc           #12
864: invokevirtual #13
867: dload         21
869: invokevirtual #60
872: ldc           #15
874: invokevirtual #13
877: dconst_0
878: invokevirtual #60
881: ldc           #12
883: invokevirtual #13
886: invokevirtual #16
889: dload         21
891: dconst_0
892: dcmpl
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #17
904: new           #10
907: dup
908: invokespecial #11
911: ldc           #12
913: invokevirtual #13
916: dload         25
918: invokevirtual #60
921: ldc           #15
923: invokevirtual #13
926: dconst_0
927: invokevirtual #60
930: ldc           #12
932: invokevirtual #13
935: invokevirtual #16
938: dload         25
940: dconst_0
941: dcmpl
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #17
953: new           #10
956: dup
957: invokespecial #11
960: ldc           #12
962: invokevirtual #13
965: dload         27
967: invokevirtual #60
970: ldc           #15
972: invokevirtual #13
975: ldc2_w        #61
978: invokevirtual #60
981: ldc           #12
983: invokevirtual #13
986: invokevirtual #16
989: dload         27
991: ldc2_w        #61
994: dcmpl
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #17
1006: new           #10
1009: dup
1010: invokespecial #11
1013: ldc           #12
1015: invokevirtual #13
1018: dload         31
1020: invokevirtual #60
1023: ldc           #15
1025: invokevirtual #13
1028: dconst_0
1029: invokevirtual #60
1032: ldc           #12
1034: invokevirtual #13
1037: invokevirtual #16
1040: dload         31
1042: dconst_0
1043: dcmpl
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #17
1055: new           #10
1058: dup
1059: invokespecial #11
1062: ldc           #12
1064: invokevirtual #13
1067: dload         33
1069: invokevirtual #60
1072: ldc           #15
1074: invokevirtual #13
1077: ldc2_w        #61
1080: invokevirtual #60
1083: ldc           #12
1085: invokevirtual #13
1088: invokevirtual #16
1091: dload         33
1093: ldc2_w        #61
1096: dcmpl
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #17
1108: new           #10
1111: dup
1112: invokespecial #11
1115: ldc           #12
1117: invokevirtual #13
1120: dload         35
1122: invokevirtual #60
1125: ldc           #15
1127: invokevirtual #13
1130: dconst_0
1131: invokevirtual #60
1134: ldc           #12
1136: invokevirtual #13
1139: invokevirtual #16
1142: dload         35
1144: dconst_0
1145: dcmpl
1146: ifne          1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #17
1157: new           #10
1160: dup
1161: invokespecial #11
1164: ldc           #12
1166: invokevirtual #13
1169: dload         40
1171: invokevirtual #60
1174: ldc           #15
1176: invokevirtual #13
1179: dconst_0
1180: invokevirtual #60
1183: ldc           #12
1185: invokevirtual #13
1188: invokevirtual #16
1191: dload         40
1193: dconst_0
1194: dcmpl
1195: ifne          1202
1198: iconst_1
1199: goto          1203
1202: iconst_0
1203: invokestatic  #17
1206: new           #10
1209: dup
1210: invokespecial #11
1213: ldc           #12
1215: invokevirtual #13
1218: dload         42
1220: invokevirtual #60
1223: ldc           #15
1225: invokevirtual #13
1228: dconst_0
1229: invokevirtual #60
1232: ldc           #12
1234: invokevirtual #13
1237: invokevirtual #16
1240: dload         42
1242: dconst_0
1243: dcmpl
1244: ifne          1251
1247: iconst_1
1248: goto          1252
1251: iconst_0
1252: invokestatic  #17
1255: new           #10
1258: dup
1259: invokespecial #11
1262: ldc           #12
1264: invokevirtual #13
1267: dload         47
1269: invokevirtual #60
1272: ldc           #15
1274: invokevirtual #13
1277: dconst_0
1278: invokevirtual #60
1281: ldc           #12
1283: invokevirtual #13
1286: invokevirtual #16
1289: dload         47
1291: dconst_0
1292: dcmpl
1293: ifne          1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #17
1304: new           #10
1307: dup
1308: invokespecial #11
1311: ldc           #12
1313: invokevirtual #13
1316: dload         49
1318: invokevirtual #60
1321: ldc           #15
1323: invokevirtual #13
1326: dconst_0
1327: invokevirtual #60
1330: ldc           #12
1332: invokevirtual #13
1335: invokevirtual #16
1338: dload         49
1340: dconst_0
1341: dcmpl
1342: ifne          1349
1345: iconst_1
1346: goto          1350
1349: iconst_0
1350: invokestatic  #17
1353: new           #10
1356: dup
1357: invokespecial #11
1360: ldc           #12
1362: invokevirtual #13
1365: iload         51
1367: invokevirtual #14
1370: ldc           #15
1372: invokevirtual #13
1375: iconst_0
1376: invokevirtual #14
1379: ldc           #12
1381: invokevirtual #13
1384: invokevirtual #16
1387: iload         51
1389: ifne          1396
1392: iconst_1
1393: goto          1397
1396: iconst_0
1397: invokestatic  #17
1400: new           #10
1403: dup
1404: invokespecial #11
1407: ldc           #12
1409: invokevirtual #13
1412: dload         52
1414: invokevirtual #60
1417: ldc           #15
1419: invokevirtual #13
1422: dconst_0
1423: invokevirtual #60
1426: ldc           #12
1428: invokevirtual #13
1431: invokevirtual #16
1434: dload         52
1436: dconst_0
1437: dcmpl
1438: ifne          1445
1441: iconst_1
1442: goto          1446
1445: iconst_0
1446: invokestatic  #17
1449: aload         54
1451: invokestatic  #33
1454: new           #10
1457: dup
1458: invokespecial #11
1461: ldc           #12
1463: invokevirtual #13
1466: dload         57
1468: invokevirtual #60
1471: ldc           #15
1473: invokevirtual #13
1476: dconst_0
1477: invokevirtual #60
1480: ldc           #12
1482: invokevirtual #13
1485: invokevirtual #16
1488: dload         57
1490: dconst_0
1491: dcmpl
1492: ifne          1499
1495: iconst_1
1496: goto          1500
1499: iconst_0
1500: invokestatic  #17
1503: aload         59
1505: invokestatic  #33
1508: aload         60
1510: invokestatic  #33
1513: new           #10
1516: dup
1517: invokespecial #11
1520: ldc           #12
1522: invokevirtual #13
1525: dload         61
1527: invokevirtual #60
1530: ldc           #15
1532: invokevirtual #13
1535: ldc2_w        #63
1538: invokevirtual #60
1541: ldc           #12
1543: invokevirtual #13
1546: invokevirtual #16
1549: dload         61
1551: ldc2_w        #63
1554: dcmpl
1555: ifne          1562
1558: iconst_1
1559: goto          1563
1562: iconst_0
1563: invokestatic  #17
1566: aload         64
1568: invokestatic  #33
1571: new           #10
1574: dup
1575: invokespecial #11
1578: ldc           #12
1580: invokevirtual #13
1583: dload         65
1585: invokevirtual #60
1588: ldc           #15
1590: invokevirtual #13
1593: dconst_0
1594: invokevirtual #60
1597: ldc           #12
1599: invokevirtual #13
1602: invokevirtual #16
1605: dload         65
1607: dconst_0
1608: dcmpl
1609: ifne          1616
1612: iconst_1
1613: goto          1617
1616: iconst_0
1617: invokestatic  #17
1620: new           #10
1623: dup
1624: invokespecial #11
1627: ldc           #12
1629: invokevirtual #13
1632: dload         67
1634: invokevirtual #60
1637: ldc           #15
1639: invokevirtual #13
1642: dconst_0
1643: invokevirtual #60
1646: ldc           #12
1648: invokevirtual #13
1651: invokevirtual #16
1654: dload         67
1656: dconst_0
1657: dcmpl
1658: ifne          1665
1661: iconst_1
1662: goto          1666
1665: iconst_0
1666: invokestatic  #17
1669: aload         69
1671: invokestatic  #33
1674: new           #10
1677: dup
1678: invokespecial #11
1681: ldc           #12
1683: invokevirtual #13
1686: dload         70
1688: invokevirtual #60
1691: ldc           #15
1693: invokevirtual #13
1696: dconst_0
1697: invokevirtual #60
1700: ldc           #12
1702: invokevirtual #13
1705: invokevirtual #16
1708: dload         70
1710: dconst_0
1711: dcmpl
1712: ifne          1719
1715: iconst_1
1716: goto          1720
1719: iconst_0
1720: invokestatic  #17
1723: new           #10
1726: dup
1727: invokespecial #11
1730: ldc           #12
1732: invokevirtual #13
1735: dload         72
1737: invokevirtual #60
1740: ldc           #15
1742: invokevirtual #13
1745: dconst_0
1746: invokevirtual #60
1749: ldc           #12
1751: invokevirtual #13
1754: invokevirtual #16
1757: dload         72
1759: dconst_0
1760: dcmpl
1761: ifne          1768
1764: iconst_1
1765: goto          1769
1768: iconst_0
1769: invokestatic  #17
1772: return
Exception table:
from    to  target type
539   553   556   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 11512
End line: 11518
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 0.0f, 2979.3803161142273d, 101.0d, 1.0000000000000002d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #719
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: dconst_0
30: ldc2_w        #468
33: ldc2_w        #170
36: ldc2_w        #63
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #222
48: astore_2
49: aload_2
50: invokestatic  #33
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 11521
End line: 11586
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = rotation65.getAxis();
        double double68 = rotation65.getQ2();
        double double69 = rotation65.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.4795218342206279d) + "'", double68 == (-0.4795218342206279d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.3078974289323514d) + "'", double69 == (-0.3078974289323514d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #720
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #139
394: dstore        50
396: aload         49
398: invokevirtual #96
401: astore        52
403: aload         49
405: invokevirtual #139
408: dstore        53
410: aload         49
412: invokevirtual #94
415: dstore        55
417: new           #10
420: dup
421: invokespecial #11
424: ldc           #12
426: invokevirtual #13
429: dload_3
430: invokevirtual #60
433: ldc           #15
435: invokevirtual #13
438: dconst_0
439: invokevirtual #60
442: ldc           #12
444: invokevirtual #13
447: invokevirtual #16
450: dload_3
451: dconst_0
452: dcmpl
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #17
464: new           #10
467: dup
468: invokespecial #11
471: ldc           #12
473: invokevirtual #13
476: dload         7
478: invokevirtual #60
481: ldc           #15
483: invokevirtual #13
486: dconst_0
487: invokevirtual #60
490: ldc           #12
492: invokevirtual #13
495: invokevirtual #16
498: dload         7
500: dconst_0
501: dcmpl
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #17
513: new           #10
516: dup
517: invokespecial #11
520: ldc           #12
522: invokevirtual #13
525: dload         9
527: invokevirtual #60
530: ldc           #15
532: invokevirtual #13
535: ldc2_w        #61
538: invokevirtual #60
541: ldc           #12
543: invokevirtual #13
546: invokevirtual #16
549: dload         9
551: ldc2_w        #61
554: dcmpl
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #17
566: new           #10
569: dup
570: invokespecial #11
573: ldc           #12
575: invokevirtual #13
578: dload         13
580: invokevirtual #60
583: ldc           #15
585: invokevirtual #13
588: dconst_0
589: invokevirtual #60
592: ldc           #12
594: invokevirtual #13
597: invokevirtual #16
600: dload         13
602: dconst_0
603: dcmpl
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #17
615: new           #10
618: dup
619: invokespecial #11
622: ldc           #12
624: invokevirtual #13
627: dload         15
629: invokevirtual #60
632: ldc           #15
634: invokevirtual #13
637: ldc2_w        #61
640: invokevirtual #60
643: ldc           #12
645: invokevirtual #13
648: invokevirtual #16
651: dload         15
653: ldc2_w        #61
656: dcmpl
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #17
668: new           #10
671: dup
672: invokespecial #11
675: ldc           #12
677: invokevirtual #13
680: dload         17
682: invokevirtual #60
685: ldc           #15
687: invokevirtual #13
690: dconst_0
691: invokevirtual #60
694: ldc           #12
696: invokevirtual #13
699: invokevirtual #16
702: dload         17
704: dconst_0
705: dcmpl
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #17
717: new           #10
720: dup
721: invokespecial #11
724: ldc           #12
726: invokevirtual #13
729: dload         22
731: invokevirtual #60
734: ldc           #15
736: invokevirtual #13
739: dconst_0
740: invokevirtual #60
743: ldc           #12
745: invokevirtual #13
748: invokevirtual #16
751: dload         22
753: dconst_0
754: dcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         24
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: dconst_0
789: invokevirtual #60
792: ldc           #12
794: invokevirtual #13
797: invokevirtual #16
800: dload         24
802: dconst_0
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         29
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: dconst_0
838: invokevirtual #60
841: ldc           #12
843: invokevirtual #13
846: invokevirtual #16
849: dload         29
851: dconst_0
852: dcmpl
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #17
864: new           #10
867: dup
868: invokespecial #11
871: ldc           #12
873: invokevirtual #13
876: dload         31
878: invokevirtual #60
881: ldc           #15
883: invokevirtual #13
886: dconst_0
887: invokevirtual #60
890: ldc           #12
892: invokevirtual #13
895: invokevirtual #16
898: dload         31
900: dconst_0
901: dcmpl
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #17
913: new           #10
916: dup
917: invokespecial #11
920: ldc           #12
922: invokevirtual #13
925: iload         33
927: invokevirtual #14
930: ldc           #15
932: invokevirtual #13
935: iconst_0
936: invokevirtual #14
939: ldc           #12
941: invokevirtual #13
944: invokevirtual #16
947: iload         33
949: ifne          956
952: iconst_1
953: goto          957
956: iconst_0
957: invokestatic  #17
960: new           #10
963: dup
964: invokespecial #11
967: ldc           #12
969: invokevirtual #13
972: dload         34
974: invokevirtual #60
977: ldc           #15
979: invokevirtual #13
982: dconst_0
983: invokevirtual #60
986: ldc           #12
988: invokevirtual #13
991: invokevirtual #16
994: dload         34
996: dconst_0
997: dcmpl
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #17
1009: aload         36
1011: invokestatic  #33
1014: new           #10
1017: dup
1018: invokespecial #11
1021: ldc           #12
1023: invokevirtual #13
1026: dload         39
1028: invokevirtual #60
1031: ldc           #15
1033: invokevirtual #13
1036: dconst_0
1037: invokevirtual #60
1040: ldc           #12
1042: invokevirtual #13
1045: invokevirtual #16
1048: dload         39
1050: dconst_0
1051: dcmpl
1052: ifne          1059
1055: iconst_1
1056: goto          1060
1059: iconst_0
1060: invokestatic  #17
1063: aload         41
1065: invokestatic  #33
1068: aload         42
1070: invokestatic  #33
1073: new           #10
1076: dup
1077: invokespecial #11
1080: ldc           #12
1082: invokevirtual #13
1085: dload         43
1087: invokevirtual #60
1090: ldc           #15
1092: invokevirtual #13
1095: ldc2_w        #63
1098: invokevirtual #60
1101: ldc           #12
1103: invokevirtual #13
1106: invokevirtual #16
1109: dload         43
1111: ldc2_w        #63
1114: dcmpl
1115: ifne          1122
1118: iconst_1
1119: goto          1123
1122: iconst_0
1123: invokestatic  #17
1126: new           #10
1129: dup
1130: invokespecial #11
1133: ldc           #12
1135: invokevirtual #13
1138: dload         46
1140: invokevirtual #60
1143: ldc           #15
1145: invokevirtual #13
1148: ldc2_w        #79
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         46
1164: ldc2_w        #79
1167: dcmpl
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #17
1179: aload         48
1181: invokestatic  #33
1184: new           #10
1187: dup
1188: invokespecial #11
1191: ldc           #12
1193: invokevirtual #13
1196: dload         50
1198: invokevirtual #60
1201: ldc           #15
1203: invokevirtual #13
1206: ldc2_w        #141
1209: invokevirtual #60
1212: ldc           #12
1214: invokevirtual #13
1217: invokevirtual #16
1220: dload         50
1222: ldc2_w        #141
1225: dcmpl
1226: ifne          1233
1229: iconst_1
1230: goto          1234
1233: iconst_0
1234: invokestatic  #17
1237: aload         52
1239: invokestatic  #33
1242: new           #10
1245: dup
1246: invokespecial #11
1249: ldc           #12
1251: invokevirtual #13
1254: dload         53
1256: invokevirtual #60
1259: ldc           #15
1261: invokevirtual #13
1264: ldc2_w        #141
1267: invokevirtual #60
1270: ldc           #12
1272: invokevirtual #13
1275: invokevirtual #16
1278: dload         53
1280: ldc2_w        #141
1283: dcmpl
1284: ifne          1291
1287: iconst_1
1288: goto          1292
1291: iconst_0
1292: invokestatic  #17
1295: new           #10
1298: dup
1299: invokespecial #11
1302: ldc           #12
1304: invokevirtual #13
1307: dload         55
1309: invokevirtual #60
1312: ldc           #15
1314: invokevirtual #13
1317: ldc2_w        #143
1320: invokevirtual #60
1323: ldc           #12
1325: invokevirtual #13
1328: invokevirtual #16
1331: dload         55
1333: ldc2_w        #143
1336: dcmpl
1337: ifne          1344
1340: iconst_1
1341: goto          1345
1344: iconst_0
1345: invokestatic  #17
1348: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 11589
End line: 11600
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.commons.math.geometry.euclidean.threed.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(rotationOrder0, (double) 28L, (double) 101L, 0.693153649196163d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #721
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #722
35: ldc2_w        #170
38: ldc2_w        #724
41: invokespecial #81
44: astore_2
45: ldc           #20
47: invokestatic  #21
50: goto          54
53: astore_2
54: return
Exception table:
from    to  target type
27    50    53   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 11603
End line: 11683
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ1();
        double double88 = rotation85.getQ2();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #726
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #94
513: dstore        67
515: aload         64
517: invokevirtual #139
520: dstore        69
522: new           #10
525: dup
526: invokespecial #11
529: ldc           #12
531: invokevirtual #13
534: dload         4
536: invokevirtual #60
539: ldc           #15
541: invokevirtual #13
544: dconst_0
545: invokevirtual #60
548: ldc           #12
550: invokevirtual #13
553: invokevirtual #16
556: dload         4
558: dconst_0
559: dcmpl
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #17
571: new           #10
574: dup
575: invokespecial #11
578: ldc           #12
580: invokevirtual #13
583: dload         6
585: invokevirtual #60
588: ldc           #15
590: invokevirtual #13
593: dconst_0
594: invokevirtual #60
597: ldc           #12
599: invokevirtual #13
602: invokevirtual #16
605: dload         6
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         11
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         11
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         13
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         13
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: iload         15
732: invokevirtual #14
735: ldc           #15
737: invokevirtual #13
740: iconst_0
741: invokevirtual #14
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: iload         15
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #17
765: new           #10
768: dup
769: invokespecial #11
772: ldc           #12
774: invokevirtual #13
777: dload         16
779: invokevirtual #60
782: ldc           #15
784: invokevirtual #13
787: dconst_0
788: invokevirtual #60
791: ldc           #12
793: invokevirtual #13
796: invokevirtual #16
799: dload         16
801: dconst_0
802: dcmpl
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: aload         18
816: invokestatic  #33
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         21
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: dconst_0
842: invokevirtual #60
845: ldc           #12
847: invokevirtual #13
850: invokevirtual #16
853: dload         21
855: dconst_0
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         25
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         25
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         27
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: ldc2_w        #61
942: invokevirtual #60
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: dload         27
955: ldc2_w        #61
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         31
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: dconst_0
993: invokevirtual #60
996: ldc           #12
998: invokevirtual #13
1001: invokevirtual #16
1004: dload         31
1006: dconst_0
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         33
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: ldc2_w        #61
1044: invokevirtual #60
1047: ldc           #12
1049: invokevirtual #13
1052: invokevirtual #16
1055: dload         33
1057: ldc2_w        #61
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: dload         35
1086: invokevirtual #60
1089: ldc           #15
1091: invokevirtual #13
1094: dconst_0
1095: invokevirtual #60
1098: ldc           #12
1100: invokevirtual #13
1103: invokevirtual #16
1106: dload         35
1108: dconst_0
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         40
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         40
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         42
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         42
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         47
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         47
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         49
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         49
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: iload         51
1331: invokevirtual #14
1334: ldc           #15
1336: invokevirtual #13
1339: iconst_0
1340: invokevirtual #14
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: iload         51
1353: ifne          1360
1356: iconst_1
1357: goto          1361
1360: iconst_0
1361: invokestatic  #17
1364: new           #10
1367: dup
1368: invokespecial #11
1371: ldc           #12
1373: invokevirtual #13
1376: dload         52
1378: invokevirtual #60
1381: ldc           #15
1383: invokevirtual #13
1386: dconst_0
1387: invokevirtual #60
1390: ldc           #12
1392: invokevirtual #13
1395: invokevirtual #16
1398: dload         52
1400: dconst_0
1401: dcmpl
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: aload         54
1415: invokestatic  #33
1418: new           #10
1421: dup
1422: invokespecial #11
1425: ldc           #12
1427: invokevirtual #13
1430: dload         57
1432: invokevirtual #60
1435: ldc           #15
1437: invokevirtual #13
1440: dconst_0
1441: invokevirtual #60
1444: ldc           #12
1446: invokevirtual #13
1449: invokevirtual #16
1452: dload         57
1454: dconst_0
1455: dcmpl
1456: ifne          1463
1459: iconst_1
1460: goto          1464
1463: iconst_0
1464: invokestatic  #17
1467: aload         59
1469: invokestatic  #33
1472: aload         60
1474: invokestatic  #33
1477: new           #10
1480: dup
1481: invokespecial #11
1484: ldc           #12
1486: invokevirtual #13
1489: dload         61
1491: invokevirtual #60
1494: ldc           #15
1496: invokevirtual #13
1499: ldc2_w        #63
1502: invokevirtual #60
1505: ldc           #12
1507: invokevirtual #13
1510: invokevirtual #16
1513: dload         61
1515: ldc2_w        #63
1518: dcmpl
1519: ifne          1526
1522: iconst_1
1523: goto          1527
1526: iconst_0
1527: invokestatic  #17
1530: aload         64
1532: invokestatic  #33
1535: new           #10
1538: dup
1539: invokespecial #11
1542: ldc           #12
1544: invokevirtual #13
1547: dload         65
1549: invokevirtual #60
1552: ldc           #15
1554: invokevirtual #13
1557: dconst_0
1558: invokevirtual #60
1561: ldc           #12
1563: invokevirtual #13
1566: invokevirtual #16
1569: dload         65
1571: dconst_0
1572: dcmpl
1573: ifne          1580
1576: iconst_1
1577: goto          1581
1580: iconst_0
1581: invokestatic  #17
1584: new           #10
1587: dup
1588: invokespecial #11
1591: ldc           #12
1593: invokevirtual #13
1596: dload         67
1598: invokevirtual #60
1601: ldc           #15
1603: invokevirtual #13
1606: dconst_0
1607: invokevirtual #60
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: dload         67
1620: dconst_0
1621: dcmpl
1622: ifne          1629
1625: iconst_1
1626: goto          1630
1629: iconst_0
1630: invokestatic  #17
1633: new           #10
1636: dup
1637: invokespecial #11
1640: ldc           #12
1642: invokevirtual #13
1645: dload         69
1647: invokevirtual #60
1650: ldc           #15
1652: invokevirtual #13
1655: dconst_0
1656: invokevirtual #60
1659: ldc           #12
1661: invokevirtual #13
1664: invokevirtual #16
1667: dload         69
1669: dconst_0
1670: dcmpl
1671: ifne          1678
1674: iconst_1
1675: goto          1679
1678: iconst_0
1679: invokestatic  #17
1682: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 11686
End line: 11740
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double14 = vector3D10.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        double double15 = vector3D13.getDelta();
        double double16 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = vector3D13.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector18 = vector3D13.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        boolean boolean41 = vector3D32.isInfinite();
        double double42 = vector3D21.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = vector3D32.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D46);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = vector3D46.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation53 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D46);
        double double54 = vector3D46.getZ();
        double double55 = vector3D46.getNorm();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7345682747147468d + "'", double15 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(euclidean3DVector18);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.6702668260599606d + "'", double54 == 0.6702668260599606d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #727
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: aload_2
56: invokevirtual #52
59: dstore        5
61: new           #43
64: dup
65: dconst_1
66: ldc2_w        #44
69: invokespecial #46
72: astore        7
74: new           #43
77: dup
78: dconst_1
79: ldc2_w        #44
82: invokespecial #46
85: astore        8
87: aload         7
89: aload         8
91: invokevirtual #47
94: dstore        9
96: aload         8
98: invokevirtual #52
101: dstore        11
103: aload_2
104: aload         8
106: invokevirtual #53
109: dstore        13
111: aload         8
113: invokevirtual #54
116: astore        15
118: aload         8
120: invokevirtual #193
123: astore        16
125: new           #43
128: dup
129: dconst_1
130: ldc2_w        #44
133: invokespecial #46
136: astore        17
138: new           #43
141: dup
142: dconst_1
143: ldc2_w        #44
146: invokespecial #46
149: astore        18
151: new           #43
154: dup
155: dconst_1
156: ldc2_w        #44
159: invokespecial #46
162: astore        19
164: aload         18
166: aload         19
168: invokevirtual #47
171: dstore        20
173: aload         17
175: aload         19
177: invokestatic  #48
180: dstore        22
182: new           #43
185: dup
186: dconst_1
187: ldc2_w        #44
190: invokespecial #46
193: astore        24
195: new           #43
198: dup
199: dconst_1
200: ldc2_w        #44
203: invokespecial #46
206: astore        25
208: new           #43
211: dup
212: dconst_1
213: ldc2_w        #44
216: invokespecial #46
219: astore        26
221: aload         25
223: aload         26
225: invokevirtual #47
228: dstore        27
230: aload         24
232: aload         26
234: invokestatic  #48
237: dstore        29
239: aload         24
241: invokevirtual #49
244: istore        31
246: aload         17
248: aload         24
250: invokevirtual #50
253: dstore        32
255: aload         24
257: invokevirtual #54
260: astore        34
262: new           #43
265: dup
266: dconst_1
267: ldc2_w        #44
270: invokespecial #46
273: astore        35
275: new           #43
278: dup
279: dconst_1
280: ldc2_w        #44
283: invokespecial #46
286: astore        36
288: aload         35
290: aload         36
292: invokevirtual #47
295: dstore        37
297: aload         34
299: aload         35
301: invokevirtual #55
304: astore        39
306: aload         35
308: invokevirtual #193
311: astore        40
313: new           #27
316: dup
317: aload         8
319: aload         35
321: invokespecial #56
324: astore        41
326: aload         35
328: invokevirtual #311
331: dstore        42
333: aload         35
335: invokevirtual #261
338: dstore        44
340: new           #10
343: dup
344: invokespecial #11
347: ldc           #12
349: invokevirtual #13
352: dload_3
353: invokevirtual #60
356: ldc           #15
358: invokevirtual #13
361: dconst_0
362: invokevirtual #60
365: ldc           #12
367: invokevirtual #13
370: invokevirtual #16
373: dload_3
374: dconst_0
375: dcmpl
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #17
387: new           #10
390: dup
391: invokespecial #11
394: ldc           #12
396: invokevirtual #13
399: dload         5
401: invokevirtual #60
404: ldc           #15
406: invokevirtual #13
409: ldc2_w        #61
412: invokevirtual #60
415: ldc           #12
417: invokevirtual #13
420: invokevirtual #16
423: dload         5
425: ldc2_w        #61
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #17
440: new           #10
443: dup
444: invokespecial #11
447: ldc           #12
449: invokevirtual #13
452: dload         9
454: invokevirtual #60
457: ldc           #15
459: invokevirtual #13
462: dconst_0
463: invokevirtual #60
466: ldc           #12
468: invokevirtual #13
471: invokevirtual #16
474: dload         9
476: dconst_0
477: dcmpl
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #17
489: new           #10
492: dup
493: invokespecial #11
496: ldc           #12
498: invokevirtual #13
501: dload         11
503: invokevirtual #60
506: ldc           #15
508: invokevirtual #13
511: ldc2_w        #61
514: invokevirtual #60
517: ldc           #12
519: invokevirtual #13
522: invokevirtual #16
525: dload         11
527: ldc2_w        #61
530: dcmpl
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #17
542: new           #10
545: dup
546: invokespecial #11
549: ldc           #12
551: invokevirtual #13
554: dload         13
556: invokevirtual #60
559: ldc           #15
561: invokevirtual #13
564: dconst_0
565: invokevirtual #60
568: ldc           #12
570: invokevirtual #13
573: invokevirtual #16
576: dload         13
578: dconst_0
579: dcmpl
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #17
591: aload         15
593: invokestatic  #33
596: aload         16
598: invokestatic  #33
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         20
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: dconst_0
624: invokevirtual #60
627: ldc           #12
629: invokevirtual #13
632: invokevirtual #16
635: dload         20
637: dconst_0
638: dcmpl
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #17
650: new           #10
653: dup
654: invokespecial #11
657: ldc           #12
659: invokevirtual #13
662: dload         22
664: invokevirtual #60
667: ldc           #15
669: invokevirtual #13
672: dconst_0
673: invokevirtual #60
676: ldc           #12
678: invokevirtual #13
681: invokevirtual #16
684: dload         22
686: dconst_0
687: dcmpl
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #17
699: new           #10
702: dup
703: invokespecial #11
706: ldc           #12
708: invokevirtual #13
711: dload         27
713: invokevirtual #60
716: ldc           #15
718: invokevirtual #13
721: dconst_0
722: invokevirtual #60
725: ldc           #12
727: invokevirtual #13
730: invokevirtual #16
733: dload         27
735: dconst_0
736: dcmpl
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #17
748: new           #10
751: dup
752: invokespecial #11
755: ldc           #12
757: invokevirtual #13
760: dload         29
762: invokevirtual #60
765: ldc           #15
767: invokevirtual #13
770: dconst_0
771: invokevirtual #60
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: dload         29
784: dconst_0
785: dcmpl
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #17
797: new           #10
800: dup
801: invokespecial #11
804: ldc           #12
806: invokevirtual #13
809: iload         31
811: invokevirtual #14
814: ldc           #15
816: invokevirtual #13
819: iconst_0
820: invokevirtual #14
823: ldc           #12
825: invokevirtual #13
828: invokevirtual #16
831: iload         31
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #17
844: new           #10
847: dup
848: invokespecial #11
851: ldc           #12
853: invokevirtual #13
856: dload         32
858: invokevirtual #60
861: ldc           #15
863: invokevirtual #13
866: dconst_0
867: invokevirtual #60
870: ldc           #12
872: invokevirtual #13
875: invokevirtual #16
878: dload         32
880: dconst_0
881: dcmpl
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #17
893: aload         34
895: invokestatic  #33
898: new           #10
901: dup
902: invokespecial #11
905: ldc           #12
907: invokevirtual #13
910: dload         37
912: invokevirtual #60
915: ldc           #15
917: invokevirtual #13
920: dconst_0
921: invokevirtual #60
924: ldc           #12
926: invokevirtual #13
929: invokevirtual #16
932: dload         37
934: dconst_0
935: dcmpl
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #17
947: aload         39
949: invokestatic  #33
952: aload         40
954: invokestatic  #33
957: new           #10
960: dup
961: invokespecial #11
964: ldc           #12
966: invokevirtual #13
969: dload         42
971: invokevirtual #60
974: ldc           #15
976: invokevirtual #13
979: ldc2_w        #79
982: invokevirtual #60
985: ldc           #12
987: invokevirtual #13
990: invokevirtual #16
993: dload         42
995: ldc2_w        #79
998: dcmpl
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #17
1010: new           #10
1013: dup
1014: invokespecial #11
1017: ldc           #12
1019: invokevirtual #13
1022: dload         44
1024: invokevirtual #60
1027: ldc           #15
1029: invokevirtual #13
1032: dconst_1
1033: invokevirtual #60
1036: ldc           #12
1038: invokevirtual #13
1041: invokevirtual #16
1044: dload         44
1046: dconst_1
1047: dcmpl
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #17
1059: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 11743
End line: 11834
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = rotation94.getAxis();
        double double96 = rotation94.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation97 = rotation85.applyTo(rotation94);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D98 = rotation94.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector99 = vector3D98.getZero();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 6.09767964807105d + "'", double96 == 6.09767964807105d);
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertNotNull(euclidean3DVector99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #728
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #27
525: dup
526: ldc2_w        #146
529: ldc2_w        #72
532: ldc2_w        #148
535: dconst_1
536: iconst_0
537: invokespecial #150
540: astore        70
542: aload         70
544: invokevirtual #96
547: astore        71
549: aload         70
551: invokevirtual #139
554: dstore        72
556: aload         64
558: aload         70
560: invokevirtual #160
563: astore        74
565: aload         70
567: invokevirtual #96
570: astore        75
572: aload         75
574: invokevirtual #198
577: astore        76
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         4
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         4
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         6
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         6
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         11
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         11
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         13
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         13
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         15
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         15
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         16
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         16
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         18
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         21
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         21
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         25
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         25
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         27
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         27
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         31
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         31
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         33
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         33
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         35
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         35
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         40
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         40
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         42
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         42
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         47
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         47
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         49
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         49
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         51
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         51
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         52
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         52
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         54
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         57
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         57
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         59
1526: invokestatic  #33
1529: aload         60
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         61
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         61
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: aload         64
1589: invokestatic  #33
1592: new           #10
1595: dup
1596: invokespecial #11
1599: ldc           #12
1601: invokevirtual #13
1604: dload         65
1606: invokevirtual #60
1609: ldc           #15
1611: invokevirtual #13
1614: dconst_0
1615: invokevirtual #60
1618: ldc           #12
1620: invokevirtual #13
1623: invokevirtual #16
1626: dload         65
1628: dconst_0
1629: dcmpl
1630: ifne          1637
1633: iconst_1
1634: goto          1638
1637: iconst_0
1638: invokestatic  #17
1641: new           #10
1644: dup
1645: invokespecial #11
1648: ldc           #12
1650: invokevirtual #13
1653: dload         67
1655: invokevirtual #60
1658: ldc           #15
1660: invokevirtual #13
1663: dconst_0
1664: invokevirtual #60
1667: ldc           #12
1669: invokevirtual #13
1672: invokevirtual #16
1675: dload         67
1677: dconst_0
1678: dcmpl
1679: ifne          1686
1682: iconst_1
1683: goto          1687
1686: iconst_0
1687: invokestatic  #17
1690: aload         69
1692: invokestatic  #33
1695: aload         71
1697: invokestatic  #33
1700: new           #10
1703: dup
1704: invokespecial #11
1707: ldc           #12
1709: invokevirtual #13
1712: dload         72
1714: invokevirtual #60
1717: ldc           #15
1719: invokevirtual #13
1722: ldc2_w        #148
1725: invokevirtual #60
1728: ldc           #12
1730: invokevirtual #13
1733: invokevirtual #16
1736: dload         72
1738: ldc2_w        #148
1741: dcmpl
1742: ifne          1749
1745: iconst_1
1746: goto          1750
1749: iconst_0
1750: invokestatic  #17
1753: aload         74
1755: invokestatic  #33
1758: aload         75
1760: invokestatic  #33
1763: aload         76
1765: invokestatic  #33
1768: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 11837
End line: 11847
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.MINUS_J;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, (-11013.232874703393d));
        double double3 = rotation2.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation4 = rotation2.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotation4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #729
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #675
28: astore_1
29: new           #27
32: dup
33: aload_1
34: ldc2_w        #676
37: invokespecial #103
40: astore_2
41: aload_2
42: invokevirtual #95
45: dstore_3
46: aload_2
47: invokevirtual #93
50: astore        5
52: aload_1
53: invokestatic  #33
56: new           #10
59: dup
60: invokespecial #11
63: ldc           #12
65: invokevirtual #13
68: dload_3
69: invokevirtual #60
72: ldc           #15
74: invokevirtual #13
77: dconst_0
78: invokevirtual #60
81: ldc           #12
83: invokevirtual #13
86: invokevirtual #16
89: dload_3
90: dconst_0
91: dcmpl
92: ifne          99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #17
103: aload         5
105: invokestatic  #33
108: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 11850
End line: 11887
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = vector3D0.negate();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray4 = null;
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D2, localizable3, objArray4);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.ZERO;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = vector3D7.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation16 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = rotation16.getAxis();
        double double18 = rotation16.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = rotation16.applyInverseTo(vector3D19);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = vector3D7.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D6, vector3D21);
        double double23 = vector3D2.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double24 = vector3D2.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #730
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #432
28: astore_1
29: aload_1
30: invokevirtual #163
33: astore_2
34: aload_1
35: invokevirtual #54
38: astore_3
39: aconst_null
40: astore        4
42: aconst_null
43: astore        5
45: aload_3
46: aload         4
48: aload         5
50: invokestatic  #328
53: getstatic     #433
56: astore        6
58: getstatic     #432
61: astore        7
63: aload         7
65: invokevirtual #163
68: astore        8
70: aload         7
72: invokevirtual #54
75: astore        9
77: new           #27
80: dup
81: ldc2_w        #146
84: ldc2_w        #72
87: ldc2_w        #148
90: dconst_1
91: iconst_0
92: invokespecial #150
95: astore        10
97: aload         10
99: invokevirtual #96
102: astore        11
104: aload         10
106: invokevirtual #95
109: dstore        12
111: getstatic     #314
114: astore        14
116: aload         10
118: aload         14
120: invokevirtual #98
123: astore        15
125: aload         7
127: ldc2_w        #434
130: aload         14
132: invokevirtual #182
135: astore        16
137: aload         6
139: aload         16
141: invokestatic  #127
144: dstore        17
146: aload_3
147: aload         16
149: invokevirtual #53
152: dstore        19
154: aload_3
155: invokevirtual #99
158: dstore        21
160: aload_1
161: invokestatic  #33
164: aload_2
165: invokestatic  #33
168: aload_3
169: invokestatic  #33
172: aload         6
174: invokestatic  #33
177: aload         7
179: invokestatic  #33
182: aload         8
184: invokestatic  #33
187: aload         9
189: invokestatic  #33
192: aload         11
194: invokestatic  #33
197: new           #10
200: dup
201: invokespecial #11
204: ldc           #12
206: invokevirtual #13
209: dload         12
211: invokevirtual #60
214: ldc           #15
216: invokevirtual #13
219: dconst_1
220: invokevirtual #60
223: ldc           #12
225: invokevirtual #13
228: invokevirtual #16
231: dload         12
233: dconst_1
234: dcmpl
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #17
246: aload         14
248: invokestatic  #33
251: aload         15
253: invokestatic  #33
256: aload         16
258: invokestatic  #33
261: dload         17
263: invokestatic  #242
266: invokestatic  #243
269: dload         19
271: invokestatic  #242
274: invokestatic  #243
277: new           #10
280: dup
281: invokespecial #11
284: ldc           #12
286: invokevirtual #13
289: dload         21
291: invokevirtual #60
294: ldc           #15
296: invokevirtual #13
299: ldc2_w        #66
302: invokevirtual #60
305: ldc           #12
307: invokevirtual #13
310: invokevirtual #16
313: dload         21
315: ldc2_w        #66
318: dcmpl
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #17
330: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 11890
End line: 11943
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException4 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 100.0f, (java.lang.Number) Double.POSITIVE_INFINITY, (int) (short) 10);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        double[] doubleArray9 = new double[] { (byte) 1 };
        double[] doubleArray10 = new double[] {};
        boolean boolean11 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray9, doubleArray10);
        double[] doubleArray13 = new double[] { (byte) 1 };
        double[] doubleArray14 = new double[] {};
        boolean boolean15 = org.apache.commons.math.util.MathUtils.equalsIncludingNaN(doubleArray13, doubleArray14);
        org.apache.commons.math.util.MathUtils.OrderDirection orderDirection16 = null;
        double[] doubleArray18 = new double[] { 0 };
        double[] doubleArray20 = new double[] { 0 };
        double[] doubleArray22 = new double[] { 0 };
        double[] doubleArray24 = new double[] { 0 };
        double[] doubleArray26 = new double[] { 0 };
        double[][] doubleArray27 = new double[][] { doubleArray18, doubleArray20, doubleArray22, doubleArray24, doubleArray26 };
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray13, orderDirection16, doubleArray27);
        org.apache.commons.math.util.MathUtils.sortInPlace(doubleArray9, doubleArray27);
        org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException30 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable6, (java.lang.Number) (short) 1, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) nonMonotonousSequenceException4, localizable5, (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException(localizable0, (java.lang.Object[]) doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation34 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray27, 0.0d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException; message: a 5x1 matrix cannot be a rotation matrix");
        } catch (org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #731
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #321
30: dup
31: ldc_w         #437
34: invokestatic  #379
37: ldc2_w        #133
40: invokestatic  #319
43: bipush        10
45: invokespecial #325
48: astore_2
49: aconst_null
50: astore_3
51: aconst_null
52: astore        4
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_1
60: dastore
61: astore        5
63: iconst_0
64: newarray       double
66: astore        6
68: aload         5
70: aload         6
72: invokestatic  #24
75: istore        7
77: iconst_1
78: newarray       double
80: dup
81: iconst_0
82: dconst_1
83: dastore
84: astore        8
86: iconst_0
87: newarray       double
89: astore        9
91: aload         8
93: aload         9
95: invokestatic  #24
98: istore        10
100: aconst_null
101: astore        11
103: iconst_1
104: newarray       double
106: dup
107: iconst_0
108: dconst_0
109: dastore
110: astore        12
112: iconst_1
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: astore        13
121: iconst_1
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: astore        14
130: iconst_1
131: newarray       double
133: dup
134: iconst_0
135: dconst_0
136: dastore
137: astore        15
139: iconst_1
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: astore        16
148: iconst_5
149: anewarray     #25
152: dup
153: iconst_0
154: aload         12
156: aastore
157: dup
158: iconst_1
159: aload         13
161: aastore
162: dup
163: iconst_2
164: aload         14
166: aastore
167: dup
168: iconst_3
169: aload         15
171: aastore
172: dup
173: iconst_4
174: aload         16
176: aastore
177: astore        17
179: aload         8
181: aload         11
183: aload         17
185: invokestatic  #26
188: aload         5
190: aload         17
192: invokestatic  #154
195: new           #438
198: dup
199: aload         4
201: iconst_1
202: invokestatic  #439
205: aload         17
207: checkcast     #248
210: invokespecial #440
213: astore        18
215: new           #265
218: dup
219: aload_2
220: aload_3
221: aload         17
223: checkcast     #248
226: invokespecial #383
229: astore        19
231: new           #32
234: dup
235: aload_1
236: aload         17
238: checkcast     #248
241: invokespecial #732
244: astore        20
246: new           #27
249: dup
250: aload         17
252: dconst_0
253: invokespecial #30
256: astore        21
258: ldc           #31
260: invokestatic  #21
263: goto          268
266: astore        21
268: aload         5
270: invokestatic  #33
273: aload         5
275: invokestatic  #34
278: ldc           #35
280: invokestatic  #36
283: aload         6
285: invokestatic  #33
288: aload         6
290: invokestatic  #34
293: ldc           #37
295: invokestatic  #36
298: new           #10
301: dup
302: invokespecial #11
305: ldc           #12
307: invokevirtual #13
310: iload         7
312: invokevirtual #14
315: ldc           #15
317: invokevirtual #13
320: iconst_0
321: invokevirtual #14
324: ldc           #12
326: invokevirtual #13
329: invokevirtual #16
332: iload         7
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #17
345: aload         8
347: invokestatic  #33
350: aload         8
352: invokestatic  #34
355: ldc           #35
357: invokestatic  #36
360: aload         9
362: invokestatic  #33
365: aload         9
367: invokestatic  #34
370: ldc           #37
372: invokestatic  #36
375: new           #10
378: dup
379: invokespecial #11
382: ldc           #12
384: invokevirtual #13
387: iload         10
389: invokevirtual #14
392: ldc           #15
394: invokevirtual #13
397: iconst_0
398: invokevirtual #14
401: ldc           #12
403: invokevirtual #13
406: invokevirtual #16
409: iload         10
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #17
422: aload         12
424: invokestatic  #33
427: aload         12
429: invokestatic  #34
432: ldc           #38
434: invokestatic  #36
437: aload         13
439: invokestatic  #33
442: aload         13
444: invokestatic  #34
447: ldc           #38
449: invokestatic  #36
452: aload         14
454: invokestatic  #33
457: aload         14
459: invokestatic  #34
462: ldc           #38
464: invokestatic  #36
467: aload         15
469: invokestatic  #33
472: aload         15
474: invokestatic  #34
477: ldc           #38
479: invokestatic  #36
482: aload         16
484: invokestatic  #33
487: aload         16
489: invokestatic  #34
492: ldc           #38
494: invokestatic  #36
497: aload         17
499: invokestatic  #33
502: return
Exception table:
from    to  target type
246   263   266   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 11946
End line: 11991
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation5.getAxis();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double32 = vector3D28.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D31);
        double double33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D25, vector3D31);
        boolean boolean34 = vector3D25.isInfinite();
        double double35 = vector3D14.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector37 = vector3D11.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        double double38 = vector3D11.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = vector3D11.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.5430806348152437d, vector3D39);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = rotation5.applyTo(vector3D40);
        double double42 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(euclidean3DVector37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + Double.POSITIVE_INFINITY + "'", double38 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 6.09767964807105d + "'", double42 == 6.09767964807105d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #733
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #96
53: astore_3
54: aload_1
55: invokevirtual #222
58: astore        4
60: aload_1
61: invokevirtual #96
64: astore        5
66: getstatic     #126
69: astore        6
71: new           #43
74: dup
75: dconst_1
76: ldc2_w        #44
79: invokespecial #46
82: astore        7
84: new           #43
87: dup
88: dconst_1
89: ldc2_w        #44
92: invokespecial #46
95: astore        8
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        9
110: aload         8
112: aload         9
114: invokevirtual #47
117: dstore        10
119: aload         7
121: aload         9
123: invokestatic  #48
126: dstore        12
128: new           #43
131: dup
132: dconst_1
133: ldc2_w        #44
136: invokespecial #46
139: astore        14
141: new           #43
144: dup
145: dconst_1
146: ldc2_w        #44
149: invokespecial #46
152: astore        15
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        16
167: aload         15
169: aload         16
171: invokevirtual #47
174: dstore        17
176: aload         14
178: aload         16
180: invokestatic  #48
183: dstore        19
185: aload         14
187: invokevirtual #49
190: istore        21
192: aload         7
194: aload         14
196: invokevirtual #50
199: dstore        22
201: aload         14
203: invokevirtual #54
206: astore        24
208: aload         6
210: aload         24
212: invokevirtual #55
215: astore        25
217: aload         6
219: invokevirtual #111
222: dstore        26
224: aload         6
226: invokevirtual #54
229: astore        28
231: new           #43
234: dup
235: ldc2_w        #734
238: aload         28
240: invokespecial #305
243: astore        29
245: aload_1
246: aload         29
248: invokevirtual #140
251: astore        30
253: aload_1
254: invokevirtual #139
257: dstore        31
259: aload_2
260: invokestatic  #33
263: aload_3
264: invokestatic  #33
267: aload         4
269: invokestatic  #33
272: aload         5
274: invokestatic  #33
277: aload         6
279: invokestatic  #33
282: new           #10
285: dup
286: invokespecial #11
289: ldc           #12
291: invokevirtual #13
294: dload         10
296: invokevirtual #60
299: ldc           #15
301: invokevirtual #13
304: dconst_0
305: invokevirtual #60
308: ldc           #12
310: invokevirtual #13
313: invokevirtual #16
316: dload         10
318: dconst_0
319: dcmpl
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #17
331: new           #10
334: dup
335: invokespecial #11
338: ldc           #12
340: invokevirtual #13
343: dload         12
345: invokevirtual #60
348: ldc           #15
350: invokevirtual #13
353: dconst_0
354: invokevirtual #60
357: ldc           #12
359: invokevirtual #13
362: invokevirtual #16
365: dload         12
367: dconst_0
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #17
380: new           #10
383: dup
384: invokespecial #11
387: ldc           #12
389: invokevirtual #13
392: dload         17
394: invokevirtual #60
397: ldc           #15
399: invokevirtual #13
402: dconst_0
403: invokevirtual #60
406: ldc           #12
408: invokevirtual #13
411: invokevirtual #16
414: dload         17
416: dconst_0
417: dcmpl
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #17
429: new           #10
432: dup
433: invokespecial #11
436: ldc           #12
438: invokevirtual #13
441: dload         19
443: invokevirtual #60
446: ldc           #15
448: invokevirtual #13
451: dconst_0
452: invokevirtual #60
455: ldc           #12
457: invokevirtual #13
460: invokevirtual #16
463: dload         19
465: dconst_0
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #17
478: new           #10
481: dup
482: invokespecial #11
485: ldc           #12
487: invokevirtual #13
490: iload         21
492: invokevirtual #14
495: ldc           #15
497: invokevirtual #13
500: iconst_0
501: invokevirtual #14
504: ldc           #12
506: invokevirtual #13
509: invokevirtual #16
512: iload         21
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #17
525: new           #10
528: dup
529: invokespecial #11
532: ldc           #12
534: invokevirtual #13
537: dload         22
539: invokevirtual #60
542: ldc           #15
544: invokevirtual #13
547: dconst_0
548: invokevirtual #60
551: ldc           #12
553: invokevirtual #13
556: invokevirtual #16
559: dload         22
561: dconst_0
562: dcmpl
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #17
574: aload         24
576: invokestatic  #33
579: aload         25
581: invokestatic  #33
584: new           #10
587: dup
588: invokespecial #11
591: ldc           #12
593: invokevirtual #13
596: dload         26
598: invokevirtual #60
601: ldc           #15
603: invokevirtual #13
606: ldc2_w        #133
609: invokevirtual #60
612: ldc           #12
614: invokevirtual #13
617: invokevirtual #16
620: dload         26
622: ldc2_w        #133
625: dcmpl
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #17
637: aload         28
639: invokestatic  #33
642: aload         30
644: invokestatic  #33
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: dload         31
661: invokevirtual #60
664: ldc           #15
666: invokevirtual #13
669: ldc2_w        #148
672: invokevirtual #60
675: ldc           #12
677: invokevirtual #13
680: invokevirtual #16
683: dload         31
685: ldc2_w        #148
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #17
700: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 11994
End line: 12000
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 101L, (-30.055369951229576d), (double) 1.07957466E9f, (-1024.0d), false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-30.055369951229576d) + "'", double6 == (-30.055369951229576d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #736
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #170
32: ldc2_w        #625
35: ldc2_w        #627
38: ldc2_w        #352
41: iconst_0
42: invokespecial #150
45: astore_1
46: aload_1
47: invokevirtual #94
50: dstore_2
51: new           #10
54: dup
55: invokespecial #11
58: ldc           #12
60: invokevirtual #13
63: dload_2
64: invokevirtual #60
67: ldc           #15
69: invokevirtual #13
72: ldc2_w        #625
75: invokevirtual #60
78: ldc           #12
80: invokevirtual #13
83: invokevirtual #16
86: dload_2
87: ldc2_w        #625
90: dcmpl
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #17
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 12003
End line: 12012
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation0 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = rotation0.getAxis();
        double double2 = rotation0.getQ0();
        org.junit.Assert.assertNotNull(rotation0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #737
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #309
28: astore_1
29: aload_1
30: invokevirtual #96
33: astore_2
34: aload_1
35: invokevirtual #241
38: dstore_3
39: aload_1
40: invokestatic  #33
43: aload_2
44: invokestatic  #33
47: new           #10
50: dup
51: invokespecial #11
54: ldc           #12
56: invokevirtual #13
59: dload_3
60: invokevirtual #60
63: ldc           #15
65: invokevirtual #13
68: dconst_1
69: invokevirtual #60
72: ldc           #12
74: invokevirtual #13
77: invokevirtual #16
80: dload_3
81: dconst_1
82: dcmpl
83: ifne          90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #17
94: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 12015
End line: 12075
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        double[][] doubleArray65 = rotation64.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation67 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(doubleArray65, 3.653529989684034E43d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(doubleArray65);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #738
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: aload         49
384: invokevirtual #222
387: astore        50
389: new           #27
392: dup
393: aload         50
395: ldc2_w        #739
398: invokespecial #30
401: astore        51
403: new           #10
406: dup
407: invokespecial #11
410: ldc           #12
412: invokevirtual #13
415: dload         4
417: invokevirtual #60
420: ldc           #15
422: invokevirtual #13
425: dconst_0
426: invokevirtual #60
429: ldc           #12
431: invokevirtual #13
434: invokevirtual #16
437: dload         4
439: dconst_0
440: dcmpl
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #17
452: new           #10
455: dup
456: invokespecial #11
459: ldc           #12
461: invokevirtual #13
464: dload         6
466: invokevirtual #60
469: ldc           #15
471: invokevirtual #13
474: dconst_0
475: invokevirtual #60
478: ldc           #12
480: invokevirtual #13
483: invokevirtual #16
486: dload         6
488: dconst_0
489: dcmpl
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #17
501: new           #10
504: dup
505: invokespecial #11
508: ldc           #12
510: invokevirtual #13
513: iload         8
515: invokevirtual #14
518: ldc           #15
520: invokevirtual #13
523: iconst_0
524: invokevirtual #14
527: ldc           #12
529: invokevirtual #13
532: invokevirtual #16
535: iload         8
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #17
548: new           #10
551: dup
552: invokespecial #11
555: ldc           #12
557: invokevirtual #13
560: dload         9
562: invokevirtual #60
565: ldc           #15
567: invokevirtual #13
570: ldc2_w        #167
573: invokevirtual #60
576: ldc           #12
578: invokevirtual #13
581: invokevirtual #16
584: dload         9
586: ldc2_w        #167
589: dcmpl
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         13
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: dconst_0
624: invokevirtual #60
627: ldc           #12
629: invokevirtual #13
632: invokevirtual #16
635: dload         13
637: dconst_0
638: dcmpl
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #17
650: new           #10
653: dup
654: invokespecial #11
657: ldc           #12
659: invokevirtual #13
662: dload         15
664: invokevirtual #60
667: ldc           #15
669: invokevirtual #13
672: ldc2_w        #61
675: invokevirtual #60
678: ldc           #12
680: invokevirtual #13
683: invokevirtual #16
686: dload         15
688: ldc2_w        #61
691: dcmpl
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #17
703: new           #10
706: dup
707: invokespecial #11
710: ldc           #12
712: invokevirtual #13
715: dload         19
717: invokevirtual #60
720: ldc           #15
722: invokevirtual #13
725: dconst_0
726: invokevirtual #60
729: ldc           #12
731: invokevirtual #13
734: invokevirtual #16
737: dload         19
739: dconst_0
740: dcmpl
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #17
752: new           #10
755: dup
756: invokespecial #11
759: ldc           #12
761: invokevirtual #13
764: dload         21
766: invokevirtual #60
769: ldc           #15
771: invokevirtual #13
774: ldc2_w        #61
777: invokevirtual #60
780: ldc           #12
782: invokevirtual #13
785: invokevirtual #16
788: dload         21
790: ldc2_w        #61
793: dcmpl
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #17
805: new           #10
808: dup
809: invokespecial #11
812: ldc           #12
814: invokevirtual #13
817: dload         23
819: invokevirtual #60
822: ldc           #15
824: invokevirtual #13
827: dconst_0
828: invokevirtual #60
831: ldc           #12
833: invokevirtual #13
836: invokevirtual #16
839: dload         23
841: dconst_0
842: dcmpl
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #17
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         28
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_0
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         28
890: dconst_0
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: new           #10
906: dup
907: invokespecial #11
910: ldc           #12
912: invokevirtual #13
915: dload         30
917: invokevirtual #60
920: ldc           #15
922: invokevirtual #13
925: dconst_0
926: invokevirtual #60
929: ldc           #12
931: invokevirtual #13
934: invokevirtual #16
937: dload         30
939: dconst_0
940: dcmpl
941: ifne          948
944: iconst_1
945: goto          949
948: iconst_0
949: invokestatic  #17
952: new           #10
955: dup
956: invokespecial #11
959: ldc           #12
961: invokevirtual #13
964: dload         35
966: invokevirtual #60
969: ldc           #15
971: invokevirtual #13
974: dconst_0
975: invokevirtual #60
978: ldc           #12
980: invokevirtual #13
983: invokevirtual #16
986: dload         35
988: dconst_0
989: dcmpl
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #17
1001: new           #10
1004: dup
1005: invokespecial #11
1008: ldc           #12
1010: invokevirtual #13
1013: dload         37
1015: invokevirtual #60
1018: ldc           #15
1020: invokevirtual #13
1023: dconst_0
1024: invokevirtual #60
1027: ldc           #12
1029: invokevirtual #13
1032: invokevirtual #16
1035: dload         37
1037: dconst_0
1038: dcmpl
1039: ifne          1046
1042: iconst_1
1043: goto          1047
1046: iconst_0
1047: invokestatic  #17
1050: new           #10
1053: dup
1054: invokespecial #11
1057: ldc           #12
1059: invokevirtual #13
1062: iload         39
1064: invokevirtual #14
1067: ldc           #15
1069: invokevirtual #13
1072: iconst_0
1073: invokevirtual #14
1076: ldc           #12
1078: invokevirtual #13
1081: invokevirtual #16
1084: iload         39
1086: ifne          1093
1089: iconst_1
1090: goto          1094
1093: iconst_0
1094: invokestatic  #17
1097: new           #10
1100: dup
1101: invokespecial #11
1104: ldc           #12
1106: invokevirtual #13
1109: dload         40
1111: invokevirtual #60
1114: ldc           #15
1116: invokevirtual #13
1119: dconst_0
1120: invokevirtual #60
1123: ldc           #12
1125: invokevirtual #13
1128: invokevirtual #16
1131: dload         40
1133: dconst_0
1134: dcmpl
1135: ifne          1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #17
1146: aload         42
1148: invokestatic  #33
1151: new           #10
1154: dup
1155: invokespecial #11
1158: ldc           #12
1160: invokevirtual #13
1163: dload         45
1165: invokevirtual #60
1168: ldc           #15
1170: invokevirtual #13
1173: dconst_0
1174: invokevirtual #60
1177: ldc           #12
1179: invokevirtual #13
1182: invokevirtual #16
1185: dload         45
1187: dconst_0
1188: dcmpl
1189: ifne          1196
1192: iconst_1
1193: goto          1197
1196: iconst_0
1197: invokestatic  #17
1200: aload         47
1202: invokestatic  #33
1205: aload         48
1207: invokestatic  #33
1210: aload         50
1212: invokestatic  #33
1215: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 12078
End line: 12160
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation84.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = rotation84.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Space space89 = vector3D88.getSpace();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(space89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #741
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         63
503: invokevirtual #139
506: dstore        65
508: aload         63
510: invokevirtual #96
513: astore        67
515: aload         67
517: invokevirtual #163
520: astore        68
522: aload         68
524: invokevirtual #51
527: astore        69
529: new           #10
532: dup
533: invokespecial #11
536: ldc           #12
538: invokevirtual #13
541: dload         4
543: invokevirtual #60
546: ldc           #15
548: invokevirtual #13
551: dconst_0
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         4
565: dconst_0
566: dcmpl
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #17
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: dload         6
592: invokevirtual #60
595: ldc           #15
597: invokevirtual #13
600: dconst_0
601: invokevirtual #60
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: dload         6
614: dconst_0
615: dcmpl
616: ifne          623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #17
627: new           #10
630: dup
631: invokespecial #11
634: ldc           #12
636: invokevirtual #13
639: dload         11
641: invokevirtual #60
644: ldc           #15
646: invokevirtual #13
649: dconst_0
650: invokevirtual #60
653: ldc           #12
655: invokevirtual #13
658: invokevirtual #16
661: dload         11
663: dconst_0
664: dcmpl
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #17
676: new           #10
679: dup
680: invokespecial #11
683: ldc           #12
685: invokevirtual #13
688: dload         13
690: invokevirtual #60
693: ldc           #15
695: invokevirtual #13
698: dconst_0
699: invokevirtual #60
702: ldc           #12
704: invokevirtual #13
707: invokevirtual #16
710: dload         13
712: dconst_0
713: dcmpl
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #17
725: new           #10
728: dup
729: invokespecial #11
732: ldc           #12
734: invokevirtual #13
737: iload         15
739: invokevirtual #14
742: ldc           #15
744: invokevirtual #13
747: iconst_0
748: invokevirtual #14
751: ldc           #12
753: invokevirtual #13
756: invokevirtual #16
759: iload         15
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         16
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: dconst_0
795: invokevirtual #60
798: ldc           #12
800: invokevirtual #13
803: invokevirtual #16
806: dload         16
808: dconst_0
809: dcmpl
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: aload         18
823: invokestatic  #33
826: new           #10
829: dup
830: invokespecial #11
833: ldc           #12
835: invokevirtual #13
838: dload         21
840: invokevirtual #60
843: ldc           #15
845: invokevirtual #13
848: dconst_0
849: invokevirtual #60
852: ldc           #12
854: invokevirtual #13
857: invokevirtual #16
860: dload         21
862: dconst_0
863: dcmpl
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #17
875: new           #10
878: dup
879: invokespecial #11
882: ldc           #12
884: invokevirtual #13
887: dload         25
889: invokevirtual #60
892: ldc           #15
894: invokevirtual #13
897: dconst_0
898: invokevirtual #60
901: ldc           #12
903: invokevirtual #13
906: invokevirtual #16
909: dload         25
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #17
924: new           #10
927: dup
928: invokespecial #11
931: ldc           #12
933: invokevirtual #13
936: dload         27
938: invokevirtual #60
941: ldc           #15
943: invokevirtual #13
946: ldc2_w        #61
949: invokevirtual #60
952: ldc           #12
954: invokevirtual #13
957: invokevirtual #16
960: dload         27
962: ldc2_w        #61
965: dcmpl
966: ifne          973
969: iconst_1
970: goto          974
973: iconst_0
974: invokestatic  #17
977: new           #10
980: dup
981: invokespecial #11
984: ldc           #12
986: invokevirtual #13
989: dload         31
991: invokevirtual #60
994: ldc           #15
996: invokevirtual #13
999: dconst_0
1000: invokevirtual #60
1003: ldc           #12
1005: invokevirtual #13
1008: invokevirtual #16
1011: dload         31
1013: dconst_0
1014: dcmpl
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #17
1026: new           #10
1029: dup
1030: invokespecial #11
1033: ldc           #12
1035: invokevirtual #13
1038: dload         33
1040: invokevirtual #60
1043: ldc           #15
1045: invokevirtual #13
1048: ldc2_w        #61
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         33
1064: ldc2_w        #61
1067: dcmpl
1068: ifne          1075
1071: iconst_1
1072: goto          1076
1075: iconst_0
1076: invokestatic  #17
1079: new           #10
1082: dup
1083: invokespecial #11
1086: ldc           #12
1088: invokevirtual #13
1091: dload         35
1093: invokevirtual #60
1096: ldc           #15
1098: invokevirtual #13
1101: dconst_0
1102: invokevirtual #60
1105: ldc           #12
1107: invokevirtual #13
1110: invokevirtual #16
1113: dload         35
1115: dconst_0
1116: dcmpl
1117: ifne          1124
1120: iconst_1
1121: goto          1125
1124: iconst_0
1125: invokestatic  #17
1128: new           #10
1131: dup
1132: invokespecial #11
1135: ldc           #12
1137: invokevirtual #13
1140: dload         40
1142: invokevirtual #60
1145: ldc           #15
1147: invokevirtual #13
1150: dconst_0
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         40
1164: dconst_0
1165: dcmpl
1166: ifne          1173
1169: iconst_1
1170: goto          1174
1173: iconst_0
1174: invokestatic  #17
1177: new           #10
1180: dup
1181: invokespecial #11
1184: ldc           #12
1186: invokevirtual #13
1189: dload         42
1191: invokevirtual #60
1194: ldc           #15
1196: invokevirtual #13
1199: dconst_0
1200: invokevirtual #60
1203: ldc           #12
1205: invokevirtual #13
1208: invokevirtual #16
1211: dload         42
1213: dconst_0
1214: dcmpl
1215: ifne          1222
1218: iconst_1
1219: goto          1223
1222: iconst_0
1223: invokestatic  #17
1226: new           #10
1229: dup
1230: invokespecial #11
1233: ldc           #12
1235: invokevirtual #13
1238: dload         47
1240: invokevirtual #60
1243: ldc           #15
1245: invokevirtual #13
1248: dconst_0
1249: invokevirtual #60
1252: ldc           #12
1254: invokevirtual #13
1257: invokevirtual #16
1260: dload         47
1262: dconst_0
1263: dcmpl
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #17
1275: new           #10
1278: dup
1279: invokespecial #11
1282: ldc           #12
1284: invokevirtual #13
1287: dload         49
1289: invokevirtual #60
1292: ldc           #15
1294: invokevirtual #13
1297: dconst_0
1298: invokevirtual #60
1301: ldc           #12
1303: invokevirtual #13
1306: invokevirtual #16
1309: dload         49
1311: dconst_0
1312: dcmpl
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #17
1324: new           #10
1327: dup
1328: invokespecial #11
1331: ldc           #12
1333: invokevirtual #13
1336: iload         51
1338: invokevirtual #14
1341: ldc           #15
1343: invokevirtual #13
1346: iconst_0
1347: invokevirtual #14
1350: ldc           #12
1352: invokevirtual #13
1355: invokevirtual #16
1358: iload         51
1360: ifne          1367
1363: iconst_1
1364: goto          1368
1367: iconst_0
1368: invokestatic  #17
1371: new           #10
1374: dup
1375: invokespecial #11
1378: ldc           #12
1380: invokevirtual #13
1383: dload         52
1385: invokevirtual #60
1388: ldc           #15
1390: invokevirtual #13
1393: dconst_0
1394: invokevirtual #60
1397: ldc           #12
1399: invokevirtual #13
1402: invokevirtual #16
1405: dload         52
1407: dconst_0
1408: dcmpl
1409: ifne          1416
1412: iconst_1
1413: goto          1417
1416: iconst_0
1417: invokestatic  #17
1420: aload         54
1422: invokestatic  #33
1425: new           #10
1428: dup
1429: invokespecial #11
1432: ldc           #12
1434: invokevirtual #13
1437: dload         57
1439: invokevirtual #60
1442: ldc           #15
1444: invokevirtual #13
1447: dconst_0
1448: invokevirtual #60
1451: ldc           #12
1453: invokevirtual #13
1456: invokevirtual #16
1459: dload         57
1461: dconst_0
1462: dcmpl
1463: ifne          1470
1466: iconst_1
1467: goto          1471
1470: iconst_0
1471: invokestatic  #17
1474: aload         59
1476: invokestatic  #33
1479: aload         60
1481: invokestatic  #33
1484: new           #10
1487: dup
1488: invokespecial #11
1491: ldc           #12
1493: invokevirtual #13
1496: dload         61
1498: invokevirtual #60
1501: ldc           #15
1503: invokevirtual #13
1506: ldc2_w        #63
1509: invokevirtual #60
1512: ldc           #12
1514: invokevirtual #13
1517: invokevirtual #16
1520: dload         61
1522: ldc2_w        #63
1525: dcmpl
1526: ifne          1533
1529: iconst_1
1530: goto          1534
1533: iconst_0
1534: invokestatic  #17
1537: aload         64
1539: invokestatic  #33
1542: new           #10
1545: dup
1546: invokespecial #11
1549: ldc           #12
1551: invokevirtual #13
1554: dload         65
1556: invokevirtual #60
1559: ldc           #15
1561: invokevirtual #13
1564: dconst_0
1565: invokevirtual #60
1568: ldc           #12
1570: invokevirtual #13
1573: invokevirtual #16
1576: dload         65
1578: dconst_0
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: aload         67
1593: invokestatic  #33
1596: aload         68
1598: invokestatic  #33
1601: aload         69
1603: invokestatic  #33
1606: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 12163
End line: 12171
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.079574528E9d + "'", double6 == 1.079574528E9d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 31.0d + "'", double7 == 31.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #742
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #241
48: dstore_2
49: aload_1
50: invokevirtual #139
53: dstore        4
55: new           #10
58: dup
59: invokespecial #11
62: ldc           #12
64: invokevirtual #13
67: dload_2
68: invokevirtual #60
71: ldc           #15
73: invokevirtual #13
76: ldc2_w        #271
79: invokevirtual #60
82: ldc           #12
84: invokevirtual #13
87: invokevirtual #16
90: dload_2
91: ldc2_w        #271
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #17
106: new           #10
109: dup
110: invokespecial #11
113: ldc           #12
115: invokevirtual #13
118: dload         4
120: invokevirtual #60
123: ldc           #15
125: invokevirtual #13
128: ldc2_w        #273
131: invokevirtual #60
134: ldc           #12
136: invokevirtual #13
139: invokevirtual #16
142: dload         4
144: ldc2_w        #273
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #17
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 12174
End line: 12218
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double18 = vector3D14.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D17);
        double double19 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D11, vector3D17);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double29 = vector3D25.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        double double30 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D22, vector3D28);
        boolean boolean31 = vector3D22.isInfinite();
        double double32 = vector3D11.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = vector3D22.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector34 = vector3D8.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D8, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation37 = rotation6.applyInverseTo(rotation36);
        double[][] doubleArray38 = rotation6.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException(localizable0, (java.lang.Object[]) doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = notARotationMatrixException39.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(euclidean3DVector34);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(doubleArray38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #743
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: ldc2_w        #146
34: ldc2_w        #72
37: ldc2_w        #148
40: dconst_1
41: iconst_0
42: invokespecial #150
45: astore_2
46: aload_2
47: invokevirtual #96
50: astore_3
51: getstatic     #126
54: astore        4
56: new           #43
59: dup
60: dconst_1
61: ldc2_w        #44
64: invokespecial #46
67: astore        5
69: new           #43
72: dup
73: dconst_1
74: ldc2_w        #44
77: invokespecial #46
80: astore        6
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        7
95: aload         6
97: aload         7
99: invokevirtual #47
102: dstore        8
104: aload         5
106: aload         7
108: invokestatic  #48
111: dstore        10
113: new           #43
116: dup
117: dconst_1
118: ldc2_w        #44
121: invokespecial #46
124: astore        12
126: new           #43
129: dup
130: dconst_1
131: ldc2_w        #44
134: invokespecial #46
137: astore        13
139: new           #43
142: dup
143: dconst_1
144: ldc2_w        #44
147: invokespecial #46
150: astore        14
152: aload         13
154: aload         14
156: invokevirtual #47
159: dstore        15
161: aload         12
163: aload         14
165: invokestatic  #48
168: dstore        17
170: aload         12
172: invokevirtual #49
175: istore        19
177: aload         5
179: aload         12
181: invokevirtual #50
184: dstore        20
186: aload         12
188: invokevirtual #54
191: astore        22
193: aload         4
195: aload         22
197: invokevirtual #55
200: astore        23
202: new           #27
205: dup
206: aload         4
208: ldc2_w        #72
211: invokespecial #103
214: astore        24
216: aload_2
217: aload         24
219: invokevirtual #474
222: astore        25
224: aload_2
225: invokevirtual #222
228: astore        26
230: new           #32
233: dup
234: aload_1
235: aload         26
237: checkcast     #248
240: invokespecial #732
243: astore        27
245: aload         27
247: ldc_w         #744
250: invokevirtual #745
253: astore        28
255: ldc_w         #746
258: invokestatic  #21
261: goto          266
264: astore        28
266: aload_3
267: invokestatic  #33
270: aload         4
272: invokestatic  #33
275: new           #10
278: dup
279: invokespecial #11
282: ldc           #12
284: invokevirtual #13
287: dload         8
289: invokevirtual #60
292: ldc           #15
294: invokevirtual #13
297: dconst_0
298: invokevirtual #60
301: ldc           #12
303: invokevirtual #13
306: invokevirtual #16
309: dload         8
311: dconst_0
312: dcmpl
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #17
324: new           #10
327: dup
328: invokespecial #11
331: ldc           #12
333: invokevirtual #13
336: dload         10
338: invokevirtual #60
341: ldc           #15
343: invokevirtual #13
346: dconst_0
347: invokevirtual #60
350: ldc           #12
352: invokevirtual #13
355: invokevirtual #16
358: dload         10
360: dconst_0
361: dcmpl
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #17
373: new           #10
376: dup
377: invokespecial #11
380: ldc           #12
382: invokevirtual #13
385: dload         15
387: invokevirtual #60
390: ldc           #15
392: invokevirtual #13
395: dconst_0
396: invokevirtual #60
399: ldc           #12
401: invokevirtual #13
404: invokevirtual #16
407: dload         15
409: dconst_0
410: dcmpl
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #17
422: new           #10
425: dup
426: invokespecial #11
429: ldc           #12
431: invokevirtual #13
434: dload         17
436: invokevirtual #60
439: ldc           #15
441: invokevirtual #13
444: dconst_0
445: invokevirtual #60
448: ldc           #12
450: invokevirtual #13
453: invokevirtual #16
456: dload         17
458: dconst_0
459: dcmpl
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #17
471: new           #10
474: dup
475: invokespecial #11
478: ldc           #12
480: invokevirtual #13
483: iload         19
485: invokevirtual #14
488: ldc           #15
490: invokevirtual #13
493: iconst_0
494: invokevirtual #14
497: ldc           #12
499: invokevirtual #13
502: invokevirtual #16
505: iload         19
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #17
518: new           #10
521: dup
522: invokespecial #11
525: ldc           #12
527: invokevirtual #13
530: dload         20
532: invokevirtual #60
535: ldc           #15
537: invokevirtual #13
540: dconst_0
541: invokevirtual #60
544: ldc           #12
546: invokevirtual #13
549: invokevirtual #16
552: dload         20
554: dconst_0
555: dcmpl
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #17
567: aload         22
569: invokestatic  #33
572: aload         23
574: invokestatic  #33
577: aload         25
579: invokestatic  #33
582: aload         26
584: invokestatic  #33
587: return
Exception table:
from    to  target type
245   261   264   Class java/lang/UnsupportedOperationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 12221
End line: 12294
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double12 = vector3D8.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D11);
        double double13 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D5, vector3D11);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double23 = vector3D19.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double24 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D16, vector3D22);
        boolean boolean25 = vector3D16.isInfinite();
        double double26 = vector3D5.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = vector3D16.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double34 = vector3D30.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D33);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = vector3D27.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = vector3D30.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation38 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D30, (double) (-1023));
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double48 = vector3D44.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double49 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D41, vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double57 = vector3D55.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = vector3D63.getDelta();
        double double66 = vector3D55.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double67 = vector3D47.distance1((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector68 = vector3D47.normalize();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = vector3D30.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = vector3D47.scalarMultiply((-0.8390715290764524d));
        double double72 = vector3D47.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector73 = vector3D47.getZero();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.053671212772351E-8d, vector3D1, 5.556986945999465E-24d, vector3D47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7345682747147468d + "'", double57 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.7345682747147468d + "'", double65 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(euclidean3DVector68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.6702668260599606d + "'", double72 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #748
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #43
30: dup
31: dconst_1
32: ldc2_w        #44
35: invokespecial #46
38: astore_2
39: new           #43
42: dup
43: dconst_1
44: ldc2_w        #44
47: invokespecial #46
50: astore_3
51: new           #43
54: dup
55: dconst_1
56: ldc2_w        #44
59: invokespecial #46
62: astore        4
64: aload_3
65: aload         4
67: invokevirtual #47
70: dstore        5
72: aload_2
73: aload         4
75: invokestatic  #48
78: dstore        7
80: new           #43
83: dup
84: dconst_1
85: ldc2_w        #44
88: invokespecial #46
91: astore        9
93: new           #43
96: dup
97: dconst_1
98: ldc2_w        #44
101: invokespecial #46
104: astore        10
106: new           #43
109: dup
110: dconst_1
111: ldc2_w        #44
114: invokespecial #46
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #47
126: dstore        12
128: aload         9
130: aload         11
132: invokestatic  #48
135: dstore        14
137: aload         9
139: invokevirtual #49
142: istore        16
144: aload_2
145: aload         9
147: invokevirtual #50
150: dstore        17
152: aload         9
154: invokevirtual #54
157: astore        19
159: new           #43
162: dup
163: dconst_1
164: ldc2_w        #44
167: invokespecial #46
170: astore        20
172: new           #43
175: dup
176: dconst_1
177: ldc2_w        #44
180: invokespecial #46
183: astore        21
185: aload         20
187: aload         21
189: invokevirtual #47
192: dstore        22
194: aload         19
196: aload         20
198: invokevirtual #55
201: astore        24
203: aload         20
205: invokevirtual #193
208: astore        25
210: new           #27
213: dup
214: aload         20
216: ldc2_w        #259
219: invokespecial #103
222: astore        26
224: new           #43
227: dup
228: dconst_1
229: ldc2_w        #44
232: invokespecial #46
235: astore        27
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        28
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        29
263: aload         28
265: aload         29
267: invokevirtual #47
270: dstore        30
272: aload         27
274: aload         29
276: invokestatic  #48
279: dstore        32
281: new           #43
284: dup
285: dconst_1
286: ldc2_w        #44
289: invokespecial #46
292: astore        34
294: new           #43
297: dup
298: dconst_1
299: ldc2_w        #44
302: invokespecial #46
305: astore        35
307: aload         34
309: aload         35
311: invokevirtual #47
314: dstore        36
316: aload         35
318: invokevirtual #52
321: dstore        38
323: new           #43
326: dup
327: dconst_1
328: ldc2_w        #44
331: invokespecial #46
334: astore        40
336: new           #43
339: dup
340: dconst_1
341: ldc2_w        #44
344: invokespecial #46
347: astore        41
349: aload         40
351: aload         41
353: invokevirtual #47
356: dstore        42
358: aload         41
360: invokevirtual #52
363: dstore        44
365: aload         35
367: aload         41
369: invokevirtual #53
372: dstore        46
374: aload         29
376: aload         35
378: invokevirtual #129
381: dstore        48
383: aload         29
385: invokevirtual #193
388: astore        50
390: aload         20
392: aload         29
394: invokevirtual #55
397: astore        51
399: aload         29
401: ldc2_w        #374
404: invokevirtual #107
407: astore        52
409: aload         29
411: invokevirtual #136
414: dstore        53
416: aload         29
418: invokevirtual #198
421: astore        55
423: new           #43
426: dup
427: ldc2_w        #188
430: aload_1
431: ldc2_w        #749
434: aload         29
436: invokespecial #130
439: astore        56
441: ldc           #20
443: invokestatic  #21
446: goto          451
449: astore        56
451: new           #10
454: dup
455: invokespecial #11
458: ldc           #12
460: invokevirtual #13
463: dload         5
465: invokevirtual #60
468: ldc           #15
470: invokevirtual #13
473: dconst_0
474: invokevirtual #60
477: ldc           #12
479: invokevirtual #13
482: invokevirtual #16
485: dload         5
487: dconst_0
488: dcmpl
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #17
500: new           #10
503: dup
504: invokespecial #11
507: ldc           #12
509: invokevirtual #13
512: dload         7
514: invokevirtual #60
517: ldc           #15
519: invokevirtual #13
522: dconst_0
523: invokevirtual #60
526: ldc           #12
528: invokevirtual #13
531: invokevirtual #16
534: dload         7
536: dconst_0
537: dcmpl
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #17
549: new           #10
552: dup
553: invokespecial #11
556: ldc           #12
558: invokevirtual #13
561: dload         12
563: invokevirtual #60
566: ldc           #15
568: invokevirtual #13
571: dconst_0
572: invokevirtual #60
575: ldc           #12
577: invokevirtual #13
580: invokevirtual #16
583: dload         12
585: dconst_0
586: dcmpl
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #17
598: new           #10
601: dup
602: invokespecial #11
605: ldc           #12
607: invokevirtual #13
610: dload         14
612: invokevirtual #60
615: ldc           #15
617: invokevirtual #13
620: dconst_0
621: invokevirtual #60
624: ldc           #12
626: invokevirtual #13
629: invokevirtual #16
632: dload         14
634: dconst_0
635: dcmpl
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #17
647: new           #10
650: dup
651: invokespecial #11
654: ldc           #12
656: invokevirtual #13
659: iload         16
661: invokevirtual #14
664: ldc           #15
666: invokevirtual #13
669: iconst_0
670: invokevirtual #14
673: ldc           #12
675: invokevirtual #13
678: invokevirtual #16
681: iload         16
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #17
694: new           #10
697: dup
698: invokespecial #11
701: ldc           #12
703: invokevirtual #13
706: dload         17
708: invokevirtual #60
711: ldc           #15
713: invokevirtual #13
716: dconst_0
717: invokevirtual #60
720: ldc           #12
722: invokevirtual #13
725: invokevirtual #16
728: dload         17
730: dconst_0
731: dcmpl
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #17
743: aload         19
745: invokestatic  #33
748: new           #10
751: dup
752: invokespecial #11
755: ldc           #12
757: invokevirtual #13
760: dload         22
762: invokevirtual #60
765: ldc           #15
767: invokevirtual #13
770: dconst_0
771: invokevirtual #60
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: dload         22
784: dconst_0
785: dcmpl
786: ifne          793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #17
797: aload         24
799: invokestatic  #33
802: aload         25
804: invokestatic  #33
807: new           #10
810: dup
811: invokespecial #11
814: ldc           #12
816: invokevirtual #13
819: dload         30
821: invokevirtual #60
824: ldc           #15
826: invokevirtual #13
829: dconst_0
830: invokevirtual #60
833: ldc           #12
835: invokevirtual #13
838: invokevirtual #16
841: dload         30
843: dconst_0
844: dcmpl
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #17
856: new           #10
859: dup
860: invokespecial #11
863: ldc           #12
865: invokevirtual #13
868: dload         32
870: invokevirtual #60
873: ldc           #15
875: invokevirtual #13
878: dconst_0
879: invokevirtual #60
882: ldc           #12
884: invokevirtual #13
887: invokevirtual #16
890: dload         32
892: dconst_0
893: dcmpl
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #17
905: new           #10
908: dup
909: invokespecial #11
912: ldc           #12
914: invokevirtual #13
917: dload         36
919: invokevirtual #60
922: ldc           #15
924: invokevirtual #13
927: dconst_0
928: invokevirtual #60
931: ldc           #12
933: invokevirtual #13
936: invokevirtual #16
939: dload         36
941: dconst_0
942: dcmpl
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #17
954: new           #10
957: dup
958: invokespecial #11
961: ldc           #12
963: invokevirtual #13
966: dload         38
968: invokevirtual #60
971: ldc           #15
973: invokevirtual #13
976: ldc2_w        #61
979: invokevirtual #60
982: ldc           #12
984: invokevirtual #13
987: invokevirtual #16
990: dload         38
992: ldc2_w        #61
995: dcmpl
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #17
1007: new           #10
1010: dup
1011: invokespecial #11
1014: ldc           #12
1016: invokevirtual #13
1019: dload         42
1021: invokevirtual #60
1024: ldc           #15
1026: invokevirtual #13
1029: dconst_0
1030: invokevirtual #60
1033: ldc           #12
1035: invokevirtual #13
1038: invokevirtual #16
1041: dload         42
1043: dconst_0
1044: dcmpl
1045: ifne          1052
1048: iconst_1
1049: goto          1053
1052: iconst_0
1053: invokestatic  #17
1056: new           #10
1059: dup
1060: invokespecial #11
1063: ldc           #12
1065: invokevirtual #13
1068: dload         44
1070: invokevirtual #60
1073: ldc           #15
1075: invokevirtual #13
1078: ldc2_w        #61
1081: invokevirtual #60
1084: ldc           #12
1086: invokevirtual #13
1089: invokevirtual #16
1092: dload         44
1094: ldc2_w        #61
1097: dcmpl
1098: ifne          1105
1101: iconst_1
1102: goto          1106
1105: iconst_0
1106: invokestatic  #17
1109: new           #10
1112: dup
1113: invokespecial #11
1116: ldc           #12
1118: invokevirtual #13
1121: dload         46
1123: invokevirtual #60
1126: ldc           #15
1128: invokevirtual #13
1131: dconst_0
1132: invokevirtual #60
1135: ldc           #12
1137: invokevirtual #13
1140: invokevirtual #16
1143: dload         46
1145: dconst_0
1146: dcmpl
1147: ifne          1154
1150: iconst_1
1151: goto          1155
1154: iconst_0
1155: invokestatic  #17
1158: new           #10
1161: dup
1162: invokespecial #11
1165: ldc           #12
1167: invokevirtual #13
1170: dload         48
1172: invokevirtual #60
1175: ldc           #15
1177: invokevirtual #13
1180: dconst_0
1181: invokevirtual #60
1184: ldc           #12
1186: invokevirtual #13
1189: invokevirtual #16
1192: dload         48
1194: dconst_0
1195: dcmpl
1196: ifne          1203
1199: iconst_1
1200: goto          1204
1203: iconst_0
1204: invokestatic  #17
1207: aload         50
1209: invokestatic  #33
1212: aload         51
1214: invokestatic  #33
1217: aload         52
1219: invokestatic  #33
1222: new           #10
1225: dup
1226: invokespecial #11
1229: ldc           #12
1231: invokevirtual #13
1234: dload         53
1236: invokevirtual #60
1239: ldc           #15
1241: invokevirtual #13
1244: ldc2_w        #79
1247: invokevirtual #60
1250: ldc           #12
1252: invokevirtual #13
1255: invokevirtual #16
1258: dload         53
1260: ldc2_w        #79
1263: dcmpl
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #17
1275: aload         55
1277: invokestatic  #33
1280: return
Exception table:
from    to  target type
423   446   449   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 12297
End line: 12308
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation2 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, (double) 1077805056);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #751
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: ldc2_w        #752
35: invokespecial #103
38: astore_2
39: ldc           #20
41: invokestatic  #21
44: goto          48
47: astore_2
48: return
Exception table:
from    to  target type
27    44    47   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 12311
End line: 12390
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        boolean boolean17 = vector3D8.isInfinite();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = vector3D8.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector19 = vector3D3.subtract(0.0d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D((double) 30, vector3D3);
        double double21 = vector3D3.getX();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation27 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = rotation27.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = rotation27.getAxis();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector30 = vector3D29.normalize();
        double double31 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.angle(vector3D3, vector3D29);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = vector3D45.negate();
        double double50 = vector3D49.getZ();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double60 = vector3D56.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D59);
        double double61 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D53, vector3D59);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double71 = vector3D67.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        double double72 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D64, vector3D70);
        boolean boolean73 = vector3D64.isInfinite();
        double double74 = vector3D53.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = vector3D64.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double82 = vector3D78.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D75.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        double double84 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D49, vector3D75);
        double double85 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(euclidean3DVector19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.4009692518823901d + "'", double21 == 0.4009692518823901d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(euclidean3DVector30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.983370962257916d + "'", double31 == 1.983370962257916d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.6702668260599606d) + "'", double50 == (-0.6702668260599606d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.6702668251336698d + "'", double85 == 0.6702668251336698d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #754
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: aload_1
38: invokevirtual #261
41: dstore_2
42: new           #43
45: dup
46: dconst_1
47: ldc2_w        #44
50: invokespecial #46
53: astore        4
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         4
92: aload         6
94: invokestatic  #48
97: dstore        9
99: aload         4
101: invokevirtual #49
104: istore        11
106: aload         4
108: invokevirtual #54
111: astore        12
113: aload_1
114: dconst_0
115: aload         12
117: invokevirtual #354
120: astore        13
122: new           #43
125: dup
126: ldc2_w        #121
129: aload_1
130: invokespecial #305
133: astore        14
135: aload_1
136: invokevirtual #99
139: dstore        15
141: new           #27
144: dup
145: ldc2_w        #146
148: ldc2_w        #72
151: ldc2_w        #148
154: dconst_1
155: iconst_0
156: invokespecial #150
159: astore        17
161: aload         17
163: invokevirtual #96
166: astore        18
168: aload         17
170: invokevirtual #96
173: astore        19
175: aload         19
177: invokevirtual #193
180: astore        20
182: aload_1
183: aload         19
185: invokestatic  #363
188: dstore        21
190: new           #43
193: dup
194: dconst_1
195: ldc2_w        #44
198: invokespecial #46
201: astore        23
203: new           #43
206: dup
207: dconst_1
208: ldc2_w        #44
211: invokespecial #46
214: astore        24
216: aload         23
218: aload         24
220: invokevirtual #47
223: dstore        25
225: aload         24
227: invokevirtual #52
230: dstore        27
232: new           #43
235: dup
236: dconst_1
237: ldc2_w        #44
240: invokespecial #46
243: astore        29
245: new           #43
248: dup
249: dconst_1
250: ldc2_w        #44
253: invokespecial #46
256: astore        30
258: aload         29
260: aload         30
262: invokevirtual #47
265: dstore        31
267: aload         30
269: invokevirtual #52
272: dstore        33
274: aload         24
276: aload         30
278: invokevirtual #53
281: dstore        35
283: aload         30
285: invokevirtual #54
288: astore        37
290: aload         37
292: invokevirtual #311
295: dstore        38
297: new           #43
300: dup
301: dconst_1
302: ldc2_w        #44
305: invokespecial #46
308: astore        40
310: new           #43
313: dup
314: dconst_1
315: ldc2_w        #44
318: invokespecial #46
321: astore        41
323: new           #43
326: dup
327: dconst_1
328: ldc2_w        #44
331: invokespecial #46
334: astore        42
336: aload         41
338: aload         42
340: invokevirtual #47
343: dstore        43
345: aload         40
347: aload         42
349: invokestatic  #48
352: dstore        45
354: new           #43
357: dup
358: dconst_1
359: ldc2_w        #44
362: invokespecial #46
365: astore        47
367: new           #43
370: dup
371: dconst_1
372: ldc2_w        #44
375: invokespecial #46
378: astore        48
380: new           #43
383: dup
384: dconst_1
385: ldc2_w        #44
388: invokespecial #46
391: astore        49
393: aload         48
395: aload         49
397: invokevirtual #47
400: dstore        50
402: aload         47
404: aload         49
406: invokestatic  #48
409: dstore        52
411: aload         47
413: invokevirtual #49
416: istore        54
418: aload         40
420: aload         47
422: invokevirtual #50
425: dstore        55
427: aload         47
429: invokevirtual #54
432: astore        57
434: new           #43
437: dup
438: dconst_1
439: ldc2_w        #44
442: invokespecial #46
445: astore        58
447: new           #43
450: dup
451: dconst_1
452: ldc2_w        #44
455: invokespecial #46
458: astore        59
460: aload         58
462: aload         59
464: invokevirtual #47
467: dstore        60
469: aload         57
471: aload         58
473: invokevirtual #55
476: astore        62
478: aload         37
480: aload         57
482: invokestatic  #128
485: dstore        63
487: aload         19
489: aload         37
491: invokevirtual #47
494: dstore        65
496: new           #10
499: dup
500: invokespecial #11
503: ldc           #12
505: invokevirtual #13
508: dload_2
509: invokevirtual #60
512: ldc           #15
514: invokevirtual #13
517: dconst_1
518: invokevirtual #60
521: ldc           #12
523: invokevirtual #13
526: invokevirtual #16
529: dload_2
530: dconst_1
531: dcmpl
532: ifne          539
535: iconst_1
536: goto          540
539: iconst_0
540: invokestatic  #17
543: new           #10
546: dup
547: invokespecial #11
550: ldc           #12
552: invokevirtual #13
555: dload         7
557: invokevirtual #60
560: ldc           #15
562: invokevirtual #13
565: dconst_0
566: invokevirtual #60
569: ldc           #12
571: invokevirtual #13
574: invokevirtual #16
577: dload         7
579: dconst_0
580: dcmpl
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #17
592: new           #10
595: dup
596: invokespecial #11
599: ldc           #12
601: invokevirtual #13
604: dload         9
606: invokevirtual #60
609: ldc           #15
611: invokevirtual #13
614: dconst_0
615: invokevirtual #60
618: ldc           #12
620: invokevirtual #13
623: invokevirtual #16
626: dload         9
628: dconst_0
629: dcmpl
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #17
641: new           #10
644: dup
645: invokespecial #11
648: ldc           #12
650: invokevirtual #13
653: iload         11
655: invokevirtual #14
658: ldc           #15
660: invokevirtual #13
663: iconst_0
664: invokevirtual #14
667: ldc           #12
669: invokevirtual #13
672: invokevirtual #16
675: iload         11
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #17
688: aload         12
690: invokestatic  #33
693: aload         13
695: invokestatic  #33
698: new           #10
701: dup
702: invokespecial #11
705: ldc           #12
707: invokevirtual #13
710: dload         15
712: invokevirtual #60
715: ldc           #15
717: invokevirtual #13
720: ldc2_w        #471
723: invokevirtual #60
726: ldc           #12
728: invokevirtual #13
731: invokevirtual #16
734: dload         15
736: ldc2_w        #471
739: dcmpl
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #17
751: aload         18
753: invokestatic  #33
756: aload         19
758: invokestatic  #33
761: aload         20
763: invokestatic  #33
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         21
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: ldc2_w        #575
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         21
804: ldc2_w        #575
807: dcmpl
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #17
819: new           #10
822: dup
823: invokespecial #11
826: ldc           #12
828: invokevirtual #13
831: dload         25
833: invokevirtual #60
836: ldc           #15
838: invokevirtual #13
841: dconst_0
842: invokevirtual #60
845: ldc           #12
847: invokevirtual #13
850: invokevirtual #16
853: dload         25
855: dconst_0
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         27
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: ldc2_w        #61
893: invokevirtual #60
896: ldc           #12
898: invokevirtual #13
901: invokevirtual #16
904: dload         27
906: ldc2_w        #61
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         31
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: dconst_0
944: invokevirtual #60
947: ldc           #12
949: invokevirtual #13
952: invokevirtual #16
955: dload         31
957: dconst_0
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         33
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: ldc2_w        #61
995: invokevirtual #60
998: ldc           #12
1000: invokevirtual #13
1003: invokevirtual #16
1006: dload         33
1008: ldc2_w        #61
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         35
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: dconst_0
1046: invokevirtual #60
1049: ldc           #12
1051: invokevirtual #13
1054: invokevirtual #16
1057: dload         35
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: aload         37
1074: invokestatic  #33
1077: new           #10
1080: dup
1081: invokespecial #11
1084: ldc           #12
1086: invokevirtual #13
1089: dload         38
1091: invokevirtual #60
1094: ldc           #15
1096: invokevirtual #13
1099: ldc2_w        #716
1102: invokevirtual #60
1105: ldc           #12
1107: invokevirtual #13
1110: invokevirtual #16
1113: dload         38
1115: ldc2_w        #716
1118: dcmpl
1119: ifne          1126
1122: iconst_1
1123: goto          1127
1126: iconst_0
1127: invokestatic  #17
1130: new           #10
1133: dup
1134: invokespecial #11
1137: ldc           #12
1139: invokevirtual #13
1142: dload         43
1144: invokevirtual #60
1147: ldc           #15
1149: invokevirtual #13
1152: dconst_0
1153: invokevirtual #60
1156: ldc           #12
1158: invokevirtual #13
1161: invokevirtual #16
1164: dload         43
1166: dconst_0
1167: dcmpl
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #17
1179: new           #10
1182: dup
1183: invokespecial #11
1186: ldc           #12
1188: invokevirtual #13
1191: dload         45
1193: invokevirtual #60
1196: ldc           #15
1198: invokevirtual #13
1201: dconst_0
1202: invokevirtual #60
1205: ldc           #12
1207: invokevirtual #13
1210: invokevirtual #16
1213: dload         45
1215: dconst_0
1216: dcmpl
1217: ifne          1224
1220: iconst_1
1221: goto          1225
1224: iconst_0
1225: invokestatic  #17
1228: new           #10
1231: dup
1232: invokespecial #11
1235: ldc           #12
1237: invokevirtual #13
1240: dload         50
1242: invokevirtual #60
1245: ldc           #15
1247: invokevirtual #13
1250: dconst_0
1251: invokevirtual #60
1254: ldc           #12
1256: invokevirtual #13
1259: invokevirtual #16
1262: dload         50
1264: dconst_0
1265: dcmpl
1266: ifne          1273
1269: iconst_1
1270: goto          1274
1273: iconst_0
1274: invokestatic  #17
1277: new           #10
1280: dup
1281: invokespecial #11
1284: ldc           #12
1286: invokevirtual #13
1289: dload         52
1291: invokevirtual #60
1294: ldc           #15
1296: invokevirtual #13
1299: dconst_0
1300: invokevirtual #60
1303: ldc           #12
1305: invokevirtual #13
1308: invokevirtual #16
1311: dload         52
1313: dconst_0
1314: dcmpl
1315: ifne          1322
1318: iconst_1
1319: goto          1323
1322: iconst_0
1323: invokestatic  #17
1326: new           #10
1329: dup
1330: invokespecial #11
1333: ldc           #12
1335: invokevirtual #13
1338: iload         54
1340: invokevirtual #14
1343: ldc           #15
1345: invokevirtual #13
1348: iconst_0
1349: invokevirtual #14
1352: ldc           #12
1354: invokevirtual #13
1357: invokevirtual #16
1360: iload         54
1362: ifne          1369
1365: iconst_1
1366: goto          1370
1369: iconst_0
1370: invokestatic  #17
1373: new           #10
1376: dup
1377: invokespecial #11
1380: ldc           #12
1382: invokevirtual #13
1385: dload         55
1387: invokevirtual #60
1390: ldc           #15
1392: invokevirtual #13
1395: dconst_0
1396: invokevirtual #60
1399: ldc           #12
1401: invokevirtual #13
1404: invokevirtual #16
1407: dload         55
1409: dconst_0
1410: dcmpl
1411: ifne          1418
1414: iconst_1
1415: goto          1419
1418: iconst_0
1419: invokestatic  #17
1422: aload         57
1424: invokestatic  #33
1427: new           #10
1430: dup
1431: invokespecial #11
1434: ldc           #12
1436: invokevirtual #13
1439: dload         60
1441: invokevirtual #60
1444: ldc           #15
1446: invokevirtual #13
1449: dconst_0
1450: invokevirtual #60
1453: ldc           #12
1455: invokevirtual #13
1458: invokevirtual #16
1461: dload         60
1463: dconst_0
1464: dcmpl
1465: ifne          1472
1468: iconst_1
1469: goto          1473
1472: iconst_0
1473: invokestatic  #17
1476: aload         62
1478: invokestatic  #33
1481: new           #10
1484: dup
1485: invokespecial #11
1488: ldc           #12
1490: invokevirtual #13
1493: dload         63
1495: invokevirtual #60
1498: ldc           #15
1500: invokevirtual #13
1503: dconst_0
1504: invokevirtual #60
1507: ldc           #12
1509: invokevirtual #13
1512: invokevirtual #16
1515: dload         63
1517: dconst_0
1518: dcmpl
1519: ifne          1526
1522: iconst_1
1523: goto          1527
1526: iconst_0
1527: invokestatic  #17
1530: new           #10
1533: dup
1534: invokespecial #11
1537: ldc           #12
1539: invokevirtual #13
1542: dload         65
1544: invokevirtual #60
1547: ldc           #15
1549: invokevirtual #13
1552: ldc2_w        #755
1555: invokevirtual #60
1558: ldc           #12
1560: invokevirtual #13
1563: invokevirtual #16
1566: dload         65
1568: ldc2_w        #755
1571: dcmpl
1572: ifne          1579
1575: iconst_1
1576: goto          1580
1579: iconst_0
1580: invokestatic  #17
1583: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 12393
End line: 12475
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        double[][] doubleArray88 = rotation85.getMatrix();
        double double89 = rotation85.getQ0();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0d) + "'", double89 == (-1.0d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #757
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #222
520: astore        69
522: aload         64
524: invokevirtual #241
527: dstore        70
529: new           #10
532: dup
533: invokespecial #11
536: ldc           #12
538: invokevirtual #13
541: dload         4
543: invokevirtual #60
546: ldc           #15
548: invokevirtual #13
551: dconst_0
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         4
565: dconst_0
566: dcmpl
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #17
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: dload         6
592: invokevirtual #60
595: ldc           #15
597: invokevirtual #13
600: dconst_0
601: invokevirtual #60
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: dload         6
614: dconst_0
615: dcmpl
616: ifne          623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #17
627: new           #10
630: dup
631: invokespecial #11
634: ldc           #12
636: invokevirtual #13
639: dload         11
641: invokevirtual #60
644: ldc           #15
646: invokevirtual #13
649: dconst_0
650: invokevirtual #60
653: ldc           #12
655: invokevirtual #13
658: invokevirtual #16
661: dload         11
663: dconst_0
664: dcmpl
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #17
676: new           #10
679: dup
680: invokespecial #11
683: ldc           #12
685: invokevirtual #13
688: dload         13
690: invokevirtual #60
693: ldc           #15
695: invokevirtual #13
698: dconst_0
699: invokevirtual #60
702: ldc           #12
704: invokevirtual #13
707: invokevirtual #16
710: dload         13
712: dconst_0
713: dcmpl
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #17
725: new           #10
728: dup
729: invokespecial #11
732: ldc           #12
734: invokevirtual #13
737: iload         15
739: invokevirtual #14
742: ldc           #15
744: invokevirtual #13
747: iconst_0
748: invokevirtual #14
751: ldc           #12
753: invokevirtual #13
756: invokevirtual #16
759: iload         15
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #17
772: new           #10
775: dup
776: invokespecial #11
779: ldc           #12
781: invokevirtual #13
784: dload         16
786: invokevirtual #60
789: ldc           #15
791: invokevirtual #13
794: dconst_0
795: invokevirtual #60
798: ldc           #12
800: invokevirtual #13
803: invokevirtual #16
806: dload         16
808: dconst_0
809: dcmpl
810: ifne          817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #17
821: aload         18
823: invokestatic  #33
826: new           #10
829: dup
830: invokespecial #11
833: ldc           #12
835: invokevirtual #13
838: dload         21
840: invokevirtual #60
843: ldc           #15
845: invokevirtual #13
848: dconst_0
849: invokevirtual #60
852: ldc           #12
854: invokevirtual #13
857: invokevirtual #16
860: dload         21
862: dconst_0
863: dcmpl
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #17
875: new           #10
878: dup
879: invokespecial #11
882: ldc           #12
884: invokevirtual #13
887: dload         25
889: invokevirtual #60
892: ldc           #15
894: invokevirtual #13
897: dconst_0
898: invokevirtual #60
901: ldc           #12
903: invokevirtual #13
906: invokevirtual #16
909: dload         25
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #17
924: new           #10
927: dup
928: invokespecial #11
931: ldc           #12
933: invokevirtual #13
936: dload         27
938: invokevirtual #60
941: ldc           #15
943: invokevirtual #13
946: ldc2_w        #61
949: invokevirtual #60
952: ldc           #12
954: invokevirtual #13
957: invokevirtual #16
960: dload         27
962: ldc2_w        #61
965: dcmpl
966: ifne          973
969: iconst_1
970: goto          974
973: iconst_0
974: invokestatic  #17
977: new           #10
980: dup
981: invokespecial #11
984: ldc           #12
986: invokevirtual #13
989: dload         31
991: invokevirtual #60
994: ldc           #15
996: invokevirtual #13
999: dconst_0
1000: invokevirtual #60
1003: ldc           #12
1005: invokevirtual #13
1008: invokevirtual #16
1011: dload         31
1013: dconst_0
1014: dcmpl
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #17
1026: new           #10
1029: dup
1030: invokespecial #11
1033: ldc           #12
1035: invokevirtual #13
1038: dload         33
1040: invokevirtual #60
1043: ldc           #15
1045: invokevirtual #13
1048: ldc2_w        #61
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         33
1064: ldc2_w        #61
1067: dcmpl
1068: ifne          1075
1071: iconst_1
1072: goto          1076
1075: iconst_0
1076: invokestatic  #17
1079: new           #10
1082: dup
1083: invokespecial #11
1086: ldc           #12
1088: invokevirtual #13
1091: dload         35
1093: invokevirtual #60
1096: ldc           #15
1098: invokevirtual #13
1101: dconst_0
1102: invokevirtual #60
1105: ldc           #12
1107: invokevirtual #13
1110: invokevirtual #16
1113: dload         35
1115: dconst_0
1116: dcmpl
1117: ifne          1124
1120: iconst_1
1121: goto          1125
1124: iconst_0
1125: invokestatic  #17
1128: new           #10
1131: dup
1132: invokespecial #11
1135: ldc           #12
1137: invokevirtual #13
1140: dload         40
1142: invokevirtual #60
1145: ldc           #15
1147: invokevirtual #13
1150: dconst_0
1151: invokevirtual #60
1154: ldc           #12
1156: invokevirtual #13
1159: invokevirtual #16
1162: dload         40
1164: dconst_0
1165: dcmpl
1166: ifne          1173
1169: iconst_1
1170: goto          1174
1173: iconst_0
1174: invokestatic  #17
1177: new           #10
1180: dup
1181: invokespecial #11
1184: ldc           #12
1186: invokevirtual #13
1189: dload         42
1191: invokevirtual #60
1194: ldc           #15
1196: invokevirtual #13
1199: dconst_0
1200: invokevirtual #60
1203: ldc           #12
1205: invokevirtual #13
1208: invokevirtual #16
1211: dload         42
1213: dconst_0
1214: dcmpl
1215: ifne          1222
1218: iconst_1
1219: goto          1223
1222: iconst_0
1223: invokestatic  #17
1226: new           #10
1229: dup
1230: invokespecial #11
1233: ldc           #12
1235: invokevirtual #13
1238: dload         47
1240: invokevirtual #60
1243: ldc           #15
1245: invokevirtual #13
1248: dconst_0
1249: invokevirtual #60
1252: ldc           #12
1254: invokevirtual #13
1257: invokevirtual #16
1260: dload         47
1262: dconst_0
1263: dcmpl
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #17
1275: new           #10
1278: dup
1279: invokespecial #11
1282: ldc           #12
1284: invokevirtual #13
1287: dload         49
1289: invokevirtual #60
1292: ldc           #15
1294: invokevirtual #13
1297: dconst_0
1298: invokevirtual #60
1301: ldc           #12
1303: invokevirtual #13
1306: invokevirtual #16
1309: dload         49
1311: dconst_0
1312: dcmpl
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #17
1324: new           #10
1327: dup
1328: invokespecial #11
1331: ldc           #12
1333: invokevirtual #13
1336: iload         51
1338: invokevirtual #14
1341: ldc           #15
1343: invokevirtual #13
1346: iconst_0
1347: invokevirtual #14
1350: ldc           #12
1352: invokevirtual #13
1355: invokevirtual #16
1358: iload         51
1360: ifne          1367
1363: iconst_1
1364: goto          1368
1367: iconst_0
1368: invokestatic  #17
1371: new           #10
1374: dup
1375: invokespecial #11
1378: ldc           #12
1380: invokevirtual #13
1383: dload         52
1385: invokevirtual #60
1388: ldc           #15
1390: invokevirtual #13
1393: dconst_0
1394: invokevirtual #60
1397: ldc           #12
1399: invokevirtual #13
1402: invokevirtual #16
1405: dload         52
1407: dconst_0
1408: dcmpl
1409: ifne          1416
1412: iconst_1
1413: goto          1417
1416: iconst_0
1417: invokestatic  #17
1420: aload         54
1422: invokestatic  #33
1425: new           #10
1428: dup
1429: invokespecial #11
1432: ldc           #12
1434: invokevirtual #13
1437: dload         57
1439: invokevirtual #60
1442: ldc           #15
1444: invokevirtual #13
1447: dconst_0
1448: invokevirtual #60
1451: ldc           #12
1453: invokevirtual #13
1456: invokevirtual #16
1459: dload         57
1461: dconst_0
1462: dcmpl
1463: ifne          1470
1466: iconst_1
1467: goto          1471
1470: iconst_0
1471: invokestatic  #17
1474: aload         59
1476: invokestatic  #33
1479: aload         60
1481: invokestatic  #33
1484: new           #10
1487: dup
1488: invokespecial #11
1491: ldc           #12
1493: invokevirtual #13
1496: dload         61
1498: invokevirtual #60
1501: ldc           #15
1503: invokevirtual #13
1506: ldc2_w        #63
1509: invokevirtual #60
1512: ldc           #12
1514: invokevirtual #13
1517: invokevirtual #16
1520: dload         61
1522: ldc2_w        #63
1525: dcmpl
1526: ifne          1533
1529: iconst_1
1530: goto          1534
1533: iconst_0
1534: invokestatic  #17
1537: aload         64
1539: invokestatic  #33
1542: new           #10
1545: dup
1546: invokespecial #11
1549: ldc           #12
1551: invokevirtual #13
1554: dload         65
1556: invokevirtual #60
1559: ldc           #15
1561: invokevirtual #13
1564: dconst_0
1565: invokevirtual #60
1568: ldc           #12
1570: invokevirtual #13
1573: invokevirtual #16
1576: dload         65
1578: dconst_0
1579: dcmpl
1580: ifne          1587
1583: iconst_1
1584: goto          1588
1587: iconst_0
1588: invokestatic  #17
1591: new           #10
1594: dup
1595: invokespecial #11
1598: ldc           #12
1600: invokevirtual #13
1603: dload         67
1605: invokevirtual #60
1608: ldc           #15
1610: invokevirtual #13
1613: dconst_0
1614: invokevirtual #60
1617: ldc           #12
1619: invokevirtual #13
1622: invokevirtual #16
1625: dload         67
1627: dconst_0
1628: dcmpl
1629: ifne          1636
1632: iconst_1
1633: goto          1637
1636: iconst_0
1637: invokestatic  #17
1640: aload         69
1642: invokestatic  #33
1645: new           #10
1648: dup
1649: invokespecial #11
1652: ldc           #12
1654: invokevirtual #13
1657: dload         70
1659: invokevirtual #60
1662: ldc           #15
1664: invokevirtual #13
1667: ldc2_w        #66
1670: invokevirtual #60
1673: ldc           #12
1675: invokevirtual #13
1678: invokevirtual #16
1681: dload         70
1683: ldc2_w        #66
1686: dcmpl
1687: ifne          1694
1690: iconst_1
1691: goto          1695
1694: iconst_0
1695: invokestatic  #17
1698: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 12478
End line: 12540
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation((double) 9700L, 1.053671212772351E-8d, (-0.7853981633974483d), (double) 3, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double12 = vector3D8.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D11);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        double double64 = vector3D11.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double68 = vector3D67.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector69 = vector3D62.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation71 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D67, 3.6535299896840334E43d);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation73 = rotation5.applyTo(rotation71);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0000000000000002d + "'", double64 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.6702668260599606d + "'", double68 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector69);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.6405902461256647d + "'", double72 == 0.6405902461256647d);
        org.junit.Assert.assertNotNull(rotation73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #758
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #186
32: ldc2_w        #188
35: ldc2_w        #101
38: ldc2_w        #190
41: iconst_0
42: invokespecial #150
45: astore_1
46: new           #43
49: dup
50: dconst_1
51: ldc2_w        #44
54: invokespecial #46
57: astore_2
58: new           #43
61: dup
62: dconst_1
63: ldc2_w        #44
66: invokespecial #46
69: astore_3
70: aload_2
71: aload_3
72: invokevirtual #47
75: dstore        4
77: new           #43
80: dup
81: dconst_1
82: ldc2_w        #44
85: invokespecial #46
88: astore        6
90: new           #43
93: dup
94: dconst_1
95: ldc2_w        #44
98: invokespecial #46
101: astore        7
103: aload         6
105: aload         7
107: invokevirtual #47
110: dstore        8
112: aload         7
114: invokevirtual #52
117: dstore        10
119: new           #43
122: dup
123: dconst_1
124: ldc2_w        #44
127: invokespecial #46
130: astore        12
132: new           #43
135: dup
136: dconst_1
137: ldc2_w        #44
140: invokespecial #46
143: astore        13
145: aload         12
147: aload         13
149: invokevirtual #47
152: dstore        14
154: aload         13
156: invokevirtual #52
159: dstore        16
161: aload         7
163: aload         13
165: invokevirtual #53
168: dstore        18
170: new           #43
173: dup
174: dconst_1
175: ldc2_w        #44
178: invokespecial #46
181: astore        20
183: new           #43
186: dup
187: dconst_1
188: ldc2_w        #44
191: invokespecial #46
194: astore        21
196: new           #43
199: dup
200: dconst_1
201: ldc2_w        #44
204: invokespecial #46
207: astore        22
209: aload         21
211: aload         22
213: invokevirtual #47
216: dstore        23
218: aload         20
220: aload         22
222: invokestatic  #48
225: dstore        25
227: new           #43
230: dup
231: dconst_1
232: ldc2_w        #44
235: invokespecial #46
238: astore        27
240: new           #43
243: dup
244: dconst_1
245: ldc2_w        #44
248: invokespecial #46
251: astore        28
253: new           #43
256: dup
257: dconst_1
258: ldc2_w        #44
261: invokespecial #46
264: astore        29
266: aload         28
268: aload         29
270: invokevirtual #47
273: dstore        30
275: aload         27
277: aload         29
279: invokestatic  #48
282: dstore        32
284: aload         27
286: invokevirtual #49
289: istore        34
291: aload         20
293: aload         27
295: invokevirtual #50
298: dstore        35
300: aload         27
302: invokevirtual #54
305: astore        37
307: new           #43
310: dup
311: dconst_1
312: ldc2_w        #44
315: invokespecial #46
318: astore        38
320: new           #43
323: dup
324: dconst_1
325: ldc2_w        #44
328: invokespecial #46
331: astore        39
333: aload         38
335: aload         39
337: invokevirtual #47
340: dstore        40
342: aload         37
344: aload         38
346: invokevirtual #55
349: astore        42
351: aload         7
353: aload         42
355: invokevirtual #55
358: astore        43
360: aload_3
361: aload         42
363: invokevirtual #53
366: dstore        44
368: new           #43
371: dup
372: dconst_1
373: ldc2_w        #44
376: invokespecial #46
379: astore        46
381: aload         46
383: invokevirtual #136
386: dstore        47
388: aload         42
390: aload         46
392: invokevirtual #109
395: astore        49
397: new           #27
400: dup
401: aload         46
403: ldc2_w        #137
406: invokespecial #103
409: astore        50
411: aload         50
413: invokevirtual #241
416: dstore        51
418: aload_1
419: aload         50
421: invokevirtual #160
424: astore        53
426: new           #10
429: dup
430: invokespecial #11
433: ldc           #12
435: invokevirtual #13
438: dload         4
440: invokevirtual #60
443: ldc           #15
445: invokevirtual #13
448: dconst_0
449: invokevirtual #60
452: ldc           #12
454: invokevirtual #13
457: invokevirtual #16
460: dload         4
462: dconst_0
463: dcmpl
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #17
475: new           #10
478: dup
479: invokespecial #11
482: ldc           #12
484: invokevirtual #13
487: dload         8
489: invokevirtual #60
492: ldc           #15
494: invokevirtual #13
497: dconst_0
498: invokevirtual #60
501: ldc           #12
503: invokevirtual #13
506: invokevirtual #16
509: dload         8
511: dconst_0
512: dcmpl
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #17
524: new           #10
527: dup
528: invokespecial #11
531: ldc           #12
533: invokevirtual #13
536: dload         10
538: invokevirtual #60
541: ldc           #15
543: invokevirtual #13
546: ldc2_w        #61
549: invokevirtual #60
552: ldc           #12
554: invokevirtual #13
557: invokevirtual #16
560: dload         10
562: ldc2_w        #61
565: dcmpl
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #17
577: new           #10
580: dup
581: invokespecial #11
584: ldc           #12
586: invokevirtual #13
589: dload         14
591: invokevirtual #60
594: ldc           #15
596: invokevirtual #13
599: dconst_0
600: invokevirtual #60
603: ldc           #12
605: invokevirtual #13
608: invokevirtual #16
611: dload         14
613: dconst_0
614: dcmpl
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #17
626: new           #10
629: dup
630: invokespecial #11
633: ldc           #12
635: invokevirtual #13
638: dload         16
640: invokevirtual #60
643: ldc           #15
645: invokevirtual #13
648: ldc2_w        #61
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         16
664: ldc2_w        #61
667: dcmpl
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #17
679: new           #10
682: dup
683: invokespecial #11
686: ldc           #12
688: invokevirtual #13
691: dload         18
693: invokevirtual #60
696: ldc           #15
698: invokevirtual #13
701: dconst_0
702: invokevirtual #60
705: ldc           #12
707: invokevirtual #13
710: invokevirtual #16
713: dload         18
715: dconst_0
716: dcmpl
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #17
728: new           #10
731: dup
732: invokespecial #11
735: ldc           #12
737: invokevirtual #13
740: dload         23
742: invokevirtual #60
745: ldc           #15
747: invokevirtual #13
750: dconst_0
751: invokevirtual #60
754: ldc           #12
756: invokevirtual #13
759: invokevirtual #16
762: dload         23
764: dconst_0
765: dcmpl
766: ifne          773
769: iconst_1
770: goto          774
773: iconst_0
774: invokestatic  #17
777: new           #10
780: dup
781: invokespecial #11
784: ldc           #12
786: invokevirtual #13
789: dload         25
791: invokevirtual #60
794: ldc           #15
796: invokevirtual #13
799: dconst_0
800: invokevirtual #60
803: ldc           #12
805: invokevirtual #13
808: invokevirtual #16
811: dload         25
813: dconst_0
814: dcmpl
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #17
826: new           #10
829: dup
830: invokespecial #11
833: ldc           #12
835: invokevirtual #13
838: dload         30
840: invokevirtual #60
843: ldc           #15
845: invokevirtual #13
848: dconst_0
849: invokevirtual #60
852: ldc           #12
854: invokevirtual #13
857: invokevirtual #16
860: dload         30
862: dconst_0
863: dcmpl
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #17
875: new           #10
878: dup
879: invokespecial #11
882: ldc           #12
884: invokevirtual #13
887: dload         32
889: invokevirtual #60
892: ldc           #15
894: invokevirtual #13
897: dconst_0
898: invokevirtual #60
901: ldc           #12
903: invokevirtual #13
906: invokevirtual #16
909: dload         32
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #17
924: new           #10
927: dup
928: invokespecial #11
931: ldc           #12
933: invokevirtual #13
936: iload         34
938: invokevirtual #14
941: ldc           #15
943: invokevirtual #13
946: iconst_0
947: invokevirtual #14
950: ldc           #12
952: invokevirtual #13
955: invokevirtual #16
958: iload         34
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #17
971: new           #10
974: dup
975: invokespecial #11
978: ldc           #12
980: invokevirtual #13
983: dload         35
985: invokevirtual #60
988: ldc           #15
990: invokevirtual #13
993: dconst_0
994: invokevirtual #60
997: ldc           #12
999: invokevirtual #13
1002: invokevirtual #16
1005: dload         35
1007: dconst_0
1008: dcmpl
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #17
1020: aload         37
1022: invokestatic  #33
1025: new           #10
1028: dup
1029: invokespecial #11
1032: ldc           #12
1034: invokevirtual #13
1037: dload         40
1039: invokevirtual #60
1042: ldc           #15
1044: invokevirtual #13
1047: dconst_0
1048: invokevirtual #60
1051: ldc           #12
1053: invokevirtual #13
1056: invokevirtual #16
1059: dload         40
1061: dconst_0
1062: dcmpl
1063: ifne          1070
1066: iconst_1
1067: goto          1071
1070: iconst_0
1071: invokestatic  #17
1074: aload         42
1076: invokestatic  #33
1079: aload         43
1081: invokestatic  #33
1084: new           #10
1087: dup
1088: invokespecial #11
1091: ldc           #12
1093: invokevirtual #13
1096: dload         44
1098: invokevirtual #60
1101: ldc           #15
1103: invokevirtual #13
1106: ldc2_w        #63
1109: invokevirtual #60
1112: ldc           #12
1114: invokevirtual #13
1117: invokevirtual #16
1120: dload         44
1122: ldc2_w        #63
1125: dcmpl
1126: ifne          1133
1129: iconst_1
1130: goto          1134
1133: iconst_0
1134: invokestatic  #17
1137: new           #10
1140: dup
1141: invokespecial #11
1144: ldc           #12
1146: invokevirtual #13
1149: dload         47
1151: invokevirtual #60
1154: ldc           #15
1156: invokevirtual #13
1159: ldc2_w        #79
1162: invokevirtual #60
1165: ldc           #12
1167: invokevirtual #13
1170: invokevirtual #16
1173: dload         47
1175: ldc2_w        #79
1178: dcmpl
1179: ifne          1186
1182: iconst_1
1183: goto          1187
1186: iconst_0
1187: invokestatic  #17
1190: aload         49
1192: invokestatic  #33
1195: new           #10
1198: dup
1199: invokespecial #11
1202: ldc           #12
1204: invokevirtual #13
1207: dload         51
1209: invokevirtual #60
1212: ldc           #15
1214: invokevirtual #13
1217: ldc2_w        #404
1220: invokevirtual #60
1223: ldc           #12
1225: invokevirtual #13
1228: invokevirtual #16
1231: dload         51
1233: ldc2_w        #404
1236: dcmpl
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #17
1248: aload         53
1250: invokestatic  #33
1253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 12543
End line: 12631
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D4 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double11 = vector3D7.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D10);
        double double12 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D4, vector3D10);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double22 = vector3D18.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        double double23 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D15, vector3D21);
        boolean boolean24 = vector3D15.isInfinite();
        double double25 = vector3D4.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        org.apache.commons.math.geometry.Space space26 = vector3D15.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double40 = vector3D36.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D39);
        double double41 = vector3D39.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double48 = vector3D44.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double49 = vector3D47.getDelta();
        double double50 = vector3D39.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D59 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double60 = vector3D56.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D59);
        double double61 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D53, vector3D59);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D70 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double71 = vector3D67.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D70);
        double double72 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D64, vector3D70);
        boolean boolean73 = vector3D64.isInfinite();
        double double74 = vector3D53.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = vector3D64.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double82 = vector3D78.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D75.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D84 = vector3D39.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        double double85 = vector3D32.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation86 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D15, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation87 = rotation86.revert();
        double[][] doubleArray88 = rotation87.getMatrix();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = rotation87.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = org.apache.commons.math.geometry.euclidean.threed.Rotation.IDENTITY;
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation91 = rotation87.applyTo(rotation90);
        double[][] doubleArray92 = rotation87.getMatrix();
        org.apache.commons.math.exception.NullArgumentException nullArgumentException93 = new org.apache.commons.math.exception.NullArgumentException(localizable1, (java.lang.Object[]) doubleArray92);
        org.apache.commons.math.exception.MathArithmeticException mathArithmeticException94 = new org.apache.commons.math.exception.MathArithmeticException(localizable0, (java.lang.Object[]) doubleArray92);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(space26);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.7345682747147468d + "'", double41 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.7345682747147468d + "'", double49 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0000000000000002d + "'", double85 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(doubleArray92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #759
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_3
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore        4
54: new           #43
57: dup
58: dconst_1
59: ldc2_w        #44
62: invokespecial #46
65: astore        5
67: aload         4
69: aload         5
71: invokevirtual #47
74: dstore        6
76: aload_3
77: aload         5
79: invokestatic  #48
82: dstore        8
84: new           #43
87: dup
88: dconst_1
89: ldc2_w        #44
92: invokespecial #46
95: astore        10
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         10
134: aload         12
136: invokestatic  #48
139: dstore        15
141: aload         10
143: invokevirtual #49
146: istore        17
148: aload_3
149: aload         10
151: invokevirtual #50
154: dstore        18
156: aload         10
158: invokevirtual #51
161: astore        20
163: new           #43
166: dup
167: dconst_1
168: ldc2_w        #44
171: invokespecial #46
174: astore        21
176: new           #43
179: dup
180: dconst_1
181: ldc2_w        #44
184: invokespecial #46
187: astore        22
189: aload         21
191: aload         22
193: invokevirtual #47
196: dstore        23
198: new           #43
201: dup
202: dconst_1
203: ldc2_w        #44
206: invokespecial #46
209: astore        25
211: new           #43
214: dup
215: dconst_1
216: ldc2_w        #44
219: invokespecial #46
222: astore        26
224: aload         25
226: aload         26
228: invokevirtual #47
231: dstore        27
233: aload         26
235: invokevirtual #52
238: dstore        29
240: new           #43
243: dup
244: dconst_1
245: ldc2_w        #44
248: invokespecial #46
251: astore        31
253: new           #43
256: dup
257: dconst_1
258: ldc2_w        #44
261: invokespecial #46
264: astore        32
266: aload         31
268: aload         32
270: invokevirtual #47
273: dstore        33
275: aload         32
277: invokevirtual #52
280: dstore        35
282: aload         26
284: aload         32
286: invokevirtual #53
289: dstore        37
291: new           #43
294: dup
295: dconst_1
296: ldc2_w        #44
299: invokespecial #46
302: astore        39
304: new           #43
307: dup
308: dconst_1
309: ldc2_w        #44
312: invokespecial #46
315: astore        40
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        41
330: aload         40
332: aload         41
334: invokevirtual #47
337: dstore        42
339: aload         39
341: aload         41
343: invokestatic  #48
346: dstore        44
348: new           #43
351: dup
352: dconst_1
353: ldc2_w        #44
356: invokespecial #46
359: astore        46
361: new           #43
364: dup
365: dconst_1
366: ldc2_w        #44
369: invokespecial #46
372: astore        47
374: new           #43
377: dup
378: dconst_1
379: ldc2_w        #44
382: invokespecial #46
385: astore        48
387: aload         47
389: aload         48
391: invokevirtual #47
394: dstore        49
396: aload         46
398: aload         48
400: invokestatic  #48
403: dstore        51
405: aload         46
407: invokevirtual #49
410: istore        53
412: aload         39
414: aload         46
416: invokevirtual #50
419: dstore        54
421: aload         46
423: invokevirtual #54
426: astore        56
428: new           #43
431: dup
432: dconst_1
433: ldc2_w        #44
436: invokespecial #46
439: astore        57
441: new           #43
444: dup
445: dconst_1
446: ldc2_w        #44
449: invokespecial #46
452: astore        58
454: aload         57
456: aload         58
458: invokevirtual #47
461: dstore        59
463: aload         56
465: aload         57
467: invokevirtual #55
470: astore        61
472: aload         26
474: aload         61
476: invokevirtual #55
479: astore        62
481: aload         22
483: aload         61
485: invokevirtual #53
488: dstore        63
490: new           #27
493: dup
494: aload         10
496: aload         22
498: invokespecial #56
501: astore        65
503: aload         65
505: invokevirtual #93
508: astore        66
510: aload         66
512: invokevirtual #222
515: astore        67
517: aload         66
519: invokevirtual #96
522: astore        68
524: getstatic     #309
527: astore        69
529: aload         66
531: aload         69
533: invokevirtual #160
536: astore        70
538: aload         66
540: invokevirtual #222
543: astore        71
545: new           #263
548: dup
549: aload_2
550: aload         71
552: checkcast     #248
555: invokespecial #264
558: astore        72
560: new           #441
563: dup
564: aload_1
565: aload         71
567: checkcast     #248
570: invokespecial #442
573: astore        73
575: new           #10
578: dup
579: invokespecial #11
582: ldc           #12
584: invokevirtual #13
587: dload         6
589: invokevirtual #60
592: ldc           #15
594: invokevirtual #13
597: dconst_0
598: invokevirtual #60
601: ldc           #12
603: invokevirtual #13
606: invokevirtual #16
609: dload         6
611: dconst_0
612: dcmpl
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #17
624: new           #10
627: dup
628: invokespecial #11
631: ldc           #12
633: invokevirtual #13
636: dload         8
638: invokevirtual #60
641: ldc           #15
643: invokevirtual #13
646: dconst_0
647: invokevirtual #60
650: ldc           #12
652: invokevirtual #13
655: invokevirtual #16
658: dload         8
660: dconst_0
661: dcmpl
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #17
673: new           #10
676: dup
677: invokespecial #11
680: ldc           #12
682: invokevirtual #13
685: dload         13
687: invokevirtual #60
690: ldc           #15
692: invokevirtual #13
695: dconst_0
696: invokevirtual #60
699: ldc           #12
701: invokevirtual #13
704: invokevirtual #16
707: dload         13
709: dconst_0
710: dcmpl
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #17
722: new           #10
725: dup
726: invokespecial #11
729: ldc           #12
731: invokevirtual #13
734: dload         15
736: invokevirtual #60
739: ldc           #15
741: invokevirtual #13
744: dconst_0
745: invokevirtual #60
748: ldc           #12
750: invokevirtual #13
753: invokevirtual #16
756: dload         15
758: dconst_0
759: dcmpl
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #17
771: new           #10
774: dup
775: invokespecial #11
778: ldc           #12
780: invokevirtual #13
783: iload         17
785: invokevirtual #14
788: ldc           #15
790: invokevirtual #13
793: iconst_0
794: invokevirtual #14
797: ldc           #12
799: invokevirtual #13
802: invokevirtual #16
805: iload         17
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #17
818: new           #10
821: dup
822: invokespecial #11
825: ldc           #12
827: invokevirtual #13
830: dload         18
832: invokevirtual #60
835: ldc           #15
837: invokevirtual #13
840: dconst_0
841: invokevirtual #60
844: ldc           #12
846: invokevirtual #13
849: invokevirtual #16
852: dload         18
854: dconst_0
855: dcmpl
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #17
867: aload         20
869: invokestatic  #33
872: new           #10
875: dup
876: invokespecial #11
879: ldc           #12
881: invokevirtual #13
884: dload         23
886: invokevirtual #60
889: ldc           #15
891: invokevirtual #13
894: dconst_0
895: invokevirtual #60
898: ldc           #12
900: invokevirtual #13
903: invokevirtual #16
906: dload         23
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #17
921: new           #10
924: dup
925: invokespecial #11
928: ldc           #12
930: invokevirtual #13
933: dload         27
935: invokevirtual #60
938: ldc           #15
940: invokevirtual #13
943: dconst_0
944: invokevirtual #60
947: ldc           #12
949: invokevirtual #13
952: invokevirtual #16
955: dload         27
957: dconst_0
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         29
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: ldc2_w        #61
995: invokevirtual #60
998: ldc           #12
1000: invokevirtual #13
1003: invokevirtual #16
1006: dload         29
1008: ldc2_w        #61
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: new           #10
1026: dup
1027: invokespecial #11
1030: ldc           #12
1032: invokevirtual #13
1035: dload         33
1037: invokevirtual #60
1040: ldc           #15
1042: invokevirtual #13
1045: dconst_0
1046: invokevirtual #60
1049: ldc           #12
1051: invokevirtual #13
1054: invokevirtual #16
1057: dload         33
1059: dconst_0
1060: dcmpl
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #17
1072: new           #10
1075: dup
1076: invokespecial #11
1079: ldc           #12
1081: invokevirtual #13
1084: dload         35
1086: invokevirtual #60
1089: ldc           #15
1091: invokevirtual #13
1094: ldc2_w        #61
1097: invokevirtual #60
1100: ldc           #12
1102: invokevirtual #13
1105: invokevirtual #16
1108: dload         35
1110: ldc2_w        #61
1113: dcmpl
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #17
1125: new           #10
1128: dup
1129: invokespecial #11
1132: ldc           #12
1134: invokevirtual #13
1137: dload         37
1139: invokevirtual #60
1142: ldc           #15
1144: invokevirtual #13
1147: dconst_0
1148: invokevirtual #60
1151: ldc           #12
1153: invokevirtual #13
1156: invokevirtual #16
1159: dload         37
1161: dconst_0
1162: dcmpl
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #17
1174: new           #10
1177: dup
1178: invokespecial #11
1181: ldc           #12
1183: invokevirtual #13
1186: dload         42
1188: invokevirtual #60
1191: ldc           #15
1193: invokevirtual #13
1196: dconst_0
1197: invokevirtual #60
1200: ldc           #12
1202: invokevirtual #13
1205: invokevirtual #16
1208: dload         42
1210: dconst_0
1211: dcmpl
1212: ifne          1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #17
1223: new           #10
1226: dup
1227: invokespecial #11
1230: ldc           #12
1232: invokevirtual #13
1235: dload         44
1237: invokevirtual #60
1240: ldc           #15
1242: invokevirtual #13
1245: dconst_0
1246: invokevirtual #60
1249: ldc           #12
1251: invokevirtual #13
1254: invokevirtual #16
1257: dload         44
1259: dconst_0
1260: dcmpl
1261: ifne          1268
1264: iconst_1
1265: goto          1269
1268: iconst_0
1269: invokestatic  #17
1272: new           #10
1275: dup
1276: invokespecial #11
1279: ldc           #12
1281: invokevirtual #13
1284: dload         49
1286: invokevirtual #60
1289: ldc           #15
1291: invokevirtual #13
1294: dconst_0
1295: invokevirtual #60
1298: ldc           #12
1300: invokevirtual #13
1303: invokevirtual #16
1306: dload         49
1308: dconst_0
1309: dcmpl
1310: ifne          1317
1313: iconst_1
1314: goto          1318
1317: iconst_0
1318: invokestatic  #17
1321: new           #10
1324: dup
1325: invokespecial #11
1328: ldc           #12
1330: invokevirtual #13
1333: dload         51
1335: invokevirtual #60
1338: ldc           #15
1340: invokevirtual #13
1343: dconst_0
1344: invokevirtual #60
1347: ldc           #12
1349: invokevirtual #13
1352: invokevirtual #16
1355: dload         51
1357: dconst_0
1358: dcmpl
1359: ifne          1366
1362: iconst_1
1363: goto          1367
1366: iconst_0
1367: invokestatic  #17
1370: new           #10
1373: dup
1374: invokespecial #11
1377: ldc           #12
1379: invokevirtual #13
1382: iload         53
1384: invokevirtual #14
1387: ldc           #15
1389: invokevirtual #13
1392: iconst_0
1393: invokevirtual #14
1396: ldc           #12
1398: invokevirtual #13
1401: invokevirtual #16
1404: iload         53
1406: ifne          1413
1409: iconst_1
1410: goto          1414
1413: iconst_0
1414: invokestatic  #17
1417: new           #10
1420: dup
1421: invokespecial #11
1424: ldc           #12
1426: invokevirtual #13
1429: dload         54
1431: invokevirtual #60
1434: ldc           #15
1436: invokevirtual #13
1439: dconst_0
1440: invokevirtual #60
1443: ldc           #12
1445: invokevirtual #13
1448: invokevirtual #16
1451: dload         54
1453: dconst_0
1454: dcmpl
1455: ifne          1462
1458: iconst_1
1459: goto          1463
1462: iconst_0
1463: invokestatic  #17
1466: aload         56
1468: invokestatic  #33
1471: new           #10
1474: dup
1475: invokespecial #11
1478: ldc           #12
1480: invokevirtual #13
1483: dload         59
1485: invokevirtual #60
1488: ldc           #15
1490: invokevirtual #13
1493: dconst_0
1494: invokevirtual #60
1497: ldc           #12
1499: invokevirtual #13
1502: invokevirtual #16
1505: dload         59
1507: dconst_0
1508: dcmpl
1509: ifne          1516
1512: iconst_1
1513: goto          1517
1516: iconst_0
1517: invokestatic  #17
1520: aload         61
1522: invokestatic  #33
1525: aload         62
1527: invokestatic  #33
1530: new           #10
1533: dup
1534: invokespecial #11
1537: ldc           #12
1539: invokevirtual #13
1542: dload         63
1544: invokevirtual #60
1547: ldc           #15
1549: invokevirtual #13
1552: ldc2_w        #63
1555: invokevirtual #60
1558: ldc           #12
1560: invokevirtual #13
1563: invokevirtual #16
1566: dload         63
1568: ldc2_w        #63
1571: dcmpl
1572: ifne          1579
1575: iconst_1
1576: goto          1580
1579: iconst_0
1580: invokestatic  #17
1583: aload         66
1585: invokestatic  #33
1588: aload         67
1590: invokestatic  #33
1593: aload         68
1595: invokestatic  #33
1598: aload         69
1600: invokestatic  #33
1603: aload         70
1605: invokestatic  #33
1608: aload         71
1610: invokestatic  #33
1613: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 12634
End line: 12710
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D1 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = vector3D0.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation9 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = rotation9.getAxis();
        double double11 = rotation9.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = rotation9.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = vector3D0.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double24 = vector3D20.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D23);
        double double25 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D17, vector3D23);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D31 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double35 = vector3D31.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D34);
        double double36 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D28, vector3D34);
        boolean boolean37 = vector3D28.isInfinite();
        double double38 = vector3D17.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D39 = vector3D28.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = vector3D39.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D42);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.ZERO;
        double double49 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D39, vector3D48);
        double double50 = vector3D39.getZ();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.POSITIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        java.text.NumberFormat numberFormat55 = null;
        java.lang.String str56 = vector3D54.toString(numberFormat55);
        org.apache.commons.math.exception.util.Localizable localizable57 = null;
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException62 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable58, (java.lang.Number) 0, (java.lang.Number) Double.NaN, true);
        org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException66 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 10L, (java.lang.Number) 0.7345682747147467d, (int) (byte) 1);
        numberIsTooSmallException62.addSuppressed((java.lang.Throwable) nonMonotonousSequenceException66);
        java.lang.Throwable[] throwableArray68 = numberIsTooSmallException62.getSuppressed();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D54, localizable57, (java.lang.Object[]) throwableArray68);
        double double70 = vector3D54.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = vector3D52.add(2.220446049250313E-16d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = vector3D39.subtract(0.3240512624743061d, (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector74 = vector3D52.scalarMultiply(30.162848702026007d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation75 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D12, vector3D52);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.6702668260599606d + "'", double49 == 0.6702668260599606d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.6702668260599606d) + "'", double50 == (-0.6702668260599606d));
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{(NaN); (NaN); (NaN)}" + "'", str56, "{(NaN); (NaN); (NaN)}");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(euclidean3DVector74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #760
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #432
28: astore_1
29: aload_1
30: invokevirtual #163
33: astore_2
34: aload_1
35: invokevirtual #54
38: astore_3
39: new           #27
42: dup
43: ldc2_w        #146
46: ldc2_w        #72
49: ldc2_w        #148
52: dconst_1
53: iconst_0
54: invokespecial #150
57: astore        4
59: aload         4
61: invokevirtual #96
64: astore        5
66: aload         4
68: invokevirtual #95
71: dstore        6
73: getstatic     #314
76: astore        8
78: aload         4
80: aload         8
82: invokevirtual #98
85: astore        9
87: aload_1
88: ldc2_w        #434
91: aload         8
93: invokevirtual #182
96: astore        10
98: new           #43
101: dup
102: dconst_1
103: ldc2_w        #44
106: invokespecial #46
109: astore        11
111: new           #43
114: dup
115: dconst_1
116: ldc2_w        #44
119: invokespecial #46
122: astore        12
124: new           #43
127: dup
128: dconst_1
129: ldc2_w        #44
132: invokespecial #46
135: astore        13
137: aload         12
139: aload         13
141: invokevirtual #47
144: dstore        14
146: aload         11
148: aload         13
150: invokestatic  #48
153: dstore        16
155: new           #43
158: dup
159: dconst_1
160: ldc2_w        #44
163: invokespecial #46
166: astore        18
168: new           #43
171: dup
172: dconst_1
173: ldc2_w        #44
176: invokespecial #46
179: astore        19
181: new           #43
184: dup
185: dconst_1
186: ldc2_w        #44
189: invokespecial #46
192: astore        20
194: aload         19
196: aload         20
198: invokevirtual #47
201: dstore        21
203: aload         18
205: aload         20
207: invokestatic  #48
210: dstore        23
212: aload         18
214: invokevirtual #49
217: istore        25
219: aload         11
221: aload         18
223: invokevirtual #50
226: dstore        26
228: aload         18
230: invokevirtual #54
233: astore        28
235: new           #43
238: dup
239: dconst_1
240: ldc2_w        #44
243: invokespecial #46
246: astore        29
248: new           #43
251: dup
252: dconst_1
253: ldc2_w        #44
256: invokespecial #46
259: astore        30
261: aload         29
263: aload         30
265: invokevirtual #47
268: dstore        31
270: aload         28
272: aload         29
274: invokevirtual #55
277: astore        33
279: getstatic     #433
282: astore        34
284: aload         28
286: aload         34
288: invokestatic  #48
291: dstore        35
293: aload         28
295: invokevirtual #311
298: dstore        37
300: getstatic     #313
303: astore        39
305: getstatic     #314
308: astore        40
310: aconst_null
311: astore        41
313: aload         40
315: aload         41
317: invokevirtual #166
320: astore        42
322: aconst_null
323: astore        43
325: aconst_null
326: astore        44
328: new           #315
331: dup
332: aload         44
334: iconst_0
335: invokestatic  #316
338: ldc2_w        #317
341: invokestatic  #319
344: iconst_1
345: invokespecial #320
348: astore        45
350: new           #321
353: dup
354: ldc2_w        #322
357: invokestatic  #324
360: ldc2_w        #44
363: invokestatic  #319
366: iconst_1
367: invokespecial #325
370: astore        46
372: aload         45
374: aload         46
376: invokevirtual #326
379: aload         45
381: invokevirtual #327
384: astore        47
386: aload         40
388: aload         43
390: aload         47
392: checkcast     #248
395: invokestatic  #328
398: aload         40
400: invokevirtual #111
403: dstore        48
405: aload         39
407: ldc2_w        #329
410: aload         40
412: invokevirtual #182
415: astore        50
417: aload         28
419: ldc2_w        #761
422: aload         39
424: invokevirtual #354
427: astore        51
429: aload         39
431: ldc2_w        #763
434: invokevirtual #107
437: astore        52
439: new           #27
442: dup
443: aload         8
445: aload         39
447: invokespecial #56
450: astore        53
452: aload_1
453: invokestatic  #33
456: aload_2
457: invokestatic  #33
460: aload_3
461: invokestatic  #33
464: aload         5
466: invokestatic  #33
469: new           #10
472: dup
473: invokespecial #11
476: ldc           #12
478: invokevirtual #13
481: dload         6
483: invokevirtual #60
486: ldc           #15
488: invokevirtual #13
491: dconst_1
492: invokevirtual #60
495: ldc           #12
497: invokevirtual #13
500: invokevirtual #16
503: dload         6
505: dconst_1
506: dcmpl
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #17
518: aload         8
520: invokestatic  #33
523: aload         9
525: invokestatic  #33
528: aload         10
530: invokestatic  #33
533: new           #10
536: dup
537: invokespecial #11
540: ldc           #12
542: invokevirtual #13
545: dload         14
547: invokevirtual #60
550: ldc           #15
552: invokevirtual #13
555: dconst_0
556: invokevirtual #60
559: ldc           #12
561: invokevirtual #13
564: invokevirtual #16
567: dload         14
569: dconst_0
570: dcmpl
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #17
582: new           #10
585: dup
586: invokespecial #11
589: ldc           #12
591: invokevirtual #13
594: dload         16
596: invokevirtual #60
599: ldc           #15
601: invokevirtual #13
604: dconst_0
605: invokevirtual #60
608: ldc           #12
610: invokevirtual #13
613: invokevirtual #16
616: dload         16
618: dconst_0
619: dcmpl
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #17
631: new           #10
634: dup
635: invokespecial #11
638: ldc           #12
640: invokevirtual #13
643: dload         21
645: invokevirtual #60
648: ldc           #15
650: invokevirtual #13
653: dconst_0
654: invokevirtual #60
657: ldc           #12
659: invokevirtual #13
662: invokevirtual #16
665: dload         21
667: dconst_0
668: dcmpl
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #17
680: new           #10
683: dup
684: invokespecial #11
687: ldc           #12
689: invokevirtual #13
692: dload         23
694: invokevirtual #60
697: ldc           #15
699: invokevirtual #13
702: dconst_0
703: invokevirtual #60
706: ldc           #12
708: invokevirtual #13
711: invokevirtual #16
714: dload         23
716: dconst_0
717: dcmpl
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #17
729: new           #10
732: dup
733: invokespecial #11
736: ldc           #12
738: invokevirtual #13
741: iload         25
743: invokevirtual #14
746: ldc           #15
748: invokevirtual #13
751: iconst_0
752: invokevirtual #14
755: ldc           #12
757: invokevirtual #13
760: invokevirtual #16
763: iload         25
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #17
776: new           #10
779: dup
780: invokespecial #11
783: ldc           #12
785: invokevirtual #13
788: dload         26
790: invokevirtual #60
793: ldc           #15
795: invokevirtual #13
798: dconst_0
799: invokevirtual #60
802: ldc           #12
804: invokevirtual #13
807: invokevirtual #16
810: dload         26
812: dconst_0
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #17
825: aload         28
827: invokestatic  #33
830: new           #10
833: dup
834: invokespecial #11
837: ldc           #12
839: invokevirtual #13
842: dload         31
844: invokevirtual #60
847: ldc           #15
849: invokevirtual #13
852: dconst_0
853: invokevirtual #60
856: ldc           #12
858: invokevirtual #13
861: invokevirtual #16
864: dload         31
866: dconst_0
867: dcmpl
868: ifne          875
871: iconst_1
872: goto          876
875: iconst_0
876: invokestatic  #17
879: aload         33
881: invokestatic  #33
884: aload         34
886: invokestatic  #33
889: new           #10
892: dup
893: invokespecial #11
896: ldc           #12
898: invokevirtual #13
901: dload         35
903: invokevirtual #60
906: ldc           #15
908: invokevirtual #13
911: ldc2_w        #79
914: invokevirtual #60
917: ldc           #12
919: invokevirtual #13
922: invokevirtual #16
925: dload         35
927: ldc2_w        #79
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #17
942: new           #10
945: dup
946: invokespecial #11
949: ldc           #12
951: invokevirtual #13
954: dload         37
956: invokevirtual #60
959: ldc           #15
961: invokevirtual #13
964: ldc2_w        #716
967: invokevirtual #60
970: ldc           #12
972: invokevirtual #13
975: invokevirtual #16
978: dload         37
980: ldc2_w        #716
983: dcmpl
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #17
995: aload         39
997: invokestatic  #33
1000: aload         40
1002: invokestatic  #33
1005: new           #10
1008: dup
1009: invokespecial #11
1012: ldc           #12
1014: invokevirtual #13
1017: aload         42
1019: invokevirtual #13
1022: ldc_w         #333
1025: invokevirtual #13
1028: invokevirtual #16
1031: aload         42
1033: ldc_w         #334
1036: invokestatic  #335
1039: aload         47
1041: invokestatic  #33
1044: dload         48
1046: invokestatic  #242
1049: invokestatic  #243
1052: aload         50
1054: invokestatic  #33
1057: aload         51
1059: invokestatic  #33
1062: aload         52
1064: invokestatic  #33
1067: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 12713
End line: 12723
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #765
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: aload_1
50: invokevirtual #95
53: dstore_3
54: aload_1
55: invokevirtual #96
58: astore        5
60: aload_2
61: invokestatic  #33
64: new           #10
67: dup
68: invokespecial #11
71: ldc           #12
73: invokevirtual #13
76: dload_3
77: invokevirtual #60
80: ldc           #15
82: invokevirtual #13
85: dconst_1
86: invokevirtual #60
89: ldc           #12
91: invokevirtual #13
94: invokevirtual #16
97: dload_3
98: dconst_1
99: dcmpl
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #17
111: aload         5
113: invokestatic  #33
116: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 12726
End line: 12763
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(Double.NEGATIVE_INFINITY, (double) 31, (double) (short) 1);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector4 = vector3D3.getZero();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation6 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D3, 4.644298430695373d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector33 = vector3D7.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = vector3D7.getNormSq();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = vector3D7.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = rotation6.applyInverseTo(vector3D35);
        org.junit.Assert.assertNotNull(euclidean3DVector4);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(euclidean3DVector33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + Double.POSITIVE_INFINITY + "'", double34 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #766
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: ldc2_w        #690
32: ldc2_w        #273
35: dconst_1
36: invokespecial #97
39: astore_1
40: aload_1
41: invokevirtual #198
44: astore_2
45: new           #27
48: dup
49: aload_1
50: ldc2_w        #767
53: invokespecial #103
56: astore_3
57: getstatic     #126
60: astore        4
62: new           #43
65: dup
66: dconst_1
67: ldc2_w        #44
70: invokespecial #46
73: astore        5
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        6
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        7
101: aload         6
103: aload         7
105: invokevirtual #47
108: dstore        8
110: aload         5
112: aload         7
114: invokestatic  #48
117: dstore        10
119: new           #43
122: dup
123: dconst_1
124: ldc2_w        #44
127: invokespecial #46
130: astore        12
132: new           #43
135: dup
136: dconst_1
137: ldc2_w        #44
140: invokespecial #46
143: astore        13
145: new           #43
148: dup
149: dconst_1
150: ldc2_w        #44
153: invokespecial #46
156: astore        14
158: aload         13
160: aload         14
162: invokevirtual #47
165: dstore        15
167: aload         12
169: aload         14
171: invokestatic  #48
174: dstore        17
176: aload         12
178: invokevirtual #49
181: istore        19
183: aload         5
185: aload         12
187: invokevirtual #50
190: dstore        20
192: aload         12
194: invokevirtual #54
197: astore        22
199: aload         4
201: aload         22
203: invokevirtual #55
206: astore        23
208: aload         4
210: invokevirtual #111
213: dstore        24
215: aload         4
217: invokevirtual #54
220: astore        26
222: aload_3
223: aload         26
225: invokevirtual #98
228: astore        27
230: aload_2
231: invokestatic  #33
234: aload         4
236: invokestatic  #33
239: new           #10
242: dup
243: invokespecial #11
246: ldc           #12
248: invokevirtual #13
251: dload         8
253: invokevirtual #60
256: ldc           #15
258: invokevirtual #13
261: dconst_0
262: invokevirtual #60
265: ldc           #12
267: invokevirtual #13
270: invokevirtual #16
273: dload         8
275: dconst_0
276: dcmpl
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #17
288: new           #10
291: dup
292: invokespecial #11
295: ldc           #12
297: invokevirtual #13
300: dload         10
302: invokevirtual #60
305: ldc           #15
307: invokevirtual #13
310: dconst_0
311: invokevirtual #60
314: ldc           #12
316: invokevirtual #13
319: invokevirtual #16
322: dload         10
324: dconst_0
325: dcmpl
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #17
337: new           #10
340: dup
341: invokespecial #11
344: ldc           #12
346: invokevirtual #13
349: dload         15
351: invokevirtual #60
354: ldc           #15
356: invokevirtual #13
359: dconst_0
360: invokevirtual #60
363: ldc           #12
365: invokevirtual #13
368: invokevirtual #16
371: dload         15
373: dconst_0
374: dcmpl
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #17
386: new           #10
389: dup
390: invokespecial #11
393: ldc           #12
395: invokevirtual #13
398: dload         17
400: invokevirtual #60
403: ldc           #15
405: invokevirtual #13
408: dconst_0
409: invokevirtual #60
412: ldc           #12
414: invokevirtual #13
417: invokevirtual #16
420: dload         17
422: dconst_0
423: dcmpl
424: ifne          431
427: iconst_1
428: goto          432
431: iconst_0
432: invokestatic  #17
435: new           #10
438: dup
439: invokespecial #11
442: ldc           #12
444: invokevirtual #13
447: iload         19
449: invokevirtual #14
452: ldc           #15
454: invokevirtual #13
457: iconst_0
458: invokevirtual #14
461: ldc           #12
463: invokevirtual #13
466: invokevirtual #16
469: iload         19
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #17
482: new           #10
485: dup
486: invokespecial #11
489: ldc           #12
491: invokevirtual #13
494: dload         20
496: invokevirtual #60
499: ldc           #15
501: invokevirtual #13
504: dconst_0
505: invokevirtual #60
508: ldc           #12
510: invokevirtual #13
513: invokevirtual #16
516: dload         20
518: dconst_0
519: dcmpl
520: ifne          527
523: iconst_1
524: goto          528
527: iconst_0
528: invokestatic  #17
531: aload         22
533: invokestatic  #33
536: aload         23
538: invokestatic  #33
541: new           #10
544: dup
545: invokespecial #11
548: ldc           #12
550: invokevirtual #13
553: dload         24
555: invokevirtual #60
558: ldc           #15
560: invokevirtual #13
563: ldc2_w        #133
566: invokevirtual #60
569: ldc           #12
571: invokevirtual #13
574: invokevirtual #16
577: dload         24
579: ldc2_w        #133
582: dcmpl
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #17
594: aload         26
596: invokestatic  #33
599: aload         27
601: invokestatic  #33
604: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 12766
End line: 12855
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation85 = rotation84.revert();
        double double86 = rotation85.getQ1();
        double double87 = rotation85.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = rotation85.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(0.0d, (double) 100, (double) 32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D93 = rotation85.applyInverseTo(vector3D92);
        java.lang.String str94 = vector3D92.toString();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D95 = vector3D92.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector97 = vector3D92.scalarMultiply(1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{0; 100; 32}" + "'", str94, "{0; 100; 32}");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(euclidean3DVector97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #769
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #93
499: astore        64
501: aload         64
503: invokevirtual #94
506: dstore        65
508: aload         64
510: invokevirtual #95
513: dstore        67
515: aload         64
517: invokevirtual #96
520: astore        69
522: new           #43
525: dup
526: dconst_0
527: ldc2_w        #68
530: ldc2_w        #70
533: invokespecial #97
536: astore        70
538: aload         64
540: aload         70
542: invokevirtual #98
545: astore        71
547: aload         70
549: invokevirtual #364
552: astore        72
554: aload         70
556: invokevirtual #163
559: astore        73
561: aload         70
563: ldc2_w        #63
566: invokevirtual #107
569: astore        74
571: new           #10
574: dup
575: invokespecial #11
578: ldc           #12
580: invokevirtual #13
583: dload         4
585: invokevirtual #60
588: ldc           #15
590: invokevirtual #13
593: dconst_0
594: invokevirtual #60
597: ldc           #12
599: invokevirtual #13
602: invokevirtual #16
605: dload         4
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #17
620: new           #10
623: dup
624: invokespecial #11
627: ldc           #12
629: invokevirtual #13
632: dload         6
634: invokevirtual #60
637: ldc           #15
639: invokevirtual #13
642: dconst_0
643: invokevirtual #60
646: ldc           #12
648: invokevirtual #13
651: invokevirtual #16
654: dload         6
656: dconst_0
657: dcmpl
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #17
669: new           #10
672: dup
673: invokespecial #11
676: ldc           #12
678: invokevirtual #13
681: dload         11
683: invokevirtual #60
686: ldc           #15
688: invokevirtual #13
691: dconst_0
692: invokevirtual #60
695: ldc           #12
697: invokevirtual #13
700: invokevirtual #16
703: dload         11
705: dconst_0
706: dcmpl
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #17
718: new           #10
721: dup
722: invokespecial #11
725: ldc           #12
727: invokevirtual #13
730: dload         13
732: invokevirtual #60
735: ldc           #15
737: invokevirtual #13
740: dconst_0
741: invokevirtual #60
744: ldc           #12
746: invokevirtual #13
749: invokevirtual #16
752: dload         13
754: dconst_0
755: dcmpl
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #17
767: new           #10
770: dup
771: invokespecial #11
774: ldc           #12
776: invokevirtual #13
779: iload         15
781: invokevirtual #14
784: ldc           #15
786: invokevirtual #13
789: iconst_0
790: invokevirtual #14
793: ldc           #12
795: invokevirtual #13
798: invokevirtual #16
801: iload         15
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: new           #10
817: dup
818: invokespecial #11
821: ldc           #12
823: invokevirtual #13
826: dload         16
828: invokevirtual #60
831: ldc           #15
833: invokevirtual #13
836: dconst_0
837: invokevirtual #60
840: ldc           #12
842: invokevirtual #13
845: invokevirtual #16
848: dload         16
850: dconst_0
851: dcmpl
852: ifne          859
855: iconst_1
856: goto          860
859: iconst_0
860: invokestatic  #17
863: aload         18
865: invokestatic  #33
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         21
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         21
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         25
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: dconst_0
940: invokevirtual #60
943: ldc           #12
945: invokevirtual #13
948: invokevirtual #16
951: dload         25
953: dconst_0
954: dcmpl
955: ifne          962
958: iconst_1
959: goto          963
962: iconst_0
963: invokestatic  #17
966: new           #10
969: dup
970: invokespecial #11
973: ldc           #12
975: invokevirtual #13
978: dload         27
980: invokevirtual #60
983: ldc           #15
985: invokevirtual #13
988: ldc2_w        #61
991: invokevirtual #60
994: ldc           #12
996: invokevirtual #13
999: invokevirtual #16
1002: dload         27
1004: ldc2_w        #61
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         31
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: dconst_0
1042: invokevirtual #60
1045: ldc           #12
1047: invokevirtual #13
1050: invokevirtual #16
1053: dload         31
1055: dconst_0
1056: dcmpl
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #17
1068: new           #10
1071: dup
1072: invokespecial #11
1075: ldc           #12
1077: invokevirtual #13
1080: dload         33
1082: invokevirtual #60
1085: ldc           #15
1087: invokevirtual #13
1090: ldc2_w        #61
1093: invokevirtual #60
1096: ldc           #12
1098: invokevirtual #13
1101: invokevirtual #16
1104: dload         33
1106: ldc2_w        #61
1109: dcmpl
1110: ifne          1117
1113: iconst_1
1114: goto          1118
1117: iconst_0
1118: invokestatic  #17
1121: new           #10
1124: dup
1125: invokespecial #11
1128: ldc           #12
1130: invokevirtual #13
1133: dload         35
1135: invokevirtual #60
1138: ldc           #15
1140: invokevirtual #13
1143: dconst_0
1144: invokevirtual #60
1147: ldc           #12
1149: invokevirtual #13
1152: invokevirtual #16
1155: dload         35
1157: dconst_0
1158: dcmpl
1159: ifne          1166
1162: iconst_1
1163: goto          1167
1166: iconst_0
1167: invokestatic  #17
1170: new           #10
1173: dup
1174: invokespecial #11
1177: ldc           #12
1179: invokevirtual #13
1182: dload         40
1184: invokevirtual #60
1187: ldc           #15
1189: invokevirtual #13
1192: dconst_0
1193: invokevirtual #60
1196: ldc           #12
1198: invokevirtual #13
1201: invokevirtual #16
1204: dload         40
1206: dconst_0
1207: dcmpl
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #17
1219: new           #10
1222: dup
1223: invokespecial #11
1226: ldc           #12
1228: invokevirtual #13
1231: dload         42
1233: invokevirtual #60
1236: ldc           #15
1238: invokevirtual #13
1241: dconst_0
1242: invokevirtual #60
1245: ldc           #12
1247: invokevirtual #13
1250: invokevirtual #16
1253: dload         42
1255: dconst_0
1256: dcmpl
1257: ifne          1264
1260: iconst_1
1261: goto          1265
1264: iconst_0
1265: invokestatic  #17
1268: new           #10
1271: dup
1272: invokespecial #11
1275: ldc           #12
1277: invokevirtual #13
1280: dload         47
1282: invokevirtual #60
1285: ldc           #15
1287: invokevirtual #13
1290: dconst_0
1291: invokevirtual #60
1294: ldc           #12
1296: invokevirtual #13
1299: invokevirtual #16
1302: dload         47
1304: dconst_0
1305: dcmpl
1306: ifne          1313
1309: iconst_1
1310: goto          1314
1313: iconst_0
1314: invokestatic  #17
1317: new           #10
1320: dup
1321: invokespecial #11
1324: ldc           #12
1326: invokevirtual #13
1329: dload         49
1331: invokevirtual #60
1334: ldc           #15
1336: invokevirtual #13
1339: dconst_0
1340: invokevirtual #60
1343: ldc           #12
1345: invokevirtual #13
1348: invokevirtual #16
1351: dload         49
1353: dconst_0
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #17
1366: new           #10
1369: dup
1370: invokespecial #11
1373: ldc           #12
1375: invokevirtual #13
1378: iload         51
1380: invokevirtual #14
1383: ldc           #15
1385: invokevirtual #13
1388: iconst_0
1389: invokevirtual #14
1392: ldc           #12
1394: invokevirtual #13
1397: invokevirtual #16
1400: iload         51
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #17
1413: new           #10
1416: dup
1417: invokespecial #11
1420: ldc           #12
1422: invokevirtual #13
1425: dload         52
1427: invokevirtual #60
1430: ldc           #15
1432: invokevirtual #13
1435: dconst_0
1436: invokevirtual #60
1439: ldc           #12
1441: invokevirtual #13
1444: invokevirtual #16
1447: dload         52
1449: dconst_0
1450: dcmpl
1451: ifne          1458
1454: iconst_1
1455: goto          1459
1458: iconst_0
1459: invokestatic  #17
1462: aload         54
1464: invokestatic  #33
1467: new           #10
1470: dup
1471: invokespecial #11
1474: ldc           #12
1476: invokevirtual #13
1479: dload         57
1481: invokevirtual #60
1484: ldc           #15
1486: invokevirtual #13
1489: dconst_0
1490: invokevirtual #60
1493: ldc           #12
1495: invokevirtual #13
1498: invokevirtual #16
1501: dload         57
1503: dconst_0
1504: dcmpl
1505: ifne          1512
1508: iconst_1
1509: goto          1513
1512: iconst_0
1513: invokestatic  #17
1516: aload         59
1518: invokestatic  #33
1521: aload         60
1523: invokestatic  #33
1526: new           #10
1529: dup
1530: invokespecial #11
1533: ldc           #12
1535: invokevirtual #13
1538: dload         61
1540: invokevirtual #60
1543: ldc           #15
1545: invokevirtual #13
1548: ldc2_w        #63
1551: invokevirtual #60
1554: ldc           #12
1556: invokevirtual #13
1559: invokevirtual #16
1562: dload         61
1564: ldc2_w        #63
1567: dcmpl
1568: ifne          1575
1571: iconst_1
1572: goto          1576
1575: iconst_0
1576: invokestatic  #17
1579: aload         64
1581: invokestatic  #33
1584: new           #10
1587: dup
1588: invokespecial #11
1591: ldc           #12
1593: invokevirtual #13
1596: dload         65
1598: invokevirtual #60
1601: ldc           #15
1603: invokevirtual #13
1606: dconst_0
1607: invokevirtual #60
1610: ldc           #12
1612: invokevirtual #13
1615: invokevirtual #16
1618: dload         65
1620: dconst_0
1621: dcmpl
1622: ifne          1629
1625: iconst_1
1626: goto          1630
1629: iconst_0
1630: invokestatic  #17
1633: new           #10
1636: dup
1637: invokespecial #11
1640: ldc           #12
1642: invokevirtual #13
1645: dload         67
1647: invokevirtual #60
1650: ldc           #15
1652: invokevirtual #13
1655: dconst_0
1656: invokevirtual #60
1659: ldc           #12
1661: invokevirtual #13
1664: invokevirtual #16
1667: dload         67
1669: dconst_0
1670: dcmpl
1671: ifne          1678
1674: iconst_1
1675: goto          1679
1678: iconst_0
1679: invokestatic  #17
1682: aload         69
1684: invokestatic  #33
1687: aload         71
1689: invokestatic  #33
1692: new           #10
1695: dup
1696: invokespecial #11
1699: ldc           #12
1701: invokevirtual #13
1704: aload         72
1706: invokevirtual #13
1709: ldc_w         #770
1712: invokevirtual #13
1715: invokevirtual #16
1718: aload         72
1720: ldc_w         #771
1723: invokestatic  #335
1726: aload         73
1728: invokestatic  #33
1731: aload         74
1733: invokestatic  #33
1736: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 12858
End line: 12951
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        double double7 = vector3D5.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double18 = vector3D14.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D17);
        double double19 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D11, vector3D17);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D28 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double29 = vector3D25.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D28);
        double double30 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D22, vector3D28);
        boolean boolean31 = vector3D22.isInfinite();
        double double32 = vector3D11.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D22);
        double double33 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D8, vector3D22);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D5, vector3D22);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double41 = vector3D37.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D40);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D47 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double48 = vector3D44.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D47);
        double double49 = vector3D47.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double56 = vector3D52.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double57 = vector3D55.getDelta();
        double double58 = vector3D47.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double68 = vector3D64.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D67);
        double double69 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D61, vector3D67);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D78 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double79 = vector3D75.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D78);
        double double80 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D72, vector3D78);
        boolean boolean81 = vector3D72.isInfinite();
        double double82 = vector3D61.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D72);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = vector3D72.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double90 = vector3D86.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D89);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D91 = vector3D83.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D47.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D91);
        double double93 = vector3D40.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D91);
        double double94 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance(vector3D5, vector3D91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.euclidean.threed.Rotation rotation96 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D91, (double) 1073741824L);
            org.junit.Assert.fail("Expected anonymous exception");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
            if (!e.getClass().isAnonymousClass()) {
                org.junit.Assert.fail("Expected anonymous exception, got " + e.getClass().getCanonicalName());
            }
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.7345682747147468d + "'", double7 == 0.7345682747147468d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + Double.POSITIVE_INFINITY + "'", double33 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.7345682747147468d + "'", double49 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.7345682747147468d + "'", double57 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0000000000000002d + "'", double93 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #772
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: aload_2
56: invokevirtual #52
59: dstore        5
61: getstatic     #126
64: astore        7
66: new           #43
69: dup
70: dconst_1
71: ldc2_w        #44
74: invokespecial #46
77: astore        8
79: new           #43
82: dup
83: dconst_1
84: ldc2_w        #44
87: invokespecial #46
90: astore        9
92: new           #43
95: dup
96: dconst_1
97: ldc2_w        #44
100: invokespecial #46
103: astore        10
105: aload         9
107: aload         10
109: invokevirtual #47
112: dstore        11
114: aload         8
116: aload         10
118: invokestatic  #48
121: dstore        13
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        15
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        16
149: new           #43
152: dup
153: dconst_1
154: ldc2_w        #44
157: invokespecial #46
160: astore        17
162: aload         16
164: aload         17
166: invokevirtual #47
169: dstore        18
171: aload         15
173: aload         17
175: invokestatic  #48
178: dstore        20
180: aload         15
182: invokevirtual #49
185: istore        22
187: aload         8
189: aload         15
191: invokevirtual #50
194: dstore        23
196: aload         7
198: aload         15
200: invokestatic  #127
203: dstore        25
205: aload_2
206: aload         15
208: invokestatic  #128
211: dstore        27
213: new           #43
216: dup
217: dconst_1
218: ldc2_w        #44
221: invokespecial #46
224: astore        29
226: new           #43
229: dup
230: dconst_1
231: ldc2_w        #44
234: invokespecial #46
237: astore        30
239: aload         29
241: aload         30
243: invokevirtual #47
246: dstore        31
248: new           #43
251: dup
252: dconst_1
253: ldc2_w        #44
256: invokespecial #46
259: astore        33
261: new           #43
264: dup
265: dconst_1
266: ldc2_w        #44
269: invokespecial #46
272: astore        34
274: aload         33
276: aload         34
278: invokevirtual #47
281: dstore        35
283: aload         34
285: invokevirtual #52
288: dstore        37
290: new           #43
293: dup
294: dconst_1
295: ldc2_w        #44
298: invokespecial #46
301: astore        39
303: new           #43
306: dup
307: dconst_1
308: ldc2_w        #44
311: invokespecial #46
314: astore        40
316: aload         39
318: aload         40
320: invokevirtual #47
323: dstore        41
325: aload         40
327: invokevirtual #52
330: dstore        43
332: aload         34
334: aload         40
336: invokevirtual #53
339: dstore        45
341: new           #43
344: dup
345: dconst_1
346: ldc2_w        #44
349: invokespecial #46
352: astore        47
354: new           #43
357: dup
358: dconst_1
359: ldc2_w        #44
362: invokespecial #46
365: astore        48
367: new           #43
370: dup
371: dconst_1
372: ldc2_w        #44
375: invokespecial #46
378: astore        49
380: aload         48
382: aload         49
384: invokevirtual #47
387: dstore        50
389: aload         47
391: aload         49
393: invokestatic  #48
396: dstore        52
398: new           #43
401: dup
402: dconst_1
403: ldc2_w        #44
406: invokespecial #46
409: astore        54
411: new           #43
414: dup
415: dconst_1
416: ldc2_w        #44
419: invokespecial #46
422: astore        55
424: new           #43
427: dup
428: dconst_1
429: ldc2_w        #44
432: invokespecial #46
435: astore        56
437: aload         55
439: aload         56
441: invokevirtual #47
444: dstore        57
446: aload         54
448: aload         56
450: invokestatic  #48
453: dstore        59
455: aload         54
457: invokevirtual #49
460: istore        61
462: aload         47
464: aload         54
466: invokevirtual #50
469: dstore        62
471: aload         54
473: invokevirtual #54
476: astore        64
478: new           #43
481: dup
482: dconst_1
483: ldc2_w        #44
486: invokespecial #46
489: astore        65
491: new           #43
494: dup
495: dconst_1
496: ldc2_w        #44
499: invokespecial #46
502: astore        66
504: aload         65
506: aload         66
508: invokevirtual #47
511: dstore        67
513: aload         64
515: aload         65
517: invokevirtual #55
520: astore        69
522: aload         34
524: aload         69
526: invokevirtual #55
529: astore        70
531: aload         30
533: aload         69
535: invokevirtual #53
538: dstore        71
540: aload_2
541: aload         69
543: invokestatic  #128
546: dstore        73
548: new           #27
551: dup
552: aload         69
554: ldc2_w        #773
557: invokespecial #103
560: astore        75
562: ldc_w         #539
565: invokestatic  #21
568: goto          614
571: astore        75
573: aload         75
575: invokevirtual #541
578: invokevirtual #542
581: ifne          614
584: new           #10
587: dup
588: invokespecial #11
591: ldc_w         #543
594: invokevirtual #13
597: aload         75
599: invokevirtual #541
602: invokevirtual #544
605: invokevirtual #13
608: invokevirtual #16
611: invokestatic  #21
614: new           #10
617: dup
618: invokespecial #11
621: ldc           #12
623: invokevirtual #13
626: dload_3
627: invokevirtual #60
630: ldc           #15
632: invokevirtual #13
635: dconst_0
636: invokevirtual #60
639: ldc           #12
641: invokevirtual #13
644: invokevirtual #16
647: dload_3
648: dconst_0
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #17
661: new           #10
664: dup
665: invokespecial #11
668: ldc           #12
670: invokevirtual #13
673: dload         5
675: invokevirtual #60
678: ldc           #15
680: invokevirtual #13
683: ldc2_w        #61
686: invokevirtual #60
689: ldc           #12
691: invokevirtual #13
694: invokevirtual #16
697: dload         5
699: ldc2_w        #61
702: dcmpl
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #17
714: aload         7
716: invokestatic  #33
719: new           #10
722: dup
723: invokespecial #11
726: ldc           #12
728: invokevirtual #13
731: dload         11
733: invokevirtual #60
736: ldc           #15
738: invokevirtual #13
741: dconst_0
742: invokevirtual #60
745: ldc           #12
747: invokevirtual #13
750: invokevirtual #16
753: dload         11
755: dconst_0
756: dcmpl
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #17
768: new           #10
771: dup
772: invokespecial #11
775: ldc           #12
777: invokevirtual #13
780: dload         13
782: invokevirtual #60
785: ldc           #15
787: invokevirtual #13
790: dconst_0
791: invokevirtual #60
794: ldc           #12
796: invokevirtual #13
799: invokevirtual #16
802: dload         13
804: dconst_0
805: dcmpl
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #17
817: new           #10
820: dup
821: invokespecial #11
824: ldc           #12
826: invokevirtual #13
829: dload         18
831: invokevirtual #60
834: ldc           #15
836: invokevirtual #13
839: dconst_0
840: invokevirtual #60
843: ldc           #12
845: invokevirtual #13
848: invokevirtual #16
851: dload         18
853: dconst_0
854: dcmpl
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #17
866: new           #10
869: dup
870: invokespecial #11
873: ldc           #12
875: invokevirtual #13
878: dload         20
880: invokevirtual #60
883: ldc           #15
885: invokevirtual #13
888: dconst_0
889: invokevirtual #60
892: ldc           #12
894: invokevirtual #13
897: invokevirtual #16
900: dload         20
902: dconst_0
903: dcmpl
904: ifne          911
907: iconst_1
908: goto          912
911: iconst_0
912: invokestatic  #17
915: new           #10
918: dup
919: invokespecial #11
922: ldc           #12
924: invokevirtual #13
927: iload         22
929: invokevirtual #14
932: ldc           #15
934: invokevirtual #13
937: iconst_0
938: invokevirtual #14
941: ldc           #12
943: invokevirtual #13
946: invokevirtual #16
949: iload         22
951: ifne          958
954: iconst_1
955: goto          959
958: iconst_0
959: invokestatic  #17
962: new           #10
965: dup
966: invokespecial #11
969: ldc           #12
971: invokevirtual #13
974: dload         23
976: invokevirtual #60
979: ldc           #15
981: invokevirtual #13
984: dconst_0
985: invokevirtual #60
988: ldc           #12
990: invokevirtual #13
993: invokevirtual #16
996: dload         23
998: dconst_0
999: dcmpl
1000: ifne          1007
1003: iconst_1
1004: goto          1008
1007: iconst_0
1008: invokestatic  #17
1011: new           #10
1014: dup
1015: invokespecial #11
1018: ldc           #12
1020: invokevirtual #13
1023: dload         25
1025: invokevirtual #60
1028: ldc           #15
1030: invokevirtual #13
1033: ldc2_w        #133
1036: invokevirtual #60
1039: ldc           #12
1041: invokevirtual #13
1044: invokevirtual #16
1047: dload         25
1049: ldc2_w        #133
1052: dcmpl
1053: ifne          1060
1056: iconst_1
1057: goto          1061
1060: iconst_0
1061: invokestatic  #17
1064: new           #10
1067: dup
1068: invokespecial #11
1071: ldc           #12
1073: invokevirtual #13
1076: dload         27
1078: invokevirtual #60
1081: ldc           #15
1083: invokevirtual #13
1086: dconst_0
1087: invokevirtual #60
1090: ldc           #12
1092: invokevirtual #13
1095: invokevirtual #16
1098: dload         27
1100: dconst_0
1101: dcmpl
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #17
1113: new           #10
1116: dup
1117: invokespecial #11
1120: ldc           #12
1122: invokevirtual #13
1125: dload         31
1127: invokevirtual #60
1130: ldc           #15
1132: invokevirtual #13
1135: dconst_0
1136: invokevirtual #60
1139: ldc           #12
1141: invokevirtual #13
1144: invokevirtual #16
1147: dload         31
1149: dconst_0
1150: dcmpl
1151: ifne          1158
1154: iconst_1
1155: goto          1159
1158: iconst_0
1159: invokestatic  #17
1162: new           #10
1165: dup
1166: invokespecial #11
1169: ldc           #12
1171: invokevirtual #13
1174: dload         35
1176: invokevirtual #60
1179: ldc           #15
1181: invokevirtual #13
1184: dconst_0
1185: invokevirtual #60
1188: ldc           #12
1190: invokevirtual #13
1193: invokevirtual #16
1196: dload         35
1198: dconst_0
1199: dcmpl
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #17
1211: new           #10
1214: dup
1215: invokespecial #11
1218: ldc           #12
1220: invokevirtual #13
1223: dload         37
1225: invokevirtual #60
1228: ldc           #15
1230: invokevirtual #13
1233: ldc2_w        #61
1236: invokevirtual #60
1239: ldc           #12
1241: invokevirtual #13
1244: invokevirtual #16
1247: dload         37
1249: ldc2_w        #61
1252: dcmpl
1253: ifne          1260
1256: iconst_1
1257: goto          1261
1260: iconst_0
1261: invokestatic  #17
1264: new           #10
1267: dup
1268: invokespecial #11
1271: ldc           #12
1273: invokevirtual #13
1276: dload         41
1278: invokevirtual #60
1281: ldc           #15
1283: invokevirtual #13
1286: dconst_0
1287: invokevirtual #60
1290: ldc           #12
1292: invokevirtual #13
1295: invokevirtual #16
1298: dload         41
1300: dconst_0
1301: dcmpl
1302: ifne          1309
1305: iconst_1
1306: goto          1310
1309: iconst_0
1310: invokestatic  #17
1313: new           #10
1316: dup
1317: invokespecial #11
1320: ldc           #12
1322: invokevirtual #13
1325: dload         43
1327: invokevirtual #60
1330: ldc           #15
1332: invokevirtual #13
1335: ldc2_w        #61
1338: invokevirtual #60
1341: ldc           #12
1343: invokevirtual #13
1346: invokevirtual #16
1349: dload         43
1351: ldc2_w        #61
1354: dcmpl
1355: ifne          1362
1358: iconst_1
1359: goto          1363
1362: iconst_0
1363: invokestatic  #17
1366: new           #10
1369: dup
1370: invokespecial #11
1373: ldc           #12
1375: invokevirtual #13
1378: dload         45
1380: invokevirtual #60
1383: ldc           #15
1385: invokevirtual #13
1388: dconst_0
1389: invokevirtual #60
1392: ldc           #12
1394: invokevirtual #13
1397: invokevirtual #16
1400: dload         45
1402: dconst_0
1403: dcmpl
1404: ifne          1411
1407: iconst_1
1408: goto          1412
1411: iconst_0
1412: invokestatic  #17
1415: new           #10
1418: dup
1419: invokespecial #11
1422: ldc           #12
1424: invokevirtual #13
1427: dload         50
1429: invokevirtual #60
1432: ldc           #15
1434: invokevirtual #13
1437: dconst_0
1438: invokevirtual #60
1441: ldc           #12
1443: invokevirtual #13
1446: invokevirtual #16
1449: dload         50
1451: dconst_0
1452: dcmpl
1453: ifne          1460
1456: iconst_1
1457: goto          1461
1460: iconst_0
1461: invokestatic  #17
1464: new           #10
1467: dup
1468: invokespecial #11
1471: ldc           #12
1473: invokevirtual #13
1476: dload         52
1478: invokevirtual #60
1481: ldc           #15
1483: invokevirtual #13
1486: dconst_0
1487: invokevirtual #60
1490: ldc           #12
1492: invokevirtual #13
1495: invokevirtual #16
1498: dload         52
1500: dconst_0
1501: dcmpl
1502: ifne          1509
1505: iconst_1
1506: goto          1510
1509: iconst_0
1510: invokestatic  #17
1513: new           #10
1516: dup
1517: invokespecial #11
1520: ldc           #12
1522: invokevirtual #13
1525: dload         57
1527: invokevirtual #60
1530: ldc           #15
1532: invokevirtual #13
1535: dconst_0
1536: invokevirtual #60
1539: ldc           #12
1541: invokevirtual #13
1544: invokevirtual #16
1547: dload         57
1549: dconst_0
1550: dcmpl
1551: ifne          1558
1554: iconst_1
1555: goto          1559
1558: iconst_0
1559: invokestatic  #17
1562: new           #10
1565: dup
1566: invokespecial #11
1569: ldc           #12
1571: invokevirtual #13
1574: dload         59
1576: invokevirtual #60
1579: ldc           #15
1581: invokevirtual #13
1584: dconst_0
1585: invokevirtual #60
1588: ldc           #12
1590: invokevirtual #13
1593: invokevirtual #16
1596: dload         59
1598: dconst_0
1599: dcmpl
1600: ifne          1607
1603: iconst_1
1604: goto          1608
1607: iconst_0
1608: invokestatic  #17
1611: new           #10
1614: dup
1615: invokespecial #11
1618: ldc           #12
1620: invokevirtual #13
1623: iload         61
1625: invokevirtual #14
1628: ldc           #15
1630: invokevirtual #13
1633: iconst_0
1634: invokevirtual #14
1637: ldc           #12
1639: invokevirtual #13
1642: invokevirtual #16
1645: iload         61
1647: ifne          1654
1650: iconst_1
1651: goto          1655
1654: iconst_0
1655: invokestatic  #17
1658: new           #10
1661: dup
1662: invokespecial #11
1665: ldc           #12
1667: invokevirtual #13
1670: dload         62
1672: invokevirtual #60
1675: ldc           #15
1677: invokevirtual #13
1680: dconst_0
1681: invokevirtual #60
1684: ldc           #12
1686: invokevirtual #13
1689: invokevirtual #16
1692: dload         62
1694: dconst_0
1695: dcmpl
1696: ifne          1703
1699: iconst_1
1700: goto          1704
1703: iconst_0
1704: invokestatic  #17
1707: aload         64
1709: invokestatic  #33
1712: new           #10
1715: dup
1716: invokespecial #11
1719: ldc           #12
1721: invokevirtual #13
1724: dload         67
1726: invokevirtual #60
1729: ldc           #15
1731: invokevirtual #13
1734: dconst_0
1735: invokevirtual #60
1738: ldc           #12
1740: invokevirtual #13
1743: invokevirtual #16
1746: dload         67
1748: dconst_0
1749: dcmpl
1750: ifne          1757
1753: iconst_1
1754: goto          1758
1757: iconst_0
1758: invokestatic  #17
1761: aload         69
1763: invokestatic  #33
1766: aload         70
1768: invokestatic  #33
1771: new           #10
1774: dup
1775: invokespecial #11
1778: ldc           #12
1780: invokevirtual #13
1783: dload         71
1785: invokevirtual #60
1788: ldc           #15
1790: invokevirtual #13
1793: ldc2_w        #63
1796: invokevirtual #60
1799: ldc           #12
1801: invokevirtual #13
1804: invokevirtual #16
1807: dload         71
1809: ldc2_w        #63
1812: dcmpl
1813: ifne          1820
1816: iconst_1
1817: goto          1821
1820: iconst_0
1821: invokestatic  #17
1824: new           #10
1827: dup
1828: invokespecial #11
1831: ldc           #12
1833: invokevirtual #13
1836: dload         73
1838: invokevirtual #60
1841: ldc           #15
1843: invokevirtual #13
1846: dconst_1
1847: invokevirtual #60
1850: ldc           #12
1852: invokevirtual #13
1855: invokevirtual #16
1858: dload         73
1860: dconst_1
1861: dcmpl
1862: ifne          1869
1865: iconst_1
1866: goto          1870
1869: iconst_0
1870: invokestatic  #17
1873: return
Exception table:
from    to  target type
548   568   571   Class java/lang/ArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 12954
End line: 13028
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.Space space24 = vector3D13.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        double double39 = vector3D37.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double46 = vector3D42.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        double double47 = vector3D45.getDelta();
        double double48 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D45);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double58 = vector3D54.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        double double59 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D51, vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double69 = vector3D65.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        double double70 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D62, vector3D68);
        boolean boolean71 = vector3D62.isInfinite();
        double double72 = vector3D51.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D73 = vector3D62.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D76 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double80 = vector3D76.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D81 = vector3D73.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D76);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = vector3D37.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        double double83 = vector3D30.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D81);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation84 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D13, vector3D30);
        double double85 = rotation84.getQ0();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(space24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.7345682747147468d + "'", double39 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.7345682747147468d + "'", double47 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0000000000000002d + "'", double83 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #776
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #51
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        23
202: new           #43
205: dup
206: dconst_1
207: ldc2_w        #44
210: invokespecial #46
213: astore        24
215: aload         23
217: aload         24
219: invokevirtual #47
222: dstore        25
224: aload         24
226: invokevirtual #52
229: dstore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        29
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: aload         29
259: aload         30
261: invokevirtual #47
264: dstore        31
266: aload         30
268: invokevirtual #52
271: dstore        33
273: aload         24
275: aload         30
277: invokevirtual #53
280: dstore        35
282: new           #43
285: dup
286: dconst_1
287: ldc2_w        #44
290: invokespecial #46
293: astore        37
295: new           #43
298: dup
299: dconst_1
300: ldc2_w        #44
303: invokespecial #46
306: astore        38
308: new           #43
311: dup
312: dconst_1
313: ldc2_w        #44
316: invokespecial #46
319: astore        39
321: aload         38
323: aload         39
325: invokevirtual #47
328: dstore        40
330: aload         37
332: aload         39
334: invokestatic  #48
337: dstore        42
339: new           #43
342: dup
343: dconst_1
344: ldc2_w        #44
347: invokespecial #46
350: astore        44
352: new           #43
355: dup
356: dconst_1
357: ldc2_w        #44
360: invokespecial #46
363: astore        45
365: new           #43
368: dup
369: dconst_1
370: ldc2_w        #44
373: invokespecial #46
376: astore        46
378: aload         45
380: aload         46
382: invokevirtual #47
385: dstore        47
387: aload         44
389: aload         46
391: invokestatic  #48
394: dstore        49
396: aload         44
398: invokevirtual #49
401: istore        51
403: aload         37
405: aload         44
407: invokevirtual #50
410: dstore        52
412: aload         44
414: invokevirtual #54
417: astore        54
419: new           #43
422: dup
423: dconst_1
424: ldc2_w        #44
427: invokespecial #46
430: astore        55
432: new           #43
435: dup
436: dconst_1
437: ldc2_w        #44
440: invokespecial #46
443: astore        56
445: aload         55
447: aload         56
449: invokevirtual #47
452: dstore        57
454: aload         54
456: aload         55
458: invokevirtual #55
461: astore        59
463: aload         24
465: aload         59
467: invokevirtual #55
470: astore        60
472: aload         20
474: aload         59
476: invokevirtual #53
479: dstore        61
481: new           #27
484: dup
485: aload         8
487: aload         20
489: invokespecial #56
492: astore        63
494: aload         63
496: invokevirtual #241
499: dstore        64
501: new           #10
504: dup
505: invokespecial #11
508: ldc           #12
510: invokevirtual #13
513: dload         4
515: invokevirtual #60
518: ldc           #15
520: invokevirtual #13
523: dconst_0
524: invokevirtual #60
527: ldc           #12
529: invokevirtual #13
532: invokevirtual #16
535: dload         4
537: dconst_0
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #17
550: new           #10
553: dup
554: invokespecial #11
557: ldc           #12
559: invokevirtual #13
562: dload         6
564: invokevirtual #60
567: ldc           #15
569: invokevirtual #13
572: dconst_0
573: invokevirtual #60
576: ldc           #12
578: invokevirtual #13
581: invokevirtual #16
584: dload         6
586: dconst_0
587: dcmpl
588: ifne          595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #17
599: new           #10
602: dup
603: invokespecial #11
606: ldc           #12
608: invokevirtual #13
611: dload         11
613: invokevirtual #60
616: ldc           #15
618: invokevirtual #13
621: dconst_0
622: invokevirtual #60
625: ldc           #12
627: invokevirtual #13
630: invokevirtual #16
633: dload         11
635: dconst_0
636: dcmpl
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #17
648: new           #10
651: dup
652: invokespecial #11
655: ldc           #12
657: invokevirtual #13
660: dload         13
662: invokevirtual #60
665: ldc           #15
667: invokevirtual #13
670: dconst_0
671: invokevirtual #60
674: ldc           #12
676: invokevirtual #13
679: invokevirtual #16
682: dload         13
684: dconst_0
685: dcmpl
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #17
697: new           #10
700: dup
701: invokespecial #11
704: ldc           #12
706: invokevirtual #13
709: iload         15
711: invokevirtual #14
714: ldc           #15
716: invokevirtual #13
719: iconst_0
720: invokevirtual #14
723: ldc           #12
725: invokevirtual #13
728: invokevirtual #16
731: iload         15
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #17
744: new           #10
747: dup
748: invokespecial #11
751: ldc           #12
753: invokevirtual #13
756: dload         16
758: invokevirtual #60
761: ldc           #15
763: invokevirtual #13
766: dconst_0
767: invokevirtual #60
770: ldc           #12
772: invokevirtual #13
775: invokevirtual #16
778: dload         16
780: dconst_0
781: dcmpl
782: ifne          789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #17
793: aload         18
795: invokestatic  #33
798: new           #10
801: dup
802: invokespecial #11
805: ldc           #12
807: invokevirtual #13
810: dload         21
812: invokevirtual #60
815: ldc           #15
817: invokevirtual #13
820: dconst_0
821: invokevirtual #60
824: ldc           #12
826: invokevirtual #13
829: invokevirtual #16
832: dload         21
834: dconst_0
835: dcmpl
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #17
847: new           #10
850: dup
851: invokespecial #11
854: ldc           #12
856: invokevirtual #13
859: dload         25
861: invokevirtual #60
864: ldc           #15
866: invokevirtual #13
869: dconst_0
870: invokevirtual #60
873: ldc           #12
875: invokevirtual #13
878: invokevirtual #16
881: dload         25
883: dconst_0
884: dcmpl
885: ifne          892
888: iconst_1
889: goto          893
892: iconst_0
893: invokestatic  #17
896: new           #10
899: dup
900: invokespecial #11
903: ldc           #12
905: invokevirtual #13
908: dload         27
910: invokevirtual #60
913: ldc           #15
915: invokevirtual #13
918: ldc2_w        #61
921: invokevirtual #60
924: ldc           #12
926: invokevirtual #13
929: invokevirtual #16
932: dload         27
934: ldc2_w        #61
937: dcmpl
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #17
949: new           #10
952: dup
953: invokespecial #11
956: ldc           #12
958: invokevirtual #13
961: dload         31
963: invokevirtual #60
966: ldc           #15
968: invokevirtual #13
971: dconst_0
972: invokevirtual #60
975: ldc           #12
977: invokevirtual #13
980: invokevirtual #16
983: dload         31
985: dconst_0
986: dcmpl
987: ifne          994
990: iconst_1
991: goto          995
994: iconst_0
995: invokestatic  #17
998: new           #10
1001: dup
1002: invokespecial #11
1005: ldc           #12
1007: invokevirtual #13
1010: dload         33
1012: invokevirtual #60
1015: ldc           #15
1017: invokevirtual #13
1020: ldc2_w        #61
1023: invokevirtual #60
1026: ldc           #12
1028: invokevirtual #13
1031: invokevirtual #16
1034: dload         33
1036: ldc2_w        #61
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #17
1051: new           #10
1054: dup
1055: invokespecial #11
1058: ldc           #12
1060: invokevirtual #13
1063: dload         35
1065: invokevirtual #60
1068: ldc           #15
1070: invokevirtual #13
1073: dconst_0
1074: invokevirtual #60
1077: ldc           #12
1079: invokevirtual #13
1082: invokevirtual #16
1085: dload         35
1087: dconst_0
1088: dcmpl
1089: ifne          1096
1092: iconst_1
1093: goto          1097
1096: iconst_0
1097: invokestatic  #17
1100: new           #10
1103: dup
1104: invokespecial #11
1107: ldc           #12
1109: invokevirtual #13
1112: dload         40
1114: invokevirtual #60
1117: ldc           #15
1119: invokevirtual #13
1122: dconst_0
1123: invokevirtual #60
1126: ldc           #12
1128: invokevirtual #13
1131: invokevirtual #16
1134: dload         40
1136: dconst_0
1137: dcmpl
1138: ifne          1145
1141: iconst_1
1142: goto          1146
1145: iconst_0
1146: invokestatic  #17
1149: new           #10
1152: dup
1153: invokespecial #11
1156: ldc           #12
1158: invokevirtual #13
1161: dload         42
1163: invokevirtual #60
1166: ldc           #15
1168: invokevirtual #13
1171: dconst_0
1172: invokevirtual #60
1175: ldc           #12
1177: invokevirtual #13
1180: invokevirtual #16
1183: dload         42
1185: dconst_0
1186: dcmpl
1187: ifne          1194
1190: iconst_1
1191: goto          1195
1194: iconst_0
1195: invokestatic  #17
1198: new           #10
1201: dup
1202: invokespecial #11
1205: ldc           #12
1207: invokevirtual #13
1210: dload         47
1212: invokevirtual #60
1215: ldc           #15
1217: invokevirtual #13
1220: dconst_0
1221: invokevirtual #60
1224: ldc           #12
1226: invokevirtual #13
1229: invokevirtual #16
1232: dload         47
1234: dconst_0
1235: dcmpl
1236: ifne          1243
1239: iconst_1
1240: goto          1244
1243: iconst_0
1244: invokestatic  #17
1247: new           #10
1250: dup
1251: invokespecial #11
1254: ldc           #12
1256: invokevirtual #13
1259: dload         49
1261: invokevirtual #60
1264: ldc           #15
1266: invokevirtual #13
1269: dconst_0
1270: invokevirtual #60
1273: ldc           #12
1275: invokevirtual #13
1278: invokevirtual #16
1281: dload         49
1283: dconst_0
1284: dcmpl
1285: ifne          1292
1288: iconst_1
1289: goto          1293
1292: iconst_0
1293: invokestatic  #17
1296: new           #10
1299: dup
1300: invokespecial #11
1303: ldc           #12
1305: invokevirtual #13
1308: iload         51
1310: invokevirtual #14
1313: ldc           #15
1315: invokevirtual #13
1318: iconst_0
1319: invokevirtual #14
1322: ldc           #12
1324: invokevirtual #13
1327: invokevirtual #16
1330: iload         51
1332: ifne          1339
1335: iconst_1
1336: goto          1340
1339: iconst_0
1340: invokestatic  #17
1343: new           #10
1346: dup
1347: invokespecial #11
1350: ldc           #12
1352: invokevirtual #13
1355: dload         52
1357: invokevirtual #60
1360: ldc           #15
1362: invokevirtual #13
1365: dconst_0
1366: invokevirtual #60
1369: ldc           #12
1371: invokevirtual #13
1374: invokevirtual #16
1377: dload         52
1379: dconst_0
1380: dcmpl
1381: ifne          1388
1384: iconst_1
1385: goto          1389
1388: iconst_0
1389: invokestatic  #17
1392: aload         54
1394: invokestatic  #33
1397: new           #10
1400: dup
1401: invokespecial #11
1404: ldc           #12
1406: invokevirtual #13
1409: dload         57
1411: invokevirtual #60
1414: ldc           #15
1416: invokevirtual #13
1419: dconst_0
1420: invokevirtual #60
1423: ldc           #12
1425: invokevirtual #13
1428: invokevirtual #16
1431: dload         57
1433: dconst_0
1434: dcmpl
1435: ifne          1442
1438: iconst_1
1439: goto          1443
1442: iconst_0
1443: invokestatic  #17
1446: aload         59
1448: invokestatic  #33
1451: aload         60
1453: invokestatic  #33
1456: new           #10
1459: dup
1460: invokespecial #11
1463: ldc           #12
1465: invokevirtual #13
1468: dload         61
1470: invokevirtual #60
1473: ldc           #15
1475: invokevirtual #13
1478: ldc2_w        #63
1481: invokevirtual #60
1484: ldc           #12
1486: invokevirtual #13
1489: invokevirtual #16
1492: dload         61
1494: ldc2_w        #63
1497: dcmpl
1498: ifne          1505
1501: iconst_1
1502: goto          1506
1505: iconst_0
1506: invokestatic  #17
1509: new           #10
1512: dup
1513: invokespecial #11
1516: ldc           #12
1518: invokevirtual #13
1521: dload         64
1523: invokevirtual #60
1526: ldc           #15
1528: invokevirtual #13
1531: dconst_1
1532: invokevirtual #60
1535: ldc           #12
1537: invokevirtual #13
1540: invokevirtual #16
1543: dload         64
1545: dconst_1
1546: dcmpl
1547: ifne          1554
1550: iconst_1
1551: goto          1555
1554: iconst_0
1555: invokestatic  #17
1558: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 13031
End line: 13092
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D0 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D3 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double10 = vector3D6.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D9);
        double double11 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D3, vector3D9);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D14, vector3D20);
        boolean boolean23 = vector3D14.isInfinite();
        double double24 = vector3D3.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = vector3D14.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector26 = vector3D0.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation28 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D0, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector55 = vector3D29.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector58 = vector3D56.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation60 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D56, 5.298292365610485d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation61 = rotation28.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = rotation28.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(euclidean3DVector26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(euclidean3DVector55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(euclidean3DVector58);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(vector3D62);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #777
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #126
28: astore_1
29: new           #43
32: dup
33: dconst_1
34: ldc2_w        #44
37: invokespecial #46
40: astore_2
41: new           #43
44: dup
45: dconst_1
46: ldc2_w        #44
49: invokespecial #46
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: aload_3
67: aload         4
69: invokevirtual #47
72: dstore        5
74: aload_2
75: aload         4
77: invokestatic  #48
80: dstore        7
82: new           #43
85: dup
86: dconst_1
87: ldc2_w        #44
90: invokespecial #46
93: astore        9
95: new           #43
98: dup
99: dconst_1
100: ldc2_w        #44
103: invokespecial #46
106: astore        10
108: new           #43
111: dup
112: dconst_1
113: ldc2_w        #44
116: invokespecial #46
119: astore        11
121: aload         10
123: aload         11
125: invokevirtual #47
128: dstore        12
130: aload         9
132: aload         11
134: invokestatic  #48
137: dstore        14
139: aload         9
141: invokevirtual #49
144: istore        16
146: aload_2
147: aload         9
149: invokevirtual #50
152: dstore        17
154: aload         9
156: invokevirtual #54
159: astore        19
161: aload_1
162: aload         19
164: invokevirtual #55
167: astore        20
169: new           #27
172: dup
173: aload_1
174: ldc2_w        #72
177: invokespecial #103
180: astore        21
182: getstatic     #126
185: astore        22
187: new           #43
190: dup
191: dconst_1
192: ldc2_w        #44
195: invokespecial #46
198: astore        23
200: new           #43
203: dup
204: dconst_1
205: ldc2_w        #44
208: invokespecial #46
211: astore        24
213: new           #43
216: dup
217: dconst_1
218: ldc2_w        #44
221: invokespecial #46
224: astore        25
226: aload         24
228: aload         25
230: invokevirtual #47
233: dstore        26
235: aload         23
237: aload         25
239: invokestatic  #48
242: dstore        28
244: new           #43
247: dup
248: dconst_1
249: ldc2_w        #44
252: invokespecial #46
255: astore        30
257: new           #43
260: dup
261: dconst_1
262: ldc2_w        #44
265: invokespecial #46
268: astore        31
270: new           #43
273: dup
274: dconst_1
275: ldc2_w        #44
278: invokespecial #46
281: astore        32
283: aload         31
285: aload         32
287: invokevirtual #47
290: dstore        33
292: aload         30
294: aload         32
296: invokestatic  #48
299: dstore        35
301: aload         30
303: invokevirtual #49
306: istore        37
308: aload         23
310: aload         30
312: invokevirtual #50
315: dstore        38
317: aload         30
319: invokevirtual #54
322: astore        40
324: aload         22
326: aload         40
328: invokevirtual #55
331: astore        41
333: aload         22
335: invokevirtual #163
338: astore        42
340: aload         42
342: dconst_0
343: invokevirtual #107
346: astore        43
348: new           #27
351: dup
352: aload         42
354: ldc2_w        #612
357: invokespecial #103
360: astore        44
362: aload         21
364: aload         44
366: invokevirtual #474
369: astore        45
371: aload         21
373: invokevirtual #96
376: astore        46
378: aload_1
379: invokestatic  #33
382: new           #10
385: dup
386: invokespecial #11
389: ldc           #12
391: invokevirtual #13
394: dload         5
396: invokevirtual #60
399: ldc           #15
401: invokevirtual #13
404: dconst_0
405: invokevirtual #60
408: ldc           #12
410: invokevirtual #13
413: invokevirtual #16
416: dload         5
418: dconst_0
419: dcmpl
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #17
431: new           #10
434: dup
435: invokespecial #11
438: ldc           #12
440: invokevirtual #13
443: dload         7
445: invokevirtual #60
448: ldc           #15
450: invokevirtual #13
453: dconst_0
454: invokevirtual #60
457: ldc           #12
459: invokevirtual #13
462: invokevirtual #16
465: dload         7
467: dconst_0
468: dcmpl
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #17
480: new           #10
483: dup
484: invokespecial #11
487: ldc           #12
489: invokevirtual #13
492: dload         12
494: invokevirtual #60
497: ldc           #15
499: invokevirtual #13
502: dconst_0
503: invokevirtual #60
506: ldc           #12
508: invokevirtual #13
511: invokevirtual #16
514: dload         12
516: dconst_0
517: dcmpl
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #17
529: new           #10
532: dup
533: invokespecial #11
536: ldc           #12
538: invokevirtual #13
541: dload         14
543: invokevirtual #60
546: ldc           #15
548: invokevirtual #13
551: dconst_0
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         14
565: dconst_0
566: dcmpl
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #17
578: new           #10
581: dup
582: invokespecial #11
585: ldc           #12
587: invokevirtual #13
590: iload         16
592: invokevirtual #14
595: ldc           #15
597: invokevirtual #13
600: iconst_0
601: invokevirtual #14
604: ldc           #12
606: invokevirtual #13
609: invokevirtual #16
612: iload         16
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #17
625: new           #10
628: dup
629: invokespecial #11
632: ldc           #12
634: invokevirtual #13
637: dload         17
639: invokevirtual #60
642: ldc           #15
644: invokevirtual #13
647: dconst_0
648: invokevirtual #60
651: ldc           #12
653: invokevirtual #13
656: invokevirtual #16
659: dload         17
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #17
674: aload         19
676: invokestatic  #33
679: aload         20
681: invokestatic  #33
684: aload         22
686: invokestatic  #33
689: new           #10
692: dup
693: invokespecial #11
696: ldc           #12
698: invokevirtual #13
701: dload         26
703: invokevirtual #60
706: ldc           #15
708: invokevirtual #13
711: dconst_0
712: invokevirtual #60
715: ldc           #12
717: invokevirtual #13
720: invokevirtual #16
723: dload         26
725: dconst_0
726: dcmpl
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #17
738: new           #10
741: dup
742: invokespecial #11
745: ldc           #12
747: invokevirtual #13
750: dload         28
752: invokevirtual #60
755: ldc           #15
757: invokevirtual #13
760: dconst_0
761: invokevirtual #60
764: ldc           #12
766: invokevirtual #13
769: invokevirtual #16
772: dload         28
774: dconst_0
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #17
787: new           #10
790: dup
791: invokespecial #11
794: ldc           #12
796: invokevirtual #13
799: dload         33
801: invokevirtual #60
804: ldc           #15
806: invokevirtual #13
809: dconst_0
810: invokevirtual #60
813: ldc           #12
815: invokevirtual #13
818: invokevirtual #16
821: dload         33
823: dconst_0
824: dcmpl
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #17
836: new           #10
839: dup
840: invokespecial #11
843: ldc           #12
845: invokevirtual #13
848: dload         35
850: invokevirtual #60
853: ldc           #15
855: invokevirtual #13
858: dconst_0
859: invokevirtual #60
862: ldc           #12
864: invokevirtual #13
867: invokevirtual #16
870: dload         35
872: dconst_0
873: dcmpl
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #17
885: new           #10
888: dup
889: invokespecial #11
892: ldc           #12
894: invokevirtual #13
897: iload         37
899: invokevirtual #14
902: ldc           #15
904: invokevirtual #13
907: iconst_0
908: invokevirtual #14
911: ldc           #12
913: invokevirtual #13
916: invokevirtual #16
919: iload         37
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #17
932: new           #10
935: dup
936: invokespecial #11
939: ldc           #12
941: invokevirtual #13
944: dload         38
946: invokevirtual #60
949: ldc           #15
951: invokevirtual #13
954: dconst_0
955: invokevirtual #60
958: ldc           #12
960: invokevirtual #13
963: invokevirtual #16
966: dload         38
968: dconst_0
969: dcmpl
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #17
981: aload         40
983: invokestatic  #33
986: aload         41
988: invokestatic  #33
991: aload         42
993: invokestatic  #33
996: aload         43
998: invokestatic  #33
1001: aload         45
1003: invokestatic  #33
1006: aload         46
1008: invokestatic  #33
1011: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 13095
End line: 13103
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(1.079574528E9d, 0.0d, (double) 31, (-1.0d), false);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 31.0d + "'", double6 == 31.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #778
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #271
32: dconst_0
33: ldc2_w        #273
36: ldc2_w        #66
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #139
48: dstore_2
49: aload_1
50: invokevirtual #240
53: dstore        4
55: new           #10
58: dup
59: invokespecial #11
62: ldc           #12
64: invokevirtual #13
67: dload_2
68: invokevirtual #60
71: ldc           #15
73: invokevirtual #13
76: ldc2_w        #273
79: invokevirtual #60
82: ldc           #12
84: invokevirtual #13
87: invokevirtual #16
90: dload_2
91: ldc2_w        #273
94: dcmpl
95: ifne          102
98: iconst_1
99: goto          103
102: iconst_0
103: invokestatic  #17
106: dload         4
108: invokestatic  #242
111: invokestatic  #243
114: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 13106
End line: 13143
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D7 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D10 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double17 = vector3D13.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D16);
        double double18 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D10, vector3D16);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D21 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double28 = vector3D24.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        double double29 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D21, vector3D27);
        boolean boolean30 = vector3D21.isInfinite();
        double double31 = vector3D10.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D21);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D21.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector33 = vector3D7.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation35 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D7, 1.079574538E9d);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation36 = rotation5.applyInverseTo(rotation35);
        double double37 = rotation36.getQ1();
        double double38 = rotation36.getQ3();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(euclidean3DVector33);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #779
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: aload_1
45: invokevirtual #96
48: astore_2
49: getstatic     #126
52: astore_3
53: new           #43
56: dup
57: dconst_1
58: ldc2_w        #44
61: invokespecial #46
64: astore        4
66: new           #43
69: dup
70: dconst_1
71: ldc2_w        #44
74: invokespecial #46
77: astore        5
79: new           #43
82: dup
83: dconst_1
84: ldc2_w        #44
87: invokespecial #46
90: astore        6
92: aload         5
94: aload         6
96: invokevirtual #47
99: dstore        7
101: aload         4
103: aload         6
105: invokestatic  #48
108: dstore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        11
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        12
136: new           #43
139: dup
140: dconst_1
141: ldc2_w        #44
144: invokespecial #46
147: astore        13
149: aload         12
151: aload         13
153: invokevirtual #47
156: dstore        14
158: aload         11
160: aload         13
162: invokestatic  #48
165: dstore        16
167: aload         11
169: invokevirtual #49
172: istore        18
174: aload         4
176: aload         11
178: invokevirtual #50
181: dstore        19
183: aload         11
185: invokevirtual #54
188: astore        21
190: aload_3
191: aload         21
193: invokevirtual #55
196: astore        22
198: new           #27
201: dup
202: aload_3
203: ldc2_w        #72
206: invokespecial #103
209: astore        23
211: aload_1
212: aload         23
214: invokevirtual #474
217: astore        24
219: aload         24
221: invokevirtual #94
224: dstore        25
226: aload         24
228: invokevirtual #95
231: dstore        27
233: aload_2
234: invokestatic  #33
237: aload_3
238: invokestatic  #33
241: new           #10
244: dup
245: invokespecial #11
248: ldc           #12
250: invokevirtual #13
253: dload         7
255: invokevirtual #60
258: ldc           #15
260: invokevirtual #13
263: dconst_0
264: invokevirtual #60
267: ldc           #12
269: invokevirtual #13
272: invokevirtual #16
275: dload         7
277: dconst_0
278: dcmpl
279: ifne          286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #17
290: new           #10
293: dup
294: invokespecial #11
297: ldc           #12
299: invokevirtual #13
302: dload         9
304: invokevirtual #60
307: ldc           #15
309: invokevirtual #13
312: dconst_0
313: invokevirtual #60
316: ldc           #12
318: invokevirtual #13
321: invokevirtual #16
324: dload         9
326: dconst_0
327: dcmpl
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #17
339: new           #10
342: dup
343: invokespecial #11
346: ldc           #12
348: invokevirtual #13
351: dload         14
353: invokevirtual #60
356: ldc           #15
358: invokevirtual #13
361: dconst_0
362: invokevirtual #60
365: ldc           #12
367: invokevirtual #13
370: invokevirtual #16
373: dload         14
375: dconst_0
376: dcmpl
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #17
388: new           #10
391: dup
392: invokespecial #11
395: ldc           #12
397: invokevirtual #13
400: dload         16
402: invokevirtual #60
405: ldc           #15
407: invokevirtual #13
410: dconst_0
411: invokevirtual #60
414: ldc           #12
416: invokevirtual #13
419: invokevirtual #16
422: dload         16
424: dconst_0
425: dcmpl
426: ifne          433
429: iconst_1
430: goto          434
433: iconst_0
434: invokestatic  #17
437: new           #10
440: dup
441: invokespecial #11
444: ldc           #12
446: invokevirtual #13
449: iload         18
451: invokevirtual #14
454: ldc           #15
456: invokevirtual #13
459: iconst_0
460: invokevirtual #14
463: ldc           #12
465: invokevirtual #13
468: invokevirtual #16
471: iload         18
473: ifne          480
476: iconst_1
477: goto          481
480: iconst_0
481: invokestatic  #17
484: new           #10
487: dup
488: invokespecial #11
491: ldc           #12
493: invokevirtual #13
496: dload         19
498: invokevirtual #60
501: ldc           #15
503: invokevirtual #13
506: dconst_0
507: invokevirtual #60
510: ldc           #12
512: invokevirtual #13
515: invokevirtual #16
518: dload         19
520: dconst_0
521: dcmpl
522: ifne          529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #17
533: aload         21
535: invokestatic  #33
538: aload         22
540: invokestatic  #33
543: aload         24
545: invokestatic  #33
548: dload         25
550: invokestatic  #242
553: invokestatic  #243
556: dload         27
558: invokestatic  #242
561: invokestatic  #243
564: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 13146
End line: 13216
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D13 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D16 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double20 = vector3D16.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        double double21 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D13, vector3D19);
        boolean boolean22 = vector3D13.isInfinite();
        double double23 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D13);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D24 = vector3D13.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D27 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D30 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double31 = vector3D27.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D30);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = vector3D24.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D27);
        boolean boolean33 = vector3D27.isInfinite();
        java.lang.Object obj34 = null;
        boolean boolean35 = vector3D27.equals(obj34);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = vector3D36.negate();
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray40 = null;
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) vector3D38, localizable39, objArray40);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D42 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.ZERO;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.PLUS_I;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D45 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation52 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D53 = rotation52.getAxis();
        double double54 = rotation52.getQ3();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D55 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NaN;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = rotation52.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D43.add((-1.9910581420683684d), (org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D55);
        double double58 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distance1(vector3D42, vector3D57);
        double double59 = vector3D38.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector60 = vector3D38.normalize();
        double double61 = vector3D27.distanceSq(euclidean3DVector60);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(euclidean3DVector60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2.80193850376478d + "'", double61 == 2.80193850376478d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #780
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: new           #43
78: dup
79: dconst_1
80: ldc2_w        #44
83: invokespecial #46
86: astore        8
88: new           #43
91: dup
92: dconst_1
93: ldc2_w        #44
96: invokespecial #46
99: astore        9
101: new           #43
104: dup
105: dconst_1
106: ldc2_w        #44
109: invokespecial #46
112: astore        10
114: aload         9
116: aload         10
118: invokevirtual #47
121: dstore        11
123: aload         8
125: aload         10
127: invokestatic  #48
130: dstore        13
132: aload         8
134: invokevirtual #49
137: istore        15
139: aload_1
140: aload         8
142: invokevirtual #50
145: dstore        16
147: aload         8
149: invokevirtual #54
152: astore        18
154: new           #43
157: dup
158: dconst_1
159: ldc2_w        #44
162: invokespecial #46
165: astore        19
167: new           #43
170: dup
171: dconst_1
172: ldc2_w        #44
175: invokespecial #46
178: astore        20
180: aload         19
182: aload         20
184: invokevirtual #47
187: dstore        21
189: aload         18
191: aload         19
193: invokevirtual #55
196: astore        23
198: aload         19
200: invokevirtual #49
203: istore        24
205: aconst_null
206: astore        25
208: aload         19
210: aload         25
212: invokevirtual #302
215: istore        26
217: getstatic     #432
220: astore        27
222: aload         27
224: invokevirtual #163
227: astore        28
229: aload         27
231: invokevirtual #54
234: astore        29
236: aconst_null
237: astore        30
239: aconst_null
240: astore        31
242: aload         29
244: aload         30
246: aload         31
248: invokestatic  #328
251: getstatic     #433
254: astore        32
256: getstatic     #432
259: astore        33
261: aload         33
263: invokevirtual #163
266: astore        34
268: aload         33
270: invokevirtual #54
273: astore        35
275: new           #27
278: dup
279: ldc2_w        #146
282: ldc2_w        #72
285: ldc2_w        #148
288: dconst_1
289: iconst_0
290: invokespecial #150
293: astore        36
295: aload         36
297: invokevirtual #96
300: astore        37
302: aload         36
304: invokevirtual #95
307: dstore        38
309: getstatic     #314
312: astore        40
314: aload         36
316: aload         40
318: invokevirtual #98
321: astore        41
323: aload         33
325: ldc2_w        #434
328: aload         40
330: invokevirtual #182
333: astore        42
335: aload         32
337: aload         42
339: invokestatic  #127
342: dstore        43
344: aload         29
346: aload         42
348: invokevirtual #53
351: dstore        45
353: aload         29
355: invokevirtual #193
358: astore        47
360: aload         19
362: aload         47
364: invokevirtual #53
367: dstore        48
369: new           #10
372: dup
373: invokespecial #11
376: ldc           #12
378: invokevirtual #13
381: dload         4
383: invokevirtual #60
386: ldc           #15
388: invokevirtual #13
391: dconst_0
392: invokevirtual #60
395: ldc           #12
397: invokevirtual #13
400: invokevirtual #16
403: dload         4
405: dconst_0
406: dcmpl
407: ifne          414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #17
418: new           #10
421: dup
422: invokespecial #11
425: ldc           #12
427: invokevirtual #13
430: dload         6
432: invokevirtual #60
435: ldc           #15
437: invokevirtual #13
440: dconst_0
441: invokevirtual #60
444: ldc           #12
446: invokevirtual #13
449: invokevirtual #16
452: dload         6
454: dconst_0
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #17
467: new           #10
470: dup
471: invokespecial #11
474: ldc           #12
476: invokevirtual #13
479: dload         11
481: invokevirtual #60
484: ldc           #15
486: invokevirtual #13
489: dconst_0
490: invokevirtual #60
493: ldc           #12
495: invokevirtual #13
498: invokevirtual #16
501: dload         11
503: dconst_0
504: dcmpl
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #17
516: new           #10
519: dup
520: invokespecial #11
523: ldc           #12
525: invokevirtual #13
528: dload         13
530: invokevirtual #60
533: ldc           #15
535: invokevirtual #13
538: dconst_0
539: invokevirtual #60
542: ldc           #12
544: invokevirtual #13
547: invokevirtual #16
550: dload         13
552: dconst_0
553: dcmpl
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #17
565: new           #10
568: dup
569: invokespecial #11
572: ldc           #12
574: invokevirtual #13
577: iload         15
579: invokevirtual #14
582: ldc           #15
584: invokevirtual #13
587: iconst_0
588: invokevirtual #14
591: ldc           #12
593: invokevirtual #13
596: invokevirtual #16
599: iload         15
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #17
612: new           #10
615: dup
616: invokespecial #11
619: ldc           #12
621: invokevirtual #13
624: dload         16
626: invokevirtual #60
629: ldc           #15
631: invokevirtual #13
634: dconst_0
635: invokevirtual #60
638: ldc           #12
640: invokevirtual #13
643: invokevirtual #16
646: dload         16
648: dconst_0
649: dcmpl
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #17
661: aload         18
663: invokestatic  #33
666: new           #10
669: dup
670: invokespecial #11
673: ldc           #12
675: invokevirtual #13
678: dload         21
680: invokevirtual #60
683: ldc           #15
685: invokevirtual #13
688: dconst_0
689: invokevirtual #60
692: ldc           #12
694: invokevirtual #13
697: invokevirtual #16
700: dload         21
702: dconst_0
703: dcmpl
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #17
715: aload         23
717: invokestatic  #33
720: new           #10
723: dup
724: invokespecial #11
727: ldc           #12
729: invokevirtual #13
732: iload         24
734: invokevirtual #14
737: ldc           #15
739: invokevirtual #13
742: iconst_0
743: invokevirtual #14
746: ldc           #12
748: invokevirtual #13
751: invokevirtual #16
754: iload         24
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #17
767: new           #10
770: dup
771: invokespecial #11
774: ldc           #12
776: invokevirtual #13
779: iload         26
781: invokevirtual #14
784: ldc           #15
786: invokevirtual #13
789: iconst_0
790: invokevirtual #14
793: ldc           #12
795: invokevirtual #13
798: invokevirtual #16
801: iload         26
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #17
814: aload         27
816: invokestatic  #33
819: aload         28
821: invokestatic  #33
824: aload         29
826: invokestatic  #33
829: aload         32
831: invokestatic  #33
834: aload         33
836: invokestatic  #33
839: aload         34
841: invokestatic  #33
844: aload         35
846: invokestatic  #33
849: aload         37
851: invokestatic  #33
854: new           #10
857: dup
858: invokespecial #11
861: ldc           #12
863: invokevirtual #13
866: dload         38
868: invokevirtual #60
871: ldc           #15
873: invokevirtual #13
876: dconst_1
877: invokevirtual #60
880: ldc           #12
882: invokevirtual #13
885: invokevirtual #16
888: dload         38
890: dconst_1
891: dcmpl
892: ifne          899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #17
903: aload         40
905: invokestatic  #33
908: aload         41
910: invokestatic  #33
913: aload         42
915: invokestatic  #33
918: dload         43
920: invokestatic  #242
923: invokestatic  #243
926: dload         45
928: invokestatic  #242
931: invokestatic  #243
934: aload         47
936: invokestatic  #33
939: new           #10
942: dup
943: invokespecial #11
946: ldc           #12
948: invokevirtual #13
951: dload         48
953: invokevirtual #60
956: ldc           #15
958: invokevirtual #13
961: ldc2_w        #781
964: invokevirtual #60
967: ldc           #12
969: invokevirtual #13
972: invokevirtual #16
975: dload         48
977: ldc2_w        #781
980: dcmpl
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #17
992: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 13219
End line: 13307
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double9 = vector3D5.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D8);
        double double10 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D2, vector3D8);
        boolean boolean11 = vector3D2.isInfinite();
        double double12 = vector3D2.getNorm1();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D18 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double19 = vector3D15.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D18);
        double double20 = vector3D18.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = vector3D26.getDelta();
        double double29 = vector3D18.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D35 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D38 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double39 = vector3D35.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D38);
        double double40 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D32, vector3D38);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D46 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double50 = vector3D46.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D49);
        double double51 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D43, vector3D49);
        boolean boolean52 = vector3D43.isInfinite();
        double double53 = vector3D32.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = vector3D43.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double61 = vector3D57.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D60);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D62 = vector3D54.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D57);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = vector3D18.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D62);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation64 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, vector3D18);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.NEGATIVE_INFINITY;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        double double87 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D79, vector3D85);
        boolean boolean88 = vector3D79.isInfinite();
        double double89 = vector3D68.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D79);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D90 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector91 = vector3D65.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D90);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D92 = vector3D65.orthogonal();
        double double93 = vector3D2.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D65);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D2, 2.7681156723791426E13d);
        double double96 = rotation95.getQ1();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6957086881730823d + "'", double12 == 1.6957086881730823d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7345682747147468d + "'", double20 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.7345682747147468d + "'", double28 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(euclidean3DVector91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + Double.POSITIVE_INFINITY + "'", double93 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-0.1703758816464326d) + "'", double96 == (-0.1703758816464326d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #783
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: new           #43
52: dup
53: dconst_1
54: ldc2_w        #44
57: invokespecial #46
60: astore_3
61: aload_2
62: aload_3
63: invokevirtual #47
66: dstore        4
68: aload_1
69: aload_3
70: invokestatic  #48
73: dstore        6
75: aload_1
76: invokevirtual #49
79: istore        8
81: aload_1
82: invokevirtual #162
85: dstore        9
87: new           #43
90: dup
91: dconst_1
92: ldc2_w        #44
95: invokespecial #46
98: astore        11
100: new           #43
103: dup
104: dconst_1
105: ldc2_w        #44
108: invokespecial #46
111: astore        12
113: aload         11
115: aload         12
117: invokevirtual #47
120: dstore        13
122: aload         12
124: invokevirtual #52
127: dstore        15
129: new           #43
132: dup
133: dconst_1
134: ldc2_w        #44
137: invokespecial #46
140: astore        17
142: new           #43
145: dup
146: dconst_1
147: ldc2_w        #44
150: invokespecial #46
153: astore        18
155: aload         17
157: aload         18
159: invokevirtual #47
162: dstore        19
164: aload         18
166: invokevirtual #52
169: dstore        21
171: aload         12
173: aload         18
175: invokevirtual #53
178: dstore        23
180: new           #43
183: dup
184: dconst_1
185: ldc2_w        #44
188: invokespecial #46
191: astore        25
193: new           #43
196: dup
197: dconst_1
198: ldc2_w        #44
201: invokespecial #46
204: astore        26
206: new           #43
209: dup
210: dconst_1
211: ldc2_w        #44
214: invokespecial #46
217: astore        27
219: aload         26
221: aload         27
223: invokevirtual #47
226: dstore        28
228: aload         25
230: aload         27
232: invokestatic  #48
235: dstore        30
237: new           #43
240: dup
241: dconst_1
242: ldc2_w        #44
245: invokespecial #46
248: astore        32
250: new           #43
253: dup
254: dconst_1
255: ldc2_w        #44
258: invokespecial #46
261: astore        33
263: new           #43
266: dup
267: dconst_1
268: ldc2_w        #44
271: invokespecial #46
274: astore        34
276: aload         33
278: aload         34
280: invokevirtual #47
283: dstore        35
285: aload         32
287: aload         34
289: invokestatic  #48
292: dstore        37
294: aload         32
296: invokevirtual #49
299: istore        39
301: aload         25
303: aload         32
305: invokevirtual #50
308: dstore        40
310: aload         32
312: invokevirtual #54
315: astore        42
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        43
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        44
343: aload         43
345: aload         44
347: invokevirtual #47
350: dstore        45
352: aload         42
354: aload         43
356: invokevirtual #55
359: astore        47
361: aload         12
363: aload         47
365: invokevirtual #55
368: astore        48
370: new           #27
373: dup
374: aload_1
375: aload         12
377: invokespecial #56
380: astore        49
382: getstatic     #126
385: astore        50
387: new           #43
390: dup
391: dconst_1
392: ldc2_w        #44
395: invokespecial #46
398: astore        51
400: new           #43
403: dup
404: dconst_1
405: ldc2_w        #44
408: invokespecial #46
411: astore        52
413: new           #43
416: dup
417: dconst_1
418: ldc2_w        #44
421: invokespecial #46
424: astore        53
426: aload         52
428: aload         53
430: invokevirtual #47
433: dstore        54
435: aload         51
437: aload         53
439: invokestatic  #48
442: dstore        56
444: new           #43
447: dup
448: dconst_1
449: ldc2_w        #44
452: invokespecial #46
455: astore        58
457: new           #43
460: dup
461: dconst_1
462: ldc2_w        #44
465: invokespecial #46
468: astore        59
470: new           #43
473: dup
474: dconst_1
475: ldc2_w        #44
478: invokespecial #46
481: astore        60
483: aload         59
485: aload         60
487: invokevirtual #47
490: dstore        61
492: aload         58
494: aload         60
496: invokestatic  #48
499: dstore        63
501: aload         58
503: invokevirtual #49
506: istore        65
508: aload         51
510: aload         58
512: invokevirtual #50
515: dstore        66
517: aload         58
519: invokevirtual #54
522: astore        68
524: aload         50
526: aload         68
528: invokevirtual #55
531: astore        69
533: aload         50
535: invokevirtual #163
538: astore        70
540: aload_1
541: aload         50
543: invokevirtual #50
546: dstore        71
548: new           #27
551: dup
552: aload_1
553: ldc2_w        #164
556: invokespecial #103
559: astore        73
561: aload         73
563: invokevirtual #94
566: dstore        74
568: new           #10
571: dup
572: invokespecial #11
575: ldc           #12
577: invokevirtual #13
580: dload         4
582: invokevirtual #60
585: ldc           #15
587: invokevirtual #13
590: dconst_0
591: invokevirtual #60
594: ldc           #12
596: invokevirtual #13
599: invokevirtual #16
602: dload         4
604: dconst_0
605: dcmpl
606: ifne          613
609: iconst_1
610: goto          614
613: iconst_0
614: invokestatic  #17
617: new           #10
620: dup
621: invokespecial #11
624: ldc           #12
626: invokevirtual #13
629: dload         6
631: invokevirtual #60
634: ldc           #15
636: invokevirtual #13
639: dconst_0
640: invokevirtual #60
643: ldc           #12
645: invokevirtual #13
648: invokevirtual #16
651: dload         6
653: dconst_0
654: dcmpl
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #17
666: new           #10
669: dup
670: invokespecial #11
673: ldc           #12
675: invokevirtual #13
678: iload         8
680: invokevirtual #14
683: ldc           #15
685: invokevirtual #13
688: iconst_0
689: invokevirtual #14
692: ldc           #12
694: invokevirtual #13
697: invokevirtual #16
700: iload         8
702: ifne          709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #17
713: new           #10
716: dup
717: invokespecial #11
720: ldc           #12
722: invokevirtual #13
725: dload         9
727: invokevirtual #60
730: ldc           #15
732: invokevirtual #13
735: ldc2_w        #167
738: invokevirtual #60
741: ldc           #12
743: invokevirtual #13
746: invokevirtual #16
749: dload         9
751: ldc2_w        #167
754: dcmpl
755: ifne          762
758: iconst_1
759: goto          763
762: iconst_0
763: invokestatic  #17
766: new           #10
769: dup
770: invokespecial #11
773: ldc           #12
775: invokevirtual #13
778: dload         13
780: invokevirtual #60
783: ldc           #15
785: invokevirtual #13
788: dconst_0
789: invokevirtual #60
792: ldc           #12
794: invokevirtual #13
797: invokevirtual #16
800: dload         13
802: dconst_0
803: dcmpl
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #17
815: new           #10
818: dup
819: invokespecial #11
822: ldc           #12
824: invokevirtual #13
827: dload         15
829: invokevirtual #60
832: ldc           #15
834: invokevirtual #13
837: ldc2_w        #61
840: invokevirtual #60
843: ldc           #12
845: invokevirtual #13
848: invokevirtual #16
851: dload         15
853: ldc2_w        #61
856: dcmpl
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #17
868: new           #10
871: dup
872: invokespecial #11
875: ldc           #12
877: invokevirtual #13
880: dload         19
882: invokevirtual #60
885: ldc           #15
887: invokevirtual #13
890: dconst_0
891: invokevirtual #60
894: ldc           #12
896: invokevirtual #13
899: invokevirtual #16
902: dload         19
904: dconst_0
905: dcmpl
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #17
917: new           #10
920: dup
921: invokespecial #11
924: ldc           #12
926: invokevirtual #13
929: dload         21
931: invokevirtual #60
934: ldc           #15
936: invokevirtual #13
939: ldc2_w        #61
942: invokevirtual #60
945: ldc           #12
947: invokevirtual #13
950: invokevirtual #16
953: dload         21
955: ldc2_w        #61
958: dcmpl
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #17
970: new           #10
973: dup
974: invokespecial #11
977: ldc           #12
979: invokevirtual #13
982: dload         23
984: invokevirtual #60
987: ldc           #15
989: invokevirtual #13
992: dconst_0
993: invokevirtual #60
996: ldc           #12
998: invokevirtual #13
1001: invokevirtual #16
1004: dload         23
1006: dconst_0
1007: dcmpl
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #17
1019: new           #10
1022: dup
1023: invokespecial #11
1026: ldc           #12
1028: invokevirtual #13
1031: dload         28
1033: invokevirtual #60
1036: ldc           #15
1038: invokevirtual #13
1041: dconst_0
1042: invokevirtual #60
1045: ldc           #12
1047: invokevirtual #13
1050: invokevirtual #16
1053: dload         28
1055: dconst_0
1056: dcmpl
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #17
1068: new           #10
1071: dup
1072: invokespecial #11
1075: ldc           #12
1077: invokevirtual #13
1080: dload         30
1082: invokevirtual #60
1085: ldc           #15
1087: invokevirtual #13
1090: dconst_0
1091: invokevirtual #60
1094: ldc           #12
1096: invokevirtual #13
1099: invokevirtual #16
1102: dload         30
1104: dconst_0
1105: dcmpl
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #17
1117: new           #10
1120: dup
1121: invokespecial #11
1124: ldc           #12
1126: invokevirtual #13
1129: dload         35
1131: invokevirtual #60
1134: ldc           #15
1136: invokevirtual #13
1139: dconst_0
1140: invokevirtual #60
1143: ldc           #12
1145: invokevirtual #13
1148: invokevirtual #16
1151: dload         35
1153: dconst_0
1154: dcmpl
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #17
1166: new           #10
1169: dup
1170: invokespecial #11
1173: ldc           #12
1175: invokevirtual #13
1178: dload         37
1180: invokevirtual #60
1183: ldc           #15
1185: invokevirtual #13
1188: dconst_0
1189: invokevirtual #60
1192: ldc           #12
1194: invokevirtual #13
1197: invokevirtual #16
1200: dload         37
1202: dconst_0
1203: dcmpl
1204: ifne          1211
1207: iconst_1
1208: goto          1212
1211: iconst_0
1212: invokestatic  #17
1215: new           #10
1218: dup
1219: invokespecial #11
1222: ldc           #12
1224: invokevirtual #13
1227: iload         39
1229: invokevirtual #14
1232: ldc           #15
1234: invokevirtual #13
1237: iconst_0
1238: invokevirtual #14
1241: ldc           #12
1243: invokevirtual #13
1246: invokevirtual #16
1249: iload         39
1251: ifne          1258
1254: iconst_1
1255: goto          1259
1258: iconst_0
1259: invokestatic  #17
1262: new           #10
1265: dup
1266: invokespecial #11
1269: ldc           #12
1271: invokevirtual #13
1274: dload         40
1276: invokevirtual #60
1279: ldc           #15
1281: invokevirtual #13
1284: dconst_0
1285: invokevirtual #60
1288: ldc           #12
1290: invokevirtual #13
1293: invokevirtual #16
1296: dload         40
1298: dconst_0
1299: dcmpl
1300: ifne          1307
1303: iconst_1
1304: goto          1308
1307: iconst_0
1308: invokestatic  #17
1311: aload         42
1313: invokestatic  #33
1316: new           #10
1319: dup
1320: invokespecial #11
1323: ldc           #12
1325: invokevirtual #13
1328: dload         45
1330: invokevirtual #60
1333: ldc           #15
1335: invokevirtual #13
1338: dconst_0
1339: invokevirtual #60
1342: ldc           #12
1344: invokevirtual #13
1347: invokevirtual #16
1350: dload         45
1352: dconst_0
1353: dcmpl
1354: ifne          1361
1357: iconst_1
1358: goto          1362
1361: iconst_0
1362: invokestatic  #17
1365: aload         47
1367: invokestatic  #33
1370: aload         48
1372: invokestatic  #33
1375: aload         50
1377: invokestatic  #33
1380: new           #10
1383: dup
1384: invokespecial #11
1387: ldc           #12
1389: invokevirtual #13
1392: dload         54
1394: invokevirtual #60
1397: ldc           #15
1399: invokevirtual #13
1402: dconst_0
1403: invokevirtual #60
1406: ldc           #12
1408: invokevirtual #13
1411: invokevirtual #16
1414: dload         54
1416: dconst_0
1417: dcmpl
1418: ifne          1425
1421: iconst_1
1422: goto          1426
1425: iconst_0
1426: invokestatic  #17
1429: new           #10
1432: dup
1433: invokespecial #11
1436: ldc           #12
1438: invokevirtual #13
1441: dload         56
1443: invokevirtual #60
1446: ldc           #15
1448: invokevirtual #13
1451: dconst_0
1452: invokevirtual #60
1455: ldc           #12
1457: invokevirtual #13
1460: invokevirtual #16
1463: dload         56
1465: dconst_0
1466: dcmpl
1467: ifne          1474
1470: iconst_1
1471: goto          1475
1474: iconst_0
1475: invokestatic  #17
1478: new           #10
1481: dup
1482: invokespecial #11
1485: ldc           #12
1487: invokevirtual #13
1490: dload         61
1492: invokevirtual #60
1495: ldc           #15
1497: invokevirtual #13
1500: dconst_0
1501: invokevirtual #60
1504: ldc           #12
1506: invokevirtual #13
1509: invokevirtual #16
1512: dload         61
1514: dconst_0
1515: dcmpl
1516: ifne          1523
1519: iconst_1
1520: goto          1524
1523: iconst_0
1524: invokestatic  #17
1527: new           #10
1530: dup
1531: invokespecial #11
1534: ldc           #12
1536: invokevirtual #13
1539: dload         63
1541: invokevirtual #60
1544: ldc           #15
1546: invokevirtual #13
1549: dconst_0
1550: invokevirtual #60
1553: ldc           #12
1555: invokevirtual #13
1558: invokevirtual #16
1561: dload         63
1563: dconst_0
1564: dcmpl
1565: ifne          1572
1568: iconst_1
1569: goto          1573
1572: iconst_0
1573: invokestatic  #17
1576: new           #10
1579: dup
1580: invokespecial #11
1583: ldc           #12
1585: invokevirtual #13
1588: iload         65
1590: invokevirtual #14
1593: ldc           #15
1595: invokevirtual #13
1598: iconst_0
1599: invokevirtual #14
1602: ldc           #12
1604: invokevirtual #13
1607: invokevirtual #16
1610: iload         65
1612: ifne          1619
1615: iconst_1
1616: goto          1620
1619: iconst_0
1620: invokestatic  #17
1623: new           #10
1626: dup
1627: invokespecial #11
1630: ldc           #12
1632: invokevirtual #13
1635: dload         66
1637: invokevirtual #60
1640: ldc           #15
1642: invokevirtual #13
1645: dconst_0
1646: invokevirtual #60
1649: ldc           #12
1651: invokevirtual #13
1654: invokevirtual #16
1657: dload         66
1659: dconst_0
1660: dcmpl
1661: ifne          1668
1664: iconst_1
1665: goto          1669
1668: iconst_0
1669: invokestatic  #17
1672: aload         68
1674: invokestatic  #33
1677: aload         69
1679: invokestatic  #33
1682: aload         70
1684: invokestatic  #33
1687: new           #10
1690: dup
1691: invokespecial #11
1694: ldc           #12
1696: invokevirtual #13
1699: dload         71
1701: invokevirtual #60
1704: ldc           #15
1706: invokevirtual #13
1709: ldc2_w        #133
1712: invokevirtual #60
1715: ldc           #12
1717: invokevirtual #13
1720: invokevirtual #16
1723: dload         71
1725: ldc2_w        #133
1728: dcmpl
1729: ifne          1736
1732: iconst_1
1733: goto          1737
1736: iconst_0
1737: invokestatic  #17
1740: new           #10
1743: dup
1744: invokespecial #11
1747: ldc           #12
1749: invokevirtual #13
1752: dload         74
1754: invokevirtual #60
1757: ldc           #15
1759: invokevirtual #13
1762: ldc2_w        #784
1765: invokevirtual #60
1768: ldc           #12
1770: invokevirtual #13
1773: invokevirtual #16
1776: dload         74
1778: ldc2_w        #784
1781: dcmpl
1782: ifne          1789
1785: iconst_1
1786: goto          1790
1789: iconst_0
1790: invokestatic  #17
1793: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 13310
End line: 13394
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Number number1 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException4 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable0, number1, (java.lang.Number) (byte) -1, false);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D15 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double16 = vector3D12.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D15);
        double double17 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D9, vector3D15);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D23 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double27 = vector3D23.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D26);
        double double28 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D20, vector3D26);
        boolean boolean29 = vector3D20.isInfinite();
        double double30 = vector3D9.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.Space space31 = vector3D20.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D34 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double38 = vector3D34.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D41 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D44 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double45 = vector3D41.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D44);
        double double46 = vector3D44.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D49 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D52 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double53 = vector3D49.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        double double54 = vector3D52.getDelta();
        double double55 = vector3D44.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D52);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D58 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D64 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double65 = vector3D61.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D64);
        double double66 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D58, vector3D64);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D69 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D72 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D75 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double76 = vector3D72.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D75);
        double double77 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D69, vector3D75);
        boolean boolean78 = vector3D69.isInfinite();
        double double79 = vector3D58.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D69);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D80 = vector3D69.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D83 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D86 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double87 = vector3D83.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D86);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D80.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D83);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D89 = vector3D44.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        double double90 = vector3D37.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D88);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation91 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D20, vector3D37);
        double double92 = rotation91.getQ2();
        double[][] doubleArray93 = rotation91.getMatrix();
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException(localizable6, (java.lang.Object[]) doubleArray93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException(localizable5, (java.lang.Object[]) doubleArray93);
        numberIsTooSmallException4.addSuppressed((java.lang.Throwable) mathException95);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(space31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.7345682747147468d + "'", double46 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7345682747147468d + "'", double54 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0000000000000002d + "'", double90 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #786
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: new           #315
32: dup
33: aload_1
34: aload_2
35: iconst_m1
36: invokestatic  #787
39: iconst_0
40: invokespecial #320
43: astore_3
44: aconst_null
45: astore        4
47: aconst_null
48: astore        5
50: new           #43
53: dup
54: dconst_1
55: ldc2_w        #44
58: invokespecial #46
61: astore        6
63: new           #43
66: dup
67: dconst_1
68: ldc2_w        #44
71: invokespecial #46
74: astore        7
76: new           #43
79: dup
80: dconst_1
81: ldc2_w        #44
84: invokespecial #46
87: astore        8
89: aload         7
91: aload         8
93: invokevirtual #47
96: dstore        9
98: aload         6
100: aload         8
102: invokestatic  #48
105: dstore        11
107: new           #43
110: dup
111: dconst_1
112: ldc2_w        #44
115: invokespecial #46
118: astore        13
120: new           #43
123: dup
124: dconst_1
125: ldc2_w        #44
128: invokespecial #46
131: astore        14
133: new           #43
136: dup
137: dconst_1
138: ldc2_w        #44
141: invokespecial #46
144: astore        15
146: aload         14
148: aload         15
150: invokevirtual #47
153: dstore        16
155: aload         13
157: aload         15
159: invokestatic  #48
162: dstore        18
164: aload         13
166: invokevirtual #49
169: istore        20
171: aload         6
173: aload         13
175: invokevirtual #50
178: dstore        21
180: aload         13
182: invokevirtual #51
185: astore        23
187: new           #43
190: dup
191: dconst_1
192: ldc2_w        #44
195: invokespecial #46
198: astore        24
200: new           #43
203: dup
204: dconst_1
205: ldc2_w        #44
208: invokespecial #46
211: astore        25
213: aload         24
215: aload         25
217: invokevirtual #47
220: dstore        26
222: new           #43
225: dup
226: dconst_1
227: ldc2_w        #44
230: invokespecial #46
233: astore        28
235: new           #43
238: dup
239: dconst_1
240: ldc2_w        #44
243: invokespecial #46
246: astore        29
248: aload         28
250: aload         29
252: invokevirtual #47
255: dstore        30
257: aload         29
259: invokevirtual #52
262: dstore        32
264: new           #43
267: dup
268: dconst_1
269: ldc2_w        #44
272: invokespecial #46
275: astore        34
277: new           #43
280: dup
281: dconst_1
282: ldc2_w        #44
285: invokespecial #46
288: astore        35
290: aload         34
292: aload         35
294: invokevirtual #47
297: dstore        36
299: aload         35
301: invokevirtual #52
304: dstore        38
306: aload         29
308: aload         35
310: invokevirtual #53
313: dstore        40
315: new           #43
318: dup
319: dconst_1
320: ldc2_w        #44
323: invokespecial #46
326: astore        42
328: new           #43
331: dup
332: dconst_1
333: ldc2_w        #44
336: invokespecial #46
339: astore        43
341: new           #43
344: dup
345: dconst_1
346: ldc2_w        #44
349: invokespecial #46
352: astore        44
354: aload         43
356: aload         44
358: invokevirtual #47
361: dstore        45
363: aload         42
365: aload         44
367: invokestatic  #48
370: dstore        47
372: new           #43
375: dup
376: dconst_1
377: ldc2_w        #44
380: invokespecial #46
383: astore        49
385: new           #43
388: dup
389: dconst_1
390: ldc2_w        #44
393: invokespecial #46
396: astore        50
398: new           #43
401: dup
402: dconst_1
403: ldc2_w        #44
406: invokespecial #46
409: astore        51
411: aload         50
413: aload         51
415: invokevirtual #47
418: dstore        52
420: aload         49
422: aload         51
424: invokestatic  #48
427: dstore        54
429: aload         49
431: invokevirtual #49
434: istore        56
436: aload         42
438: aload         49
440: invokevirtual #50
443: dstore        57
445: aload         49
447: invokevirtual #54
450: astore        59
452: new           #43
455: dup
456: dconst_1
457: ldc2_w        #44
460: invokespecial #46
463: astore        60
465: new           #43
468: dup
469: dconst_1
470: ldc2_w        #44
473: invokespecial #46
476: astore        61
478: aload         60
480: aload         61
482: invokevirtual #47
485: dstore        62
487: aload         59
489: aload         60
491: invokevirtual #55
494: astore        64
496: aload         29
498: aload         64
500: invokevirtual #55
503: astore        65
505: aload         25
507: aload         64
509: invokevirtual #53
512: dstore        66
514: new           #27
517: dup
518: aload         13
520: aload         25
522: invokespecial #56
525: astore        68
527: aload         68
529: invokevirtual #139
532: dstore        69
534: aload         68
536: invokevirtual #222
539: astore        71
541: new           #265
544: dup
545: aload         5
547: aload         71
549: checkcast     #248
552: invokespecial #266
555: astore        72
557: new           #265
560: dup
561: aload         4
563: aload         71
565: checkcast     #248
568: invokespecial #266
571: astore        73
573: aload_3
574: aload         73
576: invokevirtual #326
579: new           #10
582: dup
583: invokespecial #11
586: ldc           #12
588: invokevirtual #13
591: dload         9
593: invokevirtual #60
596: ldc           #15
598: invokevirtual #13
601: dconst_0
602: invokevirtual #60
605: ldc           #12
607: invokevirtual #13
610: invokevirtual #16
613: dload         9
615: dconst_0
616: dcmpl
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #17
628: new           #10
631: dup
632: invokespecial #11
635: ldc           #12
637: invokevirtual #13
640: dload         11
642: invokevirtual #60
645: ldc           #15
647: invokevirtual #13
650: dconst_0
651: invokevirtual #60
654: ldc           #12
656: invokevirtual #13
659: invokevirtual #16
662: dload         11
664: dconst_0
665: dcmpl
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #17
677: new           #10
680: dup
681: invokespecial #11
684: ldc           #12
686: invokevirtual #13
689: dload         16
691: invokevirtual #60
694: ldc           #15
696: invokevirtual #13
699: dconst_0
700: invokevirtual #60
703: ldc           #12
705: invokevirtual #13
708: invokevirtual #16
711: dload         16
713: dconst_0
714: dcmpl
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #17
726: new           #10
729: dup
730: invokespecial #11
733: ldc           #12
735: invokevirtual #13
738: dload         18
740: invokevirtual #60
743: ldc           #15
745: invokevirtual #13
748: dconst_0
749: invokevirtual #60
752: ldc           #12
754: invokevirtual #13
757: invokevirtual #16
760: dload         18
762: dconst_0
763: dcmpl
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #17
775: new           #10
778: dup
779: invokespecial #11
782: ldc           #12
784: invokevirtual #13
787: iload         20
789: invokevirtual #14
792: ldc           #15
794: invokevirtual #13
797: iconst_0
798: invokevirtual #14
801: ldc           #12
803: invokevirtual #13
806: invokevirtual #16
809: iload         20
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #17
822: new           #10
825: dup
826: invokespecial #11
829: ldc           #12
831: invokevirtual #13
834: dload         21
836: invokevirtual #60
839: ldc           #15
841: invokevirtual #13
844: dconst_0
845: invokevirtual #60
848: ldc           #12
850: invokevirtual #13
853: invokevirtual #16
856: dload         21
858: dconst_0
859: dcmpl
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #17
871: aload         23
873: invokestatic  #33
876: new           #10
879: dup
880: invokespecial #11
883: ldc           #12
885: invokevirtual #13
888: dload         26
890: invokevirtual #60
893: ldc           #15
895: invokevirtual #13
898: dconst_0
899: invokevirtual #60
902: ldc           #12
904: invokevirtual #13
907: invokevirtual #16
910: dload         26
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #17
925: new           #10
928: dup
929: invokespecial #11
932: ldc           #12
934: invokevirtual #13
937: dload         30
939: invokevirtual #60
942: ldc           #15
944: invokevirtual #13
947: dconst_0
948: invokevirtual #60
951: ldc           #12
953: invokevirtual #13
956: invokevirtual #16
959: dload         30
961: dconst_0
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         32
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: ldc2_w        #61
999: invokevirtual #60
1002: ldc           #12
1004: invokevirtual #13
1007: invokevirtual #16
1010: dload         32
1012: ldc2_w        #61
1015: dcmpl
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #17
1027: new           #10
1030: dup
1031: invokespecial #11
1034: ldc           #12
1036: invokevirtual #13
1039: dload         36
1041: invokevirtual #60
1044: ldc           #15
1046: invokevirtual #13
1049: dconst_0
1050: invokevirtual #60
1053: ldc           #12
1055: invokevirtual #13
1058: invokevirtual #16
1061: dload         36
1063: dconst_0
1064: dcmpl
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #17
1076: new           #10
1079: dup
1080: invokespecial #11
1083: ldc           #12
1085: invokevirtual #13
1088: dload         38
1090: invokevirtual #60
1093: ldc           #15
1095: invokevirtual #13
1098: ldc2_w        #61
1101: invokevirtual #60
1104: ldc           #12
1106: invokevirtual #13
1109: invokevirtual #16
1112: dload         38
1114: ldc2_w        #61
1117: dcmpl
1118: ifne          1125
1121: iconst_1
1122: goto          1126
1125: iconst_0
1126: invokestatic  #17
1129: new           #10
1132: dup
1133: invokespecial #11
1136: ldc           #12
1138: invokevirtual #13
1141: dload         40
1143: invokevirtual #60
1146: ldc           #15
1148: invokevirtual #13
1151: dconst_0
1152: invokevirtual #60
1155: ldc           #12
1157: invokevirtual #13
1160: invokevirtual #16
1163: dload         40
1165: dconst_0
1166: dcmpl
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #17
1178: new           #10
1181: dup
1182: invokespecial #11
1185: ldc           #12
1187: invokevirtual #13
1190: dload         45
1192: invokevirtual #60
1195: ldc           #15
1197: invokevirtual #13
1200: dconst_0
1201: invokevirtual #60
1204: ldc           #12
1206: invokevirtual #13
1209: invokevirtual #16
1212: dload         45
1214: dconst_0
1215: dcmpl
1216: ifne          1223
1219: iconst_1
1220: goto          1224
1223: iconst_0
1224: invokestatic  #17
1227: new           #10
1230: dup
1231: invokespecial #11
1234: ldc           #12
1236: invokevirtual #13
1239: dload         47
1241: invokevirtual #60
1244: ldc           #15
1246: invokevirtual #13
1249: dconst_0
1250: invokevirtual #60
1253: ldc           #12
1255: invokevirtual #13
1258: invokevirtual #16
1261: dload         47
1263: dconst_0
1264: dcmpl
1265: ifne          1272
1268: iconst_1
1269: goto          1273
1272: iconst_0
1273: invokestatic  #17
1276: new           #10
1279: dup
1280: invokespecial #11
1283: ldc           #12
1285: invokevirtual #13
1288: dload         52
1290: invokevirtual #60
1293: ldc           #15
1295: invokevirtual #13
1298: dconst_0
1299: invokevirtual #60
1302: ldc           #12
1304: invokevirtual #13
1307: invokevirtual #16
1310: dload         52
1312: dconst_0
1313: dcmpl
1314: ifne          1321
1317: iconst_1
1318: goto          1322
1321: iconst_0
1322: invokestatic  #17
1325: new           #10
1328: dup
1329: invokespecial #11
1332: ldc           #12
1334: invokevirtual #13
1337: dload         54
1339: invokevirtual #60
1342: ldc           #15
1344: invokevirtual #13
1347: dconst_0
1348: invokevirtual #60
1351: ldc           #12
1353: invokevirtual #13
1356: invokevirtual #16
1359: dload         54
1361: dconst_0
1362: dcmpl
1363: ifne          1370
1366: iconst_1
1367: goto          1371
1370: iconst_0
1371: invokestatic  #17
1374: new           #10
1377: dup
1378: invokespecial #11
1381: ldc           #12
1383: invokevirtual #13
1386: iload         56
1388: invokevirtual #14
1391: ldc           #15
1393: invokevirtual #13
1396: iconst_0
1397: invokevirtual #14
1400: ldc           #12
1402: invokevirtual #13
1405: invokevirtual #16
1408: iload         56
1410: ifne          1417
1413: iconst_1
1414: goto          1418
1417: iconst_0
1418: invokestatic  #17
1421: new           #10
1424: dup
1425: invokespecial #11
1428: ldc           #12
1430: invokevirtual #13
1433: dload         57
1435: invokevirtual #60
1438: ldc           #15
1440: invokevirtual #13
1443: dconst_0
1444: invokevirtual #60
1447: ldc           #12
1449: invokevirtual #13
1452: invokevirtual #16
1455: dload         57
1457: dconst_0
1458: dcmpl
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #17
1470: aload         59
1472: invokestatic  #33
1475: new           #10
1478: dup
1479: invokespecial #11
1482: ldc           #12
1484: invokevirtual #13
1487: dload         62
1489: invokevirtual #60
1492: ldc           #15
1494: invokevirtual #13
1497: dconst_0
1498: invokevirtual #60
1501: ldc           #12
1503: invokevirtual #13
1506: invokevirtual #16
1509: dload         62
1511: dconst_0
1512: dcmpl
1513: ifne          1520
1516: iconst_1
1517: goto          1521
1520: iconst_0
1521: invokestatic  #17
1524: aload         64
1526: invokestatic  #33
1529: aload         65
1531: invokestatic  #33
1534: new           #10
1537: dup
1538: invokespecial #11
1541: ldc           #12
1543: invokevirtual #13
1546: dload         66
1548: invokevirtual #60
1551: ldc           #15
1553: invokevirtual #13
1556: ldc2_w        #63
1559: invokevirtual #60
1562: ldc           #12
1564: invokevirtual #13
1567: invokevirtual #16
1570: dload         66
1572: ldc2_w        #63
1575: dcmpl
1576: ifne          1583
1579: iconst_1
1580: goto          1584
1583: iconst_0
1584: invokestatic  #17
1587: new           #10
1590: dup
1591: invokespecial #11
1594: ldc           #12
1596: invokevirtual #13
1599: dload         69
1601: invokevirtual #60
1604: ldc           #15
1606: invokevirtual #13
1609: dconst_0
1610: invokevirtual #60
1613: ldc           #12
1615: invokevirtual #13
1618: invokevirtual #16
1621: dload         69
1623: dconst_0
1624: dcmpl
1625: ifne          1632
1628: iconst_1
1629: goto          1633
1632: iconst_0
1633: invokestatic  #17
1636: aload         71
1638: invokestatic  #33
1641: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 13397
End line: 13480
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(9.033252629052738d, 1.079574538E9d, 6.09767964807105d, (double) (short) 1, false);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D8 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D11 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D14 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double15 = vector3D11.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D14);
        double double16 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D8, vector3D14);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D19 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D22 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D25 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double26 = vector3D22.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D25);
        double double27 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D19, vector3D25);
        boolean boolean28 = vector3D19.isInfinite();
        double double29 = vector3D8.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D19);
        org.apache.commons.math.geometry.Space space30 = vector3D19.getSpace();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D33 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D36 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double37 = vector3D33.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D36);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = vector3D43.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double52 = vector3D48.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        double double53 = vector3D51.getDelta();
        double double54 = vector3D43.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D60 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D63 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double64 = vector3D60.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D63);
        double double65 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D57, vector3D63);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D68 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D71 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D74 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double75 = vector3D71.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D74);
        double double76 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D68, vector3D74);
        boolean boolean77 = vector3D68.isInfinite();
        double double78 = vector3D57.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D68);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D79 = vector3D68.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D82 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D85 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double86 = vector3D82.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D85);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D87 = vector3D79.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D82);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D88 = vector3D43.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        double double89 = vector3D36.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D87);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation90 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D19, vector3D36);
        double double91 = rotation90.getQ2();
        double double92 = rotation90.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation93 = rotation90.revert();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation94 = rotation93.revert();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation95 = rotation5.applyTo(rotation93);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(space30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.7345682747147468d + "'", double45 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7345682747147468d + "'", double53 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0000000000000002d + "'", double89 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(rotation95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #788
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: ldc2_w        #146
32: ldc2_w        #72
35: ldc2_w        #148
38: dconst_1
39: iconst_0
40: invokespecial #150
43: astore_1
44: new           #43
47: dup
48: dconst_1
49: ldc2_w        #44
52: invokespecial #46
55: astore_2
56: new           #43
59: dup
60: dconst_1
61: ldc2_w        #44
64: invokespecial #46
67: astore_3
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        4
81: aload_3
82: aload         4
84: invokevirtual #47
87: dstore        5
89: aload_2
90: aload         4
92: invokestatic  #48
95: dstore        7
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        9
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        10
123: new           #43
126: dup
127: dconst_1
128: ldc2_w        #44
131: invokespecial #46
134: astore        11
136: aload         10
138: aload         11
140: invokevirtual #47
143: dstore        12
145: aload         9
147: aload         11
149: invokestatic  #48
152: dstore        14
154: aload         9
156: invokevirtual #49
159: istore        16
161: aload_2
162: aload         9
164: invokevirtual #50
167: dstore        17
169: aload         9
171: invokevirtual #51
174: astore        19
176: new           #43
179: dup
180: dconst_1
181: ldc2_w        #44
184: invokespecial #46
187: astore        20
189: new           #43
192: dup
193: dconst_1
194: ldc2_w        #44
197: invokespecial #46
200: astore        21
202: aload         20
204: aload         21
206: invokevirtual #47
209: dstore        22
211: new           #43
214: dup
215: dconst_1
216: ldc2_w        #44
219: invokespecial #46
222: astore        24
224: new           #43
227: dup
228: dconst_1
229: ldc2_w        #44
232: invokespecial #46
235: astore        25
237: aload         24
239: aload         25
241: invokevirtual #47
244: dstore        26
246: aload         25
248: invokevirtual #52
251: dstore        28
253: new           #43
256: dup
257: dconst_1
258: ldc2_w        #44
261: invokespecial #46
264: astore        30
266: new           #43
269: dup
270: dconst_1
271: ldc2_w        #44
274: invokespecial #46
277: astore        31
279: aload         30
281: aload         31
283: invokevirtual #47
286: dstore        32
288: aload         31
290: invokevirtual #52
293: dstore        34
295: aload         25
297: aload         31
299: invokevirtual #53
302: dstore        36
304: new           #43
307: dup
308: dconst_1
309: ldc2_w        #44
312: invokespecial #46
315: astore        38
317: new           #43
320: dup
321: dconst_1
322: ldc2_w        #44
325: invokespecial #46
328: astore        39
330: new           #43
333: dup
334: dconst_1
335: ldc2_w        #44
338: invokespecial #46
341: astore        40
343: aload         39
345: aload         40
347: invokevirtual #47
350: dstore        41
352: aload         38
354: aload         40
356: invokestatic  #48
359: dstore        43
361: new           #43
364: dup
365: dconst_1
366: ldc2_w        #44
369: invokespecial #46
372: astore        45
374: new           #43
377: dup
378: dconst_1
379: ldc2_w        #44
382: invokespecial #46
385: astore        46
387: new           #43
390: dup
391: dconst_1
392: ldc2_w        #44
395: invokespecial #46
398: astore        47
400: aload         46
402: aload         47
404: invokevirtual #47
407: dstore        48
409: aload         45
411: aload         47
413: invokestatic  #48
416: dstore        50
418: aload         45
420: invokevirtual #49
423: istore        52
425: aload         38
427: aload         45
429: invokevirtual #50
432: dstore        53
434: aload         45
436: invokevirtual #54
439: astore        55
441: new           #43
444: dup
445: dconst_1
446: ldc2_w        #44
449: invokespecial #46
452: astore        56
454: new           #43
457: dup
458: dconst_1
459: ldc2_w        #44
462: invokespecial #46
465: astore        57
467: aload         56
469: aload         57
471: invokevirtual #47
474: dstore        58
476: aload         55
478: aload         56
480: invokevirtual #55
483: astore        60
485: aload         25
487: aload         60
489: invokevirtual #55
492: astore        61
494: aload         21
496: aload         60
498: invokevirtual #53
501: dstore        62
503: new           #27
506: dup
507: aload         9
509: aload         21
511: invokespecial #56
514: astore        64
516: aload         64
518: invokevirtual #139
521: dstore        65
523: aload         64
525: invokevirtual #139
528: dstore        67
530: aload         64
532: invokevirtual #93
535: astore        69
537: aload         69
539: invokevirtual #93
542: astore        70
544: aload_1
545: aload         69
547: invokevirtual #160
550: astore        71
552: new           #10
555: dup
556: invokespecial #11
559: ldc           #12
561: invokevirtual #13
564: dload         5
566: invokevirtual #60
569: ldc           #15
571: invokevirtual #13
574: dconst_0
575: invokevirtual #60
578: ldc           #12
580: invokevirtual #13
583: invokevirtual #16
586: dload         5
588: dconst_0
589: dcmpl
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #17
601: new           #10
604: dup
605: invokespecial #11
608: ldc           #12
610: invokevirtual #13
613: dload         7
615: invokevirtual #60
618: ldc           #15
620: invokevirtual #13
623: dconst_0
624: invokevirtual #60
627: ldc           #12
629: invokevirtual #13
632: invokevirtual #16
635: dload         7
637: dconst_0
638: dcmpl
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #17
650: new           #10
653: dup
654: invokespecial #11
657: ldc           #12
659: invokevirtual #13
662: dload         12
664: invokevirtual #60
667: ldc           #15
669: invokevirtual #13
672: dconst_0
673: invokevirtual #60
676: ldc           #12
678: invokevirtual #13
681: invokevirtual #16
684: dload         12
686: dconst_0
687: dcmpl
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #17
699: new           #10
702: dup
703: invokespecial #11
706: ldc           #12
708: invokevirtual #13
711: dload         14
713: invokevirtual #60
716: ldc           #15
718: invokevirtual #13
721: dconst_0
722: invokevirtual #60
725: ldc           #12
727: invokevirtual #13
730: invokevirtual #16
733: dload         14
735: dconst_0
736: dcmpl
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #17
748: new           #10
751: dup
752: invokespecial #11
755: ldc           #12
757: invokevirtual #13
760: iload         16
762: invokevirtual #14
765: ldc           #15
767: invokevirtual #13
770: iconst_0
771: invokevirtual #14
774: ldc           #12
776: invokevirtual #13
779: invokevirtual #16
782: iload         16
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #17
795: new           #10
798: dup
799: invokespecial #11
802: ldc           #12
804: invokevirtual #13
807: dload         17
809: invokevirtual #60
812: ldc           #15
814: invokevirtual #13
817: dconst_0
818: invokevirtual #60
821: ldc           #12
823: invokevirtual #13
826: invokevirtual #16
829: dload         17
831: dconst_0
832: dcmpl
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #17
844: aload         19
846: invokestatic  #33
849: new           #10
852: dup
853: invokespecial #11
856: ldc           #12
858: invokevirtual #13
861: dload         22
863: invokevirtual #60
866: ldc           #15
868: invokevirtual #13
871: dconst_0
872: invokevirtual #60
875: ldc           #12
877: invokevirtual #13
880: invokevirtual #16
883: dload         22
885: dconst_0
886: dcmpl
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #17
898: new           #10
901: dup
902: invokespecial #11
905: ldc           #12
907: invokevirtual #13
910: dload         26
912: invokevirtual #60
915: ldc           #15
917: invokevirtual #13
920: dconst_0
921: invokevirtual #60
924: ldc           #12
926: invokevirtual #13
929: invokevirtual #16
932: dload         26
934: dconst_0
935: dcmpl
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #17
947: new           #10
950: dup
951: invokespecial #11
954: ldc           #12
956: invokevirtual #13
959: dload         28
961: invokevirtual #60
964: ldc           #15
966: invokevirtual #13
969: ldc2_w        #61
972: invokevirtual #60
975: ldc           #12
977: invokevirtual #13
980: invokevirtual #16
983: dload         28
985: ldc2_w        #61
988: dcmpl
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #17
1000: new           #10
1003: dup
1004: invokespecial #11
1007: ldc           #12
1009: invokevirtual #13
1012: dload         32
1014: invokevirtual #60
1017: ldc           #15
1019: invokevirtual #13
1022: dconst_0
1023: invokevirtual #60
1026: ldc           #12
1028: invokevirtual #13
1031: invokevirtual #16
1034: dload         32
1036: dconst_0
1037: dcmpl
1038: ifne          1045
1041: iconst_1
1042: goto          1046
1045: iconst_0
1046: invokestatic  #17
1049: new           #10
1052: dup
1053: invokespecial #11
1056: ldc           #12
1058: invokevirtual #13
1061: dload         34
1063: invokevirtual #60
1066: ldc           #15
1068: invokevirtual #13
1071: ldc2_w        #61
1074: invokevirtual #60
1077: ldc           #12
1079: invokevirtual #13
1082: invokevirtual #16
1085: dload         34
1087: ldc2_w        #61
1090: dcmpl
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #17
1102: new           #10
1105: dup
1106: invokespecial #11
1109: ldc           #12
1111: invokevirtual #13
1114: dload         36
1116: invokevirtual #60
1119: ldc           #15
1121: invokevirtual #13
1124: dconst_0
1125: invokevirtual #60
1128: ldc           #12
1130: invokevirtual #13
1133: invokevirtual #16
1136: dload         36
1138: dconst_0
1139: dcmpl
1140: ifne          1147
1143: iconst_1
1144: goto          1148
1147: iconst_0
1148: invokestatic  #17
1151: new           #10
1154: dup
1155: invokespecial #11
1158: ldc           #12
1160: invokevirtual #13
1163: dload         41
1165: invokevirtual #60
1168: ldc           #15
1170: invokevirtual #13
1173: dconst_0
1174: invokevirtual #60
1177: ldc           #12
1179: invokevirtual #13
1182: invokevirtual #16
1185: dload         41
1187: dconst_0
1188: dcmpl
1189: ifne          1196
1192: iconst_1
1193: goto          1197
1196: iconst_0
1197: invokestatic  #17
1200: new           #10
1203: dup
1204: invokespecial #11
1207: ldc           #12
1209: invokevirtual #13
1212: dload         43
1214: invokevirtual #60
1217: ldc           #15
1219: invokevirtual #13
1222: dconst_0
1223: invokevirtual #60
1226: ldc           #12
1228: invokevirtual #13
1231: invokevirtual #16
1234: dload         43
1236: dconst_0
1237: dcmpl
1238: ifne          1245
1241: iconst_1
1242: goto          1246
1245: iconst_0
1246: invokestatic  #17
1249: new           #10
1252: dup
1253: invokespecial #11
1256: ldc           #12
1258: invokevirtual #13
1261: dload         48
1263: invokevirtual #60
1266: ldc           #15
1268: invokevirtual #13
1271: dconst_0
1272: invokevirtual #60
1275: ldc           #12
1277: invokevirtual #13
1280: invokevirtual #16
1283: dload         48
1285: dconst_0
1286: dcmpl
1287: ifne          1294
1290: iconst_1
1291: goto          1295
1294: iconst_0
1295: invokestatic  #17
1298: new           #10
1301: dup
1302: invokespecial #11
1305: ldc           #12
1307: invokevirtual #13
1310: dload         50
1312: invokevirtual #60
1315: ldc           #15
1317: invokevirtual #13
1320: dconst_0
1321: invokevirtual #60
1324: ldc           #12
1326: invokevirtual #13
1329: invokevirtual #16
1332: dload         50
1334: dconst_0
1335: dcmpl
1336: ifne          1343
1339: iconst_1
1340: goto          1344
1343: iconst_0
1344: invokestatic  #17
1347: new           #10
1350: dup
1351: invokespecial #11
1354: ldc           #12
1356: invokevirtual #13
1359: iload         52
1361: invokevirtual #14
1364: ldc           #15
1366: invokevirtual #13
1369: iconst_0
1370: invokevirtual #14
1373: ldc           #12
1375: invokevirtual #13
1378: invokevirtual #16
1381: iload         52
1383: ifne          1390
1386: iconst_1
1387: goto          1391
1390: iconst_0
1391: invokestatic  #17
1394: new           #10
1397: dup
1398: invokespecial #11
1401: ldc           #12
1403: invokevirtual #13
1406: dload         53
1408: invokevirtual #60
1411: ldc           #15
1413: invokevirtual #13
1416: dconst_0
1417: invokevirtual #60
1420: ldc           #12
1422: invokevirtual #13
1425: invokevirtual #16
1428: dload         53
1430: dconst_0
1431: dcmpl
1432: ifne          1439
1435: iconst_1
1436: goto          1440
1439: iconst_0
1440: invokestatic  #17
1443: aload         55
1445: invokestatic  #33
1448: new           #10
1451: dup
1452: invokespecial #11
1455: ldc           #12
1457: invokevirtual #13
1460: dload         58
1462: invokevirtual #60
1465: ldc           #15
1467: invokevirtual #13
1470: dconst_0
1471: invokevirtual #60
1474: ldc           #12
1476: invokevirtual #13
1479: invokevirtual #16
1482: dload         58
1484: dconst_0
1485: dcmpl
1486: ifne          1493
1489: iconst_1
1490: goto          1494
1493: iconst_0
1494: invokestatic  #17
1497: aload         60
1499: invokestatic  #33
1502: aload         61
1504: invokestatic  #33
1507: new           #10
1510: dup
1511: invokespecial #11
1514: ldc           #12
1516: invokevirtual #13
1519: dload         62
1521: invokevirtual #60
1524: ldc           #15
1526: invokevirtual #13
1529: ldc2_w        #63
1532: invokevirtual #60
1535: ldc           #12
1537: invokevirtual #13
1540: invokevirtual #16
1543: dload         62
1545: ldc2_w        #63
1548: dcmpl
1549: ifne          1556
1552: iconst_1
1553: goto          1557
1556: iconst_0
1557: invokestatic  #17
1560: new           #10
1563: dup
1564: invokespecial #11
1567: ldc           #12
1569: invokevirtual #13
1572: dload         65
1574: invokevirtual #60
1577: ldc           #15
1579: invokevirtual #13
1582: dconst_0
1583: invokevirtual #60
1586: ldc           #12
1588: invokevirtual #13
1591: invokevirtual #16
1594: dload         65
1596: dconst_0
1597: dcmpl
1598: ifne          1605
1601: iconst_1
1602: goto          1606
1605: iconst_0
1606: invokestatic  #17
1609: new           #10
1612: dup
1613: invokespecial #11
1616: ldc           #12
1618: invokevirtual #13
1621: dload         67
1623: invokevirtual #60
1626: ldc           #15
1628: invokevirtual #13
1631: dconst_0
1632: invokevirtual #60
1635: ldc           #12
1637: invokevirtual #13
1640: invokevirtual #16
1643: dload         67
1645: dconst_0
1646: dcmpl
1647: ifne          1654
1650: iconst_1
1651: goto          1655
1654: iconst_0
1655: invokestatic  #17
1658: aload         69
1660: invokestatic  #33
1663: aload         70
1665: invokestatic  #33
1668: aload         71
1670: invokestatic  #33
1673: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 13483
End line: 13487
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation5 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(0.0d, (double) 54881158701L, (-0.8813735870195429d), 8.881784197001252E-16d, false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #789
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: dconst_0
30: ldc2_w        #790
33: ldc2_w        #792
36: ldc2_w        #794
39: iconst_0
40: invokespecial #150
43: astore_1
44: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 13490
End line: 13559
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D2 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D5 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double6 = vector3D2.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D5);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D9 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D12 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double13 = vector3D9.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D12);
        double double14 = vector3D12.getDelta();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D17 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D20 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double21 = vector3D17.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        double double22 = vector3D20.getDelta();
        double double23 = vector3D12.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D20);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D26 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D29 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D32 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double33 = vector3D29.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D32);
        double double34 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D26, vector3D32);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D37 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D40 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D43 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double44 = vector3D40.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D43);
        double double45 = org.apache.commons.math.geometry.euclidean.threed.Vector3D.distanceInf(vector3D37, vector3D43);
        boolean boolean46 = vector3D37.isInfinite();
        double double47 = vector3D26.distance((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D37);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D48 = vector3D37.negate();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D51 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D54 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double55 = vector3D51.distanceInf((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D54);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D56 = vector3D48.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D51);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D57 = vector3D12.add((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        double double58 = vector3D5.distanceSq((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D56);
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D61 = new org.apache.commons.math.geometry.euclidean.threed.Vector3D(1.0d, 0.7345682747147467d);
        double double62 = vector3D61.getNormInf();
        org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D> euclidean3DVector63 = vector3D56.subtract((org.apache.commons.math.geometry.Vector<org.apache.commons.math.geometry.euclidean.threed.Euclidean3D>) vector3D61);
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation65 = new org.apache.commons.math.geometry.euclidean.threed.Rotation(vector3D61, 3.6535299896840334E43d);
        double double66 = rotation65.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Vector3D vector3D67 = rotation65.getAxis();
        double double68 = rotation65.getQ2();
        org.apache.commons.math.geometry.euclidean.threed.Rotation rotation69 = rotation65.revert();
        double double70 = rotation69.getQ2();
        double double71 = rotation69.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.7345682747147468d + "'", double14 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.7345682747147468d + "'", double22 == 0.7345682747147468d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0000000000000002d + "'", double58 == 1.0000000000000002d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.6702668260599606d + "'", double62 == 0.6702668260599606d);
        org.junit.Assert.assertNotNull(euclidean3DVector63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.4795218342206279d) + "'", double66 == (-0.4795218342206279d));
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.4795218342206279d) + "'", double68 == (-0.4795218342206279d));
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.4795218342206279d) + "'", double70 == (-0.4795218342206279d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.6405902461256647d) + "'", double71 == (-0.6405902461256647d));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #796
20: aastore
21: invokevirtual #7
24: pop
25: new           #43
28: dup
29: dconst_1
30: ldc2_w        #44
33: invokespecial #46
36: astore_1
37: new           #43
40: dup
41: dconst_1
42: ldc2_w        #44
45: invokespecial #46
48: astore_2
49: aload_1
50: aload_2
51: invokevirtual #47
54: dstore_3
55: new           #43
58: dup
59: dconst_1
60: ldc2_w        #44
63: invokespecial #46
66: astore        5
68: new           #43
71: dup
72: dconst_1
73: ldc2_w        #44
76: invokespecial #46
79: astore        6
81: aload         5
83: aload         6
85: invokevirtual #47
88: dstore        7
90: aload         6
92: invokevirtual #52
95: dstore        9
97: new           #43
100: dup
101: dconst_1
102: ldc2_w        #44
105: invokespecial #46
108: astore        11
110: new           #43
113: dup
114: dconst_1
115: ldc2_w        #44
118: invokespecial #46
121: astore        12
123: aload         11
125: aload         12
127: invokevirtual #47
130: dstore        13
132: aload         12
134: invokevirtual #52
137: dstore        15
139: aload         6
141: aload         12
143: invokevirtual #53
146: dstore        17
148: new           #43
151: dup
152: dconst_1
153: ldc2_w        #44
156: invokespecial #46
159: astore        19
161: new           #43
164: dup
165: dconst_1
166: ldc2_w        #44
169: invokespecial #46
172: astore        20
174: new           #43
177: dup
178: dconst_1
179: ldc2_w        #44
182: invokespecial #46
185: astore        21
187: aload         20
189: aload         21
191: invokevirtual #47
194: dstore        22
196: aload         19
198: aload         21
200: invokestatic  #48
203: dstore        24
205: new           #43
208: dup
209: dconst_1
210: ldc2_w        #44
213: invokespecial #46
216: astore        26
218: new           #43
221: dup
222: dconst_1
223: ldc2_w        #44
226: invokespecial #46
229: astore        27
231: new           #43
234: dup
235: dconst_1
236: ldc2_w        #44
239: invokespecial #46
242: astore        28
244: aload         27
246: aload         28
248: invokevirtual #47
251: dstore        29
253: aload         26
255: aload         28
257: invokestatic  #48
260: dstore        31
262: aload         26
264: invokevirtual #49
267: istore        33
269: aload         19
271: aload         26
273: invokevirtual #50
276: dstore        34
278: aload         26
280: invokevirtual #54
283: astore        36
285: new           #43
288: dup
289: dconst_1
290: ldc2_w        #44
293: invokespecial #46
296: astore        37
298: new           #43
301: dup
302: dconst_1
303: ldc2_w        #44
306: invokespecial #46
309: astore        38
311: aload         37
313: aload         38
315: invokevirtual #47
318: dstore        39
320: aload         36
322: aload         37
324: invokevirtual #55
327: astore        41
329: aload         6
331: aload         41
333: invokevirtual #55
336: astore        42
338: aload_2
339: aload         41
341: invokevirtual #53
344: dstore        43
346: new           #43
349: dup
350: dconst_1
351: ldc2_w        #44
354: invokespecial #46
357: astore        45
359: aload         45
361: invokevirtual #136
364: dstore        46
366: aload         41
368: aload         45
370: invokevirtual #109
373: astore        48
375: new           #27
378: dup
379: aload         45
381: ldc2_w        #137
384: invokespecial #103
387: astore        49
389: aload         49
391: invokevirtual #139
394: dstore        50
396: aload         49
398: invokevirtual #96
401: astore        52
403: aload         49
405: invokevirtual #139
408: dstore        53
410: aload         49
412: invokevirtual #93
415: astore        55
417: aload         55
419: invokevirtual #139
422: dstore        56
424: aload         55
426: invokevirtual #241
429: dstore        58
431: new           #10
434: dup
435: invokespecial #11
438: ldc           #12
440: invokevirtual #13
443: dload_3
444: invokevirtual #60
447: ldc           #15
449: invokevirtual #13
452: dconst_0
453: invokevirtual #60
456: ldc           #12
458: invokevirtual #13
461: invokevirtual #16
464: dload_3
465: dconst_0
466: dcmpl
467: ifne          474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #17
478: new           #10
481: dup
482: invokespecial #11
485: ldc           #12
487: invokevirtual #13
490: dload         7
492: invokevirtual #60
495: ldc           #15
497: invokevirtual #13
500: dconst_0
501: invokevirtual #60
504: ldc           #12
506: invokevirtual #13
509: invokevirtual #16
512: dload         7
514: dconst_0
515: dcmpl
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #17
527: new           #10
530: dup
531: invokespecial #11
534: ldc           #12
536: invokevirtual #13
539: dload         9
541: invokevirtual #60
544: ldc           #15
546: invokevirtual #13
549: ldc2_w        #61
552: invokevirtual #60
555: ldc           #12
557: invokevirtual #13
560: invokevirtual #16
563: dload         9
565: ldc2_w        #61
568: dcmpl
569: ifne          576
572: iconst_1
573: goto          577
576: iconst_0
577: invokestatic  #17
580: new           #10
583: dup
584: invokespecial #11
587: ldc           #12
589: invokevirtual #13
592: dload         13
594: invokevirtual #60
597: ldc           #15
599: invokevirtual #13
602: dconst_0
603: invokevirtual #60
606: ldc           #12
608: invokevirtual #13
611: invokevirtual #16
614: dload         13
616: dconst_0
617: dcmpl
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #17
629: new           #10
632: dup
633: invokespecial #11
636: ldc           #12
638: invokevirtual #13
641: dload         15
643: invokevirtual #60
646: ldc           #15
648: invokevirtual #13
651: ldc2_w        #61
654: invokevirtual #60
657: ldc           #12
659: invokevirtual #13
662: invokevirtual #16
665: dload         15
667: ldc2_w        #61
670: dcmpl
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #17
682: new           #10
685: dup
686: invokespecial #11
689: ldc           #12
691: invokevirtual #13
694: dload         17
696: invokevirtual #60
699: ldc           #15
701: invokevirtual #13
704: dconst_0
705: invokevirtual #60
708: ldc           #12
710: invokevirtual #13
713: invokevirtual #16
716: dload         17
718: dconst_0
719: dcmpl
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #17
731: new           #10
734: dup
735: invokespecial #11
738: ldc           #12
740: invokevirtual #13
743: dload         22
745: invokevirtual #60
748: ldc           #15
750: invokevirtual #13
753: dconst_0
754: invokevirtual #60
757: ldc           #12
759: invokevirtual #13
762: invokevirtual #16
765: dload         22
767: dconst_0
768: dcmpl
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #17
780: new           #10
783: dup
784: invokespecial #11
787: ldc           #12
789: invokevirtual #13
792: dload         24
794: invokevirtual #60
797: ldc           #15
799: invokevirtual #13
802: dconst_0
803: invokevirtual #60
806: ldc           #12
808: invokevirtual #13
811: invokevirtual #16
814: dload         24
816: dconst_0
817: dcmpl
818: ifne          825
821: iconst_1
822: goto          826
825: iconst_0
826: invokestatic  #17
829: new           #10
832: dup
833: invokespecial #11
836: ldc           #12
838: invokevirtual #13
841: dload         29
843: invokevirtual #60
846: ldc           #15
848: invokevirtual #13
851: dconst_0
852: invokevirtual #60
855: ldc           #12
857: invokevirtual #13
860: invokevirtual #16
863: dload         29
865: dconst_0
866: dcmpl
867: ifne          874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #17
878: new           #10
881: dup
882: invokespecial #11
885: ldc           #12
887: invokevirtual #13
890: dload         31
892: invokevirtual #60
895: ldc           #15
897: invokevirtual #13
900: dconst_0
901: invokevirtual #60
904: ldc           #12
906: invokevirtual #13
909: invokevirtual #16
912: dload         31
914: dconst_0
915: dcmpl
916: ifne          923
919: iconst_1
920: goto          924
923: iconst_0
924: invokestatic  #17
927: new           #10
930: dup
931: invokespecial #11
934: ldc           #12
936: invokevirtual #13
939: iload         33
941: invokevirtual #14
944: ldc           #15
946: invokevirtual #13
949: iconst_0
950: invokevirtual #14
953: ldc           #12
955: invokevirtual #13
958: invokevirtual #16
961: iload         33
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #17
974: new           #10
977: dup
978: invokespecial #11
981: ldc           #12
983: invokevirtual #13
986: dload         34
988: invokevirtual #60
991: ldc           #15
993: invokevirtual #13
996: dconst_0
997: invokevirtual #60
1000: ldc           #12
1002: invokevirtual #13
1005: invokevirtual #16
1008: dload         34
1010: dconst_0
1011: dcmpl
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #17
1023: aload         36
1025: invokestatic  #33
1028: new           #10
1031: dup
1032: invokespecial #11
1035: ldc           #12
1037: invokevirtual #13
1040: dload         39
1042: invokevirtual #60
1045: ldc           #15
1047: invokevirtual #13
1050: dconst_0
1051: invokevirtual #60
1054: ldc           #12
1056: invokevirtual #13
1059: invokevirtual #16
1062: dload         39
1064: dconst_0
1065: dcmpl
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #17
1077: aload         41
1079: invokestatic  #33
1082: aload         42
1084: invokestatic  #33
1087: new           #10
1090: dup
1091: invokespecial #11
1094: ldc           #12
1096: invokevirtual #13
1099: dload         43
1101: invokevirtual #60
1104: ldc           #15
1106: invokevirtual #13
1109: ldc2_w        #63
1112: invokevirtual #60
1115: ldc           #12
1117: invokevirtual #13
1120: invokevirtual #16
1123: dload         43
1125: ldc2_w        #63
1128: dcmpl
1129: ifne          1136
1132: iconst_1
1133: goto          1137
1136: iconst_0
1137: invokestatic  #17
1140: new           #10
1143: dup
1144: invokespecial #11
1147: ldc           #12
1149: invokevirtual #13
1152: dload         46
1154: invokevirtual #60
1157: ldc           #15
1159: invokevirtual #13
1162: ldc2_w        #79
1165: invokevirtual #60
1168: ldc           #12
1170: invokevirtual #13
1173: invokevirtual #16
1176: dload         46
1178: ldc2_w        #79
1181: dcmpl
1182: ifne          1189
1185: iconst_1
1186: goto          1190
1189: iconst_0
1190: invokestatic  #17
1193: aload         48
1195: invokestatic  #33
1198: new           #10
1201: dup
1202: invokespecial #11
1205: ldc           #12
1207: invokevirtual #13
1210: dload         50
1212: invokevirtual #60
1215: ldc           #15
1217: invokevirtual #13
1220: ldc2_w        #141
1223: invokevirtual #60
1226: ldc           #12
1228: invokevirtual #13
1231: invokevirtual #16
1234: dload         50
1236: ldc2_w        #141
1239: dcmpl
1240: ifne          1247
1243: iconst_1
1244: goto          1248
1247: iconst_0
1248: invokestatic  #17
1251: aload         52
1253: invokestatic  #33
1256: new           #10
1259: dup
1260: invokespecial #11
1263: ldc           #12
1265: invokevirtual #13
1268: dload         53
1270: invokevirtual #60
1273: ldc           #15
1275: invokevirtual #13
1278: ldc2_w        #141
1281: invokevirtual #60
1284: ldc           #12
1286: invokevirtual #13
1289: invokevirtual #16
1292: dload         53
1294: ldc2_w        #141
1297: dcmpl
1298: ifne          1305
1301: iconst_1
1302: goto          1306
1305: iconst_0
1306: invokestatic  #17
1309: aload         55
1311: invokestatic  #33
1314: new           #10
1317: dup
1318: invokespecial #11
1321: ldc           #12
1323: invokevirtual #13
1326: dload         56
1328: invokevirtual #60
1331: ldc           #15
1333: invokevirtual #13
1336: ldc2_w        #141
1339: invokevirtual #60
1342: ldc           #12
1344: invokevirtual #13
1347: invokevirtual #16
1350: dload         56
1352: ldc2_w        #141
1355: dcmpl
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #17
1367: new           #10
1370: dup
1371: invokespecial #11
1374: ldc           #12
1376: invokevirtual #13
1379: dload         58
1381: invokevirtual #60
1384: ldc           #15
1386: invokevirtual #13
1389: ldc2_w        #797
1392: invokevirtual #60
1395: ldc           #12
1397: invokevirtual #13
1400: invokevirtual #16
1403: dload         58
1405: ldc2_w        #797
1408: dcmpl
1409: ifne          1416
1412: iconst_1
1413: goto          1417
1416: iconst_0
1417: invokestatic  #17
1420: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrderTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationOrderTest.class
Class name: RotationOrderTest
Method name: testName
Start line: 29
End line: 42
Method source code: 
  public void testName() {

    RotationOrder[] orders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX,
      RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
      RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
    };

    for (int i = 0; i < orders.length; ++i) {
      Assert.assertEquals(getFieldName(orders[i]), orders[i].toString());
    }

  }
Method byte code: 
0: bipush        12
2: anewarray     #2
5: dup
6: iconst_0
7: getstatic     #3
10: aastore
11: dup
12: iconst_1
13: getstatic     #4
16: aastore
17: dup
18: iconst_2
19: getstatic     #5
22: aastore
23: dup
24: iconst_3
25: getstatic     #6
28: aastore
29: dup
30: iconst_4
31: getstatic     #7
34: aastore
35: dup
36: iconst_5
37: getstatic     #8
40: aastore
41: dup
42: bipush        6
44: getstatic     #9
47: aastore
48: dup
49: bipush        7
51: getstatic     #10
54: aastore
55: dup
56: bipush        8
58: getstatic     #11
61: aastore
62: dup
63: bipush        9
65: getstatic     #12
68: aastore
69: dup
70: bipush        10
72: getstatic     #13
75: aastore
76: dup
77: bipush        11
79: getstatic     #14
82: aastore
83: astore_1
84: iconst_0
85: istore_2
86: iload_2
87: aload_1
88: arraylength
89: if_icmpge     114
92: aload_0
93: aload_1
94: iload_2
95: aaload
96: invokespecial #15
99: aload_1
100: iload_2
101: aaload
102: invokevirtual #16
105: invokestatic  #17
108: iinc          2, 1
111: goto          86
114: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testIdentity
Start line: 28
End line: 48
Method source code: 
  public void testIdentity() {

    Rotation r = Rotation.IDENTITY;
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_I);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.PLUS_J);
    checkVector(r.applyTo(Vector3D.PLUS_K), Vector3D.PLUS_K);
    checkAngle(r.getAngle(), 0);

    r = new Rotation(-1, 0, 0, 0, false);
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_I);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.PLUS_J);
    checkVector(r.applyTo(Vector3D.PLUS_K), Vector3D.PLUS_K);
    checkAngle(r.getAngle(), 0);

    r = new Rotation(42, 0, 0, 0, true);
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_I);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.PLUS_J);
    checkVector(r.applyTo(Vector3D.PLUS_K), Vector3D.PLUS_K);
    checkAngle(r.getAngle(), 0);

  }
Method byte code: 
0: getstatic     #2
3: astore_1
4: aload_0
5: aload_1
6: getstatic     #3
9: invokevirtual #4
12: getstatic     #3
15: invokespecial #5
18: aload_0
19: aload_1
20: getstatic     #6
23: invokevirtual #4
26: getstatic     #6
29: invokespecial #5
32: aload_0
33: aload_1
34: getstatic     #7
37: invokevirtual #4
40: getstatic     #7
43: invokespecial #5
46: aload_0
47: aload_1
48: invokevirtual #8
51: dconst_0
52: invokespecial #9
55: new           #10
58: dup
59: ldc2_w        #11
62: dconst_0
63: dconst_0
64: dconst_0
65: iconst_0
66: invokespecial #13
69: astore_1
70: aload_0
71: aload_1
72: getstatic     #3
75: invokevirtual #4
78: getstatic     #3
81: invokespecial #5
84: aload_0
85: aload_1
86: getstatic     #6
89: invokevirtual #4
92: getstatic     #6
95: invokespecial #5
98: aload_0
99: aload_1
100: getstatic     #7
103: invokevirtual #4
106: getstatic     #7
109: invokespecial #5
112: aload_0
113: aload_1
114: invokevirtual #8
117: dconst_0
118: invokespecial #9
121: new           #10
124: dup
125: ldc2_w        #14
128: dconst_0
129: dconst_0
130: dconst_0
131: iconst_1
132: invokespecial #13
135: astore_1
136: aload_0
137: aload_1
138: getstatic     #3
141: invokevirtual #4
144: getstatic     #3
147: invokespecial #5
150: aload_0
151: aload_1
152: getstatic     #6
155: invokevirtual #4
158: getstatic     #6
161: invokespecial #5
164: aload_0
165: aload_1
166: getstatic     #7
169: invokevirtual #4
172: getstatic     #7
175: invokespecial #5
178: aload_0
179: aload_1
180: invokevirtual #8
183: dconst_0
184: invokespecial #9
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testAxisAngle
Start line: 51
End line: 77
Method source code: 
  public void testAxisAngle() {

    Rotation r = new Rotation(new Vector3D(10, 10, 10), 2 * FastMath.PI / 3);
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_J);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.PLUS_K);
    checkVector(r.applyTo(Vector3D.PLUS_K), Vector3D.PLUS_I);
    double s = 1 / FastMath.sqrt(3);
    checkVector(r.getAxis(), new Vector3D(s, s, s));
    checkAngle(r.getAngle(), 2 * FastMath.PI / 3);

    try {
      new Rotation(new Vector3D(0, 0, 0), 2 * FastMath.PI / 3);
      Assert.fail("an exception should have been thrown");
    } catch (ArithmeticException e) {
    }

    r = new Rotation(Vector3D.PLUS_K, 1.5 * FastMath.PI);
    checkVector(r.getAxis(), new Vector3D(0, 0, -1));
    checkAngle(r.getAngle(), 0.5 * FastMath.PI);

    r = new Rotation(Vector3D.PLUS_J, FastMath.PI);
    checkVector(r.getAxis(), Vector3D.PLUS_J);
    checkAngle(r.getAngle(), FastMath.PI);

    checkVector(Rotation.IDENTITY.getAxis(), Vector3D.PLUS_I);

  }
Method byte code: 
0: new           #10
3: dup
4: new           #16
7: dup
8: ldc2_w        #17
11: ldc2_w        #17
14: ldc2_w        #17
17: invokespecial #19
20: ldc2_w        #21
23: invokespecial #23
26: astore_1
27: aload_0
28: aload_1
29: getstatic     #3
32: invokevirtual #4
35: getstatic     #6
38: invokespecial #5
41: aload_0
42: aload_1
43: getstatic     #6
46: invokevirtual #4
49: getstatic     #7
52: invokespecial #5
55: aload_0
56: aload_1
57: getstatic     #7
60: invokevirtual #4
63: getstatic     #3
66: invokespecial #5
69: dconst_1
70: ldc2_w        #24
73: invokestatic  #26
76: ddiv
77: dstore_2
78: aload_0
79: aload_1
80: invokevirtual #27
83: new           #16
86: dup
87: dload_2
88: dload_2
89: dload_2
90: invokespecial #19
93: invokespecial #5
96: aload_0
97: aload_1
98: invokevirtual #8
101: ldc2_w        #21
104: invokespecial #9
107: new           #10
110: dup
111: new           #16
114: dup
115: dconst_0
116: dconst_0
117: dconst_0
118: invokespecial #19
121: ldc2_w        #21
124: invokespecial #23
127: pop
128: ldc           #28
130: invokestatic  #29
133: goto          138
136: astore        4
138: new           #10
141: dup
142: getstatic     #7
145: ldc2_w        #31
148: invokespecial #23
151: astore_1
152: aload_0
153: aload_1
154: invokevirtual #27
157: new           #16
160: dup
161: dconst_0
162: dconst_0
163: ldc2_w        #11
166: invokespecial #19
169: invokespecial #5
172: aload_0
173: aload_1
174: invokevirtual #8
177: ldc2_w        #33
180: invokespecial #9
183: new           #10
186: dup
187: getstatic     #6
190: ldc2_w        #35
193: invokespecial #23
196: astore_1
197: aload_0
198: aload_1
199: invokevirtual #27
202: getstatic     #6
205: invokespecial #5
208: aload_0
209: aload_1
210: invokevirtual #8
213: ldc2_w        #35
216: invokespecial #9
219: aload_0
220: getstatic     #2
223: invokevirtual #27
226: getstatic     #3
229: invokespecial #5
232: return
Exception table:
from    to  target type
107   133   136   Class java/lang/ArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testRevert
Start line: 80
End line: 87
Method source code: 
  public void testRevert() {
    Rotation r = new Rotation(0.001, 0.36, 0.48, 0.8, true);
    Rotation reverted = r.revert();
    checkRotation(r.applyTo(reverted), 1, 0, 0, 0);
    checkRotation(reverted.applyTo(r), 1, 0, 0, 0);
    Assert.assertEquals(r.getAngle(), reverted.getAngle(), 1.0e-12);
    Assert.assertEquals(-1, Vector3D.dotProduct(r.getAxis(), reverted.getAxis()), 1.0e-12);
  }
Method byte code: 
0: new           #10
3: dup
4: ldc2_w        #37
7: ldc2_w        #39
10: ldc2_w        #41
13: ldc2_w        #43
16: iconst_1
17: invokespecial #13
20: astore_1
21: aload_1
22: invokevirtual #45
25: astore_2
26: aload_0
27: aload_1
28: aload_2
29: invokevirtual #46
32: dconst_1
33: dconst_0
34: dconst_0
35: dconst_0
36: invokespecial #47
39: aload_0
40: aload_2
41: aload_1
42: invokevirtual #46
45: dconst_1
46: dconst_0
47: dconst_0
48: dconst_0
49: invokespecial #47
52: aload_1
53: invokevirtual #8
56: aload_2
57: invokevirtual #8
60: ldc2_w        #48
63: invokestatic  #50
66: ldc2_w        #11
69: aload_1
70: invokevirtual #27
73: aload_2
74: invokevirtual #27
77: invokestatic  #51
80: ldc2_w        #48
83: invokestatic  #50
86: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testVectorOnePair
Start line: 90
End line: 106
Method source code: 
  public void testVectorOnePair() {

    Vector3D u = new Vector3D(3, 2, 1);
    Vector3D v = new Vector3D(-4, 2, 2);
    Rotation r = new Rotation(u, v);
    checkVector(r.applyTo(u.scalarMultiply(v.getNorm())), v.scalarMultiply(u.getNorm()));

    checkAngle(new Rotation(u, u.negate()).getAngle(), FastMath.PI);

    try {
        new Rotation(u, Vector3D.ZERO);
        Assert.fail("an exception should have been thrown");
    } catch (IllegalArgumentException e) {
        // expected behavior
    }

  }
Method byte code: 
0: new           #16
3: dup
4: ldc2_w        #24
7: ldc2_w        #52
10: dconst_1
11: invokespecial #19
14: astore_1
15: new           #16
18: dup
19: ldc2_w        #54
22: ldc2_w        #52
25: ldc2_w        #52
28: invokespecial #19
31: astore_2
32: new           #10
35: dup
36: aload_1
37: aload_2
38: invokespecial #56
41: astore_3
42: aload_0
43: aload_3
44: aload_1
45: aload_2
46: invokevirtual #57
49: invokevirtual #58
52: invokevirtual #4
55: aload_2
56: aload_1
57: invokevirtual #57
60: invokevirtual #58
63: invokespecial #5
66: aload_0
67: new           #10
70: dup
71: aload_1
72: aload_1
73: invokevirtual #59
76: invokespecial #56
79: invokevirtual #8
82: ldc2_w        #35
85: invokespecial #9
88: new           #10
91: dup
92: aload_1
93: getstatic     #60
96: invokespecial #56
99: pop
100: ldc           #28
102: invokestatic  #29
105: goto          110
108: astore        4
110: return
Exception table:
from    to  target type
88   105   108   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testVectorTwoPairs
Start line: 109
End line: 146
Method source code: 
  public void testVectorTwoPairs() {

    Vector3D u1 = new Vector3D(3, 0, 0);
    Vector3D u2 = new Vector3D(0, 5, 0);
    Vector3D v1 = new Vector3D(0, 0, 2);
    Vector3D v2 = new Vector3D(-2, 0, 2);
    Rotation r = new Rotation(u1, u2, v1, v2);
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_K);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.MINUS_I);

    r = new Rotation(u1, u2, u1.negate(), u2.negate());
    Vector3D axis = r.getAxis();
    if (Vector3D.dotProduct(axis, Vector3D.PLUS_K) > 0) {
      checkVector(axis, Vector3D.PLUS_K);
    } else {
      checkVector(axis, Vector3D.MINUS_K);
    }
    checkAngle(r.getAngle(), FastMath.PI);

    double sqrt = FastMath.sqrt(2) / 2;
    r = new Rotation(Vector3D.PLUS_I,  Vector3D.PLUS_J,
                     new Vector3D(0.5, 0.5,  sqrt),
                     new Vector3D(0.5, 0.5, -sqrt));
    checkRotation(r, sqrt, 0.5, 0.5, 0);

    r = new Rotation(u1, u2, u1, Vector3D.crossProduct(u1, u2));
    checkRotation(r, sqrt, -sqrt, 0, 0);

    checkRotation(new Rotation(u1, u2, u1, u2), 1, 0, 0, 0);

    try {
        new Rotation(u1, u2, Vector3D.ZERO, v2);
        Assert.fail("an exception should have been thrown");
    } catch (IllegalArgumentException e) {
      // expected behavior
    }

  }
Method byte code: 
0: new           #16
3: dup
4: ldc2_w        #24
7: dconst_0
8: dconst_0
9: invokespecial #19
12: astore_1
13: new           #16
16: dup
17: dconst_0
18: ldc2_w        #62
21: dconst_0
22: invokespecial #19
25: astore_2
26: new           #16
29: dup
30: dconst_0
31: dconst_0
32: ldc2_w        #52
35: invokespecial #19
38: astore_3
39: new           #16
42: dup
43: ldc2_w        #64
46: dconst_0
47: ldc2_w        #52
50: invokespecial #19
53: astore        4
55: new           #10
58: dup
59: aload_1
60: aload_2
61: aload_3
62: aload         4
64: invokespecial #66
67: astore        5
69: aload_0
70: aload         5
72: getstatic     #3
75: invokevirtual #4
78: getstatic     #7
81: invokespecial #5
84: aload_0
85: aload         5
87: getstatic     #6
90: invokevirtual #4
93: getstatic     #67
96: invokespecial #5
99: new           #10
102: dup
103: aload_1
104: aload_2
105: aload_1
106: invokevirtual #59
109: aload_2
110: invokevirtual #59
113: invokespecial #66
116: astore        5
118: aload         5
120: invokevirtual #27
123: astore        6
125: aload         6
127: getstatic     #7
130: invokestatic  #51
133: dconst_0
134: dcmpl
135: ifle          150
138: aload_0
139: aload         6
141: getstatic     #7
144: invokespecial #5
147: goto          159
150: aload_0
151: aload         6
153: getstatic     #68
156: invokespecial #5
159: aload_0
160: aload         5
162: invokevirtual #8
165: ldc2_w        #35
168: invokespecial #9
171: ldc2_w        #52
174: invokestatic  #26
177: ldc2_w        #52
180: ddiv
181: dstore        7
183: new           #10
186: dup
187: getstatic     #3
190: getstatic     #6
193: new           #16
196: dup
197: ldc2_w        #69
200: ldc2_w        #69
203: dload         7
205: invokespecial #19
208: new           #16
211: dup
212: ldc2_w        #69
215: ldc2_w        #69
218: dload         7
220: dneg
221: invokespecial #19
224: invokespecial #66
227: astore        5
229: aload_0
230: aload         5
232: dload         7
234: ldc2_w        #69
237: ldc2_w        #69
240: dconst_0
241: invokespecial #47
244: new           #10
247: dup
248: aload_1
249: aload_2
250: aload_1
251: aload_1
252: aload_2
253: invokestatic  #71
256: invokespecial #66
259: astore        5
261: aload_0
262: aload         5
264: dload         7
266: dload         7
268: dneg
269: dconst_0
270: dconst_0
271: invokespecial #47
274: aload_0
275: new           #10
278: dup
279: aload_1
280: aload_2
281: aload_1
282: aload_2
283: invokespecial #66
286: dconst_1
287: dconst_0
288: dconst_0
289: dconst_0
290: invokespecial #47
293: new           #10
296: dup
297: aload_1
298: aload_2
299: getstatic     #60
302: aload         4
304: invokespecial #66
307: pop
308: ldc           #28
310: invokestatic  #29
313: goto          318
316: astore        9
318: return
Exception table:
from    to  target type
293   313   316   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testMatrix
Start line: 149
End line: 505
Method source code: 
  public void testMatrix()
    throws NotARotationMatrixException {

    try {
      new Rotation(new double[][] {
                     { 0.0, 1.0, 0.0 },
                     { 1.0, 0.0, 0.0 }
                   }, 1.0e-7);
      Assert.fail("Expecting NotARotationMatrixException");
    } catch (NotARotationMatrixException nrme) {
      // expected behavior
    }

    try {
      new Rotation(new double[][] {
                     {  0.445888,  0.797184, -0.407040 },
                     {  0.821760, -0.184320,  0.539200 },
                     { -0.354816,  0.574912,  0.737280 }
                   }, 1.0e-7);
      Assert.fail("Expecting NotARotationMatrixException");
    } catch (NotARotationMatrixException nrme) {
      // expected behavior
    }

    try {
        new Rotation(new double[][] {
                       {  0.4,  0.8, -0.4 },
                       { -0.4,  0.6,  0.7 },
                       {  0.8, -0.2,  0.5 }
                     }, 1.0e-15);
        Assert.fail("Expecting NotARotationMatrixException");
      } catch (NotARotationMatrixException nrme) {
        // expected behavior
      }

    checkRotation(new Rotation(new double[][] {
                                 {  0.445888,  0.797184, -0.407040 },
                                 { -0.354816,  0.574912,  0.737280 },
                                 {  0.821760, -0.184320,  0.539200 }
                               }, 1.0e-10),
                  0.8, 0.288, 0.384, 0.36);

    checkRotation(new Rotation(new double[][] {
                                 {  0.539200,  0.737280,  0.407040 },
                                 {  0.184320, -0.574912,  0.797184 },
                                 {  0.821760, -0.354816, -0.445888 }
                              }, 1.0e-10),
                  0.36, 0.8, 0.288, 0.384);

    checkRotation(new Rotation(new double[][] {
                                 { -0.445888,  0.797184, -0.407040 },
                                 {  0.354816,  0.574912,  0.737280 },
                                 {  0.821760,  0.184320, -0.539200 }
                               }, 1.0e-10),
                  0.384, 0.36, 0.8, 0.288);

    checkRotation(new Rotation(new double[][] {
                                 { -0.539200,  0.737280,  0.407040 },
                                 { -0.184320, -0.574912,  0.797184 },
                                 {  0.821760,  0.354816,  0.445888 }
                               }, 1.0e-10),
                  0.288, 0.384, 0.36, 0.8);

    double[][] m1 = { { 0.0, 1.0, 0.0 },
                      { 0.0, 0.0, 1.0 },
                      { 1.0, 0.0, 0.0 } };
    Rotation r = new Rotation(m1, 1.0e-7);
    checkVector(r.applyTo(Vector3D.PLUS_I), Vector3D.PLUS_K);
    checkVector(r.applyTo(Vector3D.PLUS_J), Vector3D.PLUS_I);
    checkVector(r.applyTo(Vector3D.PLUS_K), Vector3D.PLUS_J);

    double[][] m2 = { { 0.83203, -0.55012, -0.07139 },
                      { 0.48293,  0.78164, -0.39474 },
                      { 0.27296,  0.29396,  0.91602 } };
    r = new Rotation(m2, 1.0e-12);

    double[][] m3 = r.getMatrix();
    double d00 = m2[0][0] - m3[0][0];
    double d01 = m2[0][1] - m3[0][1];
    double d02 = m2[0][2] - m3[0][2];
    double d10 = m2[1][0] - m3[1][0];
    double d11 = m2[1][1] - m3[1][1];
    double d12 = m2[1][2] - m3[1][2];
    double d20 = m2[2][0] - m3[2][0];
    double d21 = m2[2][1] - m3[2][1];
    double d22 = m2[2][2] - m3[2][2];

    Assert.assertTrue(FastMath.abs(d00) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d01) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d02) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d10) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d11) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d12) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d20) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d21) < 6.0e-6);
    Assert.assertTrue(FastMath.abs(d22) < 6.0e-6);

    Assert.assertTrue(FastMath.abs(d00) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d01) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d02) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d10) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d11) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d12) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d20) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d21) > 4.0e-7);
    Assert.assertTrue(FastMath.abs(d22) > 4.0e-7);

    for (int i = 0; i < 3; ++i) {
      for (int j = 0; j < 3; ++j) {
        double m3tm3 = m3[i][0] * m3[j][0]
                     + m3[i][1] * m3[j][1]
                     + m3[i][2] * m3[j][2];
        if (i == j) {
          Assert.assertTrue(FastMath.abs(m3tm3 - 1.0) < 1.0e-10);
        } else {
          Assert.assertTrue(FastMath.abs(m3tm3) < 1.0e-10);
        }
      }
    }

    checkVector(r.applyTo(Vector3D.PLUS_I),
                new Vector3D(m3[0][0], m3[1][0], m3[2][0]));
    checkVector(r.applyTo(Vector3D.PLUS_J),
                new Vector3D(m3[0][1], m3[1][1], m3[2][1]));
    checkVector(r.applyTo(Vector3D.PLUS_K),
                new Vector3D(m3[0][2], m3[1][2], m3[2][2]));

    double[][] m4 = { { 1.0,  0.0,  0.0 },
                      { 0.0, -1.0,  0.0 },
                      { 0.0,  0.0, -1.0 } };
    r = new Rotation(m4, 1.0e-7);
    checkAngle(r.getAngle(), FastMath.PI);

    try {
      double[][] m5 = { { 0.0, 0.0, 1.0 },
                        { 0.0, 1.0, 0.0 },
                        { 1.0, 0.0, 0.0 } };
      r = new Rotation(m5, 1.0e-7);
      Assert.fail("got " + r + ", should have caught an exception");
    } catch (NotARotationMatrixException e) {
      // expected
    }

  }

  @Test
  public void testAngles()
    throws CardanEulerSingularityException {

    RotationOrder[] CardanOrders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX
    };

    for (int i = 0; i < CardanOrders.length; ++i) {
      for (double alpha1 = 0.1; alpha1 < 6.2; alpha1 += 0.3) {
        for (double alpha2 = -1.55; alpha2 < 1.55; alpha2 += 0.3) {
          for (double alpha3 = 0.1; alpha3 < 6.2; alpha3 += 0.3) {
            Rotation r = new Rotation(CardanOrders[i], alpha1, alpha2, alpha3);
            double[] angles = r.getAngles(CardanOrders[i]);
            checkAngle(angles[0], alpha1);
            checkAngle(angles[1], alpha2);
            checkAngle(angles[2], alpha3);
          }
        }
      }
    }

    RotationOrder[] EulerOrders = {
            RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
            RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
          };

    for (int i = 0; i < EulerOrders.length; ++i) {
      for (double alpha1 = 0.1; alpha1 < 6.2; alpha1 += 0.3) {
        for (double alpha2 = 0.05; alpha2 < 3.1; alpha2 += 0.3) {
          for (double alpha3 = 0.1; alpha3 < 6.2; alpha3 += 0.3) {
            Rotation r = new Rotation(EulerOrders[i],
                                      alpha1, alpha2, alpha3);
            double[] angles = r.getAngles(EulerOrders[i]);
            checkAngle(angles[0], alpha1);
            checkAngle(angles[1], alpha2);
            checkAngle(angles[2], alpha3);
          }
        }
      }
    }

  }

  @Test
  public void testSingularities() {

    RotationOrder[] CardanOrders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX
    };

    double[] singularCardanAngle = { FastMath.PI / 2, -FastMath.PI / 2 };
    for (int i = 0; i < CardanOrders.length; ++i) {
      for (int j = 0; j < singularCardanAngle.length; ++j) {
        Rotation r = new Rotation(CardanOrders[i], 0.1, singularCardanAngle[j], 0.3);
        try {
          r.getAngles(CardanOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }

    RotationOrder[] EulerOrders = {
            RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
            RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
          };

    double[] singularEulerAngle = { 0, FastMath.PI };
    for (int i = 0; i < EulerOrders.length; ++i) {
      for (int j = 0; j < singularEulerAngle.length; ++j) {
        Rotation r = new Rotation(EulerOrders[i], 0.1, singularEulerAngle[j], 0.3);
        try {
          r.getAngles(EulerOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }


  }

  @Test
  public void testQuaternion() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    double n = 23.5;
    Rotation r2 = new Rotation(n * r1.getQ0(), n * r1.getQ1(),
                               n * r1.getQ2(), n * r1.getQ3(),
                               true);
    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(u), r1.applyTo(u));
        }
      }
    }

    r1 = new Rotation( 0.288,  0.384,  0.36,  0.8, false);
    checkRotation(r1, -r1.getQ0(), -r1.getQ1(), -r1.getQ2(), -r1.getQ3());

  }

  @Test
  public void testCompose() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }

  @Test
  public void testComposeInverse() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyInverseTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyInverseTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }

  @Test
  public void testApplyInverseTo() {

    Rotation r = new Rotation(new Vector3D(2, -3, 5), 1.7);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          r.applyInverseTo(r.applyTo(u));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = Rotation.IDENTITY;
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = new Rotation(Vector3D.PLUS_K, FastMath.PI);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

  }

  @Test
  public void testIssue639(){
      Vector3D u1 = new Vector3D(-1321008684645961.0 /  268435456.0,
                                 -5774608829631843.0 /  268435456.0,
                                 -3822921525525679.0 / 4294967296.0);
      Vector3D u2 =new Vector3D( -5712344449280879.0 /    2097152.0,
                                 -2275058564560979.0 /    1048576.0,
                                  4423475992255071.0 /      65536.0);
      Rotation rot = new Rotation(u1, u2, Vector3D.PLUS_I,Vector3D.PLUS_K);
      Assert.assertEquals( 0.6228370359608200639829222, rot.getQ0(), 1.0e-15);
      Assert.assertEquals( 0.0257707621456498790029987, rot.getQ1(), 1.0e-15);
      Assert.assertEquals(-0.0000000002503012255839931, rot.getQ2(), 1.0e-15);
      Assert.assertEquals(-0.7819270390861109450724902, rot.getQ3(), 1.0e-15);
  }

  private void checkVector(Vector3D v1, Vector3D v2) {
    Assert.assertTrue(v1.subtract(v2).getNorm() < 1.0e-10);
  }

  private void checkAngle(double a1, double a2) {
    Assert.assertEquals(a1, MathUtils.normalizeAngle(a2, a1), 1.0e-10);
  }

  private void checkRotation(Rotation r, double q0, double q1, double q2, double q3) {
    Assert.assertEquals(0, Rotation.distance(r, new Rotation(q0, q1, q2, q3, false)), 1.0e-12);
  }

}
Method byte code: 
0: new           #10
3: dup
4: iconst_2
5: anewarray     #72
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_0
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: dup
22: iconst_2
23: dconst_0
24: dastore
25: aastore
26: dup
27: iconst_1
28: iconst_3
29: newarray       double
31: dup
32: iconst_0
33: dconst_1
34: dastore
35: dup
36: iconst_1
37: dconst_0
38: dastore
39: dup
40: iconst_2
41: dconst_0
42: dastore
43: aastore
44: ldc2_w        #73
47: invokespecial #75
50: pop
51: ldc           #76
53: invokestatic  #29
56: goto          60
59: astore_1
60: new           #10
63: dup
64: iconst_3
65: anewarray     #72
68: dup
69: iconst_0
70: iconst_3
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #78
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #80
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #82
90: dastore
91: aastore
92: dup
93: iconst_1
94: iconst_3
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #84
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #86
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #88
114: dastore
115: aastore
116: dup
117: iconst_2
118: iconst_3
119: newarray       double
121: dup
122: iconst_0
123: ldc2_w        #90
126: dastore
127: dup
128: iconst_1
129: ldc2_w        #92
132: dastore
133: dup
134: iconst_2
135: ldc2_w        #94
138: dastore
139: aastore
140: ldc2_w        #73
143: invokespecial #75
146: pop
147: ldc           #76
149: invokestatic  #29
152: goto          156
155: astore_1
156: new           #10
159: dup
160: iconst_3
161: anewarray     #72
164: dup
165: iconst_0
166: iconst_3
167: newarray       double
169: dup
170: iconst_0
171: ldc2_w        #96
174: dastore
175: dup
176: iconst_1
177: ldc2_w        #43
180: dastore
181: dup
182: iconst_2
183: ldc2_w        #98
186: dastore
187: aastore
188: dup
189: iconst_1
190: iconst_3
191: newarray       double
193: dup
194: iconst_0
195: ldc2_w        #98
198: dastore
199: dup
200: iconst_1
201: ldc2_w        #100
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #102
210: dastore
211: aastore
212: dup
213: iconst_2
214: iconst_3
215: newarray       double
217: dup
218: iconst_0
219: ldc2_w        #43
222: dastore
223: dup
224: iconst_1
225: ldc2_w        #104
228: dastore
229: dup
230: iconst_2
231: ldc2_w        #69
234: dastore
235: aastore
236: ldc2_w        #106
239: invokespecial #75
242: pop
243: ldc           #76
245: invokestatic  #29
248: goto          252
251: astore_1
252: aload_0
253: new           #10
256: dup
257: iconst_3
258: anewarray     #72
261: dup
262: iconst_0
263: iconst_3
264: newarray       double
266: dup
267: iconst_0
268: ldc2_w        #78
271: dastore
272: dup
273: iconst_1
274: ldc2_w        #80
277: dastore
278: dup
279: iconst_2
280: ldc2_w        #82
283: dastore
284: aastore
285: dup
286: iconst_1
287: iconst_3
288: newarray       double
290: dup
291: iconst_0
292: ldc2_w        #90
295: dastore
296: dup
297: iconst_1
298: ldc2_w        #92
301: dastore
302: dup
303: iconst_2
304: ldc2_w        #94
307: dastore
308: aastore
309: dup
310: iconst_2
311: iconst_3
312: newarray       double
314: dup
315: iconst_0
316: ldc2_w        #84
319: dastore
320: dup
321: iconst_1
322: ldc2_w        #86
325: dastore
326: dup
327: iconst_2
328: ldc2_w        #88
331: dastore
332: aastore
333: ldc2_w        #108
336: invokespecial #75
339: ldc2_w        #43
342: ldc2_w        #110
345: ldc2_w        #112
348: ldc2_w        #39
351: invokespecial #47
354: aload_0
355: new           #10
358: dup
359: iconst_3
360: anewarray     #72
363: dup
364: iconst_0
365: iconst_3
366: newarray       double
368: dup
369: iconst_0
370: ldc2_w        #88
373: dastore
374: dup
375: iconst_1
376: ldc2_w        #94
379: dastore
380: dup
381: iconst_2
382: ldc2_w        #114
385: dastore
386: aastore
387: dup
388: iconst_1
389: iconst_3
390: newarray       double
392: dup
393: iconst_0
394: ldc2_w        #116
397: dastore
398: dup
399: iconst_1
400: ldc2_w        #118
403: dastore
404: dup
405: iconst_2
406: ldc2_w        #80
409: dastore
410: aastore
411: dup
412: iconst_2
413: iconst_3
414: newarray       double
416: dup
417: iconst_0
418: ldc2_w        #84
421: dastore
422: dup
423: iconst_1
424: ldc2_w        #90
427: dastore
428: dup
429: iconst_2
430: ldc2_w        #120
433: dastore
434: aastore
435: ldc2_w        #108
438: invokespecial #75
441: ldc2_w        #39
444: ldc2_w        #43
447: ldc2_w        #110
450: ldc2_w        #112
453: invokespecial #47
456: aload_0
457: new           #10
460: dup
461: iconst_3
462: anewarray     #72
465: dup
466: iconst_0
467: iconst_3
468: newarray       double
470: dup
471: iconst_0
472: ldc2_w        #120
475: dastore
476: dup
477: iconst_1
478: ldc2_w        #80
481: dastore
482: dup
483: iconst_2
484: ldc2_w        #82
487: dastore
488: aastore
489: dup
490: iconst_1
491: iconst_3
492: newarray       double
494: dup
495: iconst_0
496: ldc2_w        #122
499: dastore
500: dup
501: iconst_1
502: ldc2_w        #92
505: dastore
506: dup
507: iconst_2
508: ldc2_w        #94
511: dastore
512: aastore
513: dup
514: iconst_2
515: iconst_3
516: newarray       double
518: dup
519: iconst_0
520: ldc2_w        #84
523: dastore
524: dup
525: iconst_1
526: ldc2_w        #116
529: dastore
530: dup
531: iconst_2
532: ldc2_w        #124
535: dastore
536: aastore
537: ldc2_w        #108
540: invokespecial #75
543: ldc2_w        #112
546: ldc2_w        #39
549: ldc2_w        #43
552: ldc2_w        #110
555: invokespecial #47
558: aload_0
559: new           #10
562: dup
563: iconst_3
564: anewarray     #72
567: dup
568: iconst_0
569: iconst_3
570: newarray       double
572: dup
573: iconst_0
574: ldc2_w        #124
577: dastore
578: dup
579: iconst_1
580: ldc2_w        #94
583: dastore
584: dup
585: iconst_2
586: ldc2_w        #114
589: dastore
590: aastore
591: dup
592: iconst_1
593: iconst_3
594: newarray       double
596: dup
597: iconst_0
598: ldc2_w        #86
601: dastore
602: dup
603: iconst_1
604: ldc2_w        #118
607: dastore
608: dup
609: iconst_2
610: ldc2_w        #80
613: dastore
614: aastore
615: dup
616: iconst_2
617: iconst_3
618: newarray       double
620: dup
621: iconst_0
622: ldc2_w        #84
625: dastore
626: dup
627: iconst_1
628: ldc2_w        #122
631: dastore
632: dup
633: iconst_2
634: ldc2_w        #78
637: dastore
638: aastore
639: ldc2_w        #108
642: invokespecial #75
645: ldc2_w        #110
648: ldc2_w        #112
651: ldc2_w        #39
654: ldc2_w        #43
657: invokespecial #47
660: iconst_3
661: anewarray     #72
664: dup
665: iconst_0
666: iconst_3
667: newarray       double
669: dup
670: iconst_0
671: dconst_0
672: dastore
673: dup
674: iconst_1
675: dconst_1
676: dastore
677: dup
678: iconst_2
679: dconst_0
680: dastore
681: aastore
682: dup
683: iconst_1
684: iconst_3
685: newarray       double
687: dup
688: iconst_0
689: dconst_0
690: dastore
691: dup
692: iconst_1
693: dconst_0
694: dastore
695: dup
696: iconst_2
697: dconst_1
698: dastore
699: aastore
700: dup
701: iconst_2
702: iconst_3
703: newarray       double
705: dup
706: iconst_0
707: dconst_1
708: dastore
709: dup
710: iconst_1
711: dconst_0
712: dastore
713: dup
714: iconst_2
715: dconst_0
716: dastore
717: aastore
718: astore_1
719: new           #10
722: dup
723: aload_1
724: ldc2_w        #73
727: invokespecial #75
730: astore_2
731: aload_0
732: aload_2
733: getstatic     #3
736: invokevirtual #4
739: getstatic     #7
742: invokespecial #5
745: aload_0
746: aload_2
747: getstatic     #6
750: invokevirtual #4
753: getstatic     #3
756: invokespecial #5
759: aload_0
760: aload_2
761: getstatic     #7
764: invokevirtual #4
767: getstatic     #6
770: invokespecial #5
773: iconst_3
774: anewarray     #72
777: dup
778: iconst_0
779: iconst_3
780: newarray       double
782: dup
783: iconst_0
784: ldc2_w        #126
787: dastore
788: dup
789: iconst_1
790: ldc2_w        #128
793: dastore
794: dup
795: iconst_2
796: ldc2_w        #130
799: dastore
800: aastore
801: dup
802: iconst_1
803: iconst_3
804: newarray       double
806: dup
807: iconst_0
808: ldc2_w        #132
811: dastore
812: dup
813: iconst_1
814: ldc2_w        #134
817: dastore
818: dup
819: iconst_2
820: ldc2_w        #136
823: dastore
824: aastore
825: dup
826: iconst_2
827: iconst_3
828: newarray       double
830: dup
831: iconst_0
832: ldc2_w        #138
835: dastore
836: dup
837: iconst_1
838: ldc2_w        #140
841: dastore
842: dup
843: iconst_2
844: ldc2_w        #142
847: dastore
848: aastore
849: astore_3
850: new           #10
853: dup
854: aload_3
855: ldc2_w        #48
858: invokespecial #75
861: astore_2
862: aload_2
863: invokevirtual #144
866: astore        4
868: aload_3
869: iconst_0
870: aaload
871: iconst_0
872: daload
873: aload         4
875: iconst_0
876: aaload
877: iconst_0
878: daload
879: dsub
880: dstore        5
882: aload_3
883: iconst_0
884: aaload
885: iconst_1
886: daload
887: aload         4
889: iconst_0
890: aaload
891: iconst_1
892: daload
893: dsub
894: dstore        7
896: aload_3
897: iconst_0
898: aaload
899: iconst_2
900: daload
901: aload         4
903: iconst_0
904: aaload
905: iconst_2
906: daload
907: dsub
908: dstore        9
910: aload_3
911: iconst_1
912: aaload
913: iconst_0
914: daload
915: aload         4
917: iconst_1
918: aaload
919: iconst_0
920: daload
921: dsub
922: dstore        11
924: aload_3
925: iconst_1
926: aaload
927: iconst_1
928: daload
929: aload         4
931: iconst_1
932: aaload
933: iconst_1
934: daload
935: dsub
936: dstore        13
938: aload_3
939: iconst_1
940: aaload
941: iconst_2
942: daload
943: aload         4
945: iconst_1
946: aaload
947: iconst_2
948: daload
949: dsub
950: dstore        15
952: aload_3
953: iconst_2
954: aaload
955: iconst_0
956: daload
957: aload         4
959: iconst_2
960: aaload
961: iconst_0
962: daload
963: dsub
964: dstore        17
966: aload_3
967: iconst_2
968: aaload
969: iconst_1
970: daload
971: aload         4
973: iconst_2
974: aaload
975: iconst_1
976: daload
977: dsub
978: dstore        19
980: aload_3
981: iconst_2
982: aaload
983: iconst_2
984: daload
985: aload         4
987: iconst_2
988: aaload
989: iconst_2
990: daload
991: dsub
992: dstore        21
994: dload         5
996: invokestatic  #145
999: ldc2_w        #146
1002: dcmpg
1003: ifge          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #148
1014: dload         7
1016: invokestatic  #145
1019: ldc2_w        #146
1022: dcmpg
1023: ifge          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #148
1034: dload         9
1036: invokestatic  #145
1039: ldc2_w        #146
1042: dcmpg
1043: ifge          1050
1046: iconst_1
1047: goto          1051
1050: iconst_0
1051: invokestatic  #148
1054: dload         11
1056: invokestatic  #145
1059: ldc2_w        #146
1062: dcmpg
1063: ifge          1070
1066: iconst_1
1067: goto          1071
1070: iconst_0
1071: invokestatic  #148
1074: dload         13
1076: invokestatic  #145
1079: ldc2_w        #146
1082: dcmpg
1083: ifge          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #148
1094: dload         15
1096: invokestatic  #145
1099: ldc2_w        #146
1102: dcmpg
1103: ifge          1110
1106: iconst_1
1107: goto          1111
1110: iconst_0
1111: invokestatic  #148
1114: dload         17
1116: invokestatic  #145
1119: ldc2_w        #146
1122: dcmpg
1123: ifge          1130
1126: iconst_1
1127: goto          1131
1130: iconst_0
1131: invokestatic  #148
1134: dload         19
1136: invokestatic  #145
1139: ldc2_w        #146
1142: dcmpg
1143: ifge          1150
1146: iconst_1
1147: goto          1151
1150: iconst_0
1151: invokestatic  #148
1154: dload         21
1156: invokestatic  #145
1159: ldc2_w        #146
1162: dcmpg
1163: ifge          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #148
1174: dload         5
1176: invokestatic  #145
1179: ldc2_w        #149
1182: dcmpl
1183: ifle          1190
1186: iconst_1
1187: goto          1191
1190: iconst_0
1191: invokestatic  #148
1194: dload         7
1196: invokestatic  #145
1199: ldc2_w        #149
1202: dcmpl
1203: ifle          1210
1206: iconst_1
1207: goto          1211
1210: iconst_0
1211: invokestatic  #148
1214: dload         9
1216: invokestatic  #145
1219: ldc2_w        #149
1222: dcmpl
1223: ifle          1230
1226: iconst_1
1227: goto          1231
1230: iconst_0
1231: invokestatic  #148
1234: dload         11
1236: invokestatic  #145
1239: ldc2_w        #149
1242: dcmpl
1243: ifle          1250
1246: iconst_1
1247: goto          1251
1250: iconst_0
1251: invokestatic  #148
1254: dload         13
1256: invokestatic  #145
1259: ldc2_w        #149
1262: dcmpl
1263: ifle          1270
1266: iconst_1
1267: goto          1271
1270: iconst_0
1271: invokestatic  #148
1274: dload         15
1276: invokestatic  #145
1279: ldc2_w        #149
1282: dcmpl
1283: ifle          1290
1286: iconst_1
1287: goto          1291
1290: iconst_0
1291: invokestatic  #148
1294: dload         17
1296: invokestatic  #145
1299: ldc2_w        #149
1302: dcmpl
1303: ifle          1310
1306: iconst_1
1307: goto          1311
1310: iconst_0
1311: invokestatic  #148
1314: dload         19
1316: invokestatic  #145
1319: ldc2_w        #149
1322: dcmpl
1323: ifle          1330
1326: iconst_1
1327: goto          1331
1330: iconst_0
1331: invokestatic  #148
1334: dload         21
1336: invokestatic  #145
1339: ldc2_w        #149
1342: dcmpl
1343: ifle          1350
1346: iconst_1
1347: goto          1351
1350: iconst_0
1351: invokestatic  #148
1354: iconst_0
1355: istore        23
1357: iload         23
1359: iconst_3
1360: if_icmpge     1485
1363: iconst_0
1364: istore        24
1366: iload         24
1368: iconst_3
1369: if_icmpge     1479
1372: aload         4
1374: iload         23
1376: aaload
1377: iconst_0
1378: daload
1379: aload         4
1381: iload         24
1383: aaload
1384: iconst_0
1385: daload
1386: dmul
1387: aload         4
1389: iload         23
1391: aaload
1392: iconst_1
1393: daload
1394: aload         4
1396: iload         24
1398: aaload
1399: iconst_1
1400: daload
1401: dmul
1402: dadd
1403: aload         4
1405: iload         23
1407: aaload
1408: iconst_2
1409: daload
1410: aload         4
1412: iload         24
1414: aaload
1415: iconst_2
1416: daload
1417: dmul
1418: dadd
1419: dstore        25
1421: iload         23
1423: iload         24
1425: if_icmpne     1453
1428: dload         25
1430: dconst_1
1431: dsub
1432: invokestatic  #145
1435: ldc2_w        #108
1438: dcmpg
1439: ifge          1446
1442: iconst_1
1443: goto          1447
1446: iconst_0
1447: invokestatic  #148
1450: goto          1473
1453: dload         25
1455: invokestatic  #145
1458: ldc2_w        #108
1461: dcmpg
1462: ifge          1469
1465: iconst_1
1466: goto          1470
1469: iconst_0
1470: invokestatic  #148
1473: iinc          24, 1
1476: goto          1366
1479: iinc          23, 1
1482: goto          1357
1485: aload_0
1486: aload_2
1487: getstatic     #3
1490: invokevirtual #4
1493: new           #16
1496: dup
1497: aload         4
1499: iconst_0
1500: aaload
1501: iconst_0
1502: daload
1503: aload         4
1505: iconst_1
1506: aaload
1507: iconst_0
1508: daload
1509: aload         4
1511: iconst_2
1512: aaload
1513: iconst_0
1514: daload
1515: invokespecial #19
1518: invokespecial #5
1521: aload_0
1522: aload_2
1523: getstatic     #6
1526: invokevirtual #4
1529: new           #16
1532: dup
1533: aload         4
1535: iconst_0
1536: aaload
1537: iconst_1
1538: daload
1539: aload         4
1541: iconst_1
1542: aaload
1543: iconst_1
1544: daload
1545: aload         4
1547: iconst_2
1548: aaload
1549: iconst_1
1550: daload
1551: invokespecial #19
1554: invokespecial #5
1557: aload_0
1558: aload_2
1559: getstatic     #7
1562: invokevirtual #4
1565: new           #16
1568: dup
1569: aload         4
1571: iconst_0
1572: aaload
1573: iconst_2
1574: daload
1575: aload         4
1577: iconst_1
1578: aaload
1579: iconst_2
1580: daload
1581: aload         4
1583: iconst_2
1584: aaload
1585: iconst_2
1586: daload
1587: invokespecial #19
1590: invokespecial #5
1593: iconst_3
1594: anewarray     #72
1597: dup
1598: iconst_0
1599: iconst_3
1600: newarray       double
1602: dup
1603: iconst_0
1604: dconst_1
1605: dastore
1606: dup
1607: iconst_1
1608: dconst_0
1609: dastore
1610: dup
1611: iconst_2
1612: dconst_0
1613: dastore
1614: aastore
1615: dup
1616: iconst_1
1617: iconst_3
1618: newarray       double
1620: dup
1621: iconst_0
1622: dconst_0
1623: dastore
1624: dup
1625: iconst_1
1626: ldc2_w        #11
1629: dastore
1630: dup
1631: iconst_2
1632: dconst_0
1633: dastore
1634: aastore
1635: dup
1636: iconst_2
1637: iconst_3
1638: newarray       double
1640: dup
1641: iconst_0
1642: dconst_0
1643: dastore
1644: dup
1645: iconst_1
1646: dconst_0
1647: dastore
1648: dup
1649: iconst_2
1650: ldc2_w        #11
1653: dastore
1654: aastore
1655: astore        23
1657: new           #10
1660: dup
1661: aload         23
1663: ldc2_w        #73
1666: invokespecial #75
1669: astore_2
1670: aload_0
1671: aload_2
1672: invokevirtual #8
1675: ldc2_w        #35
1678: invokespecial #9
1681: iconst_3
1682: anewarray     #72
1685: dup
1686: iconst_0
1687: iconst_3
1688: newarray       double
1690: dup
1691: iconst_0
1692: dconst_0
1693: dastore
1694: dup
1695: iconst_1
1696: dconst_0
1697: dastore
1698: dup
1699: iconst_2
1700: dconst_1
1701: dastore
1702: aastore
1703: dup
1704: iconst_1
1705: iconst_3
1706: newarray       double
1708: dup
1709: iconst_0
1710: dconst_0
1711: dastore
1712: dup
1713: iconst_1
1714: dconst_1
1715: dastore
1716: dup
1717: iconst_2
1718: dconst_0
1719: dastore
1720: aastore
1721: dup
1722: iconst_2
1723: iconst_3
1724: newarray       double
1726: dup
1727: iconst_0
1728: dconst_1
1729: dastore
1730: dup
1731: iconst_1
1732: dconst_0
1733: dastore
1734: dup
1735: iconst_2
1736: dconst_0
1737: dastore
1738: aastore
1739: astore        24
1741: new           #10
1744: dup
1745: aload         24
1747: ldc2_w        #73
1750: invokespecial #75
1753: astore_2
1754: new           #151
1757: dup
1758: invokespecial #152
1761: ldc           #153
1763: invokevirtual #154
1766: aload_2
1767: invokevirtual #155
1770: ldc           #156
1772: invokevirtual #154
1775: invokevirtual #157
1778: invokestatic  #29
1781: goto          1786
1784: astore        24
1786: return
Exception table:
from    to  target type
0    56    59   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
60   152   155   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
156   248   251   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
1681  1781  1784   Class org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testAngles
Start line: 295
End line: 505
Method source code: 
  public void testAngles()
    throws CardanEulerSingularityException {

    RotationOrder[] CardanOrders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX
    };

    for (int i = 0; i < CardanOrders.length; ++i) {
      for (double alpha1 = 0.1; alpha1 < 6.2; alpha1 += 0.3) {
        for (double alpha2 = -1.55; alpha2 < 1.55; alpha2 += 0.3) {
          for (double alpha3 = 0.1; alpha3 < 6.2; alpha3 += 0.3) {
            Rotation r = new Rotation(CardanOrders[i], alpha1, alpha2, alpha3);
            double[] angles = r.getAngles(CardanOrders[i]);
            checkAngle(angles[0], alpha1);
            checkAngle(angles[1], alpha2);
            checkAngle(angles[2], alpha3);
          }
        }
      }
    }

    RotationOrder[] EulerOrders = {
            RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
            RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
          };

    for (int i = 0; i < EulerOrders.length; ++i) {
      for (double alpha1 = 0.1; alpha1 < 6.2; alpha1 += 0.3) {
        for (double alpha2 = 0.05; alpha2 < 3.1; alpha2 += 0.3) {
          for (double alpha3 = 0.1; alpha3 < 6.2; alpha3 += 0.3) {
            Rotation r = new Rotation(EulerOrders[i],
                                      alpha1, alpha2, alpha3);
            double[] angles = r.getAngles(EulerOrders[i]);
            checkAngle(angles[0], alpha1);
            checkAngle(angles[1], alpha2);
            checkAngle(angles[2], alpha3);
          }
        }
      }
    }

  }

  @Test
  public void testSingularities() {

    RotationOrder[] CardanOrders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX
    };

    double[] singularCardanAngle = { FastMath.PI / 2, -FastMath.PI / 2 };
    for (int i = 0; i < CardanOrders.length; ++i) {
      for (int j = 0; j < singularCardanAngle.length; ++j) {
        Rotation r = new Rotation(CardanOrders[i], 0.1, singularCardanAngle[j], 0.3);
        try {
          r.getAngles(CardanOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }

    RotationOrder[] EulerOrders = {
            RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
            RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
          };

    double[] singularEulerAngle = { 0, FastMath.PI };
    for (int i = 0; i < EulerOrders.length; ++i) {
      for (int j = 0; j < singularEulerAngle.length; ++j) {
        Rotation r = new Rotation(EulerOrders[i], 0.1, singularEulerAngle[j], 0.3);
        try {
          r.getAngles(EulerOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }


  }

  @Test
  public void testQuaternion() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    double n = 23.5;
    Rotation r2 = new Rotation(n * r1.getQ0(), n * r1.getQ1(),
                               n * r1.getQ2(), n * r1.getQ3(),
                               true);
    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(u), r1.applyTo(u));
        }
      }
    }

    r1 = new Rotation( 0.288,  0.384,  0.36,  0.8, false);
    checkRotation(r1, -r1.getQ0(), -r1.getQ1(), -r1.getQ2(), -r1.getQ3());

  }

  @Test
  public void testCompose() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }

  @Test
  public void testComposeInverse() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyInverseTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyInverseTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }

  @Test
  public void testApplyInverseTo() {

    Rotation r = new Rotation(new Vector3D(2, -3, 5), 1.7);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          r.applyInverseTo(r.applyTo(u));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = Rotation.IDENTITY;
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = new Rotation(Vector3D.PLUS_K, FastMath.PI);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

  }

  @Test
  public void testIssue639(){
      Vector3D u1 = new Vector3D(-1321008684645961.0 /  268435456.0,
                                 -5774608829631843.0 /  268435456.0,
                                 -3822921525525679.0 / 4294967296.0);
      Vector3D u2 =new Vector3D( -5712344449280879.0 /    2097152.0,
                                 -2275058564560979.0 /    1048576.0,
                                  4423475992255071.0 /      65536.0);
      Rotation rot = new Rotation(u1, u2, Vector3D.PLUS_I,Vector3D.PLUS_K);
      Assert.assertEquals( 0.6228370359608200639829222, rot.getQ0(), 1.0e-15);
      Assert.assertEquals( 0.0257707621456498790029987, rot.getQ1(), 1.0e-15);
      Assert.assertEquals(-0.0000000002503012255839931, rot.getQ2(), 1.0e-15);
      Assert.assertEquals(-0.7819270390861109450724902, rot.getQ3(), 1.0e-15);
  }

  private void checkVector(Vector3D v1, Vector3D v2) {
    Assert.assertTrue(v1.subtract(v2).getNorm() < 1.0e-10);
  }

  private void checkAngle(double a1, double a2) {
    Assert.assertEquals(a1, MathUtils.normalizeAngle(a2, a1), 1.0e-10);
  }

  private void checkRotation(Rotation r, double q0, double q1, double q2, double q3) {
    Assert.assertEquals(0, Rotation.distance(r, new Rotation(q0, q1, q2, q3, false)), 1.0e-12);
  }

}
Method byte code: 
0: bipush        6
2: anewarray     #158
5: dup
6: iconst_0
7: getstatic     #159
10: aastore
11: dup
12: iconst_1
13: getstatic     #160
16: aastore
17: dup
18: iconst_2
19: getstatic     #161
22: aastore
23: dup
24: iconst_3
25: getstatic     #162
28: aastore
29: dup
30: iconst_4
31: getstatic     #163
34: aastore
35: dup
36: iconst_5
37: getstatic     #164
40: aastore
41: astore_1
42: iconst_0
43: istore_2
44: iload_2
45: aload_1
46: arraylength
47: if_icmpge     183
50: ldc2_w        #165
53: dstore_3
54: dload_3
55: ldc2_w        #167
58: dcmpg
59: ifge          177
62: ldc2_w        #169
65: dstore        5
67: dload         5
69: ldc2_w        #171
72: dcmpg
73: ifge          168
76: ldc2_w        #165
79: dstore        7
81: dload         7
83: ldc2_w        #167
86: dcmpg
87: ifge          157
90: new           #10
93: dup
94: aload_1
95: iload_2
96: aaload
97: dload_3
98: dload         5
100: dload         7
102: invokespecial #173
105: astore        9
107: aload         9
109: aload_1
110: iload_2
111: aaload
112: invokevirtual #174
115: astore        10
117: aload_0
118: aload         10
120: iconst_0
121: daload
122: dload_3
123: invokespecial #9
126: aload_0
127: aload         10
129: iconst_1
130: daload
131: dload         5
133: invokespecial #9
136: aload_0
137: aload         10
139: iconst_2
140: daload
141: dload         7
143: invokespecial #9
146: dload         7
148: ldc2_w        #175
151: dadd
152: dstore        7
154: goto          81
157: dload         5
159: ldc2_w        #175
162: dadd
163: dstore        5
165: goto          67
168: dload_3
169: ldc2_w        #175
172: dadd
173: dstore_3
174: goto          54
177: iinc          2, 1
180: goto          44
183: bipush        6
185: anewarray     #158
188: dup
189: iconst_0
190: getstatic     #177
193: aastore
194: dup
195: iconst_1
196: getstatic     #178
199: aastore
200: dup
201: iconst_2
202: getstatic     #179
205: aastore
206: dup
207: iconst_3
208: getstatic     #180
211: aastore
212: dup
213: iconst_4
214: getstatic     #181
217: aastore
218: dup
219: iconst_5
220: getstatic     #182
223: aastore
224: astore_2
225: iconst_0
226: istore_3
227: iload_3
228: aload_2
229: arraylength
230: if_icmpge     372
233: ldc2_w        #165
236: dstore        4
238: dload         4
240: ldc2_w        #167
243: dcmpg
244: ifge          366
247: ldc2_w        #183
250: dstore        6
252: dload         6
254: ldc2_w        #185
257: dcmpg
258: ifge          355
261: ldc2_w        #165
264: dstore        8
266: dload         8
268: ldc2_w        #167
271: dcmpg
272: ifge          344
275: new           #10
278: dup
279: aload_2
280: iload_3
281: aaload
282: dload         4
284: dload         6
286: dload         8
288: invokespecial #173
291: astore        10
293: aload         10
295: aload_2
296: iload_3
297: aaload
298: invokevirtual #174
301: astore        11
303: aload_0
304: aload         11
306: iconst_0
307: daload
308: dload         4
310: invokespecial #9
313: aload_0
314: aload         11
316: iconst_1
317: daload
318: dload         6
320: invokespecial #9
323: aload_0
324: aload         11
326: iconst_2
327: daload
328: dload         8
330: invokespecial #9
333: dload         8
335: ldc2_w        #175
338: dadd
339: dstore        8
341: goto          266
344: dload         6
346: ldc2_w        #175
349: dadd
350: dstore        6
352: goto          252
355: dload         4
357: ldc2_w        #175
360: dadd
361: dstore        4
363: goto          238
366: iinc          3, 1
369: goto          227
372: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testSingularities
Start line: 340
End line: 379
Method source code: 
  public void testSingularities() {

    RotationOrder[] CardanOrders = {
      RotationOrder.XYZ, RotationOrder.XZY, RotationOrder.YXZ,
      RotationOrder.YZX, RotationOrder.ZXY, RotationOrder.ZYX
    };

    double[] singularCardanAngle = { FastMath.PI / 2, -FastMath.PI / 2 };
    for (int i = 0; i < CardanOrders.length; ++i) {
      for (int j = 0; j < singularCardanAngle.length; ++j) {
        Rotation r = new Rotation(CardanOrders[i], 0.1, singularCardanAngle[j], 0.3);
        try {
          r.getAngles(CardanOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }

    RotationOrder[] EulerOrders = {
            RotationOrder.XYX, RotationOrder.XZX, RotationOrder.YXY,
            RotationOrder.YZY, RotationOrder.ZXZ, RotationOrder.ZYZ
          };

    double[] singularEulerAngle = { 0, FastMath.PI };
    for (int i = 0; i < EulerOrders.length; ++i) {
      for (int j = 0; j < singularEulerAngle.length; ++j) {
        Rotation r = new Rotation(EulerOrders[i], 0.1, singularEulerAngle[j], 0.3);
        try {
          r.getAngles(EulerOrders[i]);
          Assert.fail("an exception should have been caught");
        } catch (CardanEulerSingularityException cese) {
          // expected behavior
        }
      }
    }


  }
Method byte code: 
0: bipush        6
2: anewarray     #158
5: dup
6: iconst_0
7: getstatic     #159
10: aastore
11: dup
12: iconst_1
13: getstatic     #160
16: aastore
17: dup
18: iconst_2
19: getstatic     #161
22: aastore
23: dup
24: iconst_3
25: getstatic     #162
28: aastore
29: dup
30: iconst_4
31: getstatic     #163
34: aastore
35: dup
36: iconst_5
37: getstatic     #164
40: aastore
41: astore_1
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: ldc2_w        #33
50: dastore
51: dup
52: iconst_1
53: ldc2_w        #187
56: dastore
57: astore_2
58: iconst_0
59: istore_3
60: iload_3
61: aload_1
62: arraylength
63: if_icmpge     129
66: iconst_0
67: istore        4
69: iload         4
71: aload_2
72: arraylength
73: if_icmpge     123
76: new           #10
79: dup
80: aload_1
81: iload_3
82: aaload
83: ldc2_w        #165
86: aload_2
87: iload         4
89: daload
90: ldc2_w        #175
93: invokespecial #173
96: astore        5
98: aload         5
100: aload_1
101: iload_3
102: aaload
103: invokevirtual #174
106: pop
107: ldc           #189
109: invokestatic  #29
112: goto          117
115: astore        6
117: iinc          4, 1
120: goto          69
123: iinc          3, 1
126: goto          60
129: bipush        6
131: anewarray     #158
134: dup
135: iconst_0
136: getstatic     #177
139: aastore
140: dup
141: iconst_1
142: getstatic     #178
145: aastore
146: dup
147: iconst_2
148: getstatic     #179
151: aastore
152: dup
153: iconst_3
154: getstatic     #180
157: aastore
158: dup
159: iconst_4
160: getstatic     #181
163: aastore
164: dup
165: iconst_5
166: getstatic     #182
169: aastore
170: astore_3
171: iconst_2
172: newarray       double
174: dup
175: iconst_0
176: dconst_0
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #35
183: dastore
184: astore        4
186: iconst_0
187: istore        5
189: iload         5
191: aload_3
192: arraylength
193: if_icmpge     263
196: iconst_0
197: istore        6
199: iload         6
201: aload         4
203: arraylength
204: if_icmpge     257
207: new           #10
210: dup
211: aload_3
212: iload         5
214: aaload
215: ldc2_w        #165
218: aload         4
220: iload         6
222: daload
223: ldc2_w        #175
226: invokespecial #173
229: astore        7
231: aload         7
233: aload_3
234: iload         5
236: aaload
237: invokevirtual #174
240: pop
241: ldc           #189
243: invokestatic  #29
246: goto          251
249: astore        8
251: iinc          6, 1
254: goto          199
257: iinc          5, 1
260: goto          189
263: return
Exception table:
from    to  target type
98   112   115   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
231   246   249   Class org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testQuaternion
Start line: 382
End line: 401
Method source code: 
  public void testQuaternion() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    double n = 23.5;
    Rotation r2 = new Rotation(n * r1.getQ0(), n * r1.getQ1(),
                               n * r1.getQ2(), n * r1.getQ3(),
                               true);
    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(u), r1.applyTo(u));
        }
      }
    }

    r1 = new Rotation( 0.288,  0.384,  0.36,  0.8, false);
    checkRotation(r1, -r1.getQ0(), -r1.getQ1(), -r1.getQ2(), -r1.getQ3());

  }
Method byte code: 
0: new           #10
3: dup
4: new           #16
7: dup
8: ldc2_w        #52
11: ldc2_w        #191
14: ldc2_w        #62
17: invokespecial #19
20: ldc2_w        #193
23: invokespecial #23
26: astore_1
27: ldc2_w        #195
30: dstore_2
31: new           #10
34: dup
35: dload_2
36: aload_1
37: invokevirtual #197
40: dmul
41: dload_2
42: aload_1
43: invokevirtual #198
46: dmul
47: dload_2
48: aload_1
49: invokevirtual #199
52: dmul
53: dload_2
54: aload_1
55: invokevirtual #200
58: dmul
59: iconst_1
60: invokespecial #13
63: astore        4
65: ldc2_w        #201
68: dstore        5
70: dload         5
72: ldc2_w        #203
75: dcmpg
76: ifge          172
79: ldc2_w        #201
82: dstore        7
84: dload         7
86: ldc2_w        #203
89: dcmpg
90: ifge          161
93: ldc2_w        #201
96: dstore        9
98: dload         9
100: ldc2_w        #203
103: dcmpg
104: ifge          150
107: new           #16
110: dup
111: dload         5
113: dload         7
115: dload         9
117: invokespecial #19
120: astore        11
122: aload_0
123: aload         4
125: aload         11
127: invokevirtual #4
130: aload_1
131: aload         11
133: invokevirtual #4
136: invokespecial #5
139: dload         9
141: ldc2_w        #205
144: dadd
145: dstore        9
147: goto          98
150: dload         7
152: ldc2_w        #205
155: dadd
156: dstore        7
158: goto          84
161: dload         5
163: ldc2_w        #205
166: dadd
167: dstore        5
169: goto          70
172: new           #10
175: dup
176: ldc2_w        #110
179: ldc2_w        #112
182: ldc2_w        #39
185: ldc2_w        #43
188: iconst_0
189: invokespecial #13
192: astore_1
193: aload_0
194: aload_1
195: aload_1
196: invokevirtual #197
199: dneg
200: aload_1
201: invokevirtual #198
204: dneg
205: aload_1
206: invokevirtual #199
209: dneg
210: aload_1
211: invokevirtual #200
214: dneg
215: invokespecial #47
218: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testCompose
Start line: 404
End line: 419
Method source code: 
  public void testCompose() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }
Method byte code: 
0: new           #10
3: dup
4: new           #16
7: dup
8: ldc2_w        #52
11: ldc2_w        #191
14: ldc2_w        #62
17: invokespecial #19
20: ldc2_w        #193
23: invokespecial #23
26: astore_1
27: new           #10
30: dup
31: new           #16
34: dup
35: ldc2_w        #11
38: ldc2_w        #24
41: ldc2_w        #52
44: invokespecial #19
47: ldc2_w        #175
50: invokespecial #23
53: astore_2
54: aload_2
55: aload_1
56: invokevirtual #46
59: astore_3
60: ldc2_w        #201
63: dstore        4
65: dload         4
67: ldc2_w        #203
70: dcmpg
71: ifge          170
74: ldc2_w        #201
77: dstore        6
79: dload         6
81: ldc2_w        #203
84: dcmpg
85: ifge          159
88: ldc2_w        #201
91: dstore        8
93: dload         8
95: ldc2_w        #203
98: dcmpg
99: ifge          148
102: new           #16
105: dup
106: dload         4
108: dload         6
110: dload         8
112: invokespecial #19
115: astore        10
117: aload_0
118: aload_2
119: aload_1
120: aload         10
122: invokevirtual #4
125: invokevirtual #4
128: aload_3
129: aload         10
131: invokevirtual #4
134: invokespecial #5
137: dload         8
139: ldc2_w        #205
142: dadd
143: dstore        8
145: goto          93
148: dload         6
150: ldc2_w        #205
153: dadd
154: dstore        6
156: goto          79
159: dload         4
161: ldc2_w        #205
164: dadd
165: dstore        4
167: goto          65
170: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testComposeInverse
Start line: 422
End line: 437
Method source code: 
  public void testComposeInverse() {

    Rotation r1 = new Rotation(new Vector3D(2, -3, 5), 1.7);
    Rotation r2 = new Rotation(new Vector3D(-1, 3, 2), 0.3);
    Rotation r3 = r2.applyInverseTo(r1);

    for (double x = -0.9; x < 0.9; x += 0.2) {
      for (double y = -0.9; y < 0.9; y += 0.2) {
        for (double z = -0.9; z < 0.9; z += 0.2) {
          Vector3D u = new Vector3D(x, y, z);
          checkVector(r2.applyInverseTo(r1.applyTo(u)), r3.applyTo(u));
        }
      }
    }

  }
Method byte code: 
0: new           #10
3: dup
4: new           #16
7: dup
8: ldc2_w        #52
11: ldc2_w        #191
14: ldc2_w        #62
17: invokespecial #19
20: ldc2_w        #193
23: invokespecial #23
26: astore_1
27: new           #10
30: dup
31: new           #16
34: dup
35: ldc2_w        #11
38: ldc2_w        #24
41: ldc2_w        #52
44: invokespecial #19
47: ldc2_w        #175
50: invokespecial #23
53: astore_2
54: aload_2
55: aload_1
56: invokevirtual #207
59: astore_3
60: ldc2_w        #201
63: dstore        4
65: dload         4
67: ldc2_w        #203
70: dcmpg
71: ifge          170
74: ldc2_w        #201
77: dstore        6
79: dload         6
81: ldc2_w        #203
84: dcmpg
85: ifge          159
88: ldc2_w        #201
91: dstore        8
93: dload         8
95: ldc2_w        #203
98: dcmpg
99: ifge          148
102: new           #16
105: dup
106: dload         4
108: dload         6
110: dload         8
112: invokespecial #19
115: astore        10
117: aload_0
118: aload_2
119: aload_1
120: aload         10
122: invokevirtual #4
125: invokevirtual #208
128: aload_3
129: aload         10
131: invokevirtual #4
134: invokespecial #5
137: dload         8
139: ldc2_w        #205
142: dadd
143: dstore        8
145: goto          93
148: dload         6
150: ldc2_w        #205
153: dadd
154: dstore        6
156: goto          79
159: dload         4
161: ldc2_w        #205
164: dadd
165: dstore        4
167: goto          65
170: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testApplyInverseTo
Start line: 440
End line: 476
Method source code: 
  public void testApplyInverseTo() {

    Rotation r = new Rotation(new Vector3D(2, -3, 5), 1.7);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          r.applyInverseTo(r.applyTo(u));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = Rotation.IDENTITY;
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

    r = new Rotation(Vector3D.PLUS_K, FastMath.PI);
    for (double lambda = 0; lambda < 6.2; lambda += 0.2) {
      for (double phi = -1.55; phi < 1.55; phi += 0.2) {
          Vector3D u = new Vector3D(FastMath.cos(lambda) * FastMath.cos(phi),
                                    FastMath.sin(lambda) * FastMath.cos(phi),
                                    FastMath.sin(phi));
          checkVector(u, r.applyInverseTo(r.applyTo(u)));
          checkVector(u, r.applyTo(r.applyInverseTo(u)));
      }
    }

  }
Method byte code: 
0: new           #10
3: dup
4: new           #16
7: dup
8: ldc2_w        #52
11: ldc2_w        #191
14: ldc2_w        #62
17: invokespecial #19
20: ldc2_w        #193
23: invokespecial #23
26: astore_1
27: dconst_0
28: dstore_2
29: dload_2
30: ldc2_w        #167
33: dcmpg
34: ifge          148
37: ldc2_w        #169
40: dstore        4
42: dload         4
44: ldc2_w        #171
47: dcmpg
48: ifge          139
51: new           #16
54: dup
55: dload_2
56: invokestatic  #209
59: dload         4
61: invokestatic  #209
64: dmul
65: dload_2
66: invokestatic  #210
69: dload         4
71: invokestatic  #209
74: dmul
75: dload         4
77: invokestatic  #210
80: invokespecial #19
83: astore        6
85: aload_1
86: aload_1
87: aload         6
89: invokevirtual #4
92: invokevirtual #208
95: pop
96: aload_0
97: aload         6
99: aload_1
100: aload_1
101: aload         6
103: invokevirtual #4
106: invokevirtual #208
109: invokespecial #5
112: aload_0
113: aload         6
115: aload_1
116: aload_1
117: aload         6
119: invokevirtual #208
122: invokevirtual #4
125: invokespecial #5
128: dload         4
130: ldc2_w        #205
133: dadd
134: dstore        4
136: goto          42
139: dload_2
140: ldc2_w        #205
143: dadd
144: dstore_2
145: goto          29
148: getstatic     #2
151: astore_1
152: dconst_0
153: dstore_2
154: dload_2
155: ldc2_w        #167
158: dcmpg
159: ifge          262
162: ldc2_w        #169
165: dstore        4
167: dload         4
169: ldc2_w        #171
172: dcmpg
173: ifge          253
176: new           #16
179: dup
180: dload_2
181: invokestatic  #209
184: dload         4
186: invokestatic  #209
189: dmul
190: dload_2
191: invokestatic  #210
194: dload         4
196: invokestatic  #209
199: dmul
200: dload         4
202: invokestatic  #210
205: invokespecial #19
208: astore        6
210: aload_0
211: aload         6
213: aload_1
214: aload_1
215: aload         6
217: invokevirtual #4
220: invokevirtual #208
223: invokespecial #5
226: aload_0
227: aload         6
229: aload_1
230: aload_1
231: aload         6
233: invokevirtual #208
236: invokevirtual #4
239: invokespecial #5
242: dload         4
244: ldc2_w        #205
247: dadd
248: dstore        4
250: goto          167
253: dload_2
254: ldc2_w        #205
257: dadd
258: dstore_2
259: goto          154
262: new           #10
265: dup
266: getstatic     #7
269: ldc2_w        #35
272: invokespecial #23
275: astore_1
276: dconst_0
277: dstore_2
278: dload_2
279: ldc2_w        #167
282: dcmpg
283: ifge          386
286: ldc2_w        #169
289: dstore        4
291: dload         4
293: ldc2_w        #171
296: dcmpg
297: ifge          377
300: new           #16
303: dup
304: dload_2
305: invokestatic  #209
308: dload         4
310: invokestatic  #209
313: dmul
314: dload_2
315: invokestatic  #210
318: dload         4
320: invokestatic  #209
323: dmul
324: dload         4
326: invokestatic  #210
329: invokespecial #19
332: astore        6
334: aload_0
335: aload         6
337: aload_1
338: aload_1
339: aload         6
341: invokevirtual #4
344: invokevirtual #208
347: invokespecial #5
350: aload_0
351: aload         6
353: aload_1
354: aload_1
355: aload         6
357: invokevirtual #208
360: invokevirtual #4
363: invokespecial #5
366: dload         4
368: ldc2_w        #205
371: dadd
372: dstore        4
374: goto          291
377: dload_2
378: ldc2_w        #205
381: dadd
382: dstore_2
383: goto          278
386: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/RotationTest.class
Class name: RotationTest
Method name: testIssue639
Start line: 479
End line: 491
Method source code: 
  public void testIssue639(){
      Vector3D u1 = new Vector3D(-1321008684645961.0 /  268435456.0,
                                 -5774608829631843.0 /  268435456.0,
                                 -3822921525525679.0 / 4294967296.0);
      Vector3D u2 =new Vector3D( -5712344449280879.0 /    2097152.0,
                                 -2275058564560979.0 /    1048576.0,
                                  4423475992255071.0 /      65536.0);
      Rotation rot = new Rotation(u1, u2, Vector3D.PLUS_I,Vector3D.PLUS_K);
      Assert.assertEquals( 0.6228370359608200639829222, rot.getQ0(), 1.0e-15);
      Assert.assertEquals( 0.0257707621456498790029987, rot.getQ1(), 1.0e-15);
      Assert.assertEquals(-0.0000000002503012255839931, rot.getQ2(), 1.0e-15);
      Assert.assertEquals(-0.7819270390861109450724902, rot.getQ3(), 1.0e-15);
  }
Method byte code: 
0: new           #16
3: dup
4: ldc2_w        #211
7: ldc2_w        #213
10: ldc2_w        #215
13: invokespecial #19
16: astore_1
17: new           #16
20: dup
21: ldc2_w        #217
24: ldc2_w        #219
27: ldc2_w        #221
30: invokespecial #19
33: astore_2
34: new           #10
37: dup
38: aload_1
39: aload_2
40: getstatic     #3
43: getstatic     #7
46: invokespecial #66
49: astore_3
50: ldc2_w        #223
53: aload_3
54: invokevirtual #197
57: ldc2_w        #106
60: invokestatic  #50
63: ldc2_w        #225
66: aload_3
67: invokevirtual #198
70: ldc2_w        #106
73: invokestatic  #50
76: ldc2_w        #227
79: aload_3
80: invokevirtual #199
83: ldc2_w        #106
86: invokestatic  #50
89: ldc2_w        #229
92: aload_3
93: invokevirtual #200
96: ldc2_w        #106
99: invokestatic  #50
102: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test00
Start line: 19
End line: 23
Method source code: 
  public void test00()  throws Throwable  {
      double[][] doubleArray0 = new double[3][3];
      Rotation rotation0 = new Rotation(doubleArray0, 3913.958);
      Rotation.distance(rotation0, rotation0);
  }
Method byte code: 
0: iconst_3
1: iconst_3
2: multianewarray #2,  2
6: astore_1
7: new           #3
10: dup
11: aload_1
12: ldc2_w        #4
15: invokespecial #6
18: astore_2
19: aload_2
20: aload_2
21: invokestatic  #7
24: pop2
25: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test01
Start line: 26
End line: 33
Method source code: 
  public void test01()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      Rotation rotation1 = rotation0.revert();
      assertEquals((-1.0), rotation1.getQ0(), 0.01);
      assertEquals(0.0, rotation1.getQ2(), 0.01);
      assertEquals(0.0, rotation1.getQ1(), 0.01);
      assertEquals(0.0, rotation1.getQ3(), 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: aload_1
5: invokevirtual #9
8: astore_2
9: ldc2_w        #10
12: aload_2
13: invokevirtual #12
16: ldc2_w        #13
19: invokestatic  #15
22: dconst_0
23: aload_2
24: invokevirtual #16
27: ldc2_w        #13
30: invokestatic  #15
33: dconst_0
34: aload_2
35: invokevirtual #17
38: ldc2_w        #13
41: invokestatic  #15
44: dconst_0
45: aload_2
46: invokevirtual #18
49: ldc2_w        #13
52: invokestatic  #15
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test02
Start line: 36
End line: 41
Method source code: 
  public void test02()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      double double0 = rotation0.getQ3();
      assertEquals(Double.NaN, double0, 0.01);
  }
Method byte code: 
0: getstatic     #19
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: aload_2
17: invokevirtual #18
20: dstore_3
21: ldc2_w        #22
24: dload_3
25: ldc2_w        #13
28: invokestatic  #15
31: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test03
Start line: 44
End line: 51
Method source code: 
  public void test03()  throws Throwable  {
      Rotation rotation0 = new Rotation(311.0068281309633, 311.0068281309633, 311.0068281309633, 311.0068281309633, false);
      double double0 = rotation0.getQ1();
      assertEquals(311.0068281309633, rotation0.getQ0(), 0.01);
      assertEquals(311.0068281309633, rotation0.getQ2(), 0.01);
      assertEquals(311.0068281309633, double0, 0.01);
      assertEquals(311.0068281309633, rotation0.getQ3(), 0.01);
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #24
7: ldc2_w        #24
10: ldc2_w        #24
13: ldc2_w        #24
16: iconst_0
17: invokespecial #26
20: astore_1
21: aload_1
22: invokevirtual #17
25: dstore_2
26: ldc2_w        #24
29: aload_1
30: invokevirtual #12
33: ldc2_w        #13
36: invokestatic  #15
39: ldc2_w        #24
42: aload_1
43: invokevirtual #16
46: ldc2_w        #13
49: invokestatic  #15
52: ldc2_w        #24
55: dload_2
56: ldc2_w        #13
59: invokestatic  #15
62: ldc2_w        #24
65: aload_1
66: invokevirtual #18
69: ldc2_w        #13
72: invokestatic  #15
75: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test04
Start line: 54
End line: 58
Method source code: 
  public void test04()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      double double0 = rotation0.getQ2();
      assertEquals(0.0, double0, 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: aload_1
5: invokevirtual #16
8: dstore_2
9: dconst_0
10: dload_2
11: ldc2_w        #13
14: invokestatic  #15
17: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test05
Start line: 61
End line: 66
Method source code: 
  public void test05()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      double double0 = rotation0.getQ0();
      assertEquals(Double.NaN, double0, 0.01);
  }
Method byte code: 
0: getstatic     #19
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: aload_2
17: invokevirtual #12
20: dstore_3
21: ldc2_w        #22
24: dload_3
25: ldc2_w        #13
28: invokestatic  #15
31: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test06
Start line: 69
End line: 86
Method source code: 
  public void test06()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.XYZ;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      double[][] doubleArray1 = new double[3][5];
      doubleArray1[0] = doubleArray0;
      Rotation rotation1 = null;
      try {
        rotation1 = new Rotation(doubleArray1, 0.0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // a 3x3 matrix cannot be a rotation matrix
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #27
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: astore_3
14: iconst_3
15: iconst_5
16: multianewarray #2,  2
20: astore        4
22: aload         4
24: iconst_0
25: aload_3
26: aastore
27: aconst_null
28: astore        5
30: new           #3
33: dup
34: aload         4
36: dconst_0
37: invokespecial #6
40: astore        5
42: ldc           #29
44: invokestatic  #30
47: goto          59
50: astore        6
52: ldc           #32
54: aload         6
56: invokestatic  #33
59: return
Exception table:
from    to  target type
30    47    50   Class java/lang/Throwable
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test07
Start line: 89
End line: 100
Method source code: 
  public void test07()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZX;
      Rotation rotation0 = new Rotation(rotationOrder0, (-0.5), (-0.5), (-8.0E298));
      double[][] doubleArray0 = rotation0.getMatrix();
      assertEquals(3, doubleArray0.length);
      
      Rotation rotation1 = new Rotation(doubleArray0, 989.83100217457);
      assertEquals((-0.23836299731486169), rotation1.getQ2(), 0.01);
      assertEquals(0.23836299731486169, rotation0.getQ2(), 0.01);
      assertEquals((-0.9436564753613543), rotation0.getQ1(), 0.01);
      assertEquals(0.06627066142637239, rotation1.getQ3(), 0.01);
  }
Method byte code: 
0: getstatic     #34
3: astore_1
4: new           #3
7: dup
8: aload_1
9: ldc2_w        #35
12: ldc2_w        #35
15: ldc2_w        #37
18: invokespecial #39
21: astore_2
22: aload_2
23: invokevirtual #40
26: astore_3
27: ldc2_w        #41
30: aload_3
31: arraylength
32: i2l
33: invokestatic  #43
36: new           #3
39: dup
40: aload_3
41: ldc2_w        #44
44: invokespecial #6
47: astore        4
49: ldc2_w        #46
52: aload         4
54: invokevirtual #16
57: ldc2_w        #13
60: invokestatic  #15
63: ldc2_w        #48
66: aload_2
67: invokevirtual #16
70: ldc2_w        #13
73: invokestatic  #15
76: ldc2_w        #50
79: aload_2
80: invokevirtual #17
83: ldc2_w        #13
86: invokestatic  #15
89: ldc2_w        #52
92: aload         4
94: invokevirtual #18
97: ldc2_w        #13
100: invokestatic  #15
103: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test08
Start line: 103
End line: 116
Method source code: 
  public void test08()  throws Throwable  {
      Rotation rotation0 = new Rotation((-0.9732354749425349), (-0.9732354749425349), (-0.9732354749425349), 1.6320064742381655E7, true);
      RotationOrder rotationOrder0 = RotationOrder.XZX;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #54
7: ldc2_w        #54
10: ldc2_w        #54
13: ldc2_w        #56
16: iconst_1
17: invokespecial #26
20: astore_1
21: getstatic     #34
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test09
Start line: 119
End line: 132
Method source code: 
  public void test09()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.ZERO;
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, 1856.0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // zero norm for rotation axis
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #59
3: astore_1
4: aconst_null
5: astore_2
6: new           #3
9: dup
10: aload_1
11: ldc2_w        #60
14: invokespecial #62
17: astore_2
18: ldc           #63
20: invokestatic  #30
23: goto          33
26: astore_3
27: ldc           #65
29: aload_3
30: invokestatic  #33
33: return
Exception table:
from    to  target type
6    23    26   Class java/lang/ArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test10
Start line: 135
End line: 148
Method source code: 
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[0][6];
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(doubleArray0, 1.1102230246251565E-16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: iconst_0
1: bipush        6
3: multianewarray #2,  2
7: astore_1
8: aconst_null
9: astore_2
10: new           #3
13: dup
14: aload_1
15: ldc2_w        #66
18: invokespecial #6
21: astore_2
22: ldc           #68
24: invokestatic  #30
27: goto          37
30: astore_3
31: ldc           #32
33: aload_3
34: invokestatic  #33
37: return
Exception table:
from    to  target type
10    27    30   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test11
Start line: 151
End line: 164
Method source code: 
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[3][5];
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(doubleArray0, 0.9999999999);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // a 3x5 matrix cannot be a rotation matrix
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: iconst_3
1: iconst_5
2: multianewarray #2,  2
6: astore_1
7: aconst_null
8: astore_2
9: new           #3
12: dup
13: aload_1
14: ldc2_w        #70
17: invokespecial #6
20: astore_2
21: ldc           #29
23: invokestatic  #30
26: goto          36
29: astore_3
30: ldc           #32
32: aload_3
33: invokestatic  #33
36: return
Exception table:
from    to  target type
9    26    29   Class java/lang/Throwable
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test12
Start line: 167
End line: 185
Method source code: 
  public void test12()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.XYZ;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      double[][] doubleArray1 = new double[3][5];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      Rotation rotation1 = null;
      try {
        rotation1 = new Rotation(doubleArray1, 0.0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // a 3x3 matrix cannot be a rotation matrix
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #27
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: astore_3
14: iconst_3
15: iconst_5
16: multianewarray #2,  2
20: astore        4
22: aload         4
24: iconst_0
25: aload_3
26: aastore
27: aload         4
29: iconst_1
30: aload_3
31: aastore
32: aconst_null
33: astore        5
35: new           #3
38: dup
39: aload         4
41: dconst_0
42: invokespecial #6
45: astore        5
47: ldc           #29
49: invokestatic  #30
52: goto          64
55: astore        6
57: ldc           #32
59: aload         6
61: invokestatic  #33
64: return
Exception table:
from    to  target type
35    52    55   Class java/lang/Throwable
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test13
Start line: 188
End line: 197
Method source code: 
  public void test13()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XYX;
      Rotation rotation0 = new Rotation(rotationOrder0, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      double[][] doubleArray0 = rotation0.getMatrix();
      Rotation rotation1 = new Rotation(doubleArray0, 1.7976931348623157E308);
      assertEquals((-0.0024809544878424674), rotation0.getQ0(), 0.01);
      assertEquals(1.2310535552449626E-5, rotation1.getQ1(), 0.01);
      assertEquals(0.0, rotation1.getQ3(), 0.01);
      assertEquals((-0.9999969223519042), rotation0.getQ2(), 0.01);
  }
Method byte code: 
0: getstatic     #72
3: astore_1
4: new           #3
7: dup
8: aload_1
9: ldc2_w        #73
12: ldc2_w        #73
15: ldc2_w        #73
18: invokespecial #39
21: astore_2
22: aload_2
23: invokevirtual #40
26: astore_3
27: new           #3
30: dup
31: aload_3
32: ldc2_w        #73
35: invokespecial #6
38: astore        4
40: ldc2_w        #75
43: aload_2
44: invokevirtual #12
47: ldc2_w        #13
50: invokestatic  #15
53: ldc2_w        #77
56: aload         4
58: invokevirtual #17
61: ldc2_w        #13
64: invokestatic  #15
67: dconst_0
68: aload         4
70: invokevirtual #18
73: ldc2_w        #13
76: invokestatic  #15
79: ldc2_w        #79
82: aload_2
83: invokevirtual #16
86: ldc2_w        #13
89: invokestatic  #15
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test14
Start line: 200
End line: 209
Method source code: 
  public void test14()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZX;
      Rotation rotation0 = new Rotation(rotationOrder0, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      double[][] doubleArray0 = rotation0.getMatrix();
      Rotation rotation1 = new Rotation(doubleArray0, 1.7976931348623157E308);
      assertEquals((-0.9999969223519042), rotation0.getQ3(), 0.01);
      assertEquals(0.0, rotation1.getQ2(), 0.01);
      assertEquals(0.002480954487842468, rotation1.getQ0(), 0.01);
      assertEquals((-1.2310535552449627E-5), rotation0.getQ1(), 0.01);
  }
Method byte code: 
0: getstatic     #34
3: astore_1
4: new           #3
7: dup
8: aload_1
9: ldc2_w        #73
12: ldc2_w        #73
15: ldc2_w        #73
18: invokespecial #39
21: astore_2
22: aload_2
23: invokevirtual #40
26: astore_3
27: new           #3
30: dup
31: aload_3
32: ldc2_w        #73
35: invokespecial #6
38: astore        4
40: ldc2_w        #79
43: aload_2
44: invokevirtual #18
47: ldc2_w        #13
50: invokestatic  #15
53: dconst_0
54: aload         4
56: invokevirtual #16
59: ldc2_w        #13
62: invokestatic  #15
65: ldc2_w        #81
68: aload         4
70: invokevirtual #12
73: ldc2_w        #13
76: invokestatic  #15
79: ldc2_w        #83
82: aload_2
83: invokevirtual #17
86: ldc2_w        #13
89: invokestatic  #15
92: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test15
Start line: 212
End line: 225
Method source code: 
  public void test15()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.ZERO;
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero norm for rotation defining vector
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #59
3: astore_1
4: aconst_null
5: astore_2
6: new           #3
9: dup
10: aload_1
11: aload_1
12: aload_1
13: aload_1
14: invokespecial #20
17: astore_2
18: ldc           #85
20: invokestatic  #30
23: goto          33
26: astore_3
27: ldc           #65
29: aload_3
30: invokestatic  #33
33: return
Exception table:
from    to  target type
6    23    26   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test16
Start line: 228
End line: 242
Method source code: 
  public void test16()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Vector3D vector3D1 = Vector3D.ZERO;
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, vector3D1, vector3D0, vector3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero norm for rotation defining vector
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #87
3: astore_1
4: getstatic     #59
7: astore_2
8: aconst_null
9: astore_3
10: new           #3
13: dup
14: aload_1
15: aload_2
16: aload_1
17: aload_1
18: invokespecial #20
21: astore_3
22: ldc           #85
24: invokestatic  #30
27: goto          39
30: astore        4
32: ldc           #65
34: aload         4
36: invokestatic  #33
39: return
Exception table:
from    to  target type
10    27    30   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test17
Start line: 245
End line: 259
Method source code: 
  public void test17()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Vector3D vector3D1 = Vector3D.ZERO;
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, vector3D0, vector3D1, vector3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero norm for rotation defining vector
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #19
3: astore_1
4: getstatic     #59
7: astore_2
8: aconst_null
9: astore_3
10: new           #3
13: dup
14: aload_1
15: aload_1
16: aload_2
17: aload_1
18: invokespecial #20
21: astore_3
22: ldc           #85
24: invokestatic  #30
27: goto          39
30: astore        4
32: ldc           #65
34: aload         4
36: invokestatic  #33
39: return
Exception table:
from    to  target type
10    27    30   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test18
Start line: 262
End line: 276
Method source code: 
  public void test18()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_K;
      Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero norm for rotation defining vector
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #88
3: astore_1
4: aload_1
5: aload_1
6: invokestatic  #89
9: astore_2
10: aconst_null
11: astore_3
12: new           #3
15: dup
16: aload_1
17: aload_1
18: aload_1
19: aload_2
20: invokespecial #20
23: astore_3
24: ldc           #85
26: invokestatic  #30
29: goto          41
32: astore        4
34: ldc           #65
36: aload         4
38: invokestatic  #33
41: return
Exception table:
from    to  target type
12    29    32   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test19
Start line: 279
End line: 284
Method source code: 
  public void test19()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_K;
      Vector3D vector3D1 = Vector3D.PLUS_I;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D1);
      assertEquals(0.0, rotation0.getQ1(), 0.01);
  }
Method byte code: 
0: getstatic     #88
3: astore_1
4: getstatic     #90
7: astore_2
8: new           #3
11: dup
12: aload_1
13: aload_1
14: aload_1
15: aload_2
16: invokespecial #20
19: astore_3
20: dconst_0
21: aload_3
22: invokevirtual #17
25: ldc2_w        #13
28: invokestatic  #15
31: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test20
Start line: 287
End line: 292
Method source code: 
  public void test20()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Vector3D vector3D1 = Vector3D.MINUS_J;
      Rotation rotation0 = new Rotation(vector3D0, vector3D1, vector3D1, vector3D0);
      assertEquals(0.7071067811865475, rotation0.getQ1(), 0.01);
  }
Method byte code: 
0: getstatic     #91
3: astore_1
4: getstatic     #92
7: astore_2
8: new           #3
11: dup
12: aload_1
13: aload_2
14: aload_2
15: aload_1
16: invokespecial #20
19: astore_3
20: ldc2_w        #93
23: aload_3
24: invokevirtual #17
27: ldc2_w        #13
30: invokestatic  #15
33: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test21
Start line: 295
End line: 301
Method source code: 
  public void test21()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_K;
      Vector3D vector3D1 = new Vector3D((-0.1), (-0.1));
      Vector3D vector3D2 = Vector3D.PLUS_I;
      Rotation rotation0 = new Rotation(vector3D1, vector3D0, vector3D1, vector3D2);
      assertEquals((-0.0917255959334822), rotation0.getQ2(), 0.01);
  }
Method byte code: 
0: getstatic     #88
3: astore_1
4: new           #95
7: dup
8: ldc2_w        #96
11: ldc2_w        #96
14: invokespecial #98
17: astore_2
18: getstatic     #90
21: astore_3
22: new           #3
25: dup
26: aload_2
27: aload_1
28: aload_2
29: aload_3
30: invokespecial #20
33: astore        4
35: ldc2_w        #99
38: aload         4
40: invokevirtual #16
43: ldc2_w        #13
46: invokestatic  #15
49: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test22
Start line: 304
End line: 317
Method source code: 
  public void test22()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.ZERO;
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(vector3D0, vector3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // zero norm for rotation defining vector
         //
         verifyException("org.apache.commons.math.MathRuntimeException", e);
      }
  }
Method byte code: 
0: getstatic     #59
3: astore_1
4: aconst_null
5: astore_2
6: new           #3
9: dup
10: aload_1
11: aload_1
12: invokespecial #101
15: astore_2
16: ldc           #85
18: invokestatic  #30
21: goto          31
24: astore_3
25: ldc           #65
27: aload_3
28: invokestatic  #33
31: return
Exception table:
from    to  target type
6    21    24   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test23
Start line: 320
End line: 335
Method source code: 
  public void test23()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.PLUS_I;
      Vector3D vector3D1 = new Vector3D((-3165.8539959), vector3D0, (-3165.8539959), vector3D0, (-2595.23686251389), vector3D0);
      Rotation rotation0 = new Rotation(vector3D1, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.XYX;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #90
3: astore_1
4: new           #95
7: dup
8: ldc2_w        #102
11: aload_1
12: ldc2_w        #102
15: aload_1
16: ldc2_w        #104
19: aload_1
20: invokespecial #106
23: astore_2
24: new           #3
27: dup
28: aload_2
29: aload_1
30: invokespecial #101
33: astore_3
34: getstatic     #72
37: astore        4
39: aload_3
40: aload         4
42: invokevirtual #28
45: pop
46: ldc           #29
48: invokestatic  #30
51: goto          63
54: astore        5
56: ldc           #32
58: aload         5
60: invokestatic  #33
63: return
Exception table:
from    to  target type
39    51    54   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test24
Start line: 338
End line: 345
Method source code: 
  public void test24()  throws Throwable  {
      Rotation rotation0 = new Rotation((-0.1), (-0.1), (-0.1), (-0.1), false);
      Vector3D vector3D0 = rotation0.getAxis();
      assertEquals((-0.5773502691896256), vector3D0.getY(), 0.01);
      assertEquals((-0.5773502691896256), vector3D0.getX(), 0.01);
      assertEquals(1.7320508075688767, vector3D0.getNorm1(), 0.01);
      assertEquals((-0.5773502691896256), vector3D0.getZ(), 0.01);
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #96
7: ldc2_w        #96
10: ldc2_w        #96
13: ldc2_w        #96
16: iconst_0
17: invokespecial #26
20: astore_1
21: aload_1
22: invokevirtual #107
25: astore_2
26: ldc2_w        #108
29: aload_2
30: invokevirtual #110
33: ldc2_w        #13
36: invokestatic  #15
39: ldc2_w        #108
42: aload_2
43: invokevirtual #111
46: ldc2_w        #13
49: invokestatic  #15
52: ldc2_w        #112
55: aload_2
56: invokevirtual #114
59: ldc2_w        #13
62: invokestatic  #15
65: ldc2_w        #108
68: aload_2
69: invokevirtual #115
72: ldc2_w        #13
75: invokestatic  #15
78: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test25
Start line: 348
End line: 353
Method source code: 
  public void test25()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      Vector3D vector3D0 = rotation0.getAxis();
      assertEquals(1.0, vector3D0.getX(), 0.01);
      assertEquals(1.0, vector3D0.getNormSq(), 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: aload_1
5: invokevirtual #107
8: astore_2
9: dconst_1
10: aload_2
11: invokevirtual #111
14: ldc2_w        #13
17: invokestatic  #15
20: dconst_1
21: aload_2
22: invokevirtual #116
25: ldc2_w        #13
28: invokestatic  #15
31: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test26
Start line: 356
End line: 361
Method source code: 
  public void test26()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0);
      Vector3D vector3D1 = rotation0.getAxis();
      assertEquals(Double.NaN, vector3D1.getNorm1(), 0.01);
  }
Method byte code: 
0: getstatic     #19
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: invokespecial #101
13: astore_2
14: aload_2
15: invokevirtual #107
18: astore_3
19: ldc2_w        #22
22: aload_3
23: invokevirtual #114
26: ldc2_w        #13
29: invokestatic  #15
32: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test27
Start line: 364
End line: 372
Method source code: 
  public void test27()  throws Throwable  {
      double[][] doubleArray0 = new double[3][3];
      Rotation rotation0 = new Rotation(doubleArray0, 3913.958);
      Rotation rotation1 = rotation0.applyInverseTo(rotation0);
      double double0 = Rotation.distance(rotation1, rotation1);
      assertEquals(3.0165111299968106, double0, 0.01);
      assertEquals((-0.25), rotation1.getQ0(), 0.01);
      assertEquals(0.0, rotation1.getQ1(), 0.01);
  }
Method byte code: 
0: iconst_3
1: iconst_3
2: multianewarray #2,  2
6: astore_1
7: new           #3
10: dup
11: aload_1
12: ldc2_w        #4
15: invokespecial #6
18: astore_2
19: aload_2
20: aload_2
21: invokevirtual #117
24: astore_3
25: aload_3
26: aload_3
27: invokestatic  #7
30: dstore        4
32: ldc2_w        #118
35: dload         4
37: ldc2_w        #13
40: invokestatic  #15
43: ldc2_w        #120
46: aload_3
47: invokevirtual #12
50: ldc2_w        #13
53: invokestatic  #15
56: dconst_0
57: aload_3
58: invokevirtual #17
61: ldc2_w        #13
64: invokestatic  #15
67: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test28
Start line: 375
End line: 379
Method source code: 
  public void test28()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      double double0 = rotation0.getAngle();
      assertEquals(0.0, double0, 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: aload_1
5: invokevirtual #122
8: dstore_2
9: dconst_0
10: dload_2
11: ldc2_w        #13
14: invokestatic  #15
17: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test29
Start line: 382
End line: 387
Method source code: 
  public void test29()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0);
      double double0 = Rotation.distance(rotation0, rotation0);
      assertEquals(Double.NaN, double0, 0.01);
  }
Method byte code: 
0: getstatic     #123
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: invokespecial #101
13: astore_2
14: aload_2
15: aload_2
16: invokestatic  #7
19: dstore_3
20: ldc2_w        #22
23: dload_3
24: ldc2_w        #13
27: invokestatic  #15
30: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test30
Start line: 390
End line: 396
Method source code: 
  public void test30()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.ZXZ;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertEquals(3, doubleArray0.length);
  }
Method byte code: 
0: getstatic     #91
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: getstatic     #124
19: astore_3
20: aload_2
21: aload_3
22: invokevirtual #28
25: astore        4
27: ldc2_w        #41
30: aload         4
32: arraylength
33: i2l
34: invokestatic  #43
37: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test31
Start line: 399
End line: 412
Method source code: 
  public void test31()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XYZ;
      Rotation rotation0 = new Rotation((-0.1), (-0.1), (-0.1), 402442.07376740675, false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #27
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #96
11: ldc2_w        #96
14: ldc2_w        #96
17: ldc2_w        #125
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test32
Start line: 415
End line: 428
Method source code: 
  public void test32()  throws Throwable  {
      Rotation rotation0 = new Rotation(1.5, 2756.065375, 1.5, 1.5, false);
      RotationOrder rotationOrder0 = RotationOrder.XYZ;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #127
7: ldc2_w        #129
10: ldc2_w        #127
13: ldc2_w        #127
16: iconst_0
17: invokespecial #26
20: astore_1
21: getstatic     #27
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test33
Start line: 431
End line: 444
Method source code: 
  public void test33()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZY;
      Rotation rotation0 = new Rotation((-0.1), 0.0416870174, (-686.64099664035), (-0.1), false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #131
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #96
11: ldc2_w        #132
14: ldc2_w        #134
17: ldc2_w        #96
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test34
Start line: 447
End line: 460
Method source code: 
  public void test34()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZY;
      Rotation rotation0 = new Rotation((-18.71281009672201), 0.0416870174, 0.0416870174, (-18.71281009672201), false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #131
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #136
11: ldc2_w        #132
14: ldc2_w        #132
17: ldc2_w        #136
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test35
Start line: 463
End line: 468
Method source code: 
  public void test35()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZY;
      Rotation rotation0 = Rotation.IDENTITY;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {0.0, -0.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #131
3: astore_1
4: getstatic     #8
7: astore_2
8: aload_2
9: aload_1
10: invokevirtual #28
13: astore_3
14: iconst_3
15: newarray       double
17: dup
18: iconst_0
19: dconst_0
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #138
26: dastore
27: dup
28: iconst_2
29: dconst_0
30: dastore
31: aload_3
32: ldc2_w        #13
35: invokestatic  #140
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test36
Start line: 471
End line: 484
Method source code: 
  public void test36()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.YXZ;
      Rotation rotation0 = new Rotation((-18.71281009672201), (-18.71281009672201), 0.0416870174, (-18.71281009672201), false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #141
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #136
11: ldc2_w        #136
14: ldc2_w        #132
17: ldc2_w        #136
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test37
Start line: 487
End line: 500
Method source code: 
  public void test37()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.YXZ;
      Rotation rotation0 = new Rotation((-18.71281009672201), 0.0416870174, 0.0416870174, (-18.71281009672201), false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #141
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #136
11: ldc2_w        #132
14: ldc2_w        #132
17: ldc2_w        #136
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test38
Start line: 503
End line: 508
Method source code: 
  public void test38()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.YXZ;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {0.0, -0.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #141
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: astore_3
14: iconst_3
15: newarray       double
17: dup
18: iconst_0
19: dconst_0
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #138
26: dastore
27: dup
28: iconst_2
29: dconst_0
30: dastore
31: aload_3
32: ldc2_w        #13
35: invokestatic  #140
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test39
Start line: 511
End line: 524
Method source code: 
  public void test39()  throws Throwable  {
      Rotation rotation0 = new Rotation(1.0698219031952798E7, 963.51741, 963.51741, (-199.84737664), false);
      RotationOrder rotationOrder0 = RotationOrder.YZX;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #142
7: ldc2_w        #144
10: ldc2_w        #144
13: ldc2_w        #146
16: iconst_0
17: invokespecial #26
20: astore_1
21: getstatic     #148
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test40
Start line: 527
End line: 540
Method source code: 
  public void test40()  throws Throwable  {
      Rotation rotation0 = new Rotation(1.0698219031952798E7, 963.51741, 963.51741, 1.0698219031952798E7, false);
      RotationOrder rotationOrder0 = RotationOrder.YZX;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #142
7: ldc2_w        #144
10: ldc2_w        #144
13: ldc2_w        #142
16: iconst_0
17: invokespecial #26
20: astore_1
21: getstatic     #148
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test41
Start line: 543
End line: 548
Method source code: 
  public void test41()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.YZX;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {-0.0, 0.0, -0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #148
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: astore_3
14: iconst_3
15: newarray       double
17: dup
18: iconst_0
19: ldc2_w        #138
22: dastore
23: dup
24: iconst_1
25: dconst_0
26: dastore
27: dup
28: iconst_2
29: ldc2_w        #138
32: dastore
33: aload_3
34: ldc2_w        #13
37: invokestatic  #140
40: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test42
Start line: 551
End line: 556
Method source code: 
  public void test42()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.ZXY;
      Rotation rotation0 = Rotation.IDENTITY;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {-0.0, 0.0, -0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #149
3: astore_1
4: getstatic     #8
7: astore_2
8: aload_2
9: aload_1
10: invokevirtual #28
13: astore_3
14: iconst_3
15: newarray       double
17: dup
18: iconst_0
19: ldc2_w        #138
22: dastore
23: dup
24: iconst_1
25: dconst_0
26: dastore
27: dup
28: iconst_2
29: ldc2_w        #138
32: dastore
33: aload_3
34: ldc2_w        #13
37: invokestatic  #140
40: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test43
Start line: 559
End line: 572
Method source code: 
  public void test43()  throws Throwable  {
      Rotation rotation0 = new Rotation(0.1, (-1164.448896031811), (-1164.448896031811), 7.782818743633559, false);
      RotationOrder rotationOrder0 = RotationOrder.ZXY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #150
7: ldc2_w        #152
10: ldc2_w        #152
13: ldc2_w        #154
16: iconst_0
17: invokespecial #26
20: astore_1
21: getstatic     #149
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test44
Start line: 575
End line: 588
Method source code: 
  public void test44()  throws Throwable  {
      Rotation rotation0 = new Rotation(0.1, (-1163.299863033), (-1163.299863033), 1.997844754509471E-9, false);
      RotationOrder rotationOrder0 = RotationOrder.ZXY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: ldc2_w        #150
7: ldc2_w        #156
10: ldc2_w        #156
13: ldc2_w        #158
16: iconst_0
17: invokespecial #26
20: astore_1
21: getstatic     #149
24: astore_2
25: aload_1
26: aload_2
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test45
Start line: 591
End line: 604
Method source code: 
  public void test45()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.ZYX;
      Rotation rotation0 = new Rotation((-0.1), (-0.1), (-0.1), 402442.07376740675, false);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #160
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #96
11: ldc2_w        #96
14: ldc2_w        #96
17: ldc2_w        #125
20: iconst_0
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test46
Start line: 607
End line: 620
Method source code: 
  public void test46()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.ZYX;
      Rotation rotation0 = new Rotation(1673.47, (-730.4736022), 1673.47, (-730.4736022), true);
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cardan angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #160
3: astore_1
4: new           #3
7: dup
8: ldc2_w        #161
11: ldc2_w        #163
14: ldc2_w        #161
17: ldc2_w        #163
20: iconst_1
21: invokespecial #26
24: astore_2
25: aload_2
26: aload_1
27: invokevirtual #28
30: pop
31: ldc           #29
33: invokestatic  #30
36: goto          46
39: astore_3
40: ldc           #32
42: aload_3
43: invokestatic  #33
46: return
Exception table:
from    to  target type
25    36    39   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test47
Start line: 623
End line: 628
Method source code: 
  public void test47()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.ZYX;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {0.0, -0.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #160
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: astore_3
14: iconst_3
15: newarray       double
17: dup
18: iconst_0
19: dconst_0
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #138
26: dastore
27: dup
28: iconst_2
29: dconst_0
30: dastore
31: aload_3
32: ldc2_w        #13
35: invokestatic  #140
38: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test48
Start line: 631
End line: 637
Method source code: 
  public void test48()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.XYX;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #87
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: getstatic     #72
19: astore_3
20: aload_2
21: aload_3
22: invokevirtual #28
25: astore        4
27: iconst_3
28: newarray       double
30: dup
31: iconst_0
32: ldc2_w        #22
35: dastore
36: dup
37: iconst_1
38: ldc2_w        #22
41: dastore
42: dup
43: iconst_2
44: ldc2_w        #22
47: dastore
48: aload         4
50: ldc2_w        #13
53: invokestatic  #140
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test49
Start line: 640
End line: 653
Method source code: 
  public void test49()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.XYX;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #72
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test50
Start line: 656
End line: 662
Method source code: 
  public void test50()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.XZX;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #91
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: getstatic     #34
19: astore_3
20: aload_2
21: aload_3
22: invokevirtual #28
25: astore        4
27: iconst_3
28: newarray       double
30: dup
31: iconst_0
32: ldc2_w        #22
35: dastore
36: dup
37: iconst_1
38: ldc2_w        #22
41: dastore
42: dup
43: iconst_2
44: ldc2_w        #22
47: dastore
48: aload         4
50: ldc2_w        #13
53: invokestatic  #140
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test51
Start line: 665
End line: 678
Method source code: 
  public void test51()  throws Throwable  {
      RotationOrder rotationOrder0 = RotationOrder.XZX;
      Rotation rotation0 = Rotation.IDENTITY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #34
3: astore_1
4: getstatic     #8
7: astore_2
8: aload_2
9: aload_1
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test52
Start line: 681
End line: 687
Method source code: 
  public void test52()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.YXY;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #91
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: getstatic     #165
19: astore_3
20: aload_2
21: aload_3
22: invokevirtual #28
25: astore        4
27: iconst_3
28: newarray       double
30: dup
31: iconst_0
32: ldc2_w        #22
35: dastore
36: dup
37: iconst_1
38: ldc2_w        #22
41: dastore
42: dup
43: iconst_2
44: ldc2_w        #22
47: dastore
48: aload         4
50: ldc2_w        #13
53: invokestatic  #140
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test53
Start line: 690
End line: 703
Method source code: 
  public void test53()  throws Throwable  {
      Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, 0.0, false);
      RotationOrder rotationOrder0 = RotationOrder.YXY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: dconst_0
5: dconst_0
6: dconst_0
7: dconst_0
8: iconst_0
9: invokespecial #26
12: astore_1
13: getstatic     #165
16: astore_2
17: aload_1
18: aload_2
19: invokevirtual #28
22: pop
23: ldc           #29
25: invokestatic  #30
28: goto          38
31: astore_3
32: ldc           #32
34: aload_3
35: invokestatic  #33
38: return
Exception table:
from    to  target type
17    28    31   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test54
Start line: 706
End line: 719
Method source code: 
  public void test54()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.YXY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #165
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test55
Start line: 722
End line: 728
Method source code: 
  public void test55()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0);
      RotationOrder rotationOrder0 = RotationOrder.YZY;
      double[] doubleArray0 = rotation0.getAngles(rotationOrder0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }
Method byte code: 
0: getstatic     #123
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: invokespecial #101
13: astore_2
14: getstatic     #166
17: astore_3
18: aload_2
19: aload_3
20: invokevirtual #28
23: astore        4
25: iconst_3
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #22
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #22
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #22
45: dastore
46: aload         4
48: ldc2_w        #13
51: invokestatic  #140
54: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test56
Start line: 731
End line: 746
Method source code: 
  public void test56()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Vector3D vector3D1 = Vector3D.PLUS_I;
      Rotation rotation0 = new Rotation(vector3D0, vector3D1);
      RotationOrder rotationOrder0 = RotationOrder.YZY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #91
3: astore_1
4: getstatic     #90
7: astore_2
8: new           #3
11: dup
12: aload_1
13: aload_2
14: invokespecial #101
17: astore_3
18: getstatic     #166
21: astore        4
23: aload_3
24: aload         4
26: invokevirtual #28
29: pop
30: ldc           #29
32: invokestatic  #30
35: goto          47
38: astore        5
40: ldc           #32
42: aload         5
44: invokestatic  #33
47: return
Exception table:
from    to  target type
23    35    38   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test57
Start line: 749
End line: 762
Method source code: 
  public void test57()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.YZY;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #166
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test58
Start line: 765
End line: 770
Method source code: 
  public void test58()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.PLUS_J;
      Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);
      double[] doubleArray0 = rotation0.getAngles((RotationOrder) null);
      assertEquals(3, doubleArray0.length);
  }
Method byte code: 
0: getstatic     #167
3: astore_1
4: new           #3
7: dup
8: aload_1
9: aload_1
10: aload_1
11: aload_1
12: invokespecial #20
15: astore_2
16: aload_2
17: aconst_null
18: checkcast     #168
21: invokevirtual #28
24: astore_3
25: ldc2_w        #41
28: aload_3
29: arraylength
30: i2l
31: invokestatic  #43
34: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test59
Start line: 773
End line: 786
Method source code: 
  public void test59()  throws Throwable  {
      Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, 0.0, false);
      RotationOrder rotationOrder0 = RotationOrder.ZXZ;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: dconst_0
5: dconst_0
6: dconst_0
7: dconst_0
8: iconst_0
9: invokespecial #26
12: astore_1
13: getstatic     #124
16: astore_2
17: aload_1
18: aload_2
19: invokevirtual #28
22: pop
23: ldc           #29
25: invokestatic  #30
28: goto          38
31: astore_3
32: ldc           #32
34: aload_3
35: invokestatic  #33
38: return
Exception table:
from    to  target type
17    28    31   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test60
Start line: 789
End line: 802
Method source code: 
  public void test60()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.ZXZ;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #124
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test61
Start line: 805
End line: 817
Method source code: 
  public void test61()  throws Throwable  {
      Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, 0.0, false);
      try { 
        rotation0.getAngles((RotationOrder) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: new           #3
3: dup
4: dconst_0
5: dconst_0
6: dconst_0
7: dconst_0
8: iconst_0
9: invokespecial #26
12: astore_1
13: aload_1
14: aconst_null
15: checkcast     #168
18: invokevirtual #28
21: pop
22: ldc           #29
24: invokestatic  #30
27: goto          37
30: astore_2
31: ldc           #32
33: aload_2
34: invokestatic  #33
37: return
Exception table:
from    to  target type
13    27    30   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test62
Start line: 820
End line: 833
Method source code: 
  public void test62()  throws Throwable  {
      Rotation rotation0 = Rotation.IDENTITY;
      RotationOrder rotationOrder0 = RotationOrder.ZYZ;
      try { 
        rotation0.getAngles(rotationOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Euler angles singularity
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: getstatic     #8
3: astore_1
4: getstatic     #169
7: astore_2
8: aload_1
9: aload_2
10: invokevirtual #28
13: pop
14: ldc           #29
16: invokestatic  #30
19: goto          29
22: astore_3
23: ldc           #32
25: aload_3
26: invokestatic  #33
29: return
Exception table:
from    to  target type
8    19    22   Class java/lang/Exception
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/src/test/java/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/52/target/test-classes/org/apache/commons/math/geometry/euclidean/threed/Rotation_ESTest.class
Class name: Rotation_ESTest
Method name: test63
Start line: 836
End line: 849
Method source code: 
  public void test63()  throws Throwable  {
      double[][] doubleArray0 = new double[3][3];
      Rotation rotation0 = null;
      try {
        rotation0 = new Rotation(doubleArray0, (-0.19));
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // unable to orthogonalize matrix in 10 iterations
         //
         verifyException("org.apache.commons.math.geometry.euclidean.threed.Rotation", e);
      }
  }
Method byte code: 
0: iconst_3
1: iconst_3
2: multianewarray #2,  2
6: astore_1
7: aconst_null
8: astore_2
9: new           #3
12: dup
13: aload_1
14: ldc2_w        #170
17: invokespecial #6
20: astore_2
21: ldc           #29
23: invokestatic  #30
26: goto          36
29: astore_3
30: ldc           #32
32: aload_3
33: invokestatic  #33
36: return
Exception table:
from    to  target type
9    26    29   Class java/lang/Throwable
}
