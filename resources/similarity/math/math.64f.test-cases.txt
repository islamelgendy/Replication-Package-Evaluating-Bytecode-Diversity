Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 24
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: aload_1
37: invokevirtual #11
40: astore_2
41: ldc           #12
43: invokestatic  #13
46: goto          50
49: astore_2
50: return
Exception table:
from    to  target type
36    46    49   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 27
End line: 113
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #15
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: invokevirtual #53
533: astore        44
535: ldc           #54
537: invokestatic  #13
540: goto          545
543: astore        44
545: aload_3
546: invokestatic  #56
549: aload_3
550: invokestatic  #57
553: ldc           #58
555: invokestatic  #59
558: aload_3
559: invokestatic  #60
562: ldc           #58
564: invokestatic  #59
567: aload         7
569: invokestatic  #56
572: aload         7
574: invokestatic  #57
577: ldc           #58
579: invokestatic  #59
582: aload         7
584: invokestatic  #60
587: ldc           #58
589: invokestatic  #59
592: aload         10
594: invokestatic  #56
597: aload         10
599: invokestatic  #61
602: ldc           #62
604: invokestatic  #59
607: aload         12
609: invokestatic  #56
612: aload         12
614: invokestatic  #57
617: ldc           #63
619: invokestatic  #59
622: aload         12
624: invokestatic  #60
627: ldc           #63
629: invokestatic  #59
632: aload         13
634: invokestatic  #56
637: new           #64
640: dup
641: invokespecial #65
644: ldc           #66
646: invokevirtual #67
649: aload         17
651: invokevirtual #68
654: ldc           #69
656: invokevirtual #67
659: getstatic     #70
662: invokevirtual #68
665: ldc           #66
667: invokevirtual #67
670: invokevirtual #71
673: aload         17
675: getstatic     #70
678: invokevirtual #72
681: invokestatic  #73
684: aload         19
686: invokestatic  #56
689: aload         19
691: invokestatic  #57
694: ldc           #63
696: invokestatic  #59
699: aload         19
701: invokestatic  #60
704: ldc           #63
706: invokestatic  #59
709: aload         20
711: invokestatic  #56
714: new           #64
717: dup
718: invokespecial #65
721: ldc           #66
723: invokevirtual #67
726: aload         25
728: invokevirtual #68
731: ldc           #69
733: invokevirtual #67
736: getstatic     #70
739: invokevirtual #68
742: ldc           #66
744: invokevirtual #67
747: invokevirtual #71
750: aload         25
752: getstatic     #70
755: invokevirtual #72
758: invokestatic  #73
761: aload         27
763: invokestatic  #56
766: aload         27
768: invokestatic  #57
771: ldc           #63
773: invokestatic  #59
776: aload         27
778: invokestatic  #60
781: ldc           #63
783: invokestatic  #59
786: aload         28
788: invokestatic  #56
791: aload         30
793: invokestatic  #56
796: aload         31
798: invokestatic  #56
801: aload         33
803: invokestatic  #56
806: aload         37
808: invokestatic  #56
811: aload         37
813: invokestatic  #57
816: ldc           #74
818: invokestatic  #59
821: aload         37
823: invokestatic  #60
826: ldc           #74
828: invokestatic  #59
831: aload         39
833: invokestatic  #56
836: aload         39
838: invokestatic  #57
841: ldc           #74
843: invokestatic  #59
846: aload         39
848: invokestatic  #60
851: ldc           #74
853: invokestatic  #59
856: aload         40
858: invokestatic  #56
861: return
Exception table:
from    to  target type
529   540   543   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 116
End line: 205
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #75
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #78
544: astore        46
546: ldc           #54
548: invokestatic  #13
551: goto          556
554: astore        46
556: aload_3
557: invokestatic  #56
560: aload_3
561: invokestatic  #57
564: ldc           #58
566: invokestatic  #59
569: aload_3
570: invokestatic  #60
573: ldc           #58
575: invokestatic  #59
578: aload         7
580: invokestatic  #56
583: aload         7
585: invokestatic  #57
588: ldc           #58
590: invokestatic  #59
593: aload         7
595: invokestatic  #60
598: ldc           #58
600: invokestatic  #59
603: aload         10
605: invokestatic  #56
608: aload         10
610: invokestatic  #61
613: ldc           #62
615: invokestatic  #59
618: aload         12
620: invokestatic  #56
623: aload         12
625: invokestatic  #57
628: ldc           #63
630: invokestatic  #59
633: aload         12
635: invokestatic  #60
638: ldc           #63
640: invokestatic  #59
643: aload         13
645: invokestatic  #56
648: new           #64
651: dup
652: invokespecial #65
655: ldc           #66
657: invokevirtual #67
660: aload         17
662: invokevirtual #68
665: ldc           #69
667: invokevirtual #67
670: getstatic     #70
673: invokevirtual #68
676: ldc           #66
678: invokevirtual #67
681: invokevirtual #71
684: aload         17
686: getstatic     #70
689: invokevirtual #72
692: invokestatic  #73
695: aload         19
697: invokestatic  #56
700: aload         19
702: invokestatic  #57
705: ldc           #63
707: invokestatic  #59
710: aload         19
712: invokestatic  #60
715: ldc           #63
717: invokestatic  #59
720: aload         20
722: invokestatic  #56
725: new           #64
728: dup
729: invokespecial #65
732: ldc           #66
734: invokevirtual #67
737: aload         25
739: invokevirtual #68
742: ldc           #69
744: invokevirtual #67
747: getstatic     #70
750: invokevirtual #68
753: ldc           #66
755: invokevirtual #67
758: invokevirtual #71
761: aload         25
763: getstatic     #70
766: invokevirtual #72
769: invokestatic  #73
772: aload         27
774: invokestatic  #56
777: aload         27
779: invokestatic  #57
782: ldc           #63
784: invokestatic  #59
787: aload         27
789: invokestatic  #60
792: ldc           #63
794: invokestatic  #59
797: aload         28
799: invokestatic  #56
802: aload         30
804: invokestatic  #56
807: aload         31
809: invokestatic  #56
812: aload         33
814: invokestatic  #56
817: aload         37
819: invokestatic  #56
822: aload         37
824: invokestatic  #57
827: ldc           #74
829: invokestatic  #59
832: aload         37
834: invokestatic  #60
837: ldc           #74
839: invokestatic  #59
842: aload         39
844: invokestatic  #56
847: aload         39
849: invokestatic  #57
852: ldc           #74
854: invokestatic  #59
857: aload         39
859: invokestatic  #60
862: ldc           #74
864: invokestatic  #59
867: aload         40
869: invokestatic  #56
872: new           #64
875: dup
876: invokespecial #65
879: ldc           #66
881: invokevirtual #67
884: dload         44
886: invokevirtual #79
889: ldc           #69
891: invokevirtual #67
894: dconst_0
895: invokevirtual #79
898: ldc           #66
900: invokevirtual #67
903: invokevirtual #71
906: dload         44
908: dconst_0
909: dcmpl
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #73
921: return
Exception table:
from    to  target type
540   551   554   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 208
End line: 231
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(doubleArray15);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: new           #23
143: dup
144: aload         10
146: invokespecial #89
149: astore        12
151: aload         6
153: invokestatic  #56
156: aload         6
158: invokestatic  #57
161: ldc           #74
163: invokestatic  #59
166: aload         6
168: invokestatic  #60
171: ldc           #74
173: invokestatic  #59
176: aload         9
178: invokestatic  #56
181: aload         9
183: invokestatic  #61
186: ldc           #90
188: invokestatic  #59
191: aload         10
193: invokestatic  #56
196: aload         10
198: invokestatic  #61
201: ldc           #91
203: invokestatic  #59
206: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 234
End line: 247
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #92
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: aload_1
75: invokevirtual #10
78: new           #64
81: dup
82: invokespecial #65
85: ldc           #66
87: invokevirtual #67
90: iload_2
91: invokevirtual #102
94: ldc           #69
96: invokevirtual #67
99: sipush        1000
102: invokevirtual #102
105: ldc           #66
107: invokevirtual #67
110: invokevirtual #71
113: iload_2
114: sipush        1000
117: if_icmpne     124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #73
128: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 250
End line: 263
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int11 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertNull(vectorialConvergenceChecker10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #10
60: aload_1
61: invokevirtual #104
64: astore_2
65: aload_1
66: getfield      #105
69: istore_3
70: aload_2
71: invokestatic  #106
74: new           #64
77: dup
78: invokespecial #65
81: ldc           #66
83: invokevirtual #67
86: iload_3
87: invokevirtual #102
90: ldc           #69
92: invokevirtual #67
95: iconst_0
96: invokevirtual #102
99: ldc           #66
101: invokevirtual #67
104: invokevirtual #71
107: iload_3
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #73
119: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 266
End line: 275
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #107
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: bipush        100
59: invokevirtual #76
62: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 278
End line: 292
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: aload_1
75: invokevirtual #98
78: istore        4
80: new           #64
83: dup
84: invokespecial #65
87: ldc           #66
89: invokevirtual #67
92: iload_2
93: invokevirtual #102
96: ldc           #69
98: invokevirtual #67
101: sipush        1000
104: invokevirtual #102
107: ldc           #66
109: invokevirtual #67
112: invokevirtual #71
115: iload_2
116: sipush        1000
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #73
130: new           #64
133: dup
134: invokespecial #65
137: ldc           #66
139: invokevirtual #67
142: iload         4
144: invokevirtual #102
147: ldc           #69
149: invokevirtual #67
152: sipush        1000
155: invokevirtual #102
158: ldc           #66
160: invokevirtual #67
163: invokevirtual #71
166: iload         4
168: sipush        1000
171: if_icmpne     178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #73
182: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 295
End line: 319
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        int int18 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: invokevirtual #110
144: istore        12
146: aload         6
148: invokestatic  #56
151: aload         6
153: invokestatic  #57
156: ldc           #74
158: invokestatic  #59
161: aload         6
163: invokestatic  #60
166: ldc           #74
168: invokestatic  #59
171: aload         9
173: invokestatic  #56
176: aload         9
178: invokestatic  #61
181: ldc           #90
183: invokestatic  #59
186: aload         10
188: invokestatic  #56
191: aload         10
193: invokestatic  #61
196: ldc           #91
198: invokestatic  #59
201: new           #64
204: dup
205: invokespecial #65
208: ldc           #66
210: invokevirtual #67
213: iload         12
215: invokevirtual #102
218: ldc           #69
220: invokevirtual #67
223: ldc           #111
225: invokevirtual #102
228: ldc           #66
230: invokevirtual #67
233: invokevirtual #71
236: iload         12
238: ldc           #111
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #73
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 322
End line: 355
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray23 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #112
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: invokevirtual #11
152: astore        12
154: ldc           #12
156: invokestatic  #13
159: goto          164
162: astore        12
164: aload_2
165: invokestatic  #106
168: aload         7
170: invokestatic  #56
173: aload         7
175: invokestatic  #57
178: ldc           #74
180: invokestatic  #59
183: aload         7
185: invokestatic  #60
188: ldc           #74
190: invokestatic  #59
193: aload         10
195: invokestatic  #56
198: aload         10
200: invokestatic  #61
203: ldc           #90
205: invokestatic  #59
208: aload         11
210: invokestatic  #56
213: aload         11
215: invokestatic  #61
218: ldc           #90
220: invokestatic  #59
223: return
Exception table:
from    to  target type
148   159   162   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 358
End line: 447
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer20.rows = 0;
        levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d));
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53);
        double[] doubleArray56 = functionEvaluationException55.getArgument();
        double[] doubleArray58 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77);
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = simpleVectorialValueChecker29.converged((int) (byte) 0, vectorialPointValuePair82, vectorialPointValuePair83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #115
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: bipush        100
143: invokevirtual #76
146: new           #8
149: dup
150: invokespecial #9
153: astore        12
155: aload         12
157: iconst_0
158: putfield      #93
161: aload         12
163: iconst_1
164: invokevirtual #76
167: aload         12
169: ldc2_w        #31
172: invokevirtual #94
175: new           #99
178: dup
179: dconst_0
180: ldc2_w        #95
183: invokespecial #116
186: astore        13
188: new           #81
191: dup
192: iconst_m1
193: invokespecial #82
196: astore        14
198: aconst_null
199: astore        15
201: new           #27
204: dup
205: aload         15
207: invokespecial #39
210: astore        16
212: aconst_null
213: astore        17
215: iconst_2
216: anewarray     #5
219: dup
220: iconst_0
221: ldc           #28
223: aastore
224: dup
225: iconst_1
226: iconst_1
227: invokestatic  #17
230: aastore
231: astore        18
233: new           #27
236: dup
237: aload         15
239: aload         17
241: aload         18
243: invokespecial #47
246: astore        19
248: new           #23
251: dup
252: aload         14
254: dconst_0
255: ldc           #28
257: aload         18
259: invokespecial #83
262: astore        20
264: aload         20
266: invokevirtual #84
269: astore        21
271: new           #81
274: dup
275: iconst_m1
276: invokespecial #82
279: astore        22
281: aconst_null
282: astore        23
284: new           #27
287: dup
288: aload         23
290: invokespecial #39
293: astore        24
295: aconst_null
296: astore        25
298: iconst_2
299: anewarray     #5
302: dup
303: iconst_0
304: ldc           #28
306: aastore
307: dup
308: iconst_1
309: iconst_1
310: invokestatic  #17
313: aastore
314: astore        26
316: new           #27
319: dup
320: aload         23
322: aload         25
324: aload         26
326: invokespecial #47
329: astore        27
331: new           #23
334: dup
335: aload         22
337: dconst_0
338: ldc           #28
340: aload         26
342: invokespecial #83
345: astore        28
347: aload         28
349: invokevirtual #84
352: astore        29
354: iconst_1
355: newarray       double
357: dup
358: iconst_0
359: ldc2_w        #85
362: dastore
363: astore        30
365: new           #87
368: dup
369: aload         29
371: aload         30
373: invokespecial #88
376: astore        31
378: new           #87
381: dup
382: aload         21
384: aload         30
386: iconst_0
387: invokespecial #117
390: astore        32
392: new           #81
395: dup
396: iconst_m1
397: invokespecial #82
400: astore        33
402: aconst_null
403: astore        34
405: new           #27
408: dup
409: aload         34
411: invokespecial #39
414: astore        35
416: aconst_null
417: astore        36
419: iconst_2
420: anewarray     #5
423: dup
424: iconst_0
425: ldc           #28
427: aastore
428: dup
429: iconst_1
430: iconst_1
431: invokestatic  #17
434: aastore
435: astore        37
437: new           #27
440: dup
441: aload         34
443: aload         36
445: aload         37
447: invokespecial #47
450: astore        38
452: new           #23
455: dup
456: aload         33
458: dconst_0
459: ldc           #28
461: aload         37
463: invokespecial #83
466: astore        39
468: aload         39
470: invokevirtual #84
473: astore        40
475: iconst_1
476: newarray       double
478: dup
479: iconst_0
480: ldc2_w        #85
483: dastore
484: astore        41
486: new           #87
489: dup
490: aload         40
492: aload         41
494: invokespecial #88
497: astore        42
499: aload         13
501: iconst_0
502: aload         32
504: aload         42
506: invokevirtual #118
509: istore        43
511: aload         12
513: aload         13
515: invokevirtual #101
518: aload_1
519: aload         13
521: invokevirtual #101
524: aconst_null
525: astore        44
527: aconst_null
528: astore        45
530: aload         13
532: iconst_0
533: aload         44
535: aload         45
537: invokevirtual #118
540: istore        46
542: ldc           #54
544: invokestatic  #13
547: goto          552
550: astore        46
552: aload         6
554: invokestatic  #56
557: aload         6
559: invokestatic  #57
562: ldc           #74
564: invokestatic  #59
567: aload         6
569: invokestatic  #60
572: ldc           #74
574: invokestatic  #59
577: aload         9
579: invokestatic  #56
582: aload         9
584: invokestatic  #61
587: ldc           #90
589: invokestatic  #59
592: aload         10
594: invokestatic  #56
597: aload         10
599: invokestatic  #61
602: ldc           #91
604: invokestatic  #59
607: aload         18
609: invokestatic  #56
612: aload         18
614: invokestatic  #57
617: ldc           #74
619: invokestatic  #59
622: aload         18
624: invokestatic  #60
627: ldc           #74
629: invokestatic  #59
632: aload         21
634: invokestatic  #56
637: aload         21
639: invokestatic  #61
642: ldc           #90
644: invokestatic  #59
647: aload         26
649: invokestatic  #56
652: aload         26
654: invokestatic  #57
657: ldc           #74
659: invokestatic  #59
662: aload         26
664: invokestatic  #60
667: ldc           #74
669: invokestatic  #59
672: aload         29
674: invokestatic  #56
677: aload         29
679: invokestatic  #61
682: ldc           #90
684: invokestatic  #59
687: aload         30
689: invokestatic  #56
692: aload         30
694: invokestatic  #61
697: ldc           #91
699: invokestatic  #59
702: aload         37
704: invokestatic  #56
707: aload         37
709: invokestatic  #57
712: ldc           #74
714: invokestatic  #59
717: aload         37
719: invokestatic  #60
722: ldc           #74
724: invokestatic  #59
727: aload         40
729: invokestatic  #56
732: aload         40
734: invokestatic  #61
737: ldc           #90
739: invokestatic  #59
742: aload         41
744: invokestatic  #56
747: aload         41
749: invokestatic  #61
752: ldc           #91
754: invokestatic  #59
757: new           #64
760: dup
761: invokespecial #65
764: ldc           #66
766: invokevirtual #67
769: iload         43
771: invokevirtual #119
774: ldc           #69
776: invokevirtual #67
779: iconst_1
780: invokevirtual #119
783: ldc           #66
785: invokevirtual #67
788: invokevirtual #71
791: iload         43
793: iconst_1
794: if_icmpne     801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #73
805: return
Exception table:
from    to  target type
530   547   550   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 450
End line: 480
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #120
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: bipush        100
143: invokevirtual #76
146: aload_1
147: invokevirtual #11
150: astore        12
152: ldc           #12
154: invokestatic  #13
157: goto          162
160: astore        12
162: aload         6
164: invokestatic  #56
167: aload         6
169: invokestatic  #57
172: ldc           #74
174: invokestatic  #59
177: aload         6
179: invokestatic  #60
182: ldc           #74
184: invokestatic  #59
187: aload         9
189: invokestatic  #56
192: aload         9
194: invokestatic  #61
197: ldc           #90
199: invokestatic  #59
202: aload         10
204: invokestatic  #56
207: aload         10
209: invokestatic  #61
212: ldc           #91
214: invokestatic  #59
217: return
Exception table:
from    to  target type
146   157   160   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 483
End line: 517
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray20 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20);
        levenbergMarquardtOptimizer0.residuals = doubleArray20;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #121
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: iconst_1
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #85
136: dastore
137: astore        11
139: new           #87
142: dup
143: aload         10
145: aload         11
147: invokespecial #88
150: astore        12
152: new           #23
155: dup
156: aload         11
158: invokespecial #89
161: astore        13
163: aload_1
164: aload         11
166: putfield      #122
169: aload_1
170: invokevirtual #78
173: astore        14
175: ldc           #54
177: invokestatic  #13
180: goto          185
183: astore        14
185: aload_2
186: invokestatic  #106
189: aload         7
191: invokestatic  #56
194: aload         7
196: invokestatic  #57
199: ldc           #74
201: invokestatic  #59
204: aload         7
206: invokestatic  #60
209: ldc           #74
211: invokestatic  #59
214: aload         10
216: invokestatic  #56
219: aload         10
221: invokestatic  #61
224: ldc           #90
226: invokestatic  #59
229: aload         11
231: invokestatic  #56
234: aload         11
236: invokestatic  #61
239: ldc           #91
241: invokestatic  #59
244: return
Exception table:
from    to  target type
169   180   183   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 520
End line: 589
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction23 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException25 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable28);
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable28, localizable30, objArray33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException25, 0.0d, "hi!", objArray33);
        double[] doubleArray36 = functionEvaluationException35.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(doubleArray36);
        double[] doubleArray38 = functionEvaluationException37.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48);
        double[] doubleArray51 = functionEvaluationException50.getArgument();
        double[] doubleArray53 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53);
        double[] doubleArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction23, doubleArray38, doubleArray51, doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #123
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aconst_null
149: astore        12
151: new           #81
154: dup
155: iconst_m1
156: invokespecial #82
159: astore        13
161: aconst_null
162: astore        14
164: new           #27
167: dup
168: aload         14
170: invokespecial #39
173: astore        15
175: aconst_null
176: astore        16
178: iconst_2
179: anewarray     #5
182: dup
183: iconst_0
184: ldc           #28
186: aastore
187: dup
188: iconst_1
189: iconst_1
190: invokestatic  #17
193: aastore
194: astore        17
196: new           #27
199: dup
200: aload         14
202: aload         16
204: aload         17
206: invokespecial #47
209: astore        18
211: new           #23
214: dup
215: aload         13
217: dconst_0
218: ldc           #28
220: aload         17
222: invokespecial #83
225: astore        19
227: aload         19
229: invokevirtual #84
232: astore        20
234: new           #23
237: dup
238: aload         20
240: invokespecial #89
243: astore        21
245: aload         21
247: invokevirtual #84
250: astore        22
252: new           #81
255: dup
256: iconst_m1
257: invokespecial #82
260: astore        23
262: aconst_null
263: astore        24
265: new           #27
268: dup
269: aload         24
271: invokespecial #39
274: astore        25
276: aconst_null
277: astore        26
279: iconst_2
280: anewarray     #5
283: dup
284: iconst_0
285: ldc           #28
287: aastore
288: dup
289: iconst_1
290: iconst_1
291: invokestatic  #17
294: aastore
295: astore        27
297: new           #27
300: dup
301: aload         24
303: aload         26
305: aload         27
307: invokespecial #47
310: astore        28
312: new           #23
315: dup
316: aload         23
318: dconst_0
319: ldc           #28
321: aload         27
323: invokespecial #83
326: astore        29
328: aload         29
330: invokevirtual #84
333: astore        30
335: iconst_1
336: newarray       double
338: dup
339: iconst_0
340: ldc2_w        #85
343: dastore
344: astore        31
346: new           #87
349: dup
350: aload         30
352: aload         31
354: invokespecial #88
357: astore        32
359: aconst_null
360: astore        33
362: aload_1
363: aload         12
365: aload         22
367: aload         30
369: aload         33
371: invokevirtual #124
374: astore        34
376: ldc           #54
378: invokestatic  #13
381: goto          386
384: astore        34
386: aload_2
387: invokestatic  #106
390: aload         7
392: invokestatic  #56
395: aload         7
397: invokestatic  #57
400: ldc           #74
402: invokestatic  #59
405: aload         7
407: invokestatic  #60
410: ldc           #74
412: invokestatic  #59
415: aload         10
417: invokestatic  #56
420: aload         10
422: invokestatic  #61
425: ldc           #90
427: invokestatic  #59
430: aload         11
432: invokestatic  #56
435: aload         11
437: invokestatic  #61
440: ldc           #90
442: invokestatic  #59
445: aload         17
447: invokestatic  #56
450: aload         17
452: invokestatic  #57
455: ldc           #74
457: invokestatic  #59
460: aload         17
462: invokestatic  #60
465: ldc           #74
467: invokestatic  #59
470: aload         20
472: invokestatic  #56
475: aload         20
477: invokestatic  #61
480: ldc           #90
482: invokestatic  #59
485: aload         22
487: invokestatic  #56
490: aload         22
492: invokestatic  #61
495: ldc           #90
497: invokestatic  #59
500: aload         27
502: invokestatic  #56
505: aload         27
507: invokestatic  #57
510: ldc           #74
512: invokestatic  #59
515: aload         27
517: invokestatic  #60
520: ldc           #74
522: invokestatic  #59
525: aload         30
527: invokestatic  #56
530: aload         30
532: invokestatic  #61
535: ldc           #90
537: invokestatic  #59
540: aload         31
542: invokestatic  #56
545: aload         31
547: invokestatic  #61
550: ldc           #91
552: invokestatic  #59
555: return
Exception table:
from    to  target type
362   381   384   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 592
End line: 606
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #125
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: invokevirtual #126
53: istore_2
54: aload_1
55: invokevirtual #126
58: istore_3
59: aload_1
60: getfield      #122
63: astore        4
65: aload_1
66: ldc2_w        #31
69: invokevirtual #127
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: iload_2
85: invokevirtual #102
88: ldc           #69
90: invokevirtual #67
93: iconst_0
94: invokevirtual #102
97: ldc           #66
99: invokevirtual #67
102: invokevirtual #71
105: iload_2
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #73
117: new           #64
120: dup
121: invokespecial #65
124: ldc           #66
126: invokevirtual #67
129: iload_3
130: invokevirtual #102
133: ldc           #69
135: invokevirtual #67
138: iconst_0
139: invokevirtual #102
142: ldc           #66
144: invokevirtual #67
147: invokevirtual #71
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #73
162: aload         4
164: invokestatic  #106
167: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 609
End line: 626
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #128
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: aload_1
66: invokevirtual #132
69: dstore        4
71: aload_1
72: invokevirtual #133
75: istore        6
77: aload_1
78: invokevirtual #110
81: istore        7
83: aload_2
84: invokestatic  #56
87: aload_2
88: invokestatic  #61
91: ldc           #134
93: invokestatic  #59
96: aload_3
97: invokestatic  #56
100: dload         4
102: invokestatic  #135
105: invokestatic  #136
108: new           #64
111: dup
112: invokespecial #65
115: ldc           #66
117: invokevirtual #67
120: iload         6
122: invokevirtual #102
125: ldc           #69
127: invokevirtual #67
130: iconst_0
131: invokevirtual #102
134: ldc           #66
136: invokevirtual #67
139: invokevirtual #71
142: iload         6
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #73
155: new           #64
158: dup
159: invokespecial #65
162: ldc           #66
164: invokevirtual #67
167: iload         7
169: invokevirtual #102
172: ldc           #69
174: invokevirtual #67
177: ldc           #111
179: invokevirtual #102
182: ldc           #66
184: invokevirtual #67
187: invokevirtual #71
190: iload         7
192: ldc           #111
194: if_icmpne     201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #73
205: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 629
End line: 656
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        int int21 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #137
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: invokevirtual #98
145: istore        12
147: aload_2
148: invokestatic  #106
151: aload         7
153: invokestatic  #56
156: aload         7
158: invokestatic  #57
161: ldc           #74
163: invokestatic  #59
166: aload         7
168: invokestatic  #60
171: ldc           #74
173: invokestatic  #59
176: aload         10
178: invokestatic  #56
181: aload         10
183: invokestatic  #61
186: ldc           #90
188: invokestatic  #59
191: aload         11
193: invokestatic  #56
196: aload         11
198: invokestatic  #61
201: ldc           #90
203: invokestatic  #59
206: new           #64
209: dup
210: invokespecial #65
213: ldc           #66
215: invokevirtual #67
218: iload         12
220: invokevirtual #102
223: ldc           #69
225: invokevirtual #67
228: sipush        1000
231: invokevirtual #102
234: ldc           #66
236: invokevirtual #67
239: invokevirtual #71
242: iload         12
244: sipush        1000
247: if_icmpne     254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #73
258: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 659
End line: 671
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #138
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: invokevirtual #126
53: istore_2
54: aload_1
55: invokevirtual #126
58: istore_3
59: aload_1
60: bipush        100
62: invokevirtual #76
65: new           #64
68: dup
69: invokespecial #65
72: ldc           #66
74: invokevirtual #67
77: iload_2
78: invokevirtual #102
81: ldc           #69
83: invokevirtual #67
86: iconst_0
87: invokevirtual #102
90: ldc           #66
92: invokevirtual #67
95: invokevirtual #71
98: iload_2
99: ifne          106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #73
110: new           #64
113: dup
114: invokespecial #65
117: ldc           #66
119: invokevirtual #67
122: iload_3
123: invokevirtual #102
126: ldc           #69
128: invokevirtual #67
131: iconst_0
132: invokevirtual #102
135: ldc           #66
137: invokevirtual #67
140: invokevirtual #71
143: iload_3
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #73
155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 674
End line: 763
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker83 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker86 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker86;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #98
544: istore        46
546: aload_1
547: bipush        35
549: invokevirtual #76
552: aload_1
553: invokevirtual #104
556: astore        47
558: new           #99
561: dup
562: dconst_0
563: ldc2_w        #95
566: invokespecial #116
569: astore        48
571: aload_1
572: aload         48
574: putfield      #140
577: aload_3
578: invokestatic  #56
581: aload_3
582: invokestatic  #57
585: ldc           #58
587: invokestatic  #59
590: aload_3
591: invokestatic  #60
594: ldc           #58
596: invokestatic  #59
599: aload         7
601: invokestatic  #56
604: aload         7
606: invokestatic  #57
609: ldc           #58
611: invokestatic  #59
614: aload         7
616: invokestatic  #60
619: ldc           #58
621: invokestatic  #59
624: aload         10
626: invokestatic  #56
629: aload         10
631: invokestatic  #61
634: ldc           #62
636: invokestatic  #59
639: aload         12
641: invokestatic  #56
644: aload         12
646: invokestatic  #57
649: ldc           #63
651: invokestatic  #59
654: aload         12
656: invokestatic  #60
659: ldc           #63
661: invokestatic  #59
664: aload         13
666: invokestatic  #56
669: new           #64
672: dup
673: invokespecial #65
676: ldc           #66
678: invokevirtual #67
681: aload         17
683: invokevirtual #68
686: ldc           #69
688: invokevirtual #67
691: getstatic     #70
694: invokevirtual #68
697: ldc           #66
699: invokevirtual #67
702: invokevirtual #71
705: aload         17
707: getstatic     #70
710: invokevirtual #72
713: invokestatic  #73
716: aload         19
718: invokestatic  #56
721: aload         19
723: invokestatic  #57
726: ldc           #63
728: invokestatic  #59
731: aload         19
733: invokestatic  #60
736: ldc           #63
738: invokestatic  #59
741: aload         20
743: invokestatic  #56
746: new           #64
749: dup
750: invokespecial #65
753: ldc           #66
755: invokevirtual #67
758: aload         25
760: invokevirtual #68
763: ldc           #69
765: invokevirtual #67
768: getstatic     #70
771: invokevirtual #68
774: ldc           #66
776: invokevirtual #67
779: invokevirtual #71
782: aload         25
784: getstatic     #70
787: invokevirtual #72
790: invokestatic  #73
793: aload         27
795: invokestatic  #56
798: aload         27
800: invokestatic  #57
803: ldc           #63
805: invokestatic  #59
808: aload         27
810: invokestatic  #60
813: ldc           #63
815: invokestatic  #59
818: aload         28
820: invokestatic  #56
823: aload         30
825: invokestatic  #56
828: aload         31
830: invokestatic  #56
833: aload         33
835: invokestatic  #56
838: aload         37
840: invokestatic  #56
843: aload         37
845: invokestatic  #57
848: ldc           #74
850: invokestatic  #59
853: aload         37
855: invokestatic  #60
858: ldc           #74
860: invokestatic  #59
863: aload         39
865: invokestatic  #56
868: aload         39
870: invokestatic  #57
873: ldc           #74
875: invokestatic  #59
878: aload         39
880: invokestatic  #60
883: ldc           #74
885: invokestatic  #59
888: aload         40
890: invokestatic  #56
893: new           #64
896: dup
897: invokespecial #65
900: ldc           #66
902: invokevirtual #67
905: dload         44
907: invokevirtual #79
910: ldc           #69
912: invokevirtual #67
915: dconst_0
916: invokevirtual #79
919: ldc           #66
921: invokevirtual #67
924: invokevirtual #71
927: dload         44
929: dconst_0
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #73
942: new           #64
945: dup
946: invokespecial #65
949: ldc           #66
951: invokevirtual #67
954: iload         46
956: invokevirtual #102
959: ldc           #69
961: invokevirtual #67
964: sipush        1000
967: invokevirtual #102
970: ldc           #66
972: invokevirtual #67
975: invokevirtual #71
978: iload         46
980: sipush        1000
983: if_icmpne     990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #73
994: aload         47
996: invokestatic  #106
999: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 766
End line: 785
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        double[] doubleArray0 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray7 = new double[] { (-1), 1.0f };
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        levenbergMarquardtOptimizer2.jacobian = doubleArray8;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(doubleArray0, "{0}", (java.lang.Object[]) doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: invokespecial #9
33: astore_2
34: aload_2
35: dconst_0
36: invokevirtual #129
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: ldc2_w        #31
47: dastore
48: dup
49: iconst_1
50: dconst_1
51: dastore
52: astore_3
53: iconst_1
54: anewarray     #130
57: dup
58: iconst_0
59: aload_3
60: aastore
61: astore        4
63: aload_2
64: aload         4
66: putfield      #131
69: new           #23
72: dup
73: aload_1
74: ldc           #142
76: aload         4
78: checkcast     #143
81: invokespecial #144
84: astore        5
86: ldc           #54
88: invokestatic  #13
91: goto          96
94: astore        5
96: aload_3
97: invokestatic  #56
100: aload_3
101: invokestatic  #61
104: ldc           #134
106: invokestatic  #59
109: aload         4
111: invokestatic  #56
114: return
Exception table:
from    to  target type
69    91    94   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 788
End line: 812
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        int int18 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: invokevirtual #98
144: istore        12
146: aload         6
148: invokestatic  #56
151: aload         6
153: invokestatic  #57
156: ldc           #74
158: invokestatic  #59
161: aload         6
163: invokestatic  #60
166: ldc           #74
168: invokestatic  #59
171: aload         9
173: invokestatic  #56
176: aload         9
178: invokestatic  #61
181: ldc           #90
183: invokestatic  #59
186: aload         10
188: invokestatic  #56
191: aload         10
193: invokestatic  #61
196: ldc           #91
198: invokestatic  #59
201: new           #64
204: dup
205: invokespecial #65
208: ldc           #66
210: invokevirtual #67
213: iload         12
215: invokevirtual #102
218: ldc           #69
220: invokevirtual #67
223: sipush        1000
226: invokevirtual #102
229: ldc           #66
231: invokevirtual #67
234: invokevirtual #71
237: iload         12
239: sipush        1000
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #73
253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 815
End line: 904
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNull(doubleArray79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #146
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: getfield      #122
538: astore        44
540: aload_1
541: invokevirtual #53
544: astore        45
546: ldc           #54
548: invokestatic  #13
551: goto          556
554: astore        45
556: aload_3
557: invokestatic  #56
560: aload_3
561: invokestatic  #57
564: ldc           #58
566: invokestatic  #59
569: aload_3
570: invokestatic  #60
573: ldc           #58
575: invokestatic  #59
578: aload         7
580: invokestatic  #56
583: aload         7
585: invokestatic  #57
588: ldc           #58
590: invokestatic  #59
593: aload         7
595: invokestatic  #60
598: ldc           #58
600: invokestatic  #59
603: aload         10
605: invokestatic  #56
608: aload         10
610: invokestatic  #61
613: ldc           #62
615: invokestatic  #59
618: aload         12
620: invokestatic  #56
623: aload         12
625: invokestatic  #57
628: ldc           #63
630: invokestatic  #59
633: aload         12
635: invokestatic  #60
638: ldc           #63
640: invokestatic  #59
643: aload         13
645: invokestatic  #56
648: new           #64
651: dup
652: invokespecial #65
655: ldc           #66
657: invokevirtual #67
660: aload         17
662: invokevirtual #68
665: ldc           #69
667: invokevirtual #67
670: getstatic     #70
673: invokevirtual #68
676: ldc           #66
678: invokevirtual #67
681: invokevirtual #71
684: aload         17
686: getstatic     #70
689: invokevirtual #72
692: invokestatic  #73
695: aload         19
697: invokestatic  #56
700: aload         19
702: invokestatic  #57
705: ldc           #63
707: invokestatic  #59
710: aload         19
712: invokestatic  #60
715: ldc           #63
717: invokestatic  #59
720: aload         20
722: invokestatic  #56
725: new           #64
728: dup
729: invokespecial #65
732: ldc           #66
734: invokevirtual #67
737: aload         25
739: invokevirtual #68
742: ldc           #69
744: invokevirtual #67
747: getstatic     #70
750: invokevirtual #68
753: ldc           #66
755: invokevirtual #67
758: invokevirtual #71
761: aload         25
763: getstatic     #70
766: invokevirtual #72
769: invokestatic  #73
772: aload         27
774: invokestatic  #56
777: aload         27
779: invokestatic  #57
782: ldc           #63
784: invokestatic  #59
787: aload         27
789: invokestatic  #60
792: ldc           #63
794: invokestatic  #59
797: aload         28
799: invokestatic  #56
802: aload         30
804: invokestatic  #56
807: aload         31
809: invokestatic  #56
812: aload         33
814: invokestatic  #56
817: aload         37
819: invokestatic  #56
822: aload         37
824: invokestatic  #57
827: ldc           #74
829: invokestatic  #59
832: aload         37
834: invokestatic  #60
837: ldc           #74
839: invokestatic  #59
842: aload         39
844: invokestatic  #56
847: aload         39
849: invokestatic  #57
852: ldc           #74
854: invokestatic  #59
857: aload         39
859: invokestatic  #60
862: ldc           #74
864: invokestatic  #59
867: aload         40
869: invokestatic  #56
872: aload         44
874: invokestatic  #106
877: return
Exception table:
from    to  target type
540   551   554   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 907
End line: 1009
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction23 = null;
        double[] doubleArray24 = null;
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35);
        double[] doubleArray38 = functionEvaluationException37.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48);
        double[] doubleArray51 = functionEvaluationException50.getArgument();
        double[] doubleArray53 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray53, false);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(throwable25, doubleArray38);
        org.apache.commons.math.exception.util.Localizable localizable59 = null;
        org.apache.commons.math.exception.util.Localizable localizable61 = null;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable61, objArray67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException(localizable59, objArray67);
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException("hi!", objArray67);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer71 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException73 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable76 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable76);
        org.apache.commons.math.exception.util.Localizable localizable78 = null;
        java.lang.Object[] objArray81 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable76, localizable78, objArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException73, 0.0d, "hi!", objArray81);
        double[] doubleArray84 = functionEvaluationException83.getArgument();
        double[] doubleArray86 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray84, doubleArray86);
        levenbergMarquardtOptimizer71.point = doubleArray86;
        levenbergMarquardtOptimizer71.cost = 0L;
        double[] doubleArray96 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer71.targetValues = doubleArray96;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException70, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair99 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction23, doubleArray24, doubleArray38, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[100.0, 0.0, 10.0, 32.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aconst_null
149: astore        12
151: aconst_null
152: astore        13
154: aconst_null
155: astore        14
157: new           #81
160: dup
161: iconst_m1
162: invokespecial #82
165: astore        15
167: aconst_null
168: astore        16
170: new           #27
173: dup
174: aload         16
176: invokespecial #39
179: astore        17
181: aconst_null
182: astore        18
184: iconst_2
185: anewarray     #5
188: dup
189: iconst_0
190: ldc           #28
192: aastore
193: dup
194: iconst_1
195: iconst_1
196: invokestatic  #17
199: aastore
200: astore        19
202: new           #27
205: dup
206: aload         16
208: aload         18
210: aload         19
212: invokespecial #47
215: astore        20
217: new           #23
220: dup
221: aload         15
223: dconst_0
224: ldc           #28
226: aload         19
228: invokespecial #83
231: astore        21
233: aload         21
235: invokevirtual #84
238: astore        22
240: new           #81
243: dup
244: iconst_m1
245: invokespecial #82
248: astore        23
250: aconst_null
251: astore        24
253: new           #27
256: dup
257: aload         24
259: invokespecial #39
262: astore        25
264: aconst_null
265: astore        26
267: iconst_2
268: anewarray     #5
271: dup
272: iconst_0
273: ldc           #28
275: aastore
276: dup
277: iconst_1
278: iconst_1
279: invokestatic  #17
282: aastore
283: astore        27
285: new           #27
288: dup
289: aload         24
291: aload         26
293: aload         27
295: invokespecial #47
298: astore        28
300: new           #23
303: dup
304: aload         23
306: dconst_0
307: ldc           #28
309: aload         27
311: invokespecial #83
314: astore        29
316: aload         29
318: invokevirtual #84
321: astore        30
323: iconst_1
324: newarray       double
326: dup
327: iconst_0
328: ldc2_w        #85
331: dastore
332: astore        31
334: new           #87
337: dup
338: aload         30
340: aload         31
342: invokespecial #88
345: astore        32
347: new           #87
350: dup
351: aload         22
353: aload         31
355: iconst_0
356: invokespecial #117
359: astore        33
361: new           #23
364: dup
365: aload         14
367: aload         22
369: invokespecial #148
372: astore        34
374: aconst_null
375: astore        35
377: aconst_null
378: astore        36
380: iconst_5
381: anewarray     #5
384: dup
385: iconst_0
386: iconst_0
387: invokestatic  #16
390: aastore
391: dup
392: iconst_1
393: iconst_0
394: invokestatic  #17
397: aastore
398: dup
399: iconst_2
400: bipush        52
402: invokestatic  #18
405: aastore
406: dup
407: iconst_3
408: ldc2_w        #19
411: invokestatic  #21
414: aastore
415: dup
416: iconst_4
417: dconst_1
418: invokestatic  #22
421: aastore
422: astore        37
424: new           #23
427: dup
428: ldc2_w        #24
431: aload         36
433: aload         37
435: invokespecial #26
438: astore        38
440: new           #44
443: dup
444: aload         35
446: aload         37
448: invokespecial #149
451: astore        39
453: new           #27
456: dup
457: ldc           #28
459: aload         37
461: invokespecial #29
464: astore        40
466: new           #8
469: dup
470: invokespecial #9
473: astore        41
475: new           #81
478: dup
479: iconst_m1
480: invokespecial #82
483: astore        42
485: aconst_null
486: astore        43
488: new           #27
491: dup
492: aload         43
494: invokespecial #39
497: astore        44
499: aconst_null
500: astore        45
502: iconst_2
503: anewarray     #5
506: dup
507: iconst_0
508: ldc           #28
510: aastore
511: dup
512: iconst_1
513: iconst_1
514: invokestatic  #17
517: aastore
518: astore        46
520: new           #27
523: dup
524: aload         43
526: aload         45
528: aload         46
530: invokespecial #47
533: astore        47
535: new           #23
538: dup
539: aload         42
541: dconst_0
542: ldc           #28
544: aload         46
546: invokespecial #83
549: astore        48
551: aload         48
553: invokevirtual #84
556: astore        49
558: iconst_1
559: newarray       double
561: dup
562: iconst_0
563: ldc2_w        #85
566: dastore
567: astore        50
569: new           #87
572: dup
573: aload         49
575: aload         50
577: invokespecial #88
580: astore        51
582: aload         41
584: aload         50
586: putfield      #52
589: aload         41
591: dconst_0
592: putfield      #97
595: iconst_5
596: newarray       double
598: dup
599: iconst_0
600: ldc2_w        #95
603: dastore
604: dup
605: iconst_1
606: dconst_0
607: dastore
608: dup
609: iconst_2
610: ldc2_w        #33
613: dastore
614: dup
615: iconst_3
616: ldc2_w        #150
619: dastore
620: dup
621: iconst_4
622: dconst_1
623: dastore
624: astore        52
626: aload         41
628: aload         52
630: putfield      #152
633: new           #23
636: dup
637: aload         40
639: aload         52
641: invokespecial #148
644: astore        53
646: aload_1
647: aload         12
649: aload         13
651: aload         22
653: aload         52
655: invokevirtual #124
658: astore        54
660: ldc           #54
662: invokestatic  #13
665: goto          670
668: astore        54
670: aload_2
671: invokestatic  #106
674: aload         7
676: invokestatic  #56
679: aload         7
681: invokestatic  #57
684: ldc           #74
686: invokestatic  #59
689: aload         7
691: invokestatic  #60
694: ldc           #74
696: invokestatic  #59
699: aload         10
701: invokestatic  #56
704: aload         10
706: invokestatic  #61
709: ldc           #90
711: invokestatic  #59
714: aload         11
716: invokestatic  #56
719: aload         11
721: invokestatic  #61
724: ldc           #90
726: invokestatic  #59
729: aload         19
731: invokestatic  #56
734: aload         19
736: invokestatic  #57
739: ldc           #74
741: invokestatic  #59
744: aload         19
746: invokestatic  #60
749: ldc           #74
751: invokestatic  #59
754: aload         22
756: invokestatic  #56
759: aload         22
761: invokestatic  #61
764: ldc           #90
766: invokestatic  #59
769: aload         27
771: invokestatic  #56
774: aload         27
776: invokestatic  #57
779: ldc           #74
781: invokestatic  #59
784: aload         27
786: invokestatic  #60
789: ldc           #74
791: invokestatic  #59
794: aload         30
796: invokestatic  #56
799: aload         30
801: invokestatic  #61
804: ldc           #90
806: invokestatic  #59
809: aload         31
811: invokestatic  #56
814: aload         31
816: invokestatic  #61
819: ldc           #91
821: invokestatic  #59
824: aload         37
826: invokestatic  #56
829: aload         37
831: invokestatic  #57
834: ldc           #58
836: invokestatic  #59
839: aload         37
841: invokestatic  #60
844: ldc           #58
846: invokestatic  #59
849: aload         46
851: invokestatic  #56
854: aload         46
856: invokestatic  #57
859: ldc           #74
861: invokestatic  #59
864: aload         46
866: invokestatic  #60
869: ldc           #74
871: invokestatic  #59
874: aload         49
876: invokestatic  #56
879: aload         49
881: invokestatic  #61
884: ldc           #90
886: invokestatic  #59
889: aload         50
891: invokestatic  #56
894: aload         50
896: invokestatic  #61
899: ldc           #91
901: invokestatic  #59
904: aload         52
906: invokestatic  #56
909: aload         52
911: invokestatic  #61
914: ldc           #153
916: invokestatic  #59
919: return
Exception table:
from    to  target type
646   665   668   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 1012
End line: 1099
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        double double83 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #98
544: istore        46
546: aload_1
547: bipush        35
549: invokevirtual #76
552: aload_1
553: invokevirtual #77
556: dstore        47
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: dload         44
888: invokevirtual #79
891: ldc           #69
893: invokevirtual #67
896: dconst_0
897: invokevirtual #79
900: ldc           #66
902: invokevirtual #67
905: invokevirtual #71
908: dload         44
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #73
923: new           #64
926: dup
927: invokespecial #65
930: ldc           #66
932: invokevirtual #67
935: iload         46
937: invokevirtual #102
940: ldc           #69
942: invokevirtual #67
945: sipush        1000
948: invokevirtual #102
951: ldc           #66
953: invokevirtual #67
956: invokevirtual #71
959: iload         46
961: sipush        1000
964: if_icmpne     971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #73
975: new           #64
978: dup
979: invokespecial #65
982: ldc           #66
984: invokevirtual #67
987: dload         47
989: invokevirtual #79
992: ldc           #69
994: invokevirtual #67
997: dconst_0
998: invokevirtual #79
1001: ldc           #66
1003: invokevirtual #67
1006: invokevirtual #71
1009: dload         47
1011: dconst_0
1012: dcmpl
1013: ifne          1020
1016: iconst_1
1017: goto          1021
1020: iconst_0
1021: invokestatic  #73
1024: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 1102
End line: 1200
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8);
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13);
        double[] doubleArray16 = functionEvaluationException15.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer17 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException("hi!", objArray26);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        java.lang.Object[] objArray37 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable31, objArray37);
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException28, "hi!", objArray37);
        double[] doubleArray45 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61);
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73);
        java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        java.lang.Object[] objArray88 = mathRuntimeException87.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88);
        java.lang.Object[] objArray91 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException28, doubleArray45, localizable56, objArray91);
        levenbergMarquardtOptimizer17.point = doubleArray45;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair94 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray45);
        levenbergMarquardtOptimizer0.residuals = doubleArray16;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(nullPointerException79);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: invokevirtual #76
37: aload_1
38: invokevirtual #98
41: istore_2
42: new           #81
45: dup
46: iconst_m1
47: invokespecial #82
50: astore_3
51: aconst_null
52: astore        4
54: new           #27
57: dup
58: aload         4
60: invokespecial #39
63: astore        5
65: aconst_null
66: astore        6
68: iconst_2
69: anewarray     #5
72: dup
73: iconst_0
74: ldc           #28
76: aastore
77: dup
78: iconst_1
79: iconst_1
80: invokestatic  #17
83: aastore
84: astore        7
86: new           #27
89: dup
90: aload         4
92: aload         6
94: aload         7
96: invokespecial #47
99: astore        8
101: new           #23
104: dup
105: aload_3
106: dconst_0
107: ldc           #28
109: aload         7
111: invokespecial #83
114: astore        9
116: aload         9
118: invokevirtual #84
121: astore        10
123: new           #8
126: dup
127: invokespecial #9
130: astore        11
132: aconst_null
133: astore        12
135: iconst_5
136: anewarray     #5
139: dup
140: iconst_0
141: iconst_0
142: invokestatic  #16
145: aastore
146: dup
147: iconst_1
148: iconst_0
149: invokestatic  #17
152: aastore
153: dup
154: iconst_2
155: bipush        52
157: invokestatic  #18
160: aastore
161: dup
162: iconst_3
163: ldc2_w        #19
166: invokestatic  #21
169: aastore
170: dup
171: iconst_4
172: dconst_1
173: invokestatic  #22
176: aastore
177: astore        13
179: new           #23
182: dup
183: ldc2_w        #24
186: aload         12
188: aload         13
190: invokespecial #26
193: astore        14
195: new           #27
198: dup
199: ldc           #28
201: aload         13
203: invokespecial #29
206: astore        15
208: aconst_null
209: astore        16
211: iconst_5
212: anewarray     #5
215: dup
216: iconst_0
217: iconst_0
218: invokestatic  #16
221: aastore
222: dup
223: iconst_1
224: iconst_0
225: invokestatic  #17
228: aastore
229: dup
230: iconst_2
231: bipush        52
233: invokestatic  #18
236: aastore
237: dup
238: iconst_3
239: ldc2_w        #19
242: invokestatic  #21
245: aastore
246: dup
247: iconst_4
248: dconst_1
249: invokestatic  #22
252: aastore
253: astore        17
255: new           #23
258: dup
259: ldc2_w        #24
262: aload         16
264: aload         17
266: invokespecial #26
269: astore        18
271: new           #27
274: dup
275: aload         15
277: ldc           #28
279: aload         17
281: invokespecial #30
284: astore        19
286: iconst_5
287: newarray       double
289: dup
290: iconst_0
291: ldc2_w        #31
294: dastore
295: dup
296: iconst_1
297: ldc2_w        #33
300: dastore
301: dup
302: iconst_2
303: ldc2_w        #31
306: dastore
307: dup
308: iconst_3
309: ldc2_w        #31
312: dastore
313: dup
314: iconst_4
315: dconst_1
316: dastore
317: astore        20
319: aconst_null
320: astore        21
322: iconst_1
323: anewarray     #5
326: dup
327: iconst_0
328: iconst_1
329: invokestatic  #35
332: aastore
333: astore        22
335: ldc           #28
337: aload         22
339: invokestatic  #36
342: astore        23
344: new           #37
347: dup
348: bipush        100
350: aload         21
352: aload         22
354: invokespecial #38
357: astore        24
359: aconst_null
360: astore        25
362: new           #27
365: dup
366: aload         25
368: invokespecial #39
371: astore        26
373: aload         26
375: invokevirtual #40
378: astore        27
380: aconst_null
381: astore        28
383: iconst_1
384: anewarray     #5
387: dup
388: iconst_0
389: iconst_1
390: invokestatic  #35
393: aastore
394: astore        29
396: ldc           #28
398: aload         29
400: invokestatic  #36
403: astore        30
405: new           #37
408: dup
409: bipush        100
411: aload         28
413: aload         29
415: invokespecial #38
418: astore        31
420: aconst_null
421: astore        32
423: aconst_null
424: astore        33
426: new           #27
429: dup
430: aload         33
432: invokespecial #39
435: astore        34
437: aload         34
439: invokevirtual #40
442: astore        35
444: aconst_null
445: astore        36
447: iconst_1
448: anewarray     #5
451: dup
452: iconst_0
453: iconst_1
454: invokestatic  #35
457: aastore
458: astore        37
460: ldc           #28
462: aload         37
464: invokestatic  #36
467: astore        38
469: new           #37
472: dup
473: bipush        100
475: aload         36
477: aload         37
479: invokespecial #38
482: astore        39
484: aload         35
486: aload         37
488: invokestatic  #41
491: astore        40
493: ldc           #42
495: aload         37
497: invokestatic  #43
500: astore        41
502: new           #44
505: dup
506: aload         31
508: aload         32
510: aload         37
512: invokespecial #45
515: astore        42
517: aload         27
519: aload         37
521: invokestatic  #46
524: astore        43
526: aconst_null
527: astore        44
529: new           #27
532: dup
533: aload         44
535: invokespecial #39
538: astore        45
540: aconst_null
541: astore        46
543: iconst_2
544: anewarray     #5
547: dup
548: iconst_0
549: ldc           #28
551: aastore
552: dup
553: iconst_1
554: iconst_1
555: invokestatic  #17
558: aastore
559: astore        47
561: new           #27
564: dup
565: aload         44
567: aload         46
569: aload         47
571: invokespecial #47
574: astore        48
576: aload         48
578: invokevirtual #48
581: astore        49
583: ldc           #42
585: aload         49
587: invokestatic  #49
590: astore        50
592: new           #23
595: dup
596: aload         24
598: dconst_0
599: aload         27
601: aload         49
603: invokespecial #50
606: astore        51
608: aconst_null
609: astore        52
611: new           #23
614: dup
615: aload         15
617: aload         20
619: aload         27
621: aload         52
623: invokespecial #51
626: astore        53
628: aload         11
630: aload         20
632: putfield      #52
635: new           #87
638: dup
639: aload         10
641: aload         20
643: invokespecial #88
646: astore        54
648: aload_1
649: aload         10
651: putfield      #122
654: new           #64
657: dup
658: invokespecial #65
661: ldc           #66
663: invokevirtual #67
666: iload_2
667: invokevirtual #102
670: ldc           #69
672: invokevirtual #67
675: sipush        1000
678: invokevirtual #102
681: ldc           #66
683: invokevirtual #67
686: invokevirtual #71
689: iload_2
690: sipush        1000
693: if_icmpne     700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #73
704: aload         7
706: invokestatic  #56
709: aload         7
711: invokestatic  #57
714: ldc           #74
716: invokestatic  #59
719: aload         7
721: invokestatic  #60
724: ldc           #74
726: invokestatic  #59
729: aload         10
731: invokestatic  #56
734: aload         10
736: invokestatic  #61
739: ldc           #90
741: invokestatic  #59
744: aload         13
746: invokestatic  #56
749: aload         13
751: invokestatic  #57
754: ldc           #58
756: invokestatic  #59
759: aload         13
761: invokestatic  #60
764: ldc           #58
766: invokestatic  #59
769: aload         17
771: invokestatic  #56
774: aload         17
776: invokestatic  #57
779: ldc           #58
781: invokestatic  #59
784: aload         17
786: invokestatic  #60
789: ldc           #58
791: invokestatic  #59
794: aload         20
796: invokestatic  #56
799: aload         20
801: invokestatic  #61
804: ldc           #62
806: invokestatic  #59
809: aload         22
811: invokestatic  #56
814: aload         22
816: invokestatic  #57
819: ldc           #63
821: invokestatic  #59
824: aload         22
826: invokestatic  #60
829: ldc           #63
831: invokestatic  #59
834: aload         23
836: invokestatic  #56
839: new           #64
842: dup
843: invokespecial #65
846: ldc           #66
848: invokevirtual #67
851: aload         27
853: invokevirtual #68
856: ldc           #69
858: invokevirtual #67
861: getstatic     #70
864: invokevirtual #68
867: ldc           #66
869: invokevirtual #67
872: invokevirtual #71
875: aload         27
877: getstatic     #70
880: invokevirtual #72
883: invokestatic  #73
886: aload         29
888: invokestatic  #56
891: aload         29
893: invokestatic  #57
896: ldc           #63
898: invokestatic  #59
901: aload         29
903: invokestatic  #60
906: ldc           #63
908: invokestatic  #59
911: aload         30
913: invokestatic  #56
916: new           #64
919: dup
920: invokespecial #65
923: ldc           #66
925: invokevirtual #67
928: aload         35
930: invokevirtual #68
933: ldc           #69
935: invokevirtual #67
938: getstatic     #70
941: invokevirtual #68
944: ldc           #66
946: invokevirtual #67
949: invokevirtual #71
952: aload         35
954: getstatic     #70
957: invokevirtual #72
960: invokestatic  #73
963: aload         37
965: invokestatic  #56
968: aload         37
970: invokestatic  #57
973: ldc           #63
975: invokestatic  #59
978: aload         37
980: invokestatic  #60
983: ldc           #63
985: invokestatic  #59
988: aload         38
990: invokestatic  #56
993: aload         40
995: invokestatic  #56
998: aload         41
1000: invokestatic  #56
1003: aload         43
1005: invokestatic  #56
1008: aload         47
1010: invokestatic  #56
1013: aload         47
1015: invokestatic  #57
1018: ldc           #74
1020: invokestatic  #59
1023: aload         47
1025: invokestatic  #60
1028: ldc           #74
1030: invokestatic  #59
1033: aload         49
1035: invokestatic  #56
1038: aload         49
1040: invokestatic  #57
1043: ldc           #74
1045: invokestatic  #59
1048: aload         49
1050: invokestatic  #60
1053: ldc           #74
1055: invokestatic  #59
1058: aload         50
1060: invokestatic  #56
1063: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1203
End line: 1278
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException19 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException(throwable22);
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException(throwable22, localizable24, objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException19, 0.0d, "hi!", objArray27);
        double[] doubleArray30 = functionEvaluationException29.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        double[] doubleArray45 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair46 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray45);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray45, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53);
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58);
        double[] doubleArray61 = functionEvaluationException60.getArgument();
        double[] doubleArray63 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63);
        boolean boolean65 = simpleVectorialValueChecker16.converged(0, vectorialPointValuePair48, vectorialPointValuePair64);
        double[] doubleArray66 = vectorialPointValuePair64.getValue();
        levenbergMarquardtOptimizer0.point = doubleArray66;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: aload_1
75: bipush        100
77: invokevirtual #76
80: new           #99
83: dup
84: dconst_0
85: ldc2_w        #95
88: invokespecial #116
91: astore        4
93: new           #81
96: dup
97: iconst_m1
98: invokespecial #82
101: astore        5
103: aconst_null
104: astore        6
106: new           #27
109: dup
110: aload         6
112: invokespecial #39
115: astore        7
117: aconst_null
118: astore        8
120: iconst_2
121: anewarray     #5
124: dup
125: iconst_0
126: ldc           #28
128: aastore
129: dup
130: iconst_1
131: iconst_1
132: invokestatic  #17
135: aastore
136: astore        9
138: new           #27
141: dup
142: aload         6
144: aload         8
146: aload         9
148: invokespecial #47
151: astore        10
153: new           #23
156: dup
157: aload         5
159: dconst_0
160: ldc           #28
162: aload         9
164: invokespecial #83
167: astore        11
169: aload         11
171: invokevirtual #84
174: astore        12
176: new           #81
179: dup
180: iconst_m1
181: invokespecial #82
184: astore        13
186: aconst_null
187: astore        14
189: new           #27
192: dup
193: aload         14
195: invokespecial #39
198: astore        15
200: aconst_null
201: astore        16
203: iconst_2
204: anewarray     #5
207: dup
208: iconst_0
209: ldc           #28
211: aastore
212: dup
213: iconst_1
214: iconst_1
215: invokestatic  #17
218: aastore
219: astore        17
221: new           #27
224: dup
225: aload         14
227: aload         16
229: aload         17
231: invokespecial #47
234: astore        18
236: new           #23
239: dup
240: aload         13
242: dconst_0
243: ldc           #28
245: aload         17
247: invokespecial #83
250: astore        19
252: aload         19
254: invokevirtual #84
257: astore        20
259: iconst_1
260: newarray       double
262: dup
263: iconst_0
264: ldc2_w        #85
267: dastore
268: astore        21
270: new           #87
273: dup
274: aload         20
276: aload         21
278: invokespecial #88
281: astore        22
283: new           #87
286: dup
287: aload         12
289: aload         21
291: iconst_0
292: invokespecial #117
295: astore        23
297: new           #81
300: dup
301: iconst_m1
302: invokespecial #82
305: astore        24
307: aconst_null
308: astore        25
310: new           #27
313: dup
314: aload         25
316: invokespecial #39
319: astore        26
321: aconst_null
322: astore        27
324: iconst_2
325: anewarray     #5
328: dup
329: iconst_0
330: ldc           #28
332: aastore
333: dup
334: iconst_1
335: iconst_1
336: invokestatic  #17
339: aastore
340: astore        28
342: new           #27
345: dup
346: aload         25
348: aload         27
350: aload         28
352: invokespecial #47
355: astore        29
357: new           #23
360: dup
361: aload         24
363: dconst_0
364: ldc           #28
366: aload         28
368: invokespecial #83
371: astore        30
373: aload         30
375: invokevirtual #84
378: astore        31
380: iconst_1
381: newarray       double
383: dup
384: iconst_0
385: ldc2_w        #85
388: dastore
389: astore        32
391: new           #87
394: dup
395: aload         31
397: aload         32
399: invokespecial #88
402: astore        33
404: aload         4
406: iconst_0
407: aload         23
409: aload         33
411: invokevirtual #118
414: istore        34
416: aload         33
418: invokevirtual #157
421: astore        35
423: aload_1
424: aload         35
426: putfield      #52
429: aload_1
430: invokevirtual #78
433: astore        36
435: ldc           #54
437: invokestatic  #13
440: goto          445
443: astore        36
445: new           #64
448: dup
449: invokespecial #65
452: ldc           #66
454: invokevirtual #67
457: iload_2
458: invokevirtual #102
461: ldc           #69
463: invokevirtual #67
466: sipush        1000
469: invokevirtual #102
472: ldc           #66
474: invokevirtual #67
477: invokevirtual #71
480: iload_2
481: sipush        1000
484: if_icmpne     491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #73
495: aload         9
497: invokestatic  #56
500: aload         9
502: invokestatic  #57
505: ldc           #74
507: invokestatic  #59
510: aload         9
512: invokestatic  #60
515: ldc           #74
517: invokestatic  #59
520: aload         12
522: invokestatic  #56
525: aload         12
527: invokestatic  #61
530: ldc           #90
532: invokestatic  #59
535: aload         17
537: invokestatic  #56
540: aload         17
542: invokestatic  #57
545: ldc           #74
547: invokestatic  #59
550: aload         17
552: invokestatic  #60
555: ldc           #74
557: invokestatic  #59
560: aload         20
562: invokestatic  #56
565: aload         20
567: invokestatic  #61
570: ldc           #90
572: invokestatic  #59
575: aload         21
577: invokestatic  #56
580: aload         21
582: invokestatic  #61
585: ldc           #91
587: invokestatic  #59
590: aload         28
592: invokestatic  #56
595: aload         28
597: invokestatic  #57
600: ldc           #74
602: invokestatic  #59
605: aload         28
607: invokestatic  #60
610: ldc           #74
612: invokestatic  #59
615: aload         31
617: invokestatic  #56
620: aload         31
622: invokestatic  #61
625: ldc           #90
627: invokestatic  #59
630: aload         32
632: invokestatic  #56
635: aload         32
637: invokestatic  #61
640: ldc           #91
642: invokestatic  #59
645: new           #64
648: dup
649: invokespecial #65
652: ldc           #66
654: invokevirtual #67
657: iload         34
659: invokevirtual #119
662: ldc           #69
664: invokevirtual #67
667: iconst_1
668: invokevirtual #119
671: ldc           #66
673: invokevirtual #67
676: invokevirtual #71
679: iload         34
681: iconst_1
682: if_icmpne     689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #73
693: aload         35
695: invokestatic  #56
698: aload         35
700: invokestatic  #61
703: ldc           #91
705: invokestatic  #59
708: return
Exception table:
from    to  target type
429   440   443   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1281
End line: 1380
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9);
        double[] doubleArray12 = functionEvaluationException11.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer13 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray22 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable16, objArray22);
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException("hi!", objArray22);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable27, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException24, "hi!", objArray33);
        double[] doubleArray41 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        java.lang.Object[] objArray46 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException47 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray46);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException48 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable43, objArray46);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50);
        org.apache.commons.math.exception.util.Localizable localizable52 = mathRuntimeException51.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable54 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray57);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException59 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable54, objArray57);
        org.apache.commons.math.exception.util.Localizable localizable60 = null;
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException(throwable62);
        org.apache.commons.math.exception.util.Localizable localizable64 = mathRuntimeException63.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException70 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray69);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException71 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable66, objArray69);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable64, objArray69);
        java.lang.NullPointerException nullPointerException73 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray69);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException59, localizable60, objArray69);
        java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable52, objArray69);
        java.lang.Throwable throwable77 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException78 = new org.apache.commons.math.MathRuntimeException(throwable77);
        org.apache.commons.math.exception.util.Localizable localizable79 = null;
        java.lang.Object[] objArray82 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException83 = new org.apache.commons.math.MathRuntimeException(throwable77, localizable79, objArray82);
        java.lang.Object[] objArray84 = mathRuntimeException83.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException85 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException48, (double) 0L, localizable52, objArray84);
        java.lang.Object[] objArray87 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException24, doubleArray41, localizable52, objArray87);
        levenbergMarquardtOptimizer13.point = doubleArray41;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair90 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray41);
        double[] doubleArray91 = vectorialPointValuePair90.getPointRef();
        double[] doubleArray92 = vectorialPointValuePair90.getValue();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException47);
        org.junit.Assert.assertTrue("'" + localizable52 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable52.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertTrue("'" + localizable64 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable64.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException70);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNotNull(nullPointerException73);
        org.junit.Assert.assertNotNull(nullPointerException75);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException85);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #158
19: aastore
20: invokevirtual #7
23: pop
24: new           #81
27: dup
28: iconst_m1
29: invokespecial #82
32: astore_1
33: aconst_null
34: astore_2
35: new           #27
38: dup
39: aload_2
40: invokespecial #39
43: astore_3
44: aconst_null
45: astore        4
47: iconst_2
48: anewarray     #5
51: dup
52: iconst_0
53: ldc           #28
55: aastore
56: dup
57: iconst_1
58: iconst_1
59: invokestatic  #17
62: aastore
63: astore        5
65: new           #27
68: dup
69: aload_2
70: aload         4
72: aload         5
74: invokespecial #47
77: astore        6
79: new           #23
82: dup
83: aload_1
84: dconst_0
85: ldc           #28
87: aload         5
89: invokespecial #83
92: astore        7
94: aload         7
96: invokevirtual #84
99: astore        8
101: new           #8
104: dup
105: invokespecial #9
108: astore        9
110: aconst_null
111: astore        10
113: iconst_5
114: anewarray     #5
117: dup
118: iconst_0
119: iconst_0
120: invokestatic  #16
123: aastore
124: dup
125: iconst_1
126: iconst_0
127: invokestatic  #17
130: aastore
131: dup
132: iconst_2
133: bipush        52
135: invokestatic  #18
138: aastore
139: dup
140: iconst_3
141: ldc2_w        #19
144: invokestatic  #21
147: aastore
148: dup
149: iconst_4
150: dconst_1
151: invokestatic  #22
154: aastore
155: astore        11
157: new           #23
160: dup
161: ldc2_w        #24
164: aload         10
166: aload         11
168: invokespecial #26
171: astore        12
173: new           #27
176: dup
177: ldc           #28
179: aload         11
181: invokespecial #29
184: astore        13
186: aconst_null
187: astore        14
189: iconst_5
190: anewarray     #5
193: dup
194: iconst_0
195: iconst_0
196: invokestatic  #16
199: aastore
200: dup
201: iconst_1
202: iconst_0
203: invokestatic  #17
206: aastore
207: dup
208: iconst_2
209: bipush        52
211: invokestatic  #18
214: aastore
215: dup
216: iconst_3
217: ldc2_w        #19
220: invokestatic  #21
223: aastore
224: dup
225: iconst_4
226: dconst_1
227: invokestatic  #22
230: aastore
231: astore        15
233: new           #23
236: dup
237: ldc2_w        #24
240: aload         14
242: aload         15
244: invokespecial #26
247: astore        16
249: new           #27
252: dup
253: aload         13
255: ldc           #28
257: aload         15
259: invokespecial #30
262: astore        17
264: iconst_5
265: newarray       double
267: dup
268: iconst_0
269: ldc2_w        #31
272: dastore
273: dup
274: iconst_1
275: ldc2_w        #33
278: dastore
279: dup
280: iconst_2
281: ldc2_w        #31
284: dastore
285: dup
286: iconst_3
287: ldc2_w        #31
290: dastore
291: dup
292: iconst_4
293: dconst_1
294: dastore
295: astore        18
297: aconst_null
298: astore        19
300: iconst_1
301: anewarray     #5
304: dup
305: iconst_0
306: iconst_1
307: invokestatic  #35
310: aastore
311: astore        20
313: ldc           #28
315: aload         20
317: invokestatic  #36
320: astore        21
322: new           #37
325: dup
326: bipush        100
328: aload         19
330: aload         20
332: invokespecial #38
335: astore        22
337: aconst_null
338: astore        23
340: new           #27
343: dup
344: aload         23
346: invokespecial #39
349: astore        24
351: aload         24
353: invokevirtual #40
356: astore        25
358: aconst_null
359: astore        26
361: iconst_1
362: anewarray     #5
365: dup
366: iconst_0
367: iconst_1
368: invokestatic  #35
371: aastore
372: astore        27
374: ldc           #28
376: aload         27
378: invokestatic  #36
381: astore        28
383: new           #37
386: dup
387: bipush        100
389: aload         26
391: aload         27
393: invokespecial #38
396: astore        29
398: aconst_null
399: astore        30
401: aconst_null
402: astore        31
404: new           #27
407: dup
408: aload         31
410: invokespecial #39
413: astore        32
415: aload         32
417: invokevirtual #40
420: astore        33
422: aconst_null
423: astore        34
425: iconst_1
426: anewarray     #5
429: dup
430: iconst_0
431: iconst_1
432: invokestatic  #35
435: aastore
436: astore        35
438: ldc           #28
440: aload         35
442: invokestatic  #36
445: astore        36
447: new           #37
450: dup
451: bipush        100
453: aload         34
455: aload         35
457: invokespecial #38
460: astore        37
462: aload         33
464: aload         35
466: invokestatic  #41
469: astore        38
471: ldc           #42
473: aload         35
475: invokestatic  #43
478: astore        39
480: new           #44
483: dup
484: aload         29
486: aload         30
488: aload         35
490: invokespecial #45
493: astore        40
495: aload         25
497: aload         35
499: invokestatic  #46
502: astore        41
504: aconst_null
505: astore        42
507: new           #27
510: dup
511: aload         42
513: invokespecial #39
516: astore        43
518: aconst_null
519: astore        44
521: iconst_2
522: anewarray     #5
525: dup
526: iconst_0
527: ldc           #28
529: aastore
530: dup
531: iconst_1
532: iconst_1
533: invokestatic  #17
536: aastore
537: astore        45
539: new           #27
542: dup
543: aload         42
545: aload         44
547: aload         45
549: invokespecial #47
552: astore        46
554: aload         46
556: invokevirtual #48
559: astore        47
561: ldc           #42
563: aload         47
565: invokestatic  #49
568: astore        48
570: new           #23
573: dup
574: aload         22
576: dconst_0
577: aload         25
579: aload         47
581: invokespecial #50
584: astore        49
586: aconst_null
587: astore        50
589: new           #23
592: dup
593: aload         13
595: aload         18
597: aload         25
599: aload         50
601: invokespecial #51
604: astore        51
606: aload         9
608: aload         18
610: putfield      #52
613: new           #87
616: dup
617: aload         8
619: aload         18
621: invokespecial #88
624: astore        52
626: aload         52
628: invokevirtual #159
631: astore        53
633: aload         52
635: invokevirtual #157
638: astore        54
640: aload         5
642: invokestatic  #56
645: aload         5
647: invokestatic  #57
650: ldc           #74
652: invokestatic  #59
655: aload         5
657: invokestatic  #60
660: ldc           #74
662: invokestatic  #59
665: aload         8
667: invokestatic  #56
670: aload         8
672: invokestatic  #61
675: ldc           #90
677: invokestatic  #59
680: aload         11
682: invokestatic  #56
685: aload         11
687: invokestatic  #57
690: ldc           #58
692: invokestatic  #59
695: aload         11
697: invokestatic  #60
700: ldc           #58
702: invokestatic  #59
705: aload         15
707: invokestatic  #56
710: aload         15
712: invokestatic  #57
715: ldc           #58
717: invokestatic  #59
720: aload         15
722: invokestatic  #60
725: ldc           #58
727: invokestatic  #59
730: aload         18
732: invokestatic  #56
735: aload         18
737: invokestatic  #61
740: ldc           #62
742: invokestatic  #59
745: aload         20
747: invokestatic  #56
750: aload         20
752: invokestatic  #57
755: ldc           #63
757: invokestatic  #59
760: aload         20
762: invokestatic  #60
765: ldc           #63
767: invokestatic  #59
770: aload         21
772: invokestatic  #56
775: new           #64
778: dup
779: invokespecial #65
782: ldc           #66
784: invokevirtual #67
787: aload         25
789: invokevirtual #68
792: ldc           #69
794: invokevirtual #67
797: getstatic     #70
800: invokevirtual #68
803: ldc           #66
805: invokevirtual #67
808: invokevirtual #71
811: aload         25
813: getstatic     #70
816: invokevirtual #72
819: invokestatic  #73
822: aload         27
824: invokestatic  #56
827: aload         27
829: invokestatic  #57
832: ldc           #63
834: invokestatic  #59
837: aload         27
839: invokestatic  #60
842: ldc           #63
844: invokestatic  #59
847: aload         28
849: invokestatic  #56
852: new           #64
855: dup
856: invokespecial #65
859: ldc           #66
861: invokevirtual #67
864: aload         33
866: invokevirtual #68
869: ldc           #69
871: invokevirtual #67
874: getstatic     #70
877: invokevirtual #68
880: ldc           #66
882: invokevirtual #67
885: invokevirtual #71
888: aload         33
890: getstatic     #70
893: invokevirtual #72
896: invokestatic  #73
899: aload         35
901: invokestatic  #56
904: aload         35
906: invokestatic  #57
909: ldc           #63
911: invokestatic  #59
914: aload         35
916: invokestatic  #60
919: ldc           #63
921: invokestatic  #59
924: aload         36
926: invokestatic  #56
929: aload         38
931: invokestatic  #56
934: aload         39
936: invokestatic  #56
939: aload         41
941: invokestatic  #56
944: aload         45
946: invokestatic  #56
949: aload         45
951: invokestatic  #57
954: ldc           #74
956: invokestatic  #59
959: aload         45
961: invokestatic  #60
964: ldc           #74
966: invokestatic  #59
969: aload         47
971: invokestatic  #56
974: aload         47
976: invokestatic  #57
979: ldc           #74
981: invokestatic  #59
984: aload         47
986: invokestatic  #60
989: ldc           #74
991: invokestatic  #59
994: aload         48
996: invokestatic  #56
999: aload         53
1001: invokestatic  #56
1004: aload         53
1006: invokestatic  #61
1009: ldc           #90
1011: invokestatic  #59
1014: aload         54
1016: invokestatic  #56
1019: aload         54
1021: invokestatic  #61
1024: ldc           #62
1026: invokestatic  #59
1029: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1383
End line: 1396
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        int int8 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1000 + "'", int8 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: aload_1
66: invokevirtual #98
69: istore        4
71: aload_2
72: invokestatic  #56
75: aload_2
76: invokestatic  #61
79: ldc           #134
81: invokestatic  #59
84: aload_3
85: invokestatic  #56
88: new           #64
91: dup
92: invokespecial #65
95: ldc           #66
97: invokevirtual #67
100: iload         4
102: invokevirtual #102
105: ldc           #69
107: invokevirtual #67
110: sipush        1000
113: invokevirtual #102
116: ldc           #66
118: invokevirtual #67
121: invokevirtual #71
124: iload         4
126: sipush        1000
129: if_icmpne     136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #73
140: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1399
End line: 1479
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (short) 100);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: ldc2_w        #95
533: invokevirtual #162
536: aload_3
537: invokestatic  #56
540: aload_3
541: invokestatic  #57
544: ldc           #58
546: invokestatic  #59
549: aload_3
550: invokestatic  #60
553: ldc           #58
555: invokestatic  #59
558: aload         7
560: invokestatic  #56
563: aload         7
565: invokestatic  #57
568: ldc           #58
570: invokestatic  #59
573: aload         7
575: invokestatic  #60
578: ldc           #58
580: invokestatic  #59
583: aload         10
585: invokestatic  #56
588: aload         10
590: invokestatic  #61
593: ldc           #62
595: invokestatic  #59
598: aload         12
600: invokestatic  #56
603: aload         12
605: invokestatic  #57
608: ldc           #63
610: invokestatic  #59
613: aload         12
615: invokestatic  #60
618: ldc           #63
620: invokestatic  #59
623: aload         13
625: invokestatic  #56
628: new           #64
631: dup
632: invokespecial #65
635: ldc           #66
637: invokevirtual #67
640: aload         17
642: invokevirtual #68
645: ldc           #69
647: invokevirtual #67
650: getstatic     #70
653: invokevirtual #68
656: ldc           #66
658: invokevirtual #67
661: invokevirtual #71
664: aload         17
666: getstatic     #70
669: invokevirtual #72
672: invokestatic  #73
675: aload         19
677: invokestatic  #56
680: aload         19
682: invokestatic  #57
685: ldc           #63
687: invokestatic  #59
690: aload         19
692: invokestatic  #60
695: ldc           #63
697: invokestatic  #59
700: aload         20
702: invokestatic  #56
705: new           #64
708: dup
709: invokespecial #65
712: ldc           #66
714: invokevirtual #67
717: aload         25
719: invokevirtual #68
722: ldc           #69
724: invokevirtual #67
727: getstatic     #70
730: invokevirtual #68
733: ldc           #66
735: invokevirtual #67
738: invokevirtual #71
741: aload         25
743: getstatic     #70
746: invokevirtual #72
749: invokestatic  #73
752: aload         27
754: invokestatic  #56
757: aload         27
759: invokestatic  #57
762: ldc           #63
764: invokestatic  #59
767: aload         27
769: invokestatic  #60
772: ldc           #63
774: invokestatic  #59
777: aload         28
779: invokestatic  #56
782: aload         30
784: invokestatic  #56
787: aload         31
789: invokestatic  #56
792: aload         33
794: invokestatic  #56
797: aload         37
799: invokestatic  #56
802: aload         37
804: invokestatic  #57
807: ldc           #74
809: invokestatic  #59
812: aload         37
814: invokestatic  #60
817: ldc           #74
819: invokestatic  #59
822: aload         39
824: invokestatic  #56
827: aload         39
829: invokestatic  #57
832: ldc           #74
834: invokestatic  #59
837: aload         39
839: invokestatic  #60
842: ldc           #74
844: invokestatic  #59
847: aload         40
849: invokestatic  #56
852: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1482
End line: 1506
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        int int18 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #163
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: invokevirtual #126
144: istore        12
146: aload         6
148: invokestatic  #56
151: aload         6
153: invokestatic  #57
156: ldc           #74
158: invokestatic  #59
161: aload         6
163: invokestatic  #60
166: ldc           #74
168: invokestatic  #59
171: aload         9
173: invokestatic  #56
176: aload         9
178: invokestatic  #61
181: ldc           #90
183: invokestatic  #59
186: aload         10
188: invokestatic  #56
191: aload         10
193: invokestatic  #61
196: ldc           #91
198: invokestatic  #59
201: new           #64
204: dup
205: invokespecial #65
208: ldc           #66
210: invokevirtual #67
213: iload         12
215: invokevirtual #102
218: ldc           #69
220: invokevirtual #67
223: iconst_0
224: invokevirtual #102
227: ldc           #66
229: invokevirtual #67
232: invokevirtual #71
235: iload         12
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #73
248: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1509
End line: 1540
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateJacobian();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: getfield      #113
144: astore        12
146: aload_1
147: invokevirtual #165
150: ldc           #54
152: invokestatic  #13
155: goto          160
158: astore        13
160: aload         6
162: invokestatic  #56
165: aload         6
167: invokestatic  #57
170: ldc           #74
172: invokestatic  #59
175: aload         6
177: invokestatic  #60
180: ldc           #74
182: invokestatic  #59
185: aload         9
187: invokestatic  #56
190: aload         9
192: invokestatic  #61
195: ldc           #90
197: invokestatic  #59
200: aload         10
202: invokestatic  #56
205: aload         10
207: invokestatic  #61
210: ldc           #91
212: invokestatic  #59
215: aload         12
217: invokestatic  #106
220: return
Exception table:
from    to  target type
146   155   158   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1543
End line: 1558
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        int int8 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #166
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: aload_1
66: invokevirtual #167
69: istore        4
71: aload_1
72: getfield      #52
75: astore        5
77: aload_2
78: invokestatic  #56
81: aload_2
82: invokestatic  #61
85: ldc           #134
87: invokestatic  #59
90: aload_3
91: invokestatic  #56
94: new           #64
97: dup
98: invokespecial #65
101: ldc           #66
103: invokevirtual #67
106: iload         4
108: invokevirtual #102
111: ldc           #69
113: invokevirtual #67
116: iconst_0
117: invokevirtual #102
120: ldc           #66
122: invokevirtual #67
125: invokevirtual #71
128: iload         4
130: ifne          137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #73
141: aload         5
143: invokestatic  #106
146: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1561
End line: 1649
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int82 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1000 + "'", int82 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #168
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: invokevirtual #98
550: istore        47
552: aload_1
553: invokevirtual #98
556: istore        48
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: dload         44
888: invokevirtual #79
891: ldc           #69
893: invokevirtual #67
896: dconst_0
897: invokevirtual #79
900: ldc           #66
902: invokevirtual #67
905: invokevirtual #71
908: dload         44
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #73
923: aload         46
925: invokestatic  #106
928: new           #64
931: dup
932: invokespecial #65
935: ldc           #66
937: invokevirtual #67
940: iload         47
942: invokevirtual #102
945: ldc           #69
947: invokevirtual #67
950: sipush        1000
953: invokevirtual #102
956: ldc           #66
958: invokevirtual #67
961: invokevirtual #71
964: iload         47
966: sipush        1000
969: if_icmpne     976
972: iconst_1
973: goto          977
976: iconst_0
977: invokestatic  #73
980: new           #64
983: dup
984: invokespecial #65
987: ldc           #66
989: invokevirtual #67
992: iload         48
994: invokevirtual #102
997: ldc           #69
999: invokevirtual #67
1002: sipush        1000
1005: invokevirtual #102
1008: ldc           #66
1010: invokevirtual #67
1013: invokevirtual #71
1016: iload         48
1018: sipush        1000
1021: if_icmpne     1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #73
1032: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1652
End line: 1668
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray10 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #169
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #10
60: aload_1
61: invokevirtual #11
64: astore_2
65: ldc           #12
67: invokestatic  #13
70: goto          74
73: astore_2
74: return
Exception table:
from    to  target type
60    70    73   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1671
End line: 1761
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        double[] doubleArray25 = functionEvaluationException23.getArgument();
        levenbergMarquardtOptimizer6.objective = doubleArray25;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray41 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer45.rows = 0;
        levenbergMarquardtOptimizer45.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray50 = levenbergMarquardtOptimizer45.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException52 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable55);
        org.apache.commons.math.exception.util.Localizable localizable57 = null;
        java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException61 = new org.apache.commons.math.MathRuntimeException(throwable55, localizable57, objArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException52, 0.0d, "hi!", objArray60);
        double[] doubleArray63 = functionEvaluationException62.getArgument();
        double[] doubleArray64 = functionEvaluationException62.getArgument();
        levenbergMarquardtOptimizer45.objective = doubleArray64;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException67 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable70);
        org.apache.commons.math.exception.util.Localizable localizable72 = null;
        java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable70, localizable72, objArray75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException67, 0.0d, "hi!", objArray75);
        double[] doubleArray78 = functionEvaluationException77.getArgument();
        double[] doubleArray80 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray78, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray78);
        levenbergMarquardtOptimizer0.residuals = doubleArray78;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #170
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #8
50: dup
51: invokespecial #9
54: astore_3
55: aload_3
56: iconst_0
57: putfield      #93
60: aload_3
61: iconst_1
62: invokevirtual #76
65: aload_3
66: getfield      #113
69: astore        4
71: new           #81
74: dup
75: iconst_m1
76: invokespecial #82
79: astore        5
81: aconst_null
82: astore        6
84: new           #27
87: dup
88: aload         6
90: invokespecial #39
93: astore        7
95: aconst_null
96: astore        8
98: iconst_2
99: anewarray     #5
102: dup
103: iconst_0
104: ldc           #28
106: aastore
107: dup
108: iconst_1
109: iconst_1
110: invokestatic  #17
113: aastore
114: astore        9
116: new           #27
119: dup
120: aload         6
122: aload         8
124: aload         9
126: invokespecial #47
129: astore        10
131: new           #23
134: dup
135: aload         5
137: dconst_0
138: ldc           #28
140: aload         9
142: invokespecial #83
145: astore        11
147: aload         11
149: invokevirtual #84
152: astore        12
154: aload         11
156: invokevirtual #84
159: astore        13
161: aload_3
162: aload         13
164: putfield      #114
167: new           #81
170: dup
171: iconst_m1
172: invokespecial #82
175: astore        14
177: aconst_null
178: astore        15
180: new           #27
183: dup
184: aload         15
186: invokespecial #39
189: astore        16
191: aconst_null
192: astore        17
194: iconst_2
195: anewarray     #5
198: dup
199: iconst_0
200: ldc           #28
202: aastore
203: dup
204: iconst_1
205: iconst_1
206: invokestatic  #17
209: aastore
210: astore        18
212: new           #27
215: dup
216: aload         15
218: aload         17
220: aload         18
222: invokespecial #47
225: astore        19
227: new           #23
230: dup
231: aload         14
233: dconst_0
234: ldc           #28
236: aload         18
238: invokespecial #83
241: astore        20
243: aload         20
245: invokevirtual #84
248: astore        21
250: iconst_1
251: newarray       double
253: dup
254: iconst_0
255: ldc2_w        #85
258: dastore
259: astore        22
261: new           #87
264: dup
265: aload         21
267: aload         22
269: invokespecial #88
272: astore        23
274: new           #87
277: dup
278: aload         13
280: aload         21
282: iconst_0
283: invokespecial #117
286: astore        24
288: new           #8
291: dup
292: invokespecial #9
295: astore        25
297: aload         25
299: iconst_0
300: putfield      #93
303: aload         25
305: iconst_1
306: invokevirtual #76
309: aload         25
311: getfield      #113
314: astore        26
316: new           #81
319: dup
320: iconst_m1
321: invokespecial #82
324: astore        27
326: aconst_null
327: astore        28
329: new           #27
332: dup
333: aload         28
335: invokespecial #39
338: astore        29
340: aconst_null
341: astore        30
343: iconst_2
344: anewarray     #5
347: dup
348: iconst_0
349: ldc           #28
351: aastore
352: dup
353: iconst_1
354: iconst_1
355: invokestatic  #17
358: aastore
359: astore        31
361: new           #27
364: dup
365: aload         28
367: aload         30
369: aload         31
371: invokespecial #47
374: astore        32
376: new           #23
379: dup
380: aload         27
382: dconst_0
383: ldc           #28
385: aload         31
387: invokespecial #83
390: astore        33
392: aload         33
394: invokevirtual #84
397: astore        34
399: aload         33
401: invokevirtual #84
404: astore        35
406: aload         25
408: aload         35
410: putfield      #114
413: new           #81
416: dup
417: iconst_m1
418: invokespecial #82
421: astore        36
423: aconst_null
424: astore        37
426: new           #27
429: dup
430: aload         37
432: invokespecial #39
435: astore        38
437: aconst_null
438: astore        39
440: iconst_2
441: anewarray     #5
444: dup
445: iconst_0
446: ldc           #28
448: aastore
449: dup
450: iconst_1
451: iconst_1
452: invokestatic  #17
455: aastore
456: astore        40
458: new           #27
461: dup
462: aload         37
464: aload         39
466: aload         40
468: invokespecial #47
471: astore        41
473: new           #23
476: dup
477: aload         36
479: dconst_0
480: ldc           #28
482: aload         40
484: invokespecial #83
487: astore        42
489: aload         42
491: invokevirtual #84
494: astore        43
496: iconst_1
497: newarray       double
499: dup
500: iconst_0
501: ldc2_w        #85
504: dastore
505: astore        44
507: new           #87
510: dup
511: aload         43
513: aload         44
515: invokespecial #88
518: astore        45
520: new           #87
523: dup
524: aload         35
526: aload         43
528: iconst_0
529: invokespecial #117
532: astore        46
534: new           #87
537: dup
538: aload         13
540: aload         43
542: invokespecial #88
545: astore        47
547: aload_1
548: aload         43
550: putfield      #122
553: aload_2
554: invokestatic  #106
557: aload         4
559: invokestatic  #106
562: aload         9
564: invokestatic  #56
567: aload         9
569: invokestatic  #57
572: ldc           #74
574: invokestatic  #59
577: aload         9
579: invokestatic  #60
582: ldc           #74
584: invokestatic  #59
587: aload         12
589: invokestatic  #56
592: aload         12
594: invokestatic  #61
597: ldc           #90
599: invokestatic  #59
602: aload         13
604: invokestatic  #56
607: aload         13
609: invokestatic  #61
612: ldc           #90
614: invokestatic  #59
617: aload         18
619: invokestatic  #56
622: aload         18
624: invokestatic  #57
627: ldc           #74
629: invokestatic  #59
632: aload         18
634: invokestatic  #60
637: ldc           #74
639: invokestatic  #59
642: aload         21
644: invokestatic  #56
647: aload         21
649: invokestatic  #61
652: ldc           #90
654: invokestatic  #59
657: aload         22
659: invokestatic  #56
662: aload         22
664: invokestatic  #61
667: ldc           #91
669: invokestatic  #59
672: aload         26
674: invokestatic  #106
677: aload         31
679: invokestatic  #56
682: aload         31
684: invokestatic  #57
687: ldc           #74
689: invokestatic  #59
692: aload         31
694: invokestatic  #60
697: ldc           #74
699: invokestatic  #59
702: aload         34
704: invokestatic  #56
707: aload         34
709: invokestatic  #61
712: ldc           #90
714: invokestatic  #59
717: aload         35
719: invokestatic  #56
722: aload         35
724: invokestatic  #61
727: ldc           #90
729: invokestatic  #59
732: aload         40
734: invokestatic  #56
737: aload         40
739: invokestatic  #57
742: ldc           #74
744: invokestatic  #59
747: aload         40
749: invokestatic  #60
752: ldc           #74
754: invokestatic  #59
757: aload         43
759: invokestatic  #56
762: aload         43
764: invokestatic  #61
767: ldc           #90
769: invokestatic  #59
772: aload         44
774: invokestatic  #56
777: aload         44
779: invokestatic  #61
782: ldc           #91
784: invokestatic  #59
787: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1764
End line: 1830
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction10 = null;
        double[] doubleArray11 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        double[] doubleArray25 = functionEvaluationException23.getArgument();
        double[] doubleArray26 = functionEvaluationException23.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer27 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer27.rows = 0;
        levenbergMarquardtOptimizer27.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray32 = levenbergMarquardtOptimizer27.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException34 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable37, localizable39, objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException34, 0.0d, "hi!", objArray42);
        double[] doubleArray45 = functionEvaluationException44.getArgument();
        double[] doubleArray47 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(doubleArray47);
        levenbergMarquardtOptimizer27.residuals = doubleArray47;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair52 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray47, true);
        double[] doubleArray53 = new double[] {};
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException(doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction10, doubleArray11, doubleArray26, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #171
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #10
60: aconst_null
61: astore_2
62: aconst_null
63: astore_3
64: new           #81
67: dup
68: iconst_m1
69: invokespecial #82
72: astore        4
74: aconst_null
75: astore        5
77: new           #27
80: dup
81: aload         5
83: invokespecial #39
86: astore        6
88: aconst_null
89: astore        7
91: iconst_2
92: anewarray     #5
95: dup
96: iconst_0
97: ldc           #28
99: aastore
100: dup
101: iconst_1
102: iconst_1
103: invokestatic  #17
106: aastore
107: astore        8
109: new           #27
112: dup
113: aload         5
115: aload         7
117: aload         8
119: invokespecial #47
122: astore        9
124: new           #23
127: dup
128: aload         4
130: dconst_0
131: ldc           #28
133: aload         8
135: invokespecial #83
138: astore        10
140: aload         10
142: invokevirtual #84
145: astore        11
147: aload         10
149: invokevirtual #84
152: astore        12
154: aload         10
156: invokevirtual #84
159: astore        13
161: new           #8
164: dup
165: invokespecial #9
168: astore        14
170: aload         14
172: iconst_0
173: putfield      #93
176: aload         14
178: iconst_1
179: invokevirtual #76
182: aload         14
184: getfield      #113
187: astore        15
189: new           #81
192: dup
193: iconst_m1
194: invokespecial #82
197: astore        16
199: aconst_null
200: astore        17
202: new           #27
205: dup
206: aload         17
208: invokespecial #39
211: astore        18
213: aconst_null
214: astore        19
216: iconst_2
217: anewarray     #5
220: dup
221: iconst_0
222: ldc           #28
224: aastore
225: dup
226: iconst_1
227: iconst_1
228: invokestatic  #17
231: aastore
232: astore        20
234: new           #27
237: dup
238: aload         17
240: aload         19
242: aload         20
244: invokespecial #47
247: astore        21
249: new           #23
252: dup
253: aload         16
255: dconst_0
256: ldc           #28
258: aload         20
260: invokespecial #83
263: astore        22
265: aload         22
267: invokevirtual #84
270: astore        23
272: iconst_1
273: newarray       double
275: dup
276: iconst_0
277: ldc2_w        #85
280: dastore
281: astore        24
283: new           #87
286: dup
287: aload         23
289: aload         24
291: invokespecial #88
294: astore        25
296: new           #23
299: dup
300: aload         24
302: invokespecial #89
305: astore        26
307: aload         14
309: aload         24
311: putfield      #122
314: new           #87
317: dup
318: aload         13
320: aload         24
322: iconst_1
323: invokespecial #117
326: astore        27
328: iconst_0
329: newarray       double
331: astore        28
333: new           #23
336: dup
337: aload         28
339: invokespecial #89
342: astore        29
344: aload_1
345: aload_2
346: aload_3
347: aload         13
349: aload         28
351: invokevirtual #124
354: astore        30
356: ldc           #54
358: invokestatic  #13
361: goto          366
364: astore        30
366: aload         8
368: invokestatic  #56
371: aload         8
373: invokestatic  #57
376: ldc           #74
378: invokestatic  #59
381: aload         8
383: invokestatic  #60
386: ldc           #74
388: invokestatic  #59
391: aload         11
393: invokestatic  #56
396: aload         11
398: invokestatic  #61
401: ldc           #90
403: invokestatic  #59
406: aload         12
408: invokestatic  #56
411: aload         12
413: invokestatic  #61
416: ldc           #90
418: invokestatic  #59
421: aload         13
423: invokestatic  #56
426: aload         13
428: invokestatic  #61
431: ldc           #90
433: invokestatic  #59
436: aload         15
438: invokestatic  #106
441: aload         20
443: invokestatic  #56
446: aload         20
448: invokestatic  #57
451: ldc           #74
453: invokestatic  #59
456: aload         20
458: invokestatic  #60
461: ldc           #74
463: invokestatic  #59
466: aload         23
468: invokestatic  #56
471: aload         23
473: invokestatic  #61
476: ldc           #90
478: invokestatic  #59
481: aload         24
483: invokestatic  #56
486: aload         24
488: invokestatic  #61
491: ldc           #91
493: invokestatic  #59
496: aload         28
498: invokestatic  #56
501: aload         28
503: invokestatic  #61
506: ldc           #172
508: invokestatic  #59
511: return
Exception table:
from    to  target type
344   361   364   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1833
End line: 1928
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker82 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateResidualsAndCost();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: invokevirtual #98
550: istore        47
552: aload_1
553: invokevirtual #104
556: astore        48
558: aload_1
559: invokevirtual #174
562: ldc           #54
564: invokestatic  #13
567: goto          572
570: astore        49
572: aload_3
573: invokestatic  #56
576: aload_3
577: invokestatic  #57
580: ldc           #58
582: invokestatic  #59
585: aload_3
586: invokestatic  #60
589: ldc           #58
591: invokestatic  #59
594: aload         7
596: invokestatic  #56
599: aload         7
601: invokestatic  #57
604: ldc           #58
606: invokestatic  #59
609: aload         7
611: invokestatic  #60
614: ldc           #58
616: invokestatic  #59
619: aload         10
621: invokestatic  #56
624: aload         10
626: invokestatic  #61
629: ldc           #62
631: invokestatic  #59
634: aload         12
636: invokestatic  #56
639: aload         12
641: invokestatic  #57
644: ldc           #63
646: invokestatic  #59
649: aload         12
651: invokestatic  #60
654: ldc           #63
656: invokestatic  #59
659: aload         13
661: invokestatic  #56
664: new           #64
667: dup
668: invokespecial #65
671: ldc           #66
673: invokevirtual #67
676: aload         17
678: invokevirtual #68
681: ldc           #69
683: invokevirtual #67
686: getstatic     #70
689: invokevirtual #68
692: ldc           #66
694: invokevirtual #67
697: invokevirtual #71
700: aload         17
702: getstatic     #70
705: invokevirtual #72
708: invokestatic  #73
711: aload         19
713: invokestatic  #56
716: aload         19
718: invokestatic  #57
721: ldc           #63
723: invokestatic  #59
726: aload         19
728: invokestatic  #60
731: ldc           #63
733: invokestatic  #59
736: aload         20
738: invokestatic  #56
741: new           #64
744: dup
745: invokespecial #65
748: ldc           #66
750: invokevirtual #67
753: aload         25
755: invokevirtual #68
758: ldc           #69
760: invokevirtual #67
763: getstatic     #70
766: invokevirtual #68
769: ldc           #66
771: invokevirtual #67
774: invokevirtual #71
777: aload         25
779: getstatic     #70
782: invokevirtual #72
785: invokestatic  #73
788: aload         27
790: invokestatic  #56
793: aload         27
795: invokestatic  #57
798: ldc           #63
800: invokestatic  #59
803: aload         27
805: invokestatic  #60
808: ldc           #63
810: invokestatic  #59
813: aload         28
815: invokestatic  #56
818: aload         30
820: invokestatic  #56
823: aload         31
825: invokestatic  #56
828: aload         33
830: invokestatic  #56
833: aload         37
835: invokestatic  #56
838: aload         37
840: invokestatic  #57
843: ldc           #74
845: invokestatic  #59
848: aload         37
850: invokestatic  #60
853: ldc           #74
855: invokestatic  #59
858: aload         39
860: invokestatic  #56
863: aload         39
865: invokestatic  #57
868: ldc           #74
870: invokestatic  #59
873: aload         39
875: invokestatic  #60
878: ldc           #74
880: invokestatic  #59
883: aload         40
885: invokestatic  #56
888: new           #64
891: dup
892: invokespecial #65
895: ldc           #66
897: invokevirtual #67
900: dload         44
902: invokevirtual #79
905: ldc           #69
907: invokevirtual #67
910: dconst_0
911: invokevirtual #79
914: ldc           #66
916: invokevirtual #67
919: invokevirtual #71
922: dload         44
924: dconst_0
925: dcmpl
926: ifne          933
929: iconst_1
930: goto          934
933: iconst_0
934: invokestatic  #73
937: aload         46
939: invokestatic  #106
942: new           #64
945: dup
946: invokespecial #65
949: ldc           #66
951: invokevirtual #67
954: iload         47
956: invokevirtual #102
959: ldc           #69
961: invokevirtual #67
964: sipush        1000
967: invokevirtual #102
970: ldc           #66
972: invokevirtual #67
975: invokevirtual #71
978: iload         47
980: sipush        1000
983: if_icmpne     990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #73
994: aload         48
996: invokestatic  #106
999: return
Exception table:
from    to  target type
558   567   570   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1931
End line: 1975
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = mathRuntimeException1.getLocalizablePattern();
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException7 = new org.apache.commons.math.MathRuntimeException(throwable6);
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable6, localizable8, objArray11);
        java.lang.Object[] objArray13 = mathRuntimeException12.getArguments();
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray13);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer18.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray23 = new double[] { (-1), 1.0f };
        double[][] doubleArray24 = new double[][] { doubleArray23 };
        levenbergMarquardtOptimizer18.jacobian = doubleArray24;
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray24);
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) doubleArray24);
        java.util.Locale locale28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = localizable2.getLocalizedString(locale28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + localizable2 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable2.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(concurrentModificationException26);
        org.junit.Assert.assertNotNull(illegalStateException27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #27
29: dup
30: aload_1
31: invokespecial #39
34: astore_2
35: aload_2
36: invokevirtual #40
39: astore_3
40: aconst_null
41: astore        4
43: new           #27
46: dup
47: aload         4
49: invokespecial #39
52: astore        5
54: aconst_null
55: astore        6
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        7
75: new           #27
78: dup
79: aload         4
81: aload         6
83: aload         7
85: invokespecial #47
88: astore        8
90: aload         8
92: invokevirtual #48
95: astore        9
97: bipush        52
99: ldc           #28
101: aload         9
103: invokestatic  #176
106: astore        10
108: ldc           #142
110: aload         9
112: invokestatic  #49
115: astore        11
117: new           #27
120: dup
121: aload_3
122: aload         9
124: invokespecial #177
127: astore        12
129: new           #8
132: dup
133: invokespecial #9
136: astore        13
138: aload         13
140: dconst_0
141: invokevirtual #129
144: iconst_2
145: newarray       double
147: dup
148: iconst_0
149: ldc2_w        #31
152: dastore
153: dup
154: iconst_1
155: dconst_1
156: dastore
157: astore        14
159: iconst_1
160: anewarray     #130
163: dup
164: iconst_0
165: aload         14
167: aastore
168: astore        15
170: aload         13
172: aload         15
174: putfield      #131
177: ldc           #28
179: aload         15
181: checkcast     #143
184: invokestatic  #36
187: astore        16
189: aload_3
190: aload         15
192: checkcast     #143
195: invokestatic  #178
198: astore        17
200: aconst_null
201: astore        18
203: aload_3
204: aload         18
206: invokeinterface #179,  2
211: astore        19
213: ldc           #54
215: invokestatic  #13
218: goto          223
221: astore        19
223: new           #64
226: dup
227: invokespecial #65
230: ldc           #66
232: invokevirtual #67
235: aload_3
236: invokevirtual #68
239: ldc           #69
241: invokevirtual #67
244: getstatic     #70
247: invokevirtual #68
250: ldc           #66
252: invokevirtual #67
255: invokevirtual #71
258: aload_3
259: getstatic     #70
262: invokevirtual #72
265: invokestatic  #73
268: aload         7
270: invokestatic  #56
273: aload         7
275: invokestatic  #57
278: ldc           #74
280: invokestatic  #59
283: aload         7
285: invokestatic  #60
288: ldc           #74
290: invokestatic  #59
293: aload         9
295: invokestatic  #56
298: aload         9
300: invokestatic  #57
303: ldc           #74
305: invokestatic  #59
308: aload         9
310: invokestatic  #60
313: ldc           #74
315: invokestatic  #59
318: aload         10
320: invokestatic  #56
323: aload         11
325: invokestatic  #56
328: aload         14
330: invokestatic  #56
333: aload         14
335: invokestatic  #61
338: ldc           #134
340: invokestatic  #59
343: aload         15
345: invokestatic  #56
348: aload         16
350: invokestatic  #56
353: aload         17
355: invokestatic  #56
358: return
Exception table:
from    to  target type
203   218   221   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1978
End line: 1987
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        int int7 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_m1
39: invokevirtual #76
42: aload_1
43: bipush        97
45: invokevirtual #76
48: aload_1
49: invokevirtual #133
52: istore_2
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: iconst_0
75: invokevirtual #102
78: ldc           #66
80: invokevirtual #67
83: invokevirtual #71
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #73
98: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1990
End line: 2017
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        levenbergMarquardtOptimizer0.setMaxIterations((int) ' ');
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: bipush        32
151: invokevirtual #182
154: aload_2
155: invokestatic  #106
158: aload         7
160: invokestatic  #56
163: aload         7
165: invokestatic  #57
168: ldc           #74
170: invokestatic  #59
173: aload         7
175: invokestatic  #60
178: ldc           #74
180: invokestatic  #59
183: aload         10
185: invokestatic  #56
188: aload         10
190: invokestatic  #61
193: ldc           #90
195: invokestatic  #59
198: aload         11
200: invokestatic  #56
203: aload         11
205: invokestatic  #61
208: ldc           #90
210: invokestatic  #59
213: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 2020
End line: 2100
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        int int24 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction25 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer26 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer26.rows = 0;
        levenbergMarquardtOptimizer26.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray31 = levenbergMarquardtOptimizer26.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36);
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41);
        double[] doubleArray44 = functionEvaluationException43.getArgument();
        double[] doubleArray45 = functionEvaluationException43.getArgument();
        levenbergMarquardtOptimizer26.objective = doubleArray45;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(doubleArray45);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException49 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52);
        org.apache.commons.math.exception.util.Localizable localizable54 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable52, localizable54, objArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException49, 0.0d, "hi!", objArray57);
        double[] doubleArray60 = functionEvaluationException59.getArgument();
        double[] doubleArray62 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair63 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62);
        double[] doubleArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction25, doubleArray45, doubleArray62, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: getfield      #140
152: astore        12
154: aload_1
155: invokevirtual #167
158: istore        13
160: aconst_null
161: astore        14
163: new           #8
166: dup
167: invokespecial #9
170: astore        15
172: aload         15
174: iconst_0
175: putfield      #93
178: aload         15
180: iconst_1
181: invokevirtual #76
184: aload         15
186: getfield      #113
189: astore        16
191: new           #81
194: dup
195: iconst_m1
196: invokespecial #82
199: astore        17
201: aconst_null
202: astore        18
204: new           #27
207: dup
208: aload         18
210: invokespecial #39
213: astore        19
215: aconst_null
216: astore        20
218: iconst_2
219: anewarray     #5
222: dup
223: iconst_0
224: ldc           #28
226: aastore
227: dup
228: iconst_1
229: iconst_1
230: invokestatic  #17
233: aastore
234: astore        21
236: new           #27
239: dup
240: aload         18
242: aload         20
244: aload         21
246: invokespecial #47
249: astore        22
251: new           #23
254: dup
255: aload         17
257: dconst_0
258: ldc           #28
260: aload         21
262: invokespecial #83
265: astore        23
267: aload         23
269: invokevirtual #84
272: astore        24
274: aload         23
276: invokevirtual #84
279: astore        25
281: aload         15
283: aload         25
285: putfield      #114
288: new           #23
291: dup
292: aload         25
294: invokespecial #89
297: astore        26
299: new           #81
302: dup
303: iconst_m1
304: invokespecial #82
307: astore        27
309: aconst_null
310: astore        28
312: new           #27
315: dup
316: aload         28
318: invokespecial #39
321: astore        29
323: aconst_null
324: astore        30
326: iconst_2
327: anewarray     #5
330: dup
331: iconst_0
332: ldc           #28
334: aastore
335: dup
336: iconst_1
337: iconst_1
338: invokestatic  #17
341: aastore
342: astore        31
344: new           #27
347: dup
348: aload         28
350: aload         30
352: aload         31
354: invokespecial #47
357: astore        32
359: new           #23
362: dup
363: aload         27
365: dconst_0
366: ldc           #28
368: aload         31
370: invokespecial #83
373: astore        33
375: aload         33
377: invokevirtual #84
380: astore        34
382: iconst_1
383: newarray       double
385: dup
386: iconst_0
387: ldc2_w        #85
390: dastore
391: astore        35
393: new           #87
396: dup
397: aload         34
399: aload         35
401: invokespecial #88
404: astore        36
406: new           #23
409: dup
410: aload         35
412: invokespecial #89
415: astore        37
417: aconst_null
418: astore        38
420: aload_1
421: aload         14
423: aload         25
425: aload         35
427: aload         38
429: invokevirtual #124
432: astore        39
434: ldc           #54
436: invokestatic  #13
439: goto          444
442: astore        39
444: aload_2
445: invokestatic  #106
448: aload         7
450: invokestatic  #56
453: aload         7
455: invokestatic  #57
458: ldc           #74
460: invokestatic  #59
463: aload         7
465: invokestatic  #60
468: ldc           #74
470: invokestatic  #59
473: aload         10
475: invokestatic  #56
478: aload         10
480: invokestatic  #61
483: ldc           #90
485: invokestatic  #59
488: aload         11
490: invokestatic  #56
493: aload         11
495: invokestatic  #61
498: ldc           #90
500: invokestatic  #59
503: aload         12
505: invokestatic  #106
508: new           #64
511: dup
512: invokespecial #65
515: ldc           #66
517: invokevirtual #67
520: iload         13
522: invokevirtual #102
525: ldc           #69
527: invokevirtual #67
530: iconst_0
531: invokevirtual #102
534: ldc           #66
536: invokevirtual #67
539: invokevirtual #71
542: iload         13
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #73
555: aload         16
557: invokestatic  #106
560: aload         21
562: invokestatic  #56
565: aload         21
567: invokestatic  #57
570: ldc           #74
572: invokestatic  #59
575: aload         21
577: invokestatic  #60
580: ldc           #74
582: invokestatic  #59
585: aload         24
587: invokestatic  #56
590: aload         24
592: invokestatic  #61
595: ldc           #90
597: invokestatic  #59
600: aload         25
602: invokestatic  #56
605: aload         25
607: invokestatic  #61
610: ldc           #90
612: invokestatic  #59
615: aload         31
617: invokestatic  #56
620: aload         31
622: invokestatic  #57
625: ldc           #74
627: invokestatic  #59
630: aload         31
632: invokestatic  #60
635: ldc           #74
637: invokestatic  #59
640: aload         34
642: invokestatic  #56
645: aload         34
647: invokestatic  #61
650: ldc           #90
652: invokestatic  #59
655: aload         35
657: invokestatic  #56
660: aload         35
662: invokestatic  #61
665: ldc           #91
667: invokestatic  #59
670: return
Exception table:
from    to  target type
420   439   442   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 2103
End line: 2151
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer1.rows = 0;
        levenbergMarquardtOptimizer1.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray6 = levenbergMarquardtOptimizer1.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16);
        double[] doubleArray19 = functionEvaluationException18.getArgument();
        double[] doubleArray20 = functionEvaluationException18.getArgument();
        levenbergMarquardtOptimizer1.objective = doubleArray20;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException23 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(throwable26);
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable26, localizable28, objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException23, 0.0d, "hi!", objArray31);
        double[] doubleArray34 = functionEvaluationException33.getArgument();
        double[] doubleArray36 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray36);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray34, false);
        double[] doubleArray40 = vectorialPointValuePair39.getPoint();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(throwable0, doubleArray40);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #184
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: invokespecial #9
33: astore_2
34: aload_2
35: iconst_0
36: putfield      #93
39: aload_2
40: iconst_1
41: invokevirtual #76
44: aload_2
45: getfield      #113
48: astore_3
49: new           #81
52: dup
53: iconst_m1
54: invokespecial #82
57: astore        4
59: aconst_null
60: astore        5
62: new           #27
65: dup
66: aload         5
68: invokespecial #39
71: astore        6
73: aconst_null
74: astore        7
76: iconst_2
77: anewarray     #5
80: dup
81: iconst_0
82: ldc           #28
84: aastore
85: dup
86: iconst_1
87: iconst_1
88: invokestatic  #17
91: aastore
92: astore        8
94: new           #27
97: dup
98: aload         5
100: aload         7
102: aload         8
104: invokespecial #47
107: astore        9
109: new           #23
112: dup
113: aload         4
115: dconst_0
116: ldc           #28
118: aload         8
120: invokespecial #83
123: astore        10
125: aload         10
127: invokevirtual #84
130: astore        11
132: aload         10
134: invokevirtual #84
137: astore        12
139: aload_2
140: aload         12
142: putfield      #114
145: new           #81
148: dup
149: iconst_m1
150: invokespecial #82
153: astore        13
155: aconst_null
156: astore        14
158: new           #27
161: dup
162: aload         14
164: invokespecial #39
167: astore        15
169: aconst_null
170: astore        16
172: iconst_2
173: anewarray     #5
176: dup
177: iconst_0
178: ldc           #28
180: aastore
181: dup
182: iconst_1
183: iconst_1
184: invokestatic  #17
187: aastore
188: astore        17
190: new           #27
193: dup
194: aload         14
196: aload         16
198: aload         17
200: invokespecial #47
203: astore        18
205: new           #23
208: dup
209: aload         13
211: dconst_0
212: ldc           #28
214: aload         17
216: invokespecial #83
219: astore        19
221: aload         19
223: invokevirtual #84
226: astore        20
228: iconst_1
229: newarray       double
231: dup
232: iconst_0
233: ldc2_w        #85
236: dastore
237: astore        21
239: new           #87
242: dup
243: aload         20
245: aload         21
247: invokespecial #88
250: astore        22
252: new           #87
255: dup
256: aload         12
258: aload         20
260: iconst_0
261: invokespecial #117
264: astore        23
266: aload         23
268: invokevirtual #185
271: astore        24
273: new           #23
276: dup
277: aload_1
278: aload         24
280: invokespecial #148
283: astore        25
285: aload_3
286: invokestatic  #106
289: aload         8
291: invokestatic  #56
294: aload         8
296: invokestatic  #57
299: ldc           #74
301: invokestatic  #59
304: aload         8
306: invokestatic  #60
309: ldc           #74
311: invokestatic  #59
314: aload         11
316: invokestatic  #56
319: aload         11
321: invokestatic  #61
324: ldc           #90
326: invokestatic  #59
329: aload         12
331: invokestatic  #56
334: aload         12
336: invokestatic  #61
339: ldc           #90
341: invokestatic  #59
344: aload         17
346: invokestatic  #56
349: aload         17
351: invokestatic  #57
354: ldc           #74
356: invokestatic  #59
359: aload         17
361: invokestatic  #60
364: ldc           #74
366: invokestatic  #59
369: aload         20
371: invokestatic  #56
374: aload         20
376: invokestatic  #61
379: ldc           #90
381: invokestatic  #59
384: aload         21
386: invokestatic  #56
389: aload         21
391: invokestatic  #61
394: ldc           #91
396: invokestatic  #59
399: aload         24
401: invokestatic  #56
404: aload         24
406: invokestatic  #61
409: ldc           #90
411: invokestatic  #59
414: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 2154
End line: 2168
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: aload_1
66: invokevirtual #132
69: dstore        4
71: aload_1
72: dconst_0
73: invokevirtual #94
76: aload_2
77: invokestatic  #56
80: aload_2
81: invokestatic  #61
84: ldc           #134
86: invokestatic  #59
89: aload_3
90: invokestatic  #56
93: dload         4
95: invokestatic  #135
98: invokestatic  #136
101: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 2171
End line: 2224
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer4.rows = 0;
        levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d));
        int int11 = levenbergMarquardtOptimizer4.getIterations();
        int int12 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer14.rows = 0;
        levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer14.cost = (short) 100;
        int int23 = levenbergMarquardtOptimizer14.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38);
        double[] doubleArray41 = functionEvaluationException40.getArgument();
        double[] doubleArray43 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = simpleVectorialValueChecker24.converged((int) (short) 0, vectorialPointValuePair44, vectorialPointValuePair45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #187
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: invokevirtual #76
37: aload_1
38: invokevirtual #98
41: istore_2
42: new           #8
45: dup
46: invokespecial #9
49: astore_3
50: aload_3
51: iconst_0
52: putfield      #93
55: aload_3
56: iconst_1
57: invokevirtual #76
60: aload_3
61: ldc2_w        #31
64: invokevirtual #94
67: aload_3
68: invokevirtual #126
71: istore        4
73: aload_3
74: invokevirtual #126
77: istore        5
79: aload_3
80: getfield      #122
83: astore        6
85: new           #8
88: dup
89: invokespecial #9
92: astore        7
94: aload         7
96: iconst_0
97: putfield      #93
100: aload         7
102: iconst_1
103: invokevirtual #76
106: aload         7
108: ldc2_w        #31
111: invokevirtual #94
114: aload         7
116: ldc2_w        #95
119: putfield      #97
122: aload         7
124: invokevirtual #98
127: istore        8
129: new           #99
132: dup
133: invokespecial #100
136: astore        9
138: aload         7
140: aload         9
142: invokevirtual #101
145: aload_3
146: aload         9
148: invokevirtual #101
151: aload_1
152: aload         9
154: putfield      #140
157: new           #81
160: dup
161: iconst_m1
162: invokespecial #82
165: astore        10
167: aconst_null
168: astore        11
170: new           #27
173: dup
174: aload         11
176: invokespecial #39
179: astore        12
181: aconst_null
182: astore        13
184: iconst_2
185: anewarray     #5
188: dup
189: iconst_0
190: ldc           #28
192: aastore
193: dup
194: iconst_1
195: iconst_1
196: invokestatic  #17
199: aastore
200: astore        14
202: new           #27
205: dup
206: aload         11
208: aload         13
210: aload         14
212: invokespecial #47
215: astore        15
217: new           #23
220: dup
221: aload         10
223: dconst_0
224: ldc           #28
226: aload         14
228: invokespecial #83
231: astore        16
233: aload         16
235: invokevirtual #84
238: astore        17
240: iconst_1
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #85
248: dastore
249: astore        18
251: new           #87
254: dup
255: aload         17
257: aload         18
259: invokespecial #88
262: astore        19
264: aconst_null
265: astore        20
267: aload         9
269: iconst_0
270: aload         19
272: aload         20
274: invokevirtual #118
277: istore        21
279: ldc           #54
281: invokestatic  #13
284: goto          289
287: astore        21
289: new           #64
292: dup
293: invokespecial #65
296: ldc           #66
298: invokevirtual #67
301: iload_2
302: invokevirtual #102
305: ldc           #69
307: invokevirtual #67
310: sipush        1000
313: invokevirtual #102
316: ldc           #66
318: invokevirtual #67
321: invokevirtual #71
324: iload_2
325: sipush        1000
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #73
339: new           #64
342: dup
343: invokespecial #65
346: ldc           #66
348: invokevirtual #67
351: iload         4
353: invokevirtual #102
356: ldc           #69
358: invokevirtual #67
361: iconst_0
362: invokevirtual #102
365: ldc           #66
367: invokevirtual #67
370: invokevirtual #71
373: iload         4
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #73
386: new           #64
389: dup
390: invokespecial #65
393: ldc           #66
395: invokevirtual #67
398: iload         5
400: invokevirtual #102
403: ldc           #69
405: invokevirtual #67
408: iconst_0
409: invokevirtual #102
412: ldc           #66
414: invokevirtual #67
417: invokevirtual #71
420: iload         5
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #73
433: aload         6
435: invokestatic  #106
438: new           #64
441: dup
442: invokespecial #65
445: ldc           #66
447: invokevirtual #67
450: iload         8
452: invokevirtual #102
455: ldc           #69
457: invokevirtual #67
460: sipush        1000
463: invokevirtual #102
466: ldc           #66
468: invokevirtual #67
471: invokevirtual #71
474: iload         8
476: sipush        1000
479: if_icmpne     486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #73
490: aload         14
492: invokestatic  #56
495: aload         14
497: invokestatic  #57
500: ldc           #74
502: invokestatic  #59
505: aload         14
507: invokestatic  #60
510: ldc           #74
512: invokestatic  #59
515: aload         17
517: invokestatic  #56
520: aload         17
522: invokestatic  #61
525: ldc           #90
527: invokestatic  #59
530: aload         18
532: invokestatic  #56
535: aload         18
537: invokestatic  #61
540: ldc           #91
542: invokestatic  #59
545: return
Exception table:
from    to  target type
267   284   287   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 2227
End line: 2237
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker6 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(vectorialConvergenceChecker6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: aload_1
48: getfield      #140
51: astore_3
52: aload_2
53: invokestatic  #106
56: aload_3
57: invokestatic  #106
60: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 2240
End line: 2274
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24);
        levenbergMarquardtOptimizer0.targetValues = doubleArray24;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray27 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #189
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: new           #81
77: dup
78: iconst_m1
79: invokespecial #82
82: astore        4
84: aconst_null
85: astore        5
87: new           #27
90: dup
91: aload         5
93: invokespecial #39
96: astore        6
98: aconst_null
99: astore        7
101: iconst_2
102: anewarray     #5
105: dup
106: iconst_0
107: ldc           #28
109: aastore
110: dup
111: iconst_1
112: iconst_1
113: invokestatic  #17
116: aastore
117: astore        8
119: new           #27
122: dup
123: aload         5
125: aload         7
127: aload         8
129: invokespecial #47
132: astore        9
134: new           #23
137: dup
138: aload         4
140: dconst_0
141: ldc           #28
143: aload         8
145: invokespecial #83
148: astore        10
150: aload         10
152: invokevirtual #84
155: astore        11
157: new           #23
160: dup
161: aload         11
163: invokespecial #89
166: astore        12
168: aload_1
169: aload         11
171: putfield      #152
174: aload_1
175: invokevirtual #53
178: astore        13
180: ldc           #54
182: invokestatic  #13
185: goto          190
188: astore        13
190: new           #64
193: dup
194: invokespecial #65
197: ldc           #66
199: invokevirtual #67
202: iload_2
203: invokevirtual #102
206: ldc           #69
208: invokevirtual #67
211: sipush        1000
214: invokevirtual #102
217: ldc           #66
219: invokevirtual #67
222: invokevirtual #71
225: iload_2
226: sipush        1000
229: if_icmpne     236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #73
240: aload         8
242: invokestatic  #56
245: aload         8
247: invokestatic  #57
250: ldc           #74
252: invokestatic  #59
255: aload         8
257: invokestatic  #60
260: ldc           #74
262: invokestatic  #59
265: aload         11
267: invokestatic  #56
270: aload         11
272: invokestatic  #61
275: ldc           #90
277: invokestatic  #59
280: return
Exception table:
from    to  target type
174   185   188   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 2277
End line: 2292
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray7 = new double[] { (-1), 1.0f };
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        levenbergMarquardtOptimizer2.jacobian = doubleArray8;
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray8);
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("org.apache.commons.math.ConvergenceException: convergence failed", (java.lang.Object[]) doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(concurrentModificationException11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #190
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: ldc           #28
67: aload_3
68: checkcast     #143
71: invokestatic  #36
74: astore        4
76: ldc           #191
78: aload_3
79: checkcast     #143
82: invokestatic  #36
85: astore        5
87: aload_2
88: invokestatic  #56
91: aload_2
92: invokestatic  #61
95: ldc           #134
97: invokestatic  #59
100: aload_3
101: invokestatic  #56
104: aload         4
106: invokestatic  #56
109: aload         5
111: invokestatic  #56
114: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 2295
End line: 2311
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        double double14 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.setOrthoTolerance(0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: aload_1
75: bipush        100
77: invokevirtual #76
80: aload_1
81: getfield      #97
84: dstore        4
86: aload_1
87: dconst_0
88: invokevirtual #129
91: new           #64
94: dup
95: invokespecial #65
98: ldc           #66
100: invokevirtual #67
103: iload_2
104: invokevirtual #102
107: ldc           #69
109: invokevirtual #67
112: sipush        1000
115: invokevirtual #102
118: ldc           #66
120: invokevirtual #67
123: invokevirtual #71
126: iload_2
127: sipush        1000
130: if_icmpne     137
133: iconst_1
134: goto          138
137: iconst_0
138: invokestatic  #73
141: new           #64
144: dup
145: invokespecial #65
148: ldc           #66
150: invokevirtual #67
153: dload         4
155: invokevirtual #79
158: ldc           #69
160: invokevirtual #67
163: ldc2_w        #95
166: invokevirtual #79
169: ldc           #66
171: invokevirtual #67
174: invokevirtual #71
177: dload         4
179: ldc2_w        #95
182: dcmpl
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #73
194: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 2314
End line: 2326
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertNull(vectorialConvergenceChecker10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #10
60: aload_1
61: invokevirtual #104
64: astore_2
65: aload_1
66: invokevirtual #10
69: aload_2
70: invokestatic  #106
73: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 2329
End line: 2412
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.cost = ' ';
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNull(doubleArray79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: getfield      #122
538: astore        44
540: aload_1
541: ldc2_w        #150
544: putfield      #97
547: aload_3
548: invokestatic  #56
551: aload_3
552: invokestatic  #57
555: ldc           #58
557: invokestatic  #59
560: aload_3
561: invokestatic  #60
564: ldc           #58
566: invokestatic  #59
569: aload         7
571: invokestatic  #56
574: aload         7
576: invokestatic  #57
579: ldc           #58
581: invokestatic  #59
584: aload         7
586: invokestatic  #60
589: ldc           #58
591: invokestatic  #59
594: aload         10
596: invokestatic  #56
599: aload         10
601: invokestatic  #61
604: ldc           #62
606: invokestatic  #59
609: aload         12
611: invokestatic  #56
614: aload         12
616: invokestatic  #57
619: ldc           #63
621: invokestatic  #59
624: aload         12
626: invokestatic  #60
629: ldc           #63
631: invokestatic  #59
634: aload         13
636: invokestatic  #56
639: new           #64
642: dup
643: invokespecial #65
646: ldc           #66
648: invokevirtual #67
651: aload         17
653: invokevirtual #68
656: ldc           #69
658: invokevirtual #67
661: getstatic     #70
664: invokevirtual #68
667: ldc           #66
669: invokevirtual #67
672: invokevirtual #71
675: aload         17
677: getstatic     #70
680: invokevirtual #72
683: invokestatic  #73
686: aload         19
688: invokestatic  #56
691: aload         19
693: invokestatic  #57
696: ldc           #63
698: invokestatic  #59
701: aload         19
703: invokestatic  #60
706: ldc           #63
708: invokestatic  #59
711: aload         20
713: invokestatic  #56
716: new           #64
719: dup
720: invokespecial #65
723: ldc           #66
725: invokevirtual #67
728: aload         25
730: invokevirtual #68
733: ldc           #69
735: invokevirtual #67
738: getstatic     #70
741: invokevirtual #68
744: ldc           #66
746: invokevirtual #67
749: invokevirtual #71
752: aload         25
754: getstatic     #70
757: invokevirtual #72
760: invokestatic  #73
763: aload         27
765: invokestatic  #56
768: aload         27
770: invokestatic  #57
773: ldc           #63
775: invokestatic  #59
778: aload         27
780: invokestatic  #60
783: ldc           #63
785: invokestatic  #59
788: aload         28
790: invokestatic  #56
793: aload         30
795: invokestatic  #56
798: aload         31
800: invokestatic  #56
803: aload         33
805: invokestatic  #56
808: aload         37
810: invokestatic  #56
813: aload         37
815: invokestatic  #57
818: ldc           #74
820: invokestatic  #59
823: aload         37
825: invokestatic  #60
828: ldc           #74
830: invokestatic  #59
833: aload         39
835: invokestatic  #56
838: aload         39
840: invokestatic  #57
843: ldc           #74
845: invokestatic  #59
848: aload         39
850: invokestatic  #60
853: ldc           #74
855: invokestatic  #59
858: aload         40
860: invokestatic  #56
863: aload         44
865: invokestatic  #106
868: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 2415
End line: 2428
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double[][] doubleArray11 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNull(vectorialConvergenceChecker10);
        org.junit.Assert.assertNull(doubleArray11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #195
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #10
60: aload_1
61: invokevirtual #104
64: astore_2
65: aload_1
66: getfield      #131
69: astore_3
70: aload_2
71: invokestatic  #106
74: aload_3
75: invokestatic  #106
78: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 2431
End line: 2444
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        int int9 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #196
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: aload_1
38: bipush        100
40: invokevirtual #76
43: aload_1
44: getfield      #122
47: astore_2
48: aload_1
49: getfield      #122
52: astore_3
53: aload_1
54: bipush        97
56: invokevirtual #76
59: aload_1
60: invokevirtual #167
63: istore        4
65: aload_2
66: invokestatic  #106
69: aload_3
70: invokestatic  #106
73: new           #64
76: dup
77: invokespecial #65
80: ldc           #66
82: invokevirtual #67
85: iload         4
87: invokevirtual #102
90: ldc           #69
92: invokevirtual #67
95: iconst_0
96: invokevirtual #102
99: ldc           #66
101: invokevirtual #67
104: invokevirtual #71
107: iload         4
109: ifne          116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #73
120: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2447
End line: 2456
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setQRRankingThreshold(10.0d);
        int int7 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1000 + "'", int7 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #197
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #33
46: invokevirtual #162
49: aload_1
50: invokevirtual #98
53: istore_2
54: new           #64
57: dup
58: invokespecial #65
61: ldc           #66
63: invokevirtual #67
66: iload_2
67: invokevirtual #102
70: ldc           #69
72: invokevirtual #67
75: sipush        1000
78: invokevirtual #102
81: ldc           #66
83: invokevirtual #67
86: invokevirtual #71
89: iload_2
90: sipush        1000
93: if_icmpne     100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #73
104: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2459
End line: 2547
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double double82 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #198
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #98
544: istore        46
546: aload_1
547: invokevirtual #104
550: astore        47
552: aload_1
553: invokevirtual #77
556: dstore        48
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: dload         44
888: invokevirtual #79
891: ldc           #69
893: invokevirtual #67
896: dconst_0
897: invokevirtual #79
900: ldc           #66
902: invokevirtual #67
905: invokevirtual #71
908: dload         44
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #73
923: new           #64
926: dup
927: invokespecial #65
930: ldc           #66
932: invokevirtual #67
935: iload         46
937: invokevirtual #102
940: ldc           #69
942: invokevirtual #67
945: sipush        1000
948: invokevirtual #102
951: ldc           #66
953: invokevirtual #67
956: invokevirtual #71
959: iload         46
961: sipush        1000
964: if_icmpne     971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #73
975: aload         47
977: invokestatic  #106
980: new           #64
983: dup
984: invokespecial #65
987: ldc           #66
989: invokevirtual #67
992: dload         48
994: invokevirtual #79
997: ldc           #69
999: invokevirtual #67
1002: dconst_0
1003: invokevirtual #79
1006: ldc           #66
1008: invokevirtual #67
1011: invokevirtual #71
1014: dload         48
1016: dconst_0
1017: dcmpl
1018: ifne          1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #73
1029: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2550
End line: 2605
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair4 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer5.rows = 0;
        levenbergMarquardtOptimizer5.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray10 = levenbergMarquardtOptimizer5.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException12 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable15);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable15, localizable17, objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException12, 0.0d, "hi!", objArray20);
        double[] doubleArray23 = functionEvaluationException22.getArgument();
        double[] doubleArray24 = functionEvaluationException22.getArgument();
        levenbergMarquardtOptimizer5.objective = doubleArray24;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35);
        double[] doubleArray38 = functionEvaluationException37.getArgument();
        double[] doubleArray40 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray40);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray38, false);
        double[] doubleArray44 = vectorialPointValuePair43.getPointRef();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = simpleVectorialValueChecker2.converged((int) (short) 10, vectorialPointValuePair4, vectorialPointValuePair43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #199
19: aastore
20: invokevirtual #7
23: pop
24: new           #99
27: dup
28: dconst_0
29: ldc2_w        #95
32: invokespecial #116
35: astore_1
36: aconst_null
37: astore_2
38: new           #8
41: dup
42: invokespecial #9
45: astore_3
46: aload_3
47: iconst_0
48: putfield      #93
51: aload_3
52: iconst_1
53: invokevirtual #76
56: aload_3
57: getfield      #113
60: astore        4
62: new           #81
65: dup
66: iconst_m1
67: invokespecial #82
70: astore        5
72: aconst_null
73: astore        6
75: new           #27
78: dup
79: aload         6
81: invokespecial #39
84: astore        7
86: aconst_null
87: astore        8
89: iconst_2
90: anewarray     #5
93: dup
94: iconst_0
95: ldc           #28
97: aastore
98: dup
99: iconst_1
100: iconst_1
101: invokestatic  #17
104: aastore
105: astore        9
107: new           #27
110: dup
111: aload         6
113: aload         8
115: aload         9
117: invokespecial #47
120: astore        10
122: new           #23
125: dup
126: aload         5
128: dconst_0
129: ldc           #28
131: aload         9
133: invokespecial #83
136: astore        11
138: aload         11
140: invokevirtual #84
143: astore        12
145: aload         11
147: invokevirtual #84
150: astore        13
152: aload_3
153: aload         13
155: putfield      #114
158: new           #81
161: dup
162: iconst_m1
163: invokespecial #82
166: astore        14
168: aconst_null
169: astore        15
171: new           #27
174: dup
175: aload         15
177: invokespecial #39
180: astore        16
182: aconst_null
183: astore        17
185: iconst_2
186: anewarray     #5
189: dup
190: iconst_0
191: ldc           #28
193: aastore
194: dup
195: iconst_1
196: iconst_1
197: invokestatic  #17
200: aastore
201: astore        18
203: new           #27
206: dup
207: aload         15
209: aload         17
211: aload         18
213: invokespecial #47
216: astore        19
218: new           #23
221: dup
222: aload         14
224: dconst_0
225: ldc           #28
227: aload         18
229: invokespecial #83
232: astore        20
234: aload         20
236: invokevirtual #84
239: astore        21
241: iconst_1
242: newarray       double
244: dup
245: iconst_0
246: ldc2_w        #85
249: dastore
250: astore        22
252: new           #87
255: dup
256: aload         21
258: aload         22
260: invokespecial #88
263: astore        23
265: new           #87
268: dup
269: aload         13
271: aload         21
273: iconst_0
274: invokespecial #117
277: astore        24
279: aload         24
281: invokevirtual #159
284: astore        25
286: aload_1
287: bipush        10
289: aload_2
290: aload         24
292: invokevirtual #118
295: istore        26
297: ldc           #54
299: invokestatic  #13
302: goto          307
305: astore        26
307: aload         4
309: invokestatic  #106
312: aload         9
314: invokestatic  #56
317: aload         9
319: invokestatic  #57
322: ldc           #74
324: invokestatic  #59
327: aload         9
329: invokestatic  #60
332: ldc           #74
334: invokestatic  #59
337: aload         12
339: invokestatic  #56
342: aload         12
344: invokestatic  #61
347: ldc           #90
349: invokestatic  #59
352: aload         13
354: invokestatic  #56
357: aload         13
359: invokestatic  #61
362: ldc           #90
364: invokestatic  #59
367: aload         18
369: invokestatic  #56
372: aload         18
374: invokestatic  #57
377: ldc           #74
379: invokestatic  #59
382: aload         18
384: invokestatic  #60
387: ldc           #74
389: invokestatic  #59
392: aload         21
394: invokestatic  #56
397: aload         21
399: invokestatic  #61
402: ldc           #90
404: invokestatic  #59
407: aload         22
409: invokestatic  #56
412: aload         22
414: invokestatic  #61
417: ldc           #91
419: invokestatic  #59
422: aload         25
424: invokestatic  #56
427: aload         25
429: invokestatic  #61
432: ldc           #90
434: invokestatic  #59
437: return
Exception table:
from    to  target type
286   302   305   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2608
End line: 2643
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: getfield      #140
152: astore        12
154: aload_1
155: invokevirtual #78
158: astore        13
160: ldc           #54
162: invokestatic  #13
165: goto          170
168: astore        13
170: aload_2
171: invokestatic  #106
174: aload         7
176: invokestatic  #56
179: aload         7
181: invokestatic  #57
184: ldc           #74
186: invokestatic  #59
189: aload         7
191: invokestatic  #60
194: ldc           #74
196: invokestatic  #59
199: aload         10
201: invokestatic  #56
204: aload         10
206: invokestatic  #61
209: ldc           #90
211: invokestatic  #59
214: aload         11
216: invokestatic  #56
219: aload         11
221: invokestatic  #61
224: ldc           #90
226: invokestatic  #59
229: aload         12
231: invokestatic  #106
234: return
Exception table:
from    to  target type
154   165   168   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2646
End line: 2727
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer20.rows = 0;
        levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d));
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53);
        double[] doubleArray56 = functionEvaluationException55.getArgument();
        double[] doubleArray58 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77);
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        levenbergMarquardtOptimizer0.setMaxIterations((int) ' ');
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: bipush        100
143: invokevirtual #76
146: new           #8
149: dup
150: invokespecial #9
153: astore        12
155: aload         12
157: iconst_0
158: putfield      #93
161: aload         12
163: iconst_1
164: invokevirtual #76
167: aload         12
169: ldc2_w        #31
172: invokevirtual #94
175: new           #99
178: dup
179: dconst_0
180: ldc2_w        #95
183: invokespecial #116
186: astore        13
188: new           #81
191: dup
192: iconst_m1
193: invokespecial #82
196: astore        14
198: aconst_null
199: astore        15
201: new           #27
204: dup
205: aload         15
207: invokespecial #39
210: astore        16
212: aconst_null
213: astore        17
215: iconst_2
216: anewarray     #5
219: dup
220: iconst_0
221: ldc           #28
223: aastore
224: dup
225: iconst_1
226: iconst_1
227: invokestatic  #17
230: aastore
231: astore        18
233: new           #27
236: dup
237: aload         15
239: aload         17
241: aload         18
243: invokespecial #47
246: astore        19
248: new           #23
251: dup
252: aload         14
254: dconst_0
255: ldc           #28
257: aload         18
259: invokespecial #83
262: astore        20
264: aload         20
266: invokevirtual #84
269: astore        21
271: new           #81
274: dup
275: iconst_m1
276: invokespecial #82
279: astore        22
281: aconst_null
282: astore        23
284: new           #27
287: dup
288: aload         23
290: invokespecial #39
293: astore        24
295: aconst_null
296: astore        25
298: iconst_2
299: anewarray     #5
302: dup
303: iconst_0
304: ldc           #28
306: aastore
307: dup
308: iconst_1
309: iconst_1
310: invokestatic  #17
313: aastore
314: astore        26
316: new           #27
319: dup
320: aload         23
322: aload         25
324: aload         26
326: invokespecial #47
329: astore        27
331: new           #23
334: dup
335: aload         22
337: dconst_0
338: ldc           #28
340: aload         26
342: invokespecial #83
345: astore        28
347: aload         28
349: invokevirtual #84
352: astore        29
354: iconst_1
355: newarray       double
357: dup
358: iconst_0
359: ldc2_w        #85
362: dastore
363: astore        30
365: new           #87
368: dup
369: aload         29
371: aload         30
373: invokespecial #88
376: astore        31
378: new           #87
381: dup
382: aload         21
384: aload         30
386: iconst_0
387: invokespecial #117
390: astore        32
392: new           #81
395: dup
396: iconst_m1
397: invokespecial #82
400: astore        33
402: aconst_null
403: astore        34
405: new           #27
408: dup
409: aload         34
411: invokespecial #39
414: astore        35
416: aconst_null
417: astore        36
419: iconst_2
420: anewarray     #5
423: dup
424: iconst_0
425: ldc           #28
427: aastore
428: dup
429: iconst_1
430: iconst_1
431: invokestatic  #17
434: aastore
435: astore        37
437: new           #27
440: dup
441: aload         34
443: aload         36
445: aload         37
447: invokespecial #47
450: astore        38
452: new           #23
455: dup
456: aload         33
458: dconst_0
459: ldc           #28
461: aload         37
463: invokespecial #83
466: astore        39
468: aload         39
470: invokevirtual #84
473: astore        40
475: iconst_1
476: newarray       double
478: dup
479: iconst_0
480: ldc2_w        #85
483: dastore
484: astore        41
486: new           #87
489: dup
490: aload         40
492: aload         41
494: invokespecial #88
497: astore        42
499: aload         13
501: iconst_0
502: aload         32
504: aload         42
506: invokevirtual #118
509: istore        43
511: aload         12
513: aload         13
515: invokevirtual #101
518: aload_1
519: aload         13
521: invokevirtual #101
524: aload_1
525: bipush        32
527: invokevirtual #182
530: aload         6
532: invokestatic  #56
535: aload         6
537: invokestatic  #57
540: ldc           #74
542: invokestatic  #59
545: aload         6
547: invokestatic  #60
550: ldc           #74
552: invokestatic  #59
555: aload         9
557: invokestatic  #56
560: aload         9
562: invokestatic  #61
565: ldc           #90
567: invokestatic  #59
570: aload         10
572: invokestatic  #56
575: aload         10
577: invokestatic  #61
580: ldc           #91
582: invokestatic  #59
585: aload         18
587: invokestatic  #56
590: aload         18
592: invokestatic  #57
595: ldc           #74
597: invokestatic  #59
600: aload         18
602: invokestatic  #60
605: ldc           #74
607: invokestatic  #59
610: aload         21
612: invokestatic  #56
615: aload         21
617: invokestatic  #61
620: ldc           #90
622: invokestatic  #59
625: aload         26
627: invokestatic  #56
630: aload         26
632: invokestatic  #57
635: ldc           #74
637: invokestatic  #59
640: aload         26
642: invokestatic  #60
645: ldc           #74
647: invokestatic  #59
650: aload         29
652: invokestatic  #56
655: aload         29
657: invokestatic  #61
660: ldc           #90
662: invokestatic  #59
665: aload         30
667: invokestatic  #56
670: aload         30
672: invokestatic  #61
675: ldc           #91
677: invokestatic  #59
680: aload         37
682: invokestatic  #56
685: aload         37
687: invokestatic  #57
690: ldc           #74
692: invokestatic  #59
695: aload         37
697: invokestatic  #60
700: ldc           #74
702: invokestatic  #59
705: aload         40
707: invokestatic  #56
710: aload         40
712: invokestatic  #61
715: ldc           #90
717: invokestatic  #59
720: aload         41
722: invokestatic  #56
725: aload         41
727: invokestatic  #61
730: ldc           #91
732: invokestatic  #59
735: new           #64
738: dup
739: invokespecial #65
742: ldc           #66
744: invokevirtual #67
747: iload         43
749: invokevirtual #119
752: ldc           #69
754: invokevirtual #67
757: iconst_1
758: invokevirtual #119
761: ldc           #66
763: invokevirtual #67
766: invokevirtual #71
769: iload         43
771: iconst_1
772: if_icmpne     779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #73
783: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2730
End line: 2758
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.cols = (-1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 100.0f);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: iconst_m1
143: putfield      #105
146: aload_1
147: dconst_0
148: invokevirtual #94
151: aload_1
152: ldc2_w        #95
155: invokevirtual #94
158: aload_2
159: invokestatic  #106
162: aload         7
164: invokestatic  #56
167: aload         7
169: invokestatic  #57
172: ldc           #74
174: invokestatic  #59
177: aload         7
179: invokestatic  #60
182: ldc           #74
184: invokestatic  #59
187: aload         10
189: invokestatic  #56
192: aload         10
194: invokestatic  #61
197: ldc           #90
199: invokestatic  #59
202: aload         11
204: invokestatic  #56
207: aload         11
209: invokestatic  #61
212: ldc           #90
214: invokestatic  #59
217: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2761
End line: 2772
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) ' ');
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: aload_1
38: bipush        100
40: invokevirtual #76
43: aload_1
44: getfield      #122
47: astore_2
48: aload_1
49: getfield      #122
52: astore_3
53: aload_1
54: ldc2_w        #150
57: invokevirtual #204
60: aload_2
61: invokestatic  #106
64: aload_3
65: invokestatic  #106
68: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2775
End line: 2865
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker82 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double double83 = levenbergMarquardtOptimizer0.getRMS();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: invokevirtual #98
550: istore        47
552: aload_1
553: invokevirtual #104
556: astore        48
558: aload_1
559: invokevirtual #132
562: dstore        49
564: aload_3
565: invokestatic  #56
568: aload_3
569: invokestatic  #57
572: ldc           #58
574: invokestatic  #59
577: aload_3
578: invokestatic  #60
581: ldc           #58
583: invokestatic  #59
586: aload         7
588: invokestatic  #56
591: aload         7
593: invokestatic  #57
596: ldc           #58
598: invokestatic  #59
601: aload         7
603: invokestatic  #60
606: ldc           #58
608: invokestatic  #59
611: aload         10
613: invokestatic  #56
616: aload         10
618: invokestatic  #61
621: ldc           #62
623: invokestatic  #59
626: aload         12
628: invokestatic  #56
631: aload         12
633: invokestatic  #57
636: ldc           #63
638: invokestatic  #59
641: aload         12
643: invokestatic  #60
646: ldc           #63
648: invokestatic  #59
651: aload         13
653: invokestatic  #56
656: new           #64
659: dup
660: invokespecial #65
663: ldc           #66
665: invokevirtual #67
668: aload         17
670: invokevirtual #68
673: ldc           #69
675: invokevirtual #67
678: getstatic     #70
681: invokevirtual #68
684: ldc           #66
686: invokevirtual #67
689: invokevirtual #71
692: aload         17
694: getstatic     #70
697: invokevirtual #72
700: invokestatic  #73
703: aload         19
705: invokestatic  #56
708: aload         19
710: invokestatic  #57
713: ldc           #63
715: invokestatic  #59
718: aload         19
720: invokestatic  #60
723: ldc           #63
725: invokestatic  #59
728: aload         20
730: invokestatic  #56
733: new           #64
736: dup
737: invokespecial #65
740: ldc           #66
742: invokevirtual #67
745: aload         25
747: invokevirtual #68
750: ldc           #69
752: invokevirtual #67
755: getstatic     #70
758: invokevirtual #68
761: ldc           #66
763: invokevirtual #67
766: invokevirtual #71
769: aload         25
771: getstatic     #70
774: invokevirtual #72
777: invokestatic  #73
780: aload         27
782: invokestatic  #56
785: aload         27
787: invokestatic  #57
790: ldc           #63
792: invokestatic  #59
795: aload         27
797: invokestatic  #60
800: ldc           #63
802: invokestatic  #59
805: aload         28
807: invokestatic  #56
810: aload         30
812: invokestatic  #56
815: aload         31
817: invokestatic  #56
820: aload         33
822: invokestatic  #56
825: aload         37
827: invokestatic  #56
830: aload         37
832: invokestatic  #57
835: ldc           #74
837: invokestatic  #59
840: aload         37
842: invokestatic  #60
845: ldc           #74
847: invokestatic  #59
850: aload         39
852: invokestatic  #56
855: aload         39
857: invokestatic  #57
860: ldc           #74
862: invokestatic  #59
865: aload         39
867: invokestatic  #60
870: ldc           #74
872: invokestatic  #59
875: aload         40
877: invokestatic  #56
880: new           #64
883: dup
884: invokespecial #65
887: ldc           #66
889: invokevirtual #67
892: dload         44
894: invokevirtual #79
897: ldc           #69
899: invokevirtual #67
902: dconst_0
903: invokevirtual #79
906: ldc           #66
908: invokevirtual #67
911: invokevirtual #71
914: dload         44
916: dconst_0
917: dcmpl
918: ifne          925
921: iconst_1
922: goto          926
925: iconst_0
926: invokestatic  #73
929: aload         46
931: invokestatic  #106
934: new           #64
937: dup
938: invokespecial #65
941: ldc           #66
943: invokevirtual #67
946: iload         47
948: invokevirtual #102
951: ldc           #69
953: invokevirtual #67
956: sipush        1000
959: invokevirtual #102
962: ldc           #66
964: invokevirtual #67
967: invokevirtual #71
970: iload         47
972: sipush        1000
975: if_icmpne     982
978: iconst_1
979: goto          983
982: iconst_0
983: invokestatic  #73
986: aload         48
988: invokestatic  #106
991: dload         49
993: invokestatic  #135
996: invokestatic  #136
999: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2868
End line: 2878
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setMaxIterations(10);
        int int9 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: bipush        10
52: invokevirtual #182
55: aload_1
56: getfield      #105
59: istore_2
60: new           #64
63: dup
64: invokespecial #65
67: ldc           #66
69: invokevirtual #67
72: iload_2
73: invokevirtual #102
76: ldc           #69
78: invokevirtual #67
81: iconst_0
82: invokevirtual #102
85: ldc           #66
87: invokevirtual #67
90: invokevirtual #71
93: iload_2
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #73
105: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2881
End line: 2910
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        int int21 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int22 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: invokevirtual #133
145: istore        12
147: aload_1
148: invokevirtual #126
151: istore        13
153: aload_2
154: invokestatic  #106
157: aload         7
159: invokestatic  #56
162: aload         7
164: invokestatic  #57
167: ldc           #74
169: invokestatic  #59
172: aload         7
174: invokestatic  #60
177: ldc           #74
179: invokestatic  #59
182: aload         10
184: invokestatic  #56
187: aload         10
189: invokestatic  #61
192: ldc           #90
194: invokestatic  #59
197: aload         11
199: invokestatic  #56
202: aload         11
204: invokestatic  #61
207: ldc           #90
209: invokestatic  #59
212: new           #64
215: dup
216: invokespecial #65
219: ldc           #66
221: invokevirtual #67
224: iload         12
226: invokevirtual #102
229: ldc           #69
231: invokevirtual #67
234: iconst_0
235: invokevirtual #102
238: ldc           #66
240: invokevirtual #67
243: invokevirtual #71
246: iload         12
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #73
259: new           #64
262: dup
263: invokespecial #65
266: ldc           #66
268: invokevirtual #67
271: iload         13
273: invokevirtual #102
276: ldc           #69
278: invokevirtual #67
281: iconst_0
282: invokevirtual #102
285: ldc           #66
287: invokevirtual #67
290: invokevirtual #71
293: iload         13
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #73
306: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2913
End line: 2927
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 10);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #208
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: aload_1
48: bipush        100
50: putfield      #105
53: aload_1
54: ldc2_w        #31
57: invokevirtual #94
60: aload_1
61: invokevirtual #10
64: aload_1
65: invokevirtual #110
68: istore_3
69: aload_1
70: bipush        10
72: invokevirtual #76
75: aload_2
76: invokestatic  #106
79: new           #64
82: dup
83: invokespecial #65
86: ldc           #66
88: invokevirtual #67
91: iload_3
92: invokevirtual #102
95: ldc           #69
97: invokevirtual #67
100: iconst_1
101: invokevirtual #102
104: ldc           #66
106: invokevirtual #67
109: invokevirtual #71
112: iload_3
113: iconst_1
114: if_icmpne     121
117: iconst_1
118: goto          122
121: iconst_0
122: invokestatic  #73
125: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2930
End line: 2980
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9);
        double[] doubleArray12 = functionEvaluationException11.getArgument();
        double[] doubleArray13 = functionEvaluationException11.getArgument();
        double[] doubleArray14 = functionEvaluationException11.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer15.rows = 0;
        levenbergMarquardtOptimizer15.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray20 = levenbergMarquardtOptimizer15.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(doubleArray35);
        levenbergMarquardtOptimizer15.residuals = doubleArray35;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray35, true);
        double[] doubleArray41 = vectorialPointValuePair40.getValueRef();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #209
19: aastore
20: invokevirtual #7
23: pop
24: new           #81
27: dup
28: iconst_m1
29: invokespecial #82
32: astore_1
33: aconst_null
34: astore_2
35: new           #27
38: dup
39: aload_2
40: invokespecial #39
43: astore_3
44: aconst_null
45: astore        4
47: iconst_2
48: anewarray     #5
51: dup
52: iconst_0
53: ldc           #28
55: aastore
56: dup
57: iconst_1
58: iconst_1
59: invokestatic  #17
62: aastore
63: astore        5
65: new           #27
68: dup
69: aload_2
70: aload         4
72: aload         5
74: invokespecial #47
77: astore        6
79: new           #23
82: dup
83: aload_1
84: dconst_0
85: ldc           #28
87: aload         5
89: invokespecial #83
92: astore        7
94: aload         7
96: invokevirtual #84
99: astore        8
101: aload         7
103: invokevirtual #84
106: astore        9
108: aload         7
110: invokevirtual #84
113: astore        10
115: new           #8
118: dup
119: invokespecial #9
122: astore        11
124: aload         11
126: iconst_0
127: putfield      #93
130: aload         11
132: iconst_1
133: invokevirtual #76
136: aload         11
138: getfield      #113
141: astore        12
143: new           #81
146: dup
147: iconst_m1
148: invokespecial #82
151: astore        13
153: aconst_null
154: astore        14
156: new           #27
159: dup
160: aload         14
162: invokespecial #39
165: astore        15
167: aconst_null
168: astore        16
170: iconst_2
171: anewarray     #5
174: dup
175: iconst_0
176: ldc           #28
178: aastore
179: dup
180: iconst_1
181: iconst_1
182: invokestatic  #17
185: aastore
186: astore        17
188: new           #27
191: dup
192: aload         14
194: aload         16
196: aload         17
198: invokespecial #47
201: astore        18
203: new           #23
206: dup
207: aload         13
209: dconst_0
210: ldc           #28
212: aload         17
214: invokespecial #83
217: astore        19
219: aload         19
221: invokevirtual #84
224: astore        20
226: iconst_1
227: newarray       double
229: dup
230: iconst_0
231: ldc2_w        #85
234: dastore
235: astore        21
237: new           #87
240: dup
241: aload         20
243: aload         21
245: invokespecial #88
248: astore        22
250: new           #23
253: dup
254: aload         21
256: invokespecial #89
259: astore        23
261: aload         11
263: aload         21
265: putfield      #122
268: new           #87
271: dup
272: aload         10
274: aload         21
276: iconst_1
277: invokespecial #117
280: astore        24
282: aload         24
284: invokevirtual #210
287: astore        25
289: aload         5
291: invokestatic  #56
294: aload         5
296: invokestatic  #57
299: ldc           #74
301: invokestatic  #59
304: aload         5
306: invokestatic  #60
309: ldc           #74
311: invokestatic  #59
314: aload         8
316: invokestatic  #56
319: aload         8
321: invokestatic  #61
324: ldc           #90
326: invokestatic  #59
329: aload         9
331: invokestatic  #56
334: aload         9
336: invokestatic  #61
339: ldc           #90
341: invokestatic  #59
344: aload         10
346: invokestatic  #56
349: aload         10
351: invokestatic  #61
354: ldc           #90
356: invokestatic  #59
359: aload         12
361: invokestatic  #106
364: aload         17
366: invokestatic  #56
369: aload         17
371: invokestatic  #57
374: ldc           #74
376: invokestatic  #59
379: aload         17
381: invokestatic  #60
384: ldc           #74
386: invokestatic  #59
389: aload         20
391: invokestatic  #56
394: aload         20
396: invokestatic  #61
399: ldc           #90
401: invokestatic  #59
404: aload         21
406: invokestatic  #56
409: aload         21
411: invokestatic  #61
414: ldc           #91
416: invokestatic  #59
419: aload         25
421: invokestatic  #56
424: aload         25
426: invokestatic  #61
429: ldc           #91
431: invokestatic  #59
434: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2983
End line: 3069
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #211
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #98
544: istore        46
546: aload_1
547: bipush        35
549: invokevirtual #76
552: aload_1
553: iconst_m1
554: invokevirtual #76
557: aload_3
558: invokestatic  #56
561: aload_3
562: invokestatic  #57
565: ldc           #58
567: invokestatic  #59
570: aload_3
571: invokestatic  #60
574: ldc           #58
576: invokestatic  #59
579: aload         7
581: invokestatic  #56
584: aload         7
586: invokestatic  #57
589: ldc           #58
591: invokestatic  #59
594: aload         7
596: invokestatic  #60
599: ldc           #58
601: invokestatic  #59
604: aload         10
606: invokestatic  #56
609: aload         10
611: invokestatic  #61
614: ldc           #62
616: invokestatic  #59
619: aload         12
621: invokestatic  #56
624: aload         12
626: invokestatic  #57
629: ldc           #63
631: invokestatic  #59
634: aload         12
636: invokestatic  #60
639: ldc           #63
641: invokestatic  #59
644: aload         13
646: invokestatic  #56
649: new           #64
652: dup
653: invokespecial #65
656: ldc           #66
658: invokevirtual #67
661: aload         17
663: invokevirtual #68
666: ldc           #69
668: invokevirtual #67
671: getstatic     #70
674: invokevirtual #68
677: ldc           #66
679: invokevirtual #67
682: invokevirtual #71
685: aload         17
687: getstatic     #70
690: invokevirtual #72
693: invokestatic  #73
696: aload         19
698: invokestatic  #56
701: aload         19
703: invokestatic  #57
706: ldc           #63
708: invokestatic  #59
711: aload         19
713: invokestatic  #60
716: ldc           #63
718: invokestatic  #59
721: aload         20
723: invokestatic  #56
726: new           #64
729: dup
730: invokespecial #65
733: ldc           #66
735: invokevirtual #67
738: aload         25
740: invokevirtual #68
743: ldc           #69
745: invokevirtual #67
748: getstatic     #70
751: invokevirtual #68
754: ldc           #66
756: invokevirtual #67
759: invokevirtual #71
762: aload         25
764: getstatic     #70
767: invokevirtual #72
770: invokestatic  #73
773: aload         27
775: invokestatic  #56
778: aload         27
780: invokestatic  #57
783: ldc           #63
785: invokestatic  #59
788: aload         27
790: invokestatic  #60
793: ldc           #63
795: invokestatic  #59
798: aload         28
800: invokestatic  #56
803: aload         30
805: invokestatic  #56
808: aload         31
810: invokestatic  #56
813: aload         33
815: invokestatic  #56
818: aload         37
820: invokestatic  #56
823: aload         37
825: invokestatic  #57
828: ldc           #74
830: invokestatic  #59
833: aload         37
835: invokestatic  #60
838: ldc           #74
840: invokestatic  #59
843: aload         39
845: invokestatic  #56
848: aload         39
850: invokestatic  #57
853: ldc           #74
855: invokestatic  #59
858: aload         39
860: invokestatic  #60
863: ldc           #74
865: invokestatic  #59
868: aload         40
870: invokestatic  #56
873: new           #64
876: dup
877: invokespecial #65
880: ldc           #66
882: invokevirtual #67
885: dload         44
887: invokevirtual #79
890: ldc           #69
892: invokevirtual #67
895: dconst_0
896: invokevirtual #79
899: ldc           #66
901: invokevirtual #67
904: invokevirtual #71
907: dload         44
909: dconst_0
910: dcmpl
911: ifne          918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #73
922: new           #64
925: dup
926: invokespecial #65
929: ldc           #66
931: invokevirtual #67
934: iload         46
936: invokevirtual #102
939: ldc           #69
941: invokevirtual #67
944: sipush        1000
947: invokevirtual #102
950: ldc           #66
952: invokevirtual #67
955: invokevirtual #71
958: iload         46
960: sipush        1000
963: if_icmpne     970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #73
974: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 3072
End line: 3087
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        int int8 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertNull(doubleArray9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #212
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: dconst_0
34: invokevirtual #129
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #31
45: dastore
46: dup
47: iconst_1
48: dconst_1
49: dastore
50: astore_2
51: iconst_1
52: anewarray     #130
55: dup
56: iconst_0
57: aload_2
58: aastore
59: astore_3
60: aload_1
61: aload_3
62: putfield      #131
65: aload_1
66: invokevirtual #110
69: istore        4
71: aload_1
72: getfield      #122
75: astore        5
77: aload_2
78: invokestatic  #56
81: aload_2
82: invokestatic  #61
85: ldc           #134
87: invokestatic  #59
90: aload_3
91: invokestatic  #56
94: new           #64
97: dup
98: invokespecial #65
101: ldc           #66
103: invokevirtual #67
106: iload         4
108: invokevirtual #102
111: ldc           #69
113: invokevirtual #67
116: ldc           #111
118: invokevirtual #102
121: ldc           #66
123: invokevirtual #67
126: invokevirtual #71
129: iload         4
131: ldc           #111
133: if_icmpne     140
136: iconst_1
137: goto          141
140: iconst_0
141: invokestatic  #73
144: aload         5
146: invokestatic  #106
149: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 3090
End line: 3109
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer3.rows = 0;
        levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer3.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer3.cost = (short) 100;
        int int12 = levenbergMarquardtOptimizer3.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker13 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer3.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker13);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker13;
        int int16 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: invokevirtual #10
36: aload_1
37: getfield      #122
40: astore_2
41: new           #8
44: dup
45: invokespecial #9
48: astore_3
49: aload_3
50: iconst_0
51: putfield      #93
54: aload_3
55: iconst_1
56: invokevirtual #76
59: aload_3
60: ldc2_w        #31
63: invokevirtual #94
66: aload_3
67: ldc2_w        #95
70: putfield      #97
73: aload_3
74: invokevirtual #98
77: istore        4
79: new           #99
82: dup
83: invokespecial #100
86: astore        5
88: aload_3
89: aload         5
91: invokevirtual #101
94: aload_1
95: aload         5
97: putfield      #140
100: aload_1
101: invokevirtual #133
104: istore        6
106: aload_2
107: invokestatic  #106
110: new           #64
113: dup
114: invokespecial #65
117: ldc           #66
119: invokevirtual #67
122: iload         4
124: invokevirtual #102
127: ldc           #69
129: invokevirtual #67
132: sipush        1000
135: invokevirtual #102
138: ldc           #66
140: invokevirtual #67
143: invokevirtual #71
146: iload         4
148: sipush        1000
151: if_icmpne     158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #73
162: new           #64
165: dup
166: invokespecial #65
169: ldc           #66
171: invokevirtual #67
174: iload         6
176: invokevirtual #102
179: ldc           #69
181: invokevirtual #67
184: iconst_0
185: invokevirtual #102
188: ldc           #66
190: invokevirtual #67
193: invokevirtual #71
196: iload         6
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #73
209: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 3112
End line: 3198
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray80 = levenbergMarquardtOptimizer0.residualsWeights;
        double double81 = levenbergMarquardtOptimizer0.getRMS();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #214
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: getfield      #122
538: astore        44
540: aload_1
541: getfield      #113
544: astore        45
546: aload_1
547: invokevirtual #132
550: dstore        46
552: aload_3
553: invokestatic  #56
556: aload_3
557: invokestatic  #57
560: ldc           #58
562: invokestatic  #59
565: aload_3
566: invokestatic  #60
569: ldc           #58
571: invokestatic  #59
574: aload         7
576: invokestatic  #56
579: aload         7
581: invokestatic  #57
584: ldc           #58
586: invokestatic  #59
589: aload         7
591: invokestatic  #60
594: ldc           #58
596: invokestatic  #59
599: aload         10
601: invokestatic  #56
604: aload         10
606: invokestatic  #61
609: ldc           #62
611: invokestatic  #59
614: aload         12
616: invokestatic  #56
619: aload         12
621: invokestatic  #57
624: ldc           #63
626: invokestatic  #59
629: aload         12
631: invokestatic  #60
634: ldc           #63
636: invokestatic  #59
639: aload         13
641: invokestatic  #56
644: new           #64
647: dup
648: invokespecial #65
651: ldc           #66
653: invokevirtual #67
656: aload         17
658: invokevirtual #68
661: ldc           #69
663: invokevirtual #67
666: getstatic     #70
669: invokevirtual #68
672: ldc           #66
674: invokevirtual #67
677: invokevirtual #71
680: aload         17
682: getstatic     #70
685: invokevirtual #72
688: invokestatic  #73
691: aload         19
693: invokestatic  #56
696: aload         19
698: invokestatic  #57
701: ldc           #63
703: invokestatic  #59
706: aload         19
708: invokestatic  #60
711: ldc           #63
713: invokestatic  #59
716: aload         20
718: invokestatic  #56
721: new           #64
724: dup
725: invokespecial #65
728: ldc           #66
730: invokevirtual #67
733: aload         25
735: invokevirtual #68
738: ldc           #69
740: invokevirtual #67
743: getstatic     #70
746: invokevirtual #68
749: ldc           #66
751: invokevirtual #67
754: invokevirtual #71
757: aload         25
759: getstatic     #70
762: invokevirtual #72
765: invokestatic  #73
768: aload         27
770: invokestatic  #56
773: aload         27
775: invokestatic  #57
778: ldc           #63
780: invokestatic  #59
783: aload         27
785: invokestatic  #60
788: ldc           #63
790: invokestatic  #59
793: aload         28
795: invokestatic  #56
798: aload         30
800: invokestatic  #56
803: aload         31
805: invokestatic  #56
808: aload         33
810: invokestatic  #56
813: aload         37
815: invokestatic  #56
818: aload         37
820: invokestatic  #57
823: ldc           #74
825: invokestatic  #59
828: aload         37
830: invokestatic  #60
833: ldc           #74
835: invokestatic  #59
838: aload         39
840: invokestatic  #56
843: aload         39
845: invokestatic  #57
848: ldc           #74
850: invokestatic  #59
853: aload         39
855: invokestatic  #60
858: ldc           #74
860: invokestatic  #59
863: aload         40
865: invokestatic  #56
868: aload         44
870: invokestatic  #106
873: aload         45
875: invokestatic  #106
878: dload         46
880: invokestatic  #135
883: invokestatic  #136
886: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 3201
End line: 3226
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 0);
        int int20 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: dconst_0
142: invokevirtual #162
145: aload_1
146: getfield      #105
149: istore        12
151: aload         6
153: invokestatic  #56
156: aload         6
158: invokestatic  #57
161: ldc           #74
163: invokestatic  #59
166: aload         6
168: invokestatic  #60
171: ldc           #74
173: invokestatic  #59
176: aload         9
178: invokestatic  #56
181: aload         9
183: invokestatic  #61
186: ldc           #90
188: invokestatic  #59
191: aload         10
193: invokestatic  #56
196: aload         10
198: invokestatic  #61
201: ldc           #91
203: invokestatic  #59
206: new           #64
209: dup
210: invokespecial #65
213: ldc           #66
215: invokevirtual #67
218: iload         12
220: invokevirtual #102
223: ldc           #69
225: invokevirtual #67
228: iconst_0
229: invokevirtual #102
232: ldc           #66
234: invokevirtual #67
237: invokevirtual #71
240: iload         12
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #73
253: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 3229
End line: 3339
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException81 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable84 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable84);
        org.apache.commons.math.exception.util.Localizable localizable86 = null;
        java.lang.Object[] objArray89 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException90 = new org.apache.commons.math.MathRuntimeException(throwable84, localizable86, objArray89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException81, 0.0d, "hi!", objArray89);
        double[] doubleArray92 = functionEvaluationException91.getArgument();
        double[] doubleArray94 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray92, doubleArray94);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException(doubleArray94);
        levenbergMarquardtOptimizer0.objective = doubleArray94;
        double[] doubleArray98 = levenbergMarquardtOptimizer0.residuals;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[97.0]");
        org.junit.Assert.assertNull(doubleArray98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: new           #81
543: dup
544: iconst_m1
545: invokespecial #82
548: astore        46
550: aconst_null
551: astore        47
553: new           #27
556: dup
557: aload         47
559: invokespecial #39
562: astore        48
564: aconst_null
565: astore        49
567: iconst_2
568: anewarray     #5
571: dup
572: iconst_0
573: ldc           #28
575: aastore
576: dup
577: iconst_1
578: iconst_1
579: invokestatic  #17
582: aastore
583: astore        50
585: new           #27
588: dup
589: aload         47
591: aload         49
593: aload         50
595: invokespecial #47
598: astore        51
600: new           #23
603: dup
604: aload         46
606: dconst_0
607: ldc           #28
609: aload         50
611: invokespecial #83
614: astore        52
616: aload         52
618: invokevirtual #84
621: astore        53
623: iconst_1
624: newarray       double
626: dup
627: iconst_0
628: ldc2_w        #85
631: dastore
632: astore        54
634: new           #87
637: dup
638: aload         53
640: aload         54
642: invokespecial #88
645: astore        55
647: new           #23
650: dup
651: aload         54
653: invokespecial #89
656: astore        56
658: aload_1
659: aload         54
661: putfield      #114
664: aload_1
665: getfield      #122
668: astore        57
670: aload_1
671: invokevirtual #11
674: astore        58
676: ldc           #12
678: invokestatic  #13
681: goto          686
684: astore        58
686: aload_3
687: invokestatic  #56
690: aload_3
691: invokestatic  #57
694: ldc           #58
696: invokestatic  #59
699: aload_3
700: invokestatic  #60
703: ldc           #58
705: invokestatic  #59
708: aload         7
710: invokestatic  #56
713: aload         7
715: invokestatic  #57
718: ldc           #58
720: invokestatic  #59
723: aload         7
725: invokestatic  #60
728: ldc           #58
730: invokestatic  #59
733: aload         10
735: invokestatic  #56
738: aload         10
740: invokestatic  #61
743: ldc           #62
745: invokestatic  #59
748: aload         12
750: invokestatic  #56
753: aload         12
755: invokestatic  #57
758: ldc           #63
760: invokestatic  #59
763: aload         12
765: invokestatic  #60
768: ldc           #63
770: invokestatic  #59
773: aload         13
775: invokestatic  #56
778: new           #64
781: dup
782: invokespecial #65
785: ldc           #66
787: invokevirtual #67
790: aload         17
792: invokevirtual #68
795: ldc           #69
797: invokevirtual #67
800: getstatic     #70
803: invokevirtual #68
806: ldc           #66
808: invokevirtual #67
811: invokevirtual #71
814: aload         17
816: getstatic     #70
819: invokevirtual #72
822: invokestatic  #73
825: aload         19
827: invokestatic  #56
830: aload         19
832: invokestatic  #57
835: ldc           #63
837: invokestatic  #59
840: aload         19
842: invokestatic  #60
845: ldc           #63
847: invokestatic  #59
850: aload         20
852: invokestatic  #56
855: new           #64
858: dup
859: invokespecial #65
862: ldc           #66
864: invokevirtual #67
867: aload         25
869: invokevirtual #68
872: ldc           #69
874: invokevirtual #67
877: getstatic     #70
880: invokevirtual #68
883: ldc           #66
885: invokevirtual #67
888: invokevirtual #71
891: aload         25
893: getstatic     #70
896: invokevirtual #72
899: invokestatic  #73
902: aload         27
904: invokestatic  #56
907: aload         27
909: invokestatic  #57
912: ldc           #63
914: invokestatic  #59
917: aload         27
919: invokestatic  #60
922: ldc           #63
924: invokestatic  #59
927: aload         28
929: invokestatic  #56
932: aload         30
934: invokestatic  #56
937: aload         31
939: invokestatic  #56
942: aload         33
944: invokestatic  #56
947: aload         37
949: invokestatic  #56
952: aload         37
954: invokestatic  #57
957: ldc           #74
959: invokestatic  #59
962: aload         37
964: invokestatic  #60
967: ldc           #74
969: invokestatic  #59
972: aload         39
974: invokestatic  #56
977: aload         39
979: invokestatic  #57
982: ldc           #74
984: invokestatic  #59
987: aload         39
989: invokestatic  #60
992: ldc           #74
994: invokestatic  #59
997: aload         40
999: invokestatic  #56
1002: new           #64
1005: dup
1006: invokespecial #65
1009: ldc           #66
1011: invokevirtual #67
1014: dload         44
1016: invokevirtual #79
1019: ldc           #69
1021: invokevirtual #67
1024: dconst_0
1025: invokevirtual #79
1028: ldc           #66
1030: invokevirtual #67
1033: invokevirtual #71
1036: dload         44
1038: dconst_0
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #73
1051: aload         50
1053: invokestatic  #56
1056: aload         50
1058: invokestatic  #57
1061: ldc           #74
1063: invokestatic  #59
1066: aload         50
1068: invokestatic  #60
1071: ldc           #74
1073: invokestatic  #59
1076: aload         53
1078: invokestatic  #56
1081: aload         53
1083: invokestatic  #61
1086: ldc           #90
1088: invokestatic  #59
1091: aload         54
1093: invokestatic  #56
1096: aload         54
1098: invokestatic  #61
1101: ldc           #91
1103: invokestatic  #59
1106: aload         57
1108: invokestatic  #106
1111: return
Exception table:
from    to  target type
670   681   684   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 3342
End line: 3376
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray20 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20);
        levenbergMarquardtOptimizer0.residuals = doubleArray20;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray24 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: iconst_1
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #85
136: dastore
137: astore        11
139: new           #87
142: dup
143: aload         10
145: aload         11
147: invokespecial #88
150: astore        12
152: new           #23
155: dup
156: aload         11
158: invokespecial #89
161: astore        13
163: aload_1
164: aload         11
166: putfield      #122
169: aload_1
170: invokevirtual #53
173: astore        14
175: ldc           #54
177: invokestatic  #13
180: goto          185
183: astore        14
185: aload_2
186: invokestatic  #106
189: aload         7
191: invokestatic  #56
194: aload         7
196: invokestatic  #57
199: ldc           #74
201: invokestatic  #59
204: aload         7
206: invokestatic  #60
209: ldc           #74
211: invokestatic  #59
214: aload         10
216: invokestatic  #56
219: aload         10
221: invokestatic  #61
224: ldc           #90
226: invokestatic  #59
229: aload         11
231: invokestatic  #56
234: aload         11
236: invokestatic  #61
239: ldc           #91
241: invokestatic  #59
244: return
Exception table:
from    to  target type
169   180   183   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 3379
End line: 3425
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction5 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28);
        double[] doubleArray31 = functionEvaluationException30.getArgument();
        double[] doubleArray33 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(doubleArray33);
        double[] doubleArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction5, doubleArray18, doubleArray33, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #218
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_m1
39: invokevirtual #76
42: aconst_null
43: astore_2
44: new           #81
47: dup
48: iconst_m1
49: invokespecial #82
52: astore_3
53: aconst_null
54: astore        4
56: new           #27
59: dup
60: aload         4
62: invokespecial #39
65: astore        5
67: aconst_null
68: astore        6
70: iconst_2
71: anewarray     #5
74: dup
75: iconst_0
76: ldc           #28
78: aastore
79: dup
80: iconst_1
81: iconst_1
82: invokestatic  #17
85: aastore
86: astore        7
88: new           #27
91: dup
92: aload         4
94: aload         6
96: aload         7
98: invokespecial #47
101: astore        8
103: new           #23
106: dup
107: aload_3
108: dconst_0
109: ldc           #28
111: aload         7
113: invokespecial #83
116: astore        9
118: aload         9
120: invokevirtual #84
123: astore        10
125: new           #81
128: dup
129: iconst_m1
130: invokespecial #82
133: astore        11
135: aconst_null
136: astore        12
138: new           #27
141: dup
142: aload         12
144: invokespecial #39
147: astore        13
149: aconst_null
150: astore        14
152: iconst_2
153: anewarray     #5
156: dup
157: iconst_0
158: ldc           #28
160: aastore
161: dup
162: iconst_1
163: iconst_1
164: invokestatic  #17
167: aastore
168: astore        15
170: new           #27
173: dup
174: aload         12
176: aload         14
178: aload         15
180: invokespecial #47
183: astore        16
185: new           #23
188: dup
189: aload         11
191: dconst_0
192: ldc           #28
194: aload         15
196: invokespecial #83
199: astore        17
201: aload         17
203: invokevirtual #84
206: astore        18
208: iconst_1
209: newarray       double
211: dup
212: iconst_0
213: ldc2_w        #85
216: dastore
217: astore        19
219: new           #87
222: dup
223: aload         18
225: aload         19
227: invokespecial #88
230: astore        20
232: new           #23
235: dup
236: aload         19
238: invokespecial #89
241: astore        21
243: aconst_null
244: astore        22
246: aload_1
247: aload_2
248: aload         10
250: aload         19
252: aload         22
254: invokevirtual #124
257: astore        23
259: ldc           #54
261: invokestatic  #13
264: goto          269
267: astore        23
269: aload         7
271: invokestatic  #56
274: aload         7
276: invokestatic  #57
279: ldc           #74
281: invokestatic  #59
284: aload         7
286: invokestatic  #60
289: ldc           #74
291: invokestatic  #59
294: aload         10
296: invokestatic  #56
299: aload         10
301: invokestatic  #61
304: ldc           #90
306: invokestatic  #59
309: aload         15
311: invokestatic  #56
314: aload         15
316: invokestatic  #57
319: ldc           #74
321: invokestatic  #59
324: aload         15
326: invokestatic  #60
329: ldc           #74
331: invokestatic  #59
334: aload         18
336: invokestatic  #56
339: aload         18
341: invokestatic  #61
344: ldc           #90
346: invokestatic  #59
349: aload         19
351: invokestatic  #56
354: aload         19
356: invokestatic  #61
359: ldc           #91
361: invokestatic  #59
364: return
Exception table:
from    to  target type
246   264   267   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 3428
End line: 3459
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #219
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: getfield      #113
144: astore        12
146: aload_1
147: invokevirtual #78
150: astore        13
152: ldc           #54
154: invokestatic  #13
157: goto          162
160: astore        13
162: aload         6
164: invokestatic  #56
167: aload         6
169: invokestatic  #57
172: ldc           #74
174: invokestatic  #59
177: aload         6
179: invokestatic  #60
182: ldc           #74
184: invokestatic  #59
187: aload         9
189: invokestatic  #56
192: aload         9
194: invokestatic  #61
197: ldc           #90
199: invokestatic  #59
202: aload         10
204: invokestatic  #56
207: aload         10
209: invokestatic  #61
212: ldc           #91
214: invokestatic  #59
217: aload         12
219: invokestatic  #106
222: return
Exception table:
from    to  target type
146   157   160   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 3462
End line: 3475
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setParRelativeTolerance(Double.POSITIVE_INFINITY);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #220
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: invokevirtual #98
46: istore_2
47: aload_1
48: invokevirtual #167
51: istore_3
52: aload_1
53: ldc2_w        #222
56: invokevirtual #204
59: aload_1
60: getfield      #140
63: astore        4
65: new           #64
68: dup
69: invokespecial #65
72: ldc           #66
74: invokevirtual #67
77: iload_2
78: invokevirtual #102
81: ldc           #69
83: invokevirtual #67
86: sipush        1000
89: invokevirtual #102
92: ldc           #66
94: invokevirtual #67
97: invokevirtual #71
100: iload_2
101: sipush        1000
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #73
115: new           #64
118: dup
119: invokespecial #65
122: ldc           #66
124: invokevirtual #67
127: iload_3
128: invokevirtual #102
131: ldc           #69
133: invokevirtual #67
136: iconst_0
137: invokevirtual #102
140: ldc           #66
142: invokevirtual #67
145: invokevirtual #71
148: iload_3
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #73
160: aload         4
162: invokestatic  #106
165: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 3478
End line: 3491
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int4 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double double6 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: invokevirtual #76
37: aload_1
38: invokevirtual #98
41: istore_2
42: aload_1
43: invokevirtual #126
46: istore_3
47: aload_1
48: invokevirtual #104
51: astore        4
53: aload_1
54: invokevirtual #77
57: dstore        5
59: new           #64
62: dup
63: invokespecial #65
66: ldc           #66
68: invokevirtual #67
71: iload_2
72: invokevirtual #102
75: ldc           #69
77: invokevirtual #67
80: sipush        1000
83: invokevirtual #102
86: ldc           #66
88: invokevirtual #67
91: invokevirtual #71
94: iload_2
95: sipush        1000
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #73
109: new           #64
112: dup
113: invokespecial #65
116: ldc           #66
118: invokevirtual #67
121: iload_3
122: invokevirtual #102
125: ldc           #69
127: invokevirtual #67
130: iconst_0
131: invokevirtual #102
134: ldc           #66
136: invokevirtual #67
139: invokevirtual #71
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #73
154: aload         4
156: invokestatic  #106
159: new           #64
162: dup
163: invokespecial #65
166: ldc           #66
168: invokevirtual #67
171: dload         5
173: invokevirtual #79
176: ldc           #69
178: invokevirtual #67
181: dconst_0
182: invokevirtual #79
185: ldc           #66
187: invokevirtual #67
190: invokevirtual #71
193: dload         5
195: dconst_0
196: dcmpl
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #73
208: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 3494
End line: 3519
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.rows = (byte) 100;
        levenbergMarquardtOptimizer0.setMaxEvaluations(10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: invokevirtual #126
53: istore_2
54: aload_1
55: invokevirtual #126
58: istore_3
59: aload_1
60: getfield      #122
63: astore        4
65: new           #8
68: dup
69: invokespecial #9
72: astore        5
74: aload         5
76: iconst_0
77: putfield      #93
80: aload         5
82: iconst_1
83: invokevirtual #76
86: aload         5
88: ldc2_w        #31
91: invokevirtual #94
94: aload         5
96: ldc2_w        #95
99: putfield      #97
102: aload         5
104: invokevirtual #98
107: istore        6
109: new           #99
112: dup
113: invokespecial #100
116: astore        7
118: aload         5
120: aload         7
122: invokevirtual #101
125: aload_1
126: aload         7
128: invokevirtual #101
131: aload_1
132: bipush        100
134: putfield      #93
137: aload_1
138: bipush        10
140: invokevirtual #76
143: new           #64
146: dup
147: invokespecial #65
150: ldc           #66
152: invokevirtual #67
155: iload_2
156: invokevirtual #102
159: ldc           #69
161: invokevirtual #67
164: iconst_0
165: invokevirtual #102
168: ldc           #66
170: invokevirtual #67
173: invokevirtual #71
176: iload_2
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #73
188: new           #64
191: dup
192: invokespecial #65
195: ldc           #66
197: invokevirtual #67
200: iload_3
201: invokevirtual #102
204: ldc           #69
206: invokevirtual #67
209: iconst_0
210: invokevirtual #102
213: ldc           #66
215: invokevirtual #67
218: invokevirtual #71
221: iload_3
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #73
233: aload         4
235: invokestatic  #106
238: new           #64
241: dup
242: invokespecial #65
245: ldc           #66
247: invokevirtual #67
250: iload         6
252: invokevirtual #102
255: ldc           #69
257: invokevirtual #67
260: sipush        1000
263: invokevirtual #102
266: ldc           #66
268: invokevirtual #67
271: invokevirtual #71
274: iload         6
276: sipush        1000
279: if_icmpne     286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #73
290: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 3522
End line: 3571
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false);
        double[] doubleArray39 = vectorialPointValuePair38.getPointRef();
        double[] doubleArray40 = vectorialPointValuePair38.getPoint();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: new           #81
144: dup
145: iconst_m1
146: invokespecial #82
149: astore        12
151: aconst_null
152: astore        13
154: new           #27
157: dup
158: aload         13
160: invokespecial #39
163: astore        14
165: aconst_null
166: astore        15
168: iconst_2
169: anewarray     #5
172: dup
173: iconst_0
174: ldc           #28
176: aastore
177: dup
178: iconst_1
179: iconst_1
180: invokestatic  #17
183: aastore
184: astore        16
186: new           #27
189: dup
190: aload         13
192: aload         15
194: aload         16
196: invokespecial #47
199: astore        17
201: new           #23
204: dup
205: aload         12
207: dconst_0
208: ldc           #28
210: aload         16
212: invokespecial #83
215: astore        18
217: aload         18
219: invokevirtual #84
222: astore        19
224: iconst_1
225: newarray       double
227: dup
228: iconst_0
229: ldc2_w        #85
232: dastore
233: astore        20
235: new           #87
238: dup
239: aload         19
241: aload         20
243: invokespecial #88
246: astore        21
248: new           #87
251: dup
252: aload         11
254: aload         19
256: iconst_0
257: invokespecial #117
260: astore        22
262: aload         22
264: invokevirtual #159
267: astore        23
269: aload         22
271: invokevirtual #185
274: astore        24
276: aload_2
277: invokestatic  #106
280: aload         7
282: invokestatic  #56
285: aload         7
287: invokestatic  #57
290: ldc           #74
292: invokestatic  #59
295: aload         7
297: invokestatic  #60
300: ldc           #74
302: invokestatic  #59
305: aload         10
307: invokestatic  #56
310: aload         10
312: invokestatic  #61
315: ldc           #90
317: invokestatic  #59
320: aload         11
322: invokestatic  #56
325: aload         11
327: invokestatic  #61
330: ldc           #90
332: invokestatic  #59
335: aload         16
337: invokestatic  #56
340: aload         16
342: invokestatic  #57
345: ldc           #74
347: invokestatic  #59
350: aload         16
352: invokestatic  #60
355: ldc           #74
357: invokestatic  #59
360: aload         19
362: invokestatic  #56
365: aload         19
367: invokestatic  #61
370: ldc           #90
372: invokestatic  #59
375: aload         20
377: invokestatic  #56
380: aload         20
382: invokestatic  #61
385: ldc           #91
387: invokestatic  #59
390: aload         23
392: invokestatic  #56
395: aload         23
397: invokestatic  #61
400: ldc           #90
402: invokestatic  #59
405: aload         24
407: invokestatic  #56
410: aload         24
412: invokestatic  #61
415: ldc           #90
417: invokestatic  #59
420: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 3574
End line: 3604
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 1);
        double[] doubleArray25 = levenbergMarquardtOptimizer0.objective;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: iconst_1
150: invokevirtual #76
153: aload_1
154: getfield      #114
157: astore        12
159: aload_2
160: invokestatic  #106
163: aload         7
165: invokestatic  #56
168: aload         7
170: invokestatic  #57
173: ldc           #74
175: invokestatic  #59
178: aload         7
180: invokestatic  #60
183: ldc           #74
185: invokestatic  #59
188: aload         10
190: invokestatic  #56
193: aload         10
195: invokestatic  #61
198: ldc           #90
200: invokestatic  #59
203: aload         11
205: invokestatic  #56
208: aload         11
210: invokestatic  #61
213: ldc           #90
215: invokestatic  #59
218: aload         12
220: invokestatic  #56
223: aload         12
225: invokestatic  #61
228: ldc           #90
230: invokestatic  #59
233: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 3607
End line: 3643
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24);
        levenbergMarquardtOptimizer0.targetValues = doubleArray24;
        int int27 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateJacobian();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: new           #81
77: dup
78: iconst_m1
79: invokespecial #82
82: astore        4
84: aconst_null
85: astore        5
87: new           #27
90: dup
91: aload         5
93: invokespecial #39
96: astore        6
98: aconst_null
99: astore        7
101: iconst_2
102: anewarray     #5
105: dup
106: iconst_0
107: ldc           #28
109: aastore
110: dup
111: iconst_1
112: iconst_1
113: invokestatic  #17
116: aastore
117: astore        8
119: new           #27
122: dup
123: aload         5
125: aload         7
127: aload         8
129: invokespecial #47
132: astore        9
134: new           #23
137: dup
138: aload         4
140: dconst_0
141: ldc           #28
143: aload         8
145: invokespecial #83
148: astore        10
150: aload         10
152: invokevirtual #84
155: astore        11
157: new           #23
160: dup
161: aload         11
163: invokespecial #89
166: astore        12
168: aload_1
169: aload         11
171: putfield      #152
174: aload_1
175: invokevirtual #133
178: istore        13
180: aload_1
181: invokevirtual #165
184: ldc           #54
186: invokestatic  #13
189: goto          194
192: astore        14
194: new           #64
197: dup
198: invokespecial #65
201: ldc           #66
203: invokevirtual #67
206: iload_2
207: invokevirtual #102
210: ldc           #69
212: invokevirtual #67
215: sipush        1000
218: invokevirtual #102
221: ldc           #66
223: invokevirtual #67
226: invokevirtual #71
229: iload_2
230: sipush        1000
233: if_icmpne     240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #73
244: aload         8
246: invokestatic  #56
249: aload         8
251: invokestatic  #57
254: ldc           #74
256: invokestatic  #59
259: aload         8
261: invokestatic  #60
264: ldc           #74
266: invokestatic  #59
269: aload         11
271: invokestatic  #56
274: aload         11
276: invokestatic  #61
279: ldc           #90
281: invokestatic  #59
284: new           #64
287: dup
288: invokespecial #65
291: ldc           #66
293: invokevirtual #67
296: iload         13
298: invokevirtual #102
301: ldc           #69
303: invokevirtual #67
306: iconst_0
307: invokevirtual #102
310: ldc           #66
312: invokevirtual #67
315: invokevirtual #71
318: iload         13
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #73
331: return
Exception table:
from    to  target type
180   189   192   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 3646
End line: 3662
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 100);
        double[] doubleArray16 = levenbergMarquardtOptimizer0.residuals;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNull(doubleArray16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: ldc2_w        #95
53: putfield      #97
56: aload_1
57: invokevirtual #98
60: istore_2
61: new           #99
64: dup
65: invokespecial #100
68: astore_3
69: aload_1
70: aload_3
71: invokevirtual #101
74: aload_1
75: bipush        100
77: invokevirtual #76
80: aload_1
81: ldc2_w        #95
84: invokevirtual #162
87: aload_1
88: getfield      #122
91: astore        4
93: new           #64
96: dup
97: invokespecial #65
100: ldc           #66
102: invokevirtual #67
105: iload_2
106: invokevirtual #102
109: ldc           #69
111: invokevirtual #67
114: sipush        1000
117: invokevirtual #102
120: ldc           #66
122: invokevirtual #67
125: invokevirtual #71
128: iload_2
129: sipush        1000
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #73
143: aload         4
145: invokestatic  #106
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3665
End line: 3752
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int83 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: iconst_1
548: invokevirtual #76
551: aload_1
552: invokevirtual #167
555: istore        47
557: aload_3
558: invokestatic  #56
561: aload_3
562: invokestatic  #57
565: ldc           #58
567: invokestatic  #59
570: aload_3
571: invokestatic  #60
574: ldc           #58
576: invokestatic  #59
579: aload         7
581: invokestatic  #56
584: aload         7
586: invokestatic  #57
589: ldc           #58
591: invokestatic  #59
594: aload         7
596: invokestatic  #60
599: ldc           #58
601: invokestatic  #59
604: aload         10
606: invokestatic  #56
609: aload         10
611: invokestatic  #61
614: ldc           #62
616: invokestatic  #59
619: aload         12
621: invokestatic  #56
624: aload         12
626: invokestatic  #57
629: ldc           #63
631: invokestatic  #59
634: aload         12
636: invokestatic  #60
639: ldc           #63
641: invokestatic  #59
644: aload         13
646: invokestatic  #56
649: new           #64
652: dup
653: invokespecial #65
656: ldc           #66
658: invokevirtual #67
661: aload         17
663: invokevirtual #68
666: ldc           #69
668: invokevirtual #67
671: getstatic     #70
674: invokevirtual #68
677: ldc           #66
679: invokevirtual #67
682: invokevirtual #71
685: aload         17
687: getstatic     #70
690: invokevirtual #72
693: invokestatic  #73
696: aload         19
698: invokestatic  #56
701: aload         19
703: invokestatic  #57
706: ldc           #63
708: invokestatic  #59
711: aload         19
713: invokestatic  #60
716: ldc           #63
718: invokestatic  #59
721: aload         20
723: invokestatic  #56
726: new           #64
729: dup
730: invokespecial #65
733: ldc           #66
735: invokevirtual #67
738: aload         25
740: invokevirtual #68
743: ldc           #69
745: invokevirtual #67
748: getstatic     #70
751: invokevirtual #68
754: ldc           #66
756: invokevirtual #67
759: invokevirtual #71
762: aload         25
764: getstatic     #70
767: invokevirtual #72
770: invokestatic  #73
773: aload         27
775: invokestatic  #56
778: aload         27
780: invokestatic  #57
783: ldc           #63
785: invokestatic  #59
788: aload         27
790: invokestatic  #60
793: ldc           #63
795: invokestatic  #59
798: aload         28
800: invokestatic  #56
803: aload         30
805: invokestatic  #56
808: aload         31
810: invokestatic  #56
813: aload         33
815: invokestatic  #56
818: aload         37
820: invokestatic  #56
823: aload         37
825: invokestatic  #57
828: ldc           #74
830: invokestatic  #59
833: aload         37
835: invokestatic  #60
838: ldc           #74
840: invokestatic  #59
843: aload         39
845: invokestatic  #56
848: aload         39
850: invokestatic  #57
853: ldc           #74
855: invokestatic  #59
858: aload         39
860: invokestatic  #60
863: ldc           #74
865: invokestatic  #59
868: aload         40
870: invokestatic  #56
873: new           #64
876: dup
877: invokespecial #65
880: ldc           #66
882: invokevirtual #67
885: dload         44
887: invokevirtual #79
890: ldc           #69
892: invokevirtual #67
895: dconst_0
896: invokevirtual #79
899: ldc           #66
901: invokevirtual #67
904: invokevirtual #71
907: dload         44
909: dconst_0
910: dcmpl
911: ifne          918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #73
922: aload         46
924: invokestatic  #106
927: new           #64
930: dup
931: invokespecial #65
934: ldc           #66
936: invokevirtual #67
939: iload         47
941: invokevirtual #102
944: ldc           #69
946: invokevirtual #67
949: iconst_0
950: invokevirtual #102
953: ldc           #66
955: invokevirtual #67
958: invokevirtual #71
961: iload         47
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #73
974: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3755
End line: 3765
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1);
        int int9 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: iconst_m1
51: invokevirtual #76
54: aload_1
55: invokevirtual #167
58: istore_2
59: new           #64
62: dup
63: invokespecial #65
66: ldc           #66
68: invokevirtual #67
71: iload_2
72: invokevirtual #102
75: ldc           #69
77: invokevirtual #67
80: iconst_0
81: invokevirtual #102
84: ldc           #66
86: invokevirtual #67
89: invokevirtual #71
92: iload_2
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #73
104: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3768
End line: 3858
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 10);
        double[] doubleArray84 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: invokevirtual #133
550: istore        47
552: aload_1
553: ldc2_w        #33
556: invokevirtual #127
559: aload_1
560: getfield      #52
563: astore        48
565: aload_3
566: invokestatic  #56
569: aload_3
570: invokestatic  #57
573: ldc           #58
575: invokestatic  #59
578: aload_3
579: invokestatic  #60
582: ldc           #58
584: invokestatic  #59
587: aload         7
589: invokestatic  #56
592: aload         7
594: invokestatic  #57
597: ldc           #58
599: invokestatic  #59
602: aload         7
604: invokestatic  #60
607: ldc           #58
609: invokestatic  #59
612: aload         10
614: invokestatic  #56
617: aload         10
619: invokestatic  #61
622: ldc           #62
624: invokestatic  #59
627: aload         12
629: invokestatic  #56
632: aload         12
634: invokestatic  #57
637: ldc           #63
639: invokestatic  #59
642: aload         12
644: invokestatic  #60
647: ldc           #63
649: invokestatic  #59
652: aload         13
654: invokestatic  #56
657: new           #64
660: dup
661: invokespecial #65
664: ldc           #66
666: invokevirtual #67
669: aload         17
671: invokevirtual #68
674: ldc           #69
676: invokevirtual #67
679: getstatic     #70
682: invokevirtual #68
685: ldc           #66
687: invokevirtual #67
690: invokevirtual #71
693: aload         17
695: getstatic     #70
698: invokevirtual #72
701: invokestatic  #73
704: aload         19
706: invokestatic  #56
709: aload         19
711: invokestatic  #57
714: ldc           #63
716: invokestatic  #59
719: aload         19
721: invokestatic  #60
724: ldc           #63
726: invokestatic  #59
729: aload         20
731: invokestatic  #56
734: new           #64
737: dup
738: invokespecial #65
741: ldc           #66
743: invokevirtual #67
746: aload         25
748: invokevirtual #68
751: ldc           #69
753: invokevirtual #67
756: getstatic     #70
759: invokevirtual #68
762: ldc           #66
764: invokevirtual #67
767: invokevirtual #71
770: aload         25
772: getstatic     #70
775: invokevirtual #72
778: invokestatic  #73
781: aload         27
783: invokestatic  #56
786: aload         27
788: invokestatic  #57
791: ldc           #63
793: invokestatic  #59
796: aload         27
798: invokestatic  #60
801: ldc           #63
803: invokestatic  #59
806: aload         28
808: invokestatic  #56
811: aload         30
813: invokestatic  #56
816: aload         31
818: invokestatic  #56
821: aload         33
823: invokestatic  #56
826: aload         37
828: invokestatic  #56
831: aload         37
833: invokestatic  #57
836: ldc           #74
838: invokestatic  #59
841: aload         37
843: invokestatic  #60
846: ldc           #74
848: invokestatic  #59
851: aload         39
853: invokestatic  #56
856: aload         39
858: invokestatic  #57
861: ldc           #74
863: invokestatic  #59
866: aload         39
868: invokestatic  #60
871: ldc           #74
873: invokestatic  #59
876: aload         40
878: invokestatic  #56
881: new           #64
884: dup
885: invokespecial #65
888: ldc           #66
890: invokevirtual #67
893: dload         44
895: invokevirtual #79
898: ldc           #69
900: invokevirtual #67
903: dconst_0
904: invokevirtual #79
907: ldc           #66
909: invokevirtual #67
912: invokevirtual #71
915: dload         44
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #73
930: aload         46
932: invokestatic  #106
935: new           #64
938: dup
939: invokespecial #65
942: ldc           #66
944: invokevirtual #67
947: iload         47
949: invokevirtual #102
952: ldc           #69
954: invokevirtual #67
957: iconst_0
958: invokevirtual #102
961: ldc           #66
963: invokevirtual #67
966: invokevirtual #71
969: iload         47
971: ifne          978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #73
982: aload         48
984: invokestatic  #56
987: aload         48
989: invokestatic  #61
992: ldc           #62
994: invokestatic  #59
997: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3861
End line: 3948
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (short) 10);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: iconst_1
531: invokevirtual #76
534: aload_1
535: invokevirtual #77
538: dstore        44
540: aload_1
541: invokevirtual #104
544: astore        46
546: aload_1
547: invokevirtual #133
550: istore        47
552: aload_1
553: ldc2_w        #33
556: invokevirtual #94
559: aload_3
560: invokestatic  #56
563: aload_3
564: invokestatic  #57
567: ldc           #58
569: invokestatic  #59
572: aload_3
573: invokestatic  #60
576: ldc           #58
578: invokestatic  #59
581: aload         7
583: invokestatic  #56
586: aload         7
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #60
601: ldc           #58
603: invokestatic  #59
606: aload         10
608: invokestatic  #56
611: aload         10
613: invokestatic  #61
616: ldc           #62
618: invokestatic  #59
621: aload         12
623: invokestatic  #56
626: aload         12
628: invokestatic  #57
631: ldc           #63
633: invokestatic  #59
636: aload         12
638: invokestatic  #60
641: ldc           #63
643: invokestatic  #59
646: aload         13
648: invokestatic  #56
651: new           #64
654: dup
655: invokespecial #65
658: ldc           #66
660: invokevirtual #67
663: aload         17
665: invokevirtual #68
668: ldc           #69
670: invokevirtual #67
673: getstatic     #70
676: invokevirtual #68
679: ldc           #66
681: invokevirtual #67
684: invokevirtual #71
687: aload         17
689: getstatic     #70
692: invokevirtual #72
695: invokestatic  #73
698: aload         19
700: invokestatic  #56
703: aload         19
705: invokestatic  #57
708: ldc           #63
710: invokestatic  #59
713: aload         19
715: invokestatic  #60
718: ldc           #63
720: invokestatic  #59
723: aload         20
725: invokestatic  #56
728: new           #64
731: dup
732: invokespecial #65
735: ldc           #66
737: invokevirtual #67
740: aload         25
742: invokevirtual #68
745: ldc           #69
747: invokevirtual #67
750: getstatic     #70
753: invokevirtual #68
756: ldc           #66
758: invokevirtual #67
761: invokevirtual #71
764: aload         25
766: getstatic     #70
769: invokevirtual #72
772: invokestatic  #73
775: aload         27
777: invokestatic  #56
780: aload         27
782: invokestatic  #57
785: ldc           #63
787: invokestatic  #59
790: aload         27
792: invokestatic  #60
795: ldc           #63
797: invokestatic  #59
800: aload         28
802: invokestatic  #56
805: aload         30
807: invokestatic  #56
810: aload         31
812: invokestatic  #56
815: aload         33
817: invokestatic  #56
820: aload         37
822: invokestatic  #56
825: aload         37
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         37
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         39
847: invokestatic  #56
850: aload         39
852: invokestatic  #57
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #60
865: ldc           #74
867: invokestatic  #59
870: aload         40
872: invokestatic  #56
875: new           #64
878: dup
879: invokespecial #65
882: ldc           #66
884: invokevirtual #67
887: dload         44
889: invokevirtual #79
892: ldc           #69
894: invokevirtual #67
897: dconst_0
898: invokevirtual #79
901: ldc           #66
903: invokevirtual #67
906: invokevirtual #71
909: dload         44
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #73
924: aload         46
926: invokestatic  #106
929: new           #64
932: dup
933: invokespecial #65
936: ldc           #66
938: invokevirtual #67
941: iload         47
943: invokevirtual #102
946: ldc           #69
948: invokevirtual #67
951: iconst_0
952: invokevirtual #102
955: ldc           #66
957: invokevirtual #67
960: invokevirtual #71
963: iload         47
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #73
976: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3951
End line: 4027
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer22.rows = 0;
        levenbergMarquardtOptimizer22.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray27 = levenbergMarquardtOptimizer22.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException29 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32);
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable32, localizable34, objArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException29, 0.0d, "hi!", objArray37);
        double[] doubleArray40 = functionEvaluationException39.getArgument();
        double[] doubleArray41 = functionEvaluationException39.getArgument();
        levenbergMarquardtOptimizer22.objective = doubleArray41;
        levenbergMarquardtOptimizer22.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker45 = levenbergMarquardtOptimizer22.checker;
        levenbergMarquardtOptimizer22.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException48 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable51, localizable53, objArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException48, 0.0d, "hi!", objArray56);
        double[] doubleArray59 = functionEvaluationException58.getArgument();
        double[] doubleArray61 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray61);
        levenbergMarquardtOptimizer22.residuals = doubleArray59;
        levenbergMarquardtOptimizer0.objective = doubleArray59;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(doubleArray59);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: getfield      #113
144: astore        12
146: aload_1
147: invokevirtual #167
150: istore        13
152: aload_1
153: getfield      #105
156: istore        14
158: aload_1
159: invokevirtual #167
162: istore        15
164: new           #8
167: dup
168: invokespecial #9
171: astore        16
173: aload         16
175: iconst_0
176: putfield      #93
179: aload         16
181: iconst_1
182: invokevirtual #76
185: aload         16
187: getfield      #113
190: astore        17
192: new           #81
195: dup
196: iconst_m1
197: invokespecial #82
200: astore        18
202: aconst_null
203: astore        19
205: new           #27
208: dup
209: aload         19
211: invokespecial #39
214: astore        20
216: aconst_null
217: astore        21
219: iconst_2
220: anewarray     #5
223: dup
224: iconst_0
225: ldc           #28
227: aastore
228: dup
229: iconst_1
230: iconst_1
231: invokestatic  #17
234: aastore
235: astore        22
237: new           #27
240: dup
241: aload         19
243: aload         21
245: aload         22
247: invokespecial #47
250: astore        23
252: new           #23
255: dup
256: aload         18
258: dconst_0
259: ldc           #28
261: aload         22
263: invokespecial #83
266: astore        24
268: aload         24
270: invokevirtual #84
273: astore        25
275: aload         24
277: invokevirtual #84
280: astore        26
282: aload         16
284: aload         26
286: putfield      #114
289: aload         16
291: sipush        1000
294: invokevirtual #76
297: aload         16
299: getfield      #140
302: astore        27
304: aload         16
306: invokevirtual #10
309: new           #81
312: dup
313: iconst_m1
314: invokespecial #82
317: astore        28
319: aconst_null
320: astore        29
322: new           #27
325: dup
326: aload         29
328: invokespecial #39
331: astore        30
333: aconst_null
334: astore        31
336: iconst_2
337: anewarray     #5
340: dup
341: iconst_0
342: ldc           #28
344: aastore
345: dup
346: iconst_1
347: iconst_1
348: invokestatic  #17
351: aastore
352: astore        32
354: new           #27
357: dup
358: aload         29
360: aload         31
362: aload         32
364: invokespecial #47
367: astore        33
369: new           #23
372: dup
373: aload         28
375: dconst_0
376: ldc           #28
378: aload         32
380: invokespecial #83
383: astore        34
385: aload         34
387: invokevirtual #84
390: astore        35
392: iconst_1
393: newarray       double
395: dup
396: iconst_0
397: ldc2_w        #85
400: dastore
401: astore        36
403: new           #87
406: dup
407: aload         35
409: aload         36
411: invokespecial #88
414: astore        37
416: aload         16
418: aload         35
420: putfield      #122
423: aload_1
424: aload         35
426: putfield      #114
429: new           #23
432: dup
433: aload         35
435: invokespecial #89
438: astore        38
440: aload         6
442: invokestatic  #56
445: aload         6
447: invokestatic  #57
450: ldc           #74
452: invokestatic  #59
455: aload         6
457: invokestatic  #60
460: ldc           #74
462: invokestatic  #59
465: aload         9
467: invokestatic  #56
470: aload         9
472: invokestatic  #61
475: ldc           #90
477: invokestatic  #59
480: aload         10
482: invokestatic  #56
485: aload         10
487: invokestatic  #61
490: ldc           #91
492: invokestatic  #59
495: aload         12
497: invokestatic  #106
500: new           #64
503: dup
504: invokespecial #65
507: ldc           #66
509: invokevirtual #67
512: iload         13
514: invokevirtual #102
517: ldc           #69
519: invokevirtual #67
522: iconst_0
523: invokevirtual #102
526: ldc           #66
528: invokevirtual #67
531: invokevirtual #71
534: iload         13
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #73
547: new           #64
550: dup
551: invokespecial #65
554: ldc           #66
556: invokevirtual #67
559: iload         14
561: invokevirtual #102
564: ldc           #69
566: invokevirtual #67
569: iconst_0
570: invokevirtual #102
573: ldc           #66
575: invokevirtual #67
578: invokevirtual #71
581: iload         14
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #73
594: new           #64
597: dup
598: invokespecial #65
601: ldc           #66
603: invokevirtual #67
606: iload         15
608: invokevirtual #102
611: ldc           #69
613: invokevirtual #67
616: iconst_0
617: invokevirtual #102
620: ldc           #66
622: invokevirtual #67
625: invokevirtual #71
628: iload         15
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #73
641: aload         17
643: invokestatic  #106
646: aload         22
648: invokestatic  #56
651: aload         22
653: invokestatic  #57
656: ldc           #74
658: invokestatic  #59
661: aload         22
663: invokestatic  #60
666: ldc           #74
668: invokestatic  #59
671: aload         25
673: invokestatic  #56
676: aload         25
678: invokestatic  #61
681: ldc           #90
683: invokestatic  #59
686: aload         26
688: invokestatic  #56
691: aload         26
693: invokestatic  #61
696: ldc           #90
698: invokestatic  #59
701: aload         27
703: invokestatic  #106
706: aload         32
708: invokestatic  #56
711: aload         32
713: invokestatic  #57
716: ldc           #74
718: invokestatic  #59
721: aload         32
723: invokestatic  #60
726: ldc           #74
728: invokestatic  #59
731: aload         35
733: invokestatic  #56
736: aload         35
738: invokestatic  #61
741: ldc           #90
743: invokestatic  #59
746: aload         36
748: invokestatic  #56
751: aload         36
753: invokestatic  #61
756: ldc           #91
758: invokestatic  #59
761: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 4030
End line: 4045
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(vectorialConvergenceChecker10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: ldc2_w        #31
46: invokevirtual #94
49: aload_1
50: invokevirtual #126
53: istore_2
54: aload_1
55: invokevirtual #126
58: istore_3
59: aload_1
60: getfield      #122
63: astore        4
65: aload_1
66: getfield      #140
69: astore        5
71: new           #64
74: dup
75: invokespecial #65
78: ldc           #66
80: invokevirtual #67
83: iload_2
84: invokevirtual #102
87: ldc           #69
89: invokevirtual #67
92: iconst_0
93: invokevirtual #102
96: ldc           #66
98: invokevirtual #67
101: invokevirtual #71
104: iload_2
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #73
116: new           #64
119: dup
120: invokespecial #65
123: ldc           #66
125: invokevirtual #67
128: iload_3
129: invokevirtual #102
132: ldc           #69
134: invokevirtual #67
137: iconst_0
138: invokevirtual #102
141: ldc           #66
143: invokevirtual #67
146: invokevirtual #71
149: iload_3
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #73
161: aload         4
163: invokestatic  #106
166: aload         5
168: invokestatic  #106
171: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 4048
End line: 4129
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8);
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern();
        java.lang.String str36 = localizable35.getSourceString();
        java.lang.Throwable throwable37 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58);
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray68 = new double[] { (-1), 1.0f };
        double[][] doubleArray69 = new double[][] { doubleArray68 };
        levenbergMarquardtOptimizer63.jacobian = doubleArray69;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.exception.util.Localizable localizable74 = convergenceException73.getLocalizablePattern();
        java.lang.Object[] objArray75 = null;
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException(localizable74, objArray75);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(localizable35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(noSuchElementException46);
        org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException59);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(localizable74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: iconst_5
27: anewarray     #5
30: dup
31: iconst_0
32: iconst_0
33: invokestatic  #16
36: aastore
37: dup
38: iconst_1
39: iconst_0
40: invokestatic  #17
43: aastore
44: dup
45: iconst_2
46: bipush        52
48: invokestatic  #18
51: aastore
52: dup
53: iconst_3
54: ldc2_w        #19
57: invokestatic  #21
60: aastore
61: dup
62: iconst_4
63: dconst_1
64: invokestatic  #22
67: aastore
68: astore_2
69: new           #23
72: dup
73: ldc2_w        #24
76: aload_1
77: aload_2
78: invokespecial #26
81: astore_3
82: new           #27
85: dup
86: ldc           #28
88: aload_2
89: invokespecial #29
92: astore        4
94: aconst_null
95: astore        5
97: iconst_5
98: anewarray     #5
101: dup
102: iconst_0
103: iconst_0
104: invokestatic  #16
107: aastore
108: dup
109: iconst_1
110: iconst_0
111: invokestatic  #17
114: aastore
115: dup
116: iconst_2
117: bipush        52
119: invokestatic  #18
122: aastore
123: dup
124: iconst_3
125: ldc2_w        #19
128: invokestatic  #21
131: aastore
132: dup
133: iconst_4
134: dconst_1
135: invokestatic  #22
138: aastore
139: astore        6
141: new           #23
144: dup
145: ldc2_w        #24
148: aload         5
150: aload         6
152: invokespecial #26
155: astore        7
157: new           #27
160: dup
161: aload         4
163: ldc           #28
165: aload         6
167: invokespecial #30
170: astore        8
172: aconst_null
173: astore        9
175: new           #27
178: dup
179: aload         9
181: invokespecial #39
184: astore        10
186: aload         10
188: invokevirtual #40
191: astore        11
193: aconst_null
194: astore        12
196: iconst_1
197: anewarray     #5
200: dup
201: iconst_0
202: iconst_1
203: invokestatic  #35
206: aastore
207: astore        13
209: ldc           #28
211: aload         13
213: invokestatic  #36
216: astore        14
218: new           #37
221: dup
222: bipush        100
224: aload         12
226: aload         13
228: invokespecial #38
231: astore        15
233: aload         11
235: aload         13
237: invokestatic  #41
240: astore        16
242: new           #27
245: dup
246: aload         8
248: ldc           #191
250: aload         13
252: invokespecial #30
255: astore        17
257: aload         8
259: invokevirtual #40
262: astore        18
264: aload         18
266: invokeinterface #237,  1
271: astore        19
273: aconst_null
274: astore        20
276: iconst_1
277: anewarray     #5
280: dup
281: iconst_0
282: iconst_1
283: invokestatic  #35
286: aastore
287: astore        21
289: ldc           #28
291: aload         21
293: invokestatic  #36
296: astore        22
298: new           #44
301: dup
302: ldc           #142
304: aload         21
306: invokespecial #238
309: astore        23
311: ldc           #42
313: aload         21
315: invokestatic  #239
318: astore        24
320: new           #240
323: dup
324: invokespecial #241
327: astore        25
329: aconst_null
330: astore        26
332: new           #27
335: dup
336: aload         26
338: invokespecial #39
341: astore        27
343: aload         27
345: invokevirtual #40
348: astore        28
350: aconst_null
351: astore        29
353: new           #27
356: dup
357: aload         29
359: invokespecial #39
362: astore        30
364: aload         30
366: invokevirtual #40
369: astore        31
371: aconst_null
372: astore        32
374: iconst_1
375: anewarray     #5
378: dup
379: iconst_0
380: iconst_1
381: invokestatic  #35
384: aastore
385: astore        33
387: ldc           #28
389: aload         33
391: invokestatic  #36
394: astore        34
396: new           #37
399: dup
400: bipush        100
402: aload         32
404: aload         33
406: invokespecial #38
409: astore        35
411: aload         31
413: aload         33
415: invokestatic  #41
418: astore        36
420: new           #27
423: dup
424: aload         25
426: aload         28
428: aload         33
430: invokespecial #47
433: astore        37
435: new           #8
438: dup
439: invokespecial #9
442: astore        38
444: aload         38
446: dconst_0
447: invokevirtual #129
450: iconst_2
451: newarray       double
453: dup
454: iconst_0
455: ldc2_w        #31
458: dastore
459: dup
460: iconst_1
461: dconst_1
462: dastore
463: astore        39
465: iconst_1
466: anewarray     #130
469: dup
470: iconst_0
471: aload         39
473: aastore
474: astore        40
476: aload         38
478: aload         40
480: putfield      #131
483: new           #44
486: dup
487: aload         24
489: aload         28
491: aload         40
493: checkcast     #143
496: invokespecial #45
499: astore        41
501: new           #240
504: dup
505: aload         20
507: ldc           #242
509: aload         40
511: checkcast     #143
514: invokespecial #243
517: astore        42
519: new           #240
522: dup
523: aload         18
525: aload         40
527: checkcast     #143
530: invokespecial #244
533: astore        43
535: aload         43
537: invokevirtual #245
540: astore        44
542: aconst_null
543: astore        45
545: new           #44
548: dup
549: aload         44
551: aload         45
553: invokespecial #149
556: astore        46
558: aload_2
559: invokestatic  #56
562: aload_2
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_2
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         6
582: invokestatic  #56
585: aload         6
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         6
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: new           #64
608: dup
609: invokespecial #65
612: ldc           #66
614: invokevirtual #67
617: aload         11
619: invokevirtual #68
622: ldc           #69
624: invokevirtual #67
627: getstatic     #70
630: invokevirtual #68
633: ldc           #66
635: invokevirtual #67
638: invokevirtual #71
641: aload         11
643: getstatic     #70
646: invokevirtual #72
649: invokestatic  #73
652: aload         13
654: invokestatic  #56
657: aload         13
659: invokestatic  #57
662: ldc           #63
664: invokestatic  #59
667: aload         13
669: invokestatic  #60
672: ldc           #63
674: invokestatic  #59
677: aload         14
679: invokestatic  #56
682: aload         16
684: invokestatic  #56
687: aload         18
689: invokestatic  #56
692: new           #64
695: dup
696: invokespecial #65
699: ldc           #66
701: invokevirtual #67
704: aload         19
706: invokevirtual #67
709: ldc           #246
711: invokevirtual #67
714: invokevirtual #71
717: aload         19
719: ldc           #28
721: invokestatic  #247
724: aload         21
726: invokestatic  #56
729: aload         21
731: invokestatic  #57
734: ldc           #63
736: invokestatic  #59
739: aload         21
741: invokestatic  #60
744: ldc           #63
746: invokestatic  #59
749: aload         22
751: invokestatic  #56
754: aload         24
756: invokestatic  #56
759: new           #64
762: dup
763: invokespecial #65
766: ldc           #66
768: invokevirtual #67
771: aload         28
773: invokevirtual #68
776: ldc           #69
778: invokevirtual #67
781: getstatic     #70
784: invokevirtual #68
787: ldc           #66
789: invokevirtual #67
792: invokevirtual #71
795: aload         28
797: getstatic     #70
800: invokevirtual #72
803: invokestatic  #73
806: new           #64
809: dup
810: invokespecial #65
813: ldc           #66
815: invokevirtual #67
818: aload         31
820: invokevirtual #68
823: ldc           #69
825: invokevirtual #67
828: getstatic     #70
831: invokevirtual #68
834: ldc           #66
836: invokevirtual #67
839: invokevirtual #71
842: aload         31
844: getstatic     #70
847: invokevirtual #72
850: invokestatic  #73
853: aload         33
855: invokestatic  #56
858: aload         33
860: invokestatic  #57
863: ldc           #63
865: invokestatic  #59
868: aload         33
870: invokestatic  #60
873: ldc           #63
875: invokestatic  #59
878: aload         34
880: invokestatic  #56
883: aload         36
885: invokestatic  #56
888: aload         39
890: invokestatic  #56
893: aload         39
895: invokestatic  #61
898: ldc           #134
900: invokestatic  #59
903: aload         40
905: invokestatic  #56
908: aload         44
910: invokestatic  #56
913: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 4132
End line: 4163
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray25 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertNull(doubleArray25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aload_1
33: iconst_0
34: putfield      #93
37: aload_1
38: iconst_1
39: invokevirtual #76
42: aload_1
43: getfield      #113
46: astore_2
47: new           #81
50: dup
51: iconst_m1
52: invokespecial #82
55: astore_3
56: aconst_null
57: astore        4
59: new           #27
62: dup
63: aload         4
65: invokespecial #39
68: astore        5
70: aconst_null
71: astore        6
73: iconst_2
74: anewarray     #5
77: dup
78: iconst_0
79: ldc           #28
81: aastore
82: dup
83: iconst_1
84: iconst_1
85: invokestatic  #17
88: aastore
89: astore        7
91: new           #27
94: dup
95: aload         4
97: aload         6
99: aload         7
101: invokespecial #47
104: astore        8
106: new           #23
109: dup
110: aload_3
111: dconst_0
112: ldc           #28
114: aload         7
116: invokespecial #83
119: astore        9
121: aload         9
123: invokevirtual #84
126: astore        10
128: aload         9
130: invokevirtual #84
133: astore        11
135: aload_1
136: aload         11
138: putfield      #114
141: aload_1
142: sipush        1000
145: invokevirtual #76
148: aload_1
149: getfield      #140
152: astore        12
154: aload_1
155: invokevirtual #10
158: aload_1
159: getfield      #152
162: astore        13
164: aload_2
165: invokestatic  #106
168: aload         7
170: invokestatic  #56
173: aload         7
175: invokestatic  #57
178: ldc           #74
180: invokestatic  #59
183: aload         7
185: invokestatic  #60
188: ldc           #74
190: invokestatic  #59
193: aload         10
195: invokestatic  #56
198: aload         10
200: invokestatic  #61
203: ldc           #90
205: invokestatic  #59
208: aload         11
210: invokestatic  #56
213: aload         11
215: invokestatic  #61
218: ldc           #90
220: invokestatic  #59
223: aload         12
225: invokestatic  #106
228: aload         13
230: invokestatic  #106
233: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 4166
End line: 4203
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.rows;
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateResidualsAndCost();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: getfield      #113
144: astore        12
146: aload_1
147: invokevirtual #167
150: istore        13
152: aload_1
153: getfield      #105
156: istore        14
158: aload_1
159: getfield      #93
162: istore        15
164: aload_1
165: invokevirtual #174
168: ldc           #54
170: invokestatic  #13
173: goto          178
176: astore        16
178: aload         6
180: invokestatic  #56
183: aload         6
185: invokestatic  #57
188: ldc           #74
190: invokestatic  #59
193: aload         6
195: invokestatic  #60
198: ldc           #74
200: invokestatic  #59
203: aload         9
205: invokestatic  #56
208: aload         9
210: invokestatic  #61
213: ldc           #90
215: invokestatic  #59
218: aload         10
220: invokestatic  #56
223: aload         10
225: invokestatic  #61
228: ldc           #91
230: invokestatic  #59
233: aload         12
235: invokestatic  #106
238: new           #64
241: dup
242: invokespecial #65
245: ldc           #66
247: invokevirtual #67
250: iload         13
252: invokevirtual #102
255: ldc           #69
257: invokevirtual #67
260: iconst_0
261: invokevirtual #102
264: ldc           #66
266: invokevirtual #67
269: invokevirtual #71
272: iload         13
274: ifne          281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #73
285: new           #64
288: dup
289: invokespecial #65
292: ldc           #66
294: invokevirtual #67
297: iload         14
299: invokevirtual #102
302: ldc           #69
304: invokevirtual #67
307: iconst_0
308: invokevirtual #102
311: ldc           #66
313: invokevirtual #67
316: invokevirtual #71
319: iload         14
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #73
332: new           #64
335: dup
336: invokespecial #65
339: ldc           #66
341: invokevirtual #67
344: iload         15
346: invokevirtual #102
349: ldc           #69
351: invokevirtual #67
354: iconst_0
355: invokevirtual #102
358: ldc           #66
360: invokevirtual #67
363: invokevirtual #71
366: iload         15
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #73
379: return
Exception table:
from    to  target type
164   173   176   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 4206
End line: 4290
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int78 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) 100L);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: aconst_null
33: astore_2
34: iconst_5
35: anewarray     #5
38: dup
39: iconst_0
40: iconst_0
41: invokestatic  #16
44: aastore
45: dup
46: iconst_1
47: iconst_0
48: invokestatic  #17
51: aastore
52: dup
53: iconst_2
54: bipush        52
56: invokestatic  #18
59: aastore
60: dup
61: iconst_3
62: ldc2_w        #19
65: invokestatic  #21
68: aastore
69: dup
70: iconst_4
71: dconst_1
72: invokestatic  #22
75: aastore
76: astore_3
77: new           #23
80: dup
81: ldc2_w        #24
84: aload_2
85: aload_3
86: invokespecial #26
89: astore        4
91: new           #27
94: dup
95: ldc           #28
97: aload_3
98: invokespecial #29
101: astore        5
103: aconst_null
104: astore        6
106: iconst_5
107: anewarray     #5
110: dup
111: iconst_0
112: iconst_0
113: invokestatic  #16
116: aastore
117: dup
118: iconst_1
119: iconst_0
120: invokestatic  #17
123: aastore
124: dup
125: iconst_2
126: bipush        52
128: invokestatic  #18
131: aastore
132: dup
133: iconst_3
134: ldc2_w        #19
137: invokestatic  #21
140: aastore
141: dup
142: iconst_4
143: dconst_1
144: invokestatic  #22
147: aastore
148: astore        7
150: new           #23
153: dup
154: ldc2_w        #24
157: aload         6
159: aload         7
161: invokespecial #26
164: astore        8
166: new           #27
169: dup
170: aload         5
172: ldc           #28
174: aload         7
176: invokespecial #30
179: astore        9
181: iconst_5
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #31
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #33
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #31
207: dastore
208: dup
209: iconst_4
210: dconst_1
211: dastore
212: astore        10
214: aconst_null
215: astore        11
217: iconst_1
218: anewarray     #5
221: dup
222: iconst_0
223: iconst_1
224: invokestatic  #35
227: aastore
228: astore        12
230: ldc           #28
232: aload         12
234: invokestatic  #36
237: astore        13
239: new           #37
242: dup
243: bipush        100
245: aload         11
247: aload         12
249: invokespecial #38
252: astore        14
254: aconst_null
255: astore        15
257: new           #27
260: dup
261: aload         15
263: invokespecial #39
266: astore        16
268: aload         16
270: invokevirtual #40
273: astore        17
275: aconst_null
276: astore        18
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        19
291: ldc           #28
293: aload         19
295: invokestatic  #36
298: astore        20
300: new           #37
303: dup
304: bipush        100
306: aload         18
308: aload         19
310: invokespecial #38
313: astore        21
315: aconst_null
316: astore        22
318: aconst_null
319: astore        23
321: new           #27
324: dup
325: aload         23
327: invokespecial #39
330: astore        24
332: aload         24
334: invokevirtual #40
337: astore        25
339: aconst_null
340: astore        26
342: iconst_1
343: anewarray     #5
346: dup
347: iconst_0
348: iconst_1
349: invokestatic  #35
352: aastore
353: astore        27
355: ldc           #28
357: aload         27
359: invokestatic  #36
362: astore        28
364: new           #37
367: dup
368: bipush        100
370: aload         26
372: aload         27
374: invokespecial #38
377: astore        29
379: aload         25
381: aload         27
383: invokestatic  #41
386: astore        30
388: ldc           #42
390: aload         27
392: invokestatic  #43
395: astore        31
397: new           #44
400: dup
401: aload         21
403: aload         22
405: aload         27
407: invokespecial #45
410: astore        32
412: aload         17
414: aload         27
416: invokestatic  #46
419: astore        33
421: aconst_null
422: astore        34
424: new           #27
427: dup
428: aload         34
430: invokespecial #39
433: astore        35
435: aconst_null
436: astore        36
438: iconst_2
439: anewarray     #5
442: dup
443: iconst_0
444: ldc           #28
446: aastore
447: dup
448: iconst_1
449: iconst_1
450: invokestatic  #17
453: aastore
454: astore        37
456: new           #27
459: dup
460: aload         34
462: aload         36
464: aload         37
466: invokespecial #47
469: astore        38
471: aload         38
473: invokevirtual #48
476: astore        39
478: ldc           #42
480: aload         39
482: invokestatic  #49
485: astore        40
487: new           #23
490: dup
491: aload         14
493: dconst_0
494: aload         17
496: aload         39
498: invokespecial #50
501: astore        41
503: aconst_null
504: astore        42
506: new           #23
509: dup
510: aload         5
512: aload         10
514: aload         17
516: aload         42
518: invokespecial #51
521: astore        43
523: aload_1
524: aload         10
526: putfield      #52
529: aload_1
530: invokevirtual #133
533: istore        44
535: aload_1
536: invokevirtual #133
539: istore        45
541: aload_1
542: ldc2_w        #95
545: invokevirtual #162
548: aload_3
549: invokestatic  #56
552: aload_3
553: invokestatic  #57
556: ldc           #58
558: invokestatic  #59
561: aload_3
562: invokestatic  #60
565: ldc           #58
567: invokestatic  #59
570: aload         7
572: invokestatic  #56
575: aload         7
577: invokestatic  #57
580: ldc           #58
582: invokestatic  #59
585: aload         7
587: invokestatic  #60
590: ldc           #58
592: invokestatic  #59
595: aload         10
597: invokestatic  #56
600: aload         10
602: invokestatic  #61
605: ldc           #62
607: invokestatic  #59
610: aload         12
612: invokestatic  #56
615: aload         12
617: invokestatic  #57
620: ldc           #63
622: invokestatic  #59
625: aload         12
627: invokestatic  #60
630: ldc           #63
632: invokestatic  #59
635: aload         13
637: invokestatic  #56
640: new           #64
643: dup
644: invokespecial #65
647: ldc           #66
649: invokevirtual #67
652: aload         17
654: invokevirtual #68
657: ldc           #69
659: invokevirtual #67
662: getstatic     #70
665: invokevirtual #68
668: ldc           #66
670: invokevirtual #67
673: invokevirtual #71
676: aload         17
678: getstatic     #70
681: invokevirtual #72
684: invokestatic  #73
687: aload         19
689: invokestatic  #56
692: aload         19
694: invokestatic  #57
697: ldc           #63
699: invokestatic  #59
702: aload         19
704: invokestatic  #60
707: ldc           #63
709: invokestatic  #59
712: aload         20
714: invokestatic  #56
717: new           #64
720: dup
721: invokespecial #65
724: ldc           #66
726: invokevirtual #67
729: aload         25
731: invokevirtual #68
734: ldc           #69
736: invokevirtual #67
739: getstatic     #70
742: invokevirtual #68
745: ldc           #66
747: invokevirtual #67
750: invokevirtual #71
753: aload         25
755: getstatic     #70
758: invokevirtual #72
761: invokestatic  #73
764: aload         27
766: invokestatic  #56
769: aload         27
771: invokestatic  #57
774: ldc           #63
776: invokestatic  #59
779: aload         27
781: invokestatic  #60
784: ldc           #63
786: invokestatic  #59
789: aload         28
791: invokestatic  #56
794: aload         30
796: invokestatic  #56
799: aload         31
801: invokestatic  #56
804: aload         33
806: invokestatic  #56
809: aload         37
811: invokestatic  #56
814: aload         37
816: invokestatic  #57
819: ldc           #74
821: invokestatic  #59
824: aload         37
826: invokestatic  #60
829: ldc           #74
831: invokestatic  #59
834: aload         39
836: invokestatic  #56
839: aload         39
841: invokestatic  #57
844: ldc           #74
846: invokestatic  #59
849: aload         39
851: invokestatic  #60
854: ldc           #74
856: invokestatic  #59
859: aload         40
861: invokestatic  #56
864: new           #64
867: dup
868: invokespecial #65
871: ldc           #66
873: invokevirtual #67
876: iload         44
878: invokevirtual #102
881: ldc           #69
883: invokevirtual #67
886: iconst_0
887: invokevirtual #102
890: ldc           #66
892: invokevirtual #67
895: invokevirtual #71
898: iload         44
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #73
911: new           #64
914: dup
915: invokespecial #65
918: ldc           #66
920: invokevirtual #67
923: iload         45
925: invokevirtual #102
928: ldc           #69
930: invokevirtual #67
933: iconst_0
934: invokevirtual #102
937: ldc           #66
939: invokevirtual #67
942: invokevirtual #71
945: iload         45
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #73
958: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 4293
End line: 4328
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #251
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: invokespecial #9
31: astore_1
32: new           #81
35: dup
36: iconst_m1
37: invokespecial #82
40: astore_2
41: aconst_null
42: astore_3
43: new           #27
46: dup
47: aload_3
48: invokespecial #39
51: astore        4
53: aconst_null
54: astore        5
56: iconst_2
57: anewarray     #5
60: dup
61: iconst_0
62: ldc           #28
64: aastore
65: dup
66: iconst_1
67: iconst_1
68: invokestatic  #17
71: aastore
72: astore        6
74: new           #27
77: dup
78: aload_3
79: aload         5
81: aload         6
83: invokespecial #47
86: astore        7
88: new           #23
91: dup
92: aload_2
93: dconst_0
94: ldc           #28
96: aload         6
98: invokespecial #83
101: astore        8
103: aload         8
105: invokevirtual #84
108: astore        9
110: iconst_1
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #85
118: dastore
119: astore        10
121: new           #87
124: dup
125: aload         9
127: aload         10
129: invokespecial #88
132: astore        11
134: aload_1
135: aload         10
137: putfield      #52
140: aload_1
141: getfield      #113
144: astore        12
146: aload_1
147: invokevirtual #167
150: istore        13
152: aload_1
153: getfield      #105
156: istore        14
158: aload_1
159: invokevirtual #78
162: astore        15
164: ldc           #54
166: invokestatic  #13
169: goto          174
172: astore        15
174: aload         6
176: invokestatic  #56
179: aload         6
181: invokestatic  #57
184: ldc           #74
186: invokestatic  #59
189: aload         6
191: invokestatic  #60
194: ldc           #74
196: invokestatic  #59
199: aload         9
201: invokestatic  #56
204: aload         9
206: invokestatic  #61
209: ldc           #90
211: invokestatic  #59
214: aload         10
216: invokestatic  #56
219: aload         10
221: invokestatic  #61
224: ldc           #91
226: invokestatic  #59
229: aload         12
231: invokestatic  #106
234: new           #64
237: dup
238: invokespecial #65
241: ldc           #66
243: invokevirtual #67
246: iload         13
248: invokevirtual #102
251: ldc           #69
253: invokevirtual #67
256: iconst_0
257: invokevirtual #102
260: ldc           #66
262: invokevirtual #67
265: invokevirtual #71
268: iload         13
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #73
281: new           #64
284: dup
285: invokespecial #65
288: ldc           #66
290: invokevirtual #67
293: iload         14
295: invokevirtual #102
298: ldc           #69
300: invokevirtual #67
303: iconst_0
304: invokevirtual #102
307: ldc           #66
309: invokevirtual #67
312: invokevirtual #71
315: iload         14
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #73
328: return
Exception table:
from    to  target type
158   169   172   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 4331
End line: 4421
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        java.lang.Object[] objArray4 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4);
        java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray29 = new double[] { (-1), 1.0f };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        levenbergMarquardtOptimizer24.jacobian = doubleArray30;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47);
        org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54);
        java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54);
        java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61);
        java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(10.0d);
        double[] doubleArray66 = functionEvaluationException65.getArgument();
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        java.util.NoSuchElementException noSuchElementException68 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, objArray67);
        java.lang.String str69 = localizable11.getSourceString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException5);
        org.junit.Assert.assertNotNull(noSuchElementException7);
        org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException55);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57);
        org.junit.Assert.assertNotNull(nullPointerException58);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(noSuchElementException63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[10.0]");
        org.junit.Assert.assertNotNull(noSuchElementException68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{0}" + "'", str69, "{0}");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: iconst_1
25: anewarray     #5
28: dup
29: iconst_0
30: iconst_1
31: invokestatic  #35
34: aastore
35: astore_1
36: ldc           #28
38: aload_1
39: invokestatic  #36
42: astore_2
43: new           #44
46: dup
47: ldc           #142
49: aload_1
50: invokespecial #238
53: astore_3
54: ldc           #42
56: aload_1
57: invokestatic  #239
60: astore        4
62: new           #240
65: dup
66: invokespecial #241
69: astore        5
71: aconst_null
72: astore        6
74: new           #27
77: dup
78: aload         6
80: invokespecial #39
83: astore        7
85: aload         7
87: invokevirtual #40
90: astore        8
92: aconst_null
93: astore        9
95: new           #27
98: dup
99: aload         9
101: invokespecial #39
104: astore        10
106: aload         10
108: invokevirtual #40
111: astore        11
113: aconst_null
114: astore        12
116: iconst_1
117: anewarray     #5
120: dup
121: iconst_0
122: iconst_1
123: invokestatic  #35
126: aastore
127: astore        13
129: ldc           #28
131: aload         13
133: invokestatic  #36
136: astore        14
138: new           #37
141: dup
142: bipush        100
144: aload         12
146: aload         13
148: invokespecial #38
151: astore        15
153: aload         11
155: aload         13
157: invokestatic  #41
160: astore        16
162: new           #27
165: dup
166: aload         5
168: aload         8
170: aload         13
172: invokespecial #47
175: astore        17
177: new           #8
180: dup
181: invokespecial #9
184: astore        18
186: aload         18
188: dconst_0
189: invokevirtual #129
192: iconst_2
193: newarray       double
195: dup
196: iconst_0
197: ldc2_w        #31
200: dastore
201: dup
202: iconst_1
203: dconst_1
204: dastore
205: astore        19
207: iconst_1
208: anewarray     #130
211: dup
212: iconst_0
213: aload         19
215: aastore
216: astore        20
218: aload         18
220: aload         20
222: putfield      #131
225: new           #44
228: dup
229: aload         4
231: aload         8
233: aload         20
235: checkcast     #143
238: invokespecial #45
241: astore        21
243: aconst_null
244: astore        22
246: new           #27
249: dup
250: aload         22
252: invokespecial #39
255: astore        23
257: aload         23
259: invokevirtual #40
262: astore        24
264: aconst_null
265: astore        25
267: iconst_1
268: anewarray     #5
271: dup
272: iconst_0
273: iconst_1
274: invokestatic  #35
277: aastore
278: astore        26
280: ldc           #28
282: aload         26
284: invokestatic  #36
287: astore        27
289: new           #37
292: dup
293: bipush        100
295: aload         25
297: aload         26
299: invokespecial #38
302: astore        28
304: aconst_null
305: astore        29
307: aconst_null
308: astore        30
310: new           #27
313: dup
314: aload         30
316: invokespecial #39
319: astore        31
321: aload         31
323: invokevirtual #40
326: astore        32
328: aconst_null
329: astore        33
331: iconst_1
332: anewarray     #5
335: dup
336: iconst_0
337: iconst_1
338: invokestatic  #35
341: aastore
342: astore        34
344: ldc           #28
346: aload         34
348: invokestatic  #36
351: astore        35
353: new           #37
356: dup
357: bipush        100
359: aload         33
361: aload         34
363: invokespecial #38
366: astore        36
368: aload         32
370: aload         34
372: invokestatic  #41
375: astore        37
377: ldc           #42
379: aload         34
381: invokestatic  #43
384: astore        38
386: new           #44
389: dup
390: aload         28
392: aload         29
394: aload         34
396: invokespecial #45
399: astore        39
401: aload         24
403: aload         34
405: invokestatic  #46
408: astore        40
410: aload         40
412: invokevirtual #253
415: astore        41
417: new           #81
420: dup
421: iconst_m1
422: ldc           #42
424: aload         41
426: checkcast     #143
429: invokespecial #254
432: astore        42
434: aload         8
436: aload         41
438: checkcast     #143
441: invokestatic  #255
444: astore        43
446: new           #23
449: dup
450: ldc2_w        #33
453: invokespecial #256
456: astore        44
458: aload         44
460: invokevirtual #84
463: astore        45
465: aload         44
467: invokevirtual #257
470: astore        46
472: aload         8
474: aload         46
476: invokestatic  #255
479: astore        47
481: aload         8
483: invokeinterface #237,  1
488: astore        48
490: aload_1
491: invokestatic  #56
494: aload_1
495: invokestatic  #57
498: ldc           #63
500: invokestatic  #59
503: aload_1
504: invokestatic  #60
507: ldc           #63
509: invokestatic  #59
512: aload_2
513: invokestatic  #56
516: aload         4
518: invokestatic  #56
521: new           #64
524: dup
525: invokespecial #65
528: ldc           #66
530: invokevirtual #67
533: aload         8
535: invokevirtual #68
538: ldc           #69
540: invokevirtual #67
543: getstatic     #70
546: invokevirtual #68
549: ldc           #66
551: invokevirtual #67
554: invokevirtual #71
557: aload         8
559: getstatic     #70
562: invokevirtual #72
565: invokestatic  #73
568: new           #64
571: dup
572: invokespecial #65
575: ldc           #66
577: invokevirtual #67
580: aload         11
582: invokevirtual #68
585: ldc           #69
587: invokevirtual #67
590: getstatic     #70
593: invokevirtual #68
596: ldc           #66
598: invokevirtual #67
601: invokevirtual #71
604: aload         11
606: getstatic     #70
609: invokevirtual #72
612: invokestatic  #73
615: aload         13
617: invokestatic  #56
620: aload         13
622: invokestatic  #57
625: ldc           #63
627: invokestatic  #59
630: aload         13
632: invokestatic  #60
635: ldc           #63
637: invokestatic  #59
640: aload         14
642: invokestatic  #56
645: aload         16
647: invokestatic  #56
650: aload         19
652: invokestatic  #56
655: aload         19
657: invokestatic  #61
660: ldc           #134
662: invokestatic  #59
665: aload         20
667: invokestatic  #56
670: new           #64
673: dup
674: invokespecial #65
677: ldc           #66
679: invokevirtual #67
682: aload         24
684: invokevirtual #68
687: ldc           #69
689: invokevirtual #67
692: getstatic     #70
695: invokevirtual #68
698: ldc           #66
700: invokevirtual #67
703: invokevirtual #71
706: aload         24
708: getstatic     #70
711: invokevirtual #72
714: invokestatic  #73
717: aload         26
719: invokestatic  #56
722: aload         26
724: invokestatic  #57
727: ldc           #63
729: invokestatic  #59
732: aload         26
734: invokestatic  #60
737: ldc           #63
739: invokestatic  #59
742: aload         27
744: invokestatic  #56
747: new           #64
750: dup
751: invokespecial #65
754: ldc           #66
756: invokevirtual #67
759: aload         32
761: invokevirtual #68
764: ldc           #69
766: invokevirtual #67
769: getstatic     #70
772: invokevirtual #68
775: ldc           #66
777: invokevirtual #67
780: invokevirtual #71
783: aload         32
785: getstatic     #70
788: invokevirtual #72
791: invokestatic  #73
794: aload         34
796: invokestatic  #56
799: aload         34
801: invokestatic  #57
804: ldc           #63
806: invokestatic  #59
809: aload         34
811: invokestatic  #60
814: ldc           #63
816: invokestatic  #59
819: aload         35
821: invokestatic  #56
824: aload         37
826: invokestatic  #56
829: aload         38
831: invokestatic  #56
834: aload         40
836: invokestatic  #56
839: aload         41
841: invokestatic  #56
844: aload         43
846: invokestatic  #56
849: aload         45
851: invokestatic  #56
854: aload         45
856: invokestatic  #61
859: ldc_w         #258
862: invokestatic  #59
865: aload         46
867: invokestatic  #56
870: aload         46
872: invokestatic  #57
875: ldc_w         #258
878: invokestatic  #59
881: aload         46
883: invokestatic  #60
886: ldc_w         #258
889: invokestatic  #59
892: aload         47
894: invokestatic  #56
897: new           #64
900: dup
901: invokespecial #65
904: ldc           #66
906: invokevirtual #67
909: aload         48
911: invokevirtual #67
914: ldc_w         #259
917: invokevirtual #67
920: invokevirtual #71
923: aload         48
925: ldc           #142
927: invokestatic  #247
930: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 4424
End line: 4432
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        int int5 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: invokevirtual #110
47: istore_2
48: new           #64
51: dup
52: invokespecial #65
55: ldc           #66
57: invokevirtual #67
60: iload_2
61: invokevirtual #102
64: ldc           #69
66: invokevirtual #67
69: iconst_m1
70: invokevirtual #102
73: ldc           #66
75: invokevirtual #67
78: invokevirtual #71
81: iload_2
82: iconst_m1
83: if_icmpne     90
86: iconst_1
87: goto          91
90: iconst_0
91: invokestatic  #73
94: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 4435
End line: 4459
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setMaxEvaluations(0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: aload_1
133: iconst_0
134: invokevirtual #76
137: new           #64
140: dup
141: invokespecial #65
144: ldc           #66
146: invokevirtual #67
149: iload_2
150: invokevirtual #102
153: ldc           #69
155: invokevirtual #67
158: iconst_0
159: invokevirtual #102
162: ldc           #66
164: invokevirtual #67
167: invokevirtual #71
170: iload_2
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #73
182: new           #64
185: dup
186: invokespecial #65
189: ldc           #66
191: invokevirtual #67
194: iload_3
195: invokevirtual #102
198: ldc           #69
200: invokevirtual #67
203: iconst_0
204: invokevirtual #102
207: ldc           #66
209: invokevirtual #67
212: invokevirtual #71
215: iload_3
216: ifne          223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #73
227: aload         4
229: invokestatic  #106
232: new           #64
235: dup
236: invokespecial #65
239: ldc           #66
241: invokevirtual #67
244: iload         6
246: invokevirtual #102
249: ldc           #69
251: invokevirtual #67
254: sipush        1000
257: invokevirtual #102
260: ldc           #66
262: invokevirtual #67
265: invokevirtual #71
268: iload         6
270: sipush        1000
273: if_icmpne     280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #73
284: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 4462
End line: 4569
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable25, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException("hi!", objArray31);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable36, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException33, "hi!", objArray42);
        double[] doubleArray50 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException56 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray55);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException57 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable52, objArray55);
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable59);
        org.apache.commons.math.exception.util.Localizable localizable61 = mathRuntimeException60.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable63 = null;
        java.lang.Object[] objArray66 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException67 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray66);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException68 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable63, objArray66);
        org.apache.commons.math.exception.util.Localizable localizable69 = null;
        java.lang.Throwable throwable71 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71);
        org.apache.commons.math.exception.util.Localizable localizable73 = mathRuntimeException72.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable75 = null;
        java.lang.Object[] objArray78 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException79 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray78);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException80 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable75, objArray78);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException81 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable73, objArray78);
        java.lang.NullPointerException nullPointerException82 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray78);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException68, localizable69, objArray78);
        java.lang.NullPointerException nullPointerException84 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable61, objArray78);
        java.lang.Throwable throwable86 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable86);
        org.apache.commons.math.exception.util.Localizable localizable88 = null;
        java.lang.Object[] objArray91 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException92 = new org.apache.commons.math.MathRuntimeException(throwable86, localizable88, objArray91);
        java.lang.Object[] objArray93 = mathRuntimeException92.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException94 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray93);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException57, (double) 0L, localizable61, objArray93);
        java.lang.Object[] objArray96 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException97 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException33, doubleArray50, localizable61, objArray96);
        levenbergMarquardtOptimizer22.point = doubleArray50;
        levenbergMarquardtOptimizer0.point = doubleArray50;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException56);
        org.junit.Assert.assertTrue("'" + localizable61 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable61.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException67);
        org.junit.Assert.assertTrue("'" + localizable73 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable73.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException79);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException81);
        org.junit.Assert.assertNotNull(nullPointerException82);
        org.junit.Assert.assertNotNull(nullPointerException84);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException94);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: invokevirtual #167
163: istore        15
165: new           #8
168: dup
169: invokespecial #9
172: astore        16
174: aconst_null
175: astore        17
177: iconst_5
178: anewarray     #5
181: dup
182: iconst_0
183: iconst_0
184: invokestatic  #16
187: aastore
188: dup
189: iconst_1
190: iconst_0
191: invokestatic  #17
194: aastore
195: dup
196: iconst_2
197: bipush        52
199: invokestatic  #18
202: aastore
203: dup
204: iconst_3
205: ldc2_w        #19
208: invokestatic  #21
211: aastore
212: dup
213: iconst_4
214: dconst_1
215: invokestatic  #22
218: aastore
219: astore        18
221: new           #23
224: dup
225: ldc2_w        #24
228: aload         17
230: aload         18
232: invokespecial #26
235: astore        19
237: new           #27
240: dup
241: ldc           #28
243: aload         18
245: invokespecial #29
248: astore        20
250: aconst_null
251: astore        21
253: iconst_5
254: anewarray     #5
257: dup
258: iconst_0
259: iconst_0
260: invokestatic  #16
263: aastore
264: dup
265: iconst_1
266: iconst_0
267: invokestatic  #17
270: aastore
271: dup
272: iconst_2
273: bipush        52
275: invokestatic  #18
278: aastore
279: dup
280: iconst_3
281: ldc2_w        #19
284: invokestatic  #21
287: aastore
288: dup
289: iconst_4
290: dconst_1
291: invokestatic  #22
294: aastore
295: astore        22
297: new           #23
300: dup
301: ldc2_w        #24
304: aload         21
306: aload         22
308: invokespecial #26
311: astore        23
313: new           #27
316: dup
317: aload         20
319: ldc           #28
321: aload         22
323: invokespecial #30
326: astore        24
328: iconst_5
329: newarray       double
331: dup
332: iconst_0
333: ldc2_w        #31
336: dastore
337: dup
338: iconst_1
339: ldc2_w        #33
342: dastore
343: dup
344: iconst_2
345: ldc2_w        #31
348: dastore
349: dup
350: iconst_3
351: ldc2_w        #31
354: dastore
355: dup
356: iconst_4
357: dconst_1
358: dastore
359: astore        25
361: aconst_null
362: astore        26
364: iconst_1
365: anewarray     #5
368: dup
369: iconst_0
370: iconst_1
371: invokestatic  #35
374: aastore
375: astore        27
377: ldc           #28
379: aload         27
381: invokestatic  #36
384: astore        28
386: new           #37
389: dup
390: bipush        100
392: aload         26
394: aload         27
396: invokespecial #38
399: astore        29
401: aconst_null
402: astore        30
404: new           #27
407: dup
408: aload         30
410: invokespecial #39
413: astore        31
415: aload         31
417: invokevirtual #40
420: astore        32
422: aconst_null
423: astore        33
425: iconst_1
426: anewarray     #5
429: dup
430: iconst_0
431: iconst_1
432: invokestatic  #35
435: aastore
436: astore        34
438: ldc           #28
440: aload         34
442: invokestatic  #36
445: astore        35
447: new           #37
450: dup
451: bipush        100
453: aload         33
455: aload         34
457: invokespecial #38
460: astore        36
462: aconst_null
463: astore        37
465: aconst_null
466: astore        38
468: new           #27
471: dup
472: aload         38
474: invokespecial #39
477: astore        39
479: aload         39
481: invokevirtual #40
484: astore        40
486: aconst_null
487: astore        41
489: iconst_1
490: anewarray     #5
493: dup
494: iconst_0
495: iconst_1
496: invokestatic  #35
499: aastore
500: astore        42
502: ldc           #28
504: aload         42
506: invokestatic  #36
509: astore        43
511: new           #37
514: dup
515: bipush        100
517: aload         41
519: aload         42
521: invokespecial #38
524: astore        44
526: aload         40
528: aload         42
530: invokestatic  #41
533: astore        45
535: ldc           #42
537: aload         42
539: invokestatic  #43
542: astore        46
544: new           #44
547: dup
548: aload         36
550: aload         37
552: aload         42
554: invokespecial #45
557: astore        47
559: aload         32
561: aload         42
563: invokestatic  #46
566: astore        48
568: aconst_null
569: astore        49
571: new           #27
574: dup
575: aload         49
577: invokespecial #39
580: astore        50
582: aconst_null
583: astore        51
585: iconst_2
586: anewarray     #5
589: dup
590: iconst_0
591: ldc           #28
593: aastore
594: dup
595: iconst_1
596: iconst_1
597: invokestatic  #17
600: aastore
601: astore        52
603: new           #27
606: dup
607: aload         49
609: aload         51
611: aload         52
613: invokespecial #47
616: astore        53
618: aload         53
620: invokevirtual #48
623: astore        54
625: ldc           #42
627: aload         54
629: invokestatic  #49
632: astore        55
634: new           #23
637: dup
638: aload         29
640: dconst_0
641: aload         32
643: aload         54
645: invokespecial #50
648: astore        56
650: aconst_null
651: astore        57
653: new           #23
656: dup
657: aload         20
659: aload         25
661: aload         32
663: aload         57
665: invokespecial #51
668: astore        58
670: aload         16
672: aload         25
674: putfield      #52
677: aload_1
678: aload         25
680: putfield      #52
683: aload         6
685: invokestatic  #56
688: aload         6
690: invokestatic  #57
693: ldc           #74
695: invokestatic  #59
698: aload         6
700: invokestatic  #60
703: ldc           #74
705: invokestatic  #59
708: aload         9
710: invokestatic  #56
713: aload         9
715: invokestatic  #61
718: ldc           #90
720: invokestatic  #59
723: aload         10
725: invokestatic  #56
728: aload         10
730: invokestatic  #61
733: ldc           #91
735: invokestatic  #59
738: aload         12
740: invokestatic  #106
743: new           #64
746: dup
747: invokespecial #65
750: ldc           #66
752: invokevirtual #67
755: iload         13
757: invokevirtual #102
760: ldc           #69
762: invokevirtual #67
765: iconst_0
766: invokevirtual #102
769: ldc           #66
771: invokevirtual #67
774: invokevirtual #71
777: iload         13
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #73
790: new           #64
793: dup
794: invokespecial #65
797: ldc           #66
799: invokevirtual #67
802: iload         14
804: invokevirtual #102
807: ldc           #69
809: invokevirtual #67
812: iconst_0
813: invokevirtual #102
816: ldc           #66
818: invokevirtual #67
821: invokevirtual #71
824: iload         14
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #73
837: new           #64
840: dup
841: invokespecial #65
844: ldc           #66
846: invokevirtual #67
849: iload         15
851: invokevirtual #102
854: ldc           #69
856: invokevirtual #67
859: iconst_0
860: invokevirtual #102
863: ldc           #66
865: invokevirtual #67
868: invokevirtual #71
871: iload         15
873: ifne          880
876: iconst_1
877: goto          881
880: iconst_0
881: invokestatic  #73
884: aload         18
886: invokestatic  #56
889: aload         18
891: invokestatic  #57
894: ldc           #58
896: invokestatic  #59
899: aload         18
901: invokestatic  #60
904: ldc           #58
906: invokestatic  #59
909: aload         22
911: invokestatic  #56
914: aload         22
916: invokestatic  #57
919: ldc           #58
921: invokestatic  #59
924: aload         22
926: invokestatic  #60
929: ldc           #58
931: invokestatic  #59
934: aload         25
936: invokestatic  #56
939: aload         25
941: invokestatic  #61
944: ldc           #62
946: invokestatic  #59
949: aload         27
951: invokestatic  #56
954: aload         27
956: invokestatic  #57
959: ldc           #63
961: invokestatic  #59
964: aload         27
966: invokestatic  #60
969: ldc           #63
971: invokestatic  #59
974: aload         28
976: invokestatic  #56
979: new           #64
982: dup
983: invokespecial #65
986: ldc           #66
988: invokevirtual #67
991: aload         32
993: invokevirtual #68
996: ldc           #69
998: invokevirtual #67
1001: getstatic     #70
1004: invokevirtual #68
1007: ldc           #66
1009: invokevirtual #67
1012: invokevirtual #71
1015: aload         32
1017: getstatic     #70
1020: invokevirtual #72
1023: invokestatic  #73
1026: aload         34
1028: invokestatic  #56
1031: aload         34
1033: invokestatic  #57
1036: ldc           #63
1038: invokestatic  #59
1041: aload         34
1043: invokestatic  #60
1046: ldc           #63
1048: invokestatic  #59
1051: aload         35
1053: invokestatic  #56
1056: new           #64
1059: dup
1060: invokespecial #65
1063: ldc           #66
1065: invokevirtual #67
1068: aload         40
1070: invokevirtual #68
1073: ldc           #69
1075: invokevirtual #67
1078: getstatic     #70
1081: invokevirtual #68
1084: ldc           #66
1086: invokevirtual #67
1089: invokevirtual #71
1092: aload         40
1094: getstatic     #70
1097: invokevirtual #72
1100: invokestatic  #73
1103: aload         42
1105: invokestatic  #56
1108: aload         42
1110: invokestatic  #57
1113: ldc           #63
1115: invokestatic  #59
1118: aload         42
1120: invokestatic  #60
1123: ldc           #63
1125: invokestatic  #59
1128: aload         43
1130: invokestatic  #56
1133: aload         45
1135: invokestatic  #56
1138: aload         46
1140: invokestatic  #56
1143: aload         48
1145: invokestatic  #56
1148: aload         52
1150: invokestatic  #56
1153: aload         52
1155: invokestatic  #57
1158: ldc           #74
1160: invokestatic  #59
1163: aload         52
1165: invokestatic  #60
1168: ldc           #74
1170: invokestatic  #59
1173: aload         54
1175: invokestatic  #56
1178: aload         54
1180: invokestatic  #57
1183: ldc           #74
1185: invokestatic  #59
1188: aload         54
1190: invokestatic  #60
1193: ldc           #74
1195: invokestatic  #59
1198: aload         55
1200: invokestatic  #56
1203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 4572
End line: 4602
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) 1);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #263
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aload_1
156: invokevirtual #10
159: aload_1
160: iconst_1
161: invokevirtual #182
164: aload_2
165: invokestatic  #106
168: aload         7
170: invokestatic  #56
173: aload         7
175: invokestatic  #57
178: ldc           #74
180: invokestatic  #59
183: aload         7
185: invokestatic  #60
188: ldc           #74
190: invokestatic  #59
193: aload         10
195: invokestatic  #56
198: aload         10
200: invokestatic  #61
203: ldc           #90
205: invokestatic  #59
208: aload         11
210: invokestatic  #56
213: aload         11
215: invokestatic  #61
218: ldc           #90
220: invokestatic  #59
223: aload         12
225: invokestatic  #106
228: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 4605
End line: 4675
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9);
        double[] doubleArray12 = functionEvaluationException11.getArgument();
        double[] doubleArray13 = functionEvaluationException11.getArgument();
        double[] doubleArray14 = functionEvaluationException11.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException16 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable19 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(throwable19);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable19, localizable21, objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException16, 0.0d, "hi!", objArray24);
        double[] doubleArray27 = functionEvaluationException26.getArgument();
        double[] doubleArray28 = functionEvaluationException26.getArgument();
        double[] doubleArray29 = functionEvaluationException26.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer30.rows = 0;
        levenbergMarquardtOptimizer30.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray35 = levenbergMarquardtOptimizer30.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException37 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable40);
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable40, localizable42, objArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException37, 0.0d, "hi!", objArray45);
        double[] doubleArray48 = functionEvaluationException47.getArgument();
        double[] doubleArray50 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(doubleArray50);
        levenbergMarquardtOptimizer30.residuals = doubleArray50;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray29, doubleArray50, true);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException11, doubleArray29);
        double[] doubleArray57 = functionEvaluationException56.getArgument();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]");
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #264
20: aastore
21: invokevirtual #7
24: pop
25: new           #81
28: dup
29: iconst_m1
30: invokespecial #82
33: astore_1
34: aconst_null
35: astore_2
36: new           #27
39: dup
40: aload_2
41: invokespecial #39
44: astore_3
45: aconst_null
46: astore        4
48: iconst_2
49: anewarray     #5
52: dup
53: iconst_0
54: ldc           #28
56: aastore
57: dup
58: iconst_1
59: iconst_1
60: invokestatic  #17
63: aastore
64: astore        5
66: new           #27
69: dup
70: aload_2
71: aload         4
73: aload         5
75: invokespecial #47
78: astore        6
80: new           #23
83: dup
84: aload_1
85: dconst_0
86: ldc           #28
88: aload         5
90: invokespecial #83
93: astore        7
95: aload         7
97: invokevirtual #84
100: astore        8
102: aload         7
104: invokevirtual #84
107: astore        9
109: aload         7
111: invokevirtual #84
114: astore        10
116: new           #81
119: dup
120: iconst_m1
121: invokespecial #82
124: astore        11
126: aconst_null
127: astore        12
129: new           #27
132: dup
133: aload         12
135: invokespecial #39
138: astore        13
140: aconst_null
141: astore        14
143: iconst_2
144: anewarray     #5
147: dup
148: iconst_0
149: ldc           #28
151: aastore
152: dup
153: iconst_1
154: iconst_1
155: invokestatic  #17
158: aastore
159: astore        15
161: new           #27
164: dup
165: aload         12
167: aload         14
169: aload         15
171: invokespecial #47
174: astore        16
176: new           #23
179: dup
180: aload         11
182: dconst_0
183: ldc           #28
185: aload         15
187: invokespecial #83
190: astore        17
192: aload         17
194: invokevirtual #84
197: astore        18
199: aload         17
201: invokevirtual #84
204: astore        19
206: aload         17
208: invokevirtual #84
211: astore        20
213: new           #8
216: dup
217: invokespecial #9
220: astore        21
222: aload         21
224: iconst_0
225: putfield      #93
228: aload         21
230: iconst_1
231: invokevirtual #76
234: aload         21
236: getfield      #113
239: astore        22
241: new           #81
244: dup
245: iconst_m1
246: invokespecial #82
249: astore        23
251: aconst_null
252: astore        24
254: new           #27
257: dup
258: aload         24
260: invokespecial #39
263: astore        25
265: aconst_null
266: astore        26
268: iconst_2
269: anewarray     #5
272: dup
273: iconst_0
274: ldc           #28
276: aastore
277: dup
278: iconst_1
279: iconst_1
280: invokestatic  #17
283: aastore
284: astore        27
286: new           #27
289: dup
290: aload         24
292: aload         26
294: aload         27
296: invokespecial #47
299: astore        28
301: new           #23
304: dup
305: aload         23
307: dconst_0
308: ldc           #28
310: aload         27
312: invokespecial #83
315: astore        29
317: aload         29
319: invokevirtual #84
322: astore        30
324: iconst_1
325: newarray       double
327: dup
328: iconst_0
329: ldc2_w        #85
332: dastore
333: astore        31
335: new           #87
338: dup
339: aload         30
341: aload         31
343: invokespecial #88
346: astore        32
348: new           #23
351: dup
352: aload         31
354: invokespecial #89
357: astore        33
359: aload         21
361: aload         31
363: putfield      #122
366: new           #87
369: dup
370: aload         20
372: aload         31
374: iconst_1
375: invokespecial #117
378: astore        34
380: new           #23
383: dup
384: aload         7
386: aload         20
388: invokespecial #148
391: astore        35
393: aload         35
395: invokevirtual #84
398: astore        36
400: aload         5
402: invokestatic  #56
405: aload         5
407: invokestatic  #57
410: ldc           #74
412: invokestatic  #59
415: aload         5
417: invokestatic  #60
420: ldc           #74
422: invokestatic  #59
425: aload         8
427: invokestatic  #56
430: aload         8
432: invokestatic  #61
435: ldc           #90
437: invokestatic  #59
440: aload         9
442: invokestatic  #56
445: aload         9
447: invokestatic  #61
450: ldc           #90
452: invokestatic  #59
455: aload         10
457: invokestatic  #56
460: aload         10
462: invokestatic  #61
465: ldc           #90
467: invokestatic  #59
470: aload         15
472: invokestatic  #56
475: aload         15
477: invokestatic  #57
480: ldc           #74
482: invokestatic  #59
485: aload         15
487: invokestatic  #60
490: ldc           #74
492: invokestatic  #59
495: aload         18
497: invokestatic  #56
500: aload         18
502: invokestatic  #61
505: ldc           #90
507: invokestatic  #59
510: aload         19
512: invokestatic  #56
515: aload         19
517: invokestatic  #61
520: ldc           #90
522: invokestatic  #59
525: aload         20
527: invokestatic  #56
530: aload         20
532: invokestatic  #61
535: ldc           #90
537: invokestatic  #59
540: aload         22
542: invokestatic  #106
545: aload         27
547: invokestatic  #56
550: aload         27
552: invokestatic  #57
555: ldc           #74
557: invokestatic  #59
560: aload         27
562: invokestatic  #60
565: ldc           #74
567: invokestatic  #59
570: aload         30
572: invokestatic  #56
575: aload         30
577: invokestatic  #61
580: ldc           #90
582: invokestatic  #59
585: aload         31
587: invokestatic  #56
590: aload         31
592: invokestatic  #61
595: ldc           #91
597: invokestatic  #59
600: aload         36
602: invokestatic  #56
605: aload         36
607: invokestatic  #61
610: ldc           #90
612: invokestatic  #59
615: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 4678
End line: 4689
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setOrthoTolerance(0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #265
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #98
47: istore_2
48: aload_1
49: invokevirtual #167
52: istore_3
53: aload_1
54: dconst_0
55: invokevirtual #129
58: new           #64
61: dup
62: invokespecial #65
65: ldc           #66
67: invokevirtual #67
70: iload_2
71: invokevirtual #102
74: ldc           #69
76: invokevirtual #67
79: sipush        1000
82: invokevirtual #102
85: ldc           #66
87: invokevirtual #67
90: invokevirtual #71
93: iload_2
94: sipush        1000
97: if_icmpne     104
100: iconst_1
101: goto          105
104: iconst_0
105: invokestatic  #73
108: new           #64
111: dup
112: invokespecial #65
115: ldc           #66
117: invokevirtual #67
120: iload_3
121: invokevirtual #102
124: ldc           #69
126: invokevirtual #67
129: iconst_0
130: invokevirtual #102
133: ldc           #66
135: invokevirtual #67
138: invokevirtual #71
141: iload_3
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #73
153: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 4692
End line: 4747
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        double double14 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker17 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28);
        double[] doubleArray31 = functionEvaluationException30.getArgument();
        double[] doubleArray33 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException36 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39);
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException36, 0.0d, "hi!", objArray44);
        double[] doubleArray47 = functionEvaluationException46.getArgument();
        double[] doubleArray49 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray49);
        boolean boolean51 = simpleVectorialValueChecker17.converged(100, vectorialPointValuePair34, vectorialPointValuePair50);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker17);
        int int53 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #266
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #97
85: dstore        4
87: new           #99
90: dup
91: dconst_0
92: ldc2_w        #95
95: invokespecial #116
98: astore        6
100: new           #81
103: dup
104: iconst_m1
105: invokespecial #82
108: astore        7
110: aconst_null
111: astore        8
113: new           #27
116: dup
117: aload         8
119: invokespecial #39
122: astore        9
124: aconst_null
125: astore        10
127: iconst_2
128: anewarray     #5
131: dup
132: iconst_0
133: ldc           #28
135: aastore
136: dup
137: iconst_1
138: iconst_1
139: invokestatic  #17
142: aastore
143: astore        11
145: new           #27
148: dup
149: aload         8
151: aload         10
153: aload         11
155: invokespecial #47
158: astore        12
160: new           #23
163: dup
164: aload         7
166: dconst_0
167: ldc           #28
169: aload         11
171: invokespecial #83
174: astore        13
176: aload         13
178: invokevirtual #84
181: astore        14
183: iconst_1
184: newarray       double
186: dup
187: iconst_0
188: ldc2_w        #85
191: dastore
192: astore        15
194: new           #87
197: dup
198: aload         14
200: aload         15
202: invokespecial #88
205: astore        16
207: new           #81
210: dup
211: iconst_m1
212: invokespecial #82
215: astore        17
217: aconst_null
218: astore        18
220: new           #27
223: dup
224: aload         18
226: invokespecial #39
229: astore        19
231: aconst_null
232: astore        20
234: iconst_2
235: anewarray     #5
238: dup
239: iconst_0
240: ldc           #28
242: aastore
243: dup
244: iconst_1
245: iconst_1
246: invokestatic  #17
249: aastore
250: astore        21
252: new           #27
255: dup
256: aload         18
258: aload         20
260: aload         21
262: invokespecial #47
265: astore        22
267: new           #23
270: dup
271: aload         17
273: dconst_0
274: ldc           #28
276: aload         21
278: invokespecial #83
281: astore        23
283: aload         23
285: invokevirtual #84
288: astore        24
290: iconst_1
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #85
298: dastore
299: astore        25
301: new           #87
304: dup
305: aload         24
307: aload         25
309: invokespecial #88
312: astore        26
314: aload         6
316: bipush        100
318: aload         16
320: aload         26
322: invokevirtual #118
325: istore        27
327: aload_1
328: aload         6
330: invokevirtual #101
333: aload_1
334: invokevirtual #133
337: istore        28
339: new           #64
342: dup
343: invokespecial #65
346: ldc           #66
348: invokevirtual #67
351: iload_2
352: invokevirtual #102
355: ldc           #69
357: invokevirtual #67
360: sipush        1000
363: invokevirtual #102
366: ldc           #66
368: invokevirtual #67
371: invokevirtual #71
374: iload_2
375: sipush        1000
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #73
389: new           #64
392: dup
393: invokespecial #65
396: ldc           #66
398: invokevirtual #67
401: dload         4
403: invokevirtual #79
406: ldc           #69
408: invokevirtual #67
411: ldc2_w        #95
414: invokevirtual #79
417: ldc           #66
419: invokevirtual #67
422: invokevirtual #71
425: dload         4
427: ldc2_w        #95
430: dcmpl
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #73
442: aload         11
444: invokestatic  #56
447: aload         11
449: invokestatic  #57
452: ldc           #74
454: invokestatic  #59
457: aload         11
459: invokestatic  #60
462: ldc           #74
464: invokestatic  #59
467: aload         14
469: invokestatic  #56
472: aload         14
474: invokestatic  #61
477: ldc           #90
479: invokestatic  #59
482: aload         15
484: invokestatic  #56
487: aload         15
489: invokestatic  #61
492: ldc           #91
494: invokestatic  #59
497: aload         21
499: invokestatic  #56
502: aload         21
504: invokestatic  #57
507: ldc           #74
509: invokestatic  #59
512: aload         21
514: invokestatic  #60
517: ldc           #74
519: invokestatic  #59
522: aload         24
524: invokestatic  #56
527: aload         24
529: invokestatic  #61
532: ldc           #90
534: invokestatic  #59
537: aload         25
539: invokestatic  #56
542: aload         25
544: invokestatic  #61
547: ldc           #91
549: invokestatic  #59
552: new           #64
555: dup
556: invokespecial #65
559: ldc           #66
561: invokevirtual #67
564: iload         27
566: invokevirtual #119
569: ldc           #69
571: invokevirtual #67
574: iconst_1
575: invokevirtual #119
578: ldc           #66
580: invokevirtual #67
583: invokevirtual #71
586: iload         27
588: iconst_1
589: if_icmpne     596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #73
600: new           #64
603: dup
604: invokespecial #65
607: ldc           #66
609: invokevirtual #67
612: iload         28
614: invokevirtual #102
617: ldc           #69
619: invokevirtual #67
622: iconst_0
623: invokevirtual #102
626: ldc           #66
628: invokevirtual #67
631: invokevirtual #71
634: iload         28
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #73
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 4750
End line: 4779
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker;
        int int21 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker22 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #267
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: aload_1
148: getfield      #140
151: astore        12
153: aload_1
154: invokevirtual #98
157: istore        13
159: aload_1
160: invokevirtual #104
163: astore        14
165: aload         6
167: invokestatic  #56
170: aload         6
172: invokestatic  #57
175: ldc           #74
177: invokestatic  #59
180: aload         6
182: invokestatic  #60
185: ldc           #74
187: invokestatic  #59
190: aload         9
192: invokestatic  #56
195: aload         9
197: invokestatic  #61
200: ldc           #90
202: invokestatic  #59
205: aload         10
207: invokestatic  #56
210: aload         10
212: invokestatic  #61
215: ldc           #91
217: invokestatic  #59
220: aload         12
222: invokestatic  #106
225: new           #64
228: dup
229: invokespecial #65
232: ldc           #66
234: invokevirtual #67
237: iload         13
239: invokevirtual #102
242: ldc           #69
244: invokevirtual #67
247: sipush        1000
250: invokevirtual #102
253: ldc           #66
255: invokevirtual #67
258: invokevirtual #71
261: iload         13
263: sipush        1000
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #73
277: aload         14
279: invokestatic  #106
282: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 4782
End line: 4800
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer3.rows = 0;
        levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer3.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer3.cost = (short) 100;
        int int12 = levenbergMarquardtOptimizer3.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker13 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer3.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker13);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker13;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #268
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #10
37: aload_1
38: getfield      #122
41: astore_2
42: new           #8
45: dup
46: invokespecial #9
49: astore_3
50: aload_3
51: iconst_0
52: putfield      #93
55: aload_3
56: iconst_1
57: invokevirtual #76
60: aload_3
61: ldc2_w        #31
64: invokevirtual #94
67: aload_3
68: ldc2_w        #95
71: putfield      #97
74: aload_3
75: invokevirtual #98
78: istore        4
80: new           #99
83: dup
84: invokespecial #100
87: astore        5
89: aload_3
90: aload         5
92: invokevirtual #101
95: aload_1
96: aload         5
98: putfield      #140
101: aload_1
102: invokevirtual #10
105: aload_2
106: invokestatic  #106
109: new           #64
112: dup
113: invokespecial #65
116: ldc           #66
118: invokevirtual #67
121: iload         4
123: invokevirtual #102
126: ldc           #69
128: invokevirtual #67
131: sipush        1000
134: invokevirtual #102
137: ldc           #66
139: invokevirtual #67
142: invokevirtual #71
145: iload         4
147: sipush        1000
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #73
161: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 4803
End line: 4895
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: convergence failed", objArray1);
        java.lang.Object[] objArray3 = convergenceException2.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) convergenceException2, (double) 0.0f);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        double[] doubleArray25 = functionEvaluationException23.getArgument();
        levenbergMarquardtOptimizer6.objective = doubleArray25;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray41 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer45.rows = 0;
        levenbergMarquardtOptimizer45.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray50 = levenbergMarquardtOptimizer45.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException52 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable55);
        org.apache.commons.math.exception.util.Localizable localizable57 = null;
        java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException61 = new org.apache.commons.math.MathRuntimeException(throwable55, localizable57, objArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException52, 0.0d, "hi!", objArray60);
        double[] doubleArray63 = functionEvaluationException62.getArgument();
        double[] doubleArray64 = functionEvaluationException62.getArgument();
        levenbergMarquardtOptimizer45.objective = doubleArray64;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException67 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable70);
        org.apache.commons.math.exception.util.Localizable localizable72 = null;
        java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable70, localizable72, objArray75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException67, 0.0d, "hi!", objArray75);
        double[] doubleArray78 = functionEvaluationException77.getArgument();
        double[] doubleArray80 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray78, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) convergenceException2, doubleArray78);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #269
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #240
30: dup
31: ldc           #191
33: aload_1
34: invokespecial #270
37: astore_2
38: aload_2
39: invokevirtual #271
42: astore_3
43: new           #23
46: dup
47: aload_2
48: dconst_0
49: invokespecial #272
52: astore        4
54: new           #8
57: dup
58: invokespecial #9
61: astore        5
63: aload         5
65: iconst_0
66: putfield      #93
69: aload         5
71: iconst_1
72: invokevirtual #76
75: aload         5
77: getfield      #113
80: astore        6
82: new           #81
85: dup
86: iconst_m1
87: invokespecial #82
90: astore        7
92: aconst_null
93: astore        8
95: new           #27
98: dup
99: aload         8
101: invokespecial #39
104: astore        9
106: aconst_null
107: astore        10
109: iconst_2
110: anewarray     #5
113: dup
114: iconst_0
115: ldc           #28
117: aastore
118: dup
119: iconst_1
120: iconst_1
121: invokestatic  #17
124: aastore
125: astore        11
127: new           #27
130: dup
131: aload         8
133: aload         10
135: aload         11
137: invokespecial #47
140: astore        12
142: new           #23
145: dup
146: aload         7
148: dconst_0
149: ldc           #28
151: aload         11
153: invokespecial #83
156: astore        13
158: aload         13
160: invokevirtual #84
163: astore        14
165: aload         13
167: invokevirtual #84
170: astore        15
172: aload         5
174: aload         15
176: putfield      #114
179: new           #81
182: dup
183: iconst_m1
184: invokespecial #82
187: astore        16
189: aconst_null
190: astore        17
192: new           #27
195: dup
196: aload         17
198: invokespecial #39
201: astore        18
203: aconst_null
204: astore        19
206: iconst_2
207: anewarray     #5
210: dup
211: iconst_0
212: ldc           #28
214: aastore
215: dup
216: iconst_1
217: iconst_1
218: invokestatic  #17
221: aastore
222: astore        20
224: new           #27
227: dup
228: aload         17
230: aload         19
232: aload         20
234: invokespecial #47
237: astore        21
239: new           #23
242: dup
243: aload         16
245: dconst_0
246: ldc           #28
248: aload         20
250: invokespecial #83
253: astore        22
255: aload         22
257: invokevirtual #84
260: astore        23
262: iconst_1
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #85
270: dastore
271: astore        24
273: new           #87
276: dup
277: aload         23
279: aload         24
281: invokespecial #88
284: astore        25
286: new           #87
289: dup
290: aload         15
292: aload         23
294: iconst_0
295: invokespecial #117
298: astore        26
300: new           #8
303: dup
304: invokespecial #9
307: astore        27
309: aload         27
311: iconst_0
312: putfield      #93
315: aload         27
317: iconst_1
318: invokevirtual #76
321: aload         27
323: getfield      #113
326: astore        28
328: new           #81
331: dup
332: iconst_m1
333: invokespecial #82
336: astore        29
338: aconst_null
339: astore        30
341: new           #27
344: dup
345: aload         30
347: invokespecial #39
350: astore        31
352: aconst_null
353: astore        32
355: iconst_2
356: anewarray     #5
359: dup
360: iconst_0
361: ldc           #28
363: aastore
364: dup
365: iconst_1
366: iconst_1
367: invokestatic  #17
370: aastore
371: astore        33
373: new           #27
376: dup
377: aload         30
379: aload         32
381: aload         33
383: invokespecial #47
386: astore        34
388: new           #23
391: dup
392: aload         29
394: dconst_0
395: ldc           #28
397: aload         33
399: invokespecial #83
402: astore        35
404: aload         35
406: invokevirtual #84
409: astore        36
411: aload         35
413: invokevirtual #84
416: astore        37
418: aload         27
420: aload         37
422: putfield      #114
425: new           #81
428: dup
429: iconst_m1
430: invokespecial #82
433: astore        38
435: aconst_null
436: astore        39
438: new           #27
441: dup
442: aload         39
444: invokespecial #39
447: astore        40
449: aconst_null
450: astore        41
452: iconst_2
453: anewarray     #5
456: dup
457: iconst_0
458: ldc           #28
460: aastore
461: dup
462: iconst_1
463: iconst_1
464: invokestatic  #17
467: aastore
468: astore        42
470: new           #27
473: dup
474: aload         39
476: aload         41
478: aload         42
480: invokespecial #47
483: astore        43
485: new           #23
488: dup
489: aload         38
491: dconst_0
492: ldc           #28
494: aload         42
496: invokespecial #83
499: astore        44
501: aload         44
503: invokevirtual #84
506: astore        45
508: iconst_1
509: newarray       double
511: dup
512: iconst_0
513: ldc2_w        #85
516: dastore
517: astore        46
519: new           #87
522: dup
523: aload         45
525: aload         46
527: invokespecial #88
530: astore        47
532: new           #87
535: dup
536: aload         37
538: aload         45
540: iconst_0
541: invokespecial #117
544: astore        48
546: new           #87
549: dup
550: aload         15
552: aload         45
554: invokespecial #88
557: astore        49
559: new           #23
562: dup
563: aload_2
564: aload         45
566: invokespecial #148
569: astore        50
571: aload_3
572: invokestatic  #56
575: aload_3
576: invokestatic  #57
579: ldc           #172
581: invokestatic  #59
584: aload_3
585: invokestatic  #60
588: ldc           #172
590: invokestatic  #59
593: aload         6
595: invokestatic  #106
598: aload         11
600: invokestatic  #56
603: aload         11
605: invokestatic  #57
608: ldc           #74
610: invokestatic  #59
613: aload         11
615: invokestatic  #60
618: ldc           #74
620: invokestatic  #59
623: aload         14
625: invokestatic  #56
628: aload         14
630: invokestatic  #61
633: ldc           #90
635: invokestatic  #59
638: aload         15
640: invokestatic  #56
643: aload         15
645: invokestatic  #61
648: ldc           #90
650: invokestatic  #59
653: aload         20
655: invokestatic  #56
658: aload         20
660: invokestatic  #57
663: ldc           #74
665: invokestatic  #59
668: aload         20
670: invokestatic  #60
673: ldc           #74
675: invokestatic  #59
678: aload         23
680: invokestatic  #56
683: aload         23
685: invokestatic  #61
688: ldc           #90
690: invokestatic  #59
693: aload         24
695: invokestatic  #56
698: aload         24
700: invokestatic  #61
703: ldc           #91
705: invokestatic  #59
708: aload         28
710: invokestatic  #106
713: aload         33
715: invokestatic  #56
718: aload         33
720: invokestatic  #57
723: ldc           #74
725: invokestatic  #59
728: aload         33
730: invokestatic  #60
733: ldc           #74
735: invokestatic  #59
738: aload         36
740: invokestatic  #56
743: aload         36
745: invokestatic  #61
748: ldc           #90
750: invokestatic  #59
753: aload         37
755: invokestatic  #56
758: aload         37
760: invokestatic  #61
763: ldc           #90
765: invokestatic  #59
768: aload         42
770: invokestatic  #56
773: aload         42
775: invokestatic  #57
778: ldc           #74
780: invokestatic  #59
783: aload         42
785: invokestatic  #60
788: ldc           #74
790: invokestatic  #59
793: aload         45
795: invokestatic  #56
798: aload         45
800: invokestatic  #61
803: ldc           #90
805: invokestatic  #59
808: aload         46
810: invokestatic  #56
813: aload         46
815: invokestatic  #61
818: ldc           #91
820: invokestatic  #59
823: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 4898
End line: 4944
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        int int39 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray40 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647);
        org.junit.Assert.assertNull(doubleArray40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: invokevirtual #110
278: istore        24
280: aload_1
281: getfield      #152
284: astore        25
286: aload         7
288: invokestatic  #56
291: aload         7
293: invokestatic  #57
296: ldc           #74
298: invokestatic  #59
301: aload         7
303: invokestatic  #60
306: ldc           #74
308: invokestatic  #59
311: aload         10
313: invokestatic  #56
316: aload         10
318: invokestatic  #61
321: ldc           #90
323: invokestatic  #59
326: aload         11
328: invokestatic  #56
331: aload         11
333: invokestatic  #61
336: ldc           #91
338: invokestatic  #59
341: aload         17
343: invokestatic  #56
346: aload         17
348: invokestatic  #57
351: ldc           #74
353: invokestatic  #59
356: aload         17
358: invokestatic  #60
361: ldc           #74
363: invokestatic  #59
366: aload         20
368: invokestatic  #56
371: aload         20
373: invokestatic  #61
376: ldc           #90
378: invokestatic  #59
381: aload         21
383: invokestatic  #56
386: aload         21
388: invokestatic  #61
391: ldc           #91
393: invokestatic  #59
396: new           #64
399: dup
400: invokespecial #65
403: ldc           #66
405: invokevirtual #67
408: iload         23
410: invokevirtual #119
413: ldc           #69
415: invokevirtual #67
418: iconst_1
419: invokevirtual #119
422: ldc           #66
424: invokevirtual #67
427: invokevirtual #71
430: iload         23
432: iconst_1
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #73
444: new           #64
447: dup
448: invokespecial #65
451: ldc           #66
453: invokevirtual #67
456: iload         24
458: invokevirtual #102
461: ldc           #69
463: invokevirtual #67
466: ldc           #111
468: invokevirtual #102
471: ldc           #66
473: invokevirtual #67
476: invokevirtual #71
479: iload         24
481: ldc           #111
483: if_icmpne     490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #73
494: aload         25
496: invokestatic  #106
499: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 4947
End line: 4965
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        double double14 = levenbergMarquardtOptimizer0.cost;
        int int15 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #97
85: dstore        4
87: aload_1
88: invokevirtual #110
91: istore        6
93: aload_1
94: dconst_0
95: invokevirtual #162
98: new           #64
101: dup
102: invokespecial #65
105: ldc           #66
107: invokevirtual #67
110: iload_2
111: invokevirtual #102
114: ldc           #69
116: invokevirtual #67
119: sipush        1000
122: invokevirtual #102
125: ldc           #66
127: invokevirtual #67
130: invokevirtual #71
133: iload_2
134: sipush        1000
137: if_icmpne     144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #73
148: new           #64
151: dup
152: invokespecial #65
155: ldc           #66
157: invokevirtual #67
160: dload         4
162: invokevirtual #79
165: ldc           #69
167: invokevirtual #67
170: ldc2_w        #95
173: invokevirtual #79
176: ldc           #66
178: invokevirtual #67
181: invokevirtual #71
184: dload         4
186: ldc2_w        #95
189: dcmpl
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #73
201: new           #64
204: dup
205: invokespecial #65
208: ldc           #66
210: invokevirtual #67
213: iload         6
215: invokevirtual #102
218: ldc           #69
220: invokevirtual #67
223: bipush        100
225: invokevirtual #102
228: ldc           #66
230: invokevirtual #67
233: invokevirtual #71
236: iload         6
238: bipush        100
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #73
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 4968
End line: 5050
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = mathRuntimeException1.getLocalizablePattern();
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException7 = new org.apache.commons.math.MathRuntimeException(throwable6);
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable6, localizable8, objArray11);
        java.lang.Object[] objArray13 = mathRuntimeException12.getArguments();
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray13);
        java.lang.Object[] objArray20 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("{0}", objArray20);
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable24);
        org.apache.commons.math.exception.util.Localizable localizable26 = mathRuntimeException25.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray31);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException33 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable28, objArray31);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable26, objArray31);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22, "{0}", objArray31);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray31);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48);
        java.lang.Object[] objArray50 = mathRuntimeException49.getArguments();
        java.text.ParseException parseException51 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray50);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException52 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray50);
        org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(localizable39, objArray50);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer55 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer55.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray60 = new double[] { (-1), 1.0f };
        double[][] doubleArray61 = new double[][] { doubleArray60 };
        levenbergMarquardtOptimizer55.jacobian = doubleArray61;
        java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray61);
        java.lang.IllegalStateException illegalStateException64 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable39, (java.lang.Object[]) doubleArray61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException(localizable2, (java.lang.Object[]) doubleArray61);
        org.junit.Assert.assertTrue("'" + localizable2 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable2.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertTrue("'" + localizable26 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable26.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException51);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException52);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(concurrentModificationException63);
        org.junit.Assert.assertNotNull(illegalStateException64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: invokespecial #39
35: astore_2
36: aload_2
37: invokevirtual #40
40: astore_3
41: aconst_null
42: astore        4
44: new           #27
47: dup
48: aload         4
50: invokespecial #39
53: astore        5
55: aconst_null
56: astore        6
58: iconst_2
59: anewarray     #5
62: dup
63: iconst_0
64: ldc           #28
66: aastore
67: dup
68: iconst_1
69: iconst_1
70: invokestatic  #17
73: aastore
74: astore        7
76: new           #27
79: dup
80: aload         4
82: aload         6
84: aload         7
86: invokespecial #47
89: astore        8
91: aload         8
93: invokevirtual #48
96: astore        9
98: bipush        52
100: ldc           #28
102: aload         9
104: invokestatic  #176
107: astore        10
109: ldc           #142
111: aload         9
113: invokestatic  #49
116: astore        11
118: new           #27
121: dup
122: aload_3
123: aload         9
125: invokespecial #177
128: astore        12
130: iconst_1
131: anewarray     #5
134: dup
135: iconst_0
136: iconst_1
137: invokestatic  #35
140: aastore
141: astore        13
143: ldc           #28
145: aload         13
147: invokestatic  #36
150: astore        14
152: new           #44
155: dup
156: ldc           #142
158: aload         13
160: invokespecial #238
163: astore        15
165: aconst_null
166: astore        16
168: new           #27
171: dup
172: aload         16
174: invokespecial #39
177: astore        17
179: aload         17
181: invokevirtual #40
184: astore        18
186: aconst_null
187: astore        19
189: iconst_1
190: anewarray     #5
193: dup
194: iconst_0
195: iconst_1
196: invokestatic  #35
199: aastore
200: astore        20
202: ldc           #28
204: aload         20
206: invokestatic  #36
209: astore        21
211: new           #37
214: dup
215: bipush        100
217: aload         19
219: aload         20
221: invokespecial #38
224: astore        22
226: aload         18
228: aload         20
230: invokestatic  #41
233: astore        23
235: new           #44
238: dup
239: aload         15
241: ldc           #142
243: aload         20
245: invokespecial #276
248: astore        24
250: aload_3
251: aload         20
253: invokestatic  #255
256: astore        25
258: aconst_null
259: astore        26
261: new           #27
264: dup
265: aload         26
267: invokespecial #39
270: astore        27
272: aload         27
274: invokevirtual #40
277: astore        28
279: aconst_null
280: astore        29
282: new           #27
285: dup
286: aload         29
288: invokespecial #39
291: astore        30
293: aconst_null
294: astore        31
296: iconst_2
297: anewarray     #5
300: dup
301: iconst_0
302: ldc           #28
304: aastore
305: dup
306: iconst_1
307: iconst_1
308: invokestatic  #17
311: aastore
312: astore        32
314: new           #27
317: dup
318: aload         29
320: aload         31
322: aload         32
324: invokespecial #47
327: astore        33
329: aload         33
331: invokevirtual #48
334: astore        34
336: bipush        52
338: ldc           #28
340: aload         34
342: invokestatic  #176
345: astore        35
347: ldc           #142
349: aload         34
351: invokestatic  #49
354: astore        36
356: new           #27
359: dup
360: aload         28
362: aload         34
364: invokespecial #177
367: astore        37
369: new           #8
372: dup
373: invokespecial #9
376: astore        38
378: aload         38
380: dconst_0
381: invokevirtual #129
384: iconst_2
385: newarray       double
387: dup
388: iconst_0
389: ldc2_w        #31
392: dastore
393: dup
394: iconst_1
395: dconst_1
396: dastore
397: astore        39
399: iconst_1
400: anewarray     #130
403: dup
404: iconst_0
405: aload         39
407: aastore
408: astore        40
410: aload         38
412: aload         40
414: putfield      #131
417: ldc           #28
419: aload         40
421: checkcast     #143
424: invokestatic  #36
427: astore        41
429: aload         28
431: aload         40
433: checkcast     #143
436: invokestatic  #178
439: astore        42
441: new           #44
444: dup
445: aload_3
446: aload         40
448: checkcast     #143
451: invokespecial #149
454: astore        43
456: new           #64
459: dup
460: invokespecial #65
463: ldc           #66
465: invokevirtual #67
468: aload_3
469: invokevirtual #68
472: ldc           #69
474: invokevirtual #67
477: getstatic     #70
480: invokevirtual #68
483: ldc           #66
485: invokevirtual #67
488: invokevirtual #71
491: aload_3
492: getstatic     #70
495: invokevirtual #72
498: invokestatic  #73
501: aload         7
503: invokestatic  #56
506: aload         7
508: invokestatic  #57
511: ldc           #74
513: invokestatic  #59
516: aload         7
518: invokestatic  #60
521: ldc           #74
523: invokestatic  #59
526: aload         9
528: invokestatic  #56
531: aload         9
533: invokestatic  #57
536: ldc           #74
538: invokestatic  #59
541: aload         9
543: invokestatic  #60
546: ldc           #74
548: invokestatic  #59
551: aload         10
553: invokestatic  #56
556: aload         11
558: invokestatic  #56
561: aload         13
563: invokestatic  #56
566: aload         13
568: invokestatic  #57
571: ldc           #63
573: invokestatic  #59
576: aload         13
578: invokestatic  #60
581: ldc           #63
583: invokestatic  #59
586: aload         14
588: invokestatic  #56
591: new           #64
594: dup
595: invokespecial #65
598: ldc           #66
600: invokevirtual #67
603: aload         18
605: invokevirtual #68
608: ldc           #69
610: invokevirtual #67
613: getstatic     #70
616: invokevirtual #68
619: ldc           #66
621: invokevirtual #67
624: invokevirtual #71
627: aload         18
629: getstatic     #70
632: invokevirtual #72
635: invokestatic  #73
638: aload         20
640: invokestatic  #56
643: aload         20
645: invokestatic  #57
648: ldc           #63
650: invokestatic  #59
653: aload         20
655: invokestatic  #60
658: ldc           #63
660: invokestatic  #59
663: aload         21
665: invokestatic  #56
668: aload         23
670: invokestatic  #56
673: aload         25
675: invokestatic  #56
678: new           #64
681: dup
682: invokespecial #65
685: ldc           #66
687: invokevirtual #67
690: aload         28
692: invokevirtual #68
695: ldc           #69
697: invokevirtual #67
700: getstatic     #70
703: invokevirtual #68
706: ldc           #66
708: invokevirtual #67
711: invokevirtual #71
714: aload         28
716: getstatic     #70
719: invokevirtual #72
722: invokestatic  #73
725: aload         32
727: invokestatic  #56
730: aload         32
732: invokestatic  #57
735: ldc           #74
737: invokestatic  #59
740: aload         32
742: invokestatic  #60
745: ldc           #74
747: invokestatic  #59
750: aload         34
752: invokestatic  #56
755: aload         34
757: invokestatic  #57
760: ldc           #74
762: invokestatic  #59
765: aload         34
767: invokestatic  #60
770: ldc           #74
772: invokestatic  #59
775: aload         35
777: invokestatic  #56
780: aload         36
782: invokestatic  #56
785: aload         39
787: invokestatic  #56
790: aload         39
792: invokestatic  #61
795: ldc           #134
797: invokestatic  #59
800: aload         40
802: invokestatic  #56
805: aload         41
807: invokestatic  #56
810: aload         42
812: invokestatic  #56
815: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 5053
End line: 5138
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8);
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern();
        java.lang.String str36 = localizable35.getSourceString();
        java.lang.Throwable throwable37 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58);
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray68 = new double[] { (-1), 1.0f };
        double[][] doubleArray69 = new double[][] { doubleArray68 };
        levenbergMarquardtOptimizer63.jacobian = doubleArray69;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69);
        java.lang.Throwable throwable74 = null;
        // The following exception was thrown during execution in test generation
        try {
            convergenceException73.addSuppressed(throwable74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(localizable35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(noSuchElementException46);
        org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException59);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #277
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_5
28: anewarray     #5
31: dup
32: iconst_0
33: iconst_0
34: invokestatic  #16
37: aastore
38: dup
39: iconst_1
40: iconst_0
41: invokestatic  #17
44: aastore
45: dup
46: iconst_2
47: bipush        52
49: invokestatic  #18
52: aastore
53: dup
54: iconst_3
55: ldc2_w        #19
58: invokestatic  #21
61: aastore
62: dup
63: iconst_4
64: dconst_1
65: invokestatic  #22
68: aastore
69: astore_2
70: new           #23
73: dup
74: ldc2_w        #24
77: aload_1
78: aload_2
79: invokespecial #26
82: astore_3
83: new           #27
86: dup
87: ldc           #28
89: aload_2
90: invokespecial #29
93: astore        4
95: aconst_null
96: astore        5
98: iconst_5
99: anewarray     #5
102: dup
103: iconst_0
104: iconst_0
105: invokestatic  #16
108: aastore
109: dup
110: iconst_1
111: iconst_0
112: invokestatic  #17
115: aastore
116: dup
117: iconst_2
118: bipush        52
120: invokestatic  #18
123: aastore
124: dup
125: iconst_3
126: ldc2_w        #19
129: invokestatic  #21
132: aastore
133: dup
134: iconst_4
135: dconst_1
136: invokestatic  #22
139: aastore
140: astore        6
142: new           #23
145: dup
146: ldc2_w        #24
149: aload         5
151: aload         6
153: invokespecial #26
156: astore        7
158: new           #27
161: dup
162: aload         4
164: ldc           #28
166: aload         6
168: invokespecial #30
171: astore        8
173: aconst_null
174: astore        9
176: new           #27
179: dup
180: aload         9
182: invokespecial #39
185: astore        10
187: aload         10
189: invokevirtual #40
192: astore        11
194: aconst_null
195: astore        12
197: iconst_1
198: anewarray     #5
201: dup
202: iconst_0
203: iconst_1
204: invokestatic  #35
207: aastore
208: astore        13
210: ldc           #28
212: aload         13
214: invokestatic  #36
217: astore        14
219: new           #37
222: dup
223: bipush        100
225: aload         12
227: aload         13
229: invokespecial #38
232: astore        15
234: aload         11
236: aload         13
238: invokestatic  #41
241: astore        16
243: new           #27
246: dup
247: aload         8
249: ldc           #191
251: aload         13
253: invokespecial #30
256: astore        17
258: aload         8
260: invokevirtual #40
263: astore        18
265: aload         18
267: invokeinterface #237,  1
272: astore        19
274: aconst_null
275: astore        20
277: iconst_1
278: anewarray     #5
281: dup
282: iconst_0
283: iconst_1
284: invokestatic  #35
287: aastore
288: astore        21
290: ldc           #28
292: aload         21
294: invokestatic  #36
297: astore        22
299: new           #44
302: dup
303: ldc           #142
305: aload         21
307: invokespecial #238
310: astore        23
312: ldc           #42
314: aload         21
316: invokestatic  #239
319: astore        24
321: new           #240
324: dup
325: invokespecial #241
328: astore        25
330: aconst_null
331: astore        26
333: new           #27
336: dup
337: aload         26
339: invokespecial #39
342: astore        27
344: aload         27
346: invokevirtual #40
349: astore        28
351: aconst_null
352: astore        29
354: new           #27
357: dup
358: aload         29
360: invokespecial #39
363: astore        30
365: aload         30
367: invokevirtual #40
370: astore        31
372: aconst_null
373: astore        32
375: iconst_1
376: anewarray     #5
379: dup
380: iconst_0
381: iconst_1
382: invokestatic  #35
385: aastore
386: astore        33
388: ldc           #28
390: aload         33
392: invokestatic  #36
395: astore        34
397: new           #37
400: dup
401: bipush        100
403: aload         32
405: aload         33
407: invokespecial #38
410: astore        35
412: aload         31
414: aload         33
416: invokestatic  #41
419: astore        36
421: new           #27
424: dup
425: aload         25
427: aload         28
429: aload         33
431: invokespecial #47
434: astore        37
436: new           #8
439: dup
440: invokespecial #9
443: astore        38
445: aload         38
447: dconst_0
448: invokevirtual #129
451: iconst_2
452: newarray       double
454: dup
455: iconst_0
456: ldc2_w        #31
459: dastore
460: dup
461: iconst_1
462: dconst_1
463: dastore
464: astore        39
466: iconst_1
467: anewarray     #130
470: dup
471: iconst_0
472: aload         39
474: aastore
475: astore        40
477: aload         38
479: aload         40
481: putfield      #131
484: new           #44
487: dup
488: aload         24
490: aload         28
492: aload         40
494: checkcast     #143
497: invokespecial #45
500: astore        41
502: new           #240
505: dup
506: aload         20
508: ldc           #242
510: aload         40
512: checkcast     #143
515: invokespecial #243
518: astore        42
520: new           #240
523: dup
524: aload         18
526: aload         40
528: checkcast     #143
531: invokespecial #244
534: astore        43
536: aconst_null
537: astore        44
539: aload         43
541: aload         44
543: invokevirtual #278
546: ldc_w         #279
549: invokestatic  #13
552: goto          557
555: astore        45
557: aload_2
558: invokestatic  #56
561: aload_2
562: invokestatic  #57
565: ldc           #58
567: invokestatic  #59
570: aload_2
571: invokestatic  #60
574: ldc           #58
576: invokestatic  #59
579: aload         6
581: invokestatic  #56
584: aload         6
586: invokestatic  #57
589: ldc           #58
591: invokestatic  #59
594: aload         6
596: invokestatic  #60
599: ldc           #58
601: invokestatic  #59
604: new           #64
607: dup
608: invokespecial #65
611: ldc           #66
613: invokevirtual #67
616: aload         11
618: invokevirtual #68
621: ldc           #69
623: invokevirtual #67
626: getstatic     #70
629: invokevirtual #68
632: ldc           #66
634: invokevirtual #67
637: invokevirtual #71
640: aload         11
642: getstatic     #70
645: invokevirtual #72
648: invokestatic  #73
651: aload         13
653: invokestatic  #56
656: aload         13
658: invokestatic  #57
661: ldc           #63
663: invokestatic  #59
666: aload         13
668: invokestatic  #60
671: ldc           #63
673: invokestatic  #59
676: aload         14
678: invokestatic  #56
681: aload         16
683: invokestatic  #56
686: aload         18
688: invokestatic  #56
691: new           #64
694: dup
695: invokespecial #65
698: ldc           #66
700: invokevirtual #67
703: aload         19
705: invokevirtual #67
708: ldc           #246
710: invokevirtual #67
713: invokevirtual #71
716: aload         19
718: ldc           #28
720: invokestatic  #247
723: aload         21
725: invokestatic  #56
728: aload         21
730: invokestatic  #57
733: ldc           #63
735: invokestatic  #59
738: aload         21
740: invokestatic  #60
743: ldc           #63
745: invokestatic  #59
748: aload         22
750: invokestatic  #56
753: aload         24
755: invokestatic  #56
758: new           #64
761: dup
762: invokespecial #65
765: ldc           #66
767: invokevirtual #67
770: aload         28
772: invokevirtual #68
775: ldc           #69
777: invokevirtual #67
780: getstatic     #70
783: invokevirtual #68
786: ldc           #66
788: invokevirtual #67
791: invokevirtual #71
794: aload         28
796: getstatic     #70
799: invokevirtual #72
802: invokestatic  #73
805: new           #64
808: dup
809: invokespecial #65
812: ldc           #66
814: invokevirtual #67
817: aload         31
819: invokevirtual #68
822: ldc           #69
824: invokevirtual #67
827: getstatic     #70
830: invokevirtual #68
833: ldc           #66
835: invokevirtual #67
838: invokevirtual #71
841: aload         31
843: getstatic     #70
846: invokevirtual #72
849: invokestatic  #73
852: aload         33
854: invokestatic  #56
857: aload         33
859: invokestatic  #57
862: ldc           #63
864: invokestatic  #59
867: aload         33
869: invokestatic  #60
872: ldc           #63
874: invokestatic  #59
877: aload         34
879: invokestatic  #56
882: aload         36
884: invokestatic  #56
887: aload         39
889: invokestatic  #56
892: aload         39
894: invokestatic  #61
897: ldc           #134
899: invokestatic  #59
902: aload         40
904: invokestatic  #56
907: return
Exception table:
from    to  target type
539   552   555   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 5141
End line: 5159
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        double double14 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.setQRRankingThreshold(10.0d);
        double[] doubleArray17 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNull(doubleArray17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #97
85: dstore        4
87: aload_1
88: ldc2_w        #33
91: invokevirtual #162
94: aload_1
95: getfield      #152
98: astore        6
100: new           #64
103: dup
104: invokespecial #65
107: ldc           #66
109: invokevirtual #67
112: iload_2
113: invokevirtual #102
116: ldc           #69
118: invokevirtual #67
121: sipush        1000
124: invokevirtual #102
127: ldc           #66
129: invokevirtual #67
132: invokevirtual #71
135: iload_2
136: sipush        1000
139: if_icmpne     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #73
150: new           #64
153: dup
154: invokespecial #65
157: ldc           #66
159: invokevirtual #67
162: dload         4
164: invokevirtual #79
167: ldc           #69
169: invokevirtual #67
172: ldc2_w        #95
175: invokevirtual #79
178: ldc           #66
180: invokevirtual #67
183: invokevirtual #71
186: dload         4
188: ldc2_w        #95
191: dcmpl
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #73
203: aload         6
205: invokestatic  #106
208: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 5162
End line: 5210
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        double[][] doubleArray21 = levenbergMarquardtOptimizer0.jacobian;
        double[] doubleArray22 = levenbergMarquardtOptimizer0.targetValues;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException24 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException(throwable27);
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable27, localizable29, objArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException24, 0.0d, "hi!", objArray32);
        double[] doubleArray35 = functionEvaluationException34.getArgument();
        double[] doubleArray37 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray37);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray37;
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) (short) 0);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: getfield      #131
146: astore        12
148: aload_1
149: getfield      #152
152: astore        13
154: new           #81
157: dup
158: iconst_m1
159: invokespecial #82
162: astore        14
164: aconst_null
165: astore        15
167: new           #27
170: dup
171: aload         15
173: invokespecial #39
176: astore        16
178: aconst_null
179: astore        17
181: iconst_2
182: anewarray     #5
185: dup
186: iconst_0
187: ldc           #28
189: aastore
190: dup
191: iconst_1
192: iconst_1
193: invokestatic  #17
196: aastore
197: astore        18
199: new           #27
202: dup
203: aload         15
205: aload         17
207: aload         18
209: invokespecial #47
212: astore        19
214: new           #23
217: dup
218: aload         14
220: dconst_0
221: ldc           #28
223: aload         18
225: invokespecial #83
228: astore        20
230: aload         20
232: invokevirtual #84
235: astore        21
237: iconst_1
238: newarray       double
240: dup
241: iconst_0
242: ldc2_w        #85
245: dastore
246: astore        22
248: new           #87
251: dup
252: aload         21
254: aload         22
256: invokespecial #88
259: astore        23
261: aload_1
262: aload         22
264: putfield      #113
267: aload_1
268: dconst_0
269: invokevirtual #127
272: aload_2
273: invokestatic  #106
276: aload         7
278: invokestatic  #56
281: aload         7
283: invokestatic  #57
286: ldc           #74
288: invokestatic  #59
291: aload         7
293: invokestatic  #60
296: ldc           #74
298: invokestatic  #59
301: aload         10
303: invokestatic  #56
306: aload         10
308: invokestatic  #61
311: ldc           #90
313: invokestatic  #59
316: aload         11
318: invokestatic  #56
321: aload         11
323: invokestatic  #61
326: ldc           #90
328: invokestatic  #59
331: aload         12
333: invokestatic  #106
336: aload         13
338: invokestatic  #106
341: aload         18
343: invokestatic  #56
346: aload         18
348: invokestatic  #57
351: ldc           #74
353: invokestatic  #59
356: aload         18
358: invokestatic  #60
361: ldc           #74
363: invokestatic  #59
366: aload         21
368: invokestatic  #56
371: aload         21
373: invokestatic  #61
376: ldc           #90
378: invokestatic  #59
381: aload         22
383: invokestatic  #56
386: aload         22
388: invokestatic  #61
391: ldc           #91
393: invokestatic  #59
396: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 5213
End line: 5313
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38);
        double[] doubleArray41 = functionEvaluationException40.getArgument();
        double[] doubleArray43 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61);
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73);
        java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        java.lang.Object[] objArray88 = mathRuntimeException87.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray41;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int94 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(nullPointerException79);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89);
        org.junit.Assert.assertNull(vectorialConvergenceChecker93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aconst_null
50: astore_2
51: iconst_5
52: anewarray     #5
55: dup
56: iconst_0
57: iconst_0
58: invokestatic  #16
61: aastore
62: dup
63: iconst_1
64: iconst_0
65: invokestatic  #17
68: aastore
69: dup
70: iconst_2
71: bipush        52
73: invokestatic  #18
76: aastore
77: dup
78: iconst_3
79: ldc2_w        #19
82: invokestatic  #21
85: aastore
86: dup
87: iconst_4
88: dconst_1
89: invokestatic  #22
92: aastore
93: astore_3
94: new           #23
97: dup
98: ldc2_w        #24
101: aload_2
102: aload_3
103: invokespecial #26
106: astore        4
108: new           #27
111: dup
112: ldc           #28
114: aload_3
115: invokespecial #29
118: astore        5
120: aconst_null
121: astore        6
123: iconst_5
124: anewarray     #5
127: dup
128: iconst_0
129: iconst_0
130: invokestatic  #16
133: aastore
134: dup
135: iconst_1
136: iconst_0
137: invokestatic  #17
140: aastore
141: dup
142: iconst_2
143: bipush        52
145: invokestatic  #18
148: aastore
149: dup
150: iconst_3
151: ldc2_w        #19
154: invokestatic  #21
157: aastore
158: dup
159: iconst_4
160: dconst_1
161: invokestatic  #22
164: aastore
165: astore        7
167: new           #23
170: dup
171: ldc2_w        #24
174: aload         6
176: aload         7
178: invokespecial #26
181: astore        8
183: new           #27
186: dup
187: aload         5
189: ldc           #28
191: aload         7
193: invokespecial #30
196: astore        9
198: new           #81
201: dup
202: iconst_m1
203: invokespecial #82
206: astore        10
208: aconst_null
209: astore        11
211: new           #27
214: dup
215: aload         11
217: invokespecial #39
220: astore        12
222: aconst_null
223: astore        13
225: iconst_2
226: anewarray     #5
229: dup
230: iconst_0
231: ldc           #28
233: aastore
234: dup
235: iconst_1
236: iconst_1
237: invokestatic  #17
240: aastore
241: astore        14
243: new           #27
246: dup
247: aload         11
249: aload         13
251: aload         14
253: invokespecial #47
256: astore        15
258: new           #23
261: dup
262: aload         10
264: dconst_0
265: ldc           #28
267: aload         14
269: invokespecial #83
272: astore        16
274: aload         16
276: invokevirtual #84
279: astore        17
281: iconst_1
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #85
289: dastore
290: astore        18
292: new           #87
295: dup
296: aload         17
298: aload         18
300: invokespecial #88
303: astore        19
305: aconst_null
306: astore        20
308: iconst_1
309: anewarray     #5
312: dup
313: iconst_0
314: iconst_1
315: invokestatic  #35
318: aastore
319: astore        21
321: ldc           #28
323: aload         21
325: invokestatic  #36
328: astore        22
330: new           #37
333: dup
334: bipush        100
336: aload         20
338: aload         21
340: invokespecial #38
343: astore        23
345: aconst_null
346: astore        24
348: new           #27
351: dup
352: aload         24
354: invokespecial #39
357: astore        25
359: aload         25
361: invokevirtual #40
364: astore        26
366: aconst_null
367: astore        27
369: iconst_1
370: anewarray     #5
373: dup
374: iconst_0
375: iconst_1
376: invokestatic  #35
379: aastore
380: astore        28
382: ldc           #28
384: aload         28
386: invokestatic  #36
389: astore        29
391: new           #37
394: dup
395: bipush        100
397: aload         27
399: aload         28
401: invokespecial #38
404: astore        30
406: aconst_null
407: astore        31
409: aconst_null
410: astore        32
412: new           #27
415: dup
416: aload         32
418: invokespecial #39
421: astore        33
423: aload         33
425: invokevirtual #40
428: astore        34
430: aconst_null
431: astore        35
433: iconst_1
434: anewarray     #5
437: dup
438: iconst_0
439: iconst_1
440: invokestatic  #35
443: aastore
444: astore        36
446: ldc           #28
448: aload         36
450: invokestatic  #36
453: astore        37
455: new           #37
458: dup
459: bipush        100
461: aload         35
463: aload         36
465: invokespecial #38
468: astore        38
470: aload         34
472: aload         36
474: invokestatic  #41
477: astore        39
479: ldc           #42
481: aload         36
483: invokestatic  #43
486: astore        40
488: new           #44
491: dup
492: aload         30
494: aload         31
496: aload         36
498: invokespecial #45
501: astore        41
503: aload         26
505: aload         36
507: invokestatic  #46
510: astore        42
512: aconst_null
513: astore        43
515: new           #27
518: dup
519: aload         43
521: invokespecial #39
524: astore        44
526: aconst_null
527: astore        45
529: iconst_2
530: anewarray     #5
533: dup
534: iconst_0
535: ldc           #28
537: aastore
538: dup
539: iconst_1
540: iconst_1
541: invokestatic  #17
544: aastore
545: astore        46
547: new           #27
550: dup
551: aload         43
553: aload         45
555: aload         46
557: invokespecial #47
560: astore        47
562: aload         47
564: invokevirtual #48
567: astore        48
569: ldc           #42
571: aload         48
573: invokestatic  #49
576: astore        49
578: new           #23
581: dup
582: aload         23
584: dconst_0
585: aload         26
587: aload         48
589: invokespecial #50
592: astore        50
594: new           #23
597: dup
598: aload         5
600: aload         17
602: ldc           #142
604: aload         48
606: invokespecial #283
609: astore        51
611: aload_1
612: aload         17
614: putfield      #113
617: aload_1
618: invokevirtual #104
621: astore        52
623: aload_1
624: invokevirtual #110
627: istore        53
629: aload_1
630: invokevirtual #10
633: aload_3
634: invokestatic  #56
637: aload_3
638: invokestatic  #57
641: ldc           #58
643: invokestatic  #59
646: aload_3
647: invokestatic  #60
650: ldc           #58
652: invokestatic  #59
655: aload         7
657: invokestatic  #56
660: aload         7
662: invokestatic  #57
665: ldc           #58
667: invokestatic  #59
670: aload         7
672: invokestatic  #60
675: ldc           #58
677: invokestatic  #59
680: aload         14
682: invokestatic  #56
685: aload         14
687: invokestatic  #57
690: ldc           #74
692: invokestatic  #59
695: aload         14
697: invokestatic  #60
700: ldc           #74
702: invokestatic  #59
705: aload         17
707: invokestatic  #56
710: aload         17
712: invokestatic  #61
715: ldc           #90
717: invokestatic  #59
720: aload         18
722: invokestatic  #56
725: aload         18
727: invokestatic  #61
730: ldc           #91
732: invokestatic  #59
735: aload         21
737: invokestatic  #56
740: aload         21
742: invokestatic  #57
745: ldc           #63
747: invokestatic  #59
750: aload         21
752: invokestatic  #60
755: ldc           #63
757: invokestatic  #59
760: aload         22
762: invokestatic  #56
765: new           #64
768: dup
769: invokespecial #65
772: ldc           #66
774: invokevirtual #67
777: aload         26
779: invokevirtual #68
782: ldc           #69
784: invokevirtual #67
787: getstatic     #70
790: invokevirtual #68
793: ldc           #66
795: invokevirtual #67
798: invokevirtual #71
801: aload         26
803: getstatic     #70
806: invokevirtual #72
809: invokestatic  #73
812: aload         28
814: invokestatic  #56
817: aload         28
819: invokestatic  #57
822: ldc           #63
824: invokestatic  #59
827: aload         28
829: invokestatic  #60
832: ldc           #63
834: invokestatic  #59
837: aload         29
839: invokestatic  #56
842: new           #64
845: dup
846: invokespecial #65
849: ldc           #66
851: invokevirtual #67
854: aload         34
856: invokevirtual #68
859: ldc           #69
861: invokevirtual #67
864: getstatic     #70
867: invokevirtual #68
870: ldc           #66
872: invokevirtual #67
875: invokevirtual #71
878: aload         34
880: getstatic     #70
883: invokevirtual #72
886: invokestatic  #73
889: aload         36
891: invokestatic  #56
894: aload         36
896: invokestatic  #57
899: ldc           #63
901: invokestatic  #59
904: aload         36
906: invokestatic  #60
909: ldc           #63
911: invokestatic  #59
914: aload         37
916: invokestatic  #56
919: aload         39
921: invokestatic  #56
924: aload         40
926: invokestatic  #56
929: aload         42
931: invokestatic  #56
934: aload         46
936: invokestatic  #56
939: aload         46
941: invokestatic  #57
944: ldc           #74
946: invokestatic  #59
949: aload         46
951: invokestatic  #60
954: ldc           #74
956: invokestatic  #59
959: aload         48
961: invokestatic  #56
964: aload         48
966: invokestatic  #57
969: ldc           #74
971: invokestatic  #59
974: aload         48
976: invokestatic  #60
979: ldc           #74
981: invokestatic  #59
984: aload         49
986: invokestatic  #56
989: aload         52
991: invokestatic  #106
994: new           #64
997: dup
998: invokespecial #65
1001: ldc           #66
1003: invokevirtual #67
1006: iload         53
1008: invokevirtual #102
1011: ldc           #69
1013: invokevirtual #67
1016: bipush        97
1018: invokevirtual #102
1021: ldc           #66
1023: invokevirtual #67
1026: invokevirtual #71
1029: iload         53
1031: bipush        97
1033: if_icmpne     1040
1036: iconst_1
1037: goto          1041
1040: iconst_0
1041: invokestatic  #73
1044: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 5316
End line: 5332
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        double double10 = levenbergMarquardtOptimizer0.getRMS();
        int int11 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker12 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker12;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + Double.POSITIVE_INFINITY + "'", double10 == Double.POSITIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: aload_1
63: invokevirtual #132
66: dstore_3
67: aload_1
68: invokevirtual #167
71: istore        5
73: new           #99
76: dup
77: invokespecial #100
80: astore        6
82: aload_1
83: aload         6
85: putfield      #140
88: new           #64
91: dup
92: invokespecial #65
95: ldc           #66
97: invokevirtual #67
100: iload_2
101: invokevirtual #102
104: ldc           #69
106: invokevirtual #67
109: sipush        1000
112: invokevirtual #102
115: ldc           #66
117: invokevirtual #67
120: invokevirtual #71
123: iload_2
124: sipush        1000
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #73
138: new           #64
141: dup
142: invokespecial #65
145: ldc           #66
147: invokevirtual #67
150: dload_3
151: invokevirtual #79
154: ldc           #69
156: invokevirtual #67
159: ldc2_w        #222
162: invokevirtual #79
165: ldc           #66
167: invokevirtual #67
170: invokevirtual #71
173: dload_3
174: ldc2_w        #222
177: dcmpl
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #73
189: new           #64
192: dup
193: invokespecial #65
196: ldc           #66
198: invokevirtual #67
201: iload         5
203: invokevirtual #102
206: ldc           #69
208: invokevirtual #67
211: iconst_0
212: invokevirtual #102
215: ldc           #66
217: invokevirtual #67
220: invokevirtual #71
223: iload         5
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #73
236: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 5335
End line: 5429
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray20 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20);
        levenbergMarquardtOptimizer0.residuals = doubleArray20;
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction24 = null;
        double[] doubleArray25 = null;
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException41 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable44);
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        java.lang.Object[] objArray49 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable44, localizable46, objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException41, 0.0d, "hi!", objArray49);
        double[] doubleArray52 = functionEvaluationException51.getArgument();
        double[] doubleArray54 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray54);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray54, false);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(throwable26, doubleArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(doubleArray39);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer60 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer60.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer60.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray65 = levenbergMarquardtOptimizer60.residuals;
        double[] doubleArray66 = levenbergMarquardtOptimizer60.residuals;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable71 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71);
        org.apache.commons.math.exception.util.Localizable localizable73 = null;
        java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76);
        double[] doubleArray79 = functionEvaluationException78.getArgument();
        double[] doubleArray80 = functionEvaluationException78.getArgument();
        levenbergMarquardtOptimizer60.residualsWeights = doubleArray80;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction24, doubleArray25, doubleArray39, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]");
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: iconst_1
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #85
137: dastore
138: astore        11
140: new           #87
143: dup
144: aload         10
146: aload         11
148: invokespecial #88
151: astore        12
153: new           #23
156: dup
157: aload         11
159: invokespecial #89
162: astore        13
164: aload_1
165: aload         11
167: putfield      #122
170: aconst_null
171: astore        14
173: aconst_null
174: astore        15
176: aconst_null
177: astore        16
179: new           #81
182: dup
183: iconst_m1
184: invokespecial #82
187: astore        17
189: aconst_null
190: astore        18
192: new           #27
195: dup
196: aload         18
198: invokespecial #39
201: astore        19
203: aconst_null
204: astore        20
206: iconst_2
207: anewarray     #5
210: dup
211: iconst_0
212: ldc           #28
214: aastore
215: dup
216: iconst_1
217: iconst_1
218: invokestatic  #17
221: aastore
222: astore        21
224: new           #27
227: dup
228: aload         18
230: aload         20
232: aload         21
234: invokespecial #47
237: astore        22
239: new           #23
242: dup
243: aload         17
245: dconst_0
246: ldc           #28
248: aload         21
250: invokespecial #83
253: astore        23
255: aload         23
257: invokevirtual #84
260: astore        24
262: new           #81
265: dup
266: iconst_m1
267: invokespecial #82
270: astore        25
272: aconst_null
273: astore        26
275: new           #27
278: dup
279: aload         26
281: invokespecial #39
284: astore        27
286: aconst_null
287: astore        28
289: iconst_2
290: anewarray     #5
293: dup
294: iconst_0
295: ldc           #28
297: aastore
298: dup
299: iconst_1
300: iconst_1
301: invokestatic  #17
304: aastore
305: astore        29
307: new           #27
310: dup
311: aload         26
313: aload         28
315: aload         29
317: invokespecial #47
320: astore        30
322: new           #23
325: dup
326: aload         25
328: dconst_0
329: ldc           #28
331: aload         29
333: invokespecial #83
336: astore        31
338: aload         31
340: invokevirtual #84
343: astore        32
345: iconst_1
346: newarray       double
348: dup
349: iconst_0
350: ldc2_w        #85
353: dastore
354: astore        33
356: new           #87
359: dup
360: aload         32
362: aload         33
364: invokespecial #88
367: astore        34
369: new           #87
372: dup
373: aload         24
375: aload         33
377: iconst_0
378: invokespecial #117
381: astore        35
383: new           #23
386: dup
387: aload         16
389: aload         24
391: invokespecial #148
394: astore        36
396: new           #23
399: dup
400: aload         24
402: invokespecial #89
405: astore        37
407: new           #8
410: dup
411: invokespecial #9
414: astore        38
416: aload         38
418: dconst_0
419: invokevirtual #129
422: aload         38
424: bipush        100
426: invokevirtual #76
429: aload         38
431: getfield      #122
434: astore        39
436: aload         38
438: getfield      #122
441: astore        40
443: new           #81
446: dup
447: iconst_m1
448: invokespecial #82
451: astore        41
453: aconst_null
454: astore        42
456: new           #27
459: dup
460: aload         42
462: invokespecial #39
465: astore        43
467: aconst_null
468: astore        44
470: iconst_2
471: anewarray     #5
474: dup
475: iconst_0
476: ldc           #28
478: aastore
479: dup
480: iconst_1
481: iconst_1
482: invokestatic  #17
485: aastore
486: astore        45
488: new           #27
491: dup
492: aload         42
494: aload         44
496: aload         45
498: invokespecial #47
501: astore        46
503: new           #23
506: dup
507: aload         41
509: dconst_0
510: ldc           #28
512: aload         45
514: invokespecial #83
517: astore        47
519: aload         47
521: invokevirtual #84
524: astore        48
526: aload         47
528: invokevirtual #84
531: astore        49
533: aload         38
535: aload         49
537: putfield      #113
540: aload_1
541: aload         14
543: aload         15
545: aload         24
547: aload         49
549: invokevirtual #124
552: astore        50
554: ldc           #54
556: invokestatic  #13
559: goto          564
562: astore        50
564: aload_2
565: invokestatic  #106
568: aload         7
570: invokestatic  #56
573: aload         7
575: invokestatic  #57
578: ldc           #74
580: invokestatic  #59
583: aload         7
585: invokestatic  #60
588: ldc           #74
590: invokestatic  #59
593: aload         10
595: invokestatic  #56
598: aload         10
600: invokestatic  #61
603: ldc           #90
605: invokestatic  #59
608: aload         11
610: invokestatic  #56
613: aload         11
615: invokestatic  #61
618: ldc           #91
620: invokestatic  #59
623: aload         21
625: invokestatic  #56
628: aload         21
630: invokestatic  #57
633: ldc           #74
635: invokestatic  #59
638: aload         21
640: invokestatic  #60
643: ldc           #74
645: invokestatic  #59
648: aload         24
650: invokestatic  #56
653: aload         24
655: invokestatic  #61
658: ldc           #90
660: invokestatic  #59
663: aload         29
665: invokestatic  #56
668: aload         29
670: invokestatic  #57
673: ldc           #74
675: invokestatic  #59
678: aload         29
680: invokestatic  #60
683: ldc           #74
685: invokestatic  #59
688: aload         32
690: invokestatic  #56
693: aload         32
695: invokestatic  #61
698: ldc           #90
700: invokestatic  #59
703: aload         33
705: invokestatic  #56
708: aload         33
710: invokestatic  #61
713: ldc           #91
715: invokestatic  #59
718: aload         39
720: invokestatic  #106
723: aload         40
725: invokestatic  #106
728: aload         45
730: invokestatic  #56
733: aload         45
735: invokestatic  #57
738: ldc           #74
740: invokestatic  #59
743: aload         45
745: invokestatic  #60
748: ldc           #74
750: invokestatic  #59
753: aload         48
755: invokestatic  #56
758: aload         48
760: invokestatic  #61
763: ldc           #90
765: invokestatic  #59
768: aload         49
770: invokestatic  #56
773: aload         49
775: invokestatic  #61
778: ldc           #90
780: invokestatic  #59
783: return
Exception table:
from    to  target type
540   559   562   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 5432
End line: 5440
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_1
35: invokevirtual #76
38: aload_1
39: invokevirtual #104
42: astore_2
43: aload_1
44: dconst_0
45: invokevirtual #127
48: aload_2
49: invokestatic  #106
52: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 5443
End line: 5453
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker7 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.cost = 1L;
        org.junit.Assert.assertNull(vectorialConvergenceChecker7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aload_1
50: getfield      #140
53: astore_2
54: aload_1
55: dconst_1
56: putfield      #97
59: aload_2
60: invokestatic  #106
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 5456
End line: 5545
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        double double83 = levenbergMarquardtOptimizer0.cost;
        int int84 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1000 + "'", int84 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: bipush        35
550: invokevirtual #76
553: aload_1
554: getfield      #97
557: dstore        47
559: aload_1
560: invokevirtual #98
563: istore        49
565: aload_3
566: invokestatic  #56
569: aload_3
570: invokestatic  #57
573: ldc           #58
575: invokestatic  #59
578: aload_3
579: invokestatic  #60
582: ldc           #58
584: invokestatic  #59
587: aload         7
589: invokestatic  #56
592: aload         7
594: invokestatic  #57
597: ldc           #58
599: invokestatic  #59
602: aload         7
604: invokestatic  #60
607: ldc           #58
609: invokestatic  #59
612: aload         10
614: invokestatic  #56
617: aload         10
619: invokestatic  #61
622: ldc           #62
624: invokestatic  #59
627: aload         12
629: invokestatic  #56
632: aload         12
634: invokestatic  #57
637: ldc           #63
639: invokestatic  #59
642: aload         12
644: invokestatic  #60
647: ldc           #63
649: invokestatic  #59
652: aload         13
654: invokestatic  #56
657: new           #64
660: dup
661: invokespecial #65
664: ldc           #66
666: invokevirtual #67
669: aload         17
671: invokevirtual #68
674: ldc           #69
676: invokevirtual #67
679: getstatic     #70
682: invokevirtual #68
685: ldc           #66
687: invokevirtual #67
690: invokevirtual #71
693: aload         17
695: getstatic     #70
698: invokevirtual #72
701: invokestatic  #73
704: aload         19
706: invokestatic  #56
709: aload         19
711: invokestatic  #57
714: ldc           #63
716: invokestatic  #59
719: aload         19
721: invokestatic  #60
724: ldc           #63
726: invokestatic  #59
729: aload         20
731: invokestatic  #56
734: new           #64
737: dup
738: invokespecial #65
741: ldc           #66
743: invokevirtual #67
746: aload         25
748: invokevirtual #68
751: ldc           #69
753: invokevirtual #67
756: getstatic     #70
759: invokevirtual #68
762: ldc           #66
764: invokevirtual #67
767: invokevirtual #71
770: aload         25
772: getstatic     #70
775: invokevirtual #72
778: invokestatic  #73
781: aload         27
783: invokestatic  #56
786: aload         27
788: invokestatic  #57
791: ldc           #63
793: invokestatic  #59
796: aload         27
798: invokestatic  #60
801: ldc           #63
803: invokestatic  #59
806: aload         28
808: invokestatic  #56
811: aload         30
813: invokestatic  #56
816: aload         31
818: invokestatic  #56
821: aload         33
823: invokestatic  #56
826: aload         37
828: invokestatic  #56
831: aload         37
833: invokestatic  #57
836: ldc           #74
838: invokestatic  #59
841: aload         37
843: invokestatic  #60
846: ldc           #74
848: invokestatic  #59
851: aload         39
853: invokestatic  #56
856: aload         39
858: invokestatic  #57
861: ldc           #74
863: invokestatic  #59
866: aload         39
868: invokestatic  #60
871: ldc           #74
873: invokestatic  #59
876: aload         40
878: invokestatic  #56
881: new           #64
884: dup
885: invokespecial #65
888: ldc           #66
890: invokevirtual #67
893: dload         44
895: invokevirtual #79
898: ldc           #69
900: invokevirtual #67
903: dconst_0
904: invokevirtual #79
907: ldc           #66
909: invokevirtual #67
912: invokevirtual #71
915: dload         44
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #73
930: new           #64
933: dup
934: invokespecial #65
937: ldc           #66
939: invokevirtual #67
942: iload         46
944: invokevirtual #102
947: ldc           #69
949: invokevirtual #67
952: sipush        1000
955: invokevirtual #102
958: ldc           #66
960: invokevirtual #67
963: invokevirtual #71
966: iload         46
968: sipush        1000
971: if_icmpne     978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #73
982: new           #64
985: dup
986: invokespecial #65
989: ldc           #66
991: invokevirtual #67
994: dload         47
996: invokevirtual #79
999: ldc           #69
1001: invokevirtual #67
1004: dconst_0
1005: invokevirtual #79
1008: ldc           #66
1010: invokevirtual #67
1013: invokevirtual #71
1016: dload         47
1018: dconst_0
1019: dcmpl
1020: ifne          1027
1023: iconst_1
1024: goto          1028
1027: iconst_0
1028: invokestatic  #73
1031: new           #64
1034: dup
1035: invokespecial #65
1038: ldc           #66
1040: invokevirtual #67
1043: iload         49
1045: invokevirtual #102
1048: ldc           #69
1050: invokevirtual #67
1053: sipush        1000
1056: invokevirtual #102
1059: ldc           #66
1061: invokevirtual #67
1064: invokevirtual #71
1067: iload         49
1069: sipush        1000
1072: if_icmpne     1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #73
1083: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 5548
End line: 5635
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer39.rows = 0;
        levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray44 = levenbergMarquardtOptimizer39.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54);
        double[] doubleArray57 = functionEvaluationException56.getArgument();
        double[] doubleArray58 = functionEvaluationException56.getArgument();
        levenbergMarquardtOptimizer39.objective = doubleArray58;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(doubleArray58);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray58, false);
        java.lang.Throwable throwable67 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException68 = new org.apache.commons.math.MathRuntimeException(throwable67);
        org.apache.commons.math.exception.util.Localizable localizable69 = null;
        java.lang.Object[] objArray72 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable67, localizable69, objArray72);
        java.lang.Object[] objArray74 = mathRuntimeException73.getArguments();
        java.text.ParseException parseException75 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray74);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, "org.apache.commons.math.MathException: ", objArray74);
        double[] doubleArray78 = functionEvaluationException77.getArgument();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException75);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #81
145: dup
146: iconst_m1
147: invokespecial #82
150: astore        12
152: aconst_null
153: astore        13
155: new           #27
158: dup
159: aload         13
161: invokespecial #39
164: astore        14
166: aconst_null
167: astore        15
169: iconst_2
170: anewarray     #5
173: dup
174: iconst_0
175: ldc           #28
177: aastore
178: dup
179: iconst_1
180: iconst_1
181: invokestatic  #17
184: aastore
185: astore        16
187: new           #27
190: dup
191: aload         13
193: aload         15
195: aload         16
197: invokespecial #47
200: astore        17
202: new           #23
205: dup
206: aload         12
208: dconst_0
209: ldc           #28
211: aload         16
213: invokespecial #83
216: astore        18
218: aload         18
220: invokevirtual #84
223: astore        19
225: iconst_1
226: newarray       double
228: dup
229: iconst_0
230: ldc2_w        #85
233: dastore
234: astore        20
236: new           #87
239: dup
240: aload         19
242: aload         20
244: invokespecial #88
247: astore        21
249: new           #87
252: dup
253: aload         11
255: aload         19
257: iconst_0
258: invokespecial #117
261: astore        22
263: new           #8
266: dup
267: invokespecial #9
270: astore        23
272: aload         23
274: iconst_0
275: putfield      #93
278: aload         23
280: iconst_1
281: invokevirtual #76
284: aload         23
286: getfield      #113
289: astore        24
291: new           #81
294: dup
295: iconst_m1
296: invokespecial #82
299: astore        25
301: aconst_null
302: astore        26
304: new           #27
307: dup
308: aload         26
310: invokespecial #39
313: astore        27
315: aconst_null
316: astore        28
318: iconst_2
319: anewarray     #5
322: dup
323: iconst_0
324: ldc           #28
326: aastore
327: dup
328: iconst_1
329: iconst_1
330: invokestatic  #17
333: aastore
334: astore        29
336: new           #27
339: dup
340: aload         26
342: aload         28
344: aload         29
346: invokespecial #47
349: astore        30
351: new           #23
354: dup
355: aload         25
357: dconst_0
358: ldc           #28
360: aload         29
362: invokespecial #83
365: astore        31
367: aload         31
369: invokevirtual #84
372: astore        32
374: aload         31
376: invokevirtual #84
379: astore        33
381: aload         23
383: aload         33
385: putfield      #114
388: new           #23
391: dup
392: aload         33
394: invokespecial #89
397: astore        34
399: new           #87
402: dup
403: aload         11
405: aload         33
407: iconst_0
408: invokespecial #117
411: astore        35
413: aconst_null
414: astore        36
416: new           #27
419: dup
420: aload         36
422: invokespecial #39
425: astore        37
427: aconst_null
428: astore        38
430: iconst_2
431: anewarray     #5
434: dup
435: iconst_0
436: ldc           #28
438: aastore
439: dup
440: iconst_1
441: iconst_1
442: invokestatic  #17
445: aastore
446: astore        39
448: new           #27
451: dup
452: aload         36
454: aload         38
456: aload         39
458: invokespecial #47
461: astore        40
463: aload         40
465: invokevirtual #48
468: astore        41
470: bipush        52
472: ldc           #28
474: aload         41
476: invokestatic  #176
479: astore        42
481: ldc           #142
483: aload         41
485: invokestatic  #49
488: astore        43
490: new           #23
493: dup
494: aload         11
496: ldc           #242
498: aload         41
500: invokespecial #144
503: astore        44
505: aload         44
507: invokevirtual #84
510: astore        45
512: aload_2
513: invokestatic  #106
516: aload         7
518: invokestatic  #56
521: aload         7
523: invokestatic  #57
526: ldc           #74
528: invokestatic  #59
531: aload         7
533: invokestatic  #60
536: ldc           #74
538: invokestatic  #59
541: aload         10
543: invokestatic  #56
546: aload         10
548: invokestatic  #61
551: ldc           #90
553: invokestatic  #59
556: aload         11
558: invokestatic  #56
561: aload         11
563: invokestatic  #61
566: ldc           #90
568: invokestatic  #59
571: aload         16
573: invokestatic  #56
576: aload         16
578: invokestatic  #57
581: ldc           #74
583: invokestatic  #59
586: aload         16
588: invokestatic  #60
591: ldc           #74
593: invokestatic  #59
596: aload         19
598: invokestatic  #56
601: aload         19
603: invokestatic  #61
606: ldc           #90
608: invokestatic  #59
611: aload         20
613: invokestatic  #56
616: aload         20
618: invokestatic  #61
621: ldc           #91
623: invokestatic  #59
626: aload         24
628: invokestatic  #106
631: aload         29
633: invokestatic  #56
636: aload         29
638: invokestatic  #57
641: ldc           #74
643: invokestatic  #59
646: aload         29
648: invokestatic  #60
651: ldc           #74
653: invokestatic  #59
656: aload         32
658: invokestatic  #56
661: aload         32
663: invokestatic  #61
666: ldc           #90
668: invokestatic  #59
671: aload         33
673: invokestatic  #56
676: aload         33
678: invokestatic  #61
681: ldc           #90
683: invokestatic  #59
686: aload         39
688: invokestatic  #56
691: aload         39
693: invokestatic  #57
696: ldc           #74
698: invokestatic  #59
701: aload         39
703: invokestatic  #60
706: ldc           #74
708: invokestatic  #59
711: aload         41
713: invokestatic  #56
716: aload         41
718: invokestatic  #57
721: ldc           #74
723: invokestatic  #59
726: aload         41
728: invokestatic  #60
731: ldc           #74
733: invokestatic  #59
736: aload         42
738: invokestatic  #56
741: aload         43
743: invokestatic  #56
746: aload         45
748: invokestatic  #56
751: aload         45
753: invokestatic  #61
756: ldc           #90
758: invokestatic  #59
761: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 5638
End line: 5663
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.rows = (byte) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: aload_1
133: bipush        100
135: putfield      #93
138: aload_1
139: invokevirtual #10
142: new           #64
145: dup
146: invokespecial #65
149: ldc           #66
151: invokevirtual #67
154: iload_2
155: invokevirtual #102
158: ldc           #69
160: invokevirtual #67
163: iconst_0
164: invokevirtual #102
167: ldc           #66
169: invokevirtual #67
172: invokevirtual #71
175: iload_2
176: ifne          183
179: iconst_1
180: goto          184
183: iconst_0
184: invokestatic  #73
187: new           #64
190: dup
191: invokespecial #65
194: ldc           #66
196: invokevirtual #67
199: iload_3
200: invokevirtual #102
203: ldc           #69
205: invokevirtual #67
208: iconst_0
209: invokevirtual #102
212: ldc           #66
214: invokevirtual #67
217: invokevirtual #71
220: iload_3
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #73
232: aload         4
234: invokestatic  #106
237: new           #64
240: dup
241: invokespecial #65
244: ldc           #66
246: invokevirtual #67
249: iload         6
251: invokevirtual #102
254: ldc           #69
256: invokevirtual #67
259: sipush        1000
262: invokevirtual #102
265: ldc           #66
267: invokevirtual #67
270: invokevirtual #71
273: iload         6
275: sipush        1000
278: if_icmpne     285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #73
289: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 5666
End line: 5701
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16);
        double[] doubleArray19 = functionEvaluationException18.getArgument();
        double[] doubleArray21 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray21);
        levenbergMarquardtOptimizer6.point = doubleArray21;
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray21;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray25 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: new           #8
52: dup
53: invokespecial #9
56: astore_3
57: new           #81
60: dup
61: iconst_m1
62: invokespecial #82
65: astore        4
67: aconst_null
68: astore        5
70: new           #27
73: dup
74: aload         5
76: invokespecial #39
79: astore        6
81: aconst_null
82: astore        7
84: iconst_2
85: anewarray     #5
88: dup
89: iconst_0
90: ldc           #28
92: aastore
93: dup
94: iconst_1
95: iconst_1
96: invokestatic  #17
99: aastore
100: astore        8
102: new           #27
105: dup
106: aload         5
108: aload         7
110: aload         8
112: invokespecial #47
115: astore        9
117: new           #23
120: dup
121: aload         4
123: dconst_0
124: ldc           #28
126: aload         8
128: invokespecial #83
131: astore        10
133: aload         10
135: invokevirtual #84
138: astore        11
140: iconst_1
141: newarray       double
143: dup
144: iconst_0
145: ldc2_w        #85
148: dastore
149: astore        12
151: new           #87
154: dup
155: aload         11
157: aload         12
159: invokespecial #88
162: astore        13
164: aload_3
165: aload         12
167: putfield      #52
170: aload_1
171: aload         12
173: putfield      #113
176: aload_1
177: invokevirtual #53
180: astore        14
182: ldc           #54
184: invokestatic  #13
187: goto          192
190: astore        14
192: aload_2
193: invokestatic  #106
196: aload         8
198: invokestatic  #56
201: aload         8
203: invokestatic  #57
206: ldc           #74
208: invokestatic  #59
211: aload         8
213: invokestatic  #60
216: ldc           #74
218: invokestatic  #59
221: aload         11
223: invokestatic  #56
226: aload         11
228: invokestatic  #61
231: ldc           #90
233: invokestatic  #59
236: aload         12
238: invokestatic  #56
241: aload         12
243: invokestatic  #61
246: ldc           #91
248: invokestatic  #59
251: return
Exception table:
from    to  target type
176   187   190   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 5704
End line: 5802
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray78 = null;
        levenbergMarquardtOptimizer0.objective = doubleArray78;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer80 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer80.incrementIterationsCounter();
        double[] doubleArray82 = levenbergMarquardtOptimizer80.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer83 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer83.rows = 0;
        levenbergMarquardtOptimizer83.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer83.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer83.cost = (short) 100;
        int int92 = levenbergMarquardtOptimizer83.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker93 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer83.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker93);
        levenbergMarquardtOptimizer80.checker = simpleVectorialValueChecker93;
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker93;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1000 + "'", int92 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: invokevirtual #133
534: istore        44
536: aconst_null
537: astore        45
539: aload_1
540: aload         45
542: putfield      #114
545: new           #8
548: dup
549: invokespecial #9
552: astore        46
554: aload         46
556: invokevirtual #10
559: aload         46
561: getfield      #122
564: astore        47
566: new           #8
569: dup
570: invokespecial #9
573: astore        48
575: aload         48
577: iconst_0
578: putfield      #93
581: aload         48
583: iconst_1
584: invokevirtual #76
587: aload         48
589: ldc2_w        #31
592: invokevirtual #94
595: aload         48
597: ldc2_w        #95
600: putfield      #97
603: aload         48
605: invokevirtual #98
608: istore        49
610: new           #99
613: dup
614: invokespecial #100
617: astore        50
619: aload         48
621: aload         50
623: invokevirtual #101
626: aload         46
628: aload         50
630: putfield      #140
633: aload_1
634: aload         50
636: putfield      #140
639: aload_3
640: invokestatic  #56
643: aload_3
644: invokestatic  #57
647: ldc           #58
649: invokestatic  #59
652: aload_3
653: invokestatic  #60
656: ldc           #58
658: invokestatic  #59
661: aload         7
663: invokestatic  #56
666: aload         7
668: invokestatic  #57
671: ldc           #58
673: invokestatic  #59
676: aload         7
678: invokestatic  #60
681: ldc           #58
683: invokestatic  #59
686: aload         10
688: invokestatic  #56
691: aload         10
693: invokestatic  #61
696: ldc           #62
698: invokestatic  #59
701: aload         12
703: invokestatic  #56
706: aload         12
708: invokestatic  #57
711: ldc           #63
713: invokestatic  #59
716: aload         12
718: invokestatic  #60
721: ldc           #63
723: invokestatic  #59
726: aload         13
728: invokestatic  #56
731: new           #64
734: dup
735: invokespecial #65
738: ldc           #66
740: invokevirtual #67
743: aload         17
745: invokevirtual #68
748: ldc           #69
750: invokevirtual #67
753: getstatic     #70
756: invokevirtual #68
759: ldc           #66
761: invokevirtual #67
764: invokevirtual #71
767: aload         17
769: getstatic     #70
772: invokevirtual #72
775: invokestatic  #73
778: aload         19
780: invokestatic  #56
783: aload         19
785: invokestatic  #57
788: ldc           #63
790: invokestatic  #59
793: aload         19
795: invokestatic  #60
798: ldc           #63
800: invokestatic  #59
803: aload         20
805: invokestatic  #56
808: new           #64
811: dup
812: invokespecial #65
815: ldc           #66
817: invokevirtual #67
820: aload         25
822: invokevirtual #68
825: ldc           #69
827: invokevirtual #67
830: getstatic     #70
833: invokevirtual #68
836: ldc           #66
838: invokevirtual #67
841: invokevirtual #71
844: aload         25
846: getstatic     #70
849: invokevirtual #72
852: invokestatic  #73
855: aload         27
857: invokestatic  #56
860: aload         27
862: invokestatic  #57
865: ldc           #63
867: invokestatic  #59
870: aload         27
872: invokestatic  #60
875: ldc           #63
877: invokestatic  #59
880: aload         28
882: invokestatic  #56
885: aload         30
887: invokestatic  #56
890: aload         31
892: invokestatic  #56
895: aload         33
897: invokestatic  #56
900: aload         37
902: invokestatic  #56
905: aload         37
907: invokestatic  #57
910: ldc           #74
912: invokestatic  #59
915: aload         37
917: invokestatic  #60
920: ldc           #74
922: invokestatic  #59
925: aload         39
927: invokestatic  #56
930: aload         39
932: invokestatic  #57
935: ldc           #74
937: invokestatic  #59
940: aload         39
942: invokestatic  #60
945: ldc           #74
947: invokestatic  #59
950: aload         40
952: invokestatic  #56
955: new           #64
958: dup
959: invokespecial #65
962: ldc           #66
964: invokevirtual #67
967: iload         44
969: invokevirtual #102
972: ldc           #69
974: invokevirtual #67
977: iconst_0
978: invokevirtual #102
981: ldc           #66
983: invokevirtual #67
986: invokevirtual #71
989: iload         44
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #73
1002: aload         47
1004: invokestatic  #106
1007: new           #64
1010: dup
1011: invokespecial #65
1014: ldc           #66
1016: invokevirtual #67
1019: iload         49
1021: invokevirtual #102
1024: ldc           #69
1026: invokevirtual #67
1029: sipush        1000
1032: invokevirtual #102
1035: ldc           #66
1037: invokevirtual #67
1040: invokevirtual #71
1043: iload         49
1045: sipush        1000
1048: if_icmpne     1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #73
1059: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 5805
End line: 5835
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #78
150: astore        12
152: ldc           #54
154: invokestatic  #13
157: goto          162
160: astore        12
162: aload         6
164: invokestatic  #56
167: aload         6
169: invokestatic  #57
172: ldc           #74
174: invokestatic  #59
177: aload         6
179: invokestatic  #60
182: ldc           #74
184: invokestatic  #59
187: aload         9
189: invokestatic  #56
192: aload         9
194: invokestatic  #61
197: ldc           #90
199: invokestatic  #59
202: aload         10
204: invokestatic  #56
207: aload         10
209: invokestatic  #61
212: ldc           #91
214: invokestatic  #59
217: return
Exception table:
from    to  target type
146   157   160   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 5838
End line: 5851
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        int int11 = levenbergMarquardtOptimizer0.cols;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: bipush        100
51: putfield      #105
54: aload_1
55: ldc2_w        #31
58: invokevirtual #94
61: aload_1
62: invokevirtual #10
65: aload_1
66: getfield      #105
69: istore_3
70: aload_2
71: invokestatic  #106
74: new           #64
77: dup
78: invokespecial #65
81: ldc           #66
83: invokevirtual #67
86: iload_3
87: invokevirtual #102
90: ldc           #69
92: invokevirtual #67
95: bipush        100
97: invokevirtual #102
100: ldc           #66
102: invokevirtual #67
105: invokevirtual #71
108: iload_3
109: bipush        100
111: if_icmpne     118
114: iconst_1
115: goto          119
118: iconst_0
119: invokestatic  #73
122: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 5854
End line: 5878
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 1);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: aload_1
148: dconst_1
149: invokevirtual #127
152: aload         6
154: invokestatic  #56
157: aload         6
159: invokestatic  #57
162: ldc           #74
164: invokestatic  #59
167: aload         6
169: invokestatic  #60
172: ldc           #74
174: invokestatic  #59
177: aload         9
179: invokestatic  #56
182: aload         9
184: invokestatic  #61
187: ldc           #90
189: invokestatic  #59
192: aload         10
194: invokestatic  #56
197: aload         10
199: invokestatic  #61
202: ldc           #91
204: invokestatic  #59
207: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 5881
End line: 5984
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8);
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern();
        java.lang.String str36 = localizable35.getSourceString();
        java.lang.Throwable throwable37 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58);
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray68 = new double[] { (-1), 1.0f };
        double[][] doubleArray69 = new double[][] { doubleArray68 };
        levenbergMarquardtOptimizer63.jacobian = doubleArray69;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69);
        java.lang.Throwable throwable75 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable75);
        org.apache.commons.math.exception.util.Localizable localizable77 = null;
        java.lang.Object[] objArray80 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException81 = new org.apache.commons.math.MathRuntimeException(throwable75, localizable77, objArray80);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        org.apache.commons.math.exception.util.Localizable localizable85 = null;
        java.lang.Object[] objArray91 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable85, objArray91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException81, (double) (byte) 1, localizable83, objArray91);
        java.lang.IllegalArgumentException illegalArgumentException94 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException81);
        java.lang.Object[] objArray95 = mathRuntimeException81.getArguments();
        java.lang.NullPointerException nullPointerException96 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray95);
        java.lang.NullPointerException nullPointerException97 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable35, objArray95);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(localizable35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(noSuchElementException46);
        org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException59);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(illegalArgumentException94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[hi!, 1]");
        org.junit.Assert.assertNotNull(nullPointerException96);
        org.junit.Assert.assertNotNull(nullPointerException97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #296
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_5
28: anewarray     #5
31: dup
32: iconst_0
33: iconst_0
34: invokestatic  #16
37: aastore
38: dup
39: iconst_1
40: iconst_0
41: invokestatic  #17
44: aastore
45: dup
46: iconst_2
47: bipush        52
49: invokestatic  #18
52: aastore
53: dup
54: iconst_3
55: ldc2_w        #19
58: invokestatic  #21
61: aastore
62: dup
63: iconst_4
64: dconst_1
65: invokestatic  #22
68: aastore
69: astore_2
70: new           #23
73: dup
74: ldc2_w        #24
77: aload_1
78: aload_2
79: invokespecial #26
82: astore_3
83: new           #27
86: dup
87: ldc           #28
89: aload_2
90: invokespecial #29
93: astore        4
95: aconst_null
96: astore        5
98: iconst_5
99: anewarray     #5
102: dup
103: iconst_0
104: iconst_0
105: invokestatic  #16
108: aastore
109: dup
110: iconst_1
111: iconst_0
112: invokestatic  #17
115: aastore
116: dup
117: iconst_2
118: bipush        52
120: invokestatic  #18
123: aastore
124: dup
125: iconst_3
126: ldc2_w        #19
129: invokestatic  #21
132: aastore
133: dup
134: iconst_4
135: dconst_1
136: invokestatic  #22
139: aastore
140: astore        6
142: new           #23
145: dup
146: ldc2_w        #24
149: aload         5
151: aload         6
153: invokespecial #26
156: astore        7
158: new           #27
161: dup
162: aload         4
164: ldc           #28
166: aload         6
168: invokespecial #30
171: astore        8
173: aconst_null
174: astore        9
176: new           #27
179: dup
180: aload         9
182: invokespecial #39
185: astore        10
187: aload         10
189: invokevirtual #40
192: astore        11
194: aconst_null
195: astore        12
197: iconst_1
198: anewarray     #5
201: dup
202: iconst_0
203: iconst_1
204: invokestatic  #35
207: aastore
208: astore        13
210: ldc           #28
212: aload         13
214: invokestatic  #36
217: astore        14
219: new           #37
222: dup
223: bipush        100
225: aload         12
227: aload         13
229: invokespecial #38
232: astore        15
234: aload         11
236: aload         13
238: invokestatic  #41
241: astore        16
243: new           #27
246: dup
247: aload         8
249: ldc           #191
251: aload         13
253: invokespecial #30
256: astore        17
258: aload         8
260: invokevirtual #40
263: astore        18
265: aload         18
267: invokeinterface #237,  1
272: astore        19
274: aconst_null
275: astore        20
277: iconst_1
278: anewarray     #5
281: dup
282: iconst_0
283: iconst_1
284: invokestatic  #35
287: aastore
288: astore        21
290: ldc           #28
292: aload         21
294: invokestatic  #36
297: astore        22
299: new           #44
302: dup
303: ldc           #142
305: aload         21
307: invokespecial #238
310: astore        23
312: ldc           #42
314: aload         21
316: invokestatic  #239
319: astore        24
321: new           #240
324: dup
325: invokespecial #241
328: astore        25
330: aconst_null
331: astore        26
333: new           #27
336: dup
337: aload         26
339: invokespecial #39
342: astore        27
344: aload         27
346: invokevirtual #40
349: astore        28
351: aconst_null
352: astore        29
354: new           #27
357: dup
358: aload         29
360: invokespecial #39
363: astore        30
365: aload         30
367: invokevirtual #40
370: astore        31
372: aconst_null
373: astore        32
375: iconst_1
376: anewarray     #5
379: dup
380: iconst_0
381: iconst_1
382: invokestatic  #35
385: aastore
386: astore        33
388: ldc           #28
390: aload         33
392: invokestatic  #36
395: astore        34
397: new           #37
400: dup
401: bipush        100
403: aload         32
405: aload         33
407: invokespecial #38
410: astore        35
412: aload         31
414: aload         33
416: invokestatic  #41
419: astore        36
421: new           #27
424: dup
425: aload         25
427: aload         28
429: aload         33
431: invokespecial #47
434: astore        37
436: new           #8
439: dup
440: invokespecial #9
443: astore        38
445: aload         38
447: dconst_0
448: invokevirtual #129
451: iconst_2
452: newarray       double
454: dup
455: iconst_0
456: ldc2_w        #31
459: dastore
460: dup
461: iconst_1
462: dconst_1
463: dastore
464: astore        39
466: iconst_1
467: anewarray     #130
470: dup
471: iconst_0
472: aload         39
474: aastore
475: astore        40
477: aload         38
479: aload         40
481: putfield      #131
484: new           #44
487: dup
488: aload         24
490: aload         28
492: aload         40
494: checkcast     #143
497: invokespecial #45
500: astore        41
502: new           #240
505: dup
506: aload         20
508: ldc           #242
510: aload         40
512: checkcast     #143
515: invokespecial #243
518: astore        42
520: new           #240
523: dup
524: aload         18
526: aload         40
528: checkcast     #143
531: invokespecial #244
534: astore        43
536: aconst_null
537: astore        44
539: new           #27
542: dup
543: aload         44
545: invokespecial #39
548: astore        45
550: aconst_null
551: astore        46
553: iconst_2
554: anewarray     #5
557: dup
558: iconst_0
559: ldc           #28
561: aastore
562: dup
563: iconst_1
564: iconst_1
565: invokestatic  #17
568: aastore
569: astore        47
571: new           #27
574: dup
575: aload         44
577: aload         46
579: aload         47
581: invokespecial #47
584: astore        48
586: aconst_null
587: astore        49
589: aconst_null
590: astore        50
592: iconst_5
593: anewarray     #5
596: dup
597: iconst_0
598: iconst_0
599: invokestatic  #16
602: aastore
603: dup
604: iconst_1
605: iconst_0
606: invokestatic  #17
609: aastore
610: dup
611: iconst_2
612: bipush        52
614: invokestatic  #18
617: aastore
618: dup
619: iconst_3
620: ldc2_w        #19
623: invokestatic  #21
626: aastore
627: dup
628: iconst_4
629: dconst_1
630: invokestatic  #22
633: aastore
634: astore        51
636: new           #23
639: dup
640: ldc2_w        #24
643: aload         50
645: aload         51
647: invokespecial #26
650: astore        52
652: new           #23
655: dup
656: aload         48
658: dconst_1
659: aload         49
661: aload         51
663: invokespecial #50
666: astore        53
668: aload         48
670: invokestatic  #297
673: astore        54
675: aload         48
677: invokevirtual #48
680: astore        55
682: ldc           #191
684: aload         55
686: invokestatic  #43
689: astore        56
691: aload         18
693: aload         55
695: invokestatic  #46
698: astore        57
700: aload_2
701: invokestatic  #56
704: aload_2
705: invokestatic  #57
708: ldc           #58
710: invokestatic  #59
713: aload_2
714: invokestatic  #60
717: ldc           #58
719: invokestatic  #59
722: aload         6
724: invokestatic  #56
727: aload         6
729: invokestatic  #57
732: ldc           #58
734: invokestatic  #59
737: aload         6
739: invokestatic  #60
742: ldc           #58
744: invokestatic  #59
747: new           #64
750: dup
751: invokespecial #65
754: ldc           #66
756: invokevirtual #67
759: aload         11
761: invokevirtual #68
764: ldc           #69
766: invokevirtual #67
769: getstatic     #70
772: invokevirtual #68
775: ldc           #66
777: invokevirtual #67
780: invokevirtual #71
783: aload         11
785: getstatic     #70
788: invokevirtual #72
791: invokestatic  #73
794: aload         13
796: invokestatic  #56
799: aload         13
801: invokestatic  #57
804: ldc           #63
806: invokestatic  #59
809: aload         13
811: invokestatic  #60
814: ldc           #63
816: invokestatic  #59
819: aload         14
821: invokestatic  #56
824: aload         16
826: invokestatic  #56
829: aload         18
831: invokestatic  #56
834: new           #64
837: dup
838: invokespecial #65
841: ldc           #66
843: invokevirtual #67
846: aload         19
848: invokevirtual #67
851: ldc           #246
853: invokevirtual #67
856: invokevirtual #71
859: aload         19
861: ldc           #28
863: invokestatic  #247
866: aload         21
868: invokestatic  #56
871: aload         21
873: invokestatic  #57
876: ldc           #63
878: invokestatic  #59
881: aload         21
883: invokestatic  #60
886: ldc           #63
888: invokestatic  #59
891: aload         22
893: invokestatic  #56
896: aload         24
898: invokestatic  #56
901: new           #64
904: dup
905: invokespecial #65
908: ldc           #66
910: invokevirtual #67
913: aload         28
915: invokevirtual #68
918: ldc           #69
920: invokevirtual #67
923: getstatic     #70
926: invokevirtual #68
929: ldc           #66
931: invokevirtual #67
934: invokevirtual #71
937: aload         28
939: getstatic     #70
942: invokevirtual #72
945: invokestatic  #73
948: new           #64
951: dup
952: invokespecial #65
955: ldc           #66
957: invokevirtual #67
960: aload         31
962: invokevirtual #68
965: ldc           #69
967: invokevirtual #67
970: getstatic     #70
973: invokevirtual #68
976: ldc           #66
978: invokevirtual #67
981: invokevirtual #71
984: aload         31
986: getstatic     #70
989: invokevirtual #72
992: invokestatic  #73
995: aload         33
997: invokestatic  #56
1000: aload         33
1002: invokestatic  #57
1005: ldc           #63
1007: invokestatic  #59
1010: aload         33
1012: invokestatic  #60
1015: ldc           #63
1017: invokestatic  #59
1020: aload         34
1022: invokestatic  #56
1025: aload         36
1027: invokestatic  #56
1030: aload         39
1032: invokestatic  #56
1035: aload         39
1037: invokestatic  #61
1040: ldc           #134
1042: invokestatic  #59
1045: aload         40
1047: invokestatic  #56
1050: aload         47
1052: invokestatic  #56
1055: aload         47
1057: invokestatic  #57
1060: ldc           #74
1062: invokestatic  #59
1065: aload         47
1067: invokestatic  #60
1070: ldc           #74
1072: invokestatic  #59
1075: aload         51
1077: invokestatic  #56
1080: aload         51
1082: invokestatic  #57
1085: ldc           #58
1087: invokestatic  #59
1090: aload         51
1092: invokestatic  #60
1095: ldc           #58
1097: invokestatic  #59
1100: aload         54
1102: invokestatic  #56
1105: aload         55
1107: invokestatic  #56
1110: aload         55
1112: invokestatic  #57
1115: ldc           #74
1117: invokestatic  #59
1120: aload         55
1122: invokestatic  #60
1125: ldc           #74
1127: invokestatic  #59
1130: aload         56
1132: invokestatic  #56
1135: aload         57
1137: invokestatic  #56
1140: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 5987
End line: 6072
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(10000.0d);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(doubleArray80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #298
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: getfield      #122
545: astore        46
547: aload_1
548: ldc2_w        #299
551: invokevirtual #94
554: aload_3
555: invokestatic  #56
558: aload_3
559: invokestatic  #57
562: ldc           #58
564: invokestatic  #59
567: aload_3
568: invokestatic  #60
571: ldc           #58
573: invokestatic  #59
576: aload         7
578: invokestatic  #56
581: aload         7
583: invokestatic  #57
586: ldc           #58
588: invokestatic  #59
591: aload         7
593: invokestatic  #60
596: ldc           #58
598: invokestatic  #59
601: aload         10
603: invokestatic  #56
606: aload         10
608: invokestatic  #61
611: ldc           #62
613: invokestatic  #59
616: aload         12
618: invokestatic  #56
621: aload         12
623: invokestatic  #57
626: ldc           #63
628: invokestatic  #59
631: aload         12
633: invokestatic  #60
636: ldc           #63
638: invokestatic  #59
641: aload         13
643: invokestatic  #56
646: new           #64
649: dup
650: invokespecial #65
653: ldc           #66
655: invokevirtual #67
658: aload         17
660: invokevirtual #68
663: ldc           #69
665: invokevirtual #67
668: getstatic     #70
671: invokevirtual #68
674: ldc           #66
676: invokevirtual #67
679: invokevirtual #71
682: aload         17
684: getstatic     #70
687: invokevirtual #72
690: invokestatic  #73
693: aload         19
695: invokestatic  #56
698: aload         19
700: invokestatic  #57
703: ldc           #63
705: invokestatic  #59
708: aload         19
710: invokestatic  #60
713: ldc           #63
715: invokestatic  #59
718: aload         20
720: invokestatic  #56
723: new           #64
726: dup
727: invokespecial #65
730: ldc           #66
732: invokevirtual #67
735: aload         25
737: invokevirtual #68
740: ldc           #69
742: invokevirtual #67
745: getstatic     #70
748: invokevirtual #68
751: ldc           #66
753: invokevirtual #67
756: invokevirtual #71
759: aload         25
761: getstatic     #70
764: invokevirtual #72
767: invokestatic  #73
770: aload         27
772: invokestatic  #56
775: aload         27
777: invokestatic  #57
780: ldc           #63
782: invokestatic  #59
785: aload         27
787: invokestatic  #60
790: ldc           #63
792: invokestatic  #59
795: aload         28
797: invokestatic  #56
800: aload         30
802: invokestatic  #56
805: aload         31
807: invokestatic  #56
810: aload         33
812: invokestatic  #56
815: aload         37
817: invokestatic  #56
820: aload         37
822: invokestatic  #57
825: ldc           #74
827: invokestatic  #59
830: aload         37
832: invokestatic  #60
835: ldc           #74
837: invokestatic  #59
840: aload         39
842: invokestatic  #56
845: aload         39
847: invokestatic  #57
850: ldc           #74
852: invokestatic  #59
855: aload         39
857: invokestatic  #60
860: ldc           #74
862: invokestatic  #59
865: aload         40
867: invokestatic  #56
870: new           #64
873: dup
874: invokespecial #65
877: ldc           #66
879: invokevirtual #67
882: dload         44
884: invokevirtual #79
887: ldc           #69
889: invokevirtual #67
892: dconst_0
893: invokevirtual #79
896: ldc           #66
898: invokevirtual #67
901: invokevirtual #71
904: dload         44
906: dconst_0
907: dcmpl
908: ifne          915
911: iconst_1
912: goto          916
915: iconst_0
916: invokestatic  #73
919: aload         46
921: invokestatic  #106
924: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 6075
End line: 6104
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int21 = levenbergMarquardtOptimizer0.getIterations();
        int int22 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #301
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #126
156: istore        13
158: aload_1
159: invokevirtual #98
162: istore        14
164: aload         6
166: invokestatic  #56
169: aload         6
171: invokestatic  #57
174: ldc           #74
176: invokestatic  #59
179: aload         6
181: invokestatic  #60
184: ldc           #74
186: invokestatic  #59
189: aload         9
191: invokestatic  #56
194: aload         9
196: invokestatic  #61
199: ldc           #90
201: invokestatic  #59
204: aload         10
206: invokestatic  #56
209: aload         10
211: invokestatic  #61
214: ldc           #91
216: invokestatic  #59
219: new           #64
222: dup
223: invokespecial #65
226: ldc           #66
228: invokevirtual #67
231: iload         12
233: invokevirtual #102
236: ldc           #69
238: invokevirtual #67
241: sipush        1000
244: invokevirtual #102
247: ldc           #66
249: invokevirtual #67
252: invokevirtual #71
255: iload         12
257: sipush        1000
260: if_icmpne     267
263: iconst_1
264: goto          268
267: iconst_0
268: invokestatic  #73
271: new           #64
274: dup
275: invokespecial #65
278: ldc           #66
280: invokevirtual #67
283: iload         13
285: invokevirtual #102
288: ldc           #69
290: invokevirtual #67
293: iconst_0
294: invokevirtual #102
297: ldc           #66
299: invokevirtual #67
302: invokevirtual #71
305: iload         13
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #73
318: new           #64
321: dup
322: invokespecial #65
325: ldc           #66
327: invokevirtual #67
330: iload         14
332: invokevirtual #102
335: ldc           #69
337: invokevirtual #67
340: sipush        1000
343: invokevirtual #102
346: ldc           #66
348: invokevirtual #67
351: invokevirtual #71
354: iload         14
356: sipush        1000
359: if_icmpne     366
362: iconst_1
363: goto          367
366: iconst_0
367: invokestatic  #73
370: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 6107
End line: 6193
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.cols = '#';
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #302
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: iconst_1
549: invokevirtual #76
552: aload_1
553: bipush        35
555: putfield      #105
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: dload         44
888: invokevirtual #79
891: ldc           #69
893: invokevirtual #67
896: dconst_0
897: invokevirtual #79
900: ldc           #66
902: invokevirtual #67
905: invokevirtual #71
908: dload         44
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #73
923: aload         46
925: invokestatic  #106
928: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 6196
End line: 6231
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        double[] doubleArray23 = null;
        levenbergMarquardtOptimizer0.point = doubleArray23;
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateJacobian();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #303
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aconst_null
150: astore        12
152: aload_1
153: aload         12
155: putfield      #52
158: aload_1
159: invokevirtual #165
162: ldc           #54
164: invokestatic  #13
167: goto          172
170: astore        13
172: aload_2
173: invokestatic  #106
176: aload         7
178: invokestatic  #56
181: aload         7
183: invokestatic  #57
186: ldc           #74
188: invokestatic  #59
191: aload         7
193: invokestatic  #60
196: ldc           #74
198: invokestatic  #59
201: aload         10
203: invokestatic  #56
206: aload         10
208: invokestatic  #61
211: ldc           #90
213: invokestatic  #59
216: aload         11
218: invokestatic  #56
221: aload         11
223: invokestatic  #61
226: ldc           #90
228: invokestatic  #59
231: return
Exception table:
from    to  target type
158   167   170   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 6234
End line: 6246
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #98
47: istore_2
48: aload_1
49: invokevirtual #167
52: istore_3
53: aload_1
54: getfield      #152
57: astore        4
59: new           #64
62: dup
63: invokespecial #65
66: ldc           #66
68: invokevirtual #67
71: iload_2
72: invokevirtual #102
75: ldc           #69
77: invokevirtual #67
80: sipush        1000
83: invokevirtual #102
86: ldc           #66
88: invokevirtual #67
91: invokevirtual #71
94: iload_2
95: sipush        1000
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #73
109: new           #64
112: dup
113: invokespecial #65
116: ldc           #66
118: invokevirtual #67
121: iload_3
122: invokevirtual #102
125: ldc           #69
127: invokevirtual #67
130: iconst_0
131: invokevirtual #102
134: ldc           #66
136: invokevirtual #67
139: invokevirtual #71
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #73
154: aload         4
156: invokestatic  #106
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 6249
End line: 6257
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        java.lang.Class<?> wildcardClass5 = levenbergMarquardtOptimizer0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #305
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: invokevirtual #306
47: astore_2
48: aload_2
49: invokestatic  #56
52: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 6260
End line: 6285
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        int int20 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #307
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: aload_1
148: invokevirtual #167
151: istore        12
153: aload         6
155: invokestatic  #56
158: aload         6
160: invokestatic  #57
163: ldc           #74
165: invokestatic  #59
168: aload         6
170: invokestatic  #60
173: ldc           #74
175: invokestatic  #59
178: aload         9
180: invokestatic  #56
183: aload         9
185: invokestatic  #61
188: ldc           #90
190: invokestatic  #59
193: aload         10
195: invokestatic  #56
198: aload         10
200: invokestatic  #61
203: ldc           #91
205: invokestatic  #59
208: new           #64
211: dup
212: invokespecial #65
215: ldc           #66
217: invokevirtual #67
220: iload         12
222: invokevirtual #102
225: ldc           #69
227: invokevirtual #67
230: iconst_0
231: invokevirtual #102
234: ldc           #66
236: invokevirtual #67
239: invokevirtual #71
242: iload         12
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #73
255: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 6288
End line: 6370
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        int int79 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #308
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #133
539: istore        44
541: aload_3
542: invokestatic  #56
545: aload_3
546: invokestatic  #57
549: ldc           #58
551: invokestatic  #59
554: aload_3
555: invokestatic  #60
558: ldc           #58
560: invokestatic  #59
563: aload         7
565: invokestatic  #56
568: aload         7
570: invokestatic  #57
573: ldc           #58
575: invokestatic  #59
578: aload         7
580: invokestatic  #60
583: ldc           #58
585: invokestatic  #59
588: aload         10
590: invokestatic  #56
593: aload         10
595: invokestatic  #61
598: ldc           #62
600: invokestatic  #59
603: aload         12
605: invokestatic  #56
608: aload         12
610: invokestatic  #57
613: ldc           #63
615: invokestatic  #59
618: aload         12
620: invokestatic  #60
623: ldc           #63
625: invokestatic  #59
628: aload         13
630: invokestatic  #56
633: new           #64
636: dup
637: invokespecial #65
640: ldc           #66
642: invokevirtual #67
645: aload         17
647: invokevirtual #68
650: ldc           #69
652: invokevirtual #67
655: getstatic     #70
658: invokevirtual #68
661: ldc           #66
663: invokevirtual #67
666: invokevirtual #71
669: aload         17
671: getstatic     #70
674: invokevirtual #72
677: invokestatic  #73
680: aload         19
682: invokestatic  #56
685: aload         19
687: invokestatic  #57
690: ldc           #63
692: invokestatic  #59
695: aload         19
697: invokestatic  #60
700: ldc           #63
702: invokestatic  #59
705: aload         20
707: invokestatic  #56
710: new           #64
713: dup
714: invokespecial #65
717: ldc           #66
719: invokevirtual #67
722: aload         25
724: invokevirtual #68
727: ldc           #69
729: invokevirtual #67
732: getstatic     #70
735: invokevirtual #68
738: ldc           #66
740: invokevirtual #67
743: invokevirtual #71
746: aload         25
748: getstatic     #70
751: invokevirtual #72
754: invokestatic  #73
757: aload         27
759: invokestatic  #56
762: aload         27
764: invokestatic  #57
767: ldc           #63
769: invokestatic  #59
772: aload         27
774: invokestatic  #60
777: ldc           #63
779: invokestatic  #59
782: aload         28
784: invokestatic  #56
787: aload         30
789: invokestatic  #56
792: aload         31
794: invokestatic  #56
797: aload         33
799: invokestatic  #56
802: aload         37
804: invokestatic  #56
807: aload         37
809: invokestatic  #57
812: ldc           #74
814: invokestatic  #59
817: aload         37
819: invokestatic  #60
822: ldc           #74
824: invokestatic  #59
827: aload         39
829: invokestatic  #56
832: aload         39
834: invokestatic  #57
837: ldc           #74
839: invokestatic  #59
842: aload         39
844: invokestatic  #60
847: ldc           #74
849: invokestatic  #59
852: aload         40
854: invokestatic  #56
857: new           #64
860: dup
861: invokespecial #65
864: ldc           #66
866: invokevirtual #67
869: iload         44
871: invokevirtual #102
874: ldc           #69
876: invokevirtual #67
879: iconst_0
880: invokevirtual #102
883: ldc           #66
885: invokevirtual #67
888: invokevirtual #71
891: iload         44
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #73
904: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 6373
End line: 6383
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '4');
        org.junit.Assert.assertNull(doubleArray5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: dconst_0
50: invokevirtual #129
53: aload_1
54: bipush        52
56: invokevirtual #76
59: aload_2
60: invokestatic  #106
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 6386
End line: 6395
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        int int7 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aload_1
50: invokevirtual #110
53: istore_2
54: new           #64
57: dup
58: invokespecial #65
61: ldc           #66
63: invokevirtual #67
66: iload_2
67: invokevirtual #102
70: ldc           #69
72: invokevirtual #67
75: bipush        97
77: invokevirtual #102
80: ldc           #66
82: invokevirtual #67
85: invokevirtual #71
88: iload_2
89: bipush        97
91: if_icmpne     98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #73
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 6398
End line: 6408
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray6 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #311
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #126
47: istore_2
48: aload_1
49: getfield      #52
52: astore_3
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: iconst_0
75: invokevirtual #102
78: ldc           #66
80: invokevirtual #67
83: invokevirtual #71
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #73
98: aload_3
99: invokestatic  #106
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 6411
End line: 6463
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        double[] doubleArray25 = functionEvaluationException23.getArgument();
        levenbergMarquardtOptimizer6.objective = doubleArray25;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray41 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false);
        double[] doubleArray45 = vectorialPointValuePair44.getPointRef();
        levenbergMarquardtOptimizer0.objective = doubleArray45;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #8
51: dup
52: invokespecial #9
55: astore_3
56: aload_3
57: iconst_0
58: putfield      #93
61: aload_3
62: iconst_1
63: invokevirtual #76
66: aload_3
67: getfield      #113
70: astore        4
72: new           #81
75: dup
76: iconst_m1
77: invokespecial #82
80: astore        5
82: aconst_null
83: astore        6
85: new           #27
88: dup
89: aload         6
91: invokespecial #39
94: astore        7
96: aconst_null
97: astore        8
99: iconst_2
100: anewarray     #5
103: dup
104: iconst_0
105: ldc           #28
107: aastore
108: dup
109: iconst_1
110: iconst_1
111: invokestatic  #17
114: aastore
115: astore        9
117: new           #27
120: dup
121: aload         6
123: aload         8
125: aload         9
127: invokespecial #47
130: astore        10
132: new           #23
135: dup
136: aload         5
138: dconst_0
139: ldc           #28
141: aload         9
143: invokespecial #83
146: astore        11
148: aload         11
150: invokevirtual #84
153: astore        12
155: aload         11
157: invokevirtual #84
160: astore        13
162: aload_3
163: aload         13
165: putfield      #114
168: new           #81
171: dup
172: iconst_m1
173: invokespecial #82
176: astore        14
178: aconst_null
179: astore        15
181: new           #27
184: dup
185: aload         15
187: invokespecial #39
190: astore        16
192: aconst_null
193: astore        17
195: iconst_2
196: anewarray     #5
199: dup
200: iconst_0
201: ldc           #28
203: aastore
204: dup
205: iconst_1
206: iconst_1
207: invokestatic  #17
210: aastore
211: astore        18
213: new           #27
216: dup
217: aload         15
219: aload         17
221: aload         18
223: invokespecial #47
226: astore        19
228: new           #23
231: dup
232: aload         14
234: dconst_0
235: ldc           #28
237: aload         18
239: invokespecial #83
242: astore        20
244: aload         20
246: invokevirtual #84
249: astore        21
251: iconst_1
252: newarray       double
254: dup
255: iconst_0
256: ldc2_w        #85
259: dastore
260: astore        22
262: new           #87
265: dup
266: aload         21
268: aload         22
270: invokespecial #88
273: astore        23
275: new           #87
278: dup
279: aload         13
281: aload         21
283: iconst_0
284: invokespecial #117
287: astore        24
289: aload         24
291: invokevirtual #159
294: astore        25
296: aload_1
297: aload         25
299: putfield      #114
302: aload_2
303: invokestatic  #106
306: aload         4
308: invokestatic  #106
311: aload         9
313: invokestatic  #56
316: aload         9
318: invokestatic  #57
321: ldc           #74
323: invokestatic  #59
326: aload         9
328: invokestatic  #60
331: ldc           #74
333: invokestatic  #59
336: aload         12
338: invokestatic  #56
341: aload         12
343: invokestatic  #61
346: ldc           #90
348: invokestatic  #59
351: aload         13
353: invokestatic  #56
356: aload         13
358: invokestatic  #61
361: ldc           #90
363: invokestatic  #59
366: aload         18
368: invokestatic  #56
371: aload         18
373: invokestatic  #57
376: ldc           #74
378: invokestatic  #59
381: aload         18
383: invokestatic  #60
386: ldc           #74
388: invokestatic  #59
391: aload         21
393: invokestatic  #56
396: aload         21
398: invokestatic  #61
401: ldc           #90
403: invokestatic  #59
406: aload         22
408: invokestatic  #56
411: aload         22
413: invokestatic  #61
416: ldc           #91
418: invokestatic  #59
421: aload         25
423: invokestatic  #56
426: aload         25
428: invokestatic  #61
431: ldc           #90
433: invokestatic  #59
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 6466
End line: 6567
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        int int9 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 0);
        int int13 = levenbergMarquardtOptimizer10.getMaxIterations();
        int int14 = levenbergMarquardtOptimizer10.getIterations();
        int int15 = levenbergMarquardtOptimizer10.getIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1);
        levenbergMarquardtOptimizer10.checker = simpleVectorialValueChecker18;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer21.rows = 0;
        levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray40 = functionEvaluationException38.getArgument();
        levenbergMarquardtOptimizer21.objective = doubleArray40;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        double[] doubleArray56 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException61 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException61, 0.0d, "hi!", objArray69);
        double[] doubleArray72 = functionEvaluationException71.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(doubleArray72);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray74, true);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException78 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException78, 0.0d, "hi!", objArray86);
        double[] doubleArray89 = functionEvaluationException88.getArgument();
        double[] doubleArray91 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray91);
        double[] doubleArray93 = vectorialPointValuePair92.getPointRef();
        boolean boolean94 = simpleVectorialValueChecker18.converged(0, vectorialPointValuePair76, vectorialPointValuePair92);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker18;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1000 + "'", int13 == 1000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #313
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: dconst_0
52: invokevirtual #94
55: aload_1
56: invokevirtual #126
59: istore_2
60: new           #8
63: dup
64: invokespecial #9
67: astore_3
68: aload_3
69: iconst_0
70: invokevirtual #76
73: aload_3
74: invokevirtual #98
77: istore        4
79: aload_3
80: invokevirtual #126
83: istore        5
85: aload_3
86: invokevirtual #126
89: istore        6
91: new           #99
94: dup
95: dconst_0
96: dconst_1
97: invokespecial #116
100: astore        7
102: aload_3
103: aload         7
105: putfield      #140
108: new           #8
111: dup
112: invokespecial #9
115: astore        8
117: aload         8
119: iconst_0
120: putfield      #93
123: aload         8
125: iconst_1
126: invokevirtual #76
129: aload         8
131: getfield      #113
134: astore        9
136: new           #81
139: dup
140: iconst_m1
141: invokespecial #82
144: astore        10
146: aconst_null
147: astore        11
149: new           #27
152: dup
153: aload         11
155: invokespecial #39
158: astore        12
160: aconst_null
161: astore        13
163: iconst_2
164: anewarray     #5
167: dup
168: iconst_0
169: ldc           #28
171: aastore
172: dup
173: iconst_1
174: iconst_1
175: invokestatic  #17
178: aastore
179: astore        14
181: new           #27
184: dup
185: aload         11
187: aload         13
189: aload         14
191: invokespecial #47
194: astore        15
196: new           #23
199: dup
200: aload         10
202: dconst_0
203: ldc           #28
205: aload         14
207: invokespecial #83
210: astore        16
212: aload         16
214: invokevirtual #84
217: astore        17
219: aload         16
221: invokevirtual #84
224: astore        18
226: aload         8
228: aload         18
230: putfield      #114
233: new           #81
236: dup
237: iconst_m1
238: invokespecial #82
241: astore        19
243: aconst_null
244: astore        20
246: new           #27
249: dup
250: aload         20
252: invokespecial #39
255: astore        21
257: aconst_null
258: astore        22
260: iconst_2
261: anewarray     #5
264: dup
265: iconst_0
266: ldc           #28
268: aastore
269: dup
270: iconst_1
271: iconst_1
272: invokestatic  #17
275: aastore
276: astore        23
278: new           #27
281: dup
282: aload         20
284: aload         22
286: aload         23
288: invokespecial #47
291: astore        24
293: new           #23
296: dup
297: aload         19
299: dconst_0
300: ldc           #28
302: aload         23
304: invokespecial #83
307: astore        25
309: aload         25
311: invokevirtual #84
314: astore        26
316: iconst_1
317: newarray       double
319: dup
320: iconst_0
321: ldc2_w        #85
324: dastore
325: astore        27
327: new           #87
330: dup
331: aload         26
333: aload         27
335: invokespecial #88
338: astore        28
340: new           #87
343: dup
344: aload         18
346: aload         26
348: iconst_0
349: invokespecial #117
352: astore        29
354: new           #81
357: dup
358: iconst_m1
359: invokespecial #82
362: astore        30
364: aconst_null
365: astore        31
367: new           #27
370: dup
371: aload         31
373: invokespecial #39
376: astore        32
378: aconst_null
379: astore        33
381: iconst_2
382: anewarray     #5
385: dup
386: iconst_0
387: ldc           #28
389: aastore
390: dup
391: iconst_1
392: iconst_1
393: invokestatic  #17
396: aastore
397: astore        34
399: new           #27
402: dup
403: aload         31
405: aload         33
407: aload         34
409: invokespecial #47
412: astore        35
414: new           #23
417: dup
418: aload         30
420: dconst_0
421: ldc           #28
423: aload         34
425: invokespecial #83
428: astore        36
430: aload         36
432: invokevirtual #84
435: astore        37
437: new           #23
440: dup
441: aload         37
443: invokespecial #89
446: astore        38
448: aload         38
450: invokevirtual #84
453: astore        39
455: new           #87
458: dup
459: aload         26
461: aload         39
463: iconst_1
464: invokespecial #117
467: astore        40
469: new           #81
472: dup
473: iconst_m1
474: invokespecial #82
477: astore        41
479: aconst_null
480: astore        42
482: new           #27
485: dup
486: aload         42
488: invokespecial #39
491: astore        43
493: aconst_null
494: astore        44
496: iconst_2
497: anewarray     #5
500: dup
501: iconst_0
502: ldc           #28
504: aastore
505: dup
506: iconst_1
507: iconst_1
508: invokestatic  #17
511: aastore
512: astore        45
514: new           #27
517: dup
518: aload         42
520: aload         44
522: aload         45
524: invokespecial #47
527: astore        46
529: new           #23
532: dup
533: aload         41
535: dconst_0
536: ldc           #28
538: aload         45
540: invokespecial #83
543: astore        47
545: aload         47
547: invokevirtual #84
550: astore        48
552: iconst_1
553: newarray       double
555: dup
556: iconst_0
557: ldc2_w        #85
560: dastore
561: astore        49
563: new           #87
566: dup
567: aload         48
569: aload         49
571: invokespecial #88
574: astore        50
576: aload         50
578: invokevirtual #159
581: astore        51
583: aload         7
585: iconst_0
586: aload         40
588: aload         50
590: invokevirtual #118
593: istore        52
595: aload_1
596: aload         7
598: putfield      #140
601: new           #64
604: dup
605: invokespecial #65
608: ldc           #66
610: invokevirtual #67
613: iload_2
614: invokevirtual #102
617: ldc           #69
619: invokevirtual #67
622: iconst_0
623: invokevirtual #102
626: ldc           #66
628: invokevirtual #67
631: invokevirtual #71
634: iload_2
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #73
646: new           #64
649: dup
650: invokespecial #65
653: ldc           #66
655: invokevirtual #67
658: iload         4
660: invokevirtual #102
663: ldc           #69
665: invokevirtual #67
668: sipush        1000
671: invokevirtual #102
674: ldc           #66
676: invokevirtual #67
679: invokevirtual #71
682: iload         4
684: sipush        1000
687: if_icmpne     694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #73
698: new           #64
701: dup
702: invokespecial #65
705: ldc           #66
707: invokevirtual #67
710: iload         5
712: invokevirtual #102
715: ldc           #69
717: invokevirtual #67
720: iconst_0
721: invokevirtual #102
724: ldc           #66
726: invokevirtual #67
729: invokevirtual #71
732: iload         5
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #73
745: new           #64
748: dup
749: invokespecial #65
752: ldc           #66
754: invokevirtual #67
757: iload         6
759: invokevirtual #102
762: ldc           #69
764: invokevirtual #67
767: iconst_0
768: invokevirtual #102
771: ldc           #66
773: invokevirtual #67
776: invokevirtual #71
779: iload         6
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #73
792: aload         9
794: invokestatic  #106
797: aload         14
799: invokestatic  #56
802: aload         14
804: invokestatic  #57
807: ldc           #74
809: invokestatic  #59
812: aload         14
814: invokestatic  #60
817: ldc           #74
819: invokestatic  #59
822: aload         17
824: invokestatic  #56
827: aload         17
829: invokestatic  #61
832: ldc           #90
834: invokestatic  #59
837: aload         18
839: invokestatic  #56
842: aload         18
844: invokestatic  #61
847: ldc           #90
849: invokestatic  #59
852: aload         23
854: invokestatic  #56
857: aload         23
859: invokestatic  #57
862: ldc           #74
864: invokestatic  #59
867: aload         23
869: invokestatic  #60
872: ldc           #74
874: invokestatic  #59
877: aload         26
879: invokestatic  #56
882: aload         26
884: invokestatic  #61
887: ldc           #90
889: invokestatic  #59
892: aload         27
894: invokestatic  #56
897: aload         27
899: invokestatic  #61
902: ldc           #91
904: invokestatic  #59
907: aload         34
909: invokestatic  #56
912: aload         34
914: invokestatic  #57
917: ldc           #74
919: invokestatic  #59
922: aload         34
924: invokestatic  #60
927: ldc           #74
929: invokestatic  #59
932: aload         37
934: invokestatic  #56
937: aload         37
939: invokestatic  #61
942: ldc           #90
944: invokestatic  #59
947: aload         39
949: invokestatic  #56
952: aload         39
954: invokestatic  #61
957: ldc           #90
959: invokestatic  #59
962: aload         45
964: invokestatic  #56
967: aload         45
969: invokestatic  #57
972: ldc           #74
974: invokestatic  #59
977: aload         45
979: invokestatic  #60
982: ldc           #74
984: invokestatic  #59
987: aload         48
989: invokestatic  #56
992: aload         48
994: invokestatic  #61
997: ldc           #90
999: invokestatic  #59
1002: aload         49
1004: invokestatic  #56
1007: aload         49
1009: invokestatic  #61
1012: ldc           #91
1014: invokestatic  #59
1017: aload         51
1019: invokestatic  #56
1022: aload         51
1024: invokestatic  #61
1027: ldc           #90
1029: invokestatic  #59
1032: new           #64
1035: dup
1036: invokespecial #65
1039: ldc           #66
1041: invokevirtual #67
1044: iload         52
1046: invokevirtual #119
1049: ldc           #69
1051: invokevirtual #67
1054: iconst_0
1055: invokevirtual #119
1058: ldc           #66
1060: invokevirtual #67
1063: invokevirtual #71
1066: iload         52
1068: ifne          1075
1071: iconst_1
1072: goto          1076
1075: iconst_0
1076: invokestatic  #73
1079: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 6570
End line: 6601
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        int int21 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int22 = levenbergMarquardtOptimizer0.getEvaluations();
        double[] doubleArray23 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(doubleArray23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #314
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: invokevirtual #133
146: istore        12
148: aload_1
149: invokevirtual #167
152: istore        13
154: aload_1
155: getfield      #152
158: astore        14
160: aload_2
161: invokestatic  #106
164: aload         7
166: invokestatic  #56
169: aload         7
171: invokestatic  #57
174: ldc           #74
176: invokestatic  #59
179: aload         7
181: invokestatic  #60
184: ldc           #74
186: invokestatic  #59
189: aload         10
191: invokestatic  #56
194: aload         10
196: invokestatic  #61
199: ldc           #90
201: invokestatic  #59
204: aload         11
206: invokestatic  #56
209: aload         11
211: invokestatic  #61
214: ldc           #90
216: invokestatic  #59
219: new           #64
222: dup
223: invokespecial #65
226: ldc           #66
228: invokevirtual #67
231: iload         12
233: invokevirtual #102
236: ldc           #69
238: invokevirtual #67
241: iconst_0
242: invokevirtual #102
245: ldc           #66
247: invokevirtual #67
250: invokevirtual #71
253: iload         12
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #73
266: new           #64
269: dup
270: invokespecial #65
273: ldc           #66
275: invokevirtual #67
278: iload         13
280: invokevirtual #102
283: ldc           #69
285: invokevirtual #67
288: iconst_0
289: invokevirtual #102
292: ldc           #66
294: invokevirtual #67
297: invokevirtual #71
300: iload         13
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #73
313: aload         14
315: invokestatic  #106
318: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 6604
End line: 6647
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        java.lang.Object[] objArray4 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4);
        java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray29 = new double[] { (-1), 1.0f };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        levenbergMarquardtOptimizer24.jacobian = doubleArray30;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30);
        java.lang.Class<?> wildcardClass33 = noSuchElementException7.getClass();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException5);
        org.junit.Assert.assertNotNull(noSuchElementException7);
        org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #315
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: anewarray     #5
29: dup
30: iconst_0
31: iconst_1
32: invokestatic  #35
35: aastore
36: astore_1
37: ldc           #28
39: aload_1
40: invokestatic  #36
43: astore_2
44: new           #44
47: dup
48: ldc           #142
50: aload_1
51: invokespecial #238
54: astore_3
55: ldc           #42
57: aload_1
58: invokestatic  #239
61: astore        4
63: new           #240
66: dup
67: invokespecial #241
70: astore        5
72: aconst_null
73: astore        6
75: new           #27
78: dup
79: aload         6
81: invokespecial #39
84: astore        7
86: aload         7
88: invokevirtual #40
91: astore        8
93: aconst_null
94: astore        9
96: new           #27
99: dup
100: aload         9
102: invokespecial #39
105: astore        10
107: aload         10
109: invokevirtual #40
112: astore        11
114: aconst_null
115: astore        12
117: iconst_1
118: anewarray     #5
121: dup
122: iconst_0
123: iconst_1
124: invokestatic  #35
127: aastore
128: astore        13
130: ldc           #28
132: aload         13
134: invokestatic  #36
137: astore        14
139: new           #37
142: dup
143: bipush        100
145: aload         12
147: aload         13
149: invokespecial #38
152: astore        15
154: aload         11
156: aload         13
158: invokestatic  #41
161: astore        16
163: new           #27
166: dup
167: aload         5
169: aload         8
171: aload         13
173: invokespecial #47
176: astore        17
178: new           #8
181: dup
182: invokespecial #9
185: astore        18
187: aload         18
189: dconst_0
190: invokevirtual #129
193: iconst_2
194: newarray       double
196: dup
197: iconst_0
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_1
204: dconst_1
205: dastore
206: astore        19
208: iconst_1
209: anewarray     #130
212: dup
213: iconst_0
214: aload         19
216: aastore
217: astore        20
219: aload         18
221: aload         20
223: putfield      #131
226: new           #44
229: dup
230: aload         4
232: aload         8
234: aload         20
236: checkcast     #143
239: invokespecial #45
242: astore        21
244: aload         4
246: invokevirtual #306
249: astore        22
251: aload_1
252: invokestatic  #56
255: aload_1
256: invokestatic  #57
259: ldc           #63
261: invokestatic  #59
264: aload_1
265: invokestatic  #60
268: ldc           #63
270: invokestatic  #59
273: aload_2
274: invokestatic  #56
277: aload         4
279: invokestatic  #56
282: new           #64
285: dup
286: invokespecial #65
289: ldc           #66
291: invokevirtual #67
294: aload         8
296: invokevirtual #68
299: ldc           #69
301: invokevirtual #67
304: getstatic     #70
307: invokevirtual #68
310: ldc           #66
312: invokevirtual #67
315: invokevirtual #71
318: aload         8
320: getstatic     #70
323: invokevirtual #72
326: invokestatic  #73
329: new           #64
332: dup
333: invokespecial #65
336: ldc           #66
338: invokevirtual #67
341: aload         11
343: invokevirtual #68
346: ldc           #69
348: invokevirtual #67
351: getstatic     #70
354: invokevirtual #68
357: ldc           #66
359: invokevirtual #67
362: invokevirtual #71
365: aload         11
367: getstatic     #70
370: invokevirtual #72
373: invokestatic  #73
376: aload         13
378: invokestatic  #56
381: aload         13
383: invokestatic  #57
386: ldc           #63
388: invokestatic  #59
391: aload         13
393: invokestatic  #60
396: ldc           #63
398: invokestatic  #59
401: aload         14
403: invokestatic  #56
406: aload         16
408: invokestatic  #56
411: aload         19
413: invokestatic  #56
416: aload         19
418: invokestatic  #61
421: ldc           #134
423: invokestatic  #59
426: aload         20
428: invokestatic  #56
431: aload         22
433: invokestatic  #56
436: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 6650
End line: 6697
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        levenbergMarquardtOptimizer0.cost = (short) 10;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer5.rows = 0;
        levenbergMarquardtOptimizer5.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray10 = levenbergMarquardtOptimizer5.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException12 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable15);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable15, localizable17, objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException12, 0.0d, "hi!", objArray20);
        double[] doubleArray23 = functionEvaluationException22.getArgument();
        double[] doubleArray24 = functionEvaluationException22.getArgument();
        levenbergMarquardtOptimizer5.objective = doubleArray24;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35);
        double[] doubleArray38 = functionEvaluationException37.getArgument();
        double[] doubleArray40 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray40);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray38, false);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray38;
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: ldc2_w        #33
42: putfield      #97
45: new           #8
48: dup
49: invokespecial #9
52: astore_2
53: aload_2
54: iconst_0
55: putfield      #93
58: aload_2
59: iconst_1
60: invokevirtual #76
63: aload_2
64: getfield      #113
67: astore_3
68: new           #81
71: dup
72: iconst_m1
73: invokespecial #82
76: astore        4
78: aconst_null
79: astore        5
81: new           #27
84: dup
85: aload         5
87: invokespecial #39
90: astore        6
92: aconst_null
93: astore        7
95: iconst_2
96: anewarray     #5
99: dup
100: iconst_0
101: ldc           #28
103: aastore
104: dup
105: iconst_1
106: iconst_1
107: invokestatic  #17
110: aastore
111: astore        8
113: new           #27
116: dup
117: aload         5
119: aload         7
121: aload         8
123: invokespecial #47
126: astore        9
128: new           #23
131: dup
132: aload         4
134: dconst_0
135: ldc           #28
137: aload         8
139: invokespecial #83
142: astore        10
144: aload         10
146: invokevirtual #84
149: astore        11
151: aload         10
153: invokevirtual #84
156: astore        12
158: aload_2
159: aload         12
161: putfield      #114
164: new           #81
167: dup
168: iconst_m1
169: invokespecial #82
172: astore        13
174: aconst_null
175: astore        14
177: new           #27
180: dup
181: aload         14
183: invokespecial #39
186: astore        15
188: aconst_null
189: astore        16
191: iconst_2
192: anewarray     #5
195: dup
196: iconst_0
197: ldc           #28
199: aastore
200: dup
201: iconst_1
202: iconst_1
203: invokestatic  #17
206: aastore
207: astore        17
209: new           #27
212: dup
213: aload         14
215: aload         16
217: aload         17
219: invokespecial #47
222: astore        18
224: new           #23
227: dup
228: aload         13
230: dconst_0
231: ldc           #28
233: aload         17
235: invokespecial #83
238: astore        19
240: aload         19
242: invokevirtual #84
245: astore        20
247: iconst_1
248: newarray       double
250: dup
251: iconst_0
252: ldc2_w        #85
255: dastore
256: astore        21
258: new           #87
261: dup
262: aload         20
264: aload         21
266: invokespecial #88
269: astore        22
271: new           #87
274: dup
275: aload         12
277: aload         20
279: iconst_0
280: invokespecial #117
283: astore        23
285: aload_1
286: aload         20
288: putfield      #113
291: aload_3
292: invokestatic  #106
295: aload         8
297: invokestatic  #56
300: aload         8
302: invokestatic  #57
305: ldc           #74
307: invokestatic  #59
310: aload         8
312: invokestatic  #60
315: ldc           #74
317: invokestatic  #59
320: aload         11
322: invokestatic  #56
325: aload         11
327: invokestatic  #61
330: ldc           #90
332: invokestatic  #59
335: aload         12
337: invokestatic  #56
340: aload         12
342: invokestatic  #61
345: ldc           #90
347: invokestatic  #59
350: aload         17
352: invokestatic  #56
355: aload         17
357: invokestatic  #57
360: ldc           #74
362: invokestatic  #59
365: aload         17
367: invokestatic  #60
370: ldc           #74
372: invokestatic  #59
375: aload         20
377: invokestatic  #56
380: aload         20
382: invokestatic  #61
385: ldc           #90
387: invokestatic  #59
390: aload         21
392: invokestatic  #56
395: aload         21
397: invokestatic  #61
400: ldc           #91
402: invokestatic  #59
405: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 6700
End line: 6719
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 0);
        int int6 = levenbergMarquardtOptimizer3.getMaxIterations();
        int int7 = levenbergMarquardtOptimizer3.getIterations();
        int int8 = levenbergMarquardtOptimizer3.getIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker11 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1);
        levenbergMarquardtOptimizer3.checker = simpleVectorialValueChecker11;
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker11);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1000 + "'", int6 == 1000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: aload_1
39: getfield      #122
42: astore        4
44: new           #8
47: dup
48: invokespecial #9
51: astore        5
53: aload         5
55: iconst_0
56: invokevirtual #76
59: aload         5
61: invokevirtual #98
64: istore        6
66: aload         5
68: invokevirtual #126
71: istore        7
73: aload         5
75: invokevirtual #126
78: istore        8
80: new           #99
83: dup
84: dconst_0
85: dconst_1
86: invokespecial #116
89: astore        9
91: aload         5
93: aload         9
95: putfield      #140
98: aload_1
99: aload         9
101: invokevirtual #101
104: new           #64
107: dup
108: invokespecial #65
111: ldc           #66
113: invokevirtual #67
116: dload_2
117: invokevirtual #79
120: ldc           #69
122: invokevirtual #67
125: dconst_0
126: invokevirtual #79
129: ldc           #66
131: invokevirtual #67
134: invokevirtual #71
137: dload_2
138: dconst_0
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #73
151: aload         4
153: invokestatic  #106
156: new           #64
159: dup
160: invokespecial #65
163: ldc           #66
165: invokevirtual #67
168: iload         6
170: invokevirtual #102
173: ldc           #69
175: invokevirtual #67
178: sipush        1000
181: invokevirtual #102
184: ldc           #66
186: invokevirtual #67
189: invokevirtual #71
192: iload         6
194: sipush        1000
197: if_icmpne     204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #73
208: new           #64
211: dup
212: invokespecial #65
215: ldc           #66
217: invokevirtual #67
220: iload         7
222: invokevirtual #102
225: ldc           #69
227: invokevirtual #67
230: iconst_0
231: invokevirtual #102
234: ldc           #66
236: invokevirtual #67
239: invokevirtual #71
242: iload         7
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #73
255: new           #64
258: dup
259: invokespecial #65
262: ldc           #66
264: invokevirtual #67
267: iload         8
269: invokevirtual #102
272: ldc           #69
274: invokevirtual #67
277: iconst_0
278: invokevirtual #102
281: ldc           #66
283: invokevirtual #67
286: invokevirtual #71
289: iload         8
291: ifne          298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #73
302: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 6722
End line: 6736
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.cost = 10.0d;
        levenbergMarquardtOptimizer0.cost = (-1L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: ldc2_w        #33
79: putfield      #97
82: aload_1
83: ldc2_w        #31
86: putfield      #97
89: new           #64
92: dup
93: invokespecial #65
96: ldc           #66
98: invokevirtual #67
101: iload_2
102: invokevirtual #102
105: ldc           #69
107: invokevirtual #67
110: sipush        1000
113: invokevirtual #102
116: ldc           #66
118: invokevirtual #67
121: invokevirtual #71
124: iload_2
125: sipush        1000
128: if_icmpne     135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #73
139: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 6739
End line: 6759
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0.0f);
        double double13 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: aload_1
67: invokevirtual #132
70: dstore        4
72: aload_1
73: invokevirtual #133
76: istore        6
78: aload_1
79: invokevirtual #126
82: istore        7
84: aload_1
85: dconst_0
86: invokevirtual #204
89: aload_1
90: getfield      #97
93: dstore        8
95: aload_2
96: invokestatic  #56
99: aload_2
100: invokestatic  #61
103: ldc           #134
105: invokestatic  #59
108: aload_3
109: invokestatic  #56
112: dload         4
114: invokestatic  #135
117: invokestatic  #136
120: new           #64
123: dup
124: invokespecial #65
127: ldc           #66
129: invokevirtual #67
132: iload         6
134: invokevirtual #102
137: ldc           #69
139: invokevirtual #67
142: iconst_0
143: invokevirtual #102
146: ldc           #66
148: invokevirtual #67
151: invokevirtual #71
154: iload         6
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #73
167: new           #64
170: dup
171: invokespecial #65
174: ldc           #66
176: invokevirtual #67
179: iload         7
181: invokevirtual #102
184: ldc           #69
186: invokevirtual #67
189: iconst_0
190: invokevirtual #102
193: ldc           #66
195: invokevirtual #67
198: invokevirtual #71
201: iload         7
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #73
214: new           #64
217: dup
218: invokespecial #65
221: ldc           #66
223: invokevirtual #67
226: dload         8
228: invokevirtual #79
231: ldc           #69
233: invokevirtual #67
236: dconst_0
237: invokevirtual #79
240: ldc           #66
242: invokevirtual #67
245: invokevirtual #71
248: dload         8
250: dconst_0
251: dcmpl
252: ifne          259
255: iconst_1
256: goto          260
259: iconst_0
260: invokestatic  #73
263: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 6762
End line: 6772
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getIterations();
        double double6 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #126
47: istore_2
48: aload_1
49: getfield      #97
52: dstore_3
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: iconst_0
75: invokevirtual #102
78: ldc           #66
80: invokevirtual #67
83: invokevirtual #71
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #73
98: new           #64
101: dup
102: invokespecial #65
105: ldc           #66
107: invokevirtual #67
110: dload_3
111: invokevirtual #79
114: ldc           #69
116: invokevirtual #67
119: dconst_0
120: invokevirtual #79
123: ldc           #66
125: invokevirtual #67
128: invokevirtual #71
131: dload_3
132: dconst_0
133: dcmpl
134: ifne          141
137: iconst_1
138: goto          142
141: iconst_0
142: invokestatic  #73
145: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 6775
End line: 6867
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        java.lang.Object[] objArray4 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4);
        java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray29 = new double[] { (-1), 1.0f };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        levenbergMarquardtOptimizer24.jacobian = doubleArray30;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47);
        org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54);
        java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54);
        java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61);
        java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.exception.util.Localizable localizable69 = null;
        org.apache.commons.math.exception.util.Localizable localizable71 = null;
        java.lang.Object[] objArray77 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable71, objArray77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException(localizable69, objArray77);
        org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException("hi!", objArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(throwable65, (double) '#', "", objArray77);
        java.io.EOFException eOFException82 = org.apache.commons.math.MathRuntimeException.createEOFException("org.apache.commons.math.ConvergenceException: convergence failed", objArray77);
        org.apache.commons.math.optimization.OptimizationException optimizationException83 = new org.apache.commons.math.optimization.OptimizationException(localizable11, objArray77);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException5);
        org.junit.Assert.assertNotNull(noSuchElementException7);
        org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException55);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57);
        org.junit.Assert.assertNotNull(nullPointerException58);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(noSuchElementException63);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(eOFException82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #321
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: anewarray     #5
29: dup
30: iconst_0
31: iconst_1
32: invokestatic  #35
35: aastore
36: astore_1
37: ldc           #28
39: aload_1
40: invokestatic  #36
43: astore_2
44: new           #44
47: dup
48: ldc           #142
50: aload_1
51: invokespecial #238
54: astore_3
55: ldc           #42
57: aload_1
58: invokestatic  #239
61: astore        4
63: new           #240
66: dup
67: invokespecial #241
70: astore        5
72: aconst_null
73: astore        6
75: new           #27
78: dup
79: aload         6
81: invokespecial #39
84: astore        7
86: aload         7
88: invokevirtual #40
91: astore        8
93: aconst_null
94: astore        9
96: new           #27
99: dup
100: aload         9
102: invokespecial #39
105: astore        10
107: aload         10
109: invokevirtual #40
112: astore        11
114: aconst_null
115: astore        12
117: iconst_1
118: anewarray     #5
121: dup
122: iconst_0
123: iconst_1
124: invokestatic  #35
127: aastore
128: astore        13
130: ldc           #28
132: aload         13
134: invokestatic  #36
137: astore        14
139: new           #37
142: dup
143: bipush        100
145: aload         12
147: aload         13
149: invokespecial #38
152: astore        15
154: aload         11
156: aload         13
158: invokestatic  #41
161: astore        16
163: new           #27
166: dup
167: aload         5
169: aload         8
171: aload         13
173: invokespecial #47
176: astore        17
178: new           #8
181: dup
182: invokespecial #9
185: astore        18
187: aload         18
189: dconst_0
190: invokevirtual #129
193: iconst_2
194: newarray       double
196: dup
197: iconst_0
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_1
204: dconst_1
205: dastore
206: astore        19
208: iconst_1
209: anewarray     #130
212: dup
213: iconst_0
214: aload         19
216: aastore
217: astore        20
219: aload         18
221: aload         20
223: putfield      #131
226: new           #44
229: dup
230: aload         4
232: aload         8
234: aload         20
236: checkcast     #143
239: invokespecial #45
242: astore        21
244: aconst_null
245: astore        22
247: new           #27
250: dup
251: aload         22
253: invokespecial #39
256: astore        23
258: aload         23
260: invokevirtual #40
263: astore        24
265: aconst_null
266: astore        25
268: iconst_1
269: anewarray     #5
272: dup
273: iconst_0
274: iconst_1
275: invokestatic  #35
278: aastore
279: astore        26
281: ldc           #28
283: aload         26
285: invokestatic  #36
288: astore        27
290: new           #37
293: dup
294: bipush        100
296: aload         25
298: aload         26
300: invokespecial #38
303: astore        28
305: aconst_null
306: astore        29
308: aconst_null
309: astore        30
311: new           #27
314: dup
315: aload         30
317: invokespecial #39
320: astore        31
322: aload         31
324: invokevirtual #40
327: astore        32
329: aconst_null
330: astore        33
332: iconst_1
333: anewarray     #5
336: dup
337: iconst_0
338: iconst_1
339: invokestatic  #35
342: aastore
343: astore        34
345: ldc           #28
347: aload         34
349: invokestatic  #36
352: astore        35
354: new           #37
357: dup
358: bipush        100
360: aload         33
362: aload         34
364: invokespecial #38
367: astore        36
369: aload         32
371: aload         34
373: invokestatic  #41
376: astore        37
378: ldc           #42
380: aload         34
382: invokestatic  #43
385: astore        38
387: new           #44
390: dup
391: aload         28
393: aload         29
395: aload         34
397: invokespecial #45
400: astore        39
402: aload         24
404: aload         34
406: invokestatic  #46
409: astore        40
411: aload         40
413: invokevirtual #253
416: astore        41
418: new           #81
421: dup
422: iconst_m1
423: ldc           #42
425: aload         41
427: checkcast     #143
430: invokespecial #254
433: astore        42
435: aload         8
437: aload         41
439: checkcast     #143
442: invokestatic  #255
445: astore        43
447: aconst_null
448: astore        44
450: aconst_null
451: astore        45
453: aconst_null
454: astore        46
456: iconst_5
457: anewarray     #5
460: dup
461: iconst_0
462: iconst_0
463: invokestatic  #16
466: aastore
467: dup
468: iconst_1
469: iconst_0
470: invokestatic  #17
473: aastore
474: dup
475: iconst_2
476: bipush        52
478: invokestatic  #18
481: aastore
482: dup
483: iconst_3
484: ldc2_w        #19
487: invokestatic  #21
490: aastore
491: dup
492: iconst_4
493: dconst_1
494: invokestatic  #22
497: aastore
498: astore        47
500: new           #23
503: dup
504: ldc2_w        #24
507: aload         46
509: aload         47
511: invokespecial #26
514: astore        48
516: new           #44
519: dup
520: aload         45
522: aload         47
524: invokespecial #149
527: astore        49
529: new           #27
532: dup
533: ldc           #28
535: aload         47
537: invokespecial #29
540: astore        50
542: new           #23
545: dup
546: aload         44
548: ldc2_w        #24
551: ldc           #42
553: aload         47
555: invokespecial #83
558: astore        51
560: ldc           #191
562: aload         47
564: invokestatic  #322
567: astore        52
569: new           #14
572: dup
573: aload         8
575: aload         47
577: invokespecial #323
580: astore        53
582: aload_1
583: invokestatic  #56
586: aload_1
587: invokestatic  #57
590: ldc           #63
592: invokestatic  #59
595: aload_1
596: invokestatic  #60
599: ldc           #63
601: invokestatic  #59
604: aload_2
605: invokestatic  #56
608: aload         4
610: invokestatic  #56
613: new           #64
616: dup
617: invokespecial #65
620: ldc           #66
622: invokevirtual #67
625: aload         8
627: invokevirtual #68
630: ldc           #69
632: invokevirtual #67
635: getstatic     #70
638: invokevirtual #68
641: ldc           #66
643: invokevirtual #67
646: invokevirtual #71
649: aload         8
651: getstatic     #70
654: invokevirtual #72
657: invokestatic  #73
660: new           #64
663: dup
664: invokespecial #65
667: ldc           #66
669: invokevirtual #67
672: aload         11
674: invokevirtual #68
677: ldc           #69
679: invokevirtual #67
682: getstatic     #70
685: invokevirtual #68
688: ldc           #66
690: invokevirtual #67
693: invokevirtual #71
696: aload         11
698: getstatic     #70
701: invokevirtual #72
704: invokestatic  #73
707: aload         13
709: invokestatic  #56
712: aload         13
714: invokestatic  #57
717: ldc           #63
719: invokestatic  #59
722: aload         13
724: invokestatic  #60
727: ldc           #63
729: invokestatic  #59
732: aload         14
734: invokestatic  #56
737: aload         16
739: invokestatic  #56
742: aload         19
744: invokestatic  #56
747: aload         19
749: invokestatic  #61
752: ldc           #134
754: invokestatic  #59
757: aload         20
759: invokestatic  #56
762: new           #64
765: dup
766: invokespecial #65
769: ldc           #66
771: invokevirtual #67
774: aload         24
776: invokevirtual #68
779: ldc           #69
781: invokevirtual #67
784: getstatic     #70
787: invokevirtual #68
790: ldc           #66
792: invokevirtual #67
795: invokevirtual #71
798: aload         24
800: getstatic     #70
803: invokevirtual #72
806: invokestatic  #73
809: aload         26
811: invokestatic  #56
814: aload         26
816: invokestatic  #57
819: ldc           #63
821: invokestatic  #59
824: aload         26
826: invokestatic  #60
829: ldc           #63
831: invokestatic  #59
834: aload         27
836: invokestatic  #56
839: new           #64
842: dup
843: invokespecial #65
846: ldc           #66
848: invokevirtual #67
851: aload         32
853: invokevirtual #68
856: ldc           #69
858: invokevirtual #67
861: getstatic     #70
864: invokevirtual #68
867: ldc           #66
869: invokevirtual #67
872: invokevirtual #71
875: aload         32
877: getstatic     #70
880: invokevirtual #72
883: invokestatic  #73
886: aload         34
888: invokestatic  #56
891: aload         34
893: invokestatic  #57
896: ldc           #63
898: invokestatic  #59
901: aload         34
903: invokestatic  #60
906: ldc           #63
908: invokestatic  #59
911: aload         35
913: invokestatic  #56
916: aload         37
918: invokestatic  #56
921: aload         38
923: invokestatic  #56
926: aload         40
928: invokestatic  #56
931: aload         41
933: invokestatic  #56
936: aload         43
938: invokestatic  #56
941: aload         47
943: invokestatic  #56
946: aload         47
948: invokestatic  #57
951: ldc           #58
953: invokestatic  #59
956: aload         47
958: invokestatic  #60
961: ldc           #58
963: invokestatic  #59
966: aload         52
968: invokestatic  #56
971: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 6870
End line: 6916
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        double double39 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker40 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #97
278: dstore        24
280: aload_1
281: invokevirtual #104
284: astore        26
286: aload         7
288: invokestatic  #56
291: aload         7
293: invokestatic  #57
296: ldc           #74
298: invokestatic  #59
301: aload         7
303: invokestatic  #60
306: ldc           #74
308: invokestatic  #59
311: aload         10
313: invokestatic  #56
316: aload         10
318: invokestatic  #61
321: ldc           #90
323: invokestatic  #59
326: aload         11
328: invokestatic  #56
331: aload         11
333: invokestatic  #61
336: ldc           #91
338: invokestatic  #59
341: aload         17
343: invokestatic  #56
346: aload         17
348: invokestatic  #57
351: ldc           #74
353: invokestatic  #59
356: aload         17
358: invokestatic  #60
361: ldc           #74
363: invokestatic  #59
366: aload         20
368: invokestatic  #56
371: aload         20
373: invokestatic  #61
376: ldc           #90
378: invokestatic  #59
381: aload         21
383: invokestatic  #56
386: aload         21
388: invokestatic  #61
391: ldc           #91
393: invokestatic  #59
396: new           #64
399: dup
400: invokespecial #65
403: ldc           #66
405: invokevirtual #67
408: iload         23
410: invokevirtual #119
413: ldc           #69
415: invokevirtual #67
418: iconst_1
419: invokevirtual #119
422: ldc           #66
424: invokevirtual #67
427: invokevirtual #71
430: iload         23
432: iconst_1
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #73
444: new           #64
447: dup
448: invokespecial #65
451: ldc           #66
453: invokevirtual #67
456: dload         24
458: invokevirtual #79
461: ldc           #69
463: invokevirtual #67
466: dconst_0
467: invokevirtual #79
470: ldc           #66
472: invokevirtual #67
475: invokevirtual #71
478: dload         24
480: dconst_0
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #73
493: aload         26
495: invokestatic  #56
498: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 6919
End line: 6925
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #167
37: istore_2
38: new           #64
41: dup
42: invokespecial #65
45: ldc           #66
47: invokevirtual #67
50: iload_2
51: invokevirtual #102
54: ldc           #69
56: invokevirtual #67
59: iconst_0
60: invokevirtual #102
63: ldc           #66
65: invokevirtual #67
68: invokevirtual #71
71: iload_2
72: ifne          79
75: iconst_1
76: goto          80
79: iconst_0
80: invokestatic  #73
83: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 6928
End line: 7010
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer20.rows = 0;
        levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d));
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53);
        double[] doubleArray56 = functionEvaluationException55.getArgument();
        double[] doubleArray58 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77);
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #326
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: new           #8
150: dup
151: invokespecial #9
154: astore        12
156: aload         12
158: iconst_0
159: putfield      #93
162: aload         12
164: iconst_1
165: invokevirtual #76
168: aload         12
170: ldc2_w        #31
173: invokevirtual #94
176: new           #99
179: dup
180: dconst_0
181: ldc2_w        #95
184: invokespecial #116
187: astore        13
189: new           #81
192: dup
193: iconst_m1
194: invokespecial #82
197: astore        14
199: aconst_null
200: astore        15
202: new           #27
205: dup
206: aload         15
208: invokespecial #39
211: astore        16
213: aconst_null
214: astore        17
216: iconst_2
217: anewarray     #5
220: dup
221: iconst_0
222: ldc           #28
224: aastore
225: dup
226: iconst_1
227: iconst_1
228: invokestatic  #17
231: aastore
232: astore        18
234: new           #27
237: dup
238: aload         15
240: aload         17
242: aload         18
244: invokespecial #47
247: astore        19
249: new           #23
252: dup
253: aload         14
255: dconst_0
256: ldc           #28
258: aload         18
260: invokespecial #83
263: astore        20
265: aload         20
267: invokevirtual #84
270: astore        21
272: new           #81
275: dup
276: iconst_m1
277: invokespecial #82
280: astore        22
282: aconst_null
283: astore        23
285: new           #27
288: dup
289: aload         23
291: invokespecial #39
294: astore        24
296: aconst_null
297: astore        25
299: iconst_2
300: anewarray     #5
303: dup
304: iconst_0
305: ldc           #28
307: aastore
308: dup
309: iconst_1
310: iconst_1
311: invokestatic  #17
314: aastore
315: astore        26
317: new           #27
320: dup
321: aload         23
323: aload         25
325: aload         26
327: invokespecial #47
330: astore        27
332: new           #23
335: dup
336: aload         22
338: dconst_0
339: ldc           #28
341: aload         26
343: invokespecial #83
346: astore        28
348: aload         28
350: invokevirtual #84
353: astore        29
355: iconst_1
356: newarray       double
358: dup
359: iconst_0
360: ldc2_w        #85
363: dastore
364: astore        30
366: new           #87
369: dup
370: aload         29
372: aload         30
374: invokespecial #88
377: astore        31
379: new           #87
382: dup
383: aload         21
385: aload         30
387: iconst_0
388: invokespecial #117
391: astore        32
393: new           #81
396: dup
397: iconst_m1
398: invokespecial #82
401: astore        33
403: aconst_null
404: astore        34
406: new           #27
409: dup
410: aload         34
412: invokespecial #39
415: astore        35
417: aconst_null
418: astore        36
420: iconst_2
421: anewarray     #5
424: dup
425: iconst_0
426: ldc           #28
428: aastore
429: dup
430: iconst_1
431: iconst_1
432: invokestatic  #17
435: aastore
436: astore        37
438: new           #27
441: dup
442: aload         34
444: aload         36
446: aload         37
448: invokespecial #47
451: astore        38
453: new           #23
456: dup
457: aload         33
459: dconst_0
460: ldc           #28
462: aload         37
464: invokespecial #83
467: astore        39
469: aload         39
471: invokevirtual #84
474: astore        40
476: iconst_1
477: newarray       double
479: dup
480: iconst_0
481: ldc2_w        #85
484: dastore
485: astore        41
487: new           #87
490: dup
491: aload         40
493: aload         41
495: invokespecial #88
498: astore        42
500: aload         13
502: iconst_0
503: aload         32
505: aload         42
507: invokevirtual #118
510: istore        43
512: aload         12
514: aload         13
516: invokevirtual #101
519: aload_1
520: aload         13
522: invokevirtual #101
525: aload_1
526: invokevirtual #98
529: istore        44
531: aload         6
533: invokestatic  #56
536: aload         6
538: invokestatic  #57
541: ldc           #74
543: invokestatic  #59
546: aload         6
548: invokestatic  #60
551: ldc           #74
553: invokestatic  #59
556: aload         9
558: invokestatic  #56
561: aload         9
563: invokestatic  #61
566: ldc           #90
568: invokestatic  #59
571: aload         10
573: invokestatic  #56
576: aload         10
578: invokestatic  #61
581: ldc           #91
583: invokestatic  #59
586: aload         18
588: invokestatic  #56
591: aload         18
593: invokestatic  #57
596: ldc           #74
598: invokestatic  #59
601: aload         18
603: invokestatic  #60
606: ldc           #74
608: invokestatic  #59
611: aload         21
613: invokestatic  #56
616: aload         21
618: invokestatic  #61
621: ldc           #90
623: invokestatic  #59
626: aload         26
628: invokestatic  #56
631: aload         26
633: invokestatic  #57
636: ldc           #74
638: invokestatic  #59
641: aload         26
643: invokestatic  #60
646: ldc           #74
648: invokestatic  #59
651: aload         29
653: invokestatic  #56
656: aload         29
658: invokestatic  #61
661: ldc           #90
663: invokestatic  #59
666: aload         30
668: invokestatic  #56
671: aload         30
673: invokestatic  #61
676: ldc           #91
678: invokestatic  #59
681: aload         37
683: invokestatic  #56
686: aload         37
688: invokestatic  #57
691: ldc           #74
693: invokestatic  #59
696: aload         37
698: invokestatic  #60
701: ldc           #74
703: invokestatic  #59
706: aload         40
708: invokestatic  #56
711: aload         40
713: invokestatic  #61
716: ldc           #90
718: invokestatic  #59
721: aload         41
723: invokestatic  #56
726: aload         41
728: invokestatic  #61
731: ldc           #91
733: invokestatic  #59
736: new           #64
739: dup
740: invokespecial #65
743: ldc           #66
745: invokevirtual #67
748: iload         43
750: invokevirtual #119
753: ldc           #69
755: invokevirtual #67
758: iconst_1
759: invokevirtual #119
762: ldc           #66
764: invokevirtual #67
767: invokevirtual #71
770: iload         43
772: iconst_1
773: if_icmpne     780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #73
784: new           #64
787: dup
788: invokespecial #65
791: ldc           #66
793: invokevirtual #67
796: iload         44
798: invokevirtual #102
801: ldc           #69
803: invokevirtual #67
806: sipush        1000
809: invokevirtual #102
812: ldc           #66
814: invokevirtual #67
817: invokevirtual #71
820: iload         44
822: sipush        1000
825: if_icmpne     832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #73
836: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 7013
End line: 7102
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.cost = '4';
        int int84 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #98
551: istore        47
553: aload_1
554: ldc2_w        #328
557: putfield      #97
560: aload_1
561: invokevirtual #126
564: istore        48
566: aload_3
567: invokestatic  #56
570: aload_3
571: invokestatic  #57
574: ldc           #58
576: invokestatic  #59
579: aload_3
580: invokestatic  #60
583: ldc           #58
585: invokestatic  #59
588: aload         7
590: invokestatic  #56
593: aload         7
595: invokestatic  #57
598: ldc           #58
600: invokestatic  #59
603: aload         7
605: invokestatic  #60
608: ldc           #58
610: invokestatic  #59
613: aload         10
615: invokestatic  #56
618: aload         10
620: invokestatic  #61
623: ldc           #62
625: invokestatic  #59
628: aload         12
630: invokestatic  #56
633: aload         12
635: invokestatic  #57
638: ldc           #63
640: invokestatic  #59
643: aload         12
645: invokestatic  #60
648: ldc           #63
650: invokestatic  #59
653: aload         13
655: invokestatic  #56
658: new           #64
661: dup
662: invokespecial #65
665: ldc           #66
667: invokevirtual #67
670: aload         17
672: invokevirtual #68
675: ldc           #69
677: invokevirtual #67
680: getstatic     #70
683: invokevirtual #68
686: ldc           #66
688: invokevirtual #67
691: invokevirtual #71
694: aload         17
696: getstatic     #70
699: invokevirtual #72
702: invokestatic  #73
705: aload         19
707: invokestatic  #56
710: aload         19
712: invokestatic  #57
715: ldc           #63
717: invokestatic  #59
720: aload         19
722: invokestatic  #60
725: ldc           #63
727: invokestatic  #59
730: aload         20
732: invokestatic  #56
735: new           #64
738: dup
739: invokespecial #65
742: ldc           #66
744: invokevirtual #67
747: aload         25
749: invokevirtual #68
752: ldc           #69
754: invokevirtual #67
757: getstatic     #70
760: invokevirtual #68
763: ldc           #66
765: invokevirtual #67
768: invokevirtual #71
771: aload         25
773: getstatic     #70
776: invokevirtual #72
779: invokestatic  #73
782: aload         27
784: invokestatic  #56
787: aload         27
789: invokestatic  #57
792: ldc           #63
794: invokestatic  #59
797: aload         27
799: invokestatic  #60
802: ldc           #63
804: invokestatic  #59
807: aload         28
809: invokestatic  #56
812: aload         30
814: invokestatic  #56
817: aload         31
819: invokestatic  #56
822: aload         33
824: invokestatic  #56
827: aload         37
829: invokestatic  #56
832: aload         37
834: invokestatic  #57
837: ldc           #74
839: invokestatic  #59
842: aload         37
844: invokestatic  #60
847: ldc           #74
849: invokestatic  #59
852: aload         39
854: invokestatic  #56
857: aload         39
859: invokestatic  #57
862: ldc           #74
864: invokestatic  #59
867: aload         39
869: invokestatic  #60
872: ldc           #74
874: invokestatic  #59
877: aload         40
879: invokestatic  #56
882: new           #64
885: dup
886: invokespecial #65
889: ldc           #66
891: invokevirtual #67
894: dload         44
896: invokevirtual #79
899: ldc           #69
901: invokevirtual #67
904: dconst_0
905: invokevirtual #79
908: ldc           #66
910: invokevirtual #67
913: invokevirtual #71
916: dload         44
918: dconst_0
919: dcmpl
920: ifne          927
923: iconst_1
924: goto          928
927: iconst_0
928: invokestatic  #73
931: aload         46
933: invokestatic  #106
936: new           #64
939: dup
940: invokespecial #65
943: ldc           #66
945: invokevirtual #67
948: iload         47
950: invokevirtual #102
953: ldc           #69
955: invokevirtual #67
958: sipush        1000
961: invokevirtual #102
964: ldc           #66
966: invokevirtual #67
969: invokevirtual #71
972: iload         47
974: sipush        1000
977: if_icmpne     984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #73
988: new           #64
991: dup
992: invokespecial #65
995: ldc           #66
997: invokevirtual #67
1000: iload         48
1002: invokevirtual #102
1005: ldc           #69
1007: invokevirtual #67
1010: iconst_0
1011: invokevirtual #102
1014: ldc           #66
1016: invokevirtual #67
1019: invokevirtual #71
1022: iload         48
1024: ifne          1031
1027: iconst_1
1028: goto          1032
1031: iconst_0
1032: invokestatic  #73
1035: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 7105
End line: 7116
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L);
        int int8 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: dconst_0
50: invokevirtual #129
53: aload_1
54: invokevirtual #167
57: istore_3
58: aload_2
59: invokestatic  #106
62: new           #64
65: dup
66: invokespecial #65
69: ldc           #66
71: invokevirtual #67
74: iload_3
75: invokevirtual #102
78: ldc           #69
80: invokevirtual #67
83: iconst_0
84: invokevirtual #102
87: ldc           #66
89: invokevirtual #67
92: invokevirtual #71
95: iload_3
96: ifne          103
99: iconst_1
100: goto          104
103: iconst_0
104: invokestatic  #73
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 7119
End line: 7207
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray82 = levenbergMarquardtOptimizer0.residualsWeights;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(doubleArray82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #331
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: getfield      #113
557: astore        48
559: aload_3
560: invokestatic  #56
563: aload_3
564: invokestatic  #57
567: ldc           #58
569: invokestatic  #59
572: aload_3
573: invokestatic  #60
576: ldc           #58
578: invokestatic  #59
581: aload         7
583: invokestatic  #56
586: aload         7
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #60
601: ldc           #58
603: invokestatic  #59
606: aload         10
608: invokestatic  #56
611: aload         10
613: invokestatic  #61
616: ldc           #62
618: invokestatic  #59
621: aload         12
623: invokestatic  #56
626: aload         12
628: invokestatic  #57
631: ldc           #63
633: invokestatic  #59
636: aload         12
638: invokestatic  #60
641: ldc           #63
643: invokestatic  #59
646: aload         13
648: invokestatic  #56
651: new           #64
654: dup
655: invokespecial #65
658: ldc           #66
660: invokevirtual #67
663: aload         17
665: invokevirtual #68
668: ldc           #69
670: invokevirtual #67
673: getstatic     #70
676: invokevirtual #68
679: ldc           #66
681: invokevirtual #67
684: invokevirtual #71
687: aload         17
689: getstatic     #70
692: invokevirtual #72
695: invokestatic  #73
698: aload         19
700: invokestatic  #56
703: aload         19
705: invokestatic  #57
708: ldc           #63
710: invokestatic  #59
713: aload         19
715: invokestatic  #60
718: ldc           #63
720: invokestatic  #59
723: aload         20
725: invokestatic  #56
728: new           #64
731: dup
732: invokespecial #65
735: ldc           #66
737: invokevirtual #67
740: aload         25
742: invokevirtual #68
745: ldc           #69
747: invokevirtual #67
750: getstatic     #70
753: invokevirtual #68
756: ldc           #66
758: invokevirtual #67
761: invokevirtual #71
764: aload         25
766: getstatic     #70
769: invokevirtual #72
772: invokestatic  #73
775: aload         27
777: invokestatic  #56
780: aload         27
782: invokestatic  #57
785: ldc           #63
787: invokestatic  #59
790: aload         27
792: invokestatic  #60
795: ldc           #63
797: invokestatic  #59
800: aload         28
802: invokestatic  #56
805: aload         30
807: invokestatic  #56
810: aload         31
812: invokestatic  #56
815: aload         33
817: invokestatic  #56
820: aload         37
822: invokestatic  #56
825: aload         37
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         37
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         39
847: invokestatic  #56
850: aload         39
852: invokestatic  #57
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #60
865: ldc           #74
867: invokestatic  #59
870: aload         40
872: invokestatic  #56
875: new           #64
878: dup
879: invokespecial #65
882: ldc           #66
884: invokevirtual #67
887: dload         44
889: invokevirtual #79
892: ldc           #69
894: invokevirtual #67
897: dconst_0
898: invokevirtual #79
901: ldc           #66
903: invokevirtual #67
906: invokevirtual #71
909: dload         44
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #73
924: aload         46
926: invokestatic  #106
929: new           #64
932: dup
933: invokespecial #65
936: ldc           #66
938: invokevirtual #67
941: iload         47
943: invokevirtual #102
946: ldc           #69
948: invokevirtual #67
951: iconst_0
952: invokevirtual #102
955: ldc           #66
957: invokevirtual #67
960: invokevirtual #71
963: iload         47
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #73
976: aload         48
978: invokestatic  #106
981: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 7210
End line: 7219
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker4 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', 1.0d);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker4;
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #10
37: new           #99
40: dup
41: ldc2_w        #24
44: dconst_1
45: invokespecial #116
48: astore_2
49: aload_1
50: aload_2
51: putfield      #140
54: aload_1
55: invokevirtual #167
58: istore_3
59: new           #64
62: dup
63: invokespecial #65
66: ldc           #66
68: invokevirtual #67
71: iload_3
72: invokevirtual #102
75: ldc           #69
77: invokevirtual #67
80: iconst_0
81: invokevirtual #102
84: ldc           #66
86: invokevirtual #67
89: invokevirtual #71
92: iload_3
93: ifne          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #73
104: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 7222
End line: 7308
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker83 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker83;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(doubleArray80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: getfield      #122
545: astore        46
547: new           #99
550: dup
551: dconst_0
552: ldc2_w        #95
555: invokespecial #116
558: astore        47
560: aload_1
561: aload         47
563: putfield      #140
566: aload_3
567: invokestatic  #56
570: aload_3
571: invokestatic  #57
574: ldc           #58
576: invokestatic  #59
579: aload_3
580: invokestatic  #60
583: ldc           #58
585: invokestatic  #59
588: aload         7
590: invokestatic  #56
593: aload         7
595: invokestatic  #57
598: ldc           #58
600: invokestatic  #59
603: aload         7
605: invokestatic  #60
608: ldc           #58
610: invokestatic  #59
613: aload         10
615: invokestatic  #56
618: aload         10
620: invokestatic  #61
623: ldc           #62
625: invokestatic  #59
628: aload         12
630: invokestatic  #56
633: aload         12
635: invokestatic  #57
638: ldc           #63
640: invokestatic  #59
643: aload         12
645: invokestatic  #60
648: ldc           #63
650: invokestatic  #59
653: aload         13
655: invokestatic  #56
658: new           #64
661: dup
662: invokespecial #65
665: ldc           #66
667: invokevirtual #67
670: aload         17
672: invokevirtual #68
675: ldc           #69
677: invokevirtual #67
680: getstatic     #70
683: invokevirtual #68
686: ldc           #66
688: invokevirtual #67
691: invokevirtual #71
694: aload         17
696: getstatic     #70
699: invokevirtual #72
702: invokestatic  #73
705: aload         19
707: invokestatic  #56
710: aload         19
712: invokestatic  #57
715: ldc           #63
717: invokestatic  #59
720: aload         19
722: invokestatic  #60
725: ldc           #63
727: invokestatic  #59
730: aload         20
732: invokestatic  #56
735: new           #64
738: dup
739: invokespecial #65
742: ldc           #66
744: invokevirtual #67
747: aload         25
749: invokevirtual #68
752: ldc           #69
754: invokevirtual #67
757: getstatic     #70
760: invokevirtual #68
763: ldc           #66
765: invokevirtual #67
768: invokevirtual #71
771: aload         25
773: getstatic     #70
776: invokevirtual #72
779: invokestatic  #73
782: aload         27
784: invokestatic  #56
787: aload         27
789: invokestatic  #57
792: ldc           #63
794: invokestatic  #59
797: aload         27
799: invokestatic  #60
802: ldc           #63
804: invokestatic  #59
807: aload         28
809: invokestatic  #56
812: aload         30
814: invokestatic  #56
817: aload         31
819: invokestatic  #56
822: aload         33
824: invokestatic  #56
827: aload         37
829: invokestatic  #56
832: aload         37
834: invokestatic  #57
837: ldc           #74
839: invokestatic  #59
842: aload         37
844: invokestatic  #60
847: ldc           #74
849: invokestatic  #59
852: aload         39
854: invokestatic  #56
857: aload         39
859: invokestatic  #57
862: ldc           #74
864: invokestatic  #59
867: aload         39
869: invokestatic  #60
872: ldc           #74
874: invokestatic  #59
877: aload         40
879: invokestatic  #56
882: new           #64
885: dup
886: invokespecial #65
889: ldc           #66
891: invokevirtual #67
894: dload         44
896: invokevirtual #79
899: ldc           #69
901: invokevirtual #67
904: dconst_0
905: invokevirtual #79
908: ldc           #66
910: invokevirtual #67
913: invokevirtual #71
916: dload         44
918: dconst_0
919: dcmpl
920: ifne          927
923: iconst_1
924: goto          928
927: iconst_0
928: invokestatic  #73
931: aload         46
933: invokestatic  #106
936: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 7311
End line: 7352
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.cost = 0.0d;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException17 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable20);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable20, localizable22, objArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException17, 0.0d, "hi!", objArray25);
        double[] doubleArray28 = functionEvaluationException27.getArgument();
        double[] doubleArray30 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair31 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray28, doubleArray30);
        levenbergMarquardtOptimizer15.point = doubleArray30;
        levenbergMarquardtOptimizer15.cost = 0L;
        double[] doubleArray40 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer15.targetValues = doubleArray40;
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray40;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 0.0, 10.0, 32.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: bipush        100
51: putfield      #105
54: aload_1
55: ldc2_w        #31
58: invokevirtual #94
61: aload_1
62: invokevirtual #10
65: aload_1
66: invokevirtual #110
69: istore_3
70: aload_1
71: invokevirtual #110
74: istore        4
76: aload_1
77: dconst_0
78: putfield      #97
81: new           #8
84: dup
85: invokespecial #9
88: astore        5
90: new           #81
93: dup
94: iconst_m1
95: invokespecial #82
98: astore        6
100: aconst_null
101: astore        7
103: new           #27
106: dup
107: aload         7
109: invokespecial #39
112: astore        8
114: aconst_null
115: astore        9
117: iconst_2
118: anewarray     #5
121: dup
122: iconst_0
123: ldc           #28
125: aastore
126: dup
127: iconst_1
128: iconst_1
129: invokestatic  #17
132: aastore
133: astore        10
135: new           #27
138: dup
139: aload         7
141: aload         9
143: aload         10
145: invokespecial #47
148: astore        11
150: new           #23
153: dup
154: aload         6
156: dconst_0
157: ldc           #28
159: aload         10
161: invokespecial #83
164: astore        12
166: aload         12
168: invokevirtual #84
171: astore        13
173: iconst_1
174: newarray       double
176: dup
177: iconst_0
178: ldc2_w        #85
181: dastore
182: astore        14
184: new           #87
187: dup
188: aload         13
190: aload         14
192: invokespecial #88
195: astore        15
197: aload         5
199: aload         14
201: putfield      #52
204: aload         5
206: dconst_0
207: putfield      #97
210: iconst_5
211: newarray       double
213: dup
214: iconst_0
215: ldc2_w        #95
218: dastore
219: dup
220: iconst_1
221: dconst_0
222: dastore
223: dup
224: iconst_2
225: ldc2_w        #33
228: dastore
229: dup
230: iconst_3
231: ldc2_w        #150
234: dastore
235: dup
236: iconst_4
237: dconst_1
238: dastore
239: astore        16
241: aload         5
243: aload         16
245: putfield      #152
248: aload_1
249: aload         16
251: putfield      #113
254: aload_2
255: invokestatic  #106
258: new           #64
261: dup
262: invokespecial #65
265: ldc           #66
267: invokevirtual #67
270: iload_3
271: invokevirtual #102
274: ldc           #69
276: invokevirtual #67
279: iconst_1
280: invokevirtual #102
283: ldc           #66
285: invokevirtual #67
288: invokevirtual #71
291: iload_3
292: iconst_1
293: if_icmpne     300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #73
304: new           #64
307: dup
308: invokespecial #65
311: ldc           #66
313: invokevirtual #67
316: iload         4
318: invokevirtual #102
321: ldc           #69
323: invokevirtual #67
326: iconst_1
327: invokevirtual #102
330: ldc           #66
332: invokevirtual #67
335: invokevirtual #71
338: iload         4
340: iconst_1
341: if_icmpne     348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #73
352: aload         10
354: invokestatic  #56
357: aload         10
359: invokestatic  #57
362: ldc           #74
364: invokestatic  #59
367: aload         10
369: invokestatic  #60
372: ldc           #74
374: invokestatic  #59
377: aload         13
379: invokestatic  #56
382: aload         13
384: invokestatic  #61
387: ldc           #90
389: invokestatic  #59
392: aload         14
394: invokestatic  #56
397: aload         14
399: invokestatic  #61
402: ldc           #91
404: invokestatic  #59
407: aload         16
409: invokestatic  #56
412: aload         16
414: invokestatic  #61
417: ldc           #153
419: invokestatic  #59
422: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 7355
End line: 7436
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        levenbergMarquardtOptimizer0.cost = (short) 0;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: dconst_0
537: putfield      #97
540: aload_3
541: invokestatic  #56
544: aload_3
545: invokestatic  #57
548: ldc           #58
550: invokestatic  #59
553: aload_3
554: invokestatic  #60
557: ldc           #58
559: invokestatic  #59
562: aload         7
564: invokestatic  #56
567: aload         7
569: invokestatic  #57
572: ldc           #58
574: invokestatic  #59
577: aload         7
579: invokestatic  #60
582: ldc           #58
584: invokestatic  #59
587: aload         10
589: invokestatic  #56
592: aload         10
594: invokestatic  #61
597: ldc           #62
599: invokestatic  #59
602: aload         12
604: invokestatic  #56
607: aload         12
609: invokestatic  #57
612: ldc           #63
614: invokestatic  #59
617: aload         12
619: invokestatic  #60
622: ldc           #63
624: invokestatic  #59
627: aload         13
629: invokestatic  #56
632: new           #64
635: dup
636: invokespecial #65
639: ldc           #66
641: invokevirtual #67
644: aload         17
646: invokevirtual #68
649: ldc           #69
651: invokevirtual #67
654: getstatic     #70
657: invokevirtual #68
660: ldc           #66
662: invokevirtual #67
665: invokevirtual #71
668: aload         17
670: getstatic     #70
673: invokevirtual #72
676: invokestatic  #73
679: aload         19
681: invokestatic  #56
684: aload         19
686: invokestatic  #57
689: ldc           #63
691: invokestatic  #59
694: aload         19
696: invokestatic  #60
699: ldc           #63
701: invokestatic  #59
704: aload         20
706: invokestatic  #56
709: new           #64
712: dup
713: invokespecial #65
716: ldc           #66
718: invokevirtual #67
721: aload         25
723: invokevirtual #68
726: ldc           #69
728: invokevirtual #67
731: getstatic     #70
734: invokevirtual #68
737: ldc           #66
739: invokevirtual #67
742: invokevirtual #71
745: aload         25
747: getstatic     #70
750: invokevirtual #72
753: invokestatic  #73
756: aload         27
758: invokestatic  #56
761: aload         27
763: invokestatic  #57
766: ldc           #63
768: invokestatic  #59
771: aload         27
773: invokestatic  #60
776: ldc           #63
778: invokestatic  #59
781: aload         28
783: invokestatic  #56
786: aload         30
788: invokestatic  #56
791: aload         31
793: invokestatic  #56
796: aload         33
798: invokestatic  #56
801: aload         37
803: invokestatic  #56
806: aload         37
808: invokestatic  #57
811: ldc           #74
813: invokestatic  #59
816: aload         37
818: invokestatic  #60
821: ldc           #74
823: invokestatic  #59
826: aload         39
828: invokestatic  #56
831: aload         39
833: invokestatic  #57
836: ldc           #74
838: invokestatic  #59
841: aload         39
843: invokestatic  #60
846: ldc           #74
848: invokestatic  #59
851: aload         40
853: invokestatic  #56
856: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 7439
End line: 7464
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #126
150: istore        12
152: aload         6
154: invokestatic  #56
157: aload         6
159: invokestatic  #57
162: ldc           #74
164: invokestatic  #59
167: aload         6
169: invokestatic  #60
172: ldc           #74
174: invokestatic  #59
177: aload         9
179: invokestatic  #56
182: aload         9
184: invokestatic  #61
187: ldc           #90
189: invokestatic  #59
192: aload         10
194: invokestatic  #56
197: aload         10
199: invokestatic  #61
202: ldc           #91
204: invokestatic  #59
207: new           #64
210: dup
211: invokespecial #65
214: ldc           #66
216: invokevirtual #67
219: iload         12
221: invokevirtual #102
224: ldc           #69
226: invokevirtual #67
229: iconst_0
230: invokevirtual #102
233: ldc           #66
235: invokevirtual #67
238: invokevirtual #71
241: iload         12
243: ifne          250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #73
254: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 7467
End line: 7479
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int4 = levenbergMarquardtOptimizer0.getIterations();
        int int5 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setOrthoTolerance((-1.0d));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #337
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: aload_1
44: invokevirtual #126
47: istore_3
48: aload_1
49: invokevirtual #126
52: istore        4
54: aload_1
55: ldc2_w        #31
58: invokevirtual #129
61: new           #64
64: dup
65: invokespecial #65
68: ldc           #66
70: invokevirtual #67
73: iload_2
74: invokevirtual #102
77: ldc           #69
79: invokevirtual #67
82: sipush        1000
85: invokevirtual #102
88: ldc           #66
90: invokevirtual #67
93: invokevirtual #71
96: iload_2
97: sipush        1000
100: if_icmpne     107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #73
111: new           #64
114: dup
115: invokespecial #65
118: ldc           #66
120: invokevirtual #67
123: iload_3
124: invokevirtual #102
127: ldc           #69
129: invokevirtual #67
132: iconst_0
133: invokevirtual #102
136: ldc           #66
138: invokevirtual #67
141: invokevirtual #71
144: iload_3
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #73
156: new           #64
159: dup
160: invokespecial #65
163: ldc           #66
165: invokevirtual #67
168: iload         4
170: invokevirtual #102
173: ldc           #69
175: invokevirtual #67
178: iconst_0
179: invokevirtual #102
182: ldc           #66
184: invokevirtual #67
187: invokevirtual #71
190: iload         4
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #73
203: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 7482
End line: 7570
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxIterations((int) ' ');
        levenbergMarquardtOptimizer0.rows = ' ';
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: bipush        32
533: invokevirtual #182
536: aload_1
537: bipush        32
539: putfield      #93
542: aload_1
543: invokevirtual #78
546: astore        44
548: ldc           #54
550: invokestatic  #13
553: goto          558
556: astore        44
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: return
Exception table:
from    to  target type
542   553   556   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 7573
End line: 7601
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 2147483647);
        int int25 = levenbergMarquardtOptimizer0.rows;
        int int26 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1000 + "'", int26 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: aload_1
133: ldc2_w        #340
136: invokevirtual #94
139: aload_1
140: getfield      #93
143: istore        8
145: aload_1
146: invokevirtual #98
149: istore        9
151: new           #64
154: dup
155: invokespecial #65
158: ldc           #66
160: invokevirtual #67
163: iload_2
164: invokevirtual #102
167: ldc           #69
169: invokevirtual #67
172: iconst_0
173: invokevirtual #102
176: ldc           #66
178: invokevirtual #67
181: invokevirtual #71
184: iload_2
185: ifne          192
188: iconst_1
189: goto          193
192: iconst_0
193: invokestatic  #73
196: new           #64
199: dup
200: invokespecial #65
203: ldc           #66
205: invokevirtual #67
208: iload_3
209: invokevirtual #102
212: ldc           #69
214: invokevirtual #67
217: iconst_0
218: invokevirtual #102
221: ldc           #66
223: invokevirtual #67
226: invokevirtual #71
229: iload_3
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #73
241: aload         4
243: invokestatic  #106
246: new           #64
249: dup
250: invokespecial #65
253: ldc           #66
255: invokevirtual #67
258: iload         6
260: invokevirtual #102
263: ldc           #69
265: invokevirtual #67
268: sipush        1000
271: invokevirtual #102
274: ldc           #66
276: invokevirtual #67
279: invokevirtual #71
282: iload         6
284: sipush        1000
287: if_icmpne     294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #73
298: new           #64
301: dup
302: invokespecial #65
305: ldc           #66
307: invokevirtual #67
310: iload         8
312: invokevirtual #102
315: ldc           #69
317: invokevirtual #67
320: iconst_0
321: invokevirtual #102
324: ldc           #66
326: invokevirtual #67
329: invokevirtual #71
332: iload         8
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #73
345: new           #64
348: dup
349: invokespecial #65
352: ldc           #66
354: invokevirtual #67
357: iload         9
359: invokevirtual #102
362: ldc           #69
364: invokevirtual #67
367: sipush        1000
370: invokevirtual #102
373: ldc           #66
375: invokevirtual #67
378: invokevirtual #71
381: iload         9
383: sipush        1000
386: if_icmpne     393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #73
397: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 7604
End line: 7694
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        levenbergMarquardtOptimizer0.cost = 1L;
        levenbergMarquardtOptimizer0.setMaxEvaluations(10);
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker88 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #342
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: bipush        35
550: invokevirtual #76
553: aload_1
554: dconst_1
555: putfield      #97
558: aload_1
559: bipush        10
561: invokevirtual #76
564: aload_1
565: invokevirtual #10
568: aload_1
569: getfield      #140
572: astore        47
574: aload_3
575: invokestatic  #56
578: aload_3
579: invokestatic  #57
582: ldc           #58
584: invokestatic  #59
587: aload_3
588: invokestatic  #60
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #56
601: aload         7
603: invokestatic  #57
606: ldc           #58
608: invokestatic  #59
611: aload         7
613: invokestatic  #60
616: ldc           #58
618: invokestatic  #59
621: aload         10
623: invokestatic  #56
626: aload         10
628: invokestatic  #61
631: ldc           #62
633: invokestatic  #59
636: aload         12
638: invokestatic  #56
641: aload         12
643: invokestatic  #57
646: ldc           #63
648: invokestatic  #59
651: aload         12
653: invokestatic  #60
656: ldc           #63
658: invokestatic  #59
661: aload         13
663: invokestatic  #56
666: new           #64
669: dup
670: invokespecial #65
673: ldc           #66
675: invokevirtual #67
678: aload         17
680: invokevirtual #68
683: ldc           #69
685: invokevirtual #67
688: getstatic     #70
691: invokevirtual #68
694: ldc           #66
696: invokevirtual #67
699: invokevirtual #71
702: aload         17
704: getstatic     #70
707: invokevirtual #72
710: invokestatic  #73
713: aload         19
715: invokestatic  #56
718: aload         19
720: invokestatic  #57
723: ldc           #63
725: invokestatic  #59
728: aload         19
730: invokestatic  #60
733: ldc           #63
735: invokestatic  #59
738: aload         20
740: invokestatic  #56
743: new           #64
746: dup
747: invokespecial #65
750: ldc           #66
752: invokevirtual #67
755: aload         25
757: invokevirtual #68
760: ldc           #69
762: invokevirtual #67
765: getstatic     #70
768: invokevirtual #68
771: ldc           #66
773: invokevirtual #67
776: invokevirtual #71
779: aload         25
781: getstatic     #70
784: invokevirtual #72
787: invokestatic  #73
790: aload         27
792: invokestatic  #56
795: aload         27
797: invokestatic  #57
800: ldc           #63
802: invokestatic  #59
805: aload         27
807: invokestatic  #60
810: ldc           #63
812: invokestatic  #59
815: aload         28
817: invokestatic  #56
820: aload         30
822: invokestatic  #56
825: aload         31
827: invokestatic  #56
830: aload         33
832: invokestatic  #56
835: aload         37
837: invokestatic  #56
840: aload         37
842: invokestatic  #57
845: ldc           #74
847: invokestatic  #59
850: aload         37
852: invokestatic  #60
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #56
865: aload         39
867: invokestatic  #57
870: ldc           #74
872: invokestatic  #59
875: aload         39
877: invokestatic  #60
880: ldc           #74
882: invokestatic  #59
885: aload         40
887: invokestatic  #56
890: new           #64
893: dup
894: invokespecial #65
897: ldc           #66
899: invokevirtual #67
902: dload         44
904: invokevirtual #79
907: ldc           #69
909: invokevirtual #67
912: dconst_0
913: invokevirtual #79
916: ldc           #66
918: invokevirtual #67
921: invokevirtual #71
924: dload         44
926: dconst_0
927: dcmpl
928: ifne          935
931: iconst_1
932: goto          936
935: iconst_0
936: invokestatic  #73
939: new           #64
942: dup
943: invokespecial #65
946: ldc           #66
948: invokevirtual #67
951: iload         46
953: invokevirtual #102
956: ldc           #69
958: invokevirtual #67
961: sipush        1000
964: invokevirtual #102
967: ldc           #66
969: invokevirtual #67
972: invokevirtual #71
975: iload         46
977: sipush        1000
980: if_icmpne     987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #73
991: aload         47
993: invokestatic  #106
996: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 7697
End line: 7724
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        double double21 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #77
156: dstore        13
158: aload         6
160: invokestatic  #56
163: aload         6
165: invokestatic  #57
168: ldc           #74
170: invokestatic  #59
173: aload         6
175: invokestatic  #60
178: ldc           #74
180: invokestatic  #59
183: aload         9
185: invokestatic  #56
188: aload         9
190: invokestatic  #61
193: ldc           #90
195: invokestatic  #59
198: aload         10
200: invokestatic  #56
203: aload         10
205: invokestatic  #61
208: ldc           #91
210: invokestatic  #59
213: new           #64
216: dup
217: invokespecial #65
220: ldc           #66
222: invokevirtual #67
225: iload         12
227: invokevirtual #102
230: ldc           #69
232: invokevirtual #67
235: sipush        1000
238: invokevirtual #102
241: ldc           #66
243: invokevirtual #67
246: invokevirtual #71
249: iload         12
251: sipush        1000
254: if_icmpne     261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #73
265: new           #64
268: dup
269: invokespecial #65
272: ldc           #66
274: invokevirtual #67
277: dload         13
279: invokevirtual #79
282: ldc           #69
284: invokevirtual #67
287: dconst_0
288: invokevirtual #79
291: ldc           #66
293: invokevirtual #67
296: invokevirtual #71
299: dload         13
301: dconst_0
302: dcmpl
303: ifne          310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #73
314: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 7727
End line: 7828
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38);
        double[] doubleArray41 = functionEvaluationException40.getArgument();
        double[] doubleArray43 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61);
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73);
        java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        java.lang.Object[] objArray88 = mathRuntimeException87.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray41;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int94 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[][] doubleArray95 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(nullPointerException79);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89);
        org.junit.Assert.assertNull(vectorialConvergenceChecker93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97);
        org.junit.Assert.assertNull(doubleArray95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aconst_null
50: astore_2
51: iconst_5
52: anewarray     #5
55: dup
56: iconst_0
57: iconst_0
58: invokestatic  #16
61: aastore
62: dup
63: iconst_1
64: iconst_0
65: invokestatic  #17
68: aastore
69: dup
70: iconst_2
71: bipush        52
73: invokestatic  #18
76: aastore
77: dup
78: iconst_3
79: ldc2_w        #19
82: invokestatic  #21
85: aastore
86: dup
87: iconst_4
88: dconst_1
89: invokestatic  #22
92: aastore
93: astore_3
94: new           #23
97: dup
98: ldc2_w        #24
101: aload_2
102: aload_3
103: invokespecial #26
106: astore        4
108: new           #27
111: dup
112: ldc           #28
114: aload_3
115: invokespecial #29
118: astore        5
120: aconst_null
121: astore        6
123: iconst_5
124: anewarray     #5
127: dup
128: iconst_0
129: iconst_0
130: invokestatic  #16
133: aastore
134: dup
135: iconst_1
136: iconst_0
137: invokestatic  #17
140: aastore
141: dup
142: iconst_2
143: bipush        52
145: invokestatic  #18
148: aastore
149: dup
150: iconst_3
151: ldc2_w        #19
154: invokestatic  #21
157: aastore
158: dup
159: iconst_4
160: dconst_1
161: invokestatic  #22
164: aastore
165: astore        7
167: new           #23
170: dup
171: ldc2_w        #24
174: aload         6
176: aload         7
178: invokespecial #26
181: astore        8
183: new           #27
186: dup
187: aload         5
189: ldc           #28
191: aload         7
193: invokespecial #30
196: astore        9
198: new           #81
201: dup
202: iconst_m1
203: invokespecial #82
206: astore        10
208: aconst_null
209: astore        11
211: new           #27
214: dup
215: aload         11
217: invokespecial #39
220: astore        12
222: aconst_null
223: astore        13
225: iconst_2
226: anewarray     #5
229: dup
230: iconst_0
231: ldc           #28
233: aastore
234: dup
235: iconst_1
236: iconst_1
237: invokestatic  #17
240: aastore
241: astore        14
243: new           #27
246: dup
247: aload         11
249: aload         13
251: aload         14
253: invokespecial #47
256: astore        15
258: new           #23
261: dup
262: aload         10
264: dconst_0
265: ldc           #28
267: aload         14
269: invokespecial #83
272: astore        16
274: aload         16
276: invokevirtual #84
279: astore        17
281: iconst_1
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #85
289: dastore
290: astore        18
292: new           #87
295: dup
296: aload         17
298: aload         18
300: invokespecial #88
303: astore        19
305: aconst_null
306: astore        20
308: iconst_1
309: anewarray     #5
312: dup
313: iconst_0
314: iconst_1
315: invokestatic  #35
318: aastore
319: astore        21
321: ldc           #28
323: aload         21
325: invokestatic  #36
328: astore        22
330: new           #37
333: dup
334: bipush        100
336: aload         20
338: aload         21
340: invokespecial #38
343: astore        23
345: aconst_null
346: astore        24
348: new           #27
351: dup
352: aload         24
354: invokespecial #39
357: astore        25
359: aload         25
361: invokevirtual #40
364: astore        26
366: aconst_null
367: astore        27
369: iconst_1
370: anewarray     #5
373: dup
374: iconst_0
375: iconst_1
376: invokestatic  #35
379: aastore
380: astore        28
382: ldc           #28
384: aload         28
386: invokestatic  #36
389: astore        29
391: new           #37
394: dup
395: bipush        100
397: aload         27
399: aload         28
401: invokespecial #38
404: astore        30
406: aconst_null
407: astore        31
409: aconst_null
410: astore        32
412: new           #27
415: dup
416: aload         32
418: invokespecial #39
421: astore        33
423: aload         33
425: invokevirtual #40
428: astore        34
430: aconst_null
431: astore        35
433: iconst_1
434: anewarray     #5
437: dup
438: iconst_0
439: iconst_1
440: invokestatic  #35
443: aastore
444: astore        36
446: ldc           #28
448: aload         36
450: invokestatic  #36
453: astore        37
455: new           #37
458: dup
459: bipush        100
461: aload         35
463: aload         36
465: invokespecial #38
468: astore        38
470: aload         34
472: aload         36
474: invokestatic  #41
477: astore        39
479: ldc           #42
481: aload         36
483: invokestatic  #43
486: astore        40
488: new           #44
491: dup
492: aload         30
494: aload         31
496: aload         36
498: invokespecial #45
501: astore        41
503: aload         26
505: aload         36
507: invokestatic  #46
510: astore        42
512: aconst_null
513: astore        43
515: new           #27
518: dup
519: aload         43
521: invokespecial #39
524: astore        44
526: aconst_null
527: astore        45
529: iconst_2
530: anewarray     #5
533: dup
534: iconst_0
535: ldc           #28
537: aastore
538: dup
539: iconst_1
540: iconst_1
541: invokestatic  #17
544: aastore
545: astore        46
547: new           #27
550: dup
551: aload         43
553: aload         45
555: aload         46
557: invokespecial #47
560: astore        47
562: aload         47
564: invokevirtual #48
567: astore        48
569: ldc           #42
571: aload         48
573: invokestatic  #49
576: astore        49
578: new           #23
581: dup
582: aload         23
584: dconst_0
585: aload         26
587: aload         48
589: invokespecial #50
592: astore        50
594: new           #23
597: dup
598: aload         5
600: aload         17
602: ldc           #142
604: aload         48
606: invokespecial #283
609: astore        51
611: aload_1
612: aload         17
614: putfield      #113
617: aload_1
618: invokevirtual #104
621: astore        52
623: aload_1
624: invokevirtual #110
627: istore        53
629: aload_1
630: getfield      #131
633: astore        54
635: aload_3
636: invokestatic  #56
639: aload_3
640: invokestatic  #57
643: ldc           #58
645: invokestatic  #59
648: aload_3
649: invokestatic  #60
652: ldc           #58
654: invokestatic  #59
657: aload         7
659: invokestatic  #56
662: aload         7
664: invokestatic  #57
667: ldc           #58
669: invokestatic  #59
672: aload         7
674: invokestatic  #60
677: ldc           #58
679: invokestatic  #59
682: aload         14
684: invokestatic  #56
687: aload         14
689: invokestatic  #57
692: ldc           #74
694: invokestatic  #59
697: aload         14
699: invokestatic  #60
702: ldc           #74
704: invokestatic  #59
707: aload         17
709: invokestatic  #56
712: aload         17
714: invokestatic  #61
717: ldc           #90
719: invokestatic  #59
722: aload         18
724: invokestatic  #56
727: aload         18
729: invokestatic  #61
732: ldc           #91
734: invokestatic  #59
737: aload         21
739: invokestatic  #56
742: aload         21
744: invokestatic  #57
747: ldc           #63
749: invokestatic  #59
752: aload         21
754: invokestatic  #60
757: ldc           #63
759: invokestatic  #59
762: aload         22
764: invokestatic  #56
767: new           #64
770: dup
771: invokespecial #65
774: ldc           #66
776: invokevirtual #67
779: aload         26
781: invokevirtual #68
784: ldc           #69
786: invokevirtual #67
789: getstatic     #70
792: invokevirtual #68
795: ldc           #66
797: invokevirtual #67
800: invokevirtual #71
803: aload         26
805: getstatic     #70
808: invokevirtual #72
811: invokestatic  #73
814: aload         28
816: invokestatic  #56
819: aload         28
821: invokestatic  #57
824: ldc           #63
826: invokestatic  #59
829: aload         28
831: invokestatic  #60
834: ldc           #63
836: invokestatic  #59
839: aload         29
841: invokestatic  #56
844: new           #64
847: dup
848: invokespecial #65
851: ldc           #66
853: invokevirtual #67
856: aload         34
858: invokevirtual #68
861: ldc           #69
863: invokevirtual #67
866: getstatic     #70
869: invokevirtual #68
872: ldc           #66
874: invokevirtual #67
877: invokevirtual #71
880: aload         34
882: getstatic     #70
885: invokevirtual #72
888: invokestatic  #73
891: aload         36
893: invokestatic  #56
896: aload         36
898: invokestatic  #57
901: ldc           #63
903: invokestatic  #59
906: aload         36
908: invokestatic  #60
911: ldc           #63
913: invokestatic  #59
916: aload         37
918: invokestatic  #56
921: aload         39
923: invokestatic  #56
926: aload         40
928: invokestatic  #56
931: aload         42
933: invokestatic  #56
936: aload         46
938: invokestatic  #56
941: aload         46
943: invokestatic  #57
946: ldc           #74
948: invokestatic  #59
951: aload         46
953: invokestatic  #60
956: ldc           #74
958: invokestatic  #59
961: aload         48
963: invokestatic  #56
966: aload         48
968: invokestatic  #57
971: ldc           #74
973: invokestatic  #59
976: aload         48
978: invokestatic  #60
981: ldc           #74
983: invokestatic  #59
986: aload         49
988: invokestatic  #56
991: aload         52
993: invokestatic  #106
996: new           #64
999: dup
1000: invokespecial #65
1003: ldc           #66
1005: invokevirtual #67
1008: iload         53
1010: invokevirtual #102
1013: ldc           #69
1015: invokevirtual #67
1018: bipush        97
1020: invokevirtual #102
1023: ldc           #66
1025: invokevirtual #67
1028: invokevirtual #71
1031: iload         53
1033: bipush        97
1035: if_icmpne     1042
1038: iconst_1
1039: goto          1043
1042: iconst_0
1043: invokestatic  #73
1046: aload         54
1048: invokestatic  #106
1051: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 7831
End line: 7862
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #78
151: astore        13
153: ldc           #54
155: invokestatic  #13
158: goto          163
161: astore        13
163: aload         6
165: invokestatic  #56
168: aload         6
170: invokestatic  #57
173: ldc           #74
175: invokestatic  #59
178: aload         6
180: invokestatic  #60
183: ldc           #74
185: invokestatic  #59
188: aload         9
190: invokestatic  #56
193: aload         9
195: invokestatic  #61
198: ldc           #90
200: invokestatic  #59
203: aload         10
205: invokestatic  #56
208: aload         10
210: invokestatic  #61
213: ldc           #91
215: invokestatic  #59
218: aload         12
220: invokestatic  #106
223: return
Exception table:
from    to  target type
147   158   161   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 7865
End line: 7880
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.cost = 10.0d;
        int int14 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: ldc2_w        #33
79: putfield      #97
82: aload_1
83: invokevirtual #133
86: istore        4
88: new           #64
91: dup
92: invokespecial #65
95: ldc           #66
97: invokevirtual #67
100: iload_2
101: invokevirtual #102
104: ldc           #69
106: invokevirtual #67
109: sipush        1000
112: invokevirtual #102
115: ldc           #66
117: invokevirtual #67
120: invokevirtual #71
123: iload_2
124: sipush        1000
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #73
138: new           #64
141: dup
142: invokespecial #65
145: ldc           #66
147: invokevirtual #67
150: iload         4
152: invokevirtual #102
155: ldc           #69
157: invokevirtual #67
160: iconst_0
161: invokevirtual #102
164: ldc           #66
166: invokevirtual #67
169: invokevirtual #71
172: iload         4
174: ifne          181
177: iconst_1
178: goto          182
181: iconst_0
182: invokestatic  #73
185: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 7883
End line: 7909
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 0.0f);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker25);
        levenbergMarquardtOptimizer0.cost = (-1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: new           #99
135: dup
136: dconst_0
137: dconst_0
138: invokespecial #116
141: astore        8
143: aload_1
144: aload         8
146: invokevirtual #101
149: aload_1
150: ldc2_w        #31
153: putfield      #97
156: new           #64
159: dup
160: invokespecial #65
163: ldc           #66
165: invokevirtual #67
168: iload_2
169: invokevirtual #102
172: ldc           #69
174: invokevirtual #67
177: iconst_0
178: invokevirtual #102
181: ldc           #66
183: invokevirtual #67
186: invokevirtual #71
189: iload_2
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #73
201: new           #64
204: dup
205: invokespecial #65
208: ldc           #66
210: invokevirtual #67
213: iload_3
214: invokevirtual #102
217: ldc           #69
219: invokevirtual #67
222: iconst_0
223: invokevirtual #102
226: ldc           #66
228: invokevirtual #67
231: invokevirtual #71
234: iload_3
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #73
246: aload         4
248: invokestatic  #106
251: new           #64
254: dup
255: invokespecial #65
258: ldc           #66
260: invokevirtual #67
263: iload         6
265: invokevirtual #102
268: ldc           #69
270: invokevirtual #67
273: sipush        1000
276: invokevirtual #102
279: ldc           #66
281: invokevirtual #67
284: invokevirtual #71
287: iload         6
289: sipush        1000
292: if_icmpne     299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #73
303: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 7912
End line: 7922
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations(0);
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: aload_1
44: iconst_0
45: invokevirtual #76
48: aload_1
49: invokevirtual #167
52: istore_3
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: sipush        1000
77: invokevirtual #102
80: ldc           #66
82: invokevirtual #67
85: invokevirtual #71
88: iload_2
89: sipush        1000
92: if_icmpne     99
95: iconst_1
96: goto          100
99: iconst_0
100: invokestatic  #73
103: new           #64
106: dup
107: invokespecial #65
110: ldc           #66
112: invokevirtual #67
115: iload_3
116: invokevirtual #102
119: ldc           #69
121: invokevirtual #67
124: iconst_0
125: invokevirtual #102
128: ldc           #66
130: invokevirtual #67
133: invokevirtual #71
136: iload_3
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #73
148: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 7925
End line: 8014
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        levenbergMarquardtOptimizer0.cost = 1L;
        levenbergMarquardtOptimizer0.setMaxEvaluations(10);
        int int87 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #349
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: bipush        35
550: invokevirtual #76
553: aload_1
554: dconst_1
555: putfield      #97
558: aload_1
559: bipush        10
561: invokevirtual #76
564: aload_1
565: invokevirtual #110
568: istore        47
570: aload_3
571: invokestatic  #56
574: aload_3
575: invokestatic  #57
578: ldc           #58
580: invokestatic  #59
583: aload_3
584: invokestatic  #60
587: ldc           #58
589: invokestatic  #59
592: aload         7
594: invokestatic  #56
597: aload         7
599: invokestatic  #57
602: ldc           #58
604: invokestatic  #59
607: aload         7
609: invokestatic  #60
612: ldc           #58
614: invokestatic  #59
617: aload         10
619: invokestatic  #56
622: aload         10
624: invokestatic  #61
627: ldc           #62
629: invokestatic  #59
632: aload         12
634: invokestatic  #56
637: aload         12
639: invokestatic  #57
642: ldc           #63
644: invokestatic  #59
647: aload         12
649: invokestatic  #60
652: ldc           #63
654: invokestatic  #59
657: aload         13
659: invokestatic  #56
662: new           #64
665: dup
666: invokespecial #65
669: ldc           #66
671: invokevirtual #67
674: aload         17
676: invokevirtual #68
679: ldc           #69
681: invokevirtual #67
684: getstatic     #70
687: invokevirtual #68
690: ldc           #66
692: invokevirtual #67
695: invokevirtual #71
698: aload         17
700: getstatic     #70
703: invokevirtual #72
706: invokestatic  #73
709: aload         19
711: invokestatic  #56
714: aload         19
716: invokestatic  #57
719: ldc           #63
721: invokestatic  #59
724: aload         19
726: invokestatic  #60
729: ldc           #63
731: invokestatic  #59
734: aload         20
736: invokestatic  #56
739: new           #64
742: dup
743: invokespecial #65
746: ldc           #66
748: invokevirtual #67
751: aload         25
753: invokevirtual #68
756: ldc           #69
758: invokevirtual #67
761: getstatic     #70
764: invokevirtual #68
767: ldc           #66
769: invokevirtual #67
772: invokevirtual #71
775: aload         25
777: getstatic     #70
780: invokevirtual #72
783: invokestatic  #73
786: aload         27
788: invokestatic  #56
791: aload         27
793: invokestatic  #57
796: ldc           #63
798: invokestatic  #59
801: aload         27
803: invokestatic  #60
806: ldc           #63
808: invokestatic  #59
811: aload         28
813: invokestatic  #56
816: aload         30
818: invokestatic  #56
821: aload         31
823: invokestatic  #56
826: aload         33
828: invokestatic  #56
831: aload         37
833: invokestatic  #56
836: aload         37
838: invokestatic  #57
841: ldc           #74
843: invokestatic  #59
846: aload         37
848: invokestatic  #60
851: ldc           #74
853: invokestatic  #59
856: aload         39
858: invokestatic  #56
861: aload         39
863: invokestatic  #57
866: ldc           #74
868: invokestatic  #59
871: aload         39
873: invokestatic  #60
876: ldc           #74
878: invokestatic  #59
881: aload         40
883: invokestatic  #56
886: new           #64
889: dup
890: invokespecial #65
893: ldc           #66
895: invokevirtual #67
898: dload         44
900: invokevirtual #79
903: ldc           #69
905: invokevirtual #67
908: dconst_0
909: invokevirtual #79
912: ldc           #66
914: invokevirtual #67
917: invokevirtual #71
920: dload         44
922: dconst_0
923: dcmpl
924: ifne          931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #73
935: new           #64
938: dup
939: invokespecial #65
942: ldc           #66
944: invokevirtual #67
947: iload         46
949: invokevirtual #102
952: ldc           #69
954: invokevirtual #67
957: sipush        1000
960: invokevirtual #102
963: ldc           #66
965: invokevirtual #67
968: invokevirtual #71
971: iload         46
973: sipush        1000
976: if_icmpne     983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #73
987: new           #64
990: dup
991: invokespecial #65
994: ldc           #66
996: invokevirtual #67
999: iload         47
1001: invokevirtual #102
1004: ldc           #69
1006: invokevirtual #67
1009: bipush        10
1011: invokevirtual #102
1014: ldc           #66
1016: invokevirtual #67
1019: invokevirtual #71
1022: iload         47
1024: bipush        10
1026: if_icmpne     1033
1029: iconst_1
1030: goto          1034
1033: iconst_0
1034: invokestatic  #73
1037: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 8017
End line: 8029
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray7 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: invokevirtual #110
52: istore_3
53: aload_1
54: getfield      #152
57: astore        4
59: aload_2
60: invokestatic  #106
63: new           #64
66: dup
67: invokespecial #65
70: ldc           #66
72: invokevirtual #67
75: iload_3
76: invokevirtual #102
79: ldc           #69
81: invokevirtual #67
84: iconst_1
85: invokevirtual #102
88: ldc           #66
90: invokevirtual #67
93: invokevirtual #71
96: iload_3
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #73
109: aload         4
111: invokestatic  #106
114: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 8032
End line: 8085
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        int int5 = levenbergMarquardtOptimizer0.rows;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        double[] doubleArray25 = functionEvaluationException23.getArgument();
        levenbergMarquardtOptimizer6.objective = doubleArray25;
        levenbergMarquardtOptimizer6.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker29 = levenbergMarquardtOptimizer6.checker;
        levenbergMarquardtOptimizer6.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        double[] doubleArray45 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair46 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray45);
        levenbergMarquardtOptimizer6.residuals = doubleArray43;
        levenbergMarquardtOptimizer0.objective = doubleArray43;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #351
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: getfield      #93
47: istore_2
48: new           #8
51: dup
52: invokespecial #9
55: astore_3
56: aload_3
57: iconst_0
58: putfield      #93
61: aload_3
62: iconst_1
63: invokevirtual #76
66: aload_3
67: getfield      #113
70: astore        4
72: new           #81
75: dup
76: iconst_m1
77: invokespecial #82
80: astore        5
82: aconst_null
83: astore        6
85: new           #27
88: dup
89: aload         6
91: invokespecial #39
94: astore        7
96: aconst_null
97: astore        8
99: iconst_2
100: anewarray     #5
103: dup
104: iconst_0
105: ldc           #28
107: aastore
108: dup
109: iconst_1
110: iconst_1
111: invokestatic  #17
114: aastore
115: astore        9
117: new           #27
120: dup
121: aload         6
123: aload         8
125: aload         9
127: invokespecial #47
130: astore        10
132: new           #23
135: dup
136: aload         5
138: dconst_0
139: ldc           #28
141: aload         9
143: invokespecial #83
146: astore        11
148: aload         11
150: invokevirtual #84
153: astore        12
155: aload         11
157: invokevirtual #84
160: astore        13
162: aload_3
163: aload         13
165: putfield      #114
168: aload_3
169: sipush        1000
172: invokevirtual #76
175: aload_3
176: getfield      #140
179: astore        14
181: aload_3
182: invokevirtual #10
185: new           #81
188: dup
189: iconst_m1
190: invokespecial #82
193: astore        15
195: aconst_null
196: astore        16
198: new           #27
201: dup
202: aload         16
204: invokespecial #39
207: astore        17
209: aconst_null
210: astore        18
212: iconst_2
213: anewarray     #5
216: dup
217: iconst_0
218: ldc           #28
220: aastore
221: dup
222: iconst_1
223: iconst_1
224: invokestatic  #17
227: aastore
228: astore        19
230: new           #27
233: dup
234: aload         16
236: aload         18
238: aload         19
240: invokespecial #47
243: astore        20
245: new           #23
248: dup
249: aload         15
251: dconst_0
252: ldc           #28
254: aload         19
256: invokespecial #83
259: astore        21
261: aload         21
263: invokevirtual #84
266: astore        22
268: iconst_1
269: newarray       double
271: dup
272: iconst_0
273: ldc2_w        #85
276: dastore
277: astore        23
279: new           #87
282: dup
283: aload         22
285: aload         23
287: invokespecial #88
290: astore        24
292: aload_3
293: aload         22
295: putfield      #122
298: aload_1
299: aload         22
301: putfield      #114
304: new           #64
307: dup
308: invokespecial #65
311: ldc           #66
313: invokevirtual #67
316: iload_2
317: invokevirtual #102
320: ldc           #69
322: invokevirtual #67
325: iconst_0
326: invokevirtual #102
329: ldc           #66
331: invokevirtual #67
334: invokevirtual #71
337: iload_2
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #73
349: aload         4
351: invokestatic  #106
354: aload         9
356: invokestatic  #56
359: aload         9
361: invokestatic  #57
364: ldc           #74
366: invokestatic  #59
369: aload         9
371: invokestatic  #60
374: ldc           #74
376: invokestatic  #59
379: aload         12
381: invokestatic  #56
384: aload         12
386: invokestatic  #61
389: ldc           #90
391: invokestatic  #59
394: aload         13
396: invokestatic  #56
399: aload         13
401: invokestatic  #61
404: ldc           #90
406: invokestatic  #59
409: aload         14
411: invokestatic  #106
414: aload         19
416: invokestatic  #56
419: aload         19
421: invokestatic  #57
424: ldc           #74
426: invokestatic  #59
429: aload         19
431: invokestatic  #60
434: ldc           #74
436: invokestatic  #59
439: aload         22
441: invokestatic  #56
444: aload         22
446: invokestatic  #61
449: ldc           #90
451: invokestatic  #59
454: aload         23
456: invokestatic  #56
459: aload         23
461: invokestatic  #61
464: ldc           #91
466: invokestatic  #59
469: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 8088
End line: 8101
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L);
        double[] doubleArray8 = levenbergMarquardtOptimizer0.residualsWeights;
        int int9 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #352
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: dconst_0
50: invokevirtual #129
53: aload_1
54: getfield      #113
57: astore_3
58: aload_1
59: invokevirtual #167
62: istore        4
64: aload_2
65: invokestatic  #106
68: aload_3
69: invokestatic  #106
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: iload         4
86: invokevirtual #102
89: ldc           #69
91: invokevirtual #67
94: iconst_0
95: invokevirtual #102
98: ldc           #66
100: invokevirtual #67
103: invokevirtual #71
106: iload         4
108: ifne          115
111: iconst_1
112: goto          116
115: iconst_0
116: invokestatic  #73
119: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 8104
End line: 8117
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        double[] doubleArray6 = new double[] {};
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(doubleArray6);
        levenbergMarquardtOptimizer0.targetValues = doubleArray6;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #98
47: istore_2
48: iconst_0
49: newarray       double
51: astore_3
52: new           #23
55: dup
56: aload_3
57: invokespecial #89
60: astore        4
62: aload_1
63: aload_3
64: putfield      #152
67: new           #64
70: dup
71: invokespecial #65
74: ldc           #66
76: invokevirtual #67
79: iload_2
80: invokevirtual #102
83: ldc           #69
85: invokevirtual #67
88: sipush        1000
91: invokevirtual #102
94: ldc           #66
96: invokevirtual #67
99: invokevirtual #71
102: iload_2
103: sipush        1000
106: if_icmpne     113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #73
117: aload_3
118: invokestatic  #56
121: aload_3
122: invokestatic  #61
125: ldc           #172
127: invokestatic  #59
130: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 8120
End line: 8202
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer22.rows = 0;
        levenbergMarquardtOptimizer22.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray27 = levenbergMarquardtOptimizer22.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException29 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32);
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable32, localizable34, objArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException29, 0.0d, "hi!", objArray37);
        double[] doubleArray40 = functionEvaluationException39.getArgument();
        double[] doubleArray41 = functionEvaluationException39.getArgument();
        levenbergMarquardtOptimizer22.objective = doubleArray41;
        levenbergMarquardtOptimizer22.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker45 = levenbergMarquardtOptimizer22.checker;
        levenbergMarquardtOptimizer22.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException48 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable51, localizable53, objArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException48, 0.0d, "hi!", objArray56);
        double[] doubleArray59 = functionEvaluationException58.getArgument();
        double[] doubleArray61 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray61);
        levenbergMarquardtOptimizer22.residuals = doubleArray59;
        levenbergMarquardtOptimizer0.objective = doubleArray59;
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateJacobian();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: invokevirtual #167
163: istore        15
165: new           #8
168: dup
169: invokespecial #9
172: astore        16
174: aload         16
176: iconst_0
177: putfield      #93
180: aload         16
182: iconst_1
183: invokevirtual #76
186: aload         16
188: getfield      #113
191: astore        17
193: new           #81
196: dup
197: iconst_m1
198: invokespecial #82
201: astore        18
203: aconst_null
204: astore        19
206: new           #27
209: dup
210: aload         19
212: invokespecial #39
215: astore        20
217: aconst_null
218: astore        21
220: iconst_2
221: anewarray     #5
224: dup
225: iconst_0
226: ldc           #28
228: aastore
229: dup
230: iconst_1
231: iconst_1
232: invokestatic  #17
235: aastore
236: astore        22
238: new           #27
241: dup
242: aload         19
244: aload         21
246: aload         22
248: invokespecial #47
251: astore        23
253: new           #23
256: dup
257: aload         18
259: dconst_0
260: ldc           #28
262: aload         22
264: invokespecial #83
267: astore        24
269: aload         24
271: invokevirtual #84
274: astore        25
276: aload         24
278: invokevirtual #84
281: astore        26
283: aload         16
285: aload         26
287: putfield      #114
290: aload         16
292: sipush        1000
295: invokevirtual #76
298: aload         16
300: getfield      #140
303: astore        27
305: aload         16
307: invokevirtual #10
310: new           #81
313: dup
314: iconst_m1
315: invokespecial #82
318: astore        28
320: aconst_null
321: astore        29
323: new           #27
326: dup
327: aload         29
329: invokespecial #39
332: astore        30
334: aconst_null
335: astore        31
337: iconst_2
338: anewarray     #5
341: dup
342: iconst_0
343: ldc           #28
345: aastore
346: dup
347: iconst_1
348: iconst_1
349: invokestatic  #17
352: aastore
353: astore        32
355: new           #27
358: dup
359: aload         29
361: aload         31
363: aload         32
365: invokespecial #47
368: astore        33
370: new           #23
373: dup
374: aload         28
376: dconst_0
377: ldc           #28
379: aload         32
381: invokespecial #83
384: astore        34
386: aload         34
388: invokevirtual #84
391: astore        35
393: iconst_1
394: newarray       double
396: dup
397: iconst_0
398: ldc2_w        #85
401: dastore
402: astore        36
404: new           #87
407: dup
408: aload         35
410: aload         36
412: invokespecial #88
415: astore        37
417: aload         16
419: aload         35
421: putfield      #122
424: aload_1
425: aload         35
427: putfield      #114
430: aload_1
431: invokevirtual #165
434: ldc           #54
436: invokestatic  #13
439: goto          444
442: astore        38
444: aload         6
446: invokestatic  #56
449: aload         6
451: invokestatic  #57
454: ldc           #74
456: invokestatic  #59
459: aload         6
461: invokestatic  #60
464: ldc           #74
466: invokestatic  #59
469: aload         9
471: invokestatic  #56
474: aload         9
476: invokestatic  #61
479: ldc           #90
481: invokestatic  #59
484: aload         10
486: invokestatic  #56
489: aload         10
491: invokestatic  #61
494: ldc           #91
496: invokestatic  #59
499: aload         12
501: invokestatic  #106
504: new           #64
507: dup
508: invokespecial #65
511: ldc           #66
513: invokevirtual #67
516: iload         13
518: invokevirtual #102
521: ldc           #69
523: invokevirtual #67
526: iconst_0
527: invokevirtual #102
530: ldc           #66
532: invokevirtual #67
535: invokevirtual #71
538: iload         13
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #73
551: new           #64
554: dup
555: invokespecial #65
558: ldc           #66
560: invokevirtual #67
563: iload         14
565: invokevirtual #102
568: ldc           #69
570: invokevirtual #67
573: iconst_0
574: invokevirtual #102
577: ldc           #66
579: invokevirtual #67
582: invokevirtual #71
585: iload         14
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #73
598: new           #64
601: dup
602: invokespecial #65
605: ldc           #66
607: invokevirtual #67
610: iload         15
612: invokevirtual #102
615: ldc           #69
617: invokevirtual #67
620: iconst_0
621: invokevirtual #102
624: ldc           #66
626: invokevirtual #67
629: invokevirtual #71
632: iload         15
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #73
645: aload         17
647: invokestatic  #106
650: aload         22
652: invokestatic  #56
655: aload         22
657: invokestatic  #57
660: ldc           #74
662: invokestatic  #59
665: aload         22
667: invokestatic  #60
670: ldc           #74
672: invokestatic  #59
675: aload         25
677: invokestatic  #56
680: aload         25
682: invokestatic  #61
685: ldc           #90
687: invokestatic  #59
690: aload         26
692: invokestatic  #56
695: aload         26
697: invokestatic  #61
700: ldc           #90
702: invokestatic  #59
705: aload         27
707: invokestatic  #106
710: aload         32
712: invokestatic  #56
715: aload         32
717: invokestatic  #57
720: ldc           #74
722: invokestatic  #59
725: aload         32
727: invokestatic  #60
730: ldc           #74
732: invokestatic  #59
735: aload         35
737: invokestatic  #56
740: aload         35
742: invokestatic  #61
745: ldc           #90
747: invokestatic  #59
750: aload         36
752: invokestatic  #56
755: aload         36
757: invokestatic  #61
760: ldc           #91
762: invokestatic  #59
765: return
Exception table:
from    to  target type
430   439   442   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 8205
End line: 8250
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        int int39 = levenbergMarquardtOptimizer0.cols;
        levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) -1);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #355
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #105
278: istore        24
280: aload_1
281: iconst_m1
282: invokevirtual #182
285: aload         7
287: invokestatic  #56
290: aload         7
292: invokestatic  #57
295: ldc           #74
297: invokestatic  #59
300: aload         7
302: invokestatic  #60
305: ldc           #74
307: invokestatic  #59
310: aload         10
312: invokestatic  #56
315: aload         10
317: invokestatic  #61
320: ldc           #90
322: invokestatic  #59
325: aload         11
327: invokestatic  #56
330: aload         11
332: invokestatic  #61
335: ldc           #91
337: invokestatic  #59
340: aload         17
342: invokestatic  #56
345: aload         17
347: invokestatic  #57
350: ldc           #74
352: invokestatic  #59
355: aload         17
357: invokestatic  #60
360: ldc           #74
362: invokestatic  #59
365: aload         20
367: invokestatic  #56
370: aload         20
372: invokestatic  #61
375: ldc           #90
377: invokestatic  #59
380: aload         21
382: invokestatic  #56
385: aload         21
387: invokestatic  #61
390: ldc           #91
392: invokestatic  #59
395: new           #64
398: dup
399: invokespecial #65
402: ldc           #66
404: invokevirtual #67
407: iload         23
409: invokevirtual #119
412: ldc           #69
414: invokevirtual #67
417: iconst_1
418: invokevirtual #119
421: ldc           #66
423: invokevirtual #67
426: invokevirtual #71
429: iload         23
431: iconst_1
432: if_icmpne     439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #73
443: new           #64
446: dup
447: invokespecial #65
450: ldc           #66
452: invokevirtual #67
455: iload         24
457: invokevirtual #102
460: ldc           #69
462: invokevirtual #67
465: iconst_0
466: invokevirtual #102
469: ldc           #66
471: invokevirtual #67
474: invokevirtual #71
477: iload         24
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #73
490: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 8253
End line: 8354
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        java.lang.Object[] objArray4 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4);
        java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray29 = new double[] { (-1), 1.0f };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        levenbergMarquardtOptimizer24.jacobian = doubleArray30;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47);
        org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54);
        java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54);
        java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61);
        java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(10.0d);
        double[] doubleArray66 = functionEvaluationException65.getArgument();
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        java.util.NoSuchElementException noSuchElementException68 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, objArray67);
        java.lang.Throwable throwable69 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable69);
        org.apache.commons.math.exception.util.Localizable localizable71 = null;
        java.lang.Object[] objArray74 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException75 = new org.apache.commons.math.MathRuntimeException(throwable69, localizable71, objArray74);
        java.lang.Object[] objArray76 = mathRuntimeException75.getArguments();
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException(localizable11, objArray76);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException5);
        org.junit.Assert.assertNotNull(noSuchElementException7);
        org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException55);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57);
        org.junit.Assert.assertNotNull(nullPointerException58);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(noSuchElementException63);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[10.0]");
        org.junit.Assert.assertNotNull(noSuchElementException68);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: anewarray     #5
29: dup
30: iconst_0
31: iconst_1
32: invokestatic  #35
35: aastore
36: astore_1
37: ldc           #28
39: aload_1
40: invokestatic  #36
43: astore_2
44: new           #44
47: dup
48: ldc           #142
50: aload_1
51: invokespecial #238
54: astore_3
55: ldc           #42
57: aload_1
58: invokestatic  #239
61: astore        4
63: new           #240
66: dup
67: invokespecial #241
70: astore        5
72: aconst_null
73: astore        6
75: new           #27
78: dup
79: aload         6
81: invokespecial #39
84: astore        7
86: aload         7
88: invokevirtual #40
91: astore        8
93: aconst_null
94: astore        9
96: new           #27
99: dup
100: aload         9
102: invokespecial #39
105: astore        10
107: aload         10
109: invokevirtual #40
112: astore        11
114: aconst_null
115: astore        12
117: iconst_1
118: anewarray     #5
121: dup
122: iconst_0
123: iconst_1
124: invokestatic  #35
127: aastore
128: astore        13
130: ldc           #28
132: aload         13
134: invokestatic  #36
137: astore        14
139: new           #37
142: dup
143: bipush        100
145: aload         12
147: aload         13
149: invokespecial #38
152: astore        15
154: aload         11
156: aload         13
158: invokestatic  #41
161: astore        16
163: new           #27
166: dup
167: aload         5
169: aload         8
171: aload         13
173: invokespecial #47
176: astore        17
178: new           #8
181: dup
182: invokespecial #9
185: astore        18
187: aload         18
189: dconst_0
190: invokevirtual #129
193: iconst_2
194: newarray       double
196: dup
197: iconst_0
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_1
204: dconst_1
205: dastore
206: astore        19
208: iconst_1
209: anewarray     #130
212: dup
213: iconst_0
214: aload         19
216: aastore
217: astore        20
219: aload         18
221: aload         20
223: putfield      #131
226: new           #44
229: dup
230: aload         4
232: aload         8
234: aload         20
236: checkcast     #143
239: invokespecial #45
242: astore        21
244: aconst_null
245: astore        22
247: new           #27
250: dup
251: aload         22
253: invokespecial #39
256: astore        23
258: aload         23
260: invokevirtual #40
263: astore        24
265: aconst_null
266: astore        25
268: iconst_1
269: anewarray     #5
272: dup
273: iconst_0
274: iconst_1
275: invokestatic  #35
278: aastore
279: astore        26
281: ldc           #28
283: aload         26
285: invokestatic  #36
288: astore        27
290: new           #37
293: dup
294: bipush        100
296: aload         25
298: aload         26
300: invokespecial #38
303: astore        28
305: aconst_null
306: astore        29
308: aconst_null
309: astore        30
311: new           #27
314: dup
315: aload         30
317: invokespecial #39
320: astore        31
322: aload         31
324: invokevirtual #40
327: astore        32
329: aconst_null
330: astore        33
332: iconst_1
333: anewarray     #5
336: dup
337: iconst_0
338: iconst_1
339: invokestatic  #35
342: aastore
343: astore        34
345: ldc           #28
347: aload         34
349: invokestatic  #36
352: astore        35
354: new           #37
357: dup
358: bipush        100
360: aload         33
362: aload         34
364: invokespecial #38
367: astore        36
369: aload         32
371: aload         34
373: invokestatic  #41
376: astore        37
378: ldc           #42
380: aload         34
382: invokestatic  #43
385: astore        38
387: new           #44
390: dup
391: aload         28
393: aload         29
395: aload         34
397: invokespecial #45
400: astore        39
402: aload         24
404: aload         34
406: invokestatic  #46
409: astore        40
411: aload         40
413: invokevirtual #253
416: astore        41
418: new           #81
421: dup
422: iconst_m1
423: ldc           #42
425: aload         41
427: checkcast     #143
430: invokespecial #254
433: astore        42
435: aload         8
437: aload         41
439: checkcast     #143
442: invokestatic  #255
445: astore        43
447: new           #23
450: dup
451: ldc2_w        #33
454: invokespecial #256
457: astore        44
459: aload         44
461: invokevirtual #84
464: astore        45
466: aload         44
468: invokevirtual #257
471: astore        46
473: aload         8
475: aload         46
477: invokestatic  #255
480: astore        47
482: aconst_null
483: astore        48
485: new           #27
488: dup
489: aload         48
491: invokespecial #39
494: astore        49
496: aconst_null
497: astore        50
499: iconst_2
500: anewarray     #5
503: dup
504: iconst_0
505: ldc           #28
507: aastore
508: dup
509: iconst_1
510: iconst_1
511: invokestatic  #17
514: aastore
515: astore        51
517: new           #27
520: dup
521: aload         48
523: aload         50
525: aload         51
527: invokespecial #47
530: astore        52
532: aload         52
534: invokevirtual #48
537: astore        53
539: new           #44
542: dup
543: aload         8
545: aload         53
547: invokespecial #149
550: astore        54
552: aload_1
553: invokestatic  #56
556: aload_1
557: invokestatic  #57
560: ldc           #63
562: invokestatic  #59
565: aload_1
566: invokestatic  #60
569: ldc           #63
571: invokestatic  #59
574: aload_2
575: invokestatic  #56
578: aload         4
580: invokestatic  #56
583: new           #64
586: dup
587: invokespecial #65
590: ldc           #66
592: invokevirtual #67
595: aload         8
597: invokevirtual #68
600: ldc           #69
602: invokevirtual #67
605: getstatic     #70
608: invokevirtual #68
611: ldc           #66
613: invokevirtual #67
616: invokevirtual #71
619: aload         8
621: getstatic     #70
624: invokevirtual #72
627: invokestatic  #73
630: new           #64
633: dup
634: invokespecial #65
637: ldc           #66
639: invokevirtual #67
642: aload         11
644: invokevirtual #68
647: ldc           #69
649: invokevirtual #67
652: getstatic     #70
655: invokevirtual #68
658: ldc           #66
660: invokevirtual #67
663: invokevirtual #71
666: aload         11
668: getstatic     #70
671: invokevirtual #72
674: invokestatic  #73
677: aload         13
679: invokestatic  #56
682: aload         13
684: invokestatic  #57
687: ldc           #63
689: invokestatic  #59
692: aload         13
694: invokestatic  #60
697: ldc           #63
699: invokestatic  #59
702: aload         14
704: invokestatic  #56
707: aload         16
709: invokestatic  #56
712: aload         19
714: invokestatic  #56
717: aload         19
719: invokestatic  #61
722: ldc           #134
724: invokestatic  #59
727: aload         20
729: invokestatic  #56
732: new           #64
735: dup
736: invokespecial #65
739: ldc           #66
741: invokevirtual #67
744: aload         24
746: invokevirtual #68
749: ldc           #69
751: invokevirtual #67
754: getstatic     #70
757: invokevirtual #68
760: ldc           #66
762: invokevirtual #67
765: invokevirtual #71
768: aload         24
770: getstatic     #70
773: invokevirtual #72
776: invokestatic  #73
779: aload         26
781: invokestatic  #56
784: aload         26
786: invokestatic  #57
789: ldc           #63
791: invokestatic  #59
794: aload         26
796: invokestatic  #60
799: ldc           #63
801: invokestatic  #59
804: aload         27
806: invokestatic  #56
809: new           #64
812: dup
813: invokespecial #65
816: ldc           #66
818: invokevirtual #67
821: aload         32
823: invokevirtual #68
826: ldc           #69
828: invokevirtual #67
831: getstatic     #70
834: invokevirtual #68
837: ldc           #66
839: invokevirtual #67
842: invokevirtual #71
845: aload         32
847: getstatic     #70
850: invokevirtual #72
853: invokestatic  #73
856: aload         34
858: invokestatic  #56
861: aload         34
863: invokestatic  #57
866: ldc           #63
868: invokestatic  #59
871: aload         34
873: invokestatic  #60
876: ldc           #63
878: invokestatic  #59
881: aload         35
883: invokestatic  #56
886: aload         37
888: invokestatic  #56
891: aload         38
893: invokestatic  #56
896: aload         40
898: invokestatic  #56
901: aload         41
903: invokestatic  #56
906: aload         43
908: invokestatic  #56
911: aload         45
913: invokestatic  #56
916: aload         45
918: invokestatic  #61
921: ldc_w         #258
924: invokestatic  #59
927: aload         46
929: invokestatic  #56
932: aload         46
934: invokestatic  #57
937: ldc_w         #258
940: invokestatic  #59
943: aload         46
945: invokestatic  #60
948: ldc_w         #258
951: invokestatic  #59
954: aload         47
956: invokestatic  #56
959: aload         51
961: invokestatic  #56
964: aload         51
966: invokestatic  #57
969: ldc           #74
971: invokestatic  #59
974: aload         51
976: invokestatic  #60
979: ldc           #74
981: invokestatic  #59
984: aload         53
986: invokestatic  #56
989: aload         53
991: invokestatic  #57
994: ldc           #74
996: invokestatic  #59
999: aload         53
1001: invokestatic  #60
1004: ldc           #74
1006: invokestatic  #59
1009: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 8357
End line: 8403
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        double double39 = levenbergMarquardtOptimizer0.cost;
        int int40 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #97
278: dstore        24
280: aload_1
281: invokevirtual #133
284: istore        26
286: aload         7
288: invokestatic  #56
291: aload         7
293: invokestatic  #57
296: ldc           #74
298: invokestatic  #59
301: aload         7
303: invokestatic  #60
306: ldc           #74
308: invokestatic  #59
311: aload         10
313: invokestatic  #56
316: aload         10
318: invokestatic  #61
321: ldc           #90
323: invokestatic  #59
326: aload         11
328: invokestatic  #56
331: aload         11
333: invokestatic  #61
336: ldc           #91
338: invokestatic  #59
341: aload         17
343: invokestatic  #56
346: aload         17
348: invokestatic  #57
351: ldc           #74
353: invokestatic  #59
356: aload         17
358: invokestatic  #60
361: ldc           #74
363: invokestatic  #59
366: aload         20
368: invokestatic  #56
371: aload         20
373: invokestatic  #61
376: ldc           #90
378: invokestatic  #59
381: aload         21
383: invokestatic  #56
386: aload         21
388: invokestatic  #61
391: ldc           #91
393: invokestatic  #59
396: new           #64
399: dup
400: invokespecial #65
403: ldc           #66
405: invokevirtual #67
408: iload         23
410: invokevirtual #119
413: ldc           #69
415: invokevirtual #67
418: iconst_1
419: invokevirtual #119
422: ldc           #66
424: invokevirtual #67
427: invokevirtual #71
430: iload         23
432: iconst_1
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #73
444: new           #64
447: dup
448: invokespecial #65
451: ldc           #66
453: invokevirtual #67
456: dload         24
458: invokevirtual #79
461: ldc           #69
463: invokevirtual #67
466: dconst_0
467: invokevirtual #79
470: ldc           #66
472: invokevirtual #67
475: invokevirtual #71
478: dload         24
480: dconst_0
481: dcmpl
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #73
493: new           #64
496: dup
497: invokespecial #65
500: ldc           #66
502: invokevirtual #67
505: iload         26
507: invokevirtual #102
510: ldc           #69
512: invokevirtual #67
515: iconst_0
516: invokevirtual #102
519: ldc           #66
521: invokevirtual #67
524: invokevirtual #71
527: iload         26
529: ifne          536
532: iconst_1
533: goto          537
536: iconst_0
537: invokestatic  #73
540: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 8406
End line: 8494
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#');
        int int83 = levenbergMarquardtOptimizer0.rows;
        levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) 0);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: bipush        35
550: invokevirtual #76
553: aload_1
554: getfield      #93
557: istore        47
559: aload_1
560: iconst_0
561: invokevirtual #182
564: aload_3
565: invokestatic  #56
568: aload_3
569: invokestatic  #57
572: ldc           #58
574: invokestatic  #59
577: aload_3
578: invokestatic  #60
581: ldc           #58
583: invokestatic  #59
586: aload         7
588: invokestatic  #56
591: aload         7
593: invokestatic  #57
596: ldc           #58
598: invokestatic  #59
601: aload         7
603: invokestatic  #60
606: ldc           #58
608: invokestatic  #59
611: aload         10
613: invokestatic  #56
616: aload         10
618: invokestatic  #61
621: ldc           #62
623: invokestatic  #59
626: aload         12
628: invokestatic  #56
631: aload         12
633: invokestatic  #57
636: ldc           #63
638: invokestatic  #59
641: aload         12
643: invokestatic  #60
646: ldc           #63
648: invokestatic  #59
651: aload         13
653: invokestatic  #56
656: new           #64
659: dup
660: invokespecial #65
663: ldc           #66
665: invokevirtual #67
668: aload         17
670: invokevirtual #68
673: ldc           #69
675: invokevirtual #67
678: getstatic     #70
681: invokevirtual #68
684: ldc           #66
686: invokevirtual #67
689: invokevirtual #71
692: aload         17
694: getstatic     #70
697: invokevirtual #72
700: invokestatic  #73
703: aload         19
705: invokestatic  #56
708: aload         19
710: invokestatic  #57
713: ldc           #63
715: invokestatic  #59
718: aload         19
720: invokestatic  #60
723: ldc           #63
725: invokestatic  #59
728: aload         20
730: invokestatic  #56
733: new           #64
736: dup
737: invokespecial #65
740: ldc           #66
742: invokevirtual #67
745: aload         25
747: invokevirtual #68
750: ldc           #69
752: invokevirtual #67
755: getstatic     #70
758: invokevirtual #68
761: ldc           #66
763: invokevirtual #67
766: invokevirtual #71
769: aload         25
771: getstatic     #70
774: invokevirtual #72
777: invokestatic  #73
780: aload         27
782: invokestatic  #56
785: aload         27
787: invokestatic  #57
790: ldc           #63
792: invokestatic  #59
795: aload         27
797: invokestatic  #60
800: ldc           #63
802: invokestatic  #59
805: aload         28
807: invokestatic  #56
810: aload         30
812: invokestatic  #56
815: aload         31
817: invokestatic  #56
820: aload         33
822: invokestatic  #56
825: aload         37
827: invokestatic  #56
830: aload         37
832: invokestatic  #57
835: ldc           #74
837: invokestatic  #59
840: aload         37
842: invokestatic  #60
845: ldc           #74
847: invokestatic  #59
850: aload         39
852: invokestatic  #56
855: aload         39
857: invokestatic  #57
860: ldc           #74
862: invokestatic  #59
865: aload         39
867: invokestatic  #60
870: ldc           #74
872: invokestatic  #59
875: aload         40
877: invokestatic  #56
880: new           #64
883: dup
884: invokespecial #65
887: ldc           #66
889: invokevirtual #67
892: dload         44
894: invokevirtual #79
897: ldc           #69
899: invokevirtual #67
902: dconst_0
903: invokevirtual #79
906: ldc           #66
908: invokevirtual #67
911: invokevirtual #71
914: dload         44
916: dconst_0
917: dcmpl
918: ifne          925
921: iconst_1
922: goto          926
925: iconst_0
926: invokestatic  #73
929: new           #64
932: dup
933: invokespecial #65
936: ldc           #66
938: invokevirtual #67
941: iload         46
943: invokevirtual #102
946: ldc           #69
948: invokevirtual #67
951: sipush        1000
954: invokevirtual #102
957: ldc           #66
959: invokevirtual #67
962: invokevirtual #71
965: iload         46
967: sipush        1000
970: if_icmpne     977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #73
981: new           #64
984: dup
985: invokespecial #65
988: ldc           #66
990: invokevirtual #67
993: iload         47
995: invokevirtual #102
998: ldc           #69
1000: invokevirtual #67
1003: iconst_0
1004: invokevirtual #102
1007: ldc           #66
1009: invokevirtual #67
1012: invokevirtual #71
1015: iload         47
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #73
1028: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 8497
End line: 8512
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        java.lang.Class<?> wildcardClass10 = levenbergMarquardtOptimizer0.getClass();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: aload_1
67: invokevirtual #306
70: astore        5
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: iload_2
85: invokevirtual #102
88: ldc           #69
90: invokevirtual #67
93: iconst_0
94: invokevirtual #102
97: ldc           #66
99: invokevirtual #67
102: invokevirtual #71
105: iload_2
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #73
117: new           #64
120: dup
121: invokespecial #65
124: ldc           #66
126: invokevirtual #67
129: iload_3
130: invokevirtual #102
133: ldc           #69
135: invokevirtual #67
138: iconst_0
139: invokevirtual #102
142: ldc           #66
144: invokevirtual #67
147: invokevirtual #71
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #73
162: aload         4
164: invokestatic  #106
167: aload         5
169: invokestatic  #56
172: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 8515
End line: 8525
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setMaxIterations(10);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertNull(vectorialConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: bipush        10
53: invokevirtual #182
56: aload_1
57: getfield      #140
60: astore_2
61: aload_2
62: invokestatic  #106
65: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 8528
End line: 8563
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        double[] doubleArray23 = null;
        levenbergMarquardtOptimizer0.point = doubleArray23;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray25 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aconst_null
150: astore        12
152: aload_1
153: aload         12
155: putfield      #52
158: aload_1
159: invokevirtual #53
162: astore        13
164: ldc           #54
166: invokestatic  #13
169: goto          174
172: astore        13
174: aload_2
175: invokestatic  #106
178: aload         7
180: invokestatic  #56
183: aload         7
185: invokestatic  #57
188: ldc           #74
190: invokestatic  #59
193: aload         7
195: invokestatic  #60
198: ldc           #74
200: invokestatic  #59
203: aload         10
205: invokestatic  #56
208: aload         10
210: invokestatic  #61
213: ldc           #90
215: invokestatic  #59
218: aload         11
220: invokestatic  #56
223: aload         11
225: invokestatic  #61
228: ldc           #90
230: invokestatic  #59
233: return
Exception table:
from    to  target type
158   169   172   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 8566
End line: 8592
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0L);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: getfield      #140
150: astore        12
152: aload_1
153: dconst_0
154: invokevirtual #204
157: aload         6
159: invokestatic  #56
162: aload         6
164: invokestatic  #57
167: ldc           #74
169: invokestatic  #59
172: aload         6
174: invokestatic  #60
177: ldc           #74
179: invokestatic  #59
182: aload         9
184: invokestatic  #56
187: aload         9
189: invokestatic  #61
192: ldc           #90
194: invokestatic  #59
197: aload         10
199: invokestatic  #56
202: aload         10
204: invokestatic  #61
207: ldc           #91
209: invokestatic  #59
212: aload         12
214: invokestatic  #106
217: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 8595
End line: 8679
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer20.rows = 0;
        levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d));
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53);
        double[] doubleArray56 = functionEvaluationException55.getArgument();
        double[] doubleArray58 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77);
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29);
        int int81 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray82 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNull(doubleArray82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: new           #8
150: dup
151: invokespecial #9
154: astore        12
156: aload         12
158: iconst_0
159: putfield      #93
162: aload         12
164: iconst_1
165: invokevirtual #76
168: aload         12
170: ldc2_w        #31
173: invokevirtual #94
176: new           #99
179: dup
180: dconst_0
181: ldc2_w        #95
184: invokespecial #116
187: astore        13
189: new           #81
192: dup
193: iconst_m1
194: invokespecial #82
197: astore        14
199: aconst_null
200: astore        15
202: new           #27
205: dup
206: aload         15
208: invokespecial #39
211: astore        16
213: aconst_null
214: astore        17
216: iconst_2
217: anewarray     #5
220: dup
221: iconst_0
222: ldc           #28
224: aastore
225: dup
226: iconst_1
227: iconst_1
228: invokestatic  #17
231: aastore
232: astore        18
234: new           #27
237: dup
238: aload         15
240: aload         17
242: aload         18
244: invokespecial #47
247: astore        19
249: new           #23
252: dup
253: aload         14
255: dconst_0
256: ldc           #28
258: aload         18
260: invokespecial #83
263: astore        20
265: aload         20
267: invokevirtual #84
270: astore        21
272: new           #81
275: dup
276: iconst_m1
277: invokespecial #82
280: astore        22
282: aconst_null
283: astore        23
285: new           #27
288: dup
289: aload         23
291: invokespecial #39
294: astore        24
296: aconst_null
297: astore        25
299: iconst_2
300: anewarray     #5
303: dup
304: iconst_0
305: ldc           #28
307: aastore
308: dup
309: iconst_1
310: iconst_1
311: invokestatic  #17
314: aastore
315: astore        26
317: new           #27
320: dup
321: aload         23
323: aload         25
325: aload         26
327: invokespecial #47
330: astore        27
332: new           #23
335: dup
336: aload         22
338: dconst_0
339: ldc           #28
341: aload         26
343: invokespecial #83
346: astore        28
348: aload         28
350: invokevirtual #84
353: astore        29
355: iconst_1
356: newarray       double
358: dup
359: iconst_0
360: ldc2_w        #85
363: dastore
364: astore        30
366: new           #87
369: dup
370: aload         29
372: aload         30
374: invokespecial #88
377: astore        31
379: new           #87
382: dup
383: aload         21
385: aload         30
387: iconst_0
388: invokespecial #117
391: astore        32
393: new           #81
396: dup
397: iconst_m1
398: invokespecial #82
401: astore        33
403: aconst_null
404: astore        34
406: new           #27
409: dup
410: aload         34
412: invokespecial #39
415: astore        35
417: aconst_null
418: astore        36
420: iconst_2
421: anewarray     #5
424: dup
425: iconst_0
426: ldc           #28
428: aastore
429: dup
430: iconst_1
431: iconst_1
432: invokestatic  #17
435: aastore
436: astore        37
438: new           #27
441: dup
442: aload         34
444: aload         36
446: aload         37
448: invokespecial #47
451: astore        38
453: new           #23
456: dup
457: aload         33
459: dconst_0
460: ldc           #28
462: aload         37
464: invokespecial #83
467: astore        39
469: aload         39
471: invokevirtual #84
474: astore        40
476: iconst_1
477: newarray       double
479: dup
480: iconst_0
481: ldc2_w        #85
484: dastore
485: astore        41
487: new           #87
490: dup
491: aload         40
493: aload         41
495: invokespecial #88
498: astore        42
500: aload         13
502: iconst_0
503: aload         32
505: aload         42
507: invokevirtual #118
510: istore        43
512: aload         12
514: aload         13
516: invokevirtual #101
519: aload_1
520: aload         13
522: invokevirtual #101
525: aload_1
526: invokevirtual #110
529: istore        44
531: aload_1
532: getfield      #152
535: astore        45
537: aload         6
539: invokestatic  #56
542: aload         6
544: invokestatic  #57
547: ldc           #74
549: invokestatic  #59
552: aload         6
554: invokestatic  #60
557: ldc           #74
559: invokestatic  #59
562: aload         9
564: invokestatic  #56
567: aload         9
569: invokestatic  #61
572: ldc           #90
574: invokestatic  #59
577: aload         10
579: invokestatic  #56
582: aload         10
584: invokestatic  #61
587: ldc           #91
589: invokestatic  #59
592: aload         18
594: invokestatic  #56
597: aload         18
599: invokestatic  #57
602: ldc           #74
604: invokestatic  #59
607: aload         18
609: invokestatic  #60
612: ldc           #74
614: invokestatic  #59
617: aload         21
619: invokestatic  #56
622: aload         21
624: invokestatic  #61
627: ldc           #90
629: invokestatic  #59
632: aload         26
634: invokestatic  #56
637: aload         26
639: invokestatic  #57
642: ldc           #74
644: invokestatic  #59
647: aload         26
649: invokestatic  #60
652: ldc           #74
654: invokestatic  #59
657: aload         29
659: invokestatic  #56
662: aload         29
664: invokestatic  #61
667: ldc           #90
669: invokestatic  #59
672: aload         30
674: invokestatic  #56
677: aload         30
679: invokestatic  #61
682: ldc           #91
684: invokestatic  #59
687: aload         37
689: invokestatic  #56
692: aload         37
694: invokestatic  #57
697: ldc           #74
699: invokestatic  #59
702: aload         37
704: invokestatic  #60
707: ldc           #74
709: invokestatic  #59
712: aload         40
714: invokestatic  #56
717: aload         40
719: invokestatic  #61
722: ldc           #90
724: invokestatic  #59
727: aload         41
729: invokestatic  #56
732: aload         41
734: invokestatic  #61
737: ldc           #91
739: invokestatic  #59
742: new           #64
745: dup
746: invokespecial #65
749: ldc           #66
751: invokevirtual #67
754: iload         43
756: invokevirtual #119
759: ldc           #69
761: invokevirtual #67
764: iconst_1
765: invokevirtual #119
768: ldc           #66
770: invokevirtual #67
773: invokevirtual #71
776: iload         43
778: iconst_1
779: if_icmpne     786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #73
790: new           #64
793: dup
794: invokespecial #65
797: ldc           #66
799: invokevirtual #67
802: iload         44
804: invokevirtual #102
807: ldc           #69
809: invokevirtual #67
812: bipush        100
814: invokevirtual #102
817: ldc           #66
819: invokevirtual #67
822: invokevirtual #71
825: iload         44
827: bipush        100
829: if_icmpne     836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #73
840: aload         45
842: invokestatic  #106
845: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 8682
End line: 8774
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28);
        double[] doubleArray31 = functionEvaluationException30.getArgument();
        double[] doubleArray33 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33);
        levenbergMarquardtOptimizer18.point = doubleArray33;
        levenbergMarquardtOptimizer18.cost = 0L;
        double[] doubleArray43 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer18.targetValues = doubleArray43;
        int int45 = levenbergMarquardtOptimizer18.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer46.rows = 0;
        levenbergMarquardtOptimizer46.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray51 = levenbergMarquardtOptimizer46.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException53 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable56);
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable56, localizable58, objArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException53, 0.0d, "hi!", objArray61);
        double[] doubleArray64 = functionEvaluationException63.getArgument();
        double[] doubleArray65 = functionEvaluationException63.getArgument();
        levenbergMarquardtOptimizer46.objective = doubleArray65;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable71 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71);
        org.apache.commons.math.exception.util.Localizable localizable73 = null;
        java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76);
        double[] doubleArray79 = functionEvaluationException78.getArgument();
        double[] doubleArray81 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray79, doubleArray81);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray65, doubleArray79, false);
        levenbergMarquardtOptimizer18.residualsWeights = doubleArray65;
        levenbergMarquardtOptimizer0.residuals = doubleArray65;
        double double87 = levenbergMarquardtOptimizer0.getRMS();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(doubleArray51);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: new           #8
144: dup
145: invokespecial #9
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload         12
259: aload         21
261: putfield      #52
264: aload         12
266: dconst_0
267: putfield      #97
270: iconst_5
271: newarray       double
273: dup
274: iconst_0
275: ldc2_w        #95
278: dastore
279: dup
280: iconst_1
281: dconst_0
282: dastore
283: dup
284: iconst_2
285: ldc2_w        #33
288: dastore
289: dup
290: iconst_3
291: ldc2_w        #150
294: dastore
295: dup
296: iconst_4
297: dconst_1
298: dastore
299: astore        23
301: aload         12
303: aload         23
305: putfield      #152
308: aload         12
310: invokevirtual #167
313: istore        24
315: new           #8
318: dup
319: invokespecial #9
322: astore        25
324: aload         25
326: iconst_0
327: putfield      #93
330: aload         25
332: iconst_1
333: invokevirtual #76
336: aload         25
338: getfield      #113
341: astore        26
343: new           #81
346: dup
347: iconst_m1
348: invokespecial #82
351: astore        27
353: aconst_null
354: astore        28
356: new           #27
359: dup
360: aload         28
362: invokespecial #39
365: astore        29
367: aconst_null
368: astore        30
370: iconst_2
371: anewarray     #5
374: dup
375: iconst_0
376: ldc           #28
378: aastore
379: dup
380: iconst_1
381: iconst_1
382: invokestatic  #17
385: aastore
386: astore        31
388: new           #27
391: dup
392: aload         28
394: aload         30
396: aload         31
398: invokespecial #47
401: astore        32
403: new           #23
406: dup
407: aload         27
409: dconst_0
410: ldc           #28
412: aload         31
414: invokespecial #83
417: astore        33
419: aload         33
421: invokevirtual #84
424: astore        34
426: aload         33
428: invokevirtual #84
431: astore        35
433: aload         25
435: aload         35
437: putfield      #114
440: new           #81
443: dup
444: iconst_m1
445: invokespecial #82
448: astore        36
450: aconst_null
451: astore        37
453: new           #27
456: dup
457: aload         37
459: invokespecial #39
462: astore        38
464: aconst_null
465: astore        39
467: iconst_2
468: anewarray     #5
471: dup
472: iconst_0
473: ldc           #28
475: aastore
476: dup
477: iconst_1
478: iconst_1
479: invokestatic  #17
482: aastore
483: astore        40
485: new           #27
488: dup
489: aload         37
491: aload         39
493: aload         40
495: invokespecial #47
498: astore        41
500: new           #23
503: dup
504: aload         36
506: dconst_0
507: ldc           #28
509: aload         40
511: invokespecial #83
514: astore        42
516: aload         42
518: invokevirtual #84
521: astore        43
523: iconst_1
524: newarray       double
526: dup
527: iconst_0
528: ldc2_w        #85
531: dastore
532: astore        44
534: new           #87
537: dup
538: aload         43
540: aload         44
542: invokespecial #88
545: astore        45
547: new           #87
550: dup
551: aload         35
553: aload         43
555: iconst_0
556: invokespecial #117
559: astore        46
561: aload         12
563: aload         35
565: putfield      #113
568: aload_1
569: aload         35
571: putfield      #122
574: aload_1
575: invokevirtual #132
578: dstore        47
580: aload         6
582: invokestatic  #56
585: aload         6
587: invokestatic  #57
590: ldc           #74
592: invokestatic  #59
595: aload         6
597: invokestatic  #60
600: ldc           #74
602: invokestatic  #59
605: aload         9
607: invokestatic  #56
610: aload         9
612: invokestatic  #61
615: ldc           #90
617: invokestatic  #59
620: aload         10
622: invokestatic  #56
625: aload         10
627: invokestatic  #61
630: ldc           #91
632: invokestatic  #59
635: aload         17
637: invokestatic  #56
640: aload         17
642: invokestatic  #57
645: ldc           #74
647: invokestatic  #59
650: aload         17
652: invokestatic  #60
655: ldc           #74
657: invokestatic  #59
660: aload         20
662: invokestatic  #56
665: aload         20
667: invokestatic  #61
670: ldc           #90
672: invokestatic  #59
675: aload         21
677: invokestatic  #56
680: aload         21
682: invokestatic  #61
685: ldc           #91
687: invokestatic  #59
690: aload         23
692: invokestatic  #56
695: aload         23
697: invokestatic  #61
700: ldc           #153
702: invokestatic  #59
705: new           #64
708: dup
709: invokespecial #65
712: ldc           #66
714: invokevirtual #67
717: iload         24
719: invokevirtual #102
722: ldc           #69
724: invokevirtual #67
727: iconst_0
728: invokevirtual #102
731: ldc           #66
733: invokevirtual #67
736: invokevirtual #71
739: iload         24
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #73
752: aload         26
754: invokestatic  #106
757: aload         31
759: invokestatic  #56
762: aload         31
764: invokestatic  #57
767: ldc           #74
769: invokestatic  #59
772: aload         31
774: invokestatic  #60
777: ldc           #74
779: invokestatic  #59
782: aload         34
784: invokestatic  #56
787: aload         34
789: invokestatic  #61
792: ldc           #90
794: invokestatic  #59
797: aload         35
799: invokestatic  #56
802: aload         35
804: invokestatic  #61
807: ldc           #90
809: invokestatic  #59
812: aload         40
814: invokestatic  #56
817: aload         40
819: invokestatic  #57
822: ldc           #74
824: invokestatic  #59
827: aload         40
829: invokestatic  #60
832: ldc           #74
834: invokestatic  #59
837: aload         43
839: invokestatic  #56
842: aload         43
844: invokestatic  #61
847: ldc           #90
849: invokestatic  #59
852: aload         44
854: invokestatic  #56
857: aload         44
859: invokestatic  #61
862: ldc           #91
864: invokestatic  #59
867: dload         47
869: invokestatic  #135
872: invokestatic  #136
875: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 8777
End line: 8790
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(10.0d);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: aload_1
55: getfield      #131
58: astore        4
60: aload_1
61: ldc2_w        #33
64: invokevirtual #94
67: aload_2
68: invokestatic  #106
71: aload_3
72: invokestatic  #106
75: aload         4
77: invokestatic  #106
80: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 8793
End line: 8803
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getIterations();
        int int6 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #126
47: istore_2
48: aload_1
49: getfield      #93
52: istore_3
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: iconst_0
75: invokevirtual #102
78: ldc           #66
80: invokevirtual #67
83: invokevirtual #71
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #73
98: new           #64
101: dup
102: invokespecial #65
105: ldc           #66
107: invokevirtual #67
110: iload_3
111: invokevirtual #102
114: ldc           #69
116: invokevirtual #67
119: iconst_0
120: invokevirtual #102
123: ldc           #66
125: invokevirtual #67
128: invokevirtual #71
131: iload_3
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #73
143: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 8806
End line: 8900
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 10);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker84 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double[] doubleArray85 = levenbergMarquardtOptimizer0.objective;
        levenbergMarquardtOptimizer0.setMaxIterations(0);
        java.lang.Class<?> wildcardClass88 = levenbergMarquardtOptimizer0.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: ldc2_w        #33
557: invokevirtual #127
560: aload_1
561: invokevirtual #104
564: astore        48
566: aload_1
567: getfield      #114
570: astore        49
572: aload_1
573: iconst_0
574: invokevirtual #182
577: aload_1
578: invokevirtual #306
581: astore        50
583: aload_3
584: invokestatic  #56
587: aload_3
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload_3
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         7
607: invokestatic  #56
610: aload         7
612: invokestatic  #57
615: ldc           #58
617: invokestatic  #59
620: aload         7
622: invokestatic  #60
625: ldc           #58
627: invokestatic  #59
630: aload         10
632: invokestatic  #56
635: aload         10
637: invokestatic  #61
640: ldc           #62
642: invokestatic  #59
645: aload         12
647: invokestatic  #56
650: aload         12
652: invokestatic  #57
655: ldc           #63
657: invokestatic  #59
660: aload         12
662: invokestatic  #60
665: ldc           #63
667: invokestatic  #59
670: aload         13
672: invokestatic  #56
675: new           #64
678: dup
679: invokespecial #65
682: ldc           #66
684: invokevirtual #67
687: aload         17
689: invokevirtual #68
692: ldc           #69
694: invokevirtual #67
697: getstatic     #70
700: invokevirtual #68
703: ldc           #66
705: invokevirtual #67
708: invokevirtual #71
711: aload         17
713: getstatic     #70
716: invokevirtual #72
719: invokestatic  #73
722: aload         19
724: invokestatic  #56
727: aload         19
729: invokestatic  #57
732: ldc           #63
734: invokestatic  #59
737: aload         19
739: invokestatic  #60
742: ldc           #63
744: invokestatic  #59
747: aload         20
749: invokestatic  #56
752: new           #64
755: dup
756: invokespecial #65
759: ldc           #66
761: invokevirtual #67
764: aload         25
766: invokevirtual #68
769: ldc           #69
771: invokevirtual #67
774: getstatic     #70
777: invokevirtual #68
780: ldc           #66
782: invokevirtual #67
785: invokevirtual #71
788: aload         25
790: getstatic     #70
793: invokevirtual #72
796: invokestatic  #73
799: aload         27
801: invokestatic  #56
804: aload         27
806: invokestatic  #57
809: ldc           #63
811: invokestatic  #59
814: aload         27
816: invokestatic  #60
819: ldc           #63
821: invokestatic  #59
824: aload         28
826: invokestatic  #56
829: aload         30
831: invokestatic  #56
834: aload         31
836: invokestatic  #56
839: aload         33
841: invokestatic  #56
844: aload         37
846: invokestatic  #56
849: aload         37
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         37
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         39
871: invokestatic  #56
874: aload         39
876: invokestatic  #57
879: ldc           #74
881: invokestatic  #59
884: aload         39
886: invokestatic  #60
889: ldc           #74
891: invokestatic  #59
894: aload         40
896: invokestatic  #56
899: new           #64
902: dup
903: invokespecial #65
906: ldc           #66
908: invokevirtual #67
911: dload         44
913: invokevirtual #79
916: ldc           #69
918: invokevirtual #67
921: dconst_0
922: invokevirtual #79
925: ldc           #66
927: invokevirtual #67
930: invokevirtual #71
933: dload         44
935: dconst_0
936: dcmpl
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #73
948: aload         46
950: invokestatic  #106
953: new           #64
956: dup
957: invokespecial #65
960: ldc           #66
962: invokevirtual #67
965: iload         47
967: invokevirtual #102
970: ldc           #69
972: invokevirtual #67
975: iconst_0
976: invokevirtual #102
979: ldc           #66
981: invokevirtual #67
984: invokevirtual #71
987: iload         47
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #73
1000: aload         48
1002: invokestatic  #106
1005: aload         49
1007: invokestatic  #106
1010: aload         50
1012: invokestatic  #56
1015: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 8903
End line: 8933
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker21 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(vectorialConvergenceChecker21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: invokevirtual #104
163: astore        15
165: aload         6
167: invokestatic  #56
170: aload         6
172: invokestatic  #57
175: ldc           #74
177: invokestatic  #59
180: aload         6
182: invokestatic  #60
185: ldc           #74
187: invokestatic  #59
190: aload         9
192: invokestatic  #56
195: aload         9
197: invokestatic  #61
200: ldc           #90
202: invokestatic  #59
205: aload         10
207: invokestatic  #56
210: aload         10
212: invokestatic  #61
215: ldc           #91
217: invokestatic  #59
220: aload         12
222: invokestatic  #106
225: new           #64
228: dup
229: invokespecial #65
232: ldc           #66
234: invokevirtual #67
237: iload         13
239: invokevirtual #102
242: ldc           #69
244: invokevirtual #67
247: iconst_0
248: invokevirtual #102
251: ldc           #66
253: invokevirtual #67
256: invokevirtual #71
259: iload         13
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #73
272: new           #64
275: dup
276: invokespecial #65
279: ldc           #66
281: invokevirtual #67
284: iload         14
286: invokevirtual #102
289: ldc           #69
291: invokevirtual #67
294: iconst_0
295: invokevirtual #102
298: ldc           #66
300: invokevirtual #67
303: invokevirtual #71
306: iload         14
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #73
319: aload         15
321: invokestatic  #106
324: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 8936
End line: 8964
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer12 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer12.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray17 = new double[] { (-1), 1.0f };
        double[][] doubleArray18 = new double[][] { doubleArray17 };
        levenbergMarquardtOptimizer12.jacobian = doubleArray18;
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray18);
        levenbergMarquardtOptimizer0.jacobian = doubleArray18;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: aload_1
67: invokevirtual #132
70: dstore        4
72: aload_1
73: invokevirtual #133
76: istore        6
78: aload_1
79: invokevirtual #126
82: istore        7
84: new           #8
87: dup
88: invokespecial #9
91: astore        8
93: aload         8
95: dconst_0
96: invokevirtual #129
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: ldc2_w        #31
107: dastore
108: dup
109: iconst_1
110: dconst_1
111: dastore
112: astore        9
114: iconst_1
115: anewarray     #130
118: dup
119: iconst_0
120: aload         9
122: aastore
123: astore        10
125: aload         8
127: aload         10
129: putfield      #131
132: ldc           #28
134: aload         10
136: checkcast     #143
139: invokestatic  #36
142: astore        11
144: aload_1
145: aload         10
147: putfield      #131
150: aload_2
151: invokestatic  #56
154: aload_2
155: invokestatic  #61
158: ldc           #134
160: invokestatic  #59
163: aload_3
164: invokestatic  #56
167: dload         4
169: invokestatic  #135
172: invokestatic  #136
175: new           #64
178: dup
179: invokespecial #65
182: ldc           #66
184: invokevirtual #67
187: iload         6
189: invokevirtual #102
192: ldc           #69
194: invokevirtual #67
197: iconst_0
198: invokevirtual #102
201: ldc           #66
203: invokevirtual #67
206: invokevirtual #71
209: iload         6
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #73
222: new           #64
225: dup
226: invokespecial #65
229: ldc           #66
231: invokevirtual #67
234: iload         7
236: invokevirtual #102
239: ldc           #69
241: invokevirtual #67
244: iconst_0
245: invokevirtual #102
248: ldc           #66
250: invokevirtual #67
253: invokevirtual #71
256: iload         7
258: ifne          265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #73
269: aload         9
271: invokestatic  #56
274: aload         9
276: invokestatic  #61
279: ldc           #134
281: invokestatic  #59
284: aload         10
286: invokestatic  #56
289: aload         11
291: invokestatic  #56
294: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 8967
End line: 9073
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8);
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13);
        double[] doubleArray16 = functionEvaluationException15.getArgument();
        double[] doubleArray18 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray18);
        levenbergMarquardtOptimizer3.point = doubleArray18;
        double[] doubleArray21 = levenbergMarquardtOptimizer3.residualsWeights;
        int int22 = levenbergMarquardtOptimizer3.getEvaluations();
        int int23 = levenbergMarquardtOptimizer3.cols;
        int int24 = levenbergMarquardtOptimizer3.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer25.rows = 0;
        levenbergMarquardtOptimizer25.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray30 = levenbergMarquardtOptimizer25.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40);
        double[] doubleArray43 = functionEvaluationException42.getArgument();
        double[] doubleArray44 = functionEvaluationException42.getArgument();
        levenbergMarquardtOptimizer25.objective = doubleArray44;
        levenbergMarquardtOptimizer25.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker48 = levenbergMarquardtOptimizer25.checker;
        levenbergMarquardtOptimizer25.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59);
        double[] doubleArray62 = functionEvaluationException61.getArgument();
        double[] doubleArray64 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray64);
        levenbergMarquardtOptimizer25.residuals = doubleArray62;
        levenbergMarquardtOptimizer3.objective = doubleArray62;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer68 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer68.setMaxEvaluations((int) (byte) 0);
        int int71 = levenbergMarquardtOptimizer68.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer72 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer72.rows = 0;
        levenbergMarquardtOptimizer72.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer72.setInitialStepBoundFactor((-1.0d));
        int int79 = levenbergMarquardtOptimizer72.getIterations();
        int int80 = levenbergMarquardtOptimizer72.getIterations();
        double[] doubleArray81 = levenbergMarquardtOptimizer72.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer82 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer82.rows = 0;
        levenbergMarquardtOptimizer82.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer82.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer82.cost = (short) 100;
        int int91 = levenbergMarquardtOptimizer82.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker92 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer82.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker92);
        levenbergMarquardtOptimizer72.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker92);
        levenbergMarquardtOptimizer68.checker = simpleVectorialValueChecker92;
        levenbergMarquardtOptimizer3.checker = simpleVectorialValueChecker92;
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker92;
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]");
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[97.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1000 + "'", int71 == 1000);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1000 + "'", int91 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: invokevirtual #10
37: aload_1
38: getfield      #122
41: astore_2
42: new           #8
45: dup
46: invokespecial #9
49: astore_3
50: new           #81
53: dup
54: iconst_m1
55: invokespecial #82
58: astore        4
60: aconst_null
61: astore        5
63: new           #27
66: dup
67: aload         5
69: invokespecial #39
72: astore        6
74: aconst_null
75: astore        7
77: iconst_2
78: anewarray     #5
81: dup
82: iconst_0
83: ldc           #28
85: aastore
86: dup
87: iconst_1
88: iconst_1
89: invokestatic  #17
92: aastore
93: astore        8
95: new           #27
98: dup
99: aload         5
101: aload         7
103: aload         8
105: invokespecial #47
108: astore        9
110: new           #23
113: dup
114: aload         4
116: dconst_0
117: ldc           #28
119: aload         8
121: invokespecial #83
124: astore        10
126: aload         10
128: invokevirtual #84
131: astore        11
133: iconst_1
134: newarray       double
136: dup
137: iconst_0
138: ldc2_w        #85
141: dastore
142: astore        12
144: new           #87
147: dup
148: aload         11
150: aload         12
152: invokespecial #88
155: astore        13
157: aload_3
158: aload         12
160: putfield      #52
163: aload_3
164: getfield      #113
167: astore        14
169: aload_3
170: invokevirtual #167
173: istore        15
175: aload_3
176: getfield      #105
179: istore        16
181: aload_3
182: invokevirtual #167
185: istore        17
187: new           #8
190: dup
191: invokespecial #9
194: astore        18
196: aload         18
198: iconst_0
199: putfield      #93
202: aload         18
204: iconst_1
205: invokevirtual #76
208: aload         18
210: getfield      #113
213: astore        19
215: new           #81
218: dup
219: iconst_m1
220: invokespecial #82
223: astore        20
225: aconst_null
226: astore        21
228: new           #27
231: dup
232: aload         21
234: invokespecial #39
237: astore        22
239: aconst_null
240: astore        23
242: iconst_2
243: anewarray     #5
246: dup
247: iconst_0
248: ldc           #28
250: aastore
251: dup
252: iconst_1
253: iconst_1
254: invokestatic  #17
257: aastore
258: astore        24
260: new           #27
263: dup
264: aload         21
266: aload         23
268: aload         24
270: invokespecial #47
273: astore        25
275: new           #23
278: dup
279: aload         20
281: dconst_0
282: ldc           #28
284: aload         24
286: invokespecial #83
289: astore        26
291: aload         26
293: invokevirtual #84
296: astore        27
298: aload         26
300: invokevirtual #84
303: astore        28
305: aload         18
307: aload         28
309: putfield      #114
312: aload         18
314: sipush        1000
317: invokevirtual #76
320: aload         18
322: getfield      #140
325: astore        29
327: aload         18
329: invokevirtual #10
332: new           #81
335: dup
336: iconst_m1
337: invokespecial #82
340: astore        30
342: aconst_null
343: astore        31
345: new           #27
348: dup
349: aload         31
351: invokespecial #39
354: astore        32
356: aconst_null
357: astore        33
359: iconst_2
360: anewarray     #5
363: dup
364: iconst_0
365: ldc           #28
367: aastore
368: dup
369: iconst_1
370: iconst_1
371: invokestatic  #17
374: aastore
375: astore        34
377: new           #27
380: dup
381: aload         31
383: aload         33
385: aload         34
387: invokespecial #47
390: astore        35
392: new           #23
395: dup
396: aload         30
398: dconst_0
399: ldc           #28
401: aload         34
403: invokespecial #83
406: astore        36
408: aload         36
410: invokevirtual #84
413: astore        37
415: iconst_1
416: newarray       double
418: dup
419: iconst_0
420: ldc2_w        #85
423: dastore
424: astore        38
426: new           #87
429: dup
430: aload         37
432: aload         38
434: invokespecial #88
437: astore        39
439: aload         18
441: aload         37
443: putfield      #122
446: aload_3
447: aload         37
449: putfield      #114
452: new           #8
455: dup
456: invokespecial #9
459: astore        40
461: aload         40
463: iconst_0
464: invokevirtual #76
467: aload         40
469: invokevirtual #98
472: istore        41
474: new           #8
477: dup
478: invokespecial #9
481: astore        42
483: aload         42
485: iconst_0
486: putfield      #93
489: aload         42
491: iconst_1
492: invokevirtual #76
495: aload         42
497: ldc2_w        #31
500: invokevirtual #94
503: aload         42
505: invokevirtual #126
508: istore        43
510: aload         42
512: invokevirtual #126
515: istore        44
517: aload         42
519: getfield      #122
522: astore        45
524: new           #8
527: dup
528: invokespecial #9
531: astore        46
533: aload         46
535: iconst_0
536: putfield      #93
539: aload         46
541: iconst_1
542: invokevirtual #76
545: aload         46
547: ldc2_w        #31
550: invokevirtual #94
553: aload         46
555: ldc2_w        #95
558: putfield      #97
561: aload         46
563: invokevirtual #98
566: istore        47
568: new           #99
571: dup
572: invokespecial #100
575: astore        48
577: aload         46
579: aload         48
581: invokevirtual #101
584: aload         42
586: aload         48
588: invokevirtual #101
591: aload         40
593: aload         48
595: putfield      #140
598: aload_3
599: aload         48
601: putfield      #140
604: aload_1
605: aload         48
607: putfield      #140
610: aload_2
611: invokestatic  #106
614: aload         8
616: invokestatic  #56
619: aload         8
621: invokestatic  #57
624: ldc           #74
626: invokestatic  #59
629: aload         8
631: invokestatic  #60
634: ldc           #74
636: invokestatic  #59
639: aload         11
641: invokestatic  #56
644: aload         11
646: invokestatic  #61
649: ldc           #90
651: invokestatic  #59
654: aload         12
656: invokestatic  #56
659: aload         12
661: invokestatic  #61
664: ldc           #91
666: invokestatic  #59
669: aload         14
671: invokestatic  #106
674: new           #64
677: dup
678: invokespecial #65
681: ldc           #66
683: invokevirtual #67
686: iload         15
688: invokevirtual #102
691: ldc           #69
693: invokevirtual #67
696: iconst_0
697: invokevirtual #102
700: ldc           #66
702: invokevirtual #67
705: invokevirtual #71
708: iload         15
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #73
721: new           #64
724: dup
725: invokespecial #65
728: ldc           #66
730: invokevirtual #67
733: iload         16
735: invokevirtual #102
738: ldc           #69
740: invokevirtual #67
743: iconst_0
744: invokevirtual #102
747: ldc           #66
749: invokevirtual #67
752: invokevirtual #71
755: iload         16
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #73
768: new           #64
771: dup
772: invokespecial #65
775: ldc           #66
777: invokevirtual #67
780: iload         17
782: invokevirtual #102
785: ldc           #69
787: invokevirtual #67
790: iconst_0
791: invokevirtual #102
794: ldc           #66
796: invokevirtual #67
799: invokevirtual #71
802: iload         17
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #73
815: aload         19
817: invokestatic  #106
820: aload         24
822: invokestatic  #56
825: aload         24
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         24
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         27
847: invokestatic  #56
850: aload         27
852: invokestatic  #61
855: ldc           #90
857: invokestatic  #59
860: aload         28
862: invokestatic  #56
865: aload         28
867: invokestatic  #61
870: ldc           #90
872: invokestatic  #59
875: aload         29
877: invokestatic  #106
880: aload         34
882: invokestatic  #56
885: aload         34
887: invokestatic  #57
890: ldc           #74
892: invokestatic  #59
895: aload         34
897: invokestatic  #60
900: ldc           #74
902: invokestatic  #59
905: aload         37
907: invokestatic  #56
910: aload         37
912: invokestatic  #61
915: ldc           #90
917: invokestatic  #59
920: aload         38
922: invokestatic  #56
925: aload         38
927: invokestatic  #61
930: ldc           #91
932: invokestatic  #59
935: new           #64
938: dup
939: invokespecial #65
942: ldc           #66
944: invokevirtual #67
947: iload         41
949: invokevirtual #102
952: ldc           #69
954: invokevirtual #67
957: sipush        1000
960: invokevirtual #102
963: ldc           #66
965: invokevirtual #67
968: invokevirtual #71
971: iload         41
973: sipush        1000
976: if_icmpne     983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #73
987: new           #64
990: dup
991: invokespecial #65
994: ldc           #66
996: invokevirtual #67
999: iload         43
1001: invokevirtual #102
1004: ldc           #69
1006: invokevirtual #67
1009: iconst_0
1010: invokevirtual #102
1013: ldc           #66
1015: invokevirtual #67
1018: invokevirtual #71
1021: iload         43
1023: ifne          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #73
1034: new           #64
1037: dup
1038: invokespecial #65
1041: ldc           #66
1043: invokevirtual #67
1046: iload         44
1048: invokevirtual #102
1051: ldc           #69
1053: invokevirtual #67
1056: iconst_0
1057: invokevirtual #102
1060: ldc           #66
1062: invokevirtual #67
1065: invokevirtual #71
1068: iload         44
1070: ifne          1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #73
1081: aload         45
1083: invokestatic  #106
1086: new           #64
1089: dup
1090: invokespecial #65
1093: ldc           #66
1095: invokevirtual #67
1098: iload         47
1100: invokevirtual #102
1103: ldc           #69
1105: invokevirtual #67
1108: sipush        1000
1111: invokevirtual #102
1114: ldc           #66
1116: invokevirtual #67
1119: invokevirtual #71
1122: iload         47
1124: sipush        1000
1127: if_icmpne     1134
1130: iconst_1
1131: goto          1135
1134: iconst_0
1135: invokestatic  #73
1138: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 9076
End line: 9103
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.point;
        double[] doubleArray19 = levenbergMarquardtOptimizer0.residuals;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]");
        org.junit.Assert.assertNull(doubleArray19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #52
145: astore        12
147: aload_1
148: getfield      #122
151: astore        13
153: aload         6
155: invokestatic  #56
158: aload         6
160: invokestatic  #57
163: ldc           #74
165: invokestatic  #59
168: aload         6
170: invokestatic  #60
173: ldc           #74
175: invokestatic  #59
178: aload         9
180: invokestatic  #56
183: aload         9
185: invokestatic  #61
188: ldc           #90
190: invokestatic  #59
193: aload         10
195: invokestatic  #56
198: aload         10
200: invokestatic  #61
203: ldc           #91
205: invokestatic  #59
208: aload         12
210: invokestatic  #56
213: aload         12
215: invokestatic  #61
218: ldc           #91
220: invokestatic  #59
223: aload         13
225: invokestatic  #106
228: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 9106
End line: 9113
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: getfield      #140
42: astore_2
43: aload_2
44: invokestatic  #106
47: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 9116
End line: 9203
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: sipush        1000
557: invokevirtual #76
560: aload_3
561: invokestatic  #56
564: aload_3
565: invokestatic  #57
568: ldc           #58
570: invokestatic  #59
573: aload_3
574: invokestatic  #60
577: ldc           #58
579: invokestatic  #59
582: aload         7
584: invokestatic  #56
587: aload         7
589: invokestatic  #57
592: ldc           #58
594: invokestatic  #59
597: aload         7
599: invokestatic  #60
602: ldc           #58
604: invokestatic  #59
607: aload         10
609: invokestatic  #56
612: aload         10
614: invokestatic  #61
617: ldc           #62
619: invokestatic  #59
622: aload         12
624: invokestatic  #56
627: aload         12
629: invokestatic  #57
632: ldc           #63
634: invokestatic  #59
637: aload         12
639: invokestatic  #60
642: ldc           #63
644: invokestatic  #59
647: aload         13
649: invokestatic  #56
652: new           #64
655: dup
656: invokespecial #65
659: ldc           #66
661: invokevirtual #67
664: aload         17
666: invokevirtual #68
669: ldc           #69
671: invokevirtual #67
674: getstatic     #70
677: invokevirtual #68
680: ldc           #66
682: invokevirtual #67
685: invokevirtual #71
688: aload         17
690: getstatic     #70
693: invokevirtual #72
696: invokestatic  #73
699: aload         19
701: invokestatic  #56
704: aload         19
706: invokestatic  #57
709: ldc           #63
711: invokestatic  #59
714: aload         19
716: invokestatic  #60
719: ldc           #63
721: invokestatic  #59
724: aload         20
726: invokestatic  #56
729: new           #64
732: dup
733: invokespecial #65
736: ldc           #66
738: invokevirtual #67
741: aload         25
743: invokevirtual #68
746: ldc           #69
748: invokevirtual #67
751: getstatic     #70
754: invokevirtual #68
757: ldc           #66
759: invokevirtual #67
762: invokevirtual #71
765: aload         25
767: getstatic     #70
770: invokevirtual #72
773: invokestatic  #73
776: aload         27
778: invokestatic  #56
781: aload         27
783: invokestatic  #57
786: ldc           #63
788: invokestatic  #59
791: aload         27
793: invokestatic  #60
796: ldc           #63
798: invokestatic  #59
801: aload         28
803: invokestatic  #56
806: aload         30
808: invokestatic  #56
811: aload         31
813: invokestatic  #56
816: aload         33
818: invokestatic  #56
821: aload         37
823: invokestatic  #56
826: aload         37
828: invokestatic  #57
831: ldc           #74
833: invokestatic  #59
836: aload         37
838: invokestatic  #60
841: ldc           #74
843: invokestatic  #59
846: aload         39
848: invokestatic  #56
851: aload         39
853: invokestatic  #57
856: ldc           #74
858: invokestatic  #59
861: aload         39
863: invokestatic  #60
866: ldc           #74
868: invokestatic  #59
871: aload         40
873: invokestatic  #56
876: new           #64
879: dup
880: invokespecial #65
883: ldc           #66
885: invokevirtual #67
888: dload         44
890: invokevirtual #79
893: ldc           #69
895: invokevirtual #67
898: dconst_0
899: invokevirtual #79
902: ldc           #66
904: invokevirtual #67
907: invokevirtual #71
910: dload         44
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #73
925: aload         46
927: invokestatic  #106
930: new           #64
933: dup
934: invokespecial #65
937: ldc           #66
939: invokevirtual #67
942: iload         47
944: invokevirtual #102
947: ldc           #69
949: invokevirtual #67
952: iconst_0
953: invokevirtual #102
956: ldc           #66
958: invokevirtual #67
961: invokevirtual #71
964: iload         47
966: ifne          973
969: iconst_1
970: goto          974
973: iconst_0
974: invokestatic  #73
977: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 9206
End line: 9255
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException26 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException26, 0.0d, "hi!", objArray34);
        double[] doubleArray37 = functionEvaluationException36.getArgument();
        double[] doubleArray39 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray39);
        levenbergMarquardtOptimizer0.residuals = doubleArray37;
        int int42 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aload_1
156: invokevirtual #10
159: new           #81
162: dup
163: iconst_m1
164: invokespecial #82
167: astore        13
169: aconst_null
170: astore        14
172: new           #27
175: dup
176: aload         14
178: invokespecial #39
181: astore        15
183: aconst_null
184: astore        16
186: iconst_2
187: anewarray     #5
190: dup
191: iconst_0
192: ldc           #28
194: aastore
195: dup
196: iconst_1
197: iconst_1
198: invokestatic  #17
201: aastore
202: astore        17
204: new           #27
207: dup
208: aload         14
210: aload         16
212: aload         17
214: invokespecial #47
217: astore        18
219: new           #23
222: dup
223: aload         13
225: dconst_0
226: ldc           #28
228: aload         17
230: invokespecial #83
233: astore        19
235: aload         19
237: invokevirtual #84
240: astore        20
242: iconst_1
243: newarray       double
245: dup
246: iconst_0
247: ldc2_w        #85
250: dastore
251: astore        21
253: new           #87
256: dup
257: aload         20
259: aload         21
261: invokespecial #88
264: astore        22
266: aload_1
267: aload         20
269: putfield      #122
272: aload_1
273: getfield      #93
276: istore        23
278: aload_2
279: invokestatic  #106
282: aload         7
284: invokestatic  #56
287: aload         7
289: invokestatic  #57
292: ldc           #74
294: invokestatic  #59
297: aload         7
299: invokestatic  #60
302: ldc           #74
304: invokestatic  #59
307: aload         10
309: invokestatic  #56
312: aload         10
314: invokestatic  #61
317: ldc           #90
319: invokestatic  #59
322: aload         11
324: invokestatic  #56
327: aload         11
329: invokestatic  #61
332: ldc           #90
334: invokestatic  #59
337: aload         12
339: invokestatic  #106
342: aload         17
344: invokestatic  #56
347: aload         17
349: invokestatic  #57
352: ldc           #74
354: invokestatic  #59
357: aload         17
359: invokestatic  #60
362: ldc           #74
364: invokestatic  #59
367: aload         20
369: invokestatic  #56
372: aload         20
374: invokestatic  #61
377: ldc           #90
379: invokestatic  #59
382: aload         21
384: invokestatic  #56
387: aload         21
389: invokestatic  #61
392: ldc           #91
394: invokestatic  #59
397: new           #64
400: dup
401: invokespecial #65
404: ldc           #66
406: invokevirtual #67
409: iload         23
411: invokevirtual #102
414: ldc           #69
416: invokevirtual #67
419: iconst_0
420: invokevirtual #102
423: ldc           #66
425: invokevirtual #67
428: invokevirtual #71
431: iload         23
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #73
444: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 9258
End line: 9273
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int11 = levenbergMarquardtOptimizer0.rows;
        double[][] doubleArray12 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNull(vectorialConvergenceChecker10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(doubleArray12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #10
61: aload_1
62: invokevirtual #104
65: astore_2
66: aload_1
67: getfield      #93
70: istore_3
71: aload_1
72: getfield      #131
75: astore        4
77: aload_2
78: invokestatic  #106
81: new           #64
84: dup
85: invokespecial #65
88: ldc           #66
90: invokevirtual #67
93: iload_3
94: invokevirtual #102
97: ldc           #69
99: invokevirtual #67
102: iconst_0
103: invokevirtual #102
106: ldc           #66
108: invokevirtual #67
111: invokevirtual #71
114: iload_3
115: ifne          122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #73
126: aload         4
128: invokestatic  #106
131: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 9276
End line: 9350
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer0.targetValues = doubleArray25;
        int int27 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer28.rows = 0;
        levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38);
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43);
        double[] doubleArray46 = functionEvaluationException45.getArgument();
        double[] doubleArray47 = functionEvaluationException45.getArgument();
        levenbergMarquardtOptimizer28.objective = doubleArray47;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53);
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58);
        double[] doubleArray61 = functionEvaluationException60.getArgument();
        double[] doubleArray63 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray47;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker68 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double[] doubleArray69 = null;
        levenbergMarquardtOptimizer0.residuals = doubleArray69;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: iconst_5
147: newarray       double
149: dup
150: iconst_0
151: ldc2_w        #95
154: dastore
155: dup
156: iconst_1
157: dconst_0
158: dastore
159: dup
160: iconst_2
161: ldc2_w        #33
164: dastore
165: dup
166: iconst_3
167: ldc2_w        #150
170: dastore
171: dup
172: iconst_4
173: dconst_1
174: dastore
175: astore        12
177: aload_1
178: aload         12
180: putfield      #152
183: aload_1
184: invokevirtual #167
187: istore        13
189: new           #8
192: dup
193: invokespecial #9
196: astore        14
198: aload         14
200: iconst_0
201: putfield      #93
204: aload         14
206: iconst_1
207: invokevirtual #76
210: aload         14
212: getfield      #113
215: astore        15
217: new           #81
220: dup
221: iconst_m1
222: invokespecial #82
225: astore        16
227: aconst_null
228: astore        17
230: new           #27
233: dup
234: aload         17
236: invokespecial #39
239: astore        18
241: aconst_null
242: astore        19
244: iconst_2
245: anewarray     #5
248: dup
249: iconst_0
250: ldc           #28
252: aastore
253: dup
254: iconst_1
255: iconst_1
256: invokestatic  #17
259: aastore
260: astore        20
262: new           #27
265: dup
266: aload         17
268: aload         19
270: aload         20
272: invokespecial #47
275: astore        21
277: new           #23
280: dup
281: aload         16
283: dconst_0
284: ldc           #28
286: aload         20
288: invokespecial #83
291: astore        22
293: aload         22
295: invokevirtual #84
298: astore        23
300: aload         22
302: invokevirtual #84
305: astore        24
307: aload         14
309: aload         24
311: putfield      #114
314: new           #81
317: dup
318: iconst_m1
319: invokespecial #82
322: astore        25
324: aconst_null
325: astore        26
327: new           #27
330: dup
331: aload         26
333: invokespecial #39
336: astore        27
338: aconst_null
339: astore        28
341: iconst_2
342: anewarray     #5
345: dup
346: iconst_0
347: ldc           #28
349: aastore
350: dup
351: iconst_1
352: iconst_1
353: invokestatic  #17
356: aastore
357: astore        29
359: new           #27
362: dup
363: aload         26
365: aload         28
367: aload         29
369: invokespecial #47
372: astore        30
374: new           #23
377: dup
378: aload         25
380: dconst_0
381: ldc           #28
383: aload         29
385: invokespecial #83
388: astore        31
390: aload         31
392: invokevirtual #84
395: astore        32
397: iconst_1
398: newarray       double
400: dup
401: iconst_0
402: ldc2_w        #85
405: dastore
406: astore        33
408: new           #87
411: dup
412: aload         32
414: aload         33
416: invokespecial #88
419: astore        34
421: new           #87
424: dup
425: aload         24
427: aload         32
429: iconst_0
430: invokespecial #117
433: astore        35
435: aload_1
436: aload         24
438: putfield      #113
441: aload_1
442: invokevirtual #104
445: astore        36
447: aconst_null
448: astore        37
450: aload_1
451: aload         37
453: putfield      #122
456: aload         6
458: invokestatic  #56
461: aload         6
463: invokestatic  #57
466: ldc           #74
468: invokestatic  #59
471: aload         6
473: invokestatic  #60
476: ldc           #74
478: invokestatic  #59
481: aload         9
483: invokestatic  #56
486: aload         9
488: invokestatic  #61
491: ldc           #90
493: invokestatic  #59
496: aload         10
498: invokestatic  #56
501: aload         10
503: invokestatic  #61
506: ldc           #91
508: invokestatic  #59
511: aload         12
513: invokestatic  #56
516: aload         12
518: invokestatic  #61
521: ldc           #153
523: invokestatic  #59
526: new           #64
529: dup
530: invokespecial #65
533: ldc           #66
535: invokevirtual #67
538: iload         13
540: invokevirtual #102
543: ldc           #69
545: invokevirtual #67
548: iconst_0
549: invokevirtual #102
552: ldc           #66
554: invokevirtual #67
557: invokevirtual #71
560: iload         13
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #73
573: aload         15
575: invokestatic  #106
578: aload         20
580: invokestatic  #56
583: aload         20
585: invokestatic  #57
588: ldc           #74
590: invokestatic  #59
593: aload         20
595: invokestatic  #60
598: ldc           #74
600: invokestatic  #59
603: aload         23
605: invokestatic  #56
608: aload         23
610: invokestatic  #61
613: ldc           #90
615: invokestatic  #59
618: aload         24
620: invokestatic  #56
623: aload         24
625: invokestatic  #61
628: ldc           #90
630: invokestatic  #59
633: aload         29
635: invokestatic  #56
638: aload         29
640: invokestatic  #57
643: ldc           #74
645: invokestatic  #59
648: aload         29
650: invokestatic  #60
653: ldc           #74
655: invokestatic  #59
658: aload         32
660: invokestatic  #56
663: aload         32
665: invokestatic  #61
668: ldc           #90
670: invokestatic  #59
673: aload         33
675: invokestatic  #56
678: aload         33
680: invokestatic  #61
683: ldc           #91
685: invokestatic  #59
688: aload         36
690: invokestatic  #106
693: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 9353
End line: 9428
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer0.targetValues = doubleArray25;
        int int27 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer28.rows = 0;
        levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38);
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43);
        double[] doubleArray46 = functionEvaluationException45.getArgument();
        double[] doubleArray47 = functionEvaluationException45.getArgument();
        levenbergMarquardtOptimizer28.objective = doubleArray47;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53);
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58);
        double[] doubleArray61 = functionEvaluationException60.getArgument();
        double[] doubleArray63 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray47;
        double[] doubleArray68 = levenbergMarquardtOptimizer0.targetValues;
        int int69 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2147483647 + "'", int69 == 2147483647);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: iconst_5
147: newarray       double
149: dup
150: iconst_0
151: ldc2_w        #95
154: dastore
155: dup
156: iconst_1
157: dconst_0
158: dastore
159: dup
160: iconst_2
161: ldc2_w        #33
164: dastore
165: dup
166: iconst_3
167: ldc2_w        #150
170: dastore
171: dup
172: iconst_4
173: dconst_1
174: dastore
175: astore        12
177: aload_1
178: aload         12
180: putfield      #152
183: aload_1
184: invokevirtual #167
187: istore        13
189: new           #8
192: dup
193: invokespecial #9
196: astore        14
198: aload         14
200: iconst_0
201: putfield      #93
204: aload         14
206: iconst_1
207: invokevirtual #76
210: aload         14
212: getfield      #113
215: astore        15
217: new           #81
220: dup
221: iconst_m1
222: invokespecial #82
225: astore        16
227: aconst_null
228: astore        17
230: new           #27
233: dup
234: aload         17
236: invokespecial #39
239: astore        18
241: aconst_null
242: astore        19
244: iconst_2
245: anewarray     #5
248: dup
249: iconst_0
250: ldc           #28
252: aastore
253: dup
254: iconst_1
255: iconst_1
256: invokestatic  #17
259: aastore
260: astore        20
262: new           #27
265: dup
266: aload         17
268: aload         19
270: aload         20
272: invokespecial #47
275: astore        21
277: new           #23
280: dup
281: aload         16
283: dconst_0
284: ldc           #28
286: aload         20
288: invokespecial #83
291: astore        22
293: aload         22
295: invokevirtual #84
298: astore        23
300: aload         22
302: invokevirtual #84
305: astore        24
307: aload         14
309: aload         24
311: putfield      #114
314: new           #81
317: dup
318: iconst_m1
319: invokespecial #82
322: astore        25
324: aconst_null
325: astore        26
327: new           #27
330: dup
331: aload         26
333: invokespecial #39
336: astore        27
338: aconst_null
339: astore        28
341: iconst_2
342: anewarray     #5
345: dup
346: iconst_0
347: ldc           #28
349: aastore
350: dup
351: iconst_1
352: iconst_1
353: invokestatic  #17
356: aastore
357: astore        29
359: new           #27
362: dup
363: aload         26
365: aload         28
367: aload         29
369: invokespecial #47
372: astore        30
374: new           #23
377: dup
378: aload         25
380: dconst_0
381: ldc           #28
383: aload         29
385: invokespecial #83
388: astore        31
390: aload         31
392: invokevirtual #84
395: astore        32
397: iconst_1
398: newarray       double
400: dup
401: iconst_0
402: ldc2_w        #85
405: dastore
406: astore        33
408: new           #87
411: dup
412: aload         32
414: aload         33
416: invokespecial #88
419: astore        34
421: new           #87
424: dup
425: aload         24
427: aload         32
429: iconst_0
430: invokespecial #117
433: astore        35
435: aload_1
436: aload         24
438: putfield      #113
441: aload_1
442: getfield      #152
445: astore        36
447: aload_1
448: invokevirtual #110
451: istore        37
453: aload         6
455: invokestatic  #56
458: aload         6
460: invokestatic  #57
463: ldc           #74
465: invokestatic  #59
468: aload         6
470: invokestatic  #60
473: ldc           #74
475: invokestatic  #59
478: aload         9
480: invokestatic  #56
483: aload         9
485: invokestatic  #61
488: ldc           #90
490: invokestatic  #59
493: aload         10
495: invokestatic  #56
498: aload         10
500: invokestatic  #61
503: ldc           #91
505: invokestatic  #59
508: aload         12
510: invokestatic  #56
513: aload         12
515: invokestatic  #61
518: ldc           #153
520: invokestatic  #59
523: new           #64
526: dup
527: invokespecial #65
530: ldc           #66
532: invokevirtual #67
535: iload         13
537: invokevirtual #102
540: ldc           #69
542: invokevirtual #67
545: iconst_0
546: invokevirtual #102
549: ldc           #66
551: invokevirtual #67
554: invokevirtual #71
557: iload         13
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #73
570: aload         15
572: invokestatic  #106
575: aload         20
577: invokestatic  #56
580: aload         20
582: invokestatic  #57
585: ldc           #74
587: invokestatic  #59
590: aload         20
592: invokestatic  #60
595: ldc           #74
597: invokestatic  #59
600: aload         23
602: invokestatic  #56
605: aload         23
607: invokestatic  #61
610: ldc           #90
612: invokestatic  #59
615: aload         24
617: invokestatic  #56
620: aload         24
622: invokestatic  #61
625: ldc           #90
627: invokestatic  #59
630: aload         29
632: invokestatic  #56
635: aload         29
637: invokestatic  #57
640: ldc           #74
642: invokestatic  #59
645: aload         29
647: invokestatic  #60
650: ldc           #74
652: invokestatic  #59
655: aload         32
657: invokestatic  #56
660: aload         32
662: invokestatic  #61
665: ldc           #90
667: invokestatic  #59
670: aload         33
672: invokestatic  #56
675: aload         33
677: invokestatic  #61
680: ldc           #91
682: invokestatic  #59
685: aload         36
687: invokestatic  #56
690: aload         36
692: invokestatic  #61
695: ldc           #153
697: invokestatic  #59
700: new           #64
703: dup
704: invokespecial #65
707: ldc           #66
709: invokevirtual #67
712: iload         37
714: invokevirtual #102
717: ldc           #69
719: invokevirtual #67
722: ldc           #111
724: invokevirtual #102
727: ldc           #66
729: invokevirtual #67
732: invokevirtual #71
735: iload         37
737: ldc           #111
739: if_icmpne     746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #73
750: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 9431
End line: 9516
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1);
        int int11 = levenbergMarquardtOptimizer0.getMaxIterations();
        double[] doubleArray12 = levenbergMarquardtOptimizer0.point;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker13 = null;
        levenbergMarquardtOptimizer0.checker = vectorialConvergenceChecker13;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer15.rows = 0;
        levenbergMarquardtOptimizer15.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray20 = levenbergMarquardtOptimizer15.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray34 = functionEvaluationException32.getArgument();
        levenbergMarquardtOptimizer15.objective = doubleArray34;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer36.rows = 0;
        levenbergMarquardtOptimizer36.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray41 = levenbergMarquardtOptimizer36.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        double[] doubleArray55 = functionEvaluationException53.getArgument();
        levenbergMarquardtOptimizer36.objective = doubleArray55;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException58 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable61 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable61);
        org.apache.commons.math.exception.util.Localizable localizable63 = null;
        java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable61, localizable63, objArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException58, 0.0d, "hi!", objArray66);
        double[] doubleArray69 = functionEvaluationException68.getArgument();
        double[] doubleArray71 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray71);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair74 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray69, false);
        double[] doubleArray75 = vectorialPointValuePair74.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray75);
        levenbergMarquardtOptimizer0.targetValues = doubleArray75;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1000 + "'", int11 == 1000);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]");
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: iconst_m1
62: invokevirtual #76
65: aload_1
66: invokevirtual #98
69: istore        4
71: aload_1
72: getfield      #52
75: astore        5
77: aconst_null
78: astore        6
80: aload_1
81: aload         6
83: putfield      #140
86: new           #8
89: dup
90: invokespecial #9
93: astore        7
95: aload         7
97: iconst_0
98: putfield      #93
101: aload         7
103: iconst_1
104: invokevirtual #76
107: aload         7
109: getfield      #113
112: astore        8
114: new           #81
117: dup
118: iconst_m1
119: invokespecial #82
122: astore        9
124: aconst_null
125: astore        10
127: new           #27
130: dup
131: aload         10
133: invokespecial #39
136: astore        11
138: aconst_null
139: astore        12
141: iconst_2
142: anewarray     #5
145: dup
146: iconst_0
147: ldc           #28
149: aastore
150: dup
151: iconst_1
152: iconst_1
153: invokestatic  #17
156: aastore
157: astore        13
159: new           #27
162: dup
163: aload         10
165: aload         12
167: aload         13
169: invokespecial #47
172: astore        14
174: new           #23
177: dup
178: aload         9
180: dconst_0
181: ldc           #28
183: aload         13
185: invokespecial #83
188: astore        15
190: aload         15
192: invokevirtual #84
195: astore        16
197: aload         15
199: invokevirtual #84
202: astore        17
204: aload         7
206: aload         17
208: putfield      #114
211: new           #8
214: dup
215: invokespecial #9
218: astore        18
220: aload         18
222: iconst_0
223: putfield      #93
226: aload         18
228: iconst_1
229: invokevirtual #76
232: aload         18
234: getfield      #113
237: astore        19
239: new           #81
242: dup
243: iconst_m1
244: invokespecial #82
247: astore        20
249: aconst_null
250: astore        21
252: new           #27
255: dup
256: aload         21
258: invokespecial #39
261: astore        22
263: aconst_null
264: astore        23
266: iconst_2
267: anewarray     #5
270: dup
271: iconst_0
272: ldc           #28
274: aastore
275: dup
276: iconst_1
277: iconst_1
278: invokestatic  #17
281: aastore
282: astore        24
284: new           #27
287: dup
288: aload         21
290: aload         23
292: aload         24
294: invokespecial #47
297: astore        25
299: new           #23
302: dup
303: aload         20
305: dconst_0
306: ldc           #28
308: aload         24
310: invokespecial #83
313: astore        26
315: aload         26
317: invokevirtual #84
320: astore        27
322: aload         26
324: invokevirtual #84
327: astore        28
329: aload         18
331: aload         28
333: putfield      #114
336: new           #81
339: dup
340: iconst_m1
341: invokespecial #82
344: astore        29
346: aconst_null
347: astore        30
349: new           #27
352: dup
353: aload         30
355: invokespecial #39
358: astore        31
360: aconst_null
361: astore        32
363: iconst_2
364: anewarray     #5
367: dup
368: iconst_0
369: ldc           #28
371: aastore
372: dup
373: iconst_1
374: iconst_1
375: invokestatic  #17
378: aastore
379: astore        33
381: new           #27
384: dup
385: aload         30
387: aload         32
389: aload         33
391: invokespecial #47
394: astore        34
396: new           #23
399: dup
400: aload         29
402: dconst_0
403: ldc           #28
405: aload         33
407: invokespecial #83
410: astore        35
412: aload         35
414: invokevirtual #84
417: astore        36
419: iconst_1
420: newarray       double
422: dup
423: iconst_0
424: ldc2_w        #85
427: dastore
428: astore        37
430: new           #87
433: dup
434: aload         36
436: aload         37
438: invokespecial #88
441: astore        38
443: new           #87
446: dup
447: aload         28
449: aload         36
451: iconst_0
452: invokespecial #117
455: astore        39
457: aload         39
459: invokevirtual #185
462: astore        40
464: new           #87
467: dup
468: aload         17
470: aload         40
472: invokespecial #88
475: astore        41
477: aload_1
478: aload         40
480: putfield      #152
483: new           #64
486: dup
487: invokespecial #65
490: ldc           #66
492: invokevirtual #67
495: iload_2
496: invokevirtual #102
499: ldc           #69
501: invokevirtual #67
504: iconst_0
505: invokevirtual #102
508: ldc           #66
510: invokevirtual #67
513: invokevirtual #71
516: iload_2
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #73
528: new           #64
531: dup
532: invokespecial #65
535: ldc           #66
537: invokevirtual #67
540: iload_3
541: invokevirtual #102
544: ldc           #69
546: invokevirtual #67
549: iconst_0
550: invokevirtual #102
553: ldc           #66
555: invokevirtual #67
558: invokevirtual #71
561: iload_3
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #73
573: new           #64
576: dup
577: invokespecial #65
580: ldc           #66
582: invokevirtual #67
585: iload         4
587: invokevirtual #102
590: ldc           #69
592: invokevirtual #67
595: sipush        1000
598: invokevirtual #102
601: ldc           #66
603: invokevirtual #67
606: invokevirtual #71
609: iload         4
611: sipush        1000
614: if_icmpne     621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #73
625: aload         5
627: invokestatic  #106
630: aload         8
632: invokestatic  #106
635: aload         13
637: invokestatic  #56
640: aload         13
642: invokestatic  #57
645: ldc           #74
647: invokestatic  #59
650: aload         13
652: invokestatic  #60
655: ldc           #74
657: invokestatic  #59
660: aload         16
662: invokestatic  #56
665: aload         16
667: invokestatic  #61
670: ldc           #90
672: invokestatic  #59
675: aload         17
677: invokestatic  #56
680: aload         17
682: invokestatic  #61
685: ldc           #90
687: invokestatic  #59
690: aload         19
692: invokestatic  #106
695: aload         24
697: invokestatic  #56
700: aload         24
702: invokestatic  #57
705: ldc           #74
707: invokestatic  #59
710: aload         24
712: invokestatic  #60
715: ldc           #74
717: invokestatic  #59
720: aload         27
722: invokestatic  #56
725: aload         27
727: invokestatic  #61
730: ldc           #90
732: invokestatic  #59
735: aload         28
737: invokestatic  #56
740: aload         28
742: invokestatic  #61
745: ldc           #90
747: invokestatic  #59
750: aload         33
752: invokestatic  #56
755: aload         33
757: invokestatic  #57
760: ldc           #74
762: invokestatic  #59
765: aload         33
767: invokestatic  #60
770: ldc           #74
772: invokestatic  #59
775: aload         36
777: invokestatic  #56
780: aload         36
782: invokestatic  #61
785: ldc           #90
787: invokestatic  #59
790: aload         37
792: invokestatic  #56
795: aload         37
797: invokestatic  #61
800: ldc           #91
802: invokestatic  #59
805: aload         40
807: invokestatic  #56
810: aload         40
812: invokestatic  #61
815: ldc           #90
817: invokestatic  #59
820: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 9519
End line: 9603
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double[] doubleArray78 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: invokevirtual #133
534: istore        44
536: aload_1
537: getfield      #52
540: astore        45
542: aload_3
543: invokestatic  #56
546: aload_3
547: invokestatic  #57
550: ldc           #58
552: invokestatic  #59
555: aload_3
556: invokestatic  #60
559: ldc           #58
561: invokestatic  #59
564: aload         7
566: invokestatic  #56
569: aload         7
571: invokestatic  #57
574: ldc           #58
576: invokestatic  #59
579: aload         7
581: invokestatic  #60
584: ldc           #58
586: invokestatic  #59
589: aload         10
591: invokestatic  #56
594: aload         10
596: invokestatic  #61
599: ldc           #62
601: invokestatic  #59
604: aload         12
606: invokestatic  #56
609: aload         12
611: invokestatic  #57
614: ldc           #63
616: invokestatic  #59
619: aload         12
621: invokestatic  #60
624: ldc           #63
626: invokestatic  #59
629: aload         13
631: invokestatic  #56
634: new           #64
637: dup
638: invokespecial #65
641: ldc           #66
643: invokevirtual #67
646: aload         17
648: invokevirtual #68
651: ldc           #69
653: invokevirtual #67
656: getstatic     #70
659: invokevirtual #68
662: ldc           #66
664: invokevirtual #67
667: invokevirtual #71
670: aload         17
672: getstatic     #70
675: invokevirtual #72
678: invokestatic  #73
681: aload         19
683: invokestatic  #56
686: aload         19
688: invokestatic  #57
691: ldc           #63
693: invokestatic  #59
696: aload         19
698: invokestatic  #60
701: ldc           #63
703: invokestatic  #59
706: aload         20
708: invokestatic  #56
711: new           #64
714: dup
715: invokespecial #65
718: ldc           #66
720: invokevirtual #67
723: aload         25
725: invokevirtual #68
728: ldc           #69
730: invokevirtual #67
733: getstatic     #70
736: invokevirtual #68
739: ldc           #66
741: invokevirtual #67
744: invokevirtual #71
747: aload         25
749: getstatic     #70
752: invokevirtual #72
755: invokestatic  #73
758: aload         27
760: invokestatic  #56
763: aload         27
765: invokestatic  #57
768: ldc           #63
770: invokestatic  #59
773: aload         27
775: invokestatic  #60
778: ldc           #63
780: invokestatic  #59
783: aload         28
785: invokestatic  #56
788: aload         30
790: invokestatic  #56
793: aload         31
795: invokestatic  #56
798: aload         33
800: invokestatic  #56
803: aload         37
805: invokestatic  #56
808: aload         37
810: invokestatic  #57
813: ldc           #74
815: invokestatic  #59
818: aload         37
820: invokestatic  #60
823: ldc           #74
825: invokestatic  #59
828: aload         39
830: invokestatic  #56
833: aload         39
835: invokestatic  #57
838: ldc           #74
840: invokestatic  #59
843: aload         39
845: invokestatic  #60
848: ldc           #74
850: invokestatic  #59
853: aload         40
855: invokestatic  #56
858: new           #64
861: dup
862: invokespecial #65
865: ldc           #66
867: invokevirtual #67
870: iload         44
872: invokevirtual #102
875: ldc           #69
877: invokevirtual #67
880: iconst_0
881: invokevirtual #102
884: ldc           #66
886: invokevirtual #67
889: invokevirtual #71
892: iload         44
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #73
905: aload         45
907: invokestatic  #56
910: aload         45
912: invokestatic  #61
915: ldc           #62
917: invokestatic  #59
920: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 9606
End line: 9693
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals;
        int int81 = levenbergMarquardtOptimizer0.getEvaluations();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance((-1.0d));
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: getfield      #122
545: astore        46
547: aload_1
548: invokevirtual #167
551: istore        47
553: aload_1
554: ldc2_w        #31
557: invokevirtual #127
560: aload_3
561: invokestatic  #56
564: aload_3
565: invokestatic  #57
568: ldc           #58
570: invokestatic  #59
573: aload_3
574: invokestatic  #60
577: ldc           #58
579: invokestatic  #59
582: aload         7
584: invokestatic  #56
587: aload         7
589: invokestatic  #57
592: ldc           #58
594: invokestatic  #59
597: aload         7
599: invokestatic  #60
602: ldc           #58
604: invokestatic  #59
607: aload         10
609: invokestatic  #56
612: aload         10
614: invokestatic  #61
617: ldc           #62
619: invokestatic  #59
622: aload         12
624: invokestatic  #56
627: aload         12
629: invokestatic  #57
632: ldc           #63
634: invokestatic  #59
637: aload         12
639: invokestatic  #60
642: ldc           #63
644: invokestatic  #59
647: aload         13
649: invokestatic  #56
652: new           #64
655: dup
656: invokespecial #65
659: ldc           #66
661: invokevirtual #67
664: aload         17
666: invokevirtual #68
669: ldc           #69
671: invokevirtual #67
674: getstatic     #70
677: invokevirtual #68
680: ldc           #66
682: invokevirtual #67
685: invokevirtual #71
688: aload         17
690: getstatic     #70
693: invokevirtual #72
696: invokestatic  #73
699: aload         19
701: invokestatic  #56
704: aload         19
706: invokestatic  #57
709: ldc           #63
711: invokestatic  #59
714: aload         19
716: invokestatic  #60
719: ldc           #63
721: invokestatic  #59
724: aload         20
726: invokestatic  #56
729: new           #64
732: dup
733: invokespecial #65
736: ldc           #66
738: invokevirtual #67
741: aload         25
743: invokevirtual #68
746: ldc           #69
748: invokevirtual #67
751: getstatic     #70
754: invokevirtual #68
757: ldc           #66
759: invokevirtual #67
762: invokevirtual #71
765: aload         25
767: getstatic     #70
770: invokevirtual #72
773: invokestatic  #73
776: aload         27
778: invokestatic  #56
781: aload         27
783: invokestatic  #57
786: ldc           #63
788: invokestatic  #59
791: aload         27
793: invokestatic  #60
796: ldc           #63
798: invokestatic  #59
801: aload         28
803: invokestatic  #56
806: aload         30
808: invokestatic  #56
811: aload         31
813: invokestatic  #56
816: aload         33
818: invokestatic  #56
821: aload         37
823: invokestatic  #56
826: aload         37
828: invokestatic  #57
831: ldc           #74
833: invokestatic  #59
836: aload         37
838: invokestatic  #60
841: ldc           #74
843: invokestatic  #59
846: aload         39
848: invokestatic  #56
851: aload         39
853: invokestatic  #57
856: ldc           #74
858: invokestatic  #59
861: aload         39
863: invokestatic  #60
866: ldc           #74
868: invokestatic  #59
871: aload         40
873: invokestatic  #56
876: new           #64
879: dup
880: invokespecial #65
883: ldc           #66
885: invokevirtual #67
888: dload         44
890: invokevirtual #79
893: ldc           #69
895: invokevirtual #67
898: dconst_0
899: invokevirtual #79
902: ldc           #66
904: invokevirtual #67
907: invokevirtual #71
910: dload         44
912: dconst_0
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #73
925: aload         46
927: invokestatic  #106
930: new           #64
933: dup
934: invokespecial #65
937: ldc           #66
939: invokevirtual #67
942: iload         47
944: invokevirtual #102
947: ldc           #69
949: invokevirtual #67
952: iconst_0
953: invokevirtual #102
956: ldc           #66
958: invokevirtual #67
961: invokevirtual #71
964: iload         47
966: ifne          973
969: iconst_1
970: goto          974
973: iconst_0
974: invokestatic  #73
977: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 9696
End line: 9706
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        double double3 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #381
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: aload_1
39: getfield      #122
42: astore        4
44: aload_1
45: invokevirtual #77
48: dstore        5
50: new           #64
53: dup
54: invokespecial #65
57: ldc           #66
59: invokevirtual #67
62: dload_2
63: invokevirtual #79
66: ldc           #69
68: invokevirtual #67
71: dconst_0
72: invokevirtual #79
75: ldc           #66
77: invokevirtual #67
80: invokevirtual #71
83: dload_2
84: dconst_0
85: dcmpl
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #73
97: aload         4
99: invokestatic  #106
102: new           #64
105: dup
106: invokespecial #65
109: ldc           #66
111: invokevirtual #67
114: dload         5
116: invokevirtual #79
119: ldc           #69
121: invokevirtual #67
124: dconst_0
125: invokevirtual #79
128: ldc           #66
130: invokevirtual #67
133: invokevirtual #71
136: dload         5
138: dconst_0
139: dcmpl
140: ifne          147
143: iconst_1
144: goto          148
147: iconst_0
148: invokestatic  #73
151: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 9709
End line: 9721
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int6 = levenbergMarquardtOptimizer0.getEvaluations();
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #382
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #98
47: istore_2
48: aload_1
49: invokevirtual #167
52: istore_3
53: aload_1
54: invokevirtual #126
57: istore        4
59: new           #64
62: dup
63: invokespecial #65
66: ldc           #66
68: invokevirtual #67
71: iload_2
72: invokevirtual #102
75: ldc           #69
77: invokevirtual #67
80: sipush        1000
83: invokevirtual #102
86: ldc           #66
88: invokevirtual #67
91: invokevirtual #71
94: iload_2
95: sipush        1000
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #73
109: new           #64
112: dup
113: invokespecial #65
116: ldc           #66
118: invokevirtual #67
121: iload_3
122: invokevirtual #102
125: ldc           #69
127: invokevirtual #67
130: iconst_0
131: invokevirtual #102
134: ldc           #66
136: invokevirtual #67
139: invokevirtual #71
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #73
154: new           #64
157: dup
158: invokespecial #65
161: ldc           #66
163: invokevirtual #67
166: iload         4
168: invokevirtual #102
171: ldc           #69
173: invokevirtual #67
176: iconst_0
177: invokevirtual #102
180: ldc           #66
182: invokevirtual #67
185: invokevirtual #71
188: iload         4
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #73
201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 9724
End line: 9816
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8);
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23);
        org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern();
        java.lang.String str36 = localizable35.getSourceString();
        java.lang.Throwable throwable37 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48);
        org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern();
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51);
        org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58);
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray68 = new double[] { (-1), 1.0f };
        double[][] doubleArray69 = new double[][] { doubleArray68 };
        levenbergMarquardtOptimizer63.jacobian = doubleArray69;
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69);
        java.lang.Throwable throwable74 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException75 = new org.apache.commons.math.MathRuntimeException(throwable74);
        org.apache.commons.math.exception.util.Localizable localizable76 = mathRuntimeException75.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable78 = null;
        java.lang.Object[] objArray81 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException82 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray81);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException83 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable78, objArray81);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException84 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable76, objArray81);
        org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException85 = new org.apache.commons.math.linear.InvalidMatrixException(localizable35, objArray81);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(localizable35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(noSuchElementException46);
        org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException59);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + localizable76 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable76.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException82);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException84);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #383
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_5
28: anewarray     #5
31: dup
32: iconst_0
33: iconst_0
34: invokestatic  #16
37: aastore
38: dup
39: iconst_1
40: iconst_0
41: invokestatic  #17
44: aastore
45: dup
46: iconst_2
47: bipush        52
49: invokestatic  #18
52: aastore
53: dup
54: iconst_3
55: ldc2_w        #19
58: invokestatic  #21
61: aastore
62: dup
63: iconst_4
64: dconst_1
65: invokestatic  #22
68: aastore
69: astore_2
70: new           #23
73: dup
74: ldc2_w        #24
77: aload_1
78: aload_2
79: invokespecial #26
82: astore_3
83: new           #27
86: dup
87: ldc           #28
89: aload_2
90: invokespecial #29
93: astore        4
95: aconst_null
96: astore        5
98: iconst_5
99: anewarray     #5
102: dup
103: iconst_0
104: iconst_0
105: invokestatic  #16
108: aastore
109: dup
110: iconst_1
111: iconst_0
112: invokestatic  #17
115: aastore
116: dup
117: iconst_2
118: bipush        52
120: invokestatic  #18
123: aastore
124: dup
125: iconst_3
126: ldc2_w        #19
129: invokestatic  #21
132: aastore
133: dup
134: iconst_4
135: dconst_1
136: invokestatic  #22
139: aastore
140: astore        6
142: new           #23
145: dup
146: ldc2_w        #24
149: aload         5
151: aload         6
153: invokespecial #26
156: astore        7
158: new           #27
161: dup
162: aload         4
164: ldc           #28
166: aload         6
168: invokespecial #30
171: astore        8
173: aconst_null
174: astore        9
176: new           #27
179: dup
180: aload         9
182: invokespecial #39
185: astore        10
187: aload         10
189: invokevirtual #40
192: astore        11
194: aconst_null
195: astore        12
197: iconst_1
198: anewarray     #5
201: dup
202: iconst_0
203: iconst_1
204: invokestatic  #35
207: aastore
208: astore        13
210: ldc           #28
212: aload         13
214: invokestatic  #36
217: astore        14
219: new           #37
222: dup
223: bipush        100
225: aload         12
227: aload         13
229: invokespecial #38
232: astore        15
234: aload         11
236: aload         13
238: invokestatic  #41
241: astore        16
243: new           #27
246: dup
247: aload         8
249: ldc           #191
251: aload         13
253: invokespecial #30
256: astore        17
258: aload         8
260: invokevirtual #40
263: astore        18
265: aload         18
267: invokeinterface #237,  1
272: astore        19
274: aconst_null
275: astore        20
277: iconst_1
278: anewarray     #5
281: dup
282: iconst_0
283: iconst_1
284: invokestatic  #35
287: aastore
288: astore        21
290: ldc           #28
292: aload         21
294: invokestatic  #36
297: astore        22
299: new           #44
302: dup
303: ldc           #142
305: aload         21
307: invokespecial #238
310: astore        23
312: ldc           #42
314: aload         21
316: invokestatic  #239
319: astore        24
321: new           #240
324: dup
325: invokespecial #241
328: astore        25
330: aconst_null
331: astore        26
333: new           #27
336: dup
337: aload         26
339: invokespecial #39
342: astore        27
344: aload         27
346: invokevirtual #40
349: astore        28
351: aconst_null
352: astore        29
354: new           #27
357: dup
358: aload         29
360: invokespecial #39
363: astore        30
365: aload         30
367: invokevirtual #40
370: astore        31
372: aconst_null
373: astore        32
375: iconst_1
376: anewarray     #5
379: dup
380: iconst_0
381: iconst_1
382: invokestatic  #35
385: aastore
386: astore        33
388: ldc           #28
390: aload         33
392: invokestatic  #36
395: astore        34
397: new           #37
400: dup
401: bipush        100
403: aload         32
405: aload         33
407: invokespecial #38
410: astore        35
412: aload         31
414: aload         33
416: invokestatic  #41
419: astore        36
421: new           #27
424: dup
425: aload         25
427: aload         28
429: aload         33
431: invokespecial #47
434: astore        37
436: new           #8
439: dup
440: invokespecial #9
443: astore        38
445: aload         38
447: dconst_0
448: invokevirtual #129
451: iconst_2
452: newarray       double
454: dup
455: iconst_0
456: ldc2_w        #31
459: dastore
460: dup
461: iconst_1
462: dconst_1
463: dastore
464: astore        39
466: iconst_1
467: anewarray     #130
470: dup
471: iconst_0
472: aload         39
474: aastore
475: astore        40
477: aload         38
479: aload         40
481: putfield      #131
484: new           #44
487: dup
488: aload         24
490: aload         28
492: aload         40
494: checkcast     #143
497: invokespecial #45
500: astore        41
502: new           #240
505: dup
506: aload         20
508: ldc           #242
510: aload         40
512: checkcast     #143
515: invokespecial #243
518: astore        42
520: new           #240
523: dup
524: aload         18
526: aload         40
528: checkcast     #143
531: invokespecial #244
534: astore        43
536: aconst_null
537: astore        44
539: new           #27
542: dup
543: aload         44
545: invokespecial #39
548: astore        45
550: aload         45
552: invokevirtual #40
555: astore        46
557: aconst_null
558: astore        47
560: iconst_1
561: anewarray     #5
564: dup
565: iconst_0
566: iconst_1
567: invokestatic  #35
570: aastore
571: astore        48
573: ldc           #28
575: aload         48
577: invokestatic  #36
580: astore        49
582: new           #37
585: dup
586: bipush        100
588: aload         47
590: aload         48
592: invokespecial #38
595: astore        50
597: aload         46
599: aload         48
601: invokestatic  #41
604: astore        51
606: new           #384
609: dup
610: aload         18
612: aload         48
614: invokespecial #385
617: astore        52
619: aload_2
620: invokestatic  #56
623: aload_2
624: invokestatic  #57
627: ldc           #58
629: invokestatic  #59
632: aload_2
633: invokestatic  #60
636: ldc           #58
638: invokestatic  #59
641: aload         6
643: invokestatic  #56
646: aload         6
648: invokestatic  #57
651: ldc           #58
653: invokestatic  #59
656: aload         6
658: invokestatic  #60
661: ldc           #58
663: invokestatic  #59
666: new           #64
669: dup
670: invokespecial #65
673: ldc           #66
675: invokevirtual #67
678: aload         11
680: invokevirtual #68
683: ldc           #69
685: invokevirtual #67
688: getstatic     #70
691: invokevirtual #68
694: ldc           #66
696: invokevirtual #67
699: invokevirtual #71
702: aload         11
704: getstatic     #70
707: invokevirtual #72
710: invokestatic  #73
713: aload         13
715: invokestatic  #56
718: aload         13
720: invokestatic  #57
723: ldc           #63
725: invokestatic  #59
728: aload         13
730: invokestatic  #60
733: ldc           #63
735: invokestatic  #59
738: aload         14
740: invokestatic  #56
743: aload         16
745: invokestatic  #56
748: aload         18
750: invokestatic  #56
753: new           #64
756: dup
757: invokespecial #65
760: ldc           #66
762: invokevirtual #67
765: aload         19
767: invokevirtual #67
770: ldc           #246
772: invokevirtual #67
775: invokevirtual #71
778: aload         19
780: ldc           #28
782: invokestatic  #247
785: aload         21
787: invokestatic  #56
790: aload         21
792: invokestatic  #57
795: ldc           #63
797: invokestatic  #59
800: aload         21
802: invokestatic  #60
805: ldc           #63
807: invokestatic  #59
810: aload         22
812: invokestatic  #56
815: aload         24
817: invokestatic  #56
820: new           #64
823: dup
824: invokespecial #65
827: ldc           #66
829: invokevirtual #67
832: aload         28
834: invokevirtual #68
837: ldc           #69
839: invokevirtual #67
842: getstatic     #70
845: invokevirtual #68
848: ldc           #66
850: invokevirtual #67
853: invokevirtual #71
856: aload         28
858: getstatic     #70
861: invokevirtual #72
864: invokestatic  #73
867: new           #64
870: dup
871: invokespecial #65
874: ldc           #66
876: invokevirtual #67
879: aload         31
881: invokevirtual #68
884: ldc           #69
886: invokevirtual #67
889: getstatic     #70
892: invokevirtual #68
895: ldc           #66
897: invokevirtual #67
900: invokevirtual #71
903: aload         31
905: getstatic     #70
908: invokevirtual #72
911: invokestatic  #73
914: aload         33
916: invokestatic  #56
919: aload         33
921: invokestatic  #57
924: ldc           #63
926: invokestatic  #59
929: aload         33
931: invokestatic  #60
934: ldc           #63
936: invokestatic  #59
939: aload         34
941: invokestatic  #56
944: aload         36
946: invokestatic  #56
949: aload         39
951: invokestatic  #56
954: aload         39
956: invokestatic  #61
959: ldc           #134
961: invokestatic  #59
964: aload         40
966: invokestatic  #56
969: new           #64
972: dup
973: invokespecial #65
976: ldc           #66
978: invokevirtual #67
981: aload         46
983: invokevirtual #68
986: ldc           #69
988: invokevirtual #67
991: getstatic     #70
994: invokevirtual #68
997: ldc           #66
999: invokevirtual #67
1002: invokevirtual #71
1005: aload         46
1007: getstatic     #70
1010: invokevirtual #72
1013: invokestatic  #73
1016: aload         48
1018: invokestatic  #56
1021: aload         48
1023: invokestatic  #57
1026: ldc           #63
1028: invokestatic  #59
1031: aload         48
1033: invokestatic  #60
1036: ldc           #63
1038: invokestatic  #59
1041: aload         49
1043: invokestatic  #56
1046: aload         51
1048: invokestatic  #56
1051: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 9819
End line: 9861
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4);
        org.apache.commons.math.exception.util.Localizable localizable6 = mathRuntimeException5.getLocalizablePattern();
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        java.lang.Object[] objArray17 = mathRuntimeException16.getArguments();
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray17);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray17);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable6, objArray17);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer22.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray27 = new double[] { (-1), 1.0f };
        double[][] doubleArray28 = new double[][] { doubleArray27 };
        levenbergMarquardtOptimizer22.jacobian = doubleArray28;
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray28);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, (java.lang.Object[]) doubleArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException("org.apache.commons.math.ConvergenceException: convergence failed", (java.lang.Object[]) doubleArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("hi!", (java.lang.Object[]) doubleArray28);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', "org.apache.commons.math.MaxIterationsExceededException: maximal number of iterations (-1) exceeded", (java.lang.Object[]) doubleArray28);
        org.junit.Assert.assertTrue("'" + localizable6 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable6.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(parseException34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: invokespecial #39
35: astore_2
36: aload_2
37: invokevirtual #40
40: astore_3
41: aconst_null
42: astore        4
44: new           #27
47: dup
48: aload         4
50: invokespecial #39
53: astore        5
55: aconst_null
56: astore        6
58: iconst_2
59: anewarray     #5
62: dup
63: iconst_0
64: ldc           #28
66: aastore
67: dup
68: iconst_1
69: iconst_1
70: invokestatic  #17
73: aastore
74: astore        7
76: new           #27
79: dup
80: aload         4
82: aload         6
84: aload         7
86: invokespecial #47
89: astore        8
91: aload         8
93: invokevirtual #48
96: astore        9
98: bipush        52
100: ldc           #28
102: aload         9
104: invokestatic  #176
107: astore        10
109: ldc           #142
111: aload         9
113: invokestatic  #49
116: astore        11
118: new           #27
121: dup
122: aload_3
123: aload         9
125: invokespecial #177
128: astore        12
130: new           #8
133: dup
134: invokespecial #9
137: astore        13
139: aload         13
141: dconst_0
142: invokevirtual #129
145: iconst_2
146: newarray       double
148: dup
149: iconst_0
150: ldc2_w        #31
153: dastore
154: dup
155: iconst_1
156: dconst_1
157: dastore
158: astore        14
160: iconst_1
161: anewarray     #130
164: dup
165: iconst_0
166: aload         14
168: aastore
169: astore        15
171: aload         13
173: aload         15
175: putfield      #131
178: ldc           #28
180: aload         15
182: checkcast     #143
185: invokestatic  #36
188: astore        16
190: aload_3
191: aload         15
193: checkcast     #143
196: invokestatic  #178
199: astore        17
201: ldc           #191
203: aload         15
205: checkcast     #143
208: invokestatic  #387
211: astore        18
213: ldc           #28
215: aload         15
217: checkcast     #143
220: invokestatic  #49
223: astore        19
225: bipush        35
227: ldc_w         #388
230: aload         15
232: checkcast     #143
235: invokestatic  #176
238: astore        20
240: new           #64
243: dup
244: invokespecial #65
247: ldc           #66
249: invokevirtual #67
252: aload_3
253: invokevirtual #68
256: ldc           #69
258: invokevirtual #67
261: getstatic     #70
264: invokevirtual #68
267: ldc           #66
269: invokevirtual #67
272: invokevirtual #71
275: aload_3
276: getstatic     #70
279: invokevirtual #72
282: invokestatic  #73
285: aload         7
287: invokestatic  #56
290: aload         7
292: invokestatic  #57
295: ldc           #74
297: invokestatic  #59
300: aload         7
302: invokestatic  #60
305: ldc           #74
307: invokestatic  #59
310: aload         9
312: invokestatic  #56
315: aload         9
317: invokestatic  #57
320: ldc           #74
322: invokestatic  #59
325: aload         9
327: invokestatic  #60
330: ldc           #74
332: invokestatic  #59
335: aload         10
337: invokestatic  #56
340: aload         11
342: invokestatic  #56
345: aload         14
347: invokestatic  #56
350: aload         14
352: invokestatic  #61
355: ldc           #134
357: invokestatic  #59
360: aload         15
362: invokestatic  #56
365: aload         16
367: invokestatic  #56
370: aload         17
372: invokestatic  #56
375: aload         18
377: invokestatic  #56
380: aload         19
382: invokestatic  #56
385: aload         20
387: invokestatic  #56
390: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 9864
End line: 9952
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        double[] doubleArray82 = levenbergMarquardtOptimizer0.targetValues;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker81);
        org.junit.Assert.assertNull(doubleArray82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #389
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: invokevirtual #104
551: astore        47
553: aload_1
554: getfield      #152
557: astore        48
559: aload_3
560: invokestatic  #56
563: aload_3
564: invokestatic  #57
567: ldc           #58
569: invokestatic  #59
572: aload_3
573: invokestatic  #60
576: ldc           #58
578: invokestatic  #59
581: aload         7
583: invokestatic  #56
586: aload         7
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #60
601: ldc           #58
603: invokestatic  #59
606: aload         10
608: invokestatic  #56
611: aload         10
613: invokestatic  #61
616: ldc           #62
618: invokestatic  #59
621: aload         12
623: invokestatic  #56
626: aload         12
628: invokestatic  #57
631: ldc           #63
633: invokestatic  #59
636: aload         12
638: invokestatic  #60
641: ldc           #63
643: invokestatic  #59
646: aload         13
648: invokestatic  #56
651: new           #64
654: dup
655: invokespecial #65
658: ldc           #66
660: invokevirtual #67
663: aload         17
665: invokevirtual #68
668: ldc           #69
670: invokevirtual #67
673: getstatic     #70
676: invokevirtual #68
679: ldc           #66
681: invokevirtual #67
684: invokevirtual #71
687: aload         17
689: getstatic     #70
692: invokevirtual #72
695: invokestatic  #73
698: aload         19
700: invokestatic  #56
703: aload         19
705: invokestatic  #57
708: ldc           #63
710: invokestatic  #59
713: aload         19
715: invokestatic  #60
718: ldc           #63
720: invokestatic  #59
723: aload         20
725: invokestatic  #56
728: new           #64
731: dup
732: invokespecial #65
735: ldc           #66
737: invokevirtual #67
740: aload         25
742: invokevirtual #68
745: ldc           #69
747: invokevirtual #67
750: getstatic     #70
753: invokevirtual #68
756: ldc           #66
758: invokevirtual #67
761: invokevirtual #71
764: aload         25
766: getstatic     #70
769: invokevirtual #72
772: invokestatic  #73
775: aload         27
777: invokestatic  #56
780: aload         27
782: invokestatic  #57
785: ldc           #63
787: invokestatic  #59
790: aload         27
792: invokestatic  #60
795: ldc           #63
797: invokestatic  #59
800: aload         28
802: invokestatic  #56
805: aload         30
807: invokestatic  #56
810: aload         31
812: invokestatic  #56
815: aload         33
817: invokestatic  #56
820: aload         37
822: invokestatic  #56
825: aload         37
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         37
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         39
847: invokestatic  #56
850: aload         39
852: invokestatic  #57
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #60
865: ldc           #74
867: invokestatic  #59
870: aload         40
872: invokestatic  #56
875: new           #64
878: dup
879: invokespecial #65
882: ldc           #66
884: invokevirtual #67
887: dload         44
889: invokevirtual #79
892: ldc           #69
894: invokevirtual #67
897: dconst_0
898: invokevirtual #79
901: ldc           #66
903: invokevirtual #67
906: invokevirtual #71
909: dload         44
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #73
924: new           #64
927: dup
928: invokespecial #65
931: ldc           #66
933: invokevirtual #67
936: iload         46
938: invokevirtual #102
941: ldc           #69
943: invokevirtual #67
946: sipush        1000
949: invokevirtual #102
952: ldc           #66
954: invokevirtual #67
957: invokevirtual #71
960: iload         46
962: sipush        1000
965: if_icmpne     972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #73
976: aload         47
978: invokestatic  #106
981: aload         48
983: invokestatic  #106
986: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 9955
End line: 10044
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 100);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable18, objArray24);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException("hi!", objArray24);
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable29, objArray35);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException26, "hi!", objArray35);
        double[] doubleArray43 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException49 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray48);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException50 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable45, objArray48);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52);
        org.apache.commons.math.exception.util.Localizable localizable54 = mathRuntimeException53.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray59 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray59);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException61 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable56, objArray59);
        org.apache.commons.math.exception.util.Localizable localizable62 = null;
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = mathRuntimeException65.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException72 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray71);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException73 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable68, objArray71);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException74 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable66, objArray71);
        java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray71);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException61, localizable62, objArray71);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable54, objArray71);
        java.lang.Throwable throwable79 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException(throwable79);
        org.apache.commons.math.exception.util.Localizable localizable81 = null;
        java.lang.Object[] objArray84 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable79, localizable81, objArray84);
        java.lang.Object[] objArray86 = mathRuntimeException85.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException87 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException50, (double) 0L, localizable54, objArray86);
        java.lang.Object[] objArray89 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException26, doubleArray43, localizable54, objArray89);
        levenbergMarquardtOptimizer0.targetValues = doubleArray43;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException49);
        org.junit.Assert.assertTrue("'" + localizable54 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable54.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException60);
        org.junit.Assert.assertTrue("'" + localizable66 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable66.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException72);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException74);
        org.junit.Assert.assertNotNull(nullPointerException75);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException87);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: ldc2_w        #95
85: invokevirtual #162
88: aconst_null
89: astore        4
91: iconst_5
92: anewarray     #5
95: dup
96: iconst_0
97: iconst_0
98: invokestatic  #16
101: aastore
102: dup
103: iconst_1
104: iconst_0
105: invokestatic  #17
108: aastore
109: dup
110: iconst_2
111: bipush        52
113: invokestatic  #18
116: aastore
117: dup
118: iconst_3
119: ldc2_w        #19
122: invokestatic  #21
125: aastore
126: dup
127: iconst_4
128: dconst_1
129: invokestatic  #22
132: aastore
133: astore        5
135: new           #23
138: dup
139: ldc2_w        #24
142: aload         4
144: aload         5
146: invokespecial #26
149: astore        6
151: new           #27
154: dup
155: ldc           #28
157: aload         5
159: invokespecial #29
162: astore        7
164: aconst_null
165: astore        8
167: iconst_5
168: anewarray     #5
171: dup
172: iconst_0
173: iconst_0
174: invokestatic  #16
177: aastore
178: dup
179: iconst_1
180: iconst_0
181: invokestatic  #17
184: aastore
185: dup
186: iconst_2
187: bipush        52
189: invokestatic  #18
192: aastore
193: dup
194: iconst_3
195: ldc2_w        #19
198: invokestatic  #21
201: aastore
202: dup
203: iconst_4
204: dconst_1
205: invokestatic  #22
208: aastore
209: astore        9
211: new           #23
214: dup
215: ldc2_w        #24
218: aload         8
220: aload         9
222: invokespecial #26
225: astore        10
227: new           #27
230: dup
231: aload         7
233: ldc           #28
235: aload         9
237: invokespecial #30
240: astore        11
242: iconst_5
243: newarray       double
245: dup
246: iconst_0
247: ldc2_w        #31
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #33
256: dastore
257: dup
258: iconst_2
259: ldc2_w        #31
262: dastore
263: dup
264: iconst_3
265: ldc2_w        #31
268: dastore
269: dup
270: iconst_4
271: dconst_1
272: dastore
273: astore        12
275: aconst_null
276: astore        13
278: iconst_1
279: anewarray     #5
282: dup
283: iconst_0
284: iconst_1
285: invokestatic  #35
288: aastore
289: astore        14
291: ldc           #28
293: aload         14
295: invokestatic  #36
298: astore        15
300: new           #37
303: dup
304: bipush        100
306: aload         13
308: aload         14
310: invokespecial #38
313: astore        16
315: aconst_null
316: astore        17
318: new           #27
321: dup
322: aload         17
324: invokespecial #39
327: astore        18
329: aload         18
331: invokevirtual #40
334: astore        19
336: aconst_null
337: astore        20
339: iconst_1
340: anewarray     #5
343: dup
344: iconst_0
345: iconst_1
346: invokestatic  #35
349: aastore
350: astore        21
352: ldc           #28
354: aload         21
356: invokestatic  #36
359: astore        22
361: new           #37
364: dup
365: bipush        100
367: aload         20
369: aload         21
371: invokespecial #38
374: astore        23
376: aconst_null
377: astore        24
379: aconst_null
380: astore        25
382: new           #27
385: dup
386: aload         25
388: invokespecial #39
391: astore        26
393: aload         26
395: invokevirtual #40
398: astore        27
400: aconst_null
401: astore        28
403: iconst_1
404: anewarray     #5
407: dup
408: iconst_0
409: iconst_1
410: invokestatic  #35
413: aastore
414: astore        29
416: ldc           #28
418: aload         29
420: invokestatic  #36
423: astore        30
425: new           #37
428: dup
429: bipush        100
431: aload         28
433: aload         29
435: invokespecial #38
438: astore        31
440: aload         27
442: aload         29
444: invokestatic  #41
447: astore        32
449: ldc           #42
451: aload         29
453: invokestatic  #43
456: astore        33
458: new           #44
461: dup
462: aload         23
464: aload         24
466: aload         29
468: invokespecial #45
471: astore        34
473: aload         19
475: aload         29
477: invokestatic  #46
480: astore        35
482: aconst_null
483: astore        36
485: new           #27
488: dup
489: aload         36
491: invokespecial #39
494: astore        37
496: aconst_null
497: astore        38
499: iconst_2
500: anewarray     #5
503: dup
504: iconst_0
505: ldc           #28
507: aastore
508: dup
509: iconst_1
510: iconst_1
511: invokestatic  #17
514: aastore
515: astore        39
517: new           #27
520: dup
521: aload         36
523: aload         38
525: aload         39
527: invokespecial #47
530: astore        40
532: aload         40
534: invokevirtual #48
537: astore        41
539: ldc           #42
541: aload         41
543: invokestatic  #49
546: astore        42
548: new           #23
551: dup
552: aload         16
554: dconst_0
555: aload         19
557: aload         41
559: invokespecial #50
562: astore        43
564: aconst_null
565: astore        44
567: new           #23
570: dup
571: aload         7
573: aload         12
575: aload         19
577: aload         44
579: invokespecial #51
582: astore        45
584: aload_1
585: aload         12
587: putfield      #152
590: new           #64
593: dup
594: invokespecial #65
597: ldc           #66
599: invokevirtual #67
602: iload_2
603: invokevirtual #102
606: ldc           #69
608: invokevirtual #67
611: sipush        1000
614: invokevirtual #102
617: ldc           #66
619: invokevirtual #67
622: invokevirtual #71
625: iload_2
626: sipush        1000
629: if_icmpne     636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #73
640: aload         5
642: invokestatic  #56
645: aload         5
647: invokestatic  #57
650: ldc           #58
652: invokestatic  #59
655: aload         5
657: invokestatic  #60
660: ldc           #58
662: invokestatic  #59
665: aload         9
667: invokestatic  #56
670: aload         9
672: invokestatic  #57
675: ldc           #58
677: invokestatic  #59
680: aload         9
682: invokestatic  #60
685: ldc           #58
687: invokestatic  #59
690: aload         12
692: invokestatic  #56
695: aload         12
697: invokestatic  #61
700: ldc           #62
702: invokestatic  #59
705: aload         14
707: invokestatic  #56
710: aload         14
712: invokestatic  #57
715: ldc           #63
717: invokestatic  #59
720: aload         14
722: invokestatic  #60
725: ldc           #63
727: invokestatic  #59
730: aload         15
732: invokestatic  #56
735: new           #64
738: dup
739: invokespecial #65
742: ldc           #66
744: invokevirtual #67
747: aload         19
749: invokevirtual #68
752: ldc           #69
754: invokevirtual #67
757: getstatic     #70
760: invokevirtual #68
763: ldc           #66
765: invokevirtual #67
768: invokevirtual #71
771: aload         19
773: getstatic     #70
776: invokevirtual #72
779: invokestatic  #73
782: aload         21
784: invokestatic  #56
787: aload         21
789: invokestatic  #57
792: ldc           #63
794: invokestatic  #59
797: aload         21
799: invokestatic  #60
802: ldc           #63
804: invokestatic  #59
807: aload         22
809: invokestatic  #56
812: new           #64
815: dup
816: invokespecial #65
819: ldc           #66
821: invokevirtual #67
824: aload         27
826: invokevirtual #68
829: ldc           #69
831: invokevirtual #67
834: getstatic     #70
837: invokevirtual #68
840: ldc           #66
842: invokevirtual #67
845: invokevirtual #71
848: aload         27
850: getstatic     #70
853: invokevirtual #72
856: invokestatic  #73
859: aload         29
861: invokestatic  #56
864: aload         29
866: invokestatic  #57
869: ldc           #63
871: invokestatic  #59
874: aload         29
876: invokestatic  #60
879: ldc           #63
881: invokestatic  #59
884: aload         30
886: invokestatic  #56
889: aload         32
891: invokestatic  #56
894: aload         33
896: invokestatic  #56
899: aload         35
901: invokestatic  #56
904: aload         39
906: invokestatic  #56
909: aload         39
911: invokestatic  #57
914: ldc           #74
916: invokestatic  #59
919: aload         39
921: invokestatic  #60
924: ldc           #74
926: invokestatic  #59
929: aload         41
931: invokestatic  #56
934: aload         41
936: invokestatic  #57
939: ldc           #74
941: invokestatic  #59
944: aload         41
946: invokestatic  #60
949: ldc           #74
951: invokestatic  #59
954: aload         42
956: invokestatic  #56
959: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 10047
End line: 10154
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        double double39 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer40.rows = 0;
        levenbergMarquardtOptimizer40.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray45 = levenbergMarquardtOptimizer40.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException47 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50);
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable50, localizable52, objArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException47, 0.0d, "hi!", objArray55);
        double[] doubleArray58 = functionEvaluationException57.getArgument();
        double[] doubleArray59 = functionEvaluationException57.getArgument();
        levenbergMarquardtOptimizer40.objective = doubleArray59;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65);
        org.apache.commons.math.exception.util.Localizable localizable67 = null;
        java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70);
        double[] doubleArray73 = functionEvaluationException72.getArgument();
        double[] doubleArray75 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray73, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83);
        org.apache.commons.math.exception.util.Localizable localizable85 = null;
        java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88);
        double[] doubleArray91 = functionEvaluationException90.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray91);
        double[] doubleArray93 = functionEvaluationException92.getArgument();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray93, true);
        double[] doubleArray96 = vectorialPointValuePair95.getPointRef();
        levenbergMarquardtOptimizer0.targetValues = doubleArray96;
        levenbergMarquardtOptimizer0.cols = (byte) 10;
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #97
278: dstore        24
280: new           #8
283: dup
284: invokespecial #9
287: astore        26
289: aload         26
291: iconst_0
292: putfield      #93
295: aload         26
297: iconst_1
298: invokevirtual #76
301: aload         26
303: getfield      #113
306: astore        27
308: new           #81
311: dup
312: iconst_m1
313: invokespecial #82
316: astore        28
318: aconst_null
319: astore        29
321: new           #27
324: dup
325: aload         29
327: invokespecial #39
330: astore        30
332: aconst_null
333: astore        31
335: iconst_2
336: anewarray     #5
339: dup
340: iconst_0
341: ldc           #28
343: aastore
344: dup
345: iconst_1
346: iconst_1
347: invokestatic  #17
350: aastore
351: astore        32
353: new           #27
356: dup
357: aload         29
359: aload         31
361: aload         32
363: invokespecial #47
366: astore        33
368: new           #23
371: dup
372: aload         28
374: dconst_0
375: ldc           #28
377: aload         32
379: invokespecial #83
382: astore        34
384: aload         34
386: invokevirtual #84
389: astore        35
391: aload         34
393: invokevirtual #84
396: astore        36
398: aload         26
400: aload         36
402: putfield      #114
405: new           #81
408: dup
409: iconst_m1
410: invokespecial #82
413: astore        37
415: aconst_null
416: astore        38
418: new           #27
421: dup
422: aload         38
424: invokespecial #39
427: astore        39
429: aconst_null
430: astore        40
432: iconst_2
433: anewarray     #5
436: dup
437: iconst_0
438: ldc           #28
440: aastore
441: dup
442: iconst_1
443: iconst_1
444: invokestatic  #17
447: aastore
448: astore        41
450: new           #27
453: dup
454: aload         38
456: aload         40
458: aload         41
460: invokespecial #47
463: astore        42
465: new           #23
468: dup
469: aload         37
471: dconst_0
472: ldc           #28
474: aload         41
476: invokespecial #83
479: astore        43
481: aload         43
483: invokevirtual #84
486: astore        44
488: iconst_1
489: newarray       double
491: dup
492: iconst_0
493: ldc2_w        #85
496: dastore
497: astore        45
499: new           #87
502: dup
503: aload         44
505: aload         45
507: invokespecial #88
510: astore        46
512: new           #87
515: dup
516: aload         36
518: aload         44
520: iconst_0
521: invokespecial #117
524: astore        47
526: new           #81
529: dup
530: iconst_m1
531: invokespecial #82
534: astore        48
536: aconst_null
537: astore        49
539: new           #27
542: dup
543: aload         49
545: invokespecial #39
548: astore        50
550: aconst_null
551: astore        51
553: iconst_2
554: anewarray     #5
557: dup
558: iconst_0
559: ldc           #28
561: aastore
562: dup
563: iconst_1
564: iconst_1
565: invokestatic  #17
568: aastore
569: astore        52
571: new           #27
574: dup
575: aload         49
577: aload         51
579: aload         52
581: invokespecial #47
584: astore        53
586: new           #23
589: dup
590: aload         48
592: dconst_0
593: ldc           #28
595: aload         52
597: invokespecial #83
600: astore        54
602: aload         54
604: invokevirtual #84
607: astore        55
609: new           #23
612: dup
613: aload         55
615: invokespecial #89
618: astore        56
620: aload         56
622: invokevirtual #84
625: astore        57
627: new           #87
630: dup
631: aload         44
633: aload         57
635: iconst_1
636: invokespecial #117
639: astore        58
641: aload         58
643: invokevirtual #159
646: astore        59
648: aload_1
649: aload         59
651: putfield      #152
654: aload_1
655: bipush        10
657: putfield      #105
660: aload         7
662: invokestatic  #56
665: aload         7
667: invokestatic  #57
670: ldc           #74
672: invokestatic  #59
675: aload         7
677: invokestatic  #60
680: ldc           #74
682: invokestatic  #59
685: aload         10
687: invokestatic  #56
690: aload         10
692: invokestatic  #61
695: ldc           #90
697: invokestatic  #59
700: aload         11
702: invokestatic  #56
705: aload         11
707: invokestatic  #61
710: ldc           #91
712: invokestatic  #59
715: aload         17
717: invokestatic  #56
720: aload         17
722: invokestatic  #57
725: ldc           #74
727: invokestatic  #59
730: aload         17
732: invokestatic  #60
735: ldc           #74
737: invokestatic  #59
740: aload         20
742: invokestatic  #56
745: aload         20
747: invokestatic  #61
750: ldc           #90
752: invokestatic  #59
755: aload         21
757: invokestatic  #56
760: aload         21
762: invokestatic  #61
765: ldc           #91
767: invokestatic  #59
770: new           #64
773: dup
774: invokespecial #65
777: ldc           #66
779: invokevirtual #67
782: iload         23
784: invokevirtual #119
787: ldc           #69
789: invokevirtual #67
792: iconst_1
793: invokevirtual #119
796: ldc           #66
798: invokevirtual #67
801: invokevirtual #71
804: iload         23
806: iconst_1
807: if_icmpne     814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #73
818: new           #64
821: dup
822: invokespecial #65
825: ldc           #66
827: invokevirtual #67
830: dload         24
832: invokevirtual #79
835: ldc           #69
837: invokevirtual #67
840: dconst_0
841: invokevirtual #79
844: ldc           #66
846: invokevirtual #67
849: invokevirtual #71
852: dload         24
854: dconst_0
855: dcmpl
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #73
867: aload         27
869: invokestatic  #106
872: aload         32
874: invokestatic  #56
877: aload         32
879: invokestatic  #57
882: ldc           #74
884: invokestatic  #59
887: aload         32
889: invokestatic  #60
892: ldc           #74
894: invokestatic  #59
897: aload         35
899: invokestatic  #56
902: aload         35
904: invokestatic  #61
907: ldc           #90
909: invokestatic  #59
912: aload         36
914: invokestatic  #56
917: aload         36
919: invokestatic  #61
922: ldc           #90
924: invokestatic  #59
927: aload         41
929: invokestatic  #56
932: aload         41
934: invokestatic  #57
937: ldc           #74
939: invokestatic  #59
942: aload         41
944: invokestatic  #60
947: ldc           #74
949: invokestatic  #59
952: aload         44
954: invokestatic  #56
957: aload         44
959: invokestatic  #61
962: ldc           #90
964: invokestatic  #59
967: aload         45
969: invokestatic  #56
972: aload         45
974: invokestatic  #61
977: ldc           #91
979: invokestatic  #59
982: aload         52
984: invokestatic  #56
987: aload         52
989: invokestatic  #57
992: ldc           #74
994: invokestatic  #59
997: aload         52
999: invokestatic  #60
1002: ldc           #74
1004: invokestatic  #59
1007: aload         55
1009: invokestatic  #56
1012: aload         55
1014: invokestatic  #61
1017: ldc           #90
1019: invokestatic  #59
1022: aload         57
1024: invokestatic  #56
1027: aload         57
1029: invokestatic  #61
1032: ldc           #90
1034: invokestatic  #59
1037: aload         59
1039: invokestatic  #56
1042: aload         59
1044: invokestatic  #61
1047: ldc           #90
1049: invokestatic  #59
1052: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 10157
End line: 10253
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (byte) -1, (double) (short) -1);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8);
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13);
        double[] doubleArray16 = functionEvaluationException15.getArgument();
        double[] doubleArray18 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray18);
        double[] doubleArray20 = vectorialPointValuePair19.getPointRef();
        double[] doubleArray21 = vectorialPointValuePair19.getValueRef();
        double[] doubleArray22 = vectorialPointValuePair19.getValue();
        double[] doubleArray23 = vectorialPointValuePair19.getValueRef();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.rows = 0;
        levenbergMarquardtOptimizer24.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray29 = levenbergMarquardtOptimizer24.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException31 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable34);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray39 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable34, localizable36, objArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException31, 0.0d, "hi!", objArray39);
        double[] doubleArray42 = functionEvaluationException41.getArgument();
        double[] doubleArray43 = functionEvaluationException41.getArgument();
        levenbergMarquardtOptimizer24.objective = doubleArray43;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54);
        double[] doubleArray57 = functionEvaluationException56.getArgument();
        double[] doubleArray59 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair60 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray57, doubleArray59);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray57, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException64 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable67 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException68 = new org.apache.commons.math.MathRuntimeException(throwable67);
        org.apache.commons.math.exception.util.Localizable localizable69 = null;
        java.lang.Object[] objArray72 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable67, localizable69, objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException64, 0.0d, "hi!", objArray72);
        double[] doubleArray75 = functionEvaluationException74.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(doubleArray75);
        double[] doubleArray77 = functionEvaluationException76.getArgument();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray57, doubleArray77, true);
        boolean boolean80 = simpleVectorialValueChecker2.converged(1, vectorialPointValuePair19, vectorialPointValuePair79);
        double[] doubleArray81 = vectorialPointValuePair79.getPoint();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0]");
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #392
20: aastore
21: invokevirtual #7
24: pop
25: new           #99
28: dup
29: ldc2_w        #31
32: ldc2_w        #31
35: invokespecial #116
38: astore_1
39: new           #81
42: dup
43: iconst_m1
44: invokespecial #82
47: astore_2
48: aconst_null
49: astore_3
50: new           #27
53: dup
54: aload_3
55: invokespecial #39
58: astore        4
60: aconst_null
61: astore        5
63: iconst_2
64: anewarray     #5
67: dup
68: iconst_0
69: ldc           #28
71: aastore
72: dup
73: iconst_1
74: iconst_1
75: invokestatic  #17
78: aastore
79: astore        6
81: new           #27
84: dup
85: aload_3
86: aload         5
88: aload         6
90: invokespecial #47
93: astore        7
95: new           #23
98: dup
99: aload_2
100: dconst_0
101: ldc           #28
103: aload         6
105: invokespecial #83
108: astore        8
110: aload         8
112: invokevirtual #84
115: astore        9
117: iconst_1
118: newarray       double
120: dup
121: iconst_0
122: ldc2_w        #85
125: dastore
126: astore        10
128: new           #87
131: dup
132: aload         9
134: aload         10
136: invokespecial #88
139: astore        11
141: aload         11
143: invokevirtual #159
146: astore        12
148: aload         11
150: invokevirtual #210
153: astore        13
155: aload         11
157: invokevirtual #157
160: astore        14
162: aload         11
164: invokevirtual #210
167: astore        15
169: new           #8
172: dup
173: invokespecial #9
176: astore        16
178: aload         16
180: iconst_0
181: putfield      #93
184: aload         16
186: iconst_1
187: invokevirtual #76
190: aload         16
192: getfield      #113
195: astore        17
197: new           #81
200: dup
201: iconst_m1
202: invokespecial #82
205: astore        18
207: aconst_null
208: astore        19
210: new           #27
213: dup
214: aload         19
216: invokespecial #39
219: astore        20
221: aconst_null
222: astore        21
224: iconst_2
225: anewarray     #5
228: dup
229: iconst_0
230: ldc           #28
232: aastore
233: dup
234: iconst_1
235: iconst_1
236: invokestatic  #17
239: aastore
240: astore        22
242: new           #27
245: dup
246: aload         19
248: aload         21
250: aload         22
252: invokespecial #47
255: astore        23
257: new           #23
260: dup
261: aload         18
263: dconst_0
264: ldc           #28
266: aload         22
268: invokespecial #83
271: astore        24
273: aload         24
275: invokevirtual #84
278: astore        25
280: aload         24
282: invokevirtual #84
285: astore        26
287: aload         16
289: aload         26
291: putfield      #114
294: new           #81
297: dup
298: iconst_m1
299: invokespecial #82
302: astore        27
304: aconst_null
305: astore        28
307: new           #27
310: dup
311: aload         28
313: invokespecial #39
316: astore        29
318: aconst_null
319: astore        30
321: iconst_2
322: anewarray     #5
325: dup
326: iconst_0
327: ldc           #28
329: aastore
330: dup
331: iconst_1
332: iconst_1
333: invokestatic  #17
336: aastore
337: astore        31
339: new           #27
342: dup
343: aload         28
345: aload         30
347: aload         31
349: invokespecial #47
352: astore        32
354: new           #23
357: dup
358: aload         27
360: dconst_0
361: ldc           #28
363: aload         31
365: invokespecial #83
368: astore        33
370: aload         33
372: invokevirtual #84
375: astore        34
377: iconst_1
378: newarray       double
380: dup
381: iconst_0
382: ldc2_w        #85
385: dastore
386: astore        35
388: new           #87
391: dup
392: aload         34
394: aload         35
396: invokespecial #88
399: astore        36
401: new           #87
404: dup
405: aload         26
407: aload         34
409: iconst_0
410: invokespecial #117
413: astore        37
415: new           #81
418: dup
419: iconst_m1
420: invokespecial #82
423: astore        38
425: aconst_null
426: astore        39
428: new           #27
431: dup
432: aload         39
434: invokespecial #39
437: astore        40
439: aconst_null
440: astore        41
442: iconst_2
443: anewarray     #5
446: dup
447: iconst_0
448: ldc           #28
450: aastore
451: dup
452: iconst_1
453: iconst_1
454: invokestatic  #17
457: aastore
458: astore        42
460: new           #27
463: dup
464: aload         39
466: aload         41
468: aload         42
470: invokespecial #47
473: astore        43
475: new           #23
478: dup
479: aload         38
481: dconst_0
482: ldc           #28
484: aload         42
486: invokespecial #83
489: astore        44
491: aload         44
493: invokevirtual #84
496: astore        45
498: new           #23
501: dup
502: aload         45
504: invokespecial #89
507: astore        46
509: aload         46
511: invokevirtual #84
514: astore        47
516: new           #87
519: dup
520: aload         34
522: aload         47
524: iconst_1
525: invokespecial #117
528: astore        48
530: aload_1
531: iconst_1
532: aload         11
534: aload         48
536: invokevirtual #118
539: istore        49
541: aload         48
543: invokevirtual #185
546: astore        50
548: aload         6
550: invokestatic  #56
553: aload         6
555: invokestatic  #57
558: ldc           #74
560: invokestatic  #59
563: aload         6
565: invokestatic  #60
568: ldc           #74
570: invokestatic  #59
573: aload         9
575: invokestatic  #56
578: aload         9
580: invokestatic  #61
583: ldc           #90
585: invokestatic  #59
588: aload         10
590: invokestatic  #56
593: aload         10
595: invokestatic  #61
598: ldc           #91
600: invokestatic  #59
603: aload         12
605: invokestatic  #56
608: aload         12
610: invokestatic  #61
613: ldc           #90
615: invokestatic  #59
618: aload         13
620: invokestatic  #56
623: aload         13
625: invokestatic  #61
628: ldc           #91
630: invokestatic  #59
633: aload         14
635: invokestatic  #56
638: aload         14
640: invokestatic  #61
643: ldc           #91
645: invokestatic  #59
648: aload         15
650: invokestatic  #56
653: aload         15
655: invokestatic  #61
658: ldc           #91
660: invokestatic  #59
663: aload         17
665: invokestatic  #106
668: aload         22
670: invokestatic  #56
673: aload         22
675: invokestatic  #57
678: ldc           #74
680: invokestatic  #59
683: aload         22
685: invokestatic  #60
688: ldc           #74
690: invokestatic  #59
693: aload         25
695: invokestatic  #56
698: aload         25
700: invokestatic  #61
703: ldc           #90
705: invokestatic  #59
708: aload         26
710: invokestatic  #56
713: aload         26
715: invokestatic  #61
718: ldc           #90
720: invokestatic  #59
723: aload         31
725: invokestatic  #56
728: aload         31
730: invokestatic  #57
733: ldc           #74
735: invokestatic  #59
738: aload         31
740: invokestatic  #60
743: ldc           #74
745: invokestatic  #59
748: aload         34
750: invokestatic  #56
753: aload         34
755: invokestatic  #61
758: ldc           #90
760: invokestatic  #59
763: aload         35
765: invokestatic  #56
768: aload         35
770: invokestatic  #61
773: ldc           #91
775: invokestatic  #59
778: aload         42
780: invokestatic  #56
783: aload         42
785: invokestatic  #57
788: ldc           #74
790: invokestatic  #59
793: aload         42
795: invokestatic  #60
798: ldc           #74
800: invokestatic  #59
803: aload         45
805: invokestatic  #56
808: aload         45
810: invokestatic  #61
813: ldc           #90
815: invokestatic  #59
818: aload         47
820: invokestatic  #56
823: aload         47
825: invokestatic  #61
828: ldc           #90
830: invokestatic  #59
833: new           #64
836: dup
837: invokespecial #65
840: ldc           #66
842: invokevirtual #67
845: iload         49
847: invokevirtual #119
850: ldc           #69
852: invokevirtual #67
855: iconst_0
856: invokevirtual #119
859: ldc           #66
861: invokevirtual #67
864: invokevirtual #71
867: iload         49
869: ifne          876
872: iconst_1
873: goto          877
876: iconst_0
877: invokestatic  #73
880: aload         50
882: invokestatic  #56
885: aload         50
887: invokestatic  #61
890: ldc           #90
892: invokestatic  #59
895: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 10256
End line: 10289
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker25 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int26 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertNull(vectorialConvergenceChecker25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #393
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aload_1
156: invokevirtual #10
159: aload_1
160: invokevirtual #104
163: astore        13
165: aload_1
166: invokevirtual #167
169: istore        14
171: aload_2
172: invokestatic  #106
175: aload         7
177: invokestatic  #56
180: aload         7
182: invokestatic  #57
185: ldc           #74
187: invokestatic  #59
190: aload         7
192: invokestatic  #60
195: ldc           #74
197: invokestatic  #59
200: aload         10
202: invokestatic  #56
205: aload         10
207: invokestatic  #61
210: ldc           #90
212: invokestatic  #59
215: aload         11
217: invokestatic  #56
220: aload         11
222: invokestatic  #61
225: ldc           #90
227: invokestatic  #59
230: aload         12
232: invokestatic  #106
235: aload         13
237: invokestatic  #106
240: new           #64
243: dup
244: invokespecial #65
247: ldc           #66
249: invokevirtual #67
252: iload         14
254: invokevirtual #102
257: ldc           #69
259: invokevirtual #67
262: iconst_0
263: invokevirtual #102
266: ldc           #66
268: invokevirtual #67
271: invokevirtual #71
274: iload         14
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #73
287: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 10292
End line: 10341
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false);
        double[] doubleArray39 = vectorialPointValuePair38.getPointRef();
        double[] doubleArray40 = vectorialPointValuePair38.getPointRef();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #394
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #81
145: dup
146: iconst_m1
147: invokespecial #82
150: astore        12
152: aconst_null
153: astore        13
155: new           #27
158: dup
159: aload         13
161: invokespecial #39
164: astore        14
166: aconst_null
167: astore        15
169: iconst_2
170: anewarray     #5
173: dup
174: iconst_0
175: ldc           #28
177: aastore
178: dup
179: iconst_1
180: iconst_1
181: invokestatic  #17
184: aastore
185: astore        16
187: new           #27
190: dup
191: aload         13
193: aload         15
195: aload         16
197: invokespecial #47
200: astore        17
202: new           #23
205: dup
206: aload         12
208: dconst_0
209: ldc           #28
211: aload         16
213: invokespecial #83
216: astore        18
218: aload         18
220: invokevirtual #84
223: astore        19
225: iconst_1
226: newarray       double
228: dup
229: iconst_0
230: ldc2_w        #85
233: dastore
234: astore        20
236: new           #87
239: dup
240: aload         19
242: aload         20
244: invokespecial #88
247: astore        21
249: new           #87
252: dup
253: aload         11
255: aload         19
257: iconst_0
258: invokespecial #117
261: astore        22
263: aload         22
265: invokevirtual #159
268: astore        23
270: aload         22
272: invokevirtual #159
275: astore        24
277: aload_2
278: invokestatic  #106
281: aload         7
283: invokestatic  #56
286: aload         7
288: invokestatic  #57
291: ldc           #74
293: invokestatic  #59
296: aload         7
298: invokestatic  #60
301: ldc           #74
303: invokestatic  #59
306: aload         10
308: invokestatic  #56
311: aload         10
313: invokestatic  #61
316: ldc           #90
318: invokestatic  #59
321: aload         11
323: invokestatic  #56
326: aload         11
328: invokestatic  #61
331: ldc           #90
333: invokestatic  #59
336: aload         16
338: invokestatic  #56
341: aload         16
343: invokestatic  #57
346: ldc           #74
348: invokestatic  #59
351: aload         16
353: invokestatic  #60
356: ldc           #74
358: invokestatic  #59
361: aload         19
363: invokestatic  #56
366: aload         19
368: invokestatic  #61
371: ldc           #90
373: invokestatic  #59
376: aload         20
378: invokestatic  #56
381: aload         20
383: invokestatic  #61
386: ldc           #91
388: invokestatic  #59
391: aload         23
393: invokestatic  #56
396: aload         23
398: invokestatic  #61
401: ldc           #90
403: invokestatic  #59
406: aload         24
408: invokestatic  #56
411: aload         24
413: invokestatic  #61
416: ldc           #90
418: invokestatic  #59
421: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 10344
End line: 10432
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.cols = 1;
        levenbergMarquardtOptimizer0.setOrthoTolerance(10000.0d);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: iconst_1
555: putfield      #105
558: aload_1
559: ldc2_w        #299
562: invokevirtual #129
565: aload_3
566: invokestatic  #56
569: aload_3
570: invokestatic  #57
573: ldc           #58
575: invokestatic  #59
578: aload_3
579: invokestatic  #60
582: ldc           #58
584: invokestatic  #59
587: aload         7
589: invokestatic  #56
592: aload         7
594: invokestatic  #57
597: ldc           #58
599: invokestatic  #59
602: aload         7
604: invokestatic  #60
607: ldc           #58
609: invokestatic  #59
612: aload         10
614: invokestatic  #56
617: aload         10
619: invokestatic  #61
622: ldc           #62
624: invokestatic  #59
627: aload         12
629: invokestatic  #56
632: aload         12
634: invokestatic  #57
637: ldc           #63
639: invokestatic  #59
642: aload         12
644: invokestatic  #60
647: ldc           #63
649: invokestatic  #59
652: aload         13
654: invokestatic  #56
657: new           #64
660: dup
661: invokespecial #65
664: ldc           #66
666: invokevirtual #67
669: aload         17
671: invokevirtual #68
674: ldc           #69
676: invokevirtual #67
679: getstatic     #70
682: invokevirtual #68
685: ldc           #66
687: invokevirtual #67
690: invokevirtual #71
693: aload         17
695: getstatic     #70
698: invokevirtual #72
701: invokestatic  #73
704: aload         19
706: invokestatic  #56
709: aload         19
711: invokestatic  #57
714: ldc           #63
716: invokestatic  #59
719: aload         19
721: invokestatic  #60
724: ldc           #63
726: invokestatic  #59
729: aload         20
731: invokestatic  #56
734: new           #64
737: dup
738: invokespecial #65
741: ldc           #66
743: invokevirtual #67
746: aload         25
748: invokevirtual #68
751: ldc           #69
753: invokevirtual #67
756: getstatic     #70
759: invokevirtual #68
762: ldc           #66
764: invokevirtual #67
767: invokevirtual #71
770: aload         25
772: getstatic     #70
775: invokevirtual #72
778: invokestatic  #73
781: aload         27
783: invokestatic  #56
786: aload         27
788: invokestatic  #57
791: ldc           #63
793: invokestatic  #59
796: aload         27
798: invokestatic  #60
801: ldc           #63
803: invokestatic  #59
806: aload         28
808: invokestatic  #56
811: aload         30
813: invokestatic  #56
816: aload         31
818: invokestatic  #56
821: aload         33
823: invokestatic  #56
826: aload         37
828: invokestatic  #56
831: aload         37
833: invokestatic  #57
836: ldc           #74
838: invokestatic  #59
841: aload         37
843: invokestatic  #60
846: ldc           #74
848: invokestatic  #59
851: aload         39
853: invokestatic  #56
856: aload         39
858: invokestatic  #57
861: ldc           #74
863: invokestatic  #59
866: aload         39
868: invokestatic  #60
871: ldc           #74
873: invokestatic  #59
876: aload         40
878: invokestatic  #56
881: new           #64
884: dup
885: invokespecial #65
888: ldc           #66
890: invokevirtual #67
893: dload         44
895: invokevirtual #79
898: ldc           #69
900: invokevirtual #67
903: dconst_0
904: invokevirtual #79
907: ldc           #66
909: invokevirtual #67
912: invokevirtual #71
915: dload         44
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #73
930: new           #64
933: dup
934: invokespecial #65
937: ldc           #66
939: invokevirtual #67
942: iload         46
944: invokevirtual #102
947: ldc           #69
949: invokevirtual #67
952: sipush        1000
955: invokevirtual #102
958: ldc           #66
960: invokevirtual #67
963: invokevirtual #71
966: iload         46
968: sipush        1000
971: if_icmpne     978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #73
982: new           #64
985: dup
986: invokespecial #65
989: ldc           #66
991: invokevirtual #67
994: iload         47
996: invokevirtual #102
999: ldc           #69
1001: invokevirtual #67
1004: iconst_0
1005: invokevirtual #102
1008: ldc           #66
1010: invokevirtual #67
1013: invokevirtual #71
1016: iload         47
1018: ifne          1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #73
1029: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 10435
End line: 10532
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38);
        double[] doubleArray41 = functionEvaluationException40.getArgument();
        double[] doubleArray43 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61);
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73);
        java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        java.lang.Object[] objArray88 = mathRuntimeException87.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray41;
        int int93 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(nullPointerException79);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #396
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aconst_null
50: astore_2
51: iconst_5
52: anewarray     #5
55: dup
56: iconst_0
57: iconst_0
58: invokestatic  #16
61: aastore
62: dup
63: iconst_1
64: iconst_0
65: invokestatic  #17
68: aastore
69: dup
70: iconst_2
71: bipush        52
73: invokestatic  #18
76: aastore
77: dup
78: iconst_3
79: ldc2_w        #19
82: invokestatic  #21
85: aastore
86: dup
87: iconst_4
88: dconst_1
89: invokestatic  #22
92: aastore
93: astore_3
94: new           #23
97: dup
98: ldc2_w        #24
101: aload_2
102: aload_3
103: invokespecial #26
106: astore        4
108: new           #27
111: dup
112: ldc           #28
114: aload_3
115: invokespecial #29
118: astore        5
120: aconst_null
121: astore        6
123: iconst_5
124: anewarray     #5
127: dup
128: iconst_0
129: iconst_0
130: invokestatic  #16
133: aastore
134: dup
135: iconst_1
136: iconst_0
137: invokestatic  #17
140: aastore
141: dup
142: iconst_2
143: bipush        52
145: invokestatic  #18
148: aastore
149: dup
150: iconst_3
151: ldc2_w        #19
154: invokestatic  #21
157: aastore
158: dup
159: iconst_4
160: dconst_1
161: invokestatic  #22
164: aastore
165: astore        7
167: new           #23
170: dup
171: ldc2_w        #24
174: aload         6
176: aload         7
178: invokespecial #26
181: astore        8
183: new           #27
186: dup
187: aload         5
189: ldc           #28
191: aload         7
193: invokespecial #30
196: astore        9
198: new           #81
201: dup
202: iconst_m1
203: invokespecial #82
206: astore        10
208: aconst_null
209: astore        11
211: new           #27
214: dup
215: aload         11
217: invokespecial #39
220: astore        12
222: aconst_null
223: astore        13
225: iconst_2
226: anewarray     #5
229: dup
230: iconst_0
231: ldc           #28
233: aastore
234: dup
235: iconst_1
236: iconst_1
237: invokestatic  #17
240: aastore
241: astore        14
243: new           #27
246: dup
247: aload         11
249: aload         13
251: aload         14
253: invokespecial #47
256: astore        15
258: new           #23
261: dup
262: aload         10
264: dconst_0
265: ldc           #28
267: aload         14
269: invokespecial #83
272: astore        16
274: aload         16
276: invokevirtual #84
279: astore        17
281: iconst_1
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #85
289: dastore
290: astore        18
292: new           #87
295: dup
296: aload         17
298: aload         18
300: invokespecial #88
303: astore        19
305: aconst_null
306: astore        20
308: iconst_1
309: anewarray     #5
312: dup
313: iconst_0
314: iconst_1
315: invokestatic  #35
318: aastore
319: astore        21
321: ldc           #28
323: aload         21
325: invokestatic  #36
328: astore        22
330: new           #37
333: dup
334: bipush        100
336: aload         20
338: aload         21
340: invokespecial #38
343: astore        23
345: aconst_null
346: astore        24
348: new           #27
351: dup
352: aload         24
354: invokespecial #39
357: astore        25
359: aload         25
361: invokevirtual #40
364: astore        26
366: aconst_null
367: astore        27
369: iconst_1
370: anewarray     #5
373: dup
374: iconst_0
375: iconst_1
376: invokestatic  #35
379: aastore
380: astore        28
382: ldc           #28
384: aload         28
386: invokestatic  #36
389: astore        29
391: new           #37
394: dup
395: bipush        100
397: aload         27
399: aload         28
401: invokespecial #38
404: astore        30
406: aconst_null
407: astore        31
409: aconst_null
410: astore        32
412: new           #27
415: dup
416: aload         32
418: invokespecial #39
421: astore        33
423: aload         33
425: invokevirtual #40
428: astore        34
430: aconst_null
431: astore        35
433: iconst_1
434: anewarray     #5
437: dup
438: iconst_0
439: iconst_1
440: invokestatic  #35
443: aastore
444: astore        36
446: ldc           #28
448: aload         36
450: invokestatic  #36
453: astore        37
455: new           #37
458: dup
459: bipush        100
461: aload         35
463: aload         36
465: invokespecial #38
468: astore        38
470: aload         34
472: aload         36
474: invokestatic  #41
477: astore        39
479: ldc           #42
481: aload         36
483: invokestatic  #43
486: astore        40
488: new           #44
491: dup
492: aload         30
494: aload         31
496: aload         36
498: invokespecial #45
501: astore        41
503: aload         26
505: aload         36
507: invokestatic  #46
510: astore        42
512: aconst_null
513: astore        43
515: new           #27
518: dup
519: aload         43
521: invokespecial #39
524: astore        44
526: aconst_null
527: astore        45
529: iconst_2
530: anewarray     #5
533: dup
534: iconst_0
535: ldc           #28
537: aastore
538: dup
539: iconst_1
540: iconst_1
541: invokestatic  #17
544: aastore
545: astore        46
547: new           #27
550: dup
551: aload         43
553: aload         45
555: aload         46
557: invokespecial #47
560: astore        47
562: aload         47
564: invokevirtual #48
567: astore        48
569: ldc           #42
571: aload         48
573: invokestatic  #49
576: astore        49
578: new           #23
581: dup
582: aload         23
584: dconst_0
585: aload         26
587: aload         48
589: invokespecial #50
592: astore        50
594: new           #23
597: dup
598: aload         5
600: aload         17
602: ldc           #142
604: aload         48
606: invokespecial #283
609: astore        51
611: aload_1
612: aload         17
614: putfield      #113
617: aload_1
618: invokevirtual #133
621: istore        52
623: aload_3
624: invokestatic  #56
627: aload_3
628: invokestatic  #57
631: ldc           #58
633: invokestatic  #59
636: aload_3
637: invokestatic  #60
640: ldc           #58
642: invokestatic  #59
645: aload         7
647: invokestatic  #56
650: aload         7
652: invokestatic  #57
655: ldc           #58
657: invokestatic  #59
660: aload         7
662: invokestatic  #60
665: ldc           #58
667: invokestatic  #59
670: aload         14
672: invokestatic  #56
675: aload         14
677: invokestatic  #57
680: ldc           #74
682: invokestatic  #59
685: aload         14
687: invokestatic  #60
690: ldc           #74
692: invokestatic  #59
695: aload         17
697: invokestatic  #56
700: aload         17
702: invokestatic  #61
705: ldc           #90
707: invokestatic  #59
710: aload         18
712: invokestatic  #56
715: aload         18
717: invokestatic  #61
720: ldc           #91
722: invokestatic  #59
725: aload         21
727: invokestatic  #56
730: aload         21
732: invokestatic  #57
735: ldc           #63
737: invokestatic  #59
740: aload         21
742: invokestatic  #60
745: ldc           #63
747: invokestatic  #59
750: aload         22
752: invokestatic  #56
755: new           #64
758: dup
759: invokespecial #65
762: ldc           #66
764: invokevirtual #67
767: aload         26
769: invokevirtual #68
772: ldc           #69
774: invokevirtual #67
777: getstatic     #70
780: invokevirtual #68
783: ldc           #66
785: invokevirtual #67
788: invokevirtual #71
791: aload         26
793: getstatic     #70
796: invokevirtual #72
799: invokestatic  #73
802: aload         28
804: invokestatic  #56
807: aload         28
809: invokestatic  #57
812: ldc           #63
814: invokestatic  #59
817: aload         28
819: invokestatic  #60
822: ldc           #63
824: invokestatic  #59
827: aload         29
829: invokestatic  #56
832: new           #64
835: dup
836: invokespecial #65
839: ldc           #66
841: invokevirtual #67
844: aload         34
846: invokevirtual #68
849: ldc           #69
851: invokevirtual #67
854: getstatic     #70
857: invokevirtual #68
860: ldc           #66
862: invokevirtual #67
865: invokevirtual #71
868: aload         34
870: getstatic     #70
873: invokevirtual #72
876: invokestatic  #73
879: aload         36
881: invokestatic  #56
884: aload         36
886: invokestatic  #57
889: ldc           #63
891: invokestatic  #59
894: aload         36
896: invokestatic  #60
899: ldc           #63
901: invokestatic  #59
904: aload         37
906: invokestatic  #56
909: aload         39
911: invokestatic  #56
914: aload         40
916: invokestatic  #56
919: aload         42
921: invokestatic  #56
924: aload         46
926: invokestatic  #56
929: aload         46
931: invokestatic  #57
934: ldc           #74
936: invokestatic  #59
939: aload         46
941: invokestatic  #60
944: ldc           #74
946: invokestatic  #59
949: aload         48
951: invokestatic  #56
954: aload         48
956: invokestatic  #57
959: ldc           #74
961: invokestatic  #59
964: aload         48
966: invokestatic  #60
969: ldc           #74
971: invokestatic  #59
974: aload         49
976: invokestatic  #56
979: new           #64
982: dup
983: invokespecial #65
986: ldc           #66
988: invokevirtual #67
991: iload         52
993: invokevirtual #102
996: ldc           #69
998: invokevirtual #67
1001: iconst_0
1002: invokevirtual #102
1005: ldc           #66
1007: invokevirtual #67
1010: invokevirtual #71
1013: iload         52
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #73
1026: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 10535
End line: 10565
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int21 = levenbergMarquardtOptimizer0.getIterations();
        int int22 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #397
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #126
156: istore        13
158: aload_1
159: invokevirtual #98
162: istore        14
164: aload_1
165: bipush        100
167: invokevirtual #76
170: aload         6
172: invokestatic  #56
175: aload         6
177: invokestatic  #57
180: ldc           #74
182: invokestatic  #59
185: aload         6
187: invokestatic  #60
190: ldc           #74
192: invokestatic  #59
195: aload         9
197: invokestatic  #56
200: aload         9
202: invokestatic  #61
205: ldc           #90
207: invokestatic  #59
210: aload         10
212: invokestatic  #56
215: aload         10
217: invokestatic  #61
220: ldc           #91
222: invokestatic  #59
225: new           #64
228: dup
229: invokespecial #65
232: ldc           #66
234: invokevirtual #67
237: iload         12
239: invokevirtual #102
242: ldc           #69
244: invokevirtual #67
247: sipush        1000
250: invokevirtual #102
253: ldc           #66
255: invokevirtual #67
258: invokevirtual #71
261: iload         12
263: sipush        1000
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #73
277: new           #64
280: dup
281: invokespecial #65
284: ldc           #66
286: invokevirtual #67
289: iload         13
291: invokevirtual #102
294: ldc           #69
296: invokevirtual #67
299: iconst_0
300: invokevirtual #102
303: ldc           #66
305: invokevirtual #67
308: invokevirtual #71
311: iload         13
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #73
324: new           #64
327: dup
328: invokespecial #65
331: ldc           #66
333: invokevirtual #67
336: iload         14
338: invokevirtual #102
341: ldc           #69
343: invokevirtual #67
346: sipush        1000
349: invokevirtual #102
352: ldc           #66
354: invokevirtual #67
357: invokevirtual #71
360: iload         14
362: sipush        1000
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #73
376: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 10568
End line: 10626
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double24 = levenbergMarquardtOptimizer23.cost;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer25.setMaxEvaluations((int) (byte) 0);
        int int28 = levenbergMarquardtOptimizer25.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer29.rows = 0;
        levenbergMarquardtOptimizer29.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer29.setInitialStepBoundFactor((-1.0d));
        int int36 = levenbergMarquardtOptimizer29.getIterations();
        int int37 = levenbergMarquardtOptimizer29.getIterations();
        double[] doubleArray38 = levenbergMarquardtOptimizer29.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer39.rows = 0;
        levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer39.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer39.cost = (short) 100;
        int int48 = levenbergMarquardtOptimizer39.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer39.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker49);
        levenbergMarquardtOptimizer29.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker49);
        levenbergMarquardtOptimizer25.checker = simpleVectorialValueChecker49;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker53 = levenbergMarquardtOptimizer25.getConvergenceChecker();
        levenbergMarquardtOptimizer23.setConvergenceChecker(vectorialConvergenceChecker53);
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker53);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1000 + "'", int28 == 1000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1000 + "'", int48 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: new           #8
152: dup
153: invokespecial #9
156: astore        12
158: aload         12
160: getfield      #97
163: dstore        13
165: new           #8
168: dup
169: invokespecial #9
172: astore        15
174: aload         15
176: iconst_0
177: invokevirtual #76
180: aload         15
182: invokevirtual #98
185: istore        16
187: new           #8
190: dup
191: invokespecial #9
194: astore        17
196: aload         17
198: iconst_0
199: putfield      #93
202: aload         17
204: iconst_1
205: invokevirtual #76
208: aload         17
210: ldc2_w        #31
213: invokevirtual #94
216: aload         17
218: invokevirtual #126
221: istore        18
223: aload         17
225: invokevirtual #126
228: istore        19
230: aload         17
232: getfield      #122
235: astore        20
237: new           #8
240: dup
241: invokespecial #9
244: astore        21
246: aload         21
248: iconst_0
249: putfield      #93
252: aload         21
254: iconst_1
255: invokevirtual #76
258: aload         21
260: ldc2_w        #31
263: invokevirtual #94
266: aload         21
268: ldc2_w        #95
271: putfield      #97
274: aload         21
276: invokevirtual #98
279: istore        22
281: new           #99
284: dup
285: invokespecial #100
288: astore        23
290: aload         21
292: aload         23
294: invokevirtual #101
297: aload         17
299: aload         23
301: invokevirtual #101
304: aload         15
306: aload         23
308: putfield      #140
311: aload         15
313: invokevirtual #104
316: astore        24
318: aload         12
320: aload         24
322: invokevirtual #101
325: aload_1
326: aload         24
328: invokevirtual #101
331: aload_2
332: invokestatic  #106
335: aload         7
337: invokestatic  #56
340: aload         7
342: invokestatic  #57
345: ldc           #74
347: invokestatic  #59
350: aload         7
352: invokestatic  #60
355: ldc           #74
357: invokestatic  #59
360: aload         10
362: invokestatic  #56
365: aload         10
367: invokestatic  #61
370: ldc           #90
372: invokestatic  #59
375: aload         11
377: invokestatic  #56
380: aload         11
382: invokestatic  #61
385: ldc           #90
387: invokestatic  #59
390: new           #64
393: dup
394: invokespecial #65
397: ldc           #66
399: invokevirtual #67
402: dload         13
404: invokevirtual #79
407: ldc           #69
409: invokevirtual #67
412: dconst_0
413: invokevirtual #79
416: ldc           #66
418: invokevirtual #67
421: invokevirtual #71
424: dload         13
426: dconst_0
427: dcmpl
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #73
439: new           #64
442: dup
443: invokespecial #65
446: ldc           #66
448: invokevirtual #67
451: iload         16
453: invokevirtual #102
456: ldc           #69
458: invokevirtual #67
461: sipush        1000
464: invokevirtual #102
467: ldc           #66
469: invokevirtual #67
472: invokevirtual #71
475: iload         16
477: sipush        1000
480: if_icmpne     487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #73
491: new           #64
494: dup
495: invokespecial #65
498: ldc           #66
500: invokevirtual #67
503: iload         18
505: invokevirtual #102
508: ldc           #69
510: invokevirtual #67
513: iconst_0
514: invokevirtual #102
517: ldc           #66
519: invokevirtual #67
522: invokevirtual #71
525: iload         18
527: ifne          534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #73
538: new           #64
541: dup
542: invokespecial #65
545: ldc           #66
547: invokevirtual #67
550: iload         19
552: invokevirtual #102
555: ldc           #69
557: invokevirtual #67
560: iconst_0
561: invokevirtual #102
564: ldc           #66
566: invokevirtual #67
569: invokevirtual #71
572: iload         19
574: ifne          581
577: iconst_1
578: goto          582
581: iconst_0
582: invokestatic  #73
585: aload         20
587: invokestatic  #106
590: new           #64
593: dup
594: invokespecial #65
597: ldc           #66
599: invokevirtual #67
602: iload         22
604: invokevirtual #102
607: ldc           #69
609: invokevirtual #67
612: sipush        1000
615: invokevirtual #102
618: ldc           #66
620: invokevirtual #67
623: invokevirtual #71
626: iload         22
628: sipush        1000
631: if_icmpne     638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #73
642: aload         24
644: invokestatic  #56
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 10629
End line: 10656
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setMaxEvaluations(0);
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(100.0d);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException9 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(throwable12, localizable14, objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException9, 0.0d, "hi!", objArray17);
        double[] doubleArray20 = functionEvaluationException19.getArgument();
        double[] doubleArray22 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray22);
        levenbergMarquardtOptimizer0.objective = doubleArray22;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: aload_1
44: iconst_0
45: invokevirtual #76
48: aload_1
49: ldc2_w        #95
52: invokevirtual #127
55: new           #81
58: dup
59: iconst_m1
60: invokespecial #82
63: astore_3
64: aconst_null
65: astore        4
67: new           #27
70: dup
71: aload         4
73: invokespecial #39
76: astore        5
78: aconst_null
79: astore        6
81: iconst_2
82: anewarray     #5
85: dup
86: iconst_0
87: ldc           #28
89: aastore
90: dup
91: iconst_1
92: iconst_1
93: invokestatic  #17
96: aastore
97: astore        7
99: new           #27
102: dup
103: aload         4
105: aload         6
107: aload         7
109: invokespecial #47
112: astore        8
114: new           #23
117: dup
118: aload_3
119: dconst_0
120: ldc           #28
122: aload         7
124: invokespecial #83
127: astore        9
129: aload         9
131: invokevirtual #84
134: astore        10
136: iconst_1
137: newarray       double
139: dup
140: iconst_0
141: ldc2_w        #85
144: dastore
145: astore        11
147: new           #87
150: dup
151: aload         10
153: aload         11
155: invokespecial #88
158: astore        12
160: aload_1
161: aload         11
163: putfield      #114
166: new           #64
169: dup
170: invokespecial #65
173: ldc           #66
175: invokevirtual #67
178: iload_2
179: invokevirtual #102
182: ldc           #69
184: invokevirtual #67
187: sipush        1000
190: invokevirtual #102
193: ldc           #66
195: invokevirtual #67
198: invokevirtual #71
201: iload_2
202: sipush        1000
205: if_icmpne     212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #73
216: aload         7
218: invokestatic  #56
221: aload         7
223: invokestatic  #57
226: ldc           #74
228: invokestatic  #59
231: aload         7
233: invokestatic  #60
236: ldc           #74
238: invokestatic  #59
241: aload         10
243: invokestatic  #56
246: aload         10
248: invokestatic  #61
251: ldc           #90
253: invokestatic  #59
256: aload         11
258: invokestatic  #56
261: aload         11
263: invokestatic  #61
266: ldc           #91
268: invokestatic  #59
271: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 10659
End line: 10675
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.cost = 100.0d;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: aload_1
67: invokevirtual #132
70: dstore        4
72: aload_1
73: invokevirtual #133
76: istore        6
78: aload_1
79: ldc2_w        #95
82: putfield      #97
85: aload_2
86: invokestatic  #56
89: aload_2
90: invokestatic  #61
93: ldc           #134
95: invokestatic  #59
98: aload_3
99: invokestatic  #56
102: dload         4
104: invokestatic  #135
107: invokestatic  #136
110: new           #64
113: dup
114: invokespecial #65
117: ldc           #66
119: invokevirtual #67
122: iload         6
124: invokevirtual #102
127: ldc           #69
129: invokevirtual #67
132: iconst_0
133: invokevirtual #102
136: ldc           #66
138: invokevirtual #67
141: invokevirtual #71
144: iload         6
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #73
157: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 10678
End line: 10776
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38);
        double[] doubleArray41 = functionEvaluationException40.getArgument();
        double[] doubleArray43 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable58 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61);
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73);
        java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86);
        java.lang.Object[] objArray88 = mathRuntimeException87.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray41;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.cost = (byte) 0;
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(nullPointerException77);
        org.junit.Assert.assertNotNull(nullPointerException79);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89);
        org.junit.Assert.assertNull(vectorialConvergenceChecker93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #401
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: bipush        97
46: invokevirtual #76
49: aconst_null
50: astore_2
51: iconst_5
52: anewarray     #5
55: dup
56: iconst_0
57: iconst_0
58: invokestatic  #16
61: aastore
62: dup
63: iconst_1
64: iconst_0
65: invokestatic  #17
68: aastore
69: dup
70: iconst_2
71: bipush        52
73: invokestatic  #18
76: aastore
77: dup
78: iconst_3
79: ldc2_w        #19
82: invokestatic  #21
85: aastore
86: dup
87: iconst_4
88: dconst_1
89: invokestatic  #22
92: aastore
93: astore_3
94: new           #23
97: dup
98: ldc2_w        #24
101: aload_2
102: aload_3
103: invokespecial #26
106: astore        4
108: new           #27
111: dup
112: ldc           #28
114: aload_3
115: invokespecial #29
118: astore        5
120: aconst_null
121: astore        6
123: iconst_5
124: anewarray     #5
127: dup
128: iconst_0
129: iconst_0
130: invokestatic  #16
133: aastore
134: dup
135: iconst_1
136: iconst_0
137: invokestatic  #17
140: aastore
141: dup
142: iconst_2
143: bipush        52
145: invokestatic  #18
148: aastore
149: dup
150: iconst_3
151: ldc2_w        #19
154: invokestatic  #21
157: aastore
158: dup
159: iconst_4
160: dconst_1
161: invokestatic  #22
164: aastore
165: astore        7
167: new           #23
170: dup
171: ldc2_w        #24
174: aload         6
176: aload         7
178: invokespecial #26
181: astore        8
183: new           #27
186: dup
187: aload         5
189: ldc           #28
191: aload         7
193: invokespecial #30
196: astore        9
198: new           #81
201: dup
202: iconst_m1
203: invokespecial #82
206: astore        10
208: aconst_null
209: astore        11
211: new           #27
214: dup
215: aload         11
217: invokespecial #39
220: astore        12
222: aconst_null
223: astore        13
225: iconst_2
226: anewarray     #5
229: dup
230: iconst_0
231: ldc           #28
233: aastore
234: dup
235: iconst_1
236: iconst_1
237: invokestatic  #17
240: aastore
241: astore        14
243: new           #27
246: dup
247: aload         11
249: aload         13
251: aload         14
253: invokespecial #47
256: astore        15
258: new           #23
261: dup
262: aload         10
264: dconst_0
265: ldc           #28
267: aload         14
269: invokespecial #83
272: astore        16
274: aload         16
276: invokevirtual #84
279: astore        17
281: iconst_1
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #85
289: dastore
290: astore        18
292: new           #87
295: dup
296: aload         17
298: aload         18
300: invokespecial #88
303: astore        19
305: aconst_null
306: astore        20
308: iconst_1
309: anewarray     #5
312: dup
313: iconst_0
314: iconst_1
315: invokestatic  #35
318: aastore
319: astore        21
321: ldc           #28
323: aload         21
325: invokestatic  #36
328: astore        22
330: new           #37
333: dup
334: bipush        100
336: aload         20
338: aload         21
340: invokespecial #38
343: astore        23
345: aconst_null
346: astore        24
348: new           #27
351: dup
352: aload         24
354: invokespecial #39
357: astore        25
359: aload         25
361: invokevirtual #40
364: astore        26
366: aconst_null
367: astore        27
369: iconst_1
370: anewarray     #5
373: dup
374: iconst_0
375: iconst_1
376: invokestatic  #35
379: aastore
380: astore        28
382: ldc           #28
384: aload         28
386: invokestatic  #36
389: astore        29
391: new           #37
394: dup
395: bipush        100
397: aload         27
399: aload         28
401: invokespecial #38
404: astore        30
406: aconst_null
407: astore        31
409: aconst_null
410: astore        32
412: new           #27
415: dup
416: aload         32
418: invokespecial #39
421: astore        33
423: aload         33
425: invokevirtual #40
428: astore        34
430: aconst_null
431: astore        35
433: iconst_1
434: anewarray     #5
437: dup
438: iconst_0
439: iconst_1
440: invokestatic  #35
443: aastore
444: astore        36
446: ldc           #28
448: aload         36
450: invokestatic  #36
453: astore        37
455: new           #37
458: dup
459: bipush        100
461: aload         35
463: aload         36
465: invokespecial #38
468: astore        38
470: aload         34
472: aload         36
474: invokestatic  #41
477: astore        39
479: ldc           #42
481: aload         36
483: invokestatic  #43
486: astore        40
488: new           #44
491: dup
492: aload         30
494: aload         31
496: aload         36
498: invokespecial #45
501: astore        41
503: aload         26
505: aload         36
507: invokestatic  #46
510: astore        42
512: aconst_null
513: astore        43
515: new           #27
518: dup
519: aload         43
521: invokespecial #39
524: astore        44
526: aconst_null
527: astore        45
529: iconst_2
530: anewarray     #5
533: dup
534: iconst_0
535: ldc           #28
537: aastore
538: dup
539: iconst_1
540: iconst_1
541: invokestatic  #17
544: aastore
545: astore        46
547: new           #27
550: dup
551: aload         43
553: aload         45
555: aload         46
557: invokespecial #47
560: astore        47
562: aload         47
564: invokevirtual #48
567: astore        48
569: ldc           #42
571: aload         48
573: invokestatic  #49
576: astore        49
578: new           #23
581: dup
582: aload         23
584: dconst_0
585: aload         26
587: aload         48
589: invokespecial #50
592: astore        50
594: new           #23
597: dup
598: aload         5
600: aload         17
602: ldc           #142
604: aload         48
606: invokespecial #283
609: astore        51
611: aload_1
612: aload         17
614: putfield      #113
617: aload_1
618: invokevirtual #104
621: astore        52
623: aload_1
624: dconst_0
625: putfield      #97
628: aload_3
629: invokestatic  #56
632: aload_3
633: invokestatic  #57
636: ldc           #58
638: invokestatic  #59
641: aload_3
642: invokestatic  #60
645: ldc           #58
647: invokestatic  #59
650: aload         7
652: invokestatic  #56
655: aload         7
657: invokestatic  #57
660: ldc           #58
662: invokestatic  #59
665: aload         7
667: invokestatic  #60
670: ldc           #58
672: invokestatic  #59
675: aload         14
677: invokestatic  #56
680: aload         14
682: invokestatic  #57
685: ldc           #74
687: invokestatic  #59
690: aload         14
692: invokestatic  #60
695: ldc           #74
697: invokestatic  #59
700: aload         17
702: invokestatic  #56
705: aload         17
707: invokestatic  #61
710: ldc           #90
712: invokestatic  #59
715: aload         18
717: invokestatic  #56
720: aload         18
722: invokestatic  #61
725: ldc           #91
727: invokestatic  #59
730: aload         21
732: invokestatic  #56
735: aload         21
737: invokestatic  #57
740: ldc           #63
742: invokestatic  #59
745: aload         21
747: invokestatic  #60
750: ldc           #63
752: invokestatic  #59
755: aload         22
757: invokestatic  #56
760: new           #64
763: dup
764: invokespecial #65
767: ldc           #66
769: invokevirtual #67
772: aload         26
774: invokevirtual #68
777: ldc           #69
779: invokevirtual #67
782: getstatic     #70
785: invokevirtual #68
788: ldc           #66
790: invokevirtual #67
793: invokevirtual #71
796: aload         26
798: getstatic     #70
801: invokevirtual #72
804: invokestatic  #73
807: aload         28
809: invokestatic  #56
812: aload         28
814: invokestatic  #57
817: ldc           #63
819: invokestatic  #59
822: aload         28
824: invokestatic  #60
827: ldc           #63
829: invokestatic  #59
832: aload         29
834: invokestatic  #56
837: new           #64
840: dup
841: invokespecial #65
844: ldc           #66
846: invokevirtual #67
849: aload         34
851: invokevirtual #68
854: ldc           #69
856: invokevirtual #67
859: getstatic     #70
862: invokevirtual #68
865: ldc           #66
867: invokevirtual #67
870: invokevirtual #71
873: aload         34
875: getstatic     #70
878: invokevirtual #72
881: invokestatic  #73
884: aload         36
886: invokestatic  #56
889: aload         36
891: invokestatic  #57
894: ldc           #63
896: invokestatic  #59
899: aload         36
901: invokestatic  #60
904: ldc           #63
906: invokestatic  #59
909: aload         37
911: invokestatic  #56
914: aload         39
916: invokestatic  #56
919: aload         40
921: invokestatic  #56
924: aload         42
926: invokestatic  #56
929: aload         46
931: invokestatic  #56
934: aload         46
936: invokestatic  #57
939: ldc           #74
941: invokestatic  #59
944: aload         46
946: invokestatic  #60
949: ldc           #74
951: invokestatic  #59
954: aload         48
956: invokestatic  #56
959: aload         48
961: invokestatic  #57
964: ldc           #74
966: invokestatic  #59
969: aload         48
971: invokestatic  #60
974: ldc           #74
976: invokestatic  #59
979: aload         49
981: invokestatic  #56
984: aload         52
986: invokestatic  #106
989: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 10779
End line: 10794
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray7 = new double[] { (-1), 1.0f };
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        levenbergMarquardtOptimizer2.jacobian = doubleArray8;
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException("org.apache.commons.math.FunctionEvaluationException: 1", (java.lang.Object[]) doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #402
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: ldc           #28
68: aload_3
69: checkcast     #143
72: invokestatic  #36
75: astore        4
77: ldc_w         #403
80: aload_3
81: checkcast     #143
84: invokestatic  #387
87: astore        5
89: aload_2
90: invokestatic  #56
93: aload_2
94: invokestatic  #61
97: ldc           #134
99: invokestatic  #59
102: aload_3
103: invokestatic  #56
106: aload         4
108: invokestatic  #56
111: aload         5
113: invokestatic  #56
116: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 10797
End line: 10811
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        double double12 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10000.0d + "'", double12 == 10000.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #404
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: invokevirtual #77
79: dstore        4
81: new           #64
84: dup
85: invokespecial #65
88: ldc           #66
90: invokevirtual #67
93: iload_2
94: invokevirtual #102
97: ldc           #69
99: invokevirtual #67
102: sipush        1000
105: invokevirtual #102
108: ldc           #66
110: invokevirtual #67
113: invokevirtual #71
116: iload_2
117: sipush        1000
120: if_icmpne     127
123: iconst_1
124: goto          128
127: iconst_0
128: invokestatic  #73
131: new           #64
134: dup
135: invokespecial #65
138: ldc           #66
140: invokevirtual #67
143: dload         4
145: invokevirtual #79
148: ldc           #69
150: invokevirtual #67
153: ldc2_w        #299
156: invokevirtual #79
159: ldc           #66
161: invokevirtual #67
164: invokevirtual #71
167: dload         4
169: ldc2_w        #299
172: dcmpl
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #73
184: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 10814
End line: 10829
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray10 = levenbergMarquardtOptimizer0.residualsWeights;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #405
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: aload_1
67: getfield      #113
70: astore        5
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: iload_2
85: invokevirtual #102
88: ldc           #69
90: invokevirtual #67
93: iconst_0
94: invokevirtual #102
97: ldc           #66
99: invokevirtual #67
102: invokevirtual #71
105: iload_2
106: ifne          113
109: iconst_1
110: goto          114
113: iconst_0
114: invokestatic  #73
117: new           #64
120: dup
121: invokespecial #65
124: ldc           #66
126: invokevirtual #67
129: iload_3
130: invokevirtual #102
133: ldc           #69
135: invokevirtual #67
138: iconst_0
139: invokevirtual #102
142: ldc           #66
144: invokevirtual #67
147: invokevirtual #71
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #73
162: aload         4
164: invokestatic  #106
167: aload         5
169: invokestatic  #106
172: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 10832
End line: 10925
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateResidualsAndCost();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #406
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: invokevirtual #104
551: astore        47
553: aload_1
554: invokevirtual #174
557: ldc           #54
559: invokestatic  #13
562: goto          567
565: astore        48
567: aload_3
568: invokestatic  #56
571: aload_3
572: invokestatic  #57
575: ldc           #58
577: invokestatic  #59
580: aload_3
581: invokestatic  #60
584: ldc           #58
586: invokestatic  #59
589: aload         7
591: invokestatic  #56
594: aload         7
596: invokestatic  #57
599: ldc           #58
601: invokestatic  #59
604: aload         7
606: invokestatic  #60
609: ldc           #58
611: invokestatic  #59
614: aload         10
616: invokestatic  #56
619: aload         10
621: invokestatic  #61
624: ldc           #62
626: invokestatic  #59
629: aload         12
631: invokestatic  #56
634: aload         12
636: invokestatic  #57
639: ldc           #63
641: invokestatic  #59
644: aload         12
646: invokestatic  #60
649: ldc           #63
651: invokestatic  #59
654: aload         13
656: invokestatic  #56
659: new           #64
662: dup
663: invokespecial #65
666: ldc           #66
668: invokevirtual #67
671: aload         17
673: invokevirtual #68
676: ldc           #69
678: invokevirtual #67
681: getstatic     #70
684: invokevirtual #68
687: ldc           #66
689: invokevirtual #67
692: invokevirtual #71
695: aload         17
697: getstatic     #70
700: invokevirtual #72
703: invokestatic  #73
706: aload         19
708: invokestatic  #56
711: aload         19
713: invokestatic  #57
716: ldc           #63
718: invokestatic  #59
721: aload         19
723: invokestatic  #60
726: ldc           #63
728: invokestatic  #59
731: aload         20
733: invokestatic  #56
736: new           #64
739: dup
740: invokespecial #65
743: ldc           #66
745: invokevirtual #67
748: aload         25
750: invokevirtual #68
753: ldc           #69
755: invokevirtual #67
758: getstatic     #70
761: invokevirtual #68
764: ldc           #66
766: invokevirtual #67
769: invokevirtual #71
772: aload         25
774: getstatic     #70
777: invokevirtual #72
780: invokestatic  #73
783: aload         27
785: invokestatic  #56
788: aload         27
790: invokestatic  #57
793: ldc           #63
795: invokestatic  #59
798: aload         27
800: invokestatic  #60
803: ldc           #63
805: invokestatic  #59
808: aload         28
810: invokestatic  #56
813: aload         30
815: invokestatic  #56
818: aload         31
820: invokestatic  #56
823: aload         33
825: invokestatic  #56
828: aload         37
830: invokestatic  #56
833: aload         37
835: invokestatic  #57
838: ldc           #74
840: invokestatic  #59
843: aload         37
845: invokestatic  #60
848: ldc           #74
850: invokestatic  #59
853: aload         39
855: invokestatic  #56
858: aload         39
860: invokestatic  #57
863: ldc           #74
865: invokestatic  #59
868: aload         39
870: invokestatic  #60
873: ldc           #74
875: invokestatic  #59
878: aload         40
880: invokestatic  #56
883: new           #64
886: dup
887: invokespecial #65
890: ldc           #66
892: invokevirtual #67
895: dload         44
897: invokevirtual #79
900: ldc           #69
902: invokevirtual #67
905: dconst_0
906: invokevirtual #79
909: ldc           #66
911: invokevirtual #67
914: invokevirtual #71
917: dload         44
919: dconst_0
920: dcmpl
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #73
932: new           #64
935: dup
936: invokespecial #65
939: ldc           #66
941: invokevirtual #67
944: iload         46
946: invokevirtual #102
949: ldc           #69
951: invokevirtual #67
954: sipush        1000
957: invokevirtual #102
960: ldc           #66
962: invokevirtual #67
965: invokevirtual #71
968: iload         46
970: sipush        1000
973: if_icmpne     980
976: iconst_1
977: goto          981
980: iconst_0
981: invokestatic  #73
984: aload         47
986: invokestatic  #106
989: return
Exception table:
from    to  target type
553   562   565   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 10928
End line: 11015
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        int int80 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #407
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #98
545: istore        46
547: aload_1
548: invokevirtual #104
551: astore        47
553: aload_1
554: dconst_0
555: invokevirtual #127
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: dload         44
888: invokevirtual #79
891: ldc           #69
893: invokevirtual #67
896: dconst_0
897: invokevirtual #79
900: ldc           #66
902: invokevirtual #67
905: invokevirtual #71
908: dload         44
910: dconst_0
911: dcmpl
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #73
923: new           #64
926: dup
927: invokespecial #65
930: ldc           #66
932: invokevirtual #67
935: iload         46
937: invokevirtual #102
940: ldc           #69
942: invokevirtual #67
945: sipush        1000
948: invokevirtual #102
951: ldc           #66
953: invokevirtual #67
956: invokevirtual #71
959: iload         46
961: sipush        1000
964: if_icmpne     971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #73
975: aload         47
977: invokestatic  #106
980: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 11018
End line: 11051
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer4.rows = 0;
        levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d));
        int int11 = levenbergMarquardtOptimizer4.getIterations();
        int int12 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer14.rows = 0;
        levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer14.cost = (short) 100;
        int int23 = levenbergMarquardtOptimizer14.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24;
        int int28 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker29 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: new           #8
46: dup
47: invokespecial #9
50: astore_3
51: aload_3
52: iconst_0
53: putfield      #93
56: aload_3
57: iconst_1
58: invokevirtual #76
61: aload_3
62: ldc2_w        #31
65: invokevirtual #94
68: aload_3
69: invokevirtual #126
72: istore        4
74: aload_3
75: invokevirtual #126
78: istore        5
80: aload_3
81: getfield      #122
84: astore        6
86: new           #8
89: dup
90: invokespecial #9
93: astore        7
95: aload         7
97: iconst_0
98: putfield      #93
101: aload         7
103: iconst_1
104: invokevirtual #76
107: aload         7
109: ldc2_w        #31
112: invokevirtual #94
115: aload         7
117: ldc2_w        #95
120: putfield      #97
123: aload         7
125: invokevirtual #98
128: istore        8
130: new           #99
133: dup
134: invokespecial #100
137: astore        9
139: aload         7
141: aload         9
143: invokevirtual #101
146: aload_3
147: aload         9
149: invokevirtual #101
152: aload_1
153: aload         9
155: putfield      #140
158: aload_1
159: invokevirtual #126
162: istore        10
164: aload_1
165: invokevirtual #104
168: astore        11
170: aload_1
171: ldc2_w        #33
174: invokevirtual #94
177: new           #64
180: dup
181: invokespecial #65
184: ldc           #66
186: invokevirtual #67
189: iload_2
190: invokevirtual #102
193: ldc           #69
195: invokevirtual #67
198: sipush        1000
201: invokevirtual #102
204: ldc           #66
206: invokevirtual #67
209: invokevirtual #71
212: iload_2
213: sipush        1000
216: if_icmpne     223
219: iconst_1
220: goto          224
223: iconst_0
224: invokestatic  #73
227: new           #64
230: dup
231: invokespecial #65
234: ldc           #66
236: invokevirtual #67
239: iload         4
241: invokevirtual #102
244: ldc           #69
246: invokevirtual #67
249: iconst_0
250: invokevirtual #102
253: ldc           #66
255: invokevirtual #67
258: invokevirtual #71
261: iload         4
263: ifne          270
266: iconst_1
267: goto          271
270: iconst_0
271: invokestatic  #73
274: new           #64
277: dup
278: invokespecial #65
281: ldc           #66
283: invokevirtual #67
286: iload         5
288: invokevirtual #102
291: ldc           #69
293: invokevirtual #67
296: iconst_0
297: invokevirtual #102
300: ldc           #66
302: invokevirtual #67
305: invokevirtual #71
308: iload         5
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #73
321: aload         6
323: invokestatic  #106
326: new           #64
329: dup
330: invokespecial #65
333: ldc           #66
335: invokevirtual #67
338: iload         8
340: invokevirtual #102
343: ldc           #69
345: invokevirtual #67
348: sipush        1000
351: invokevirtual #102
354: ldc           #66
356: invokevirtual #67
359: invokevirtual #71
362: iload         8
364: sipush        1000
367: if_icmpne     374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #73
378: new           #64
381: dup
382: invokespecial #65
385: ldc           #66
387: invokevirtual #67
390: iload         10
392: invokevirtual #102
395: ldc           #69
397: invokevirtual #67
400: iconst_0
401: invokevirtual #102
404: ldc           #66
406: invokevirtual #67
409: invokevirtual #71
412: iload         10
414: ifne          421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #73
425: aload         11
427: invokestatic  #56
430: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 11054
End line: 11087
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException14 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(throwable17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException(throwable17, localizable19, objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException14, 0.0d, "hi!", objArray22);
        double[] doubleArray25 = functionEvaluationException24.getArgument();
        double[] doubleArray27 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair28 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray27);
        levenbergMarquardtOptimizer0.residuals = doubleArray27;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #409
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: bipush        100
51: putfield      #105
54: aload_1
55: ldc2_w        #31
58: invokevirtual #94
61: aload_1
62: invokevirtual #10
65: aload_1
66: invokevirtual #110
69: istore_3
70: aload_1
71: invokevirtual #110
74: istore        4
76: new           #81
79: dup
80: iconst_m1
81: invokespecial #82
84: astore        5
86: aconst_null
87: astore        6
89: new           #27
92: dup
93: aload         6
95: invokespecial #39
98: astore        7
100: aconst_null
101: astore        8
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: ldc           #28
111: aastore
112: dup
113: iconst_1
114: iconst_1
115: invokestatic  #17
118: aastore
119: astore        9
121: new           #27
124: dup
125: aload         6
127: aload         8
129: aload         9
131: invokespecial #47
134: astore        10
136: new           #23
139: dup
140: aload         5
142: dconst_0
143: ldc           #28
145: aload         9
147: invokespecial #83
150: astore        11
152: aload         11
154: invokevirtual #84
157: astore        12
159: iconst_1
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #85
167: dastore
168: astore        13
170: new           #87
173: dup
174: aload         12
176: aload         13
178: invokespecial #88
181: astore        14
183: aload_1
184: aload         13
186: putfield      #122
189: aload_2
190: invokestatic  #106
193: new           #64
196: dup
197: invokespecial #65
200: ldc           #66
202: invokevirtual #67
205: iload_3
206: invokevirtual #102
209: ldc           #69
211: invokevirtual #67
214: iconst_1
215: invokevirtual #102
218: ldc           #66
220: invokevirtual #67
223: invokevirtual #71
226: iload_3
227: iconst_1
228: if_icmpne     235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #73
239: new           #64
242: dup
243: invokespecial #65
246: ldc           #66
248: invokevirtual #67
251: iload         4
253: invokevirtual #102
256: ldc           #69
258: invokevirtual #67
261: iconst_1
262: invokevirtual #102
265: ldc           #66
267: invokevirtual #67
270: invokevirtual #71
273: iload         4
275: iconst_1
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #73
287: aload         9
289: invokestatic  #56
292: aload         9
294: invokestatic  #57
297: ldc           #74
299: invokestatic  #59
302: aload         9
304: invokestatic  #60
307: ldc           #74
309: invokestatic  #59
312: aload         12
314: invokestatic  #56
317: aload         12
319: invokestatic  #61
322: ldc           #90
324: invokestatic  #59
327: aload         13
329: invokestatic  #56
332: aload         13
334: invokestatic  #61
337: ldc           #91
339: invokestatic  #59
342: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 11090
End line: 11153
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer8 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer8.rows = 0;
        levenbergMarquardtOptimizer8.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray13 = levenbergMarquardtOptimizer8.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException15 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable18);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable18, localizable20, objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException15, 0.0d, "hi!", objArray23);
        double[] doubleArray26 = functionEvaluationException25.getArgument();
        double[] doubleArray27 = functionEvaluationException25.getArgument();
        levenbergMarquardtOptimizer8.objective = doubleArray27;
        levenbergMarquardtOptimizer8.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker31 = levenbergMarquardtOptimizer8.checker;
        levenbergMarquardtOptimizer8.incrementIterationsCounter();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException34 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable37, localizable39, objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException34, 0.0d, "hi!", objArray42);
        double[] doubleArray45 = functionEvaluationException44.getArgument();
        double[] doubleArray47 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray47);
        levenbergMarquardtOptimizer8.residuals = doubleArray45;
        double[] doubleArray50 = levenbergMarquardtOptimizer8.point;
        double[] doubleArray52 = new double[] { (-1L) };
        levenbergMarquardtOptimizer8.residuals = doubleArray52;
        levenbergMarquardtOptimizer0.residuals = doubleArray52;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0]");
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: aload_1
55: getfield      #131
58: astore        4
60: new           #8
63: dup
64: invokespecial #9
67: astore        5
69: aload         5
71: iconst_0
72: putfield      #93
75: aload         5
77: iconst_1
78: invokevirtual #76
81: aload         5
83: getfield      #113
86: astore        6
88: new           #81
91: dup
92: iconst_m1
93: invokespecial #82
96: astore        7
98: aconst_null
99: astore        8
101: new           #27
104: dup
105: aload         8
107: invokespecial #39
110: astore        9
112: aconst_null
113: astore        10
115: iconst_2
116: anewarray     #5
119: dup
120: iconst_0
121: ldc           #28
123: aastore
124: dup
125: iconst_1
126: iconst_1
127: invokestatic  #17
130: aastore
131: astore        11
133: new           #27
136: dup
137: aload         8
139: aload         10
141: aload         11
143: invokespecial #47
146: astore        12
148: new           #23
151: dup
152: aload         7
154: dconst_0
155: ldc           #28
157: aload         11
159: invokespecial #83
162: astore        13
164: aload         13
166: invokevirtual #84
169: astore        14
171: aload         13
173: invokevirtual #84
176: astore        15
178: aload         5
180: aload         15
182: putfield      #114
185: aload         5
187: sipush        1000
190: invokevirtual #76
193: aload         5
195: getfield      #140
198: astore        16
200: aload         5
202: invokevirtual #10
205: new           #81
208: dup
209: iconst_m1
210: invokespecial #82
213: astore        17
215: aconst_null
216: astore        18
218: new           #27
221: dup
222: aload         18
224: invokespecial #39
227: astore        19
229: aconst_null
230: astore        20
232: iconst_2
233: anewarray     #5
236: dup
237: iconst_0
238: ldc           #28
240: aastore
241: dup
242: iconst_1
243: iconst_1
244: invokestatic  #17
247: aastore
248: astore        21
250: new           #27
253: dup
254: aload         18
256: aload         20
258: aload         21
260: invokespecial #47
263: astore        22
265: new           #23
268: dup
269: aload         17
271: dconst_0
272: ldc           #28
274: aload         21
276: invokespecial #83
279: astore        23
281: aload         23
283: invokevirtual #84
286: astore        24
288: iconst_1
289: newarray       double
291: dup
292: iconst_0
293: ldc2_w        #85
296: dastore
297: astore        25
299: new           #87
302: dup
303: aload         24
305: aload         25
307: invokespecial #88
310: astore        26
312: aload         5
314: aload         24
316: putfield      #122
319: aload         5
321: getfield      #52
324: astore        27
326: iconst_1
327: newarray       double
329: dup
330: iconst_0
331: ldc2_w        #31
334: dastore
335: astore        28
337: aload         5
339: aload         28
341: putfield      #122
344: aload_1
345: aload         28
347: putfield      #122
350: aload_2
351: invokestatic  #106
354: aload_3
355: invokestatic  #106
358: aload         4
360: invokestatic  #106
363: aload         6
365: invokestatic  #106
368: aload         11
370: invokestatic  #56
373: aload         11
375: invokestatic  #57
378: ldc           #74
380: invokestatic  #59
383: aload         11
385: invokestatic  #60
388: ldc           #74
390: invokestatic  #59
393: aload         14
395: invokestatic  #56
398: aload         14
400: invokestatic  #61
403: ldc           #90
405: invokestatic  #59
408: aload         15
410: invokestatic  #56
413: aload         15
415: invokestatic  #61
418: ldc           #90
420: invokestatic  #59
423: aload         16
425: invokestatic  #106
428: aload         21
430: invokestatic  #56
433: aload         21
435: invokestatic  #57
438: ldc           #74
440: invokestatic  #59
443: aload         21
445: invokestatic  #60
448: ldc           #74
450: invokestatic  #59
453: aload         24
455: invokestatic  #56
458: aload         24
460: invokestatic  #61
463: ldc           #90
465: invokestatic  #59
468: aload         25
470: invokestatic  #56
473: aload         25
475: invokestatic  #61
478: ldc           #91
480: invokestatic  #59
483: aload         27
485: invokestatic  #106
488: aload         28
490: invokestatic  #56
493: aload         28
495: invokestatic  #61
498: ldc_w         #411
501: invokestatic  #59
504: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 11156
End line: 11188
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d);
        double[] doubleArray27 = levenbergMarquardtOptimizer0.point;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertNull(doubleArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aload_1
156: invokevirtual #10
159: aload_1
160: dconst_0
161: invokevirtual #127
164: aload_1
165: getfield      #52
168: astore        13
170: aload_2
171: invokestatic  #106
174: aload         7
176: invokestatic  #56
179: aload         7
181: invokestatic  #57
184: ldc           #74
186: invokestatic  #59
189: aload         7
191: invokestatic  #60
194: ldc           #74
196: invokestatic  #59
199: aload         10
201: invokestatic  #56
204: aload         10
206: invokestatic  #61
209: ldc           #90
211: invokestatic  #59
214: aload         11
216: invokestatic  #56
219: aload         11
221: invokestatic  #61
224: ldc           #90
226: invokestatic  #59
229: aload         12
231: invokestatic  #106
234: aload         13
236: invokestatic  #106
239: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 11191
End line: 11207
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray7 = null;
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray7;
        double double9 = levenbergMarquardtOptimizer0.getRMS();
        int int10 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: invokevirtual #110
52: istore_3
53: aconst_null
54: astore        4
56: aload_1
57: aload         4
59: putfield      #113
62: aload_1
63: invokevirtual #132
66: dstore        5
68: aload_1
69: invokevirtual #126
72: istore        7
74: aload_2
75: invokestatic  #106
78: new           #64
81: dup
82: invokespecial #65
85: ldc           #66
87: invokevirtual #67
90: iload_3
91: invokevirtual #102
94: ldc           #69
96: invokevirtual #67
99: iconst_1
100: invokevirtual #102
103: ldc           #66
105: invokevirtual #67
108: invokevirtual #71
111: iload_3
112: iconst_1
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #73
124: dload         5
126: invokestatic  #135
129: invokestatic  #136
132: new           #64
135: dup
136: invokespecial #65
139: ldc           #66
141: invokevirtual #67
144: iload         7
146: invokevirtual #102
149: ldc           #69
151: invokevirtual #67
154: iconst_0
155: invokevirtual #102
158: ldc           #66
160: invokevirtual #67
163: invokevirtual #71
166: iload         7
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #73
179: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 11210
End line: 11223
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double double10 = levenbergMarquardtOptimizer0.getChiSquare();
        int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10000.0d + "'", double10 == 10000.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #414
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #10
61: aload_1
62: invokevirtual #77
65: dstore_2
66: aload_1
67: invokevirtual #110
70: istore        4
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: dload_2
85: invokevirtual #79
88: ldc           #69
90: invokevirtual #67
93: ldc2_w        #299
96: invokevirtual #79
99: ldc           #66
101: invokevirtual #67
104: invokevirtual #71
107: dload_2
108: ldc2_w        #299
111: dcmpl
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #73
123: new           #64
126: dup
127: invokespecial #65
130: ldc           #66
132: invokevirtual #67
135: iload         4
137: invokevirtual #102
140: ldc           #69
142: invokevirtual #67
145: iconst_1
146: invokevirtual #102
149: ldc           #66
151: invokevirtual #67
154: invokevirtual #71
157: iload         4
159: iconst_1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #73
171: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 11226
End line: 11324
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.rows;
        int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer23.rows = 0;
        levenbergMarquardtOptimizer23.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer23.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer23.cost = (short) 100;
        int int32 = levenbergMarquardtOptimizer23.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker33 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer23.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker33);
        levenbergMarquardtOptimizer23.setMaxEvaluations(100);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException42 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable45);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable45, localizable47, objArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException42, 0.0d, "hi!", objArray50);
        double[] doubleArray53 = functionEvaluationException52.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException55 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable58 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable58);
        org.apache.commons.math.exception.util.Localizable localizable60 = null;
        java.lang.Object[] objArray63 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException64 = new org.apache.commons.math.MathRuntimeException(throwable58, localizable60, objArray63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException55, 0.0d, "hi!", objArray63);
        double[] doubleArray66 = functionEvaluationException65.getArgument();
        double[] doubleArray68 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray68);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray53, doubleArray68, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException73 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable76 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable76);
        org.apache.commons.math.exception.util.Localizable localizable78 = null;
        java.lang.Object[] objArray81 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable76, localizable78, objArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException73, 0.0d, "hi!", objArray81);
        double[] doubleArray84 = functionEvaluationException83.getArgument();
        double[] doubleArray86 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray84, doubleArray86);
        boolean boolean88 = simpleVectorialValueChecker39.converged(0, vectorialPointValuePair71, vectorialPointValuePair87);
        double[] doubleArray89 = vectorialPointValuePair87.getValue();
        levenbergMarquardtOptimizer23.point = doubleArray89;
        levenbergMarquardtOptimizer0.objective = doubleArray89;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1000 + "'", int32 == 1000);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[97.0]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #415
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: getfield      #93
163: istore        15
165: aload_1
166: invokevirtual #133
169: istore        16
171: new           #8
174: dup
175: invokespecial #9
178: astore        17
180: aload         17
182: iconst_0
183: putfield      #93
186: aload         17
188: iconst_1
189: invokevirtual #76
192: aload         17
194: ldc2_w        #31
197: invokevirtual #94
200: aload         17
202: ldc2_w        #95
205: putfield      #97
208: aload         17
210: invokevirtual #98
213: istore        18
215: new           #99
218: dup
219: invokespecial #100
222: astore        19
224: aload         17
226: aload         19
228: invokevirtual #101
231: aload         17
233: bipush        100
235: invokevirtual #76
238: new           #99
241: dup
242: dconst_0
243: ldc2_w        #95
246: invokespecial #116
249: astore        20
251: new           #81
254: dup
255: iconst_m1
256: invokespecial #82
259: astore        21
261: aconst_null
262: astore        22
264: new           #27
267: dup
268: aload         22
270: invokespecial #39
273: astore        23
275: aconst_null
276: astore        24
278: iconst_2
279: anewarray     #5
282: dup
283: iconst_0
284: ldc           #28
286: aastore
287: dup
288: iconst_1
289: iconst_1
290: invokestatic  #17
293: aastore
294: astore        25
296: new           #27
299: dup
300: aload         22
302: aload         24
304: aload         25
306: invokespecial #47
309: astore        26
311: new           #23
314: dup
315: aload         21
317: dconst_0
318: ldc           #28
320: aload         25
322: invokespecial #83
325: astore        27
327: aload         27
329: invokevirtual #84
332: astore        28
334: new           #81
337: dup
338: iconst_m1
339: invokespecial #82
342: astore        29
344: aconst_null
345: astore        30
347: new           #27
350: dup
351: aload         30
353: invokespecial #39
356: astore        31
358: aconst_null
359: astore        32
361: iconst_2
362: anewarray     #5
365: dup
366: iconst_0
367: ldc           #28
369: aastore
370: dup
371: iconst_1
372: iconst_1
373: invokestatic  #17
376: aastore
377: astore        33
379: new           #27
382: dup
383: aload         30
385: aload         32
387: aload         33
389: invokespecial #47
392: astore        34
394: new           #23
397: dup
398: aload         29
400: dconst_0
401: ldc           #28
403: aload         33
405: invokespecial #83
408: astore        35
410: aload         35
412: invokevirtual #84
415: astore        36
417: iconst_1
418: newarray       double
420: dup
421: iconst_0
422: ldc2_w        #85
425: dastore
426: astore        37
428: new           #87
431: dup
432: aload         36
434: aload         37
436: invokespecial #88
439: astore        38
441: new           #87
444: dup
445: aload         28
447: aload         37
449: iconst_0
450: invokespecial #117
453: astore        39
455: new           #81
458: dup
459: iconst_m1
460: invokespecial #82
463: astore        40
465: aconst_null
466: astore        41
468: new           #27
471: dup
472: aload         41
474: invokespecial #39
477: astore        42
479: aconst_null
480: astore        43
482: iconst_2
483: anewarray     #5
486: dup
487: iconst_0
488: ldc           #28
490: aastore
491: dup
492: iconst_1
493: iconst_1
494: invokestatic  #17
497: aastore
498: astore        44
500: new           #27
503: dup
504: aload         41
506: aload         43
508: aload         44
510: invokespecial #47
513: astore        45
515: new           #23
518: dup
519: aload         40
521: dconst_0
522: ldc           #28
524: aload         44
526: invokespecial #83
529: astore        46
531: aload         46
533: invokevirtual #84
536: astore        47
538: iconst_1
539: newarray       double
541: dup
542: iconst_0
543: ldc2_w        #85
546: dastore
547: astore        48
549: new           #87
552: dup
553: aload         47
555: aload         48
557: invokespecial #88
560: astore        49
562: aload         20
564: iconst_0
565: aload         39
567: aload         49
569: invokevirtual #118
572: istore        50
574: aload         49
576: invokevirtual #157
579: astore        51
581: aload         17
583: aload         51
585: putfield      #52
588: aload_1
589: aload         51
591: putfield      #114
594: aload         6
596: invokestatic  #56
599: aload         6
601: invokestatic  #57
604: ldc           #74
606: invokestatic  #59
609: aload         6
611: invokestatic  #60
614: ldc           #74
616: invokestatic  #59
619: aload         9
621: invokestatic  #56
624: aload         9
626: invokestatic  #61
629: ldc           #90
631: invokestatic  #59
634: aload         10
636: invokestatic  #56
639: aload         10
641: invokestatic  #61
644: ldc           #91
646: invokestatic  #59
649: aload         12
651: invokestatic  #106
654: new           #64
657: dup
658: invokespecial #65
661: ldc           #66
663: invokevirtual #67
666: iload         13
668: invokevirtual #102
671: ldc           #69
673: invokevirtual #67
676: iconst_0
677: invokevirtual #102
680: ldc           #66
682: invokevirtual #67
685: invokevirtual #71
688: iload         13
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #73
701: new           #64
704: dup
705: invokespecial #65
708: ldc           #66
710: invokevirtual #67
713: iload         14
715: invokevirtual #102
718: ldc           #69
720: invokevirtual #67
723: iconst_0
724: invokevirtual #102
727: ldc           #66
729: invokevirtual #67
732: invokevirtual #71
735: iload         14
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #73
748: new           #64
751: dup
752: invokespecial #65
755: ldc           #66
757: invokevirtual #67
760: iload         15
762: invokevirtual #102
765: ldc           #69
767: invokevirtual #67
770: iconst_0
771: invokevirtual #102
774: ldc           #66
776: invokevirtual #67
779: invokevirtual #71
782: iload         15
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #73
795: new           #64
798: dup
799: invokespecial #65
802: ldc           #66
804: invokevirtual #67
807: iload         16
809: invokevirtual #102
812: ldc           #69
814: invokevirtual #67
817: iconst_0
818: invokevirtual #102
821: ldc           #66
823: invokevirtual #67
826: invokevirtual #71
829: iload         16
831: ifne          838
834: iconst_1
835: goto          839
838: iconst_0
839: invokestatic  #73
842: new           #64
845: dup
846: invokespecial #65
849: ldc           #66
851: invokevirtual #67
854: iload         18
856: invokevirtual #102
859: ldc           #69
861: invokevirtual #67
864: sipush        1000
867: invokevirtual #102
870: ldc           #66
872: invokevirtual #67
875: invokevirtual #71
878: iload         18
880: sipush        1000
883: if_icmpne     890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #73
894: aload         25
896: invokestatic  #56
899: aload         25
901: invokestatic  #57
904: ldc           #74
906: invokestatic  #59
909: aload         25
911: invokestatic  #60
914: ldc           #74
916: invokestatic  #59
919: aload         28
921: invokestatic  #56
924: aload         28
926: invokestatic  #61
929: ldc           #90
931: invokestatic  #59
934: aload         33
936: invokestatic  #56
939: aload         33
941: invokestatic  #57
944: ldc           #74
946: invokestatic  #59
949: aload         33
951: invokestatic  #60
954: ldc           #74
956: invokestatic  #59
959: aload         36
961: invokestatic  #56
964: aload         36
966: invokestatic  #61
969: ldc           #90
971: invokestatic  #59
974: aload         37
976: invokestatic  #56
979: aload         37
981: invokestatic  #61
984: ldc           #91
986: invokestatic  #59
989: aload         44
991: invokestatic  #56
994: aload         44
996: invokestatic  #57
999: ldc           #74
1001: invokestatic  #59
1004: aload         44
1006: invokestatic  #60
1009: ldc           #74
1011: invokestatic  #59
1014: aload         47
1016: invokestatic  #56
1019: aload         47
1021: invokestatic  #61
1024: ldc           #90
1026: invokestatic  #59
1029: aload         48
1031: invokestatic  #56
1034: aload         48
1036: invokestatic  #61
1039: ldc           #91
1041: invokestatic  #59
1044: new           #64
1047: dup
1048: invokespecial #65
1051: ldc           #66
1053: invokevirtual #67
1056: iload         50
1058: invokevirtual #119
1061: ldc           #69
1063: invokevirtual #67
1066: iconst_1
1067: invokevirtual #119
1070: ldc           #66
1072: invokevirtual #67
1075: invokevirtual #71
1078: iload         50
1080: iconst_1
1081: if_icmpne     1088
1084: iconst_1
1085: goto          1089
1088: iconst_0
1089: invokestatic  #73
1092: aload         51
1094: invokestatic  #56
1097: aload         51
1099: invokestatic  #61
1102: ldc           #91
1104: invokestatic  #59
1107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 11327
End line: 11395
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double[] doubleArray7 = null;
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray7;
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        java.lang.Object[] objArray12 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathRuntimeException$2: true", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double[] doubleArray16 = functionEvaluationException15.getArgument();
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable20);
        org.apache.commons.math.exception.util.Localizable localizable22 = mathRuntimeException21.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray27);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException29 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable24, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32);
        org.apache.commons.math.exception.util.Localizable localizable34 = mathRuntimeException33.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray39 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray39);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException41 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable36, objArray39);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException42 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, objArray39);
        java.lang.NullPointerException nullPointerException43 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray39);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException29, localizable30, objArray39);
        java.lang.NullPointerException nullPointerException45 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable22, objArray39);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException52 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray51);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException53 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable48, objArray51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) nullPointerException45, "org.apache.commons.math.MathException: ", objArray51);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray51);
        java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException("org.apache.commons.math.MaxIterationsExceededException: maximal number of iterations (-1) exceeded", objArray51);
        java.lang.Throwable[] throwableArray57 = illegalStateException56.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException13, doubleArray16, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray57);
        levenbergMarquardtOptimizer0.point = doubleArray16;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0]");
        org.junit.Assert.assertTrue("'" + localizable22 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable22.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertTrue("'" + localizable34 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable34.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException42);
        org.junit.Assert.assertNotNull(nullPointerException43);
        org.junit.Assert.assertNotNull(nullPointerException45);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException52);
        org.junit.Assert.assertNotNull(illegalStateException56);
        org.junit.Assert.assertNotNull(throwableArray57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: invokevirtual #110
52: istore_3
53: aconst_null
54: astore        4
56: aload_1
57: aload         4
59: putfield      #113
62: aload_1
63: invokevirtual #133
66: istore        5
68: aconst_null
69: astore        6
71: new           #23
74: dup
75: dconst_0
76: ldc_w         #417
79: aload         6
81: invokespecial #418
84: astore        7
86: new           #23
89: dup
90: ldc2_w        #31
93: invokespecial #256
96: astore        8
98: aload         8
100: invokevirtual #84
103: astore        9
105: aconst_null
106: astore        10
108: new           #27
111: dup
112: aload         10
114: invokespecial #39
117: astore        11
119: aload         11
121: invokevirtual #40
124: astore        12
126: aconst_null
127: astore        13
129: iconst_1
130: anewarray     #5
133: dup
134: iconst_0
135: iconst_1
136: invokestatic  #35
139: aastore
140: astore        14
142: ldc           #28
144: aload         14
146: invokestatic  #36
149: astore        15
151: new           #37
154: dup
155: bipush        100
157: aload         13
159: aload         14
161: invokespecial #38
164: astore        16
166: aconst_null
167: astore        17
169: aconst_null
170: astore        18
172: new           #27
175: dup
176: aload         18
178: invokespecial #39
181: astore        19
183: aload         19
185: invokevirtual #40
188: astore        20
190: aconst_null
191: astore        21
193: iconst_1
194: anewarray     #5
197: dup
198: iconst_0
199: iconst_1
200: invokestatic  #35
203: aastore
204: astore        22
206: ldc           #28
208: aload         22
210: invokestatic  #36
213: astore        23
215: new           #37
218: dup
219: bipush        100
221: aload         21
223: aload         22
225: invokespecial #38
228: astore        24
230: aload         20
232: aload         22
234: invokestatic  #41
237: astore        25
239: ldc           #42
241: aload         22
243: invokestatic  #43
246: astore        26
248: new           #44
251: dup
252: aload         16
254: aload         17
256: aload         22
258: invokespecial #45
261: astore        27
263: aload         12
265: aload         22
267: invokestatic  #46
270: astore        28
272: aconst_null
273: astore        29
275: iconst_1
276: anewarray     #5
279: dup
280: iconst_0
281: iconst_1
282: invokestatic  #35
285: aastore
286: astore        30
288: ldc           #28
290: aload         30
292: invokestatic  #36
295: astore        31
297: new           #37
300: dup
301: bipush        100
303: aload         29
305: aload         30
307: invokespecial #38
310: astore        32
312: new           #240
315: dup
316: aload         28
318: ldc           #242
320: aload         30
322: invokespecial #243
325: astore        33
327: new           #240
330: dup
331: ldc           #42
333: aload         30
335: invokespecial #270
338: astore        34
340: ldc_w         #388
343: aload         30
345: invokestatic  #419
348: astore        35
350: aload         35
352: invokevirtual #420
355: astore        36
357: new           #23
360: dup
361: aload         7
363: aload         9
365: ldc           #242
367: aload         36
369: checkcast     #143
372: invokespecial #283
375: astore        37
377: aload_1
378: aload         9
380: putfield      #52
383: aload_2
384: invokestatic  #106
387: new           #64
390: dup
391: invokespecial #65
394: ldc           #66
396: invokevirtual #67
399: iload_3
400: invokevirtual #102
403: ldc           #69
405: invokevirtual #67
408: iconst_1
409: invokevirtual #102
412: ldc           #66
414: invokevirtual #67
417: invokevirtual #71
420: iload_3
421: iconst_1
422: if_icmpne     429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #73
433: new           #64
436: dup
437: invokespecial #65
440: ldc           #66
442: invokevirtual #67
445: iload         5
447: invokevirtual #102
450: ldc           #69
452: invokevirtual #67
455: iconst_0
456: invokevirtual #102
459: ldc           #66
461: invokevirtual #67
464: invokevirtual #71
467: iload         5
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #73
480: aload         9
482: invokestatic  #56
485: aload         9
487: invokestatic  #61
490: ldc_w         #411
493: invokestatic  #59
496: new           #64
499: dup
500: invokespecial #65
503: ldc           #66
505: invokevirtual #67
508: aload         12
510: invokevirtual #68
513: ldc           #69
515: invokevirtual #67
518: getstatic     #70
521: invokevirtual #68
524: ldc           #66
526: invokevirtual #67
529: invokevirtual #71
532: aload         12
534: getstatic     #70
537: invokevirtual #72
540: invokestatic  #73
543: aload         14
545: invokestatic  #56
548: aload         14
550: invokestatic  #57
553: ldc           #63
555: invokestatic  #59
558: aload         14
560: invokestatic  #60
563: ldc           #63
565: invokestatic  #59
568: aload         15
570: invokestatic  #56
573: new           #64
576: dup
577: invokespecial #65
580: ldc           #66
582: invokevirtual #67
585: aload         20
587: invokevirtual #68
590: ldc           #69
592: invokevirtual #67
595: getstatic     #70
598: invokevirtual #68
601: ldc           #66
603: invokevirtual #67
606: invokevirtual #71
609: aload         20
611: getstatic     #70
614: invokevirtual #72
617: invokestatic  #73
620: aload         22
622: invokestatic  #56
625: aload         22
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         22
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         23
647: invokestatic  #56
650: aload         25
652: invokestatic  #56
655: aload         26
657: invokestatic  #56
660: aload         28
662: invokestatic  #56
665: aload         30
667: invokestatic  #56
670: aload         30
672: invokestatic  #57
675: ldc           #63
677: invokestatic  #59
680: aload         30
682: invokestatic  #60
685: ldc           #63
687: invokestatic  #59
690: aload         31
692: invokestatic  #56
695: aload         35
697: invokestatic  #56
700: aload         36
702: invokestatic  #56
705: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 11398
End line: 11505
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException81 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable84 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable84);
        org.apache.commons.math.exception.util.Localizable localizable86 = null;
        java.lang.Object[] objArray89 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException90 = new org.apache.commons.math.MathRuntimeException(throwable84, localizable86, objArray89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException81, 0.0d, "hi!", objArray89);
        double[] doubleArray92 = functionEvaluationException91.getArgument();
        double[] doubleArray94 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray92, doubleArray94);
        levenbergMarquardtOptimizer0.residuals = doubleArray92;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair97 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: getfield      #122
539: astore        44
541: new           #81
544: dup
545: iconst_m1
546: invokespecial #82
549: astore        45
551: aconst_null
552: astore        46
554: new           #27
557: dup
558: aload         46
560: invokespecial #39
563: astore        47
565: aconst_null
566: astore        48
568: iconst_2
569: anewarray     #5
572: dup
573: iconst_0
574: ldc           #28
576: aastore
577: dup
578: iconst_1
579: iconst_1
580: invokestatic  #17
583: aastore
584: astore        49
586: new           #27
589: dup
590: aload         46
592: aload         48
594: aload         49
596: invokespecial #47
599: astore        50
601: new           #23
604: dup
605: aload         45
607: dconst_0
608: ldc           #28
610: aload         49
612: invokespecial #83
615: astore        51
617: aload         51
619: invokevirtual #84
622: astore        52
624: iconst_1
625: newarray       double
627: dup
628: iconst_0
629: ldc2_w        #85
632: dastore
633: astore        53
635: new           #87
638: dup
639: aload         52
641: aload         53
643: invokespecial #88
646: astore        54
648: aload_1
649: aload         52
651: putfield      #122
654: aload_1
655: invokevirtual #78
658: astore        55
660: ldc           #54
662: invokestatic  #13
665: goto          670
668: astore        55
670: aload_3
671: invokestatic  #56
674: aload_3
675: invokestatic  #57
678: ldc           #58
680: invokestatic  #59
683: aload_3
684: invokestatic  #60
687: ldc           #58
689: invokestatic  #59
692: aload         7
694: invokestatic  #56
697: aload         7
699: invokestatic  #57
702: ldc           #58
704: invokestatic  #59
707: aload         7
709: invokestatic  #60
712: ldc           #58
714: invokestatic  #59
717: aload         10
719: invokestatic  #56
722: aload         10
724: invokestatic  #61
727: ldc           #62
729: invokestatic  #59
732: aload         12
734: invokestatic  #56
737: aload         12
739: invokestatic  #57
742: ldc           #63
744: invokestatic  #59
747: aload         12
749: invokestatic  #60
752: ldc           #63
754: invokestatic  #59
757: aload         13
759: invokestatic  #56
762: new           #64
765: dup
766: invokespecial #65
769: ldc           #66
771: invokevirtual #67
774: aload         17
776: invokevirtual #68
779: ldc           #69
781: invokevirtual #67
784: getstatic     #70
787: invokevirtual #68
790: ldc           #66
792: invokevirtual #67
795: invokevirtual #71
798: aload         17
800: getstatic     #70
803: invokevirtual #72
806: invokestatic  #73
809: aload         19
811: invokestatic  #56
814: aload         19
816: invokestatic  #57
819: ldc           #63
821: invokestatic  #59
824: aload         19
826: invokestatic  #60
829: ldc           #63
831: invokestatic  #59
834: aload         20
836: invokestatic  #56
839: new           #64
842: dup
843: invokespecial #65
846: ldc           #66
848: invokevirtual #67
851: aload         25
853: invokevirtual #68
856: ldc           #69
858: invokevirtual #67
861: getstatic     #70
864: invokevirtual #68
867: ldc           #66
869: invokevirtual #67
872: invokevirtual #71
875: aload         25
877: getstatic     #70
880: invokevirtual #72
883: invokestatic  #73
886: aload         27
888: invokestatic  #56
891: aload         27
893: invokestatic  #57
896: ldc           #63
898: invokestatic  #59
901: aload         27
903: invokestatic  #60
906: ldc           #63
908: invokestatic  #59
911: aload         28
913: invokestatic  #56
916: aload         30
918: invokestatic  #56
921: aload         31
923: invokestatic  #56
926: aload         33
928: invokestatic  #56
931: aload         37
933: invokestatic  #56
936: aload         37
938: invokestatic  #57
941: ldc           #74
943: invokestatic  #59
946: aload         37
948: invokestatic  #60
951: ldc           #74
953: invokestatic  #59
956: aload         39
958: invokestatic  #56
961: aload         39
963: invokestatic  #57
966: ldc           #74
968: invokestatic  #59
971: aload         39
973: invokestatic  #60
976: ldc           #74
978: invokestatic  #59
981: aload         40
983: invokestatic  #56
986: aload         44
988: invokestatic  #106
991: aload         49
993: invokestatic  #56
996: aload         49
998: invokestatic  #57
1001: ldc           #74
1003: invokestatic  #59
1006: aload         49
1008: invokestatic  #60
1011: ldc           #74
1013: invokestatic  #59
1016: aload         52
1018: invokestatic  #56
1021: aload         52
1023: invokestatic  #61
1026: ldc           #90
1028: invokestatic  #59
1031: aload         53
1033: invokestatic  #56
1036: aload         53
1038: invokestatic  #61
1041: ldc           #91
1043: invokestatic  #59
1046: return
Exception table:
from    to  target type
654   665   668   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 11508
End line: 11521
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 100L);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker12 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #422
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: aload_1
63: ldc2_w        #95
66: invokevirtual #94
69: aload_1
70: invokevirtual #104
73: astore_3
74: new           #64
77: dup
78: invokespecial #65
81: ldc           #66
83: invokevirtual #67
86: iload_2
87: invokevirtual #102
90: ldc           #69
92: invokevirtual #67
95: sipush        1000
98: invokevirtual #102
101: ldc           #66
103: invokevirtual #67
106: invokevirtual #71
109: iload_2
110: sipush        1000
113: if_icmpne     120
116: iconst_1
117: goto          121
120: iconst_0
121: invokestatic  #73
124: aload_3
125: invokestatic  #106
128: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 11524
End line: 11559
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer2.setMaxEvaluations((int) (byte) 0);
        int int5 = levenbergMarquardtOptimizer2.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer6.setInitialStepBoundFactor((-1.0d));
        int int13 = levenbergMarquardtOptimizer6.getIterations();
        int int14 = levenbergMarquardtOptimizer6.getIterations();
        double[] doubleArray15 = levenbergMarquardtOptimizer6.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer16 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer16.rows = 0;
        levenbergMarquardtOptimizer16.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer16.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer16.cost = (short) 100;
        int int25 = levenbergMarquardtOptimizer16.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer16.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26);
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26);
        levenbergMarquardtOptimizer2.checker = simpleVectorialValueChecker26;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker30 = levenbergMarquardtOptimizer2.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker30);
        levenbergMarquardtOptimizer0.cols = (byte) 10;
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1000 + "'", int25 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: new           #8
41: dup
42: invokespecial #9
45: astore        4
47: aload         4
49: iconst_0
50: invokevirtual #76
53: aload         4
55: invokevirtual #98
58: istore        5
60: new           #8
63: dup
64: invokespecial #9
67: astore        6
69: aload         6
71: iconst_0
72: putfield      #93
75: aload         6
77: iconst_1
78: invokevirtual #76
81: aload         6
83: ldc2_w        #31
86: invokevirtual #94
89: aload         6
91: invokevirtual #126
94: istore        7
96: aload         6
98: invokevirtual #126
101: istore        8
103: aload         6
105: getfield      #122
108: astore        9
110: new           #8
113: dup
114: invokespecial #9
117: astore        10
119: aload         10
121: iconst_0
122: putfield      #93
125: aload         10
127: iconst_1
128: invokevirtual #76
131: aload         10
133: ldc2_w        #31
136: invokevirtual #94
139: aload         10
141: ldc2_w        #95
144: putfield      #97
147: aload         10
149: invokevirtual #98
152: istore        11
154: new           #99
157: dup
158: invokespecial #100
161: astore        12
163: aload         10
165: aload         12
167: invokevirtual #101
170: aload         6
172: aload         12
174: invokevirtual #101
177: aload         4
179: aload         12
181: putfield      #140
184: aload         4
186: invokevirtual #104
189: astore        13
191: aload_1
192: aload         13
194: invokevirtual #101
197: aload_1
198: bipush        10
200: putfield      #105
203: new           #64
206: dup
207: invokespecial #65
210: ldc           #66
212: invokevirtual #67
215: dload_2
216: invokevirtual #79
219: ldc           #69
221: invokevirtual #67
224: dconst_0
225: invokevirtual #79
228: ldc           #66
230: invokevirtual #67
233: invokevirtual #71
236: dload_2
237: dconst_0
238: dcmpl
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #73
250: new           #64
253: dup
254: invokespecial #65
257: ldc           #66
259: invokevirtual #67
262: iload         5
264: invokevirtual #102
267: ldc           #69
269: invokevirtual #67
272: sipush        1000
275: invokevirtual #102
278: ldc           #66
280: invokevirtual #67
283: invokevirtual #71
286: iload         5
288: sipush        1000
291: if_icmpne     298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #73
302: new           #64
305: dup
306: invokespecial #65
309: ldc           #66
311: invokevirtual #67
314: iload         7
316: invokevirtual #102
319: ldc           #69
321: invokevirtual #67
324: iconst_0
325: invokevirtual #102
328: ldc           #66
330: invokevirtual #67
333: invokevirtual #71
336: iload         7
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #73
349: new           #64
352: dup
353: invokespecial #65
356: ldc           #66
358: invokevirtual #67
361: iload         8
363: invokevirtual #102
366: ldc           #69
368: invokevirtual #67
371: iconst_0
372: invokevirtual #102
375: ldc           #66
377: invokevirtual #67
380: invokevirtual #71
383: iload         8
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #73
396: aload         9
398: invokestatic  #106
401: new           #64
404: dup
405: invokespecial #65
408: ldc           #66
410: invokevirtual #67
413: iload         11
415: invokevirtual #102
418: ldc           #69
420: invokevirtual #67
423: sipush        1000
426: invokevirtual #102
429: ldc           #66
431: invokevirtual #67
434: invokevirtual #71
437: iload         11
439: sipush        1000
442: if_icmpne     449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #73
453: aload         13
455: invokestatic  #56
458: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 11562
End line: 11652
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int82 = levenbergMarquardtOptimizer0.getEvaluations();
        double double83 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #424
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #98
551: istore        47
553: aload_1
554: invokevirtual #167
557: istore        48
559: aload_1
560: invokevirtual #77
563: dstore        49
565: aload_3
566: invokestatic  #56
569: aload_3
570: invokestatic  #57
573: ldc           #58
575: invokestatic  #59
578: aload_3
579: invokestatic  #60
582: ldc           #58
584: invokestatic  #59
587: aload         7
589: invokestatic  #56
592: aload         7
594: invokestatic  #57
597: ldc           #58
599: invokestatic  #59
602: aload         7
604: invokestatic  #60
607: ldc           #58
609: invokestatic  #59
612: aload         10
614: invokestatic  #56
617: aload         10
619: invokestatic  #61
622: ldc           #62
624: invokestatic  #59
627: aload         12
629: invokestatic  #56
632: aload         12
634: invokestatic  #57
637: ldc           #63
639: invokestatic  #59
642: aload         12
644: invokestatic  #60
647: ldc           #63
649: invokestatic  #59
652: aload         13
654: invokestatic  #56
657: new           #64
660: dup
661: invokespecial #65
664: ldc           #66
666: invokevirtual #67
669: aload         17
671: invokevirtual #68
674: ldc           #69
676: invokevirtual #67
679: getstatic     #70
682: invokevirtual #68
685: ldc           #66
687: invokevirtual #67
690: invokevirtual #71
693: aload         17
695: getstatic     #70
698: invokevirtual #72
701: invokestatic  #73
704: aload         19
706: invokestatic  #56
709: aload         19
711: invokestatic  #57
714: ldc           #63
716: invokestatic  #59
719: aload         19
721: invokestatic  #60
724: ldc           #63
726: invokestatic  #59
729: aload         20
731: invokestatic  #56
734: new           #64
737: dup
738: invokespecial #65
741: ldc           #66
743: invokevirtual #67
746: aload         25
748: invokevirtual #68
751: ldc           #69
753: invokevirtual #67
756: getstatic     #70
759: invokevirtual #68
762: ldc           #66
764: invokevirtual #67
767: invokevirtual #71
770: aload         25
772: getstatic     #70
775: invokevirtual #72
778: invokestatic  #73
781: aload         27
783: invokestatic  #56
786: aload         27
788: invokestatic  #57
791: ldc           #63
793: invokestatic  #59
796: aload         27
798: invokestatic  #60
801: ldc           #63
803: invokestatic  #59
806: aload         28
808: invokestatic  #56
811: aload         30
813: invokestatic  #56
816: aload         31
818: invokestatic  #56
821: aload         33
823: invokestatic  #56
826: aload         37
828: invokestatic  #56
831: aload         37
833: invokestatic  #57
836: ldc           #74
838: invokestatic  #59
841: aload         37
843: invokestatic  #60
846: ldc           #74
848: invokestatic  #59
851: aload         39
853: invokestatic  #56
856: aload         39
858: invokestatic  #57
861: ldc           #74
863: invokestatic  #59
866: aload         39
868: invokestatic  #60
871: ldc           #74
873: invokestatic  #59
876: aload         40
878: invokestatic  #56
881: new           #64
884: dup
885: invokespecial #65
888: ldc           #66
890: invokevirtual #67
893: dload         44
895: invokevirtual #79
898: ldc           #69
900: invokevirtual #67
903: dconst_0
904: invokevirtual #79
907: ldc           #66
909: invokevirtual #67
912: invokevirtual #71
915: dload         44
917: dconst_0
918: dcmpl
919: ifne          926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #73
930: aload         46
932: invokestatic  #106
935: new           #64
938: dup
939: invokespecial #65
942: ldc           #66
944: invokevirtual #67
947: iload         47
949: invokevirtual #102
952: ldc           #69
954: invokevirtual #67
957: sipush        1000
960: invokevirtual #102
963: ldc           #66
965: invokevirtual #67
968: invokevirtual #71
971: iload         47
973: sipush        1000
976: if_icmpne     983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #73
987: new           #64
990: dup
991: invokespecial #65
994: ldc           #66
996: invokevirtual #67
999: iload         48
1001: invokevirtual #102
1004: ldc           #69
1006: invokevirtual #67
1009: iconst_0
1010: invokevirtual #102
1013: ldc           #66
1015: invokevirtual #67
1018: invokevirtual #71
1021: iload         48
1023: ifne          1030
1026: iconst_1
1027: goto          1031
1030: iconst_0
1031: invokestatic  #73
1034: new           #64
1037: dup
1038: invokespecial #65
1041: ldc           #66
1043: invokevirtual #67
1046: dload         49
1048: invokevirtual #79
1051: ldc           #69
1053: invokevirtual #67
1056: dconst_0
1057: invokevirtual #79
1060: ldc           #66
1062: invokevirtual #67
1065: invokevirtual #71
1068: dload         49
1070: dconst_0
1071: dcmpl
1072: ifne          1079
1075: iconst_1
1076: goto          1080
1079: iconst_0
1080: invokestatic  #73
1083: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 11655
End line: 11666
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.setMaxIterations(1000);
        org.junit.Assert.assertNull(doubleArray5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #425
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: bipush        100
51: putfield      #105
54: aload_1
55: ldc2_w        #31
58: invokevirtual #94
61: aload_1
62: sipush        1000
65: invokevirtual #182
68: aload_2
69: invokestatic  #106
72: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 11669
End line: 11765
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int4 = levenbergMarquardtOptimizer0.getIterations();
        int int5 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker8;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer11 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer11.rows = 0;
        levenbergMarquardtOptimizer11.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray16 = levenbergMarquardtOptimizer11.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException18 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable21);
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(throwable21, localizable23, objArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException18, 0.0d, "hi!", objArray26);
        double[] doubleArray29 = functionEvaluationException28.getArgument();
        double[] doubleArray30 = functionEvaluationException28.getArgument();
        levenbergMarquardtOptimizer11.objective = doubleArray30;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36);
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41);
        double[] doubleArray44 = functionEvaluationException43.getArgument();
        double[] doubleArray46 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair47 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray46);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair49 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray44, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59);
        double[] doubleArray62 = functionEvaluationException61.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62);
        double[] doubleArray64 = functionEvaluationException63.getArgument();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray64, true);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable71 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71);
        org.apache.commons.math.exception.util.Localizable localizable73 = null;
        java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76);
        double[] doubleArray79 = functionEvaluationException78.getArgument();
        double[] doubleArray81 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray79, doubleArray81);
        double[] doubleArray83 = vectorialPointValuePair82.getPointRef();
        boolean boolean84 = simpleVectorialValueChecker8.converged(0, vectorialPointValuePair66, vectorialPointValuePair82);
        double[] doubleArray85 = vectorialPointValuePair66.getValue();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #426
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: aload_1
44: invokevirtual #126
47: istore_3
48: aload_1
49: invokevirtual #126
52: istore        4
54: new           #99
57: dup
58: dconst_0
59: dconst_1
60: invokespecial #116
63: astore        5
65: aload_1
66: aload         5
68: putfield      #140
71: new           #8
74: dup
75: invokespecial #9
78: astore        6
80: aload         6
82: iconst_0
83: putfield      #93
86: aload         6
88: iconst_1
89: invokevirtual #76
92: aload         6
94: getfield      #113
97: astore        7
99: new           #81
102: dup
103: iconst_m1
104: invokespecial #82
107: astore        8
109: aconst_null
110: astore        9
112: new           #27
115: dup
116: aload         9
118: invokespecial #39
121: astore        10
123: aconst_null
124: astore        11
126: iconst_2
127: anewarray     #5
130: dup
131: iconst_0
132: ldc           #28
134: aastore
135: dup
136: iconst_1
137: iconst_1
138: invokestatic  #17
141: aastore
142: astore        12
144: new           #27
147: dup
148: aload         9
150: aload         11
152: aload         12
154: invokespecial #47
157: astore        13
159: new           #23
162: dup
163: aload         8
165: dconst_0
166: ldc           #28
168: aload         12
170: invokespecial #83
173: astore        14
175: aload         14
177: invokevirtual #84
180: astore        15
182: aload         14
184: invokevirtual #84
187: astore        16
189: aload         6
191: aload         16
193: putfield      #114
196: new           #81
199: dup
200: iconst_m1
201: invokespecial #82
204: astore        17
206: aconst_null
207: astore        18
209: new           #27
212: dup
213: aload         18
215: invokespecial #39
218: astore        19
220: aconst_null
221: astore        20
223: iconst_2
224: anewarray     #5
227: dup
228: iconst_0
229: ldc           #28
231: aastore
232: dup
233: iconst_1
234: iconst_1
235: invokestatic  #17
238: aastore
239: astore        21
241: new           #27
244: dup
245: aload         18
247: aload         20
249: aload         21
251: invokespecial #47
254: astore        22
256: new           #23
259: dup
260: aload         17
262: dconst_0
263: ldc           #28
265: aload         21
267: invokespecial #83
270: astore        23
272: aload         23
274: invokevirtual #84
277: astore        24
279: iconst_1
280: newarray       double
282: dup
283: iconst_0
284: ldc2_w        #85
287: dastore
288: astore        25
290: new           #87
293: dup
294: aload         24
296: aload         25
298: invokespecial #88
301: astore        26
303: new           #87
306: dup
307: aload         16
309: aload         24
311: iconst_0
312: invokespecial #117
315: astore        27
317: new           #81
320: dup
321: iconst_m1
322: invokespecial #82
325: astore        28
327: aconst_null
328: astore        29
330: new           #27
333: dup
334: aload         29
336: invokespecial #39
339: astore        30
341: aconst_null
342: astore        31
344: iconst_2
345: anewarray     #5
348: dup
349: iconst_0
350: ldc           #28
352: aastore
353: dup
354: iconst_1
355: iconst_1
356: invokestatic  #17
359: aastore
360: astore        32
362: new           #27
365: dup
366: aload         29
368: aload         31
370: aload         32
372: invokespecial #47
375: astore        33
377: new           #23
380: dup
381: aload         28
383: dconst_0
384: ldc           #28
386: aload         32
388: invokespecial #83
391: astore        34
393: aload         34
395: invokevirtual #84
398: astore        35
400: new           #23
403: dup
404: aload         35
406: invokespecial #89
409: astore        36
411: aload         36
413: invokevirtual #84
416: astore        37
418: new           #87
421: dup
422: aload         24
424: aload         37
426: iconst_1
427: invokespecial #117
430: astore        38
432: new           #81
435: dup
436: iconst_m1
437: invokespecial #82
440: astore        39
442: aconst_null
443: astore        40
445: new           #27
448: dup
449: aload         40
451: invokespecial #39
454: astore        41
456: aconst_null
457: astore        42
459: iconst_2
460: anewarray     #5
463: dup
464: iconst_0
465: ldc           #28
467: aastore
468: dup
469: iconst_1
470: iconst_1
471: invokestatic  #17
474: aastore
475: astore        43
477: new           #27
480: dup
481: aload         40
483: aload         42
485: aload         43
487: invokespecial #47
490: astore        44
492: new           #23
495: dup
496: aload         39
498: dconst_0
499: ldc           #28
501: aload         43
503: invokespecial #83
506: astore        45
508: aload         45
510: invokevirtual #84
513: astore        46
515: iconst_1
516: newarray       double
518: dup
519: iconst_0
520: ldc2_w        #85
523: dastore
524: astore        47
526: new           #87
529: dup
530: aload         46
532: aload         47
534: invokespecial #88
537: astore        48
539: aload         48
541: invokevirtual #159
544: astore        49
546: aload         5
548: iconst_0
549: aload         38
551: aload         48
553: invokevirtual #118
556: istore        50
558: aload         38
560: invokevirtual #157
563: astore        51
565: new           #64
568: dup
569: invokespecial #65
572: ldc           #66
574: invokevirtual #67
577: iload_2
578: invokevirtual #102
581: ldc           #69
583: invokevirtual #67
586: sipush        1000
589: invokevirtual #102
592: ldc           #66
594: invokevirtual #67
597: invokevirtual #71
600: iload_2
601: sipush        1000
604: if_icmpne     611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #73
615: new           #64
618: dup
619: invokespecial #65
622: ldc           #66
624: invokevirtual #67
627: iload_3
628: invokevirtual #102
631: ldc           #69
633: invokevirtual #67
636: iconst_0
637: invokevirtual #102
640: ldc           #66
642: invokevirtual #67
645: invokevirtual #71
648: iload_3
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #73
660: new           #64
663: dup
664: invokespecial #65
667: ldc           #66
669: invokevirtual #67
672: iload         4
674: invokevirtual #102
677: ldc           #69
679: invokevirtual #67
682: iconst_0
683: invokevirtual #102
686: ldc           #66
688: invokevirtual #67
691: invokevirtual #71
694: iload         4
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #73
707: aload         7
709: invokestatic  #106
712: aload         12
714: invokestatic  #56
717: aload         12
719: invokestatic  #57
722: ldc           #74
724: invokestatic  #59
727: aload         12
729: invokestatic  #60
732: ldc           #74
734: invokestatic  #59
737: aload         15
739: invokestatic  #56
742: aload         15
744: invokestatic  #61
747: ldc           #90
749: invokestatic  #59
752: aload         16
754: invokestatic  #56
757: aload         16
759: invokestatic  #61
762: ldc           #90
764: invokestatic  #59
767: aload         21
769: invokestatic  #56
772: aload         21
774: invokestatic  #57
777: ldc           #74
779: invokestatic  #59
782: aload         21
784: invokestatic  #60
787: ldc           #74
789: invokestatic  #59
792: aload         24
794: invokestatic  #56
797: aload         24
799: invokestatic  #61
802: ldc           #90
804: invokestatic  #59
807: aload         25
809: invokestatic  #56
812: aload         25
814: invokestatic  #61
817: ldc           #91
819: invokestatic  #59
822: aload         32
824: invokestatic  #56
827: aload         32
829: invokestatic  #57
832: ldc           #74
834: invokestatic  #59
837: aload         32
839: invokestatic  #60
842: ldc           #74
844: invokestatic  #59
847: aload         35
849: invokestatic  #56
852: aload         35
854: invokestatic  #61
857: ldc           #90
859: invokestatic  #59
862: aload         37
864: invokestatic  #56
867: aload         37
869: invokestatic  #61
872: ldc           #90
874: invokestatic  #59
877: aload         43
879: invokestatic  #56
882: aload         43
884: invokestatic  #57
887: ldc           #74
889: invokestatic  #59
892: aload         43
894: invokestatic  #60
897: ldc           #74
899: invokestatic  #59
902: aload         46
904: invokestatic  #56
907: aload         46
909: invokestatic  #61
912: ldc           #90
914: invokestatic  #59
917: aload         47
919: invokestatic  #56
922: aload         47
924: invokestatic  #61
927: ldc           #91
929: invokestatic  #59
932: aload         49
934: invokestatic  #56
937: aload         49
939: invokestatic  #61
942: ldc           #90
944: invokestatic  #59
947: new           #64
950: dup
951: invokespecial #65
954: ldc           #66
956: invokevirtual #67
959: iload         50
961: invokevirtual #119
964: ldc           #69
966: invokevirtual #67
969: iconst_0
970: invokevirtual #119
973: ldc           #66
975: invokevirtual #67
978: invokevirtual #71
981: iload         50
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #73
994: aload         51
996: invokestatic  #56
999: aload         51
1001: invokestatic  #61
1004: ldc           #90
1006: invokestatic  #59
1009: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 11768
End line: 11787
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1000 + "'", int11 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #427
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: aload_1
67: invokevirtual #132
70: dstore        4
72: aload_1
73: invokevirtual #133
76: istore        6
78: aload_1
79: invokevirtual #110
82: istore        7
84: aload_1
85: invokevirtual #98
88: istore        8
90: aload_2
91: invokestatic  #56
94: aload_2
95: invokestatic  #61
98: ldc           #134
100: invokestatic  #59
103: aload_3
104: invokestatic  #56
107: dload         4
109: invokestatic  #135
112: invokestatic  #136
115: new           #64
118: dup
119: invokespecial #65
122: ldc           #66
124: invokevirtual #67
127: iload         6
129: invokevirtual #102
132: ldc           #69
134: invokevirtual #67
137: iconst_0
138: invokevirtual #102
141: ldc           #66
143: invokevirtual #67
146: invokevirtual #71
149: iload         6
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #73
162: new           #64
165: dup
166: invokespecial #65
169: ldc           #66
171: invokevirtual #67
174: iload         7
176: invokevirtual #102
179: ldc           #69
181: invokevirtual #67
184: ldc           #111
186: invokevirtual #102
189: ldc           #66
191: invokevirtual #67
194: invokevirtual #71
197: iload         7
199: ldc           #111
201: if_icmpne     208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #73
212: new           #64
215: dup
216: invokespecial #65
219: ldc           #66
221: invokevirtual #67
224: iload         8
226: invokevirtual #102
229: ldc           #69
231: invokevirtual #67
234: sipush        1000
237: invokevirtual #102
240: ldc           #66
242: invokevirtual #67
245: invokevirtual #71
248: iload         8
250: sipush        1000
253: if_icmpne     260
256: iconst_1
257: goto          261
260: iconst_0
261: invokestatic  #73
264: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 11790
End line: 11835
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        int int39 = levenbergMarquardtOptimizer0.cols;
        levenbergMarquardtOptimizer0.rows = (short) 0;
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #428
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #105
278: istore        24
280: aload_1
281: iconst_0
282: putfield      #93
285: aload         7
287: invokestatic  #56
290: aload         7
292: invokestatic  #57
295: ldc           #74
297: invokestatic  #59
300: aload         7
302: invokestatic  #60
305: ldc           #74
307: invokestatic  #59
310: aload         10
312: invokestatic  #56
315: aload         10
317: invokestatic  #61
320: ldc           #90
322: invokestatic  #59
325: aload         11
327: invokestatic  #56
330: aload         11
332: invokestatic  #61
335: ldc           #91
337: invokestatic  #59
340: aload         17
342: invokestatic  #56
345: aload         17
347: invokestatic  #57
350: ldc           #74
352: invokestatic  #59
355: aload         17
357: invokestatic  #60
360: ldc           #74
362: invokestatic  #59
365: aload         20
367: invokestatic  #56
370: aload         20
372: invokestatic  #61
375: ldc           #90
377: invokestatic  #59
380: aload         21
382: invokestatic  #56
385: aload         21
387: invokestatic  #61
390: ldc           #91
392: invokestatic  #59
395: new           #64
398: dup
399: invokespecial #65
402: ldc           #66
404: invokevirtual #67
407: iload         23
409: invokevirtual #119
412: ldc           #69
414: invokevirtual #67
417: iconst_1
418: invokevirtual #119
421: ldc           #66
423: invokevirtual #67
426: invokevirtual #71
429: iload         23
431: iconst_1
432: if_icmpne     439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #73
443: new           #64
446: dup
447: invokespecial #65
450: ldc           #66
452: invokevirtual #67
455: iload         24
457: invokevirtual #102
460: ldc           #69
462: invokevirtual #67
465: iconst_0
466: invokevirtual #102
469: ldc           #66
471: invokevirtual #67
474: invokevirtual #71
477: iload         24
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #73
490: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 11838
End line: 11920
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int21 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35);
        double[] doubleArray38 = functionEvaluationException37.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43);
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48);
        double[] doubleArray51 = functionEvaluationException50.getArgument();
        double[] doubleArray53 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray53, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException58 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable61 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable61);
        org.apache.commons.math.exception.util.Localizable localizable63 = null;
        java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable61, localizable63, objArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException58, 0.0d, "hi!", objArray66);
        double[] doubleArray69 = functionEvaluationException68.getArgument();
        double[] doubleArray71 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray71);
        boolean boolean73 = simpleVectorialValueChecker24.converged(0, vectorialPointValuePair56, vectorialPointValuePair72);
        double[] doubleArray74 = vectorialPointValuePair56.getValueRef();
        levenbergMarquardtOptimizer0.targetValues = doubleArray74;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #126
156: istore        13
158: new           #99
161: dup
162: dconst_0
163: ldc2_w        #95
166: invokespecial #116
169: astore        14
171: new           #81
174: dup
175: iconst_m1
176: invokespecial #82
179: astore        15
181: aconst_null
182: astore        16
184: new           #27
187: dup
188: aload         16
190: invokespecial #39
193: astore        17
195: aconst_null
196: astore        18
198: iconst_2
199: anewarray     #5
202: dup
203: iconst_0
204: ldc           #28
206: aastore
207: dup
208: iconst_1
209: iconst_1
210: invokestatic  #17
213: aastore
214: astore        19
216: new           #27
219: dup
220: aload         16
222: aload         18
224: aload         19
226: invokespecial #47
229: astore        20
231: new           #23
234: dup
235: aload         15
237: dconst_0
238: ldc           #28
240: aload         19
242: invokespecial #83
245: astore        21
247: aload         21
249: invokevirtual #84
252: astore        22
254: new           #81
257: dup
258: iconst_m1
259: invokespecial #82
262: astore        23
264: aconst_null
265: astore        24
267: new           #27
270: dup
271: aload         24
273: invokespecial #39
276: astore        25
278: aconst_null
279: astore        26
281: iconst_2
282: anewarray     #5
285: dup
286: iconst_0
287: ldc           #28
289: aastore
290: dup
291: iconst_1
292: iconst_1
293: invokestatic  #17
296: aastore
297: astore        27
299: new           #27
302: dup
303: aload         24
305: aload         26
307: aload         27
309: invokespecial #47
312: astore        28
314: new           #23
317: dup
318: aload         23
320: dconst_0
321: ldc           #28
323: aload         27
325: invokespecial #83
328: astore        29
330: aload         29
332: invokevirtual #84
335: astore        30
337: iconst_1
338: newarray       double
340: dup
341: iconst_0
342: ldc2_w        #85
345: dastore
346: astore        31
348: new           #87
351: dup
352: aload         30
354: aload         31
356: invokespecial #88
359: astore        32
361: new           #87
364: dup
365: aload         22
367: aload         31
369: iconst_0
370: invokespecial #117
373: astore        33
375: new           #81
378: dup
379: iconst_m1
380: invokespecial #82
383: astore        34
385: aconst_null
386: astore        35
388: new           #27
391: dup
392: aload         35
394: invokespecial #39
397: astore        36
399: aconst_null
400: astore        37
402: iconst_2
403: anewarray     #5
406: dup
407: iconst_0
408: ldc           #28
410: aastore
411: dup
412: iconst_1
413: iconst_1
414: invokestatic  #17
417: aastore
418: astore        38
420: new           #27
423: dup
424: aload         35
426: aload         37
428: aload         38
430: invokespecial #47
433: astore        39
435: new           #23
438: dup
439: aload         34
441: dconst_0
442: ldc           #28
444: aload         38
446: invokespecial #83
449: astore        40
451: aload         40
453: invokevirtual #84
456: astore        41
458: iconst_1
459: newarray       double
461: dup
462: iconst_0
463: ldc2_w        #85
466: dastore
467: astore        42
469: new           #87
472: dup
473: aload         41
475: aload         42
477: invokespecial #88
480: astore        43
482: aload         14
484: iconst_0
485: aload         33
487: aload         43
489: invokevirtual #118
492: istore        44
494: aload         33
496: invokevirtual #210
499: astore        45
501: aload_1
502: aload         45
504: putfield      #152
507: aload         6
509: invokestatic  #56
512: aload         6
514: invokestatic  #57
517: ldc           #74
519: invokestatic  #59
522: aload         6
524: invokestatic  #60
527: ldc           #74
529: invokestatic  #59
532: aload         9
534: invokestatic  #56
537: aload         9
539: invokestatic  #61
542: ldc           #90
544: invokestatic  #59
547: aload         10
549: invokestatic  #56
552: aload         10
554: invokestatic  #61
557: ldc           #91
559: invokestatic  #59
562: new           #64
565: dup
566: invokespecial #65
569: ldc           #66
571: invokevirtual #67
574: iload         12
576: invokevirtual #102
579: ldc           #69
581: invokevirtual #67
584: sipush        1000
587: invokevirtual #102
590: ldc           #66
592: invokevirtual #67
595: invokevirtual #71
598: iload         12
600: sipush        1000
603: if_icmpne     610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #73
614: new           #64
617: dup
618: invokespecial #65
621: ldc           #66
623: invokevirtual #67
626: iload         13
628: invokevirtual #102
631: ldc           #69
633: invokevirtual #67
636: iconst_0
637: invokevirtual #102
640: ldc           #66
642: invokevirtual #67
645: invokevirtual #71
648: iload         13
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #73
661: aload         19
663: invokestatic  #56
666: aload         19
668: invokestatic  #57
671: ldc           #74
673: invokestatic  #59
676: aload         19
678: invokestatic  #60
681: ldc           #74
683: invokestatic  #59
686: aload         22
688: invokestatic  #56
691: aload         22
693: invokestatic  #61
696: ldc           #90
698: invokestatic  #59
701: aload         27
703: invokestatic  #56
706: aload         27
708: invokestatic  #57
711: ldc           #74
713: invokestatic  #59
716: aload         27
718: invokestatic  #60
721: ldc           #74
723: invokestatic  #59
726: aload         30
728: invokestatic  #56
731: aload         30
733: invokestatic  #61
736: ldc           #90
738: invokestatic  #59
741: aload         31
743: invokestatic  #56
746: aload         31
748: invokestatic  #61
751: ldc           #91
753: invokestatic  #59
756: aload         38
758: invokestatic  #56
761: aload         38
763: invokestatic  #57
766: ldc           #74
768: invokestatic  #59
771: aload         38
773: invokestatic  #60
776: ldc           #74
778: invokestatic  #59
781: aload         41
783: invokestatic  #56
786: aload         41
788: invokestatic  #61
791: ldc           #90
793: invokestatic  #59
796: aload         42
798: invokestatic  #56
801: aload         42
803: invokestatic  #61
806: ldc           #91
808: invokestatic  #59
811: new           #64
814: dup
815: invokespecial #65
818: ldc           #66
820: invokevirtual #67
823: iload         44
825: invokevirtual #119
828: ldc           #69
830: invokevirtual #67
833: iconst_1
834: invokevirtual #119
837: ldc           #66
839: invokevirtual #67
842: invokevirtual #71
845: iload         44
847: iconst_1
848: if_icmpne     855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #73
859: aload         45
861: invokestatic  #56
864: aload         45
866: invokestatic  #61
869: ldc           #91
871: invokestatic  #59
874: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 11923
End line: 11941
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.targetValues;
        levenbergMarquardtOptimizer0.setMaxIterations((int) '4');
        double double12 = levenbergMarquardtOptimizer0.getRMS();
        double[][] doubleArray13 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNull(doubleArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #430
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #152
64: astore        4
66: aload_1
67: bipush        52
69: invokevirtual #182
72: aload_1
73: invokevirtual #132
76: dstore        5
78: aload_1
79: getfield      #131
82: astore        7
84: new           #64
87: dup
88: invokespecial #65
91: ldc           #66
93: invokevirtual #67
96: iload_2
97: invokevirtual #102
100: ldc           #69
102: invokevirtual #67
105: iconst_0
106: invokevirtual #102
109: ldc           #66
111: invokevirtual #67
114: invokevirtual #71
117: iload_2
118: ifne          125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #73
129: new           #64
132: dup
133: invokespecial #65
136: ldc           #66
138: invokevirtual #67
141: iload_3
142: invokevirtual #102
145: ldc           #69
147: invokevirtual #67
150: iconst_0
151: invokevirtual #102
154: ldc           #66
156: invokevirtual #67
159: invokevirtual #71
162: iload_3
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #73
174: aload         4
176: invokestatic  #106
179: dload         5
181: invokestatic  #135
184: invokestatic  #136
187: aload         7
189: invokestatic  #106
192: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 11944
End line: 11984
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.rows;
        int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            levenbergMarquardtOptimizer0.updateResidualsAndCost();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #431
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: getfield      #93
163: istore        15
165: aload_1
166: invokevirtual #133
169: istore        16
171: aload_1
172: ldc2_w        #95
175: invokevirtual #204
178: aload_1
179: invokevirtual #174
182: ldc           #54
184: invokestatic  #13
187: goto          192
190: astore        17
192: aload         6
194: invokestatic  #56
197: aload         6
199: invokestatic  #57
202: ldc           #74
204: invokestatic  #59
207: aload         6
209: invokestatic  #60
212: ldc           #74
214: invokestatic  #59
217: aload         9
219: invokestatic  #56
222: aload         9
224: invokestatic  #61
227: ldc           #90
229: invokestatic  #59
232: aload         10
234: invokestatic  #56
237: aload         10
239: invokestatic  #61
242: ldc           #91
244: invokestatic  #59
247: aload         12
249: invokestatic  #106
252: new           #64
255: dup
256: invokespecial #65
259: ldc           #66
261: invokevirtual #67
264: iload         13
266: invokevirtual #102
269: ldc           #69
271: invokevirtual #67
274: iconst_0
275: invokevirtual #102
278: ldc           #66
280: invokevirtual #67
283: invokevirtual #71
286: iload         13
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #73
299: new           #64
302: dup
303: invokespecial #65
306: ldc           #66
308: invokevirtual #67
311: iload         14
313: invokevirtual #102
316: ldc           #69
318: invokevirtual #67
321: iconst_0
322: invokevirtual #102
325: ldc           #66
327: invokevirtual #67
330: invokevirtual #71
333: iload         14
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #73
346: new           #64
349: dup
350: invokespecial #65
353: ldc           #66
355: invokevirtual #67
358: iload         15
360: invokevirtual #102
363: ldc           #69
365: invokevirtual #67
368: iconst_0
369: invokevirtual #102
372: ldc           #66
374: invokevirtual #67
377: invokevirtual #71
380: iload         15
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #73
393: new           #64
396: dup
397: invokespecial #65
400: ldc           #66
402: invokevirtual #67
405: iload         16
407: invokevirtual #102
410: ldc           #69
412: invokevirtual #67
415: iconst_0
416: invokevirtual #102
419: ldc           #66
421: invokevirtual #67
424: invokevirtual #71
427: iload         16
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #73
440: return
Exception table:
from    to  target type
178   187   190   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 11987
End line: 11995
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.checker;
        org.junit.Assert.assertNull(vectorialConvergenceChecker5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #432
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #140
48: astore_2
49: aload_2
50: invokestatic  #106
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 11998
End line: 12087
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        int int84 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #433
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: dconst_0
555: invokevirtual #94
558: aload_1
559: invokevirtual #133
562: istore        48
564: aload_3
565: invokestatic  #56
568: aload_3
569: invokestatic  #57
572: ldc           #58
574: invokestatic  #59
577: aload_3
578: invokestatic  #60
581: ldc           #58
583: invokestatic  #59
586: aload         7
588: invokestatic  #56
591: aload         7
593: invokestatic  #57
596: ldc           #58
598: invokestatic  #59
601: aload         7
603: invokestatic  #60
606: ldc           #58
608: invokestatic  #59
611: aload         10
613: invokestatic  #56
616: aload         10
618: invokestatic  #61
621: ldc           #62
623: invokestatic  #59
626: aload         12
628: invokestatic  #56
631: aload         12
633: invokestatic  #57
636: ldc           #63
638: invokestatic  #59
641: aload         12
643: invokestatic  #60
646: ldc           #63
648: invokestatic  #59
651: aload         13
653: invokestatic  #56
656: new           #64
659: dup
660: invokespecial #65
663: ldc           #66
665: invokevirtual #67
668: aload         17
670: invokevirtual #68
673: ldc           #69
675: invokevirtual #67
678: getstatic     #70
681: invokevirtual #68
684: ldc           #66
686: invokevirtual #67
689: invokevirtual #71
692: aload         17
694: getstatic     #70
697: invokevirtual #72
700: invokestatic  #73
703: aload         19
705: invokestatic  #56
708: aload         19
710: invokestatic  #57
713: ldc           #63
715: invokestatic  #59
718: aload         19
720: invokestatic  #60
723: ldc           #63
725: invokestatic  #59
728: aload         20
730: invokestatic  #56
733: new           #64
736: dup
737: invokespecial #65
740: ldc           #66
742: invokevirtual #67
745: aload         25
747: invokevirtual #68
750: ldc           #69
752: invokevirtual #67
755: getstatic     #70
758: invokevirtual #68
761: ldc           #66
763: invokevirtual #67
766: invokevirtual #71
769: aload         25
771: getstatic     #70
774: invokevirtual #72
777: invokestatic  #73
780: aload         27
782: invokestatic  #56
785: aload         27
787: invokestatic  #57
790: ldc           #63
792: invokestatic  #59
795: aload         27
797: invokestatic  #60
800: ldc           #63
802: invokestatic  #59
805: aload         28
807: invokestatic  #56
810: aload         30
812: invokestatic  #56
815: aload         31
817: invokestatic  #56
820: aload         33
822: invokestatic  #56
825: aload         37
827: invokestatic  #56
830: aload         37
832: invokestatic  #57
835: ldc           #74
837: invokestatic  #59
840: aload         37
842: invokestatic  #60
845: ldc           #74
847: invokestatic  #59
850: aload         39
852: invokestatic  #56
855: aload         39
857: invokestatic  #57
860: ldc           #74
862: invokestatic  #59
865: aload         39
867: invokestatic  #60
870: ldc           #74
872: invokestatic  #59
875: aload         40
877: invokestatic  #56
880: new           #64
883: dup
884: invokespecial #65
887: ldc           #66
889: invokevirtual #67
892: dload         44
894: invokevirtual #79
897: ldc           #69
899: invokevirtual #67
902: dconst_0
903: invokevirtual #79
906: ldc           #66
908: invokevirtual #67
911: invokevirtual #71
914: dload         44
916: dconst_0
917: dcmpl
918: ifne          925
921: iconst_1
922: goto          926
925: iconst_0
926: invokestatic  #73
929: aload         46
931: invokestatic  #106
934: new           #64
937: dup
938: invokespecial #65
941: ldc           #66
943: invokevirtual #67
946: iload         47
948: invokevirtual #102
951: ldc           #69
953: invokevirtual #67
956: iconst_0
957: invokevirtual #102
960: ldc           #66
962: invokevirtual #67
965: invokevirtual #71
968: iload         47
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #73
981: new           #64
984: dup
985: invokespecial #65
988: ldc           #66
990: invokevirtual #67
993: iload         48
995: invokevirtual #102
998: ldc           #69
1000: invokevirtual #67
1003: iconst_0
1004: invokevirtual #102
1007: ldc           #66
1009: invokevirtual #67
1012: invokevirtual #71
1015: iload         48
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #73
1028: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 12090
End line: 12101
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        double[][] doubleArray8 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: getfield      #131
59: astore_3
60: new           #64
63: dup
64: invokespecial #65
67: ldc           #66
69: invokevirtual #67
72: iload_2
73: invokevirtual #102
76: ldc           #69
78: invokevirtual #67
81: iconst_0
82: invokevirtual #102
85: ldc           #66
87: invokevirtual #67
90: invokevirtual #71
93: iload_2
94: ifne          101
97: iconst_1
98: goto          102
101: iconst_0
102: invokestatic  #73
105: aload_3
106: invokestatic  #106
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 12104
End line: 12131
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker21 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker20);
        org.junit.Assert.assertNull(vectorialConvergenceChecker21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #435
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: bipush        100
144: invokevirtual #76
147: aload_1
148: getfield      #140
151: astore        12
153: aload_1
154: invokevirtual #104
157: astore        13
159: aload         6
161: invokestatic  #56
164: aload         6
166: invokestatic  #57
169: ldc           #74
171: invokestatic  #59
174: aload         6
176: invokestatic  #60
179: ldc           #74
181: invokestatic  #59
184: aload         9
186: invokestatic  #56
189: aload         9
191: invokestatic  #61
194: ldc           #90
196: invokestatic  #59
199: aload         10
201: invokestatic  #56
204: aload         10
206: invokestatic  #61
209: ldc           #91
211: invokestatic  #59
214: aload         12
216: invokestatic  #106
219: aload         13
221: invokestatic  #106
224: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 12134
End line: 12159
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setParRelativeTolerance(Double.POSITIVE_INFINITY);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #436
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: aload_1
133: ldc2_w        #222
136: invokevirtual #204
139: aload_1
140: iconst_1
141: invokevirtual #76
144: new           #64
147: dup
148: invokespecial #65
151: ldc           #66
153: invokevirtual #67
156: iload_2
157: invokevirtual #102
160: ldc           #69
162: invokevirtual #67
165: iconst_0
166: invokevirtual #102
169: ldc           #66
171: invokevirtual #67
174: invokevirtual #71
177: iload_2
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #73
189: new           #64
192: dup
193: invokespecial #65
196: ldc           #66
198: invokevirtual #67
201: iload_3
202: invokevirtual #102
205: ldc           #69
207: invokevirtual #67
210: iconst_0
211: invokevirtual #102
214: ldc           #66
216: invokevirtual #67
219: invokevirtual #71
222: iload_3
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #73
234: aload         4
236: invokestatic  #106
239: new           #64
242: dup
243: invokespecial #65
246: ldc           #66
248: invokevirtual #67
251: iload         6
253: invokevirtual #102
256: ldc           #69
258: invokevirtual #67
261: sipush        1000
264: invokevirtual #102
267: ldc           #66
269: invokevirtual #67
272: invokevirtual #71
275: iload         6
277: sipush        1000
280: if_icmpne     287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #73
291: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test243
Start line: 12162
End line: 12193
Method source code: 
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int21 = levenbergMarquardtOptimizer0.getIterations();
        int int22 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', 1.0d);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker25);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #437
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #126
156: istore        13
158: aload_1
159: invokevirtual #98
162: istore        14
164: new           #99
167: dup
168: ldc2_w        #24
171: dconst_1
172: invokespecial #116
175: astore        15
177: aload_1
178: aload         15
180: invokevirtual #101
183: aload         6
185: invokestatic  #56
188: aload         6
190: invokestatic  #57
193: ldc           #74
195: invokestatic  #59
198: aload         6
200: invokestatic  #60
203: ldc           #74
205: invokestatic  #59
208: aload         9
210: invokestatic  #56
213: aload         9
215: invokestatic  #61
218: ldc           #90
220: invokestatic  #59
223: aload         10
225: invokestatic  #56
228: aload         10
230: invokestatic  #61
233: ldc           #91
235: invokestatic  #59
238: new           #64
241: dup
242: invokespecial #65
245: ldc           #66
247: invokevirtual #67
250: iload         12
252: invokevirtual #102
255: ldc           #69
257: invokevirtual #67
260: sipush        1000
263: invokevirtual #102
266: ldc           #66
268: invokevirtual #67
271: invokevirtual #71
274: iload         12
276: sipush        1000
279: if_icmpne     286
282: iconst_1
283: goto          287
286: iconst_0
287: invokestatic  #73
290: new           #64
293: dup
294: invokespecial #65
297: ldc           #66
299: invokevirtual #67
302: iload         13
304: invokevirtual #102
307: ldc           #69
309: invokevirtual #67
312: iconst_0
313: invokevirtual #102
316: ldc           #66
318: invokevirtual #67
321: invokevirtual #71
324: iload         13
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #73
337: new           #64
340: dup
341: invokespecial #65
344: ldc           #66
346: invokevirtual #67
349: iload         14
351: invokevirtual #102
354: ldc           #69
356: invokevirtual #67
359: sipush        1000
362: invokevirtual #102
365: ldc           #66
367: invokevirtual #67
370: invokevirtual #71
373: iload         14
375: sipush        1000
378: if_icmpne     385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #73
389: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test244
Start line: 12196
End line: 12207
Method source code: 
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #438
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: invokevirtual #110
52: istore_3
53: aload_1
54: bipush        97
56: invokevirtual #76
59: aload_2
60: invokestatic  #106
63: new           #64
66: dup
67: invokespecial #65
70: ldc           #66
72: invokevirtual #67
75: iload_3
76: invokevirtual #102
79: ldc           #69
81: invokevirtual #67
84: iconst_1
85: invokevirtual #102
88: ldc           #66
90: invokevirtual #67
93: invokevirtual #71
96: iload_3
97: iconst_1
98: if_icmpne     105
101: iconst_1
102: goto          106
105: iconst_0
106: invokestatic  #73
109: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test245
Start line: 12210
End line: 12295
Method source code: 
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable27, objArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException(localizable25, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException("hi!", objArray33);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException39 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable42 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable42);
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable42, localizable44, objArray47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException39, 0.0d, "hi!", objArray47);
        double[] doubleArray50 = functionEvaluationException49.getArgument();
        double[] doubleArray52 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray52);
        levenbergMarquardtOptimizer37.point = doubleArray52;
        levenbergMarquardtOptimizer37.cost = 0L;
        double[] doubleArray62 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer37.targetValues = doubleArray62;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException36, doubleArray62);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable70 = null;
        java.lang.Object[] objArray73 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73);
        java.lang.Object[] objArray79 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException80 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray79);
        org.apache.commons.math.optimization.OptimizationException optimizationException81 = new org.apache.commons.math.optimization.OptimizationException(localizable68, objArray79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62, "{0}", objArray79);
        levenbergMarquardtOptimizer0.point = doubleArray62;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #439
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aconst_null
156: astore        13
158: aconst_null
159: astore        14
161: iconst_5
162: anewarray     #5
165: dup
166: iconst_0
167: iconst_0
168: invokestatic  #16
171: aastore
172: dup
173: iconst_1
174: iconst_0
175: invokestatic  #17
178: aastore
179: dup
180: iconst_2
181: bipush        52
183: invokestatic  #18
186: aastore
187: dup
188: iconst_3
189: ldc2_w        #19
192: invokestatic  #21
195: aastore
196: dup
197: iconst_4
198: dconst_1
199: invokestatic  #22
202: aastore
203: astore        15
205: new           #23
208: dup
209: ldc2_w        #24
212: aload         14
214: aload         15
216: invokespecial #26
219: astore        16
221: new           #44
224: dup
225: aload         13
227: aload         15
229: invokespecial #149
232: astore        17
234: new           #27
237: dup
238: ldc           #28
240: aload         15
242: invokespecial #29
245: astore        18
247: new           #8
250: dup
251: invokespecial #9
254: astore        19
256: new           #81
259: dup
260: iconst_m1
261: invokespecial #82
264: astore        20
266: aconst_null
267: astore        21
269: new           #27
272: dup
273: aload         21
275: invokespecial #39
278: astore        22
280: aconst_null
281: astore        23
283: iconst_2
284: anewarray     #5
287: dup
288: iconst_0
289: ldc           #28
291: aastore
292: dup
293: iconst_1
294: iconst_1
295: invokestatic  #17
298: aastore
299: astore        24
301: new           #27
304: dup
305: aload         21
307: aload         23
309: aload         24
311: invokespecial #47
314: astore        25
316: new           #23
319: dup
320: aload         20
322: dconst_0
323: ldc           #28
325: aload         24
327: invokespecial #83
330: astore        26
332: aload         26
334: invokevirtual #84
337: astore        27
339: iconst_1
340: newarray       double
342: dup
343: iconst_0
344: ldc2_w        #85
347: dastore
348: astore        28
350: new           #87
353: dup
354: aload         27
356: aload         28
358: invokespecial #88
361: astore        29
363: aload         19
365: aload         28
367: putfield      #52
370: aload         19
372: dconst_0
373: putfield      #97
376: iconst_5
377: newarray       double
379: dup
380: iconst_0
381: ldc2_w        #95
384: dastore
385: dup
386: iconst_1
387: dconst_0
388: dastore
389: dup
390: iconst_2
391: ldc2_w        #33
394: dastore
395: dup
396: iconst_3
397: ldc2_w        #150
400: dastore
401: dup
402: iconst_4
403: dconst_1
404: dastore
405: astore        30
407: aload         19
409: aload         30
411: putfield      #152
414: new           #23
417: dup
418: aload         18
420: aload         30
422: invokespecial #148
425: astore        31
427: aconst_null
428: astore        32
430: new           #27
433: dup
434: aload         32
436: invokespecial #39
439: astore        33
441: aload         33
443: invokevirtual #40
446: astore        34
448: aconst_null
449: astore        35
451: iconst_1
452: anewarray     #5
455: dup
456: iconst_0
457: iconst_1
458: invokestatic  #35
461: aastore
462: astore        36
464: ldc           #28
466: aload         36
468: invokestatic  #36
471: astore        37
473: new           #37
476: dup
477: bipush        100
479: aload         35
481: aload         36
483: invokespecial #38
486: astore        38
488: aload         34
490: aload         36
492: invokestatic  #41
495: astore        39
497: iconst_1
498: anewarray     #5
501: dup
502: iconst_0
503: iconst_1
504: invokestatic  #35
507: aastore
508: astore        40
510: ldc           #28
512: aload         40
514: invokestatic  #36
517: astore        41
519: new           #14
522: dup
523: aload         34
525: aload         40
527: invokespecial #323
530: astore        42
532: new           #23
535: dup
536: aload         30
538: ldc           #142
540: aload         40
542: invokespecial #144
545: astore        43
547: aload_1
548: aload         30
550: putfield      #52
553: aload_2
554: invokestatic  #106
557: aload         7
559: invokestatic  #56
562: aload         7
564: invokestatic  #57
567: ldc           #74
569: invokestatic  #59
572: aload         7
574: invokestatic  #60
577: ldc           #74
579: invokestatic  #59
582: aload         10
584: invokestatic  #56
587: aload         10
589: invokestatic  #61
592: ldc           #90
594: invokestatic  #59
597: aload         11
599: invokestatic  #56
602: aload         11
604: invokestatic  #61
607: ldc           #90
609: invokestatic  #59
612: aload         12
614: invokestatic  #106
617: aload         15
619: invokestatic  #56
622: aload         15
624: invokestatic  #57
627: ldc           #58
629: invokestatic  #59
632: aload         15
634: invokestatic  #60
637: ldc           #58
639: invokestatic  #59
642: aload         24
644: invokestatic  #56
647: aload         24
649: invokestatic  #57
652: ldc           #74
654: invokestatic  #59
657: aload         24
659: invokestatic  #60
662: ldc           #74
664: invokestatic  #59
667: aload         27
669: invokestatic  #56
672: aload         27
674: invokestatic  #61
677: ldc           #90
679: invokestatic  #59
682: aload         28
684: invokestatic  #56
687: aload         28
689: invokestatic  #61
692: ldc           #91
694: invokestatic  #59
697: aload         30
699: invokestatic  #56
702: aload         30
704: invokestatic  #61
707: ldc           #153
709: invokestatic  #59
712: new           #64
715: dup
716: invokespecial #65
719: ldc           #66
721: invokevirtual #67
724: aload         34
726: invokevirtual #68
729: ldc           #69
731: invokevirtual #67
734: getstatic     #70
737: invokevirtual #68
740: ldc           #66
742: invokevirtual #67
745: invokevirtual #71
748: aload         34
750: getstatic     #70
753: invokevirtual #72
756: invokestatic  #73
759: aload         36
761: invokestatic  #56
764: aload         36
766: invokestatic  #57
769: ldc           #63
771: invokestatic  #59
774: aload         36
776: invokestatic  #60
779: ldc           #63
781: invokestatic  #59
784: aload         37
786: invokestatic  #56
789: aload         39
791: invokestatic  #56
794: aload         40
796: invokestatic  #56
799: aload         40
801: invokestatic  #57
804: ldc           #63
806: invokestatic  #59
809: aload         40
811: invokestatic  #60
814: ldc           #63
816: invokestatic  #59
819: aload         41
821: invokestatic  #56
824: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test246
Start line: 12298
End line: 12389
Method source code: 
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        double[] doubleArray82 = levenbergMarquardtOptimizer0.point;
        java.lang.Object[] objArray84 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException(doubleArray82, "org.apache.commons.math.ConvergenceException: convergence failed", objArray84);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #440
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #98
551: istore        47
553: aload_1
554: getfield      #52
557: astore        48
559: aconst_null
560: astore        49
562: new           #23
565: dup
566: aload         48
568: ldc           #191
570: aload         49
572: invokespecial #144
575: astore        50
577: aload_3
578: invokestatic  #56
581: aload_3
582: invokestatic  #57
585: ldc           #58
587: invokestatic  #59
590: aload_3
591: invokestatic  #60
594: ldc           #58
596: invokestatic  #59
599: aload         7
601: invokestatic  #56
604: aload         7
606: invokestatic  #57
609: ldc           #58
611: invokestatic  #59
614: aload         7
616: invokestatic  #60
619: ldc           #58
621: invokestatic  #59
624: aload         10
626: invokestatic  #56
629: aload         10
631: invokestatic  #61
634: ldc           #62
636: invokestatic  #59
639: aload         12
641: invokestatic  #56
644: aload         12
646: invokestatic  #57
649: ldc           #63
651: invokestatic  #59
654: aload         12
656: invokestatic  #60
659: ldc           #63
661: invokestatic  #59
664: aload         13
666: invokestatic  #56
669: new           #64
672: dup
673: invokespecial #65
676: ldc           #66
678: invokevirtual #67
681: aload         17
683: invokevirtual #68
686: ldc           #69
688: invokevirtual #67
691: getstatic     #70
694: invokevirtual #68
697: ldc           #66
699: invokevirtual #67
702: invokevirtual #71
705: aload         17
707: getstatic     #70
710: invokevirtual #72
713: invokestatic  #73
716: aload         19
718: invokestatic  #56
721: aload         19
723: invokestatic  #57
726: ldc           #63
728: invokestatic  #59
731: aload         19
733: invokestatic  #60
736: ldc           #63
738: invokestatic  #59
741: aload         20
743: invokestatic  #56
746: new           #64
749: dup
750: invokespecial #65
753: ldc           #66
755: invokevirtual #67
758: aload         25
760: invokevirtual #68
763: ldc           #69
765: invokevirtual #67
768: getstatic     #70
771: invokevirtual #68
774: ldc           #66
776: invokevirtual #67
779: invokevirtual #71
782: aload         25
784: getstatic     #70
787: invokevirtual #72
790: invokestatic  #73
793: aload         27
795: invokestatic  #56
798: aload         27
800: invokestatic  #57
803: ldc           #63
805: invokestatic  #59
808: aload         27
810: invokestatic  #60
813: ldc           #63
815: invokestatic  #59
818: aload         28
820: invokestatic  #56
823: aload         30
825: invokestatic  #56
828: aload         31
830: invokestatic  #56
833: aload         33
835: invokestatic  #56
838: aload         37
840: invokestatic  #56
843: aload         37
845: invokestatic  #57
848: ldc           #74
850: invokestatic  #59
853: aload         37
855: invokestatic  #60
858: ldc           #74
860: invokestatic  #59
863: aload         39
865: invokestatic  #56
868: aload         39
870: invokestatic  #57
873: ldc           #74
875: invokestatic  #59
878: aload         39
880: invokestatic  #60
883: ldc           #74
885: invokestatic  #59
888: aload         40
890: invokestatic  #56
893: new           #64
896: dup
897: invokespecial #65
900: ldc           #66
902: invokevirtual #67
905: dload         44
907: invokevirtual #79
910: ldc           #69
912: invokevirtual #67
915: dconst_0
916: invokevirtual #79
919: ldc           #66
921: invokevirtual #67
924: invokevirtual #71
927: dload         44
929: dconst_0
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #73
942: aload         46
944: invokestatic  #106
947: new           #64
950: dup
951: invokespecial #65
954: ldc           #66
956: invokevirtual #67
959: iload         47
961: invokevirtual #102
964: ldc           #69
966: invokevirtual #67
969: sipush        1000
972: invokevirtual #102
975: ldc           #66
977: invokevirtual #67
980: invokevirtual #71
983: iload         47
985: sipush        1000
988: if_icmpne     995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #73
999: aload         48
1001: invokestatic  #56
1004: aload         48
1006: invokestatic  #61
1009: ldc           #62
1011: invokestatic  #59
1014: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test247
Start line: 12392
End line: 12476
Method source code: 
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxIterations((int) ' ');
        levenbergMarquardtOptimizer0.rows = ' ';
        levenbergMarquardtOptimizer0.setMaxEvaluations(97);
        int int83 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 97 + "'", int83 == 97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #441
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: bipush        32
533: invokevirtual #182
536: aload_1
537: bipush        32
539: putfield      #93
542: aload_1
543: bipush        97
545: invokevirtual #76
548: aload_1
549: invokevirtual #110
552: istore        44
554: aload_3
555: invokestatic  #56
558: aload_3
559: invokestatic  #57
562: ldc           #58
564: invokestatic  #59
567: aload_3
568: invokestatic  #60
571: ldc           #58
573: invokestatic  #59
576: aload         7
578: invokestatic  #56
581: aload         7
583: invokestatic  #57
586: ldc           #58
588: invokestatic  #59
591: aload         7
593: invokestatic  #60
596: ldc           #58
598: invokestatic  #59
601: aload         10
603: invokestatic  #56
606: aload         10
608: invokestatic  #61
611: ldc           #62
613: invokestatic  #59
616: aload         12
618: invokestatic  #56
621: aload         12
623: invokestatic  #57
626: ldc           #63
628: invokestatic  #59
631: aload         12
633: invokestatic  #60
636: ldc           #63
638: invokestatic  #59
641: aload         13
643: invokestatic  #56
646: new           #64
649: dup
650: invokespecial #65
653: ldc           #66
655: invokevirtual #67
658: aload         17
660: invokevirtual #68
663: ldc           #69
665: invokevirtual #67
668: getstatic     #70
671: invokevirtual #68
674: ldc           #66
676: invokevirtual #67
679: invokevirtual #71
682: aload         17
684: getstatic     #70
687: invokevirtual #72
690: invokestatic  #73
693: aload         19
695: invokestatic  #56
698: aload         19
700: invokestatic  #57
703: ldc           #63
705: invokestatic  #59
708: aload         19
710: invokestatic  #60
713: ldc           #63
715: invokestatic  #59
718: aload         20
720: invokestatic  #56
723: new           #64
726: dup
727: invokespecial #65
730: ldc           #66
732: invokevirtual #67
735: aload         25
737: invokevirtual #68
740: ldc           #69
742: invokevirtual #67
745: getstatic     #70
748: invokevirtual #68
751: ldc           #66
753: invokevirtual #67
756: invokevirtual #71
759: aload         25
761: getstatic     #70
764: invokevirtual #72
767: invokestatic  #73
770: aload         27
772: invokestatic  #56
775: aload         27
777: invokestatic  #57
780: ldc           #63
782: invokestatic  #59
785: aload         27
787: invokestatic  #60
790: ldc           #63
792: invokestatic  #59
795: aload         28
797: invokestatic  #56
800: aload         30
802: invokestatic  #56
805: aload         31
807: invokestatic  #56
810: aload         33
812: invokestatic  #56
815: aload         37
817: invokestatic  #56
820: aload         37
822: invokestatic  #57
825: ldc           #74
827: invokestatic  #59
830: aload         37
832: invokestatic  #60
835: ldc           #74
837: invokestatic  #59
840: aload         39
842: invokestatic  #56
845: aload         39
847: invokestatic  #57
850: ldc           #74
852: invokestatic  #59
855: aload         39
857: invokestatic  #60
860: ldc           #74
862: invokestatic  #59
865: aload         40
867: invokestatic  #56
870: new           #64
873: dup
874: invokespecial #65
877: ldc           #66
879: invokevirtual #67
882: iload         44
884: invokevirtual #102
887: ldc           #69
889: invokevirtual #67
892: bipush        97
894: invokevirtual #102
897: ldc           #66
899: invokevirtual #67
902: invokevirtual #71
905: iload         44
907: bipush        97
909: if_icmpne     916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #73
920: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test248
Start line: 12479
End line: 12524
Method source code: 
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        levenbergMarquardtOptimizer0.setMaxIterations((int) '4');
        int int41 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #442
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: bipush        52
277: invokevirtual #182
280: aload_1
281: invokevirtual #98
284: istore        24
286: aload         7
288: invokestatic  #56
291: aload         7
293: invokestatic  #57
296: ldc           #74
298: invokestatic  #59
301: aload         7
303: invokestatic  #60
306: ldc           #74
308: invokestatic  #59
311: aload         10
313: invokestatic  #56
316: aload         10
318: invokestatic  #61
321: ldc           #90
323: invokestatic  #59
326: aload         11
328: invokestatic  #56
331: aload         11
333: invokestatic  #61
336: ldc           #91
338: invokestatic  #59
341: aload         17
343: invokestatic  #56
346: aload         17
348: invokestatic  #57
351: ldc           #74
353: invokestatic  #59
356: aload         17
358: invokestatic  #60
361: ldc           #74
363: invokestatic  #59
366: aload         20
368: invokestatic  #56
371: aload         20
373: invokestatic  #61
376: ldc           #90
378: invokestatic  #59
381: aload         21
383: invokestatic  #56
386: aload         21
388: invokestatic  #61
391: ldc           #91
393: invokestatic  #59
396: new           #64
399: dup
400: invokespecial #65
403: ldc           #66
405: invokevirtual #67
408: iload         23
410: invokevirtual #119
413: ldc           #69
415: invokevirtual #67
418: iconst_1
419: invokevirtual #119
422: ldc           #66
424: invokevirtual #67
427: invokevirtual #71
430: iload         23
432: iconst_1
433: if_icmpne     440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #73
444: new           #64
447: dup
448: invokespecial #65
451: ldc           #66
453: invokevirtual #67
456: iload         24
458: invokevirtual #102
461: ldc           #69
463: invokevirtual #67
466: bipush        52
468: invokevirtual #102
471: ldc           #66
473: invokevirtual #67
476: invokevirtual #71
479: iload         24
481: bipush        52
483: if_icmpne     490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #73
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test249
Start line: 12527
End line: 12535
Method source code: 
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1);
        double double5 = levenbergMarquardtOptimizer0.cost;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #443
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_m1
40: invokevirtual #76
43: aload_1
44: getfield      #97
47: dstore_2
48: new           #64
51: dup
52: invokespecial #65
55: ldc           #66
57: invokevirtual #67
60: dload_2
61: invokevirtual #79
64: ldc           #69
66: invokevirtual #67
69: dconst_0
70: invokevirtual #79
73: ldc           #66
75: invokevirtual #67
78: invokevirtual #71
81: dload_2
82: dconst_0
83: dcmpl
84: ifne          91
87: iconst_1
88: goto          92
91: iconst_0
92: invokestatic  #73
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test250
Start line: 12538
End line: 12617
Method source code: 
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0);
        int int3 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer4.rows = 0;
        levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d));
        int int11 = levenbergMarquardtOptimizer4.getIterations();
        int int12 = levenbergMarquardtOptimizer4.getIterations();
        double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer14.rows = 0;
        levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer14.cost = (short) 100;
        int int23 = levenbergMarquardtOptimizer14.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24);
        levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer29.rows = 0;
        levenbergMarquardtOptimizer29.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray34 = levenbergMarquardtOptimizer29.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException36 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39);
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException36, 0.0d, "hi!", objArray44);
        double[] doubleArray47 = functionEvaluationException46.getArgument();
        double[] doubleArray48 = functionEvaluationException46.getArgument();
        levenbergMarquardtOptimizer29.objective = doubleArray48;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59);
        double[] doubleArray62 = functionEvaluationException61.getArgument();
        double[] doubleArray64 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray64);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray62, false);
        double[] doubleArray68 = vectorialPointValuePair67.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = simpleVectorialValueChecker24.converged((int) 'a', vectorialPointValuePair67, vectorialPointValuePair69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #444
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: invokevirtual #76
38: aload_1
39: invokevirtual #98
42: istore_2
43: new           #8
46: dup
47: invokespecial #9
50: astore_3
51: aload_3
52: iconst_0
53: putfield      #93
56: aload_3
57: iconst_1
58: invokevirtual #76
61: aload_3
62: ldc2_w        #31
65: invokevirtual #94
68: aload_3
69: invokevirtual #126
72: istore        4
74: aload_3
75: invokevirtual #126
78: istore        5
80: aload_3
81: getfield      #122
84: astore        6
86: new           #8
89: dup
90: invokespecial #9
93: astore        7
95: aload         7
97: iconst_0
98: putfield      #93
101: aload         7
103: iconst_1
104: invokevirtual #76
107: aload         7
109: ldc2_w        #31
112: invokevirtual #94
115: aload         7
117: ldc2_w        #95
120: putfield      #97
123: aload         7
125: invokevirtual #98
128: istore        8
130: new           #99
133: dup
134: invokespecial #100
137: astore        9
139: aload         7
141: aload         9
143: invokevirtual #101
146: aload_3
147: aload         9
149: invokevirtual #101
152: aload_1
153: aload         9
155: putfield      #140
158: new           #8
161: dup
162: invokespecial #9
165: astore        10
167: aload         10
169: iconst_0
170: putfield      #93
173: aload         10
175: iconst_1
176: invokevirtual #76
179: aload         10
181: getfield      #113
184: astore        11
186: new           #81
189: dup
190: iconst_m1
191: invokespecial #82
194: astore        12
196: aconst_null
197: astore        13
199: new           #27
202: dup
203: aload         13
205: invokespecial #39
208: astore        14
210: aconst_null
211: astore        15
213: iconst_2
214: anewarray     #5
217: dup
218: iconst_0
219: ldc           #28
221: aastore
222: dup
223: iconst_1
224: iconst_1
225: invokestatic  #17
228: aastore
229: astore        16
231: new           #27
234: dup
235: aload         13
237: aload         15
239: aload         16
241: invokespecial #47
244: astore        17
246: new           #23
249: dup
250: aload         12
252: dconst_0
253: ldc           #28
255: aload         16
257: invokespecial #83
260: astore        18
262: aload         18
264: invokevirtual #84
267: astore        19
269: aload         18
271: invokevirtual #84
274: astore        20
276: aload         10
278: aload         20
280: putfield      #114
283: new           #81
286: dup
287: iconst_m1
288: invokespecial #82
291: astore        21
293: aconst_null
294: astore        22
296: new           #27
299: dup
300: aload         22
302: invokespecial #39
305: astore        23
307: aconst_null
308: astore        24
310: iconst_2
311: anewarray     #5
314: dup
315: iconst_0
316: ldc           #28
318: aastore
319: dup
320: iconst_1
321: iconst_1
322: invokestatic  #17
325: aastore
326: astore        25
328: new           #27
331: dup
332: aload         22
334: aload         24
336: aload         25
338: invokespecial #47
341: astore        26
343: new           #23
346: dup
347: aload         21
349: dconst_0
350: ldc           #28
352: aload         25
354: invokespecial #83
357: astore        27
359: aload         27
361: invokevirtual #84
364: astore        28
366: iconst_1
367: newarray       double
369: dup
370: iconst_0
371: ldc2_w        #85
374: dastore
375: astore        29
377: new           #87
380: dup
381: aload         28
383: aload         29
385: invokespecial #88
388: astore        30
390: new           #87
393: dup
394: aload         20
396: aload         28
398: iconst_0
399: invokespecial #117
402: astore        31
404: aload         31
406: invokevirtual #159
409: astore        32
411: aconst_null
412: astore        33
414: aload         9
416: bipush        97
418: aload         31
420: aload         33
422: invokevirtual #118
425: istore        34
427: ldc           #54
429: invokestatic  #13
432: goto          437
435: astore        34
437: new           #64
440: dup
441: invokespecial #65
444: ldc           #66
446: invokevirtual #67
449: iload_2
450: invokevirtual #102
453: ldc           #69
455: invokevirtual #67
458: sipush        1000
461: invokevirtual #102
464: ldc           #66
466: invokevirtual #67
469: invokevirtual #71
472: iload_2
473: sipush        1000
476: if_icmpne     483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #73
487: new           #64
490: dup
491: invokespecial #65
494: ldc           #66
496: invokevirtual #67
499: iload         4
501: invokevirtual #102
504: ldc           #69
506: invokevirtual #67
509: iconst_0
510: invokevirtual #102
513: ldc           #66
515: invokevirtual #67
518: invokevirtual #71
521: iload         4
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #73
534: new           #64
537: dup
538: invokespecial #65
541: ldc           #66
543: invokevirtual #67
546: iload         5
548: invokevirtual #102
551: ldc           #69
553: invokevirtual #67
556: iconst_0
557: invokevirtual #102
560: ldc           #66
562: invokevirtual #67
565: invokevirtual #71
568: iload         5
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #73
581: aload         6
583: invokestatic  #106
586: new           #64
589: dup
590: invokespecial #65
593: ldc           #66
595: invokevirtual #67
598: iload         8
600: invokevirtual #102
603: ldc           #69
605: invokevirtual #67
608: sipush        1000
611: invokevirtual #102
614: ldc           #66
616: invokevirtual #67
619: invokevirtual #71
622: iload         8
624: sipush        1000
627: if_icmpne     634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #73
638: aload         11
640: invokestatic  #106
643: aload         16
645: invokestatic  #56
648: aload         16
650: invokestatic  #57
653: ldc           #74
655: invokestatic  #59
658: aload         16
660: invokestatic  #60
663: ldc           #74
665: invokestatic  #59
668: aload         19
670: invokestatic  #56
673: aload         19
675: invokestatic  #61
678: ldc           #90
680: invokestatic  #59
683: aload         20
685: invokestatic  #56
688: aload         20
690: invokestatic  #61
693: ldc           #90
695: invokestatic  #59
698: aload         25
700: invokestatic  #56
703: aload         25
705: invokestatic  #57
708: ldc           #74
710: invokestatic  #59
713: aload         25
715: invokestatic  #60
718: ldc           #74
720: invokestatic  #59
723: aload         28
725: invokestatic  #56
728: aload         28
730: invokestatic  #61
733: ldc           #90
735: invokestatic  #59
738: aload         29
740: invokestatic  #56
743: aload         29
745: invokestatic  #61
748: ldc           #91
750: invokestatic  #59
753: aload         32
755: invokestatic  #56
758: aload         32
760: invokestatic  #61
763: ldc           #90
765: invokestatic  #59
768: return
Exception table:
from    to  target type
414   432   435   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test251
Start line: 12620
End line: 12710
Method source code: 
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        int int77 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int78 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray79 = levenbergMarquardtOptimizer0.getCovariances();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2147483647 + "'", int77 == 2147483647);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #445
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: invokevirtual #110
534: istore        44
536: aload_1
537: invokevirtual #133
540: istore        45
542: aload_1
543: invokevirtual #53
546: astore        46
548: ldc           #54
550: invokestatic  #13
553: goto          558
556: astore        46
558: aload_3
559: invokestatic  #56
562: aload_3
563: invokestatic  #57
566: ldc           #58
568: invokestatic  #59
571: aload_3
572: invokestatic  #60
575: ldc           #58
577: invokestatic  #59
580: aload         7
582: invokestatic  #56
585: aload         7
587: invokestatic  #57
590: ldc           #58
592: invokestatic  #59
595: aload         7
597: invokestatic  #60
600: ldc           #58
602: invokestatic  #59
605: aload         10
607: invokestatic  #56
610: aload         10
612: invokestatic  #61
615: ldc           #62
617: invokestatic  #59
620: aload         12
622: invokestatic  #56
625: aload         12
627: invokestatic  #57
630: ldc           #63
632: invokestatic  #59
635: aload         12
637: invokestatic  #60
640: ldc           #63
642: invokestatic  #59
645: aload         13
647: invokestatic  #56
650: new           #64
653: dup
654: invokespecial #65
657: ldc           #66
659: invokevirtual #67
662: aload         17
664: invokevirtual #68
667: ldc           #69
669: invokevirtual #67
672: getstatic     #70
675: invokevirtual #68
678: ldc           #66
680: invokevirtual #67
683: invokevirtual #71
686: aload         17
688: getstatic     #70
691: invokevirtual #72
694: invokestatic  #73
697: aload         19
699: invokestatic  #56
702: aload         19
704: invokestatic  #57
707: ldc           #63
709: invokestatic  #59
712: aload         19
714: invokestatic  #60
717: ldc           #63
719: invokestatic  #59
722: aload         20
724: invokestatic  #56
727: new           #64
730: dup
731: invokespecial #65
734: ldc           #66
736: invokevirtual #67
739: aload         25
741: invokevirtual #68
744: ldc           #69
746: invokevirtual #67
749: getstatic     #70
752: invokevirtual #68
755: ldc           #66
757: invokevirtual #67
760: invokevirtual #71
763: aload         25
765: getstatic     #70
768: invokevirtual #72
771: invokestatic  #73
774: aload         27
776: invokestatic  #56
779: aload         27
781: invokestatic  #57
784: ldc           #63
786: invokestatic  #59
789: aload         27
791: invokestatic  #60
794: ldc           #63
796: invokestatic  #59
799: aload         28
801: invokestatic  #56
804: aload         30
806: invokestatic  #56
809: aload         31
811: invokestatic  #56
814: aload         33
816: invokestatic  #56
819: aload         37
821: invokestatic  #56
824: aload         37
826: invokestatic  #57
829: ldc           #74
831: invokestatic  #59
834: aload         37
836: invokestatic  #60
839: ldc           #74
841: invokestatic  #59
844: aload         39
846: invokestatic  #56
849: aload         39
851: invokestatic  #57
854: ldc           #74
856: invokestatic  #59
859: aload         39
861: invokestatic  #60
864: ldc           #74
866: invokestatic  #59
869: aload         40
871: invokestatic  #56
874: new           #64
877: dup
878: invokespecial #65
881: ldc           #66
883: invokevirtual #67
886: iload         44
888: invokevirtual #102
891: ldc           #69
893: invokevirtual #67
896: ldc           #111
898: invokevirtual #102
901: ldc           #66
903: invokevirtual #67
906: invokevirtual #71
909: iload         44
911: ldc           #111
913: if_icmpne     920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #73
924: new           #64
927: dup
928: invokespecial #65
931: ldc           #66
933: invokevirtual #67
936: iload         45
938: invokevirtual #102
941: ldc           #69
943: invokevirtual #67
946: iconst_0
947: invokevirtual #102
950: ldc           #66
952: invokevirtual #67
955: invokevirtual #71
958: iload         45
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #73
971: return
Exception table:
from    to  target type
542   553   556   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test252
Start line: 12713
End line: 12800
Method source code: 
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = levenbergMarquardtOptimizer0.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #446
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #78
539: astore        44
541: ldc           #54
543: invokestatic  #13
546: goto          551
549: astore        44
551: aload_3
552: invokestatic  #56
555: aload_3
556: invokestatic  #57
559: ldc           #58
561: invokestatic  #59
564: aload_3
565: invokestatic  #60
568: ldc           #58
570: invokestatic  #59
573: aload         7
575: invokestatic  #56
578: aload         7
580: invokestatic  #57
583: ldc           #58
585: invokestatic  #59
588: aload         7
590: invokestatic  #60
593: ldc           #58
595: invokestatic  #59
598: aload         10
600: invokestatic  #56
603: aload         10
605: invokestatic  #61
608: ldc           #62
610: invokestatic  #59
613: aload         12
615: invokestatic  #56
618: aload         12
620: invokestatic  #57
623: ldc           #63
625: invokestatic  #59
628: aload         12
630: invokestatic  #60
633: ldc           #63
635: invokestatic  #59
638: aload         13
640: invokestatic  #56
643: new           #64
646: dup
647: invokespecial #65
650: ldc           #66
652: invokevirtual #67
655: aload         17
657: invokevirtual #68
660: ldc           #69
662: invokevirtual #67
665: getstatic     #70
668: invokevirtual #68
671: ldc           #66
673: invokevirtual #67
676: invokevirtual #71
679: aload         17
681: getstatic     #70
684: invokevirtual #72
687: invokestatic  #73
690: aload         19
692: invokestatic  #56
695: aload         19
697: invokestatic  #57
700: ldc           #63
702: invokestatic  #59
705: aload         19
707: invokestatic  #60
710: ldc           #63
712: invokestatic  #59
715: aload         20
717: invokestatic  #56
720: new           #64
723: dup
724: invokespecial #65
727: ldc           #66
729: invokevirtual #67
732: aload         25
734: invokevirtual #68
737: ldc           #69
739: invokevirtual #67
742: getstatic     #70
745: invokevirtual #68
748: ldc           #66
750: invokevirtual #67
753: invokevirtual #71
756: aload         25
758: getstatic     #70
761: invokevirtual #72
764: invokestatic  #73
767: aload         27
769: invokestatic  #56
772: aload         27
774: invokestatic  #57
777: ldc           #63
779: invokestatic  #59
782: aload         27
784: invokestatic  #60
787: ldc           #63
789: invokestatic  #59
792: aload         28
794: invokestatic  #56
797: aload         30
799: invokestatic  #56
802: aload         31
804: invokestatic  #56
807: aload         33
809: invokestatic  #56
812: aload         37
814: invokestatic  #56
817: aload         37
819: invokestatic  #57
822: ldc           #74
824: invokestatic  #59
827: aload         37
829: invokestatic  #60
832: ldc           #74
834: invokestatic  #59
837: aload         39
839: invokestatic  #56
842: aload         39
844: invokestatic  #57
847: ldc           #74
849: invokestatic  #59
852: aload         39
854: invokestatic  #60
857: ldc           #74
859: invokestatic  #59
862: aload         40
864: invokestatic  #56
867: return
Exception table:
from    to  target type
535   546   549   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test253
Start line: 12803
End line: 12839
Method source code: 
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer2.setMaxEvaluations((int) (byte) 0);
        int int5 = levenbergMarquardtOptimizer2.getMaxIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer6.rows = 0;
        levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer6.setInitialStepBoundFactor((-1.0d));
        int int13 = levenbergMarquardtOptimizer6.getIterations();
        int int14 = levenbergMarquardtOptimizer6.getIterations();
        double[] doubleArray15 = levenbergMarquardtOptimizer6.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer16 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer16.rows = 0;
        levenbergMarquardtOptimizer16.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer16.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer16.cost = (short) 100;
        int int25 = levenbergMarquardtOptimizer16.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer16.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26);
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26);
        levenbergMarquardtOptimizer2.checker = simpleVectorialValueChecker26;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker30 = levenbergMarquardtOptimizer2.getConvergenceChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker30);
        double double32 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1000 + "'", int25 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: new           #8
41: dup
42: invokespecial #9
45: astore        4
47: aload         4
49: iconst_0
50: invokevirtual #76
53: aload         4
55: invokevirtual #98
58: istore        5
60: new           #8
63: dup
64: invokespecial #9
67: astore        6
69: aload         6
71: iconst_0
72: putfield      #93
75: aload         6
77: iconst_1
78: invokevirtual #76
81: aload         6
83: ldc2_w        #31
86: invokevirtual #94
89: aload         6
91: invokevirtual #126
94: istore        7
96: aload         6
98: invokevirtual #126
101: istore        8
103: aload         6
105: getfield      #122
108: astore        9
110: new           #8
113: dup
114: invokespecial #9
117: astore        10
119: aload         10
121: iconst_0
122: putfield      #93
125: aload         10
127: iconst_1
128: invokevirtual #76
131: aload         10
133: ldc2_w        #31
136: invokevirtual #94
139: aload         10
141: ldc2_w        #95
144: putfield      #97
147: aload         10
149: invokevirtual #98
152: istore        11
154: new           #99
157: dup
158: invokespecial #100
161: astore        12
163: aload         10
165: aload         12
167: invokevirtual #101
170: aload         6
172: aload         12
174: invokevirtual #101
177: aload         4
179: aload         12
181: putfield      #140
184: aload         4
186: invokevirtual #104
189: astore        13
191: aload_1
192: aload         13
194: invokevirtual #101
197: aload_1
198: invokevirtual #77
201: dstore        14
203: new           #64
206: dup
207: invokespecial #65
210: ldc           #66
212: invokevirtual #67
215: dload_2
216: invokevirtual #79
219: ldc           #69
221: invokevirtual #67
224: dconst_0
225: invokevirtual #79
228: ldc           #66
230: invokevirtual #67
233: invokevirtual #71
236: dload_2
237: dconst_0
238: dcmpl
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #73
250: new           #64
253: dup
254: invokespecial #65
257: ldc           #66
259: invokevirtual #67
262: iload         5
264: invokevirtual #102
267: ldc           #69
269: invokevirtual #67
272: sipush        1000
275: invokevirtual #102
278: ldc           #66
280: invokevirtual #67
283: invokevirtual #71
286: iload         5
288: sipush        1000
291: if_icmpne     298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #73
302: new           #64
305: dup
306: invokespecial #65
309: ldc           #66
311: invokevirtual #67
314: iload         7
316: invokevirtual #102
319: ldc           #69
321: invokevirtual #67
324: iconst_0
325: invokevirtual #102
328: ldc           #66
330: invokevirtual #67
333: invokevirtual #71
336: iload         7
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #73
349: new           #64
352: dup
353: invokespecial #65
356: ldc           #66
358: invokevirtual #67
361: iload         8
363: invokevirtual #102
366: ldc           #69
368: invokevirtual #67
371: iconst_0
372: invokevirtual #102
375: ldc           #66
377: invokevirtual #67
380: invokevirtual #71
383: iload         8
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #73
396: aload         9
398: invokestatic  #106
401: new           #64
404: dup
405: invokespecial #65
408: ldc           #66
410: invokevirtual #67
413: iload         11
415: invokevirtual #102
418: ldc           #69
420: invokevirtual #67
423: sipush        1000
426: invokevirtual #102
429: ldc           #66
431: invokevirtual #67
434: invokevirtual #71
437: iload         11
439: sipush        1000
442: if_icmpne     449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #73
453: aload         13
455: invokestatic  #56
458: new           #64
461: dup
462: invokespecial #65
465: ldc           #66
467: invokevirtual #67
470: dload         14
472: invokevirtual #79
475: ldc           #69
477: invokevirtual #67
480: dconst_0
481: invokevirtual #79
484: ldc           #66
486: invokevirtual #67
489: invokevirtual #71
492: dload         14
494: dconst_0
495: dcmpl
496: ifne          503
499: iconst_1
500: goto          504
503: iconst_0
504: invokestatic  #73
507: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test254
Start line: 12842
End line: 12870
Method source code: 
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.cols = (-1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d);
        levenbergMarquardtOptimizer0.cost = 100.0d;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: iconst_m1
144: putfield      #105
147: aload_1
148: dconst_0
149: invokevirtual #94
152: aload_1
153: ldc2_w        #95
156: putfield      #97
159: aload_2
160: invokestatic  #106
163: aload         7
165: invokestatic  #56
168: aload         7
170: invokestatic  #57
173: ldc           #74
175: invokestatic  #59
178: aload         7
180: invokestatic  #60
183: ldc           #74
185: invokestatic  #59
188: aload         10
190: invokestatic  #56
193: aload         10
195: invokestatic  #61
198: ldc           #90
200: invokestatic  #59
203: aload         11
205: invokestatic  #56
208: aload         11
210: invokestatic  #61
213: ldc           #90
215: invokestatic  #59
218: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test255
Start line: 12873
End line: 12890
Method source code: 
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        double double14 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setOrthoTolerance(Double.NaN);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #97
85: dstore        4
87: aload_1
88: iconst_0
89: putfield      #93
92: aload_1
93: ldc2_w        #450
96: invokevirtual #129
99: new           #64
102: dup
103: invokespecial #65
106: ldc           #66
108: invokevirtual #67
111: iload_2
112: invokevirtual #102
115: ldc           #69
117: invokevirtual #67
120: sipush        1000
123: invokevirtual #102
126: ldc           #66
128: invokevirtual #67
131: invokevirtual #71
134: iload_2
135: sipush        1000
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #73
149: new           #64
152: dup
153: invokespecial #65
156: ldc           #66
158: invokevirtual #67
161: dload         4
163: invokevirtual #79
166: ldc           #69
168: invokevirtual #67
171: ldc2_w        #95
174: invokevirtual #79
177: ldc           #66
179: invokevirtual #67
182: invokevirtual #71
185: dload         4
187: ldc2_w        #95
190: dcmpl
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #73
202: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test256
Start line: 12893
End line: 12931
Method source code: 
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights;
        int int19 = levenbergMarquardtOptimizer0.getEvaluations();
        int int20 = levenbergMarquardtOptimizer0.cols;
        int int21 = levenbergMarquardtOptimizer0.rows;
        int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int23 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int24 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: getfield      #113
145: astore        12
147: aload_1
148: invokevirtual #167
151: istore        13
153: aload_1
154: getfield      #105
157: istore        14
159: aload_1
160: getfield      #93
163: istore        15
165: aload_1
166: invokevirtual #133
169: istore        16
171: aload_1
172: invokevirtual #98
175: istore        17
177: aload_1
178: invokevirtual #110
181: istore        18
183: aload_1
184: getfield      #93
187: istore        19
189: aload         6
191: invokestatic  #56
194: aload         6
196: invokestatic  #57
199: ldc           #74
201: invokestatic  #59
204: aload         6
206: invokestatic  #60
209: ldc           #74
211: invokestatic  #59
214: aload         9
216: invokestatic  #56
219: aload         9
221: invokestatic  #61
224: ldc           #90
226: invokestatic  #59
229: aload         10
231: invokestatic  #56
234: aload         10
236: invokestatic  #61
239: ldc           #91
241: invokestatic  #59
244: aload         12
246: invokestatic  #106
249: new           #64
252: dup
253: invokespecial #65
256: ldc           #66
258: invokevirtual #67
261: iload         13
263: invokevirtual #102
266: ldc           #69
268: invokevirtual #67
271: iconst_0
272: invokevirtual #102
275: ldc           #66
277: invokevirtual #67
280: invokevirtual #71
283: iload         13
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #73
296: new           #64
299: dup
300: invokespecial #65
303: ldc           #66
305: invokevirtual #67
308: iload         14
310: invokevirtual #102
313: ldc           #69
315: invokevirtual #67
318: iconst_0
319: invokevirtual #102
322: ldc           #66
324: invokevirtual #67
327: invokevirtual #71
330: iload         14
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #73
343: new           #64
346: dup
347: invokespecial #65
350: ldc           #66
352: invokevirtual #67
355: iload         15
357: invokevirtual #102
360: ldc           #69
362: invokevirtual #67
365: iconst_0
366: invokevirtual #102
369: ldc           #66
371: invokevirtual #67
374: invokevirtual #71
377: iload         15
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #73
390: new           #64
393: dup
394: invokespecial #65
397: ldc           #66
399: invokevirtual #67
402: iload         16
404: invokevirtual #102
407: ldc           #69
409: invokevirtual #67
412: iconst_0
413: invokevirtual #102
416: ldc           #66
418: invokevirtual #67
421: invokevirtual #71
424: iload         16
426: ifne          433
429: iconst_1
430: goto          434
433: iconst_0
434: invokestatic  #73
437: new           #64
440: dup
441: invokespecial #65
444: ldc           #66
446: invokevirtual #67
449: iload         17
451: invokevirtual #102
454: ldc           #69
456: invokevirtual #67
459: sipush        1000
462: invokevirtual #102
465: ldc           #66
467: invokevirtual #67
470: invokevirtual #71
473: iload         17
475: sipush        1000
478: if_icmpne     485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #73
489: new           #64
492: dup
493: invokespecial #65
496: ldc           #66
498: invokevirtual #67
501: iload         18
503: invokevirtual #102
506: ldc           #69
508: invokevirtual #67
511: ldc           #111
513: invokevirtual #102
516: ldc           #66
518: invokevirtual #67
521: invokevirtual #71
524: iload         18
526: ldc           #111
528: if_icmpne     535
531: iconst_1
532: goto          536
535: iconst_0
536: invokestatic  #73
539: new           #64
542: dup
543: invokespecial #65
546: ldc           #66
548: invokevirtual #67
551: iload         19
553: invokevirtual #102
556: ldc           #69
558: invokevirtual #67
561: iconst_0
562: invokevirtual #102
565: ldc           #66
567: invokevirtual #67
570: invokevirtual #71
573: iload         19
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #73
586: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test257
Start line: 12934
End line: 12952
Method source code: 
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.checker;
        int int15 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        levenbergMarquardtOptimizer0.cols = 'a';
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #140
85: astore        4
87: aload_1
88: invokevirtual #133
91: istore        5
93: aload_1
94: bipush        97
96: putfield      #105
99: new           #64
102: dup
103: invokespecial #65
106: ldc           #66
108: invokevirtual #67
111: iload_2
112: invokevirtual #102
115: ldc           #69
117: invokevirtual #67
120: sipush        1000
123: invokevirtual #102
126: ldc           #66
128: invokevirtual #67
131: invokevirtual #71
134: iload_2
135: sipush        1000
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #73
149: aload         4
151: invokestatic  #56
154: new           #64
157: dup
158: invokespecial #65
161: ldc           #66
163: invokevirtual #67
166: iload         5
168: invokevirtual #102
171: ldc           #69
173: invokevirtual #67
176: iconst_0
177: invokevirtual #102
180: ldc           #66
182: invokevirtual #67
185: invokevirtual #71
188: iload         5
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #73
201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test258
Start line: 12955
End line: 13068
Method source code: 
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a');
        int int9 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction10 = null;
        double[] doubleArray11 = null;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21);
        double[] doubleArray24 = functionEvaluationException23.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException26 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException26, 0.0d, "hi!", objArray34);
        double[] doubleArray37 = functionEvaluationException36.getArgument();
        double[] doubleArray39 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray39);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray39, false);
        double[] doubleArray43 = vectorialPointValuePair42.getValueRef();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker46 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException49 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52);
        org.apache.commons.math.exception.util.Localizable localizable54 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable52, localizable54, objArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException49, 0.0d, "hi!", objArray57);
        double[] doubleArray60 = functionEvaluationException59.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65);
        org.apache.commons.math.exception.util.Localizable localizable67 = null;
        java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70);
        double[] doubleArray73 = functionEvaluationException72.getArgument();
        double[] doubleArray75 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray75, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83);
        org.apache.commons.math.exception.util.Localizable localizable85 = null;
        java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88);
        double[] doubleArray91 = functionEvaluationException90.getArgument();
        double[] doubleArray93 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair94 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray91, doubleArray93);
        boolean boolean95 = simpleVectorialValueChecker46.converged(0, vectorialPointValuePair78, vectorialPointValuePair94);
        double[] doubleArray96 = vectorialPointValuePair94.getValue();
        double[] doubleArray97 = vectorialPointValuePair94.getValueRef();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair98 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction10, doubleArray11, doubleArray43, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #454
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: aload_1
55: bipush        97
57: invokevirtual #76
60: aload_1
61: invokevirtual #110
64: istore        4
66: aconst_null
67: astore        5
69: aconst_null
70: astore        6
72: new           #81
75: dup
76: iconst_m1
77: invokespecial #82
80: astore        7
82: aconst_null
83: astore        8
85: new           #27
88: dup
89: aload         8
91: invokespecial #39
94: astore        9
96: aconst_null
97: astore        10
99: iconst_2
100: anewarray     #5
103: dup
104: iconst_0
105: ldc           #28
107: aastore
108: dup
109: iconst_1
110: iconst_1
111: invokestatic  #17
114: aastore
115: astore        11
117: new           #27
120: dup
121: aload         8
123: aload         10
125: aload         11
127: invokespecial #47
130: astore        12
132: new           #23
135: dup
136: aload         7
138: dconst_0
139: ldc           #28
141: aload         11
143: invokespecial #83
146: astore        13
148: aload         13
150: invokevirtual #84
153: astore        14
155: new           #81
158: dup
159: iconst_m1
160: invokespecial #82
163: astore        15
165: aconst_null
166: astore        16
168: new           #27
171: dup
172: aload         16
174: invokespecial #39
177: astore        17
179: aconst_null
180: astore        18
182: iconst_2
183: anewarray     #5
186: dup
187: iconst_0
188: ldc           #28
190: aastore
191: dup
192: iconst_1
193: iconst_1
194: invokestatic  #17
197: aastore
198: astore        19
200: new           #27
203: dup
204: aload         16
206: aload         18
208: aload         19
210: invokespecial #47
213: astore        20
215: new           #23
218: dup
219: aload         15
221: dconst_0
222: ldc           #28
224: aload         19
226: invokespecial #83
229: astore        21
231: aload         21
233: invokevirtual #84
236: astore        22
238: iconst_1
239: newarray       double
241: dup
242: iconst_0
243: ldc2_w        #85
246: dastore
247: astore        23
249: new           #87
252: dup
253: aload         22
255: aload         23
257: invokespecial #88
260: astore        24
262: new           #87
265: dup
266: aload         14
268: aload         23
270: iconst_0
271: invokespecial #117
274: astore        25
276: aload         25
278: invokevirtual #210
281: astore        26
283: new           #99
286: dup
287: dconst_0
288: ldc2_w        #95
291: invokespecial #116
294: astore        27
296: new           #81
299: dup
300: iconst_m1
301: invokespecial #82
304: astore        28
306: aconst_null
307: astore        29
309: new           #27
312: dup
313: aload         29
315: invokespecial #39
318: astore        30
320: aconst_null
321: astore        31
323: iconst_2
324: anewarray     #5
327: dup
328: iconst_0
329: ldc           #28
331: aastore
332: dup
333: iconst_1
334: iconst_1
335: invokestatic  #17
338: aastore
339: astore        32
341: new           #27
344: dup
345: aload         29
347: aload         31
349: aload         32
351: invokespecial #47
354: astore        33
356: new           #23
359: dup
360: aload         28
362: dconst_0
363: ldc           #28
365: aload         32
367: invokespecial #83
370: astore        34
372: aload         34
374: invokevirtual #84
377: astore        35
379: new           #81
382: dup
383: iconst_m1
384: invokespecial #82
387: astore        36
389: aconst_null
390: astore        37
392: new           #27
395: dup
396: aload         37
398: invokespecial #39
401: astore        38
403: aconst_null
404: astore        39
406: iconst_2
407: anewarray     #5
410: dup
411: iconst_0
412: ldc           #28
414: aastore
415: dup
416: iconst_1
417: iconst_1
418: invokestatic  #17
421: aastore
422: astore        40
424: new           #27
427: dup
428: aload         37
430: aload         39
432: aload         40
434: invokespecial #47
437: astore        41
439: new           #23
442: dup
443: aload         36
445: dconst_0
446: ldc           #28
448: aload         40
450: invokespecial #83
453: astore        42
455: aload         42
457: invokevirtual #84
460: astore        43
462: iconst_1
463: newarray       double
465: dup
466: iconst_0
467: ldc2_w        #85
470: dastore
471: astore        44
473: new           #87
476: dup
477: aload         43
479: aload         44
481: invokespecial #88
484: astore        45
486: new           #87
489: dup
490: aload         35
492: aload         44
494: iconst_0
495: invokespecial #117
498: astore        46
500: new           #81
503: dup
504: iconst_m1
505: invokespecial #82
508: astore        47
510: aconst_null
511: astore        48
513: new           #27
516: dup
517: aload         48
519: invokespecial #39
522: astore        49
524: aconst_null
525: astore        50
527: iconst_2
528: anewarray     #5
531: dup
532: iconst_0
533: ldc           #28
535: aastore
536: dup
537: iconst_1
538: iconst_1
539: invokestatic  #17
542: aastore
543: astore        51
545: new           #27
548: dup
549: aload         48
551: aload         50
553: aload         51
555: invokespecial #47
558: astore        52
560: new           #23
563: dup
564: aload         47
566: dconst_0
567: ldc           #28
569: aload         51
571: invokespecial #83
574: astore        53
576: aload         53
578: invokevirtual #84
581: astore        54
583: iconst_1
584: newarray       double
586: dup
587: iconst_0
588: ldc2_w        #85
591: dastore
592: astore        55
594: new           #87
597: dup
598: aload         54
600: aload         55
602: invokespecial #88
605: astore        56
607: aload         27
609: iconst_0
610: aload         46
612: aload         56
614: invokevirtual #118
617: istore        57
619: aload         56
621: invokevirtual #157
624: astore        58
626: aload         56
628: invokevirtual #210
631: astore        59
633: aload_1
634: aload         5
636: aload         6
638: aload         26
640: aload         59
642: invokevirtual #124
645: astore        60
647: ldc           #54
649: invokestatic  #13
652: goto          657
655: astore        60
657: aload_2
658: invokestatic  #106
661: aload_3
662: invokestatic  #106
665: new           #64
668: dup
669: invokespecial #65
672: ldc           #66
674: invokevirtual #67
677: iload         4
679: invokevirtual #102
682: ldc           #69
684: invokevirtual #67
687: bipush        97
689: invokevirtual #102
692: ldc           #66
694: invokevirtual #67
697: invokevirtual #71
700: iload         4
702: bipush        97
704: if_icmpne     711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #73
715: aload         11
717: invokestatic  #56
720: aload         11
722: invokestatic  #57
725: ldc           #74
727: invokestatic  #59
730: aload         11
732: invokestatic  #60
735: ldc           #74
737: invokestatic  #59
740: aload         14
742: invokestatic  #56
745: aload         14
747: invokestatic  #61
750: ldc           #90
752: invokestatic  #59
755: aload         19
757: invokestatic  #56
760: aload         19
762: invokestatic  #57
765: ldc           #74
767: invokestatic  #59
770: aload         19
772: invokestatic  #60
775: ldc           #74
777: invokestatic  #59
780: aload         22
782: invokestatic  #56
785: aload         22
787: invokestatic  #61
790: ldc           #90
792: invokestatic  #59
795: aload         23
797: invokestatic  #56
800: aload         23
802: invokestatic  #61
805: ldc           #91
807: invokestatic  #59
810: aload         26
812: invokestatic  #56
815: aload         26
817: invokestatic  #61
820: ldc           #91
822: invokestatic  #59
825: aload         32
827: invokestatic  #56
830: aload         32
832: invokestatic  #57
835: ldc           #74
837: invokestatic  #59
840: aload         32
842: invokestatic  #60
845: ldc           #74
847: invokestatic  #59
850: aload         35
852: invokestatic  #56
855: aload         35
857: invokestatic  #61
860: ldc           #90
862: invokestatic  #59
865: aload         40
867: invokestatic  #56
870: aload         40
872: invokestatic  #57
875: ldc           #74
877: invokestatic  #59
880: aload         40
882: invokestatic  #60
885: ldc           #74
887: invokestatic  #59
890: aload         43
892: invokestatic  #56
895: aload         43
897: invokestatic  #61
900: ldc           #90
902: invokestatic  #59
905: aload         44
907: invokestatic  #56
910: aload         44
912: invokestatic  #61
915: ldc           #91
917: invokestatic  #59
920: aload         51
922: invokestatic  #56
925: aload         51
927: invokestatic  #57
930: ldc           #74
932: invokestatic  #59
935: aload         51
937: invokestatic  #60
940: ldc           #74
942: invokestatic  #59
945: aload         54
947: invokestatic  #56
950: aload         54
952: invokestatic  #61
955: ldc           #90
957: invokestatic  #59
960: aload         55
962: invokestatic  #56
965: aload         55
967: invokestatic  #61
970: ldc           #91
972: invokestatic  #59
975: new           #64
978: dup
979: invokespecial #65
982: ldc           #66
984: invokevirtual #67
987: iload         57
989: invokevirtual #119
992: ldc           #69
994: invokevirtual #67
997: iconst_1
998: invokevirtual #119
1001: ldc           #66
1003: invokevirtual #67
1006: invokevirtual #71
1009: iload         57
1011: iconst_1
1012: if_icmpne     1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #73
1023: aload         58
1025: invokestatic  #56
1028: aload         58
1030: invokestatic  #61
1033: ldc           #91
1035: invokestatic  #59
1038: aload         59
1040: invokestatic  #56
1043: aload         59
1045: invokestatic  #61
1048: ldc           #91
1050: invokestatic  #59
1053: return
Exception table:
from    to  target type
633   652   655   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test259
Start line: 13071
End line: 13086
Method source code: 
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.cols = 100;
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f));
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: bipush        100
51: putfield      #105
54: aload_1
55: ldc2_w        #31
58: invokevirtual #94
61: aload_1
62: invokevirtual #10
65: aload_1
66: invokevirtual #110
69: istore_3
70: aload_1
71: invokevirtual #77
74: dstore        4
76: aload_2
77: invokestatic  #106
80: new           #64
83: dup
84: invokespecial #65
87: ldc           #66
89: invokevirtual #67
92: iload_3
93: invokevirtual #102
96: ldc           #69
98: invokevirtual #67
101: iconst_1
102: invokevirtual #102
105: ldc           #66
107: invokevirtual #67
110: invokevirtual #71
113: iload_3
114: iconst_1
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #73
126: new           #64
129: dup
130: invokespecial #65
133: ldc           #66
135: invokevirtual #67
138: dload         4
140: invokevirtual #79
143: ldc           #69
145: invokevirtual #67
148: dconst_0
149: invokevirtual #79
152: ldc           #66
154: invokevirtual #67
157: invokevirtual #71
160: dload         4
162: dconst_0
163: dcmpl
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #73
175: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test260
Start line: 13089
End line: 13101
Method source code: 
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        int int7 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1000 + "'", int7 == 1000);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #456
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: aload_1
55: invokevirtual #98
58: istore        4
60: aload_2
61: invokestatic  #106
64: aload_3
65: invokestatic  #106
68: new           #64
71: dup
72: invokespecial #65
75: ldc           #66
77: invokevirtual #67
80: iload         4
82: invokevirtual #102
85: ldc           #69
87: invokevirtual #67
90: sipush        1000
93: invokevirtual #102
96: ldc           #66
98: invokevirtual #67
101: invokevirtual #71
104: iload         4
106: sipush        1000
109: if_icmpne     116
112: iconst_1
113: goto          117
116: iconst_0
117: invokestatic  #73
120: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test261
Start line: 13104
End line: 13113
Method source code: 
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setMaxIterations(10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #457
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: bipush        10
53: invokevirtual #182
56: aload_1
57: iconst_1
58: invokevirtual #76
61: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test262
Start line: 13116
End line: 13223
Method source code: 
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14);
        double[] doubleArray17 = functionEvaluationException16.getArgument();
        double[] doubleArray19 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3);
        double double39 = levenbergMarquardtOptimizer0.cost;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer40.rows = 0;
        levenbergMarquardtOptimizer40.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray45 = levenbergMarquardtOptimizer40.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException47 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50);
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable50, localizable52, objArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException47, 0.0d, "hi!", objArray55);
        double[] doubleArray58 = functionEvaluationException57.getArgument();
        double[] doubleArray59 = functionEvaluationException57.getArgument();
        levenbergMarquardtOptimizer40.objective = doubleArray59;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65);
        org.apache.commons.math.exception.util.Localizable localizable67 = null;
        java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70);
        double[] doubleArray73 = functionEvaluationException72.getArgument();
        double[] doubleArray75 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray73, false);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83);
        org.apache.commons.math.exception.util.Localizable localizable85 = null;
        java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88);
        double[] doubleArray91 = functionEvaluationException90.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray91);
        double[] doubleArray93 = functionEvaluationException92.getArgument();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray93, true);
        double[] doubleArray96 = vectorialPointValuePair95.getPointRef();
        levenbergMarquardtOptimizer0.targetValues = doubleArray96;
        levenbergMarquardtOptimizer0.setMaxIterations(100);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #458
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #99
36: dup
37: dconst_0
38: ldc2_w        #95
41: invokespecial #116
44: astore_2
45: new           #81
48: dup
49: iconst_m1
50: invokespecial #82
53: astore_3
54: aconst_null
55: astore        4
57: new           #27
60: dup
61: aload         4
63: invokespecial #39
66: astore        5
68: aconst_null
69: astore        6
71: iconst_2
72: anewarray     #5
75: dup
76: iconst_0
77: ldc           #28
79: aastore
80: dup
81: iconst_1
82: iconst_1
83: invokestatic  #17
86: aastore
87: astore        7
89: new           #27
92: dup
93: aload         4
95: aload         6
97: aload         7
99: invokespecial #47
102: astore        8
104: new           #23
107: dup
108: aload_3
109: dconst_0
110: ldc           #28
112: aload         7
114: invokespecial #83
117: astore        9
119: aload         9
121: invokevirtual #84
124: astore        10
126: iconst_1
127: newarray       double
129: dup
130: iconst_0
131: ldc2_w        #85
134: dastore
135: astore        11
137: new           #87
140: dup
141: aload         10
143: aload         11
145: invokespecial #88
148: astore        12
150: new           #81
153: dup
154: iconst_m1
155: invokespecial #82
158: astore        13
160: aconst_null
161: astore        14
163: new           #27
166: dup
167: aload         14
169: invokespecial #39
172: astore        15
174: aconst_null
175: astore        16
177: iconst_2
178: anewarray     #5
181: dup
182: iconst_0
183: ldc           #28
185: aastore
186: dup
187: iconst_1
188: iconst_1
189: invokestatic  #17
192: aastore
193: astore        17
195: new           #27
198: dup
199: aload         14
201: aload         16
203: aload         17
205: invokespecial #47
208: astore        18
210: new           #23
213: dup
214: aload         13
216: dconst_0
217: ldc           #28
219: aload         17
221: invokespecial #83
224: astore        19
226: aload         19
228: invokevirtual #84
231: astore        20
233: iconst_1
234: newarray       double
236: dup
237: iconst_0
238: ldc2_w        #85
241: dastore
242: astore        21
244: new           #87
247: dup
248: aload         20
250: aload         21
252: invokespecial #88
255: astore        22
257: aload_2
258: bipush        100
260: aload         12
262: aload         22
264: invokevirtual #118
267: istore        23
269: aload_1
270: aload_2
271: invokevirtual #101
274: aload_1
275: getfield      #97
278: dstore        24
280: new           #8
283: dup
284: invokespecial #9
287: astore        26
289: aload         26
291: iconst_0
292: putfield      #93
295: aload         26
297: iconst_1
298: invokevirtual #76
301: aload         26
303: getfield      #113
306: astore        27
308: new           #81
311: dup
312: iconst_m1
313: invokespecial #82
316: astore        28
318: aconst_null
319: astore        29
321: new           #27
324: dup
325: aload         29
327: invokespecial #39
330: astore        30
332: aconst_null
333: astore        31
335: iconst_2
336: anewarray     #5
339: dup
340: iconst_0
341: ldc           #28
343: aastore
344: dup
345: iconst_1
346: iconst_1
347: invokestatic  #17
350: aastore
351: astore        32
353: new           #27
356: dup
357: aload         29
359: aload         31
361: aload         32
363: invokespecial #47
366: astore        33
368: new           #23
371: dup
372: aload         28
374: dconst_0
375: ldc           #28
377: aload         32
379: invokespecial #83
382: astore        34
384: aload         34
386: invokevirtual #84
389: astore        35
391: aload         34
393: invokevirtual #84
396: astore        36
398: aload         26
400: aload         36
402: putfield      #114
405: new           #81
408: dup
409: iconst_m1
410: invokespecial #82
413: astore        37
415: aconst_null
416: astore        38
418: new           #27
421: dup
422: aload         38
424: invokespecial #39
427: astore        39
429: aconst_null
430: astore        40
432: iconst_2
433: anewarray     #5
436: dup
437: iconst_0
438: ldc           #28
440: aastore
441: dup
442: iconst_1
443: iconst_1
444: invokestatic  #17
447: aastore
448: astore        41
450: new           #27
453: dup
454: aload         38
456: aload         40
458: aload         41
460: invokespecial #47
463: astore        42
465: new           #23
468: dup
469: aload         37
471: dconst_0
472: ldc           #28
474: aload         41
476: invokespecial #83
479: astore        43
481: aload         43
483: invokevirtual #84
486: astore        44
488: iconst_1
489: newarray       double
491: dup
492: iconst_0
493: ldc2_w        #85
496: dastore
497: astore        45
499: new           #87
502: dup
503: aload         44
505: aload         45
507: invokespecial #88
510: astore        46
512: new           #87
515: dup
516: aload         36
518: aload         44
520: iconst_0
521: invokespecial #117
524: astore        47
526: new           #81
529: dup
530: iconst_m1
531: invokespecial #82
534: astore        48
536: aconst_null
537: astore        49
539: new           #27
542: dup
543: aload         49
545: invokespecial #39
548: astore        50
550: aconst_null
551: astore        51
553: iconst_2
554: anewarray     #5
557: dup
558: iconst_0
559: ldc           #28
561: aastore
562: dup
563: iconst_1
564: iconst_1
565: invokestatic  #17
568: aastore
569: astore        52
571: new           #27
574: dup
575: aload         49
577: aload         51
579: aload         52
581: invokespecial #47
584: astore        53
586: new           #23
589: dup
590: aload         48
592: dconst_0
593: ldc           #28
595: aload         52
597: invokespecial #83
600: astore        54
602: aload         54
604: invokevirtual #84
607: astore        55
609: new           #23
612: dup
613: aload         55
615: invokespecial #89
618: astore        56
620: aload         56
622: invokevirtual #84
625: astore        57
627: new           #87
630: dup
631: aload         44
633: aload         57
635: iconst_1
636: invokespecial #117
639: astore        58
641: aload         58
643: invokevirtual #159
646: astore        59
648: aload_1
649: aload         59
651: putfield      #152
654: aload_1
655: bipush        100
657: invokevirtual #182
660: aload         7
662: invokestatic  #56
665: aload         7
667: invokestatic  #57
670: ldc           #74
672: invokestatic  #59
675: aload         7
677: invokestatic  #60
680: ldc           #74
682: invokestatic  #59
685: aload         10
687: invokestatic  #56
690: aload         10
692: invokestatic  #61
695: ldc           #90
697: invokestatic  #59
700: aload         11
702: invokestatic  #56
705: aload         11
707: invokestatic  #61
710: ldc           #91
712: invokestatic  #59
715: aload         17
717: invokestatic  #56
720: aload         17
722: invokestatic  #57
725: ldc           #74
727: invokestatic  #59
730: aload         17
732: invokestatic  #60
735: ldc           #74
737: invokestatic  #59
740: aload         20
742: invokestatic  #56
745: aload         20
747: invokestatic  #61
750: ldc           #90
752: invokestatic  #59
755: aload         21
757: invokestatic  #56
760: aload         21
762: invokestatic  #61
765: ldc           #91
767: invokestatic  #59
770: new           #64
773: dup
774: invokespecial #65
777: ldc           #66
779: invokevirtual #67
782: iload         23
784: invokevirtual #119
787: ldc           #69
789: invokevirtual #67
792: iconst_1
793: invokevirtual #119
796: ldc           #66
798: invokevirtual #67
801: invokevirtual #71
804: iload         23
806: iconst_1
807: if_icmpne     814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #73
818: new           #64
821: dup
822: invokespecial #65
825: ldc           #66
827: invokevirtual #67
830: dload         24
832: invokevirtual #79
835: ldc           #69
837: invokevirtual #67
840: dconst_0
841: invokevirtual #79
844: ldc           #66
846: invokevirtual #67
849: invokevirtual #71
852: dload         24
854: dconst_0
855: dcmpl
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #73
867: aload         27
869: invokestatic  #106
872: aload         32
874: invokestatic  #56
877: aload         32
879: invokestatic  #57
882: ldc           #74
884: invokestatic  #59
887: aload         32
889: invokestatic  #60
892: ldc           #74
894: invokestatic  #59
897: aload         35
899: invokestatic  #56
902: aload         35
904: invokestatic  #61
907: ldc           #90
909: invokestatic  #59
912: aload         36
914: invokestatic  #56
917: aload         36
919: invokestatic  #61
922: ldc           #90
924: invokestatic  #59
927: aload         41
929: invokestatic  #56
932: aload         41
934: invokestatic  #57
937: ldc           #74
939: invokestatic  #59
942: aload         41
944: invokestatic  #60
947: ldc           #74
949: invokestatic  #59
952: aload         44
954: invokestatic  #56
957: aload         44
959: invokestatic  #61
962: ldc           #90
964: invokestatic  #59
967: aload         45
969: invokestatic  #56
972: aload         45
974: invokestatic  #61
977: ldc           #91
979: invokestatic  #59
982: aload         52
984: invokestatic  #56
987: aload         52
989: invokestatic  #57
992: ldc           #74
994: invokestatic  #59
997: aload         52
999: invokestatic  #60
1002: ldc           #74
1004: invokestatic  #59
1007: aload         55
1009: invokestatic  #56
1012: aload         55
1014: invokestatic  #61
1017: ldc           #90
1019: invokestatic  #59
1022: aload         57
1024: invokestatic  #56
1027: aload         57
1029: invokestatic  #61
1032: ldc           #90
1034: invokestatic  #59
1037: aload         59
1039: invokestatic  #56
1042: aload         59
1044: invokestatic  #61
1047: ldc           #90
1049: invokestatic  #59
1052: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test263
Start line: 13226
End line: 13284
Method source code: 
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian;
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8);
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable18, objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException14, (double) (byte) 1, localizable16, objArray24);
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable39, objArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException35, (double) (byte) 1, localizable37, objArray45);
        java.lang.IllegalArgumentException illegalArgumentException48 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException35);
        java.lang.Object[] objArray49 = mathRuntimeException35.getArguments();
        java.lang.NullPointerException nullPointerException50 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException26, "org.apache.commons.math.ConvergenceException: convergence failed", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException26, (double) 1000);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        levenbergMarquardtOptimizer0.residuals = doubleArray54;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(illegalArgumentException48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!, 1]");
        org.junit.Assert.assertNotNull(nullPointerException50);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1000.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: aload_1
55: getfield      #131
58: astore        4
60: aconst_null
61: astore        5
63: new           #27
66: dup
67: aload         5
69: invokespecial #39
72: astore        6
74: aconst_null
75: astore        7
77: iconst_2
78: anewarray     #5
81: dup
82: iconst_0
83: ldc           #28
85: aastore
86: dup
87: iconst_1
88: iconst_1
89: invokestatic  #17
92: aastore
93: astore        8
95: new           #27
98: dup
99: aload         5
101: aload         7
103: aload         8
105: invokespecial #47
108: astore        9
110: aconst_null
111: astore        10
113: aconst_null
114: astore        11
116: iconst_5
117: anewarray     #5
120: dup
121: iconst_0
122: iconst_0
123: invokestatic  #16
126: aastore
127: dup
128: iconst_1
129: iconst_0
130: invokestatic  #17
133: aastore
134: dup
135: iconst_2
136: bipush        52
138: invokestatic  #18
141: aastore
142: dup
143: iconst_3
144: ldc2_w        #19
147: invokestatic  #21
150: aastore
151: dup
152: iconst_4
153: dconst_1
154: invokestatic  #22
157: aastore
158: astore        12
160: new           #23
163: dup
164: ldc2_w        #24
167: aload         11
169: aload         12
171: invokespecial #26
174: astore        13
176: new           #23
179: dup
180: aload         9
182: dconst_1
183: aload         10
185: aload         12
187: invokespecial #50
190: astore        14
192: aconst_null
193: astore        15
195: new           #27
198: dup
199: aload         15
201: invokespecial #39
204: astore        16
206: aconst_null
207: astore        17
209: iconst_2
210: anewarray     #5
213: dup
214: iconst_0
215: ldc           #28
217: aastore
218: dup
219: iconst_1
220: iconst_1
221: invokestatic  #17
224: aastore
225: astore        18
227: new           #27
230: dup
231: aload         15
233: aload         17
235: aload         18
237: invokespecial #47
240: astore        19
242: aconst_null
243: astore        20
245: aconst_null
246: astore        21
248: iconst_5
249: anewarray     #5
252: dup
253: iconst_0
254: iconst_0
255: invokestatic  #16
258: aastore
259: dup
260: iconst_1
261: iconst_0
262: invokestatic  #17
265: aastore
266: dup
267: iconst_2
268: bipush        52
270: invokestatic  #18
273: aastore
274: dup
275: iconst_3
276: ldc2_w        #19
279: invokestatic  #21
282: aastore
283: dup
284: iconst_4
285: dconst_1
286: invokestatic  #22
289: aastore
290: astore        22
292: new           #23
295: dup
296: ldc2_w        #24
299: aload         21
301: aload         22
303: invokespecial #26
306: astore        23
308: new           #23
311: dup
312: aload         19
314: dconst_1
315: aload         20
317: aload         22
319: invokespecial #50
322: astore        24
324: aload         19
326: invokestatic  #297
329: astore        25
331: aload         19
333: invokevirtual #48
336: astore        26
338: ldc           #191
340: aload         26
342: invokestatic  #43
345: astore        27
347: new           #240
350: dup
351: aload         14
353: ldc           #191
355: aload         26
357: invokespecial #243
360: astore        28
362: new           #23
365: dup
366: aload         14
368: ldc2_w        #460
371: invokespecial #272
374: astore        29
376: aload         29
378: invokevirtual #84
381: astore        30
383: aload_1
384: aload         30
386: putfield      #122
389: aload_2
390: invokestatic  #106
393: aload_3
394: invokestatic  #106
397: aload         4
399: invokestatic  #106
402: aload         8
404: invokestatic  #56
407: aload         8
409: invokestatic  #57
412: ldc           #74
414: invokestatic  #59
417: aload         8
419: invokestatic  #60
422: ldc           #74
424: invokestatic  #59
427: aload         12
429: invokestatic  #56
432: aload         12
434: invokestatic  #57
437: ldc           #58
439: invokestatic  #59
442: aload         12
444: invokestatic  #60
447: ldc           #58
449: invokestatic  #59
452: aload         18
454: invokestatic  #56
457: aload         18
459: invokestatic  #57
462: ldc           #74
464: invokestatic  #59
467: aload         18
469: invokestatic  #60
472: ldc           #74
474: invokestatic  #59
477: aload         22
479: invokestatic  #56
482: aload         22
484: invokestatic  #57
487: ldc           #58
489: invokestatic  #59
492: aload         22
494: invokestatic  #60
497: ldc           #58
499: invokestatic  #59
502: aload         25
504: invokestatic  #56
507: aload         26
509: invokestatic  #56
512: aload         26
514: invokestatic  #57
517: ldc           #74
519: invokestatic  #59
522: aload         26
524: invokestatic  #60
527: ldc           #74
529: invokestatic  #59
532: aload         27
534: invokestatic  #56
537: aload         30
539: invokestatic  #56
542: aload         30
544: invokestatic  #61
547: ldc_w         #462
550: invokestatic  #59
553: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test264
Start line: 13287
End line: 13323
Method source code: 
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals;
        double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16);
        double[] doubleArray19 = functionEvaluationException18.getArgument();
        double[] doubleArray20 = functionEvaluationException18.getArgument();
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray20;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer22.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray27 = new double[] { (-1), 1.0f };
        double[][] doubleArray28 = new double[][] { doubleArray27 };
        levenbergMarquardtOptimizer22.jacobian = doubleArray28;
        levenbergMarquardtOptimizer0.jacobian = doubleArray28;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #463
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: aload_1
39: bipush        100
41: invokevirtual #76
44: aload_1
45: getfield      #122
48: astore_2
49: aload_1
50: getfield      #122
53: astore_3
54: new           #81
57: dup
58: iconst_m1
59: invokespecial #82
62: astore        4
64: aconst_null
65: astore        5
67: new           #27
70: dup
71: aload         5
73: invokespecial #39
76: astore        6
78: aconst_null
79: astore        7
81: iconst_2
82: anewarray     #5
85: dup
86: iconst_0
87: ldc           #28
89: aastore
90: dup
91: iconst_1
92: iconst_1
93: invokestatic  #17
96: aastore
97: astore        8
99: new           #27
102: dup
103: aload         5
105: aload         7
107: aload         8
109: invokespecial #47
112: astore        9
114: new           #23
117: dup
118: aload         4
120: dconst_0
121: ldc           #28
123: aload         8
125: invokespecial #83
128: astore        10
130: aload         10
132: invokevirtual #84
135: astore        11
137: aload         10
139: invokevirtual #84
142: astore        12
144: aload_1
145: aload         12
147: putfield      #113
150: new           #8
153: dup
154: invokespecial #9
157: astore        13
159: aload         13
161: dconst_0
162: invokevirtual #129
165: iconst_2
166: newarray       double
168: dup
169: iconst_0
170: ldc2_w        #31
173: dastore
174: dup
175: iconst_1
176: dconst_1
177: dastore
178: astore        14
180: iconst_1
181: anewarray     #130
184: dup
185: iconst_0
186: aload         14
188: aastore
189: astore        15
191: aload         13
193: aload         15
195: putfield      #131
198: aload_1
199: aload         15
201: putfield      #131
204: aload_2
205: invokestatic  #106
208: aload_3
209: invokestatic  #106
212: aload         8
214: invokestatic  #56
217: aload         8
219: invokestatic  #57
222: ldc           #74
224: invokestatic  #59
227: aload         8
229: invokestatic  #60
232: ldc           #74
234: invokestatic  #59
237: aload         11
239: invokestatic  #56
242: aload         11
244: invokestatic  #61
247: ldc           #90
249: invokestatic  #59
252: aload         12
254: invokestatic  #56
257: aload         12
259: invokestatic  #61
262: ldc           #90
264: invokestatic  #59
267: aload         14
269: invokestatic  #56
272: aload         14
274: invokestatic  #61
277: ldc           #134
279: invokestatic  #59
282: aload         15
284: invokestatic  #56
287: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test265
Start line: 13326
End line: 13336
Method source code: 
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        int int5 = levenbergMarquardtOptimizer0.getEvaluations();
        int int6 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #464
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: invokevirtual #167
47: istore_2
48: aload_1
49: invokevirtual #133
52: istore_3
53: new           #64
56: dup
57: invokespecial #65
60: ldc           #66
62: invokevirtual #67
65: iload_2
66: invokevirtual #102
69: ldc           #69
71: invokevirtual #67
74: iconst_0
75: invokevirtual #102
78: ldc           #66
80: invokevirtual #67
83: invokevirtual #71
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #73
98: new           #64
101: dup
102: invokespecial #65
105: ldc           #66
107: invokevirtual #67
110: iload_3
111: invokevirtual #102
114: ldc           #69
116: invokevirtual #67
119: iconst_0
120: invokevirtual #102
123: ldc           #66
125: invokevirtual #67
128: invokevirtual #71
131: iload_3
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #73
143: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test266
Start line: 13339
End line: 13425
Method source code: 
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException(throwable2);
        org.apache.commons.math.exception.util.Localizable localizable4 = mathRuntimeException3.getLocalizablePattern();
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8);
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13);
        java.lang.Object[] objArray15 = mathRuntimeException14.getArguments();
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray15);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable4, objArray15);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer20.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray25 = new double[] { (-1), 1.0f };
        double[][] doubleArray26 = new double[][] { doubleArray25 };
        levenbergMarquardtOptimizer20.jacobian = doubleArray26;
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray26);
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) doubleArray26);
        java.lang.Throwable throwable30 = null;
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38);
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        java.lang.Object[] objArray49 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable43, objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException39, (double) (byte) 1, localizable41, objArray49);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54);
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59);
        org.apache.commons.math.exception.util.Localizable localizable62 = null;
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        java.lang.Object[] objArray70 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable64, objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException60, (double) (byte) 1, localizable62, objArray70);
        java.lang.IllegalArgumentException illegalArgumentException73 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException60);
        java.lang.Object[] objArray74 = mathRuntimeException60.getArguments();
        java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException51, "org.apache.commons.math.ConvergenceException: convergence failed", objArray74);
        java.util.NoSuchElementException noSuchElementException77 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException(throwable30, "org.apache.commons.math.MathRuntimeException$2: true", objArray74);
        org.apache.commons.math.optimization.OptimizationException optimizationException79 = new org.apache.commons.math.optimization.OptimizationException(localizable4, objArray74);
        java.lang.NullPointerException nullPointerException80 = org.apache.commons.math.MathRuntimeException.createNullPointerException("hi!", objArray74);
        java.lang.IllegalStateException illegalStateException81 = org.apache.commons.math.MathRuntimeException.createIllegalStateException("org.apache.commons.math.MathException: ", objArray74);
        org.junit.Assert.assertTrue("'" + localizable4 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable4.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(illegalArgumentException73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]");
        org.junit.Assert.assertNotNull(nullPointerException75);
        org.junit.Assert.assertNotNull(noSuchElementException77);
        org.junit.Assert.assertNotNull(nullPointerException80);
        org.junit.Assert.assertNotNull(illegalStateException81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #465
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: invokespecial #39
35: astore_2
36: aload_2
37: invokevirtual #40
40: astore_3
41: aconst_null
42: astore        4
44: new           #27
47: dup
48: aload         4
50: invokespecial #39
53: astore        5
55: aconst_null
56: astore        6
58: iconst_2
59: anewarray     #5
62: dup
63: iconst_0
64: ldc           #28
66: aastore
67: dup
68: iconst_1
69: iconst_1
70: invokestatic  #17
73: aastore
74: astore        7
76: new           #27
79: dup
80: aload         4
82: aload         6
84: aload         7
86: invokespecial #47
89: astore        8
91: aload         8
93: invokevirtual #48
96: astore        9
98: bipush        52
100: ldc           #28
102: aload         9
104: invokestatic  #176
107: astore        10
109: ldc           #142
111: aload         9
113: invokestatic  #49
116: astore        11
118: new           #27
121: dup
122: aload_3
123: aload         9
125: invokespecial #177
128: astore        12
130: new           #8
133: dup
134: invokespecial #9
137: astore        13
139: aload         13
141: dconst_0
142: invokevirtual #129
145: iconst_2
146: newarray       double
148: dup
149: iconst_0
150: ldc2_w        #31
153: dastore
154: dup
155: iconst_1
156: dconst_1
157: dastore
158: astore        14
160: iconst_1
161: anewarray     #130
164: dup
165: iconst_0
166: aload         14
168: aastore
169: astore        15
171: aload         13
173: aload         15
175: putfield      #131
178: ldc           #28
180: aload         15
182: checkcast     #143
185: invokestatic  #36
188: astore        16
190: aload_3
191: aload         15
193: checkcast     #143
196: invokestatic  #178
199: astore        17
201: aconst_null
202: astore        18
204: aconst_null
205: astore        19
207: new           #27
210: dup
211: aload         19
213: invokespecial #39
216: astore        20
218: aconst_null
219: astore        21
221: iconst_2
222: anewarray     #5
225: dup
226: iconst_0
227: ldc           #28
229: aastore
230: dup
231: iconst_1
232: iconst_1
233: invokestatic  #17
236: aastore
237: astore        22
239: new           #27
242: dup
243: aload         19
245: aload         21
247: aload         22
249: invokespecial #47
252: astore        23
254: aconst_null
255: astore        24
257: aconst_null
258: astore        25
260: iconst_5
261: anewarray     #5
264: dup
265: iconst_0
266: iconst_0
267: invokestatic  #16
270: aastore
271: dup
272: iconst_1
273: iconst_0
274: invokestatic  #17
277: aastore
278: dup
279: iconst_2
280: bipush        52
282: invokestatic  #18
285: aastore
286: dup
287: iconst_3
288: ldc2_w        #19
291: invokestatic  #21
294: aastore
295: dup
296: iconst_4
297: dconst_1
298: invokestatic  #22
301: aastore
302: astore        26
304: new           #23
307: dup
308: ldc2_w        #24
311: aload         25
313: aload         26
315: invokespecial #26
318: astore        27
320: new           #23
323: dup
324: aload         23
326: dconst_1
327: aload         24
329: aload         26
331: invokespecial #50
334: astore        28
336: aconst_null
337: astore        29
339: new           #27
342: dup
343: aload         29
345: invokespecial #39
348: astore        30
350: aconst_null
351: astore        31
353: iconst_2
354: anewarray     #5
357: dup
358: iconst_0
359: ldc           #28
361: aastore
362: dup
363: iconst_1
364: iconst_1
365: invokestatic  #17
368: aastore
369: astore        32
371: new           #27
374: dup
375: aload         29
377: aload         31
379: aload         32
381: invokespecial #47
384: astore        33
386: aconst_null
387: astore        34
389: aconst_null
390: astore        35
392: iconst_5
393: anewarray     #5
396: dup
397: iconst_0
398: iconst_0
399: invokestatic  #16
402: aastore
403: dup
404: iconst_1
405: iconst_0
406: invokestatic  #17
409: aastore
410: dup
411: iconst_2
412: bipush        52
414: invokestatic  #18
417: aastore
418: dup
419: iconst_3
420: ldc2_w        #19
423: invokestatic  #21
426: aastore
427: dup
428: iconst_4
429: dconst_1
430: invokestatic  #22
433: aastore
434: astore        36
436: new           #23
439: dup
440: ldc2_w        #24
443: aload         35
445: aload         36
447: invokespecial #26
450: astore        37
452: new           #23
455: dup
456: aload         33
458: dconst_1
459: aload         34
461: aload         36
463: invokespecial #50
466: astore        38
468: aload         33
470: invokestatic  #297
473: astore        39
475: aload         33
477: invokevirtual #48
480: astore        40
482: ldc           #191
484: aload         40
486: invokestatic  #43
489: astore        41
491: new           #240
494: dup
495: aload         28
497: ldc           #191
499: aload         40
501: invokespecial #243
504: astore        42
506: ldc           #42
508: aload         40
510: invokestatic  #239
513: astore        43
515: new           #240
518: dup
519: aload         18
521: ldc_w         #417
524: aload         40
526: invokespecial #243
529: astore        44
531: new           #14
534: dup
535: aload_3
536: aload         40
538: invokespecial #323
541: astore        45
543: ldc           #28
545: aload         40
547: invokestatic  #43
550: astore        46
552: ldc           #242
554: aload         40
556: invokestatic  #419
559: astore        47
561: new           #64
564: dup
565: invokespecial #65
568: ldc           #66
570: invokevirtual #67
573: aload_3
574: invokevirtual #68
577: ldc           #69
579: invokevirtual #67
582: getstatic     #70
585: invokevirtual #68
588: ldc           #66
590: invokevirtual #67
593: invokevirtual #71
596: aload_3
597: getstatic     #70
600: invokevirtual #72
603: invokestatic  #73
606: aload         7
608: invokestatic  #56
611: aload         7
613: invokestatic  #57
616: ldc           #74
618: invokestatic  #59
621: aload         7
623: invokestatic  #60
626: ldc           #74
628: invokestatic  #59
631: aload         9
633: invokestatic  #56
636: aload         9
638: invokestatic  #57
641: ldc           #74
643: invokestatic  #59
646: aload         9
648: invokestatic  #60
651: ldc           #74
653: invokestatic  #59
656: aload         10
658: invokestatic  #56
661: aload         11
663: invokestatic  #56
666: aload         14
668: invokestatic  #56
671: aload         14
673: invokestatic  #61
676: ldc           #134
678: invokestatic  #59
681: aload         15
683: invokestatic  #56
686: aload         16
688: invokestatic  #56
691: aload         17
693: invokestatic  #56
696: aload         22
698: invokestatic  #56
701: aload         22
703: invokestatic  #57
706: ldc           #74
708: invokestatic  #59
711: aload         22
713: invokestatic  #60
716: ldc           #74
718: invokestatic  #59
721: aload         26
723: invokestatic  #56
726: aload         26
728: invokestatic  #57
731: ldc           #58
733: invokestatic  #59
736: aload         26
738: invokestatic  #60
741: ldc           #58
743: invokestatic  #59
746: aload         32
748: invokestatic  #56
751: aload         32
753: invokestatic  #57
756: ldc           #74
758: invokestatic  #59
761: aload         32
763: invokestatic  #60
766: ldc           #74
768: invokestatic  #59
771: aload         36
773: invokestatic  #56
776: aload         36
778: invokestatic  #57
781: ldc           #58
783: invokestatic  #59
786: aload         36
788: invokestatic  #60
791: ldc           #58
793: invokestatic  #59
796: aload         39
798: invokestatic  #56
801: aload         40
803: invokestatic  #56
806: aload         40
808: invokestatic  #57
811: ldc           #74
813: invokestatic  #59
816: aload         40
818: invokestatic  #60
821: ldc           #74
823: invokestatic  #59
826: aload         41
828: invokestatic  #56
831: aload         43
833: invokestatic  #56
836: aload         46
838: invokestatic  #56
841: aload         47
843: invokestatic  #56
846: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test267
Start line: 13428
End line: 13521
Method source code: 
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer10.rows = 0;
        levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer10.cost = (short) 100;
        int int19 = levenbergMarquardtOptimizer10.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20);
        levenbergMarquardtOptimizer0.rows = (byte) 100;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker25 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer26 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer26.rows = 0;
        levenbergMarquardtOptimizer26.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray31 = levenbergMarquardtOptimizer26.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36);
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41);
        double[] doubleArray44 = functionEvaluationException43.getArgument();
        double[] doubleArray45 = functionEvaluationException43.getArgument();
        levenbergMarquardtOptimizer26.objective = doubleArray45;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer47.rows = 0;
        levenbergMarquardtOptimizer47.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray52 = levenbergMarquardtOptimizer47.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException54 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable57);
        org.apache.commons.math.exception.util.Localizable localizable59 = null;
        java.lang.Object[] objArray62 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException(throwable57, localizable59, objArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException54, 0.0d, "hi!", objArray62);
        double[] doubleArray65 = functionEvaluationException64.getArgument();
        double[] doubleArray66 = functionEvaluationException64.getArgument();
        levenbergMarquardtOptimizer47.objective = doubleArray66;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException69 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable72 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable72);
        org.apache.commons.math.exception.util.Localizable localizable74 = null;
        java.lang.Object[] objArray77 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException78 = new org.apache.commons.math.MathRuntimeException(throwable72, localizable74, objArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException69, 0.0d, "hi!", objArray77);
        double[] doubleArray80 = functionEvaluationException79.getArgument();
        double[] doubleArray82 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray80, doubleArray82);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray80, false);
        double[] doubleArray86 = vectorialPointValuePair85.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray86);
        levenbergMarquardtOptimizer0.objective = doubleArray86;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker25);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]");
        org.junit.Assert.assertNull(doubleArray52);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #126
59: istore_3
60: aload_1
61: getfield      #122
64: astore        4
66: new           #8
69: dup
70: invokespecial #9
73: astore        5
75: aload         5
77: iconst_0
78: putfield      #93
81: aload         5
83: iconst_1
84: invokevirtual #76
87: aload         5
89: ldc2_w        #31
92: invokevirtual #94
95: aload         5
97: ldc2_w        #95
100: putfield      #97
103: aload         5
105: invokevirtual #98
108: istore        6
110: new           #99
113: dup
114: invokespecial #100
117: astore        7
119: aload         5
121: aload         7
123: invokevirtual #101
126: aload_1
127: aload         7
129: invokevirtual #101
132: aload_1
133: bipush        100
135: putfield      #93
138: aload_1
139: invokevirtual #104
142: astore        8
144: new           #8
147: dup
148: invokespecial #9
151: astore        9
153: aload         9
155: iconst_0
156: putfield      #93
159: aload         9
161: iconst_1
162: invokevirtual #76
165: aload         9
167: getfield      #113
170: astore        10
172: new           #81
175: dup
176: iconst_m1
177: invokespecial #82
180: astore        11
182: aconst_null
183: astore        12
185: new           #27
188: dup
189: aload         12
191: invokespecial #39
194: astore        13
196: aconst_null
197: astore        14
199: iconst_2
200: anewarray     #5
203: dup
204: iconst_0
205: ldc           #28
207: aastore
208: dup
209: iconst_1
210: iconst_1
211: invokestatic  #17
214: aastore
215: astore        15
217: new           #27
220: dup
221: aload         12
223: aload         14
225: aload         15
227: invokespecial #47
230: astore        16
232: new           #23
235: dup
236: aload         11
238: dconst_0
239: ldc           #28
241: aload         15
243: invokespecial #83
246: astore        17
248: aload         17
250: invokevirtual #84
253: astore        18
255: aload         17
257: invokevirtual #84
260: astore        19
262: aload         9
264: aload         19
266: putfield      #114
269: new           #8
272: dup
273: invokespecial #9
276: astore        20
278: aload         20
280: iconst_0
281: putfield      #93
284: aload         20
286: iconst_1
287: invokevirtual #76
290: aload         20
292: getfield      #113
295: astore        21
297: new           #81
300: dup
301: iconst_m1
302: invokespecial #82
305: astore        22
307: aconst_null
308: astore        23
310: new           #27
313: dup
314: aload         23
316: invokespecial #39
319: astore        24
321: aconst_null
322: astore        25
324: iconst_2
325: anewarray     #5
328: dup
329: iconst_0
330: ldc           #28
332: aastore
333: dup
334: iconst_1
335: iconst_1
336: invokestatic  #17
339: aastore
340: astore        26
342: new           #27
345: dup
346: aload         23
348: aload         25
350: aload         26
352: invokespecial #47
355: astore        27
357: new           #23
360: dup
361: aload         22
363: dconst_0
364: ldc           #28
366: aload         26
368: invokespecial #83
371: astore        28
373: aload         28
375: invokevirtual #84
378: astore        29
380: aload         28
382: invokevirtual #84
385: astore        30
387: aload         20
389: aload         30
391: putfield      #114
394: new           #81
397: dup
398: iconst_m1
399: invokespecial #82
402: astore        31
404: aconst_null
405: astore        32
407: new           #27
410: dup
411: aload         32
413: invokespecial #39
416: astore        33
418: aconst_null
419: astore        34
421: iconst_2
422: anewarray     #5
425: dup
426: iconst_0
427: ldc           #28
429: aastore
430: dup
431: iconst_1
432: iconst_1
433: invokestatic  #17
436: aastore
437: astore        35
439: new           #27
442: dup
443: aload         32
445: aload         34
447: aload         35
449: invokespecial #47
452: astore        36
454: new           #23
457: dup
458: aload         31
460: dconst_0
461: ldc           #28
463: aload         35
465: invokespecial #83
468: astore        37
470: aload         37
472: invokevirtual #84
475: astore        38
477: iconst_1
478: newarray       double
480: dup
481: iconst_0
482: ldc2_w        #85
485: dastore
486: astore        39
488: new           #87
491: dup
492: aload         38
494: aload         39
496: invokespecial #88
499: astore        40
501: new           #87
504: dup
505: aload         30
507: aload         38
509: iconst_0
510: invokespecial #117
513: astore        41
515: aload         41
517: invokevirtual #185
520: astore        42
522: new           #87
525: dup
526: aload         19
528: aload         42
530: invokespecial #88
533: astore        43
535: aload_1
536: aload         42
538: putfield      #114
541: new           #64
544: dup
545: invokespecial #65
548: ldc           #66
550: invokevirtual #67
553: iload_2
554: invokevirtual #102
557: ldc           #69
559: invokevirtual #67
562: iconst_0
563: invokevirtual #102
566: ldc           #66
568: invokevirtual #67
571: invokevirtual #71
574: iload_2
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #73
586: new           #64
589: dup
590: invokespecial #65
593: ldc           #66
595: invokevirtual #67
598: iload_3
599: invokevirtual #102
602: ldc           #69
604: invokevirtual #67
607: iconst_0
608: invokevirtual #102
611: ldc           #66
613: invokevirtual #67
616: invokevirtual #71
619: iload_3
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #73
631: aload         4
633: invokestatic  #106
636: new           #64
639: dup
640: invokespecial #65
643: ldc           #66
645: invokevirtual #67
648: iload         6
650: invokevirtual #102
653: ldc           #69
655: invokevirtual #67
658: sipush        1000
661: invokevirtual #102
664: ldc           #66
666: invokevirtual #67
669: invokevirtual #71
672: iload         6
674: sipush        1000
677: if_icmpne     684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #73
688: aload         8
690: invokestatic  #56
693: aload         10
695: invokestatic  #106
698: aload         15
700: invokestatic  #56
703: aload         15
705: invokestatic  #57
708: ldc           #74
710: invokestatic  #59
713: aload         15
715: invokestatic  #60
718: ldc           #74
720: invokestatic  #59
723: aload         18
725: invokestatic  #56
728: aload         18
730: invokestatic  #61
733: ldc           #90
735: invokestatic  #59
738: aload         19
740: invokestatic  #56
743: aload         19
745: invokestatic  #61
748: ldc           #90
750: invokestatic  #59
753: aload         21
755: invokestatic  #106
758: aload         26
760: invokestatic  #56
763: aload         26
765: invokestatic  #57
768: ldc           #74
770: invokestatic  #59
773: aload         26
775: invokestatic  #60
778: ldc           #74
780: invokestatic  #59
783: aload         29
785: invokestatic  #56
788: aload         29
790: invokestatic  #61
793: ldc           #90
795: invokestatic  #59
798: aload         30
800: invokestatic  #56
803: aload         30
805: invokestatic  #61
808: ldc           #90
810: invokestatic  #59
813: aload         35
815: invokestatic  #56
818: aload         35
820: invokestatic  #57
823: ldc           #74
825: invokestatic  #59
828: aload         35
830: invokestatic  #60
833: ldc           #74
835: invokestatic  #59
838: aload         38
840: invokestatic  #56
843: aload         38
845: invokestatic  #61
848: ldc           #90
850: invokestatic  #59
853: aload         39
855: invokestatic  #56
858: aload         39
860: invokestatic  #61
863: ldc           #91
865: invokestatic  #59
868: aload         42
870: invokestatic  #56
873: aload         42
875: invokestatic  #61
878: ldc           #90
880: invokestatic  #59
883: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test268
Start line: 13524
End line: 13553
Method source code: 
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray20 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20);
        levenbergMarquardtOptimizer0.residuals = doubleArray20;
        int int24 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: iconst_1
130: newarray       double
132: dup
133: iconst_0
134: ldc2_w        #85
137: dastore
138: astore        11
140: new           #87
143: dup
144: aload         10
146: aload         11
148: invokespecial #88
151: astore        12
153: new           #23
156: dup
157: aload         11
159: invokespecial #89
162: astore        13
164: aload_1
165: aload         11
167: putfield      #122
170: aload_1
171: getfield      #93
174: istore        14
176: aload_2
177: invokestatic  #106
180: aload         7
182: invokestatic  #56
185: aload         7
187: invokestatic  #57
190: ldc           #74
192: invokestatic  #59
195: aload         7
197: invokestatic  #60
200: ldc           #74
202: invokestatic  #59
205: aload         10
207: invokestatic  #56
210: aload         10
212: invokestatic  #61
215: ldc           #90
217: invokestatic  #59
220: aload         11
222: invokestatic  #56
225: aload         11
227: invokestatic  #61
230: ldc           #91
232: invokestatic  #59
235: new           #64
238: dup
239: invokespecial #65
242: ldc           #66
244: invokevirtual #67
247: iload         14
249: invokevirtual #102
252: ldc           #69
254: invokevirtual #67
257: iconst_0
258: invokevirtual #102
261: ldc           #66
263: invokevirtual #67
266: invokevirtual #71
269: iload         14
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #73
282: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test269
Start line: 13556
End line: 13566
Method source code: 
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        int int6 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #468
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: getfield      #93
52: istore_3
53: aload_2
54: invokestatic  #106
57: new           #64
60: dup
61: invokespecial #65
64: ldc           #66
66: invokevirtual #67
69: iload_3
70: invokevirtual #102
73: ldc           #69
75: invokevirtual #67
78: iconst_0
79: invokevirtual #102
82: ldc           #66
84: invokevirtual #67
87: invokevirtual #71
90: iload_3
91: ifne          98
94: iconst_1
95: goto          99
98: iconst_0
99: invokestatic  #73
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test270
Start line: 13569
End line: 13595
Method source code: 
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.cost = 10.0d;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer15.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray20 = new double[] { (-1), 1.0f };
        double[][] doubleArray21 = new double[][] { doubleArray20 };
        levenbergMarquardtOptimizer15.jacobian = doubleArray21;
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException("org.apache.commons.math.MathRuntimeException$2: true", (java.lang.Object[]) doubleArray21);
        levenbergMarquardtOptimizer0.jacobian = doubleArray21;
        levenbergMarquardtOptimizer0.setMaxIterations((int) (short) 1);
        levenbergMarquardtOptimizer0.cost = (short) 10;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(eOFException23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #469
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: ldc2_w        #33
79: putfield      #97
82: new           #8
85: dup
86: invokespecial #9
89: astore        4
91: aload         4
93: dconst_0
94: invokevirtual #129
97: iconst_2
98: newarray       double
100: dup
101: iconst_0
102: ldc2_w        #31
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: astore        5
112: iconst_1
113: anewarray     #130
116: dup
117: iconst_0
118: aload         5
120: aastore
121: astore        6
123: aload         4
125: aload         6
127: putfield      #131
130: ldc_w         #417
133: aload         6
135: checkcast     #143
138: invokestatic  #322
141: astore        7
143: aload_1
144: aload         6
146: putfield      #131
149: aload_1
150: iconst_1
151: invokevirtual #182
154: aload_1
155: ldc2_w        #33
158: putfield      #97
161: new           #64
164: dup
165: invokespecial #65
168: ldc           #66
170: invokevirtual #67
173: iload_2
174: invokevirtual #102
177: ldc           #69
179: invokevirtual #67
182: sipush        1000
185: invokevirtual #102
188: ldc           #66
190: invokevirtual #67
193: invokevirtual #71
196: iload_2
197: sipush        1000
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #73
211: aload         5
213: invokestatic  #56
216: aload         5
218: invokestatic  #61
221: ldc           #134
223: invokestatic  #59
226: aload         6
228: invokestatic  #56
231: aload         7
233: invokestatic  #56
236: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test271
Start line: 13598
End line: 13686
Method source code: 
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        double double82 = levenbergMarquardtOptimizer0.getChiSquare();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #470
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #133
551: istore        47
553: aload_1
554: invokevirtual #77
557: dstore        48
559: aload_3
560: invokestatic  #56
563: aload_3
564: invokestatic  #57
567: ldc           #58
569: invokestatic  #59
572: aload_3
573: invokestatic  #60
576: ldc           #58
578: invokestatic  #59
581: aload         7
583: invokestatic  #56
586: aload         7
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #60
601: ldc           #58
603: invokestatic  #59
606: aload         10
608: invokestatic  #56
611: aload         10
613: invokestatic  #61
616: ldc           #62
618: invokestatic  #59
621: aload         12
623: invokestatic  #56
626: aload         12
628: invokestatic  #57
631: ldc           #63
633: invokestatic  #59
636: aload         12
638: invokestatic  #60
641: ldc           #63
643: invokestatic  #59
646: aload         13
648: invokestatic  #56
651: new           #64
654: dup
655: invokespecial #65
658: ldc           #66
660: invokevirtual #67
663: aload         17
665: invokevirtual #68
668: ldc           #69
670: invokevirtual #67
673: getstatic     #70
676: invokevirtual #68
679: ldc           #66
681: invokevirtual #67
684: invokevirtual #71
687: aload         17
689: getstatic     #70
692: invokevirtual #72
695: invokestatic  #73
698: aload         19
700: invokestatic  #56
703: aload         19
705: invokestatic  #57
708: ldc           #63
710: invokestatic  #59
713: aload         19
715: invokestatic  #60
718: ldc           #63
720: invokestatic  #59
723: aload         20
725: invokestatic  #56
728: new           #64
731: dup
732: invokespecial #65
735: ldc           #66
737: invokevirtual #67
740: aload         25
742: invokevirtual #68
745: ldc           #69
747: invokevirtual #67
750: getstatic     #70
753: invokevirtual #68
756: ldc           #66
758: invokevirtual #67
761: invokevirtual #71
764: aload         25
766: getstatic     #70
769: invokevirtual #72
772: invokestatic  #73
775: aload         27
777: invokestatic  #56
780: aload         27
782: invokestatic  #57
785: ldc           #63
787: invokestatic  #59
790: aload         27
792: invokestatic  #60
795: ldc           #63
797: invokestatic  #59
800: aload         28
802: invokestatic  #56
805: aload         30
807: invokestatic  #56
810: aload         31
812: invokestatic  #56
815: aload         33
817: invokestatic  #56
820: aload         37
822: invokestatic  #56
825: aload         37
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         37
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         39
847: invokestatic  #56
850: aload         39
852: invokestatic  #57
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #60
865: ldc           #74
867: invokestatic  #59
870: aload         40
872: invokestatic  #56
875: new           #64
878: dup
879: invokespecial #65
882: ldc           #66
884: invokevirtual #67
887: dload         44
889: invokevirtual #79
892: ldc           #69
894: invokevirtual #67
897: dconst_0
898: invokevirtual #79
901: ldc           #66
903: invokevirtual #67
906: invokevirtual #71
909: dload         44
911: dconst_0
912: dcmpl
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #73
924: aload         46
926: invokestatic  #106
929: new           #64
932: dup
933: invokespecial #65
936: ldc           #66
938: invokevirtual #67
941: iload         47
943: invokevirtual #102
946: ldc           #69
948: invokevirtual #67
951: iconst_0
952: invokevirtual #102
955: ldc           #66
957: invokevirtual #67
960: invokevirtual #71
963: iload         47
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #73
976: new           #64
979: dup
980: invokespecial #65
983: ldc           #66
985: invokevirtual #67
988: dload         48
990: invokevirtual #79
993: ldc           #69
995: invokevirtual #67
998: dconst_0
999: invokevirtual #79
1002: ldc           #66
1004: invokevirtual #67
1007: invokevirtual #71
1010: dload         48
1012: dconst_0
1013: dcmpl
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #73
1025: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test272
Start line: 13689
End line: 13709
Method source code: 
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray5 = new double[] { (-1), 1.0f };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        levenbergMarquardtOptimizer0.jacobian = doubleArray6;
        double double8 = levenbergMarquardtOptimizer0.getRMS();
        int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int10 = levenbergMarquardtOptimizer0.getIterations();
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0.0f);
        double[] doubleArray13 = levenbergMarquardtOptimizer0.residualsWeights;
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(doubleArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: dconst_0
35: invokevirtual #129
38: iconst_2
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #31
46: dastore
47: dup
48: iconst_1
49: dconst_1
50: dastore
51: astore_2
52: iconst_1
53: anewarray     #130
56: dup
57: iconst_0
58: aload_2
59: aastore
60: astore_3
61: aload_1
62: aload_3
63: putfield      #131
66: aload_1
67: invokevirtual #132
70: dstore        4
72: aload_1
73: invokevirtual #133
76: istore        6
78: aload_1
79: invokevirtual #126
82: istore        7
84: aload_1
85: dconst_0
86: invokevirtual #204
89: aload_1
90: getfield      #113
93: astore        8
95: aload_2
96: invokestatic  #56
99: aload_2
100: invokestatic  #61
103: ldc           #134
105: invokestatic  #59
108: aload_3
109: invokestatic  #56
112: dload         4
114: invokestatic  #135
117: invokestatic  #136
120: new           #64
123: dup
124: invokespecial #65
127: ldc           #66
129: invokevirtual #67
132: iload         6
134: invokevirtual #102
137: ldc           #69
139: invokevirtual #67
142: iconst_0
143: invokevirtual #102
146: ldc           #66
148: invokevirtual #67
151: invokevirtual #71
154: iload         6
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #73
167: new           #64
170: dup
171: invokespecial #65
174: ldc           #66
176: invokevirtual #67
179: iload         7
181: invokevirtual #102
184: ldc           #69
186: invokevirtual #67
189: iconst_0
190: invokevirtual #102
193: ldc           #66
195: invokevirtual #67
198: invokevirtual #71
201: iload         7
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #73
214: aload         8
216: invokestatic  #106
219: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test273
Start line: 13712
End line: 13780
Method source code: 
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9);
        double[] doubleArray12 = functionEvaluationException11.getArgument();
        double[] doubleArray13 = functionEvaluationException11.getArgument();
        double[] doubleArray14 = functionEvaluationException11.getArgument();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException16 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable19 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(throwable19);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable19, localizable21, objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException16, 0.0d, "hi!", objArray24);
        double[] doubleArray27 = functionEvaluationException26.getArgument();
        double[] doubleArray28 = functionEvaluationException26.getArgument();
        double[] doubleArray29 = functionEvaluationException26.getArgument();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer30.rows = 0;
        levenbergMarquardtOptimizer30.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray35 = levenbergMarquardtOptimizer30.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException37 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable40 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable40);
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable40, localizable42, objArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException37, 0.0d, "hi!", objArray45);
        double[] doubleArray48 = functionEvaluationException47.getArgument();
        double[] doubleArray50 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(doubleArray50);
        levenbergMarquardtOptimizer30.residuals = doubleArray50;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray29, doubleArray50, true);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException11, doubleArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray29);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]");
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #472
20: aastore
21: invokevirtual #7
24: pop
25: new           #81
28: dup
29: iconst_m1
30: invokespecial #82
33: astore_1
34: aconst_null
35: astore_2
36: new           #27
39: dup
40: aload_2
41: invokespecial #39
44: astore_3
45: aconst_null
46: astore        4
48: iconst_2
49: anewarray     #5
52: dup
53: iconst_0
54: ldc           #28
56: aastore
57: dup
58: iconst_1
59: iconst_1
60: invokestatic  #17
63: aastore
64: astore        5
66: new           #27
69: dup
70: aload_2
71: aload         4
73: aload         5
75: invokespecial #47
78: astore        6
80: new           #23
83: dup
84: aload_1
85: dconst_0
86: ldc           #28
88: aload         5
90: invokespecial #83
93: astore        7
95: aload         7
97: invokevirtual #84
100: astore        8
102: aload         7
104: invokevirtual #84
107: astore        9
109: aload         7
111: invokevirtual #84
114: astore        10
116: new           #81
119: dup
120: iconst_m1
121: invokespecial #82
124: astore        11
126: aconst_null
127: astore        12
129: new           #27
132: dup
133: aload         12
135: invokespecial #39
138: astore        13
140: aconst_null
141: astore        14
143: iconst_2
144: anewarray     #5
147: dup
148: iconst_0
149: ldc           #28
151: aastore
152: dup
153: iconst_1
154: iconst_1
155: invokestatic  #17
158: aastore
159: astore        15
161: new           #27
164: dup
165: aload         12
167: aload         14
169: aload         15
171: invokespecial #47
174: astore        16
176: new           #23
179: dup
180: aload         11
182: dconst_0
183: ldc           #28
185: aload         15
187: invokespecial #83
190: astore        17
192: aload         17
194: invokevirtual #84
197: astore        18
199: aload         17
201: invokevirtual #84
204: astore        19
206: aload         17
208: invokevirtual #84
211: astore        20
213: new           #8
216: dup
217: invokespecial #9
220: astore        21
222: aload         21
224: iconst_0
225: putfield      #93
228: aload         21
230: iconst_1
231: invokevirtual #76
234: aload         21
236: getfield      #113
239: astore        22
241: new           #81
244: dup
245: iconst_m1
246: invokespecial #82
249: astore        23
251: aconst_null
252: astore        24
254: new           #27
257: dup
258: aload         24
260: invokespecial #39
263: astore        25
265: aconst_null
266: astore        26
268: iconst_2
269: anewarray     #5
272: dup
273: iconst_0
274: ldc           #28
276: aastore
277: dup
278: iconst_1
279: iconst_1
280: invokestatic  #17
283: aastore
284: astore        27
286: new           #27
289: dup
290: aload         24
292: aload         26
294: aload         27
296: invokespecial #47
299: astore        28
301: new           #23
304: dup
305: aload         23
307: dconst_0
308: ldc           #28
310: aload         27
312: invokespecial #83
315: astore        29
317: aload         29
319: invokevirtual #84
322: astore        30
324: iconst_1
325: newarray       double
327: dup
328: iconst_0
329: ldc2_w        #85
332: dastore
333: astore        31
335: new           #87
338: dup
339: aload         30
341: aload         31
343: invokespecial #88
346: astore        32
348: new           #23
351: dup
352: aload         31
354: invokespecial #89
357: astore        33
359: aload         21
361: aload         31
363: putfield      #122
366: new           #87
369: dup
370: aload         20
372: aload         31
374: iconst_1
375: invokespecial #117
378: astore        34
380: new           #23
383: dup
384: aload         7
386: aload         20
388: invokespecial #148
391: astore        35
393: new           #23
396: dup
397: aload         20
399: invokespecial #89
402: astore        36
404: aload         5
406: invokestatic  #56
409: aload         5
411: invokestatic  #57
414: ldc           #74
416: invokestatic  #59
419: aload         5
421: invokestatic  #60
424: ldc           #74
426: invokestatic  #59
429: aload         8
431: invokestatic  #56
434: aload         8
436: invokestatic  #61
439: ldc           #90
441: invokestatic  #59
444: aload         9
446: invokestatic  #56
449: aload         9
451: invokestatic  #61
454: ldc           #90
456: invokestatic  #59
459: aload         10
461: invokestatic  #56
464: aload         10
466: invokestatic  #61
469: ldc           #90
471: invokestatic  #59
474: aload         15
476: invokestatic  #56
479: aload         15
481: invokestatic  #57
484: ldc           #74
486: invokestatic  #59
489: aload         15
491: invokestatic  #60
494: ldc           #74
496: invokestatic  #59
499: aload         18
501: invokestatic  #56
504: aload         18
506: invokestatic  #61
509: ldc           #90
511: invokestatic  #59
514: aload         19
516: invokestatic  #56
519: aload         19
521: invokestatic  #61
524: ldc           #90
526: invokestatic  #59
529: aload         20
531: invokestatic  #56
534: aload         20
536: invokestatic  #61
539: ldc           #90
541: invokestatic  #59
544: aload         22
546: invokestatic  #106
549: aload         27
551: invokestatic  #56
554: aload         27
556: invokestatic  #57
559: ldc           #74
561: invokestatic  #59
564: aload         27
566: invokestatic  #60
569: ldc           #74
571: invokestatic  #59
574: aload         30
576: invokestatic  #56
579: aload         30
581: invokestatic  #61
584: ldc           #90
586: invokestatic  #59
589: aload         31
591: invokestatic  #56
594: aload         31
596: invokestatic  #61
599: ldc           #91
601: invokestatic  #59
604: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test274
Start line: 13783
End line: 13798
Method source code: 
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        double double12 = levenbergMarquardtOptimizer0.cost;
        levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 'a');
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #473
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: getfield      #97
79: dstore        4
81: aload_1
82: ldc2_w        #85
85: invokevirtual #204
88: new           #64
91: dup
92: invokespecial #65
95: ldc           #66
97: invokevirtual #67
100: iload_2
101: invokevirtual #102
104: ldc           #69
106: invokevirtual #67
109: sipush        1000
112: invokevirtual #102
115: ldc           #66
117: invokevirtual #67
120: invokevirtual #71
123: iload_2
124: sipush        1000
127: if_icmpne     134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #73
138: new           #64
141: dup
142: invokespecial #65
145: ldc           #66
147: invokevirtual #67
150: dload         4
152: invokevirtual #79
155: ldc           #69
157: invokevirtual #67
160: ldc2_w        #95
163: invokevirtual #79
166: ldc           #66
168: invokevirtual #67
171: invokevirtual #71
174: dload         4
176: ldc2_w        #95
179: dcmpl
180: ifne          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #73
191: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test275
Start line: 13801
End line: 13894
Method source code: 
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer21.rows = 0;
        levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray40 = functionEvaluationException38.getArgument();
        levenbergMarquardtOptimizer21.objective = doubleArray40;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        double[] doubleArray56 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false);
        double[] doubleArray60 = vectorialPointValuePair59.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        double[] doubleArray78 = vectorialPointValuePair77.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray78, false);
        double[] doubleArray81 = vectorialPointValuePair80.getValueRef();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #474
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #8
145: dup
146: invokespecial #9
149: astore        12
151: aload         12
153: iconst_0
154: putfield      #93
157: aload         12
159: iconst_1
160: invokevirtual #76
163: aload         12
165: getfield      #113
168: astore        13
170: new           #81
173: dup
174: iconst_m1
175: invokespecial #82
178: astore        14
180: aconst_null
181: astore        15
183: new           #27
186: dup
187: aload         15
189: invokespecial #39
192: astore        16
194: aconst_null
195: astore        17
197: iconst_2
198: anewarray     #5
201: dup
202: iconst_0
203: ldc           #28
205: aastore
206: dup
207: iconst_1
208: iconst_1
209: invokestatic  #17
212: aastore
213: astore        18
215: new           #27
218: dup
219: aload         15
221: aload         17
223: aload         18
225: invokespecial #47
228: astore        19
230: new           #23
233: dup
234: aload         14
236: dconst_0
237: ldc           #28
239: aload         18
241: invokespecial #83
244: astore        20
246: aload         20
248: invokevirtual #84
251: astore        21
253: aload         20
255: invokevirtual #84
258: astore        22
260: aload         12
262: aload         22
264: putfield      #114
267: new           #81
270: dup
271: iconst_m1
272: invokespecial #82
275: astore        23
277: aconst_null
278: astore        24
280: new           #27
283: dup
284: aload         24
286: invokespecial #39
289: astore        25
291: aconst_null
292: astore        26
294: iconst_2
295: anewarray     #5
298: dup
299: iconst_0
300: ldc           #28
302: aastore
303: dup
304: iconst_1
305: iconst_1
306: invokestatic  #17
309: aastore
310: astore        27
312: new           #27
315: dup
316: aload         24
318: aload         26
320: aload         27
322: invokespecial #47
325: astore        28
327: new           #23
330: dup
331: aload         23
333: dconst_0
334: ldc           #28
336: aload         27
338: invokespecial #83
341: astore        29
343: aload         29
345: invokevirtual #84
348: astore        30
350: iconst_1
351: newarray       double
353: dup
354: iconst_0
355: ldc2_w        #85
358: dastore
359: astore        31
361: new           #87
364: dup
365: aload         30
367: aload         31
369: invokespecial #88
372: astore        32
374: new           #87
377: dup
378: aload         22
380: aload         30
382: iconst_0
383: invokespecial #117
386: astore        33
388: aload         33
390: invokevirtual #185
393: astore        34
395: new           #87
398: dup
399: aload         11
401: aload         34
403: invokespecial #88
406: astore        35
408: new           #81
411: dup
412: iconst_m1
413: invokespecial #82
416: astore        36
418: aconst_null
419: astore        37
421: new           #27
424: dup
425: aload         37
427: invokespecial #39
430: astore        38
432: aconst_null
433: astore        39
435: iconst_2
436: anewarray     #5
439: dup
440: iconst_0
441: ldc           #28
443: aastore
444: dup
445: iconst_1
446: iconst_1
447: invokestatic  #17
450: aastore
451: astore        40
453: new           #27
456: dup
457: aload         37
459: aload         39
461: aload         40
463: invokespecial #47
466: astore        41
468: new           #23
471: dup
472: aload         36
474: dconst_0
475: ldc           #28
477: aload         40
479: invokespecial #83
482: astore        42
484: aload         42
486: invokevirtual #84
489: astore        43
491: iconst_1
492: newarray       double
494: dup
495: iconst_0
496: ldc2_w        #85
499: dastore
500: astore        44
502: new           #87
505: dup
506: aload         43
508: aload         44
510: invokespecial #88
513: astore        45
515: aload         45
517: invokevirtual #159
520: astore        46
522: new           #87
525: dup
526: aload         34
528: aload         46
530: iconst_0
531: invokespecial #117
534: astore        47
536: aload         47
538: invokevirtual #210
541: astore        48
543: aload_2
544: invokestatic  #106
547: aload         7
549: invokestatic  #56
552: aload         7
554: invokestatic  #57
557: ldc           #74
559: invokestatic  #59
562: aload         7
564: invokestatic  #60
567: ldc           #74
569: invokestatic  #59
572: aload         10
574: invokestatic  #56
577: aload         10
579: invokestatic  #61
582: ldc           #90
584: invokestatic  #59
587: aload         11
589: invokestatic  #56
592: aload         11
594: invokestatic  #61
597: ldc           #90
599: invokestatic  #59
602: aload         13
604: invokestatic  #106
607: aload         18
609: invokestatic  #56
612: aload         18
614: invokestatic  #57
617: ldc           #74
619: invokestatic  #59
622: aload         18
624: invokestatic  #60
627: ldc           #74
629: invokestatic  #59
632: aload         21
634: invokestatic  #56
637: aload         21
639: invokestatic  #61
642: ldc           #90
644: invokestatic  #59
647: aload         22
649: invokestatic  #56
652: aload         22
654: invokestatic  #61
657: ldc           #90
659: invokestatic  #59
662: aload         27
664: invokestatic  #56
667: aload         27
669: invokestatic  #57
672: ldc           #74
674: invokestatic  #59
677: aload         27
679: invokestatic  #60
682: ldc           #74
684: invokestatic  #59
687: aload         30
689: invokestatic  #56
692: aload         30
694: invokestatic  #61
697: ldc           #90
699: invokestatic  #59
702: aload         31
704: invokestatic  #56
707: aload         31
709: invokestatic  #61
712: ldc           #91
714: invokestatic  #59
717: aload         34
719: invokestatic  #56
722: aload         34
724: invokestatic  #61
727: ldc           #90
729: invokestatic  #59
732: aload         40
734: invokestatic  #56
737: aload         40
739: invokestatic  #57
742: ldc           #74
744: invokestatic  #59
747: aload         40
749: invokestatic  #60
752: ldc           #74
754: invokestatic  #59
757: aload         43
759: invokestatic  #56
762: aload         43
764: invokestatic  #61
767: ldc           #90
769: invokestatic  #59
772: aload         44
774: invokestatic  #56
777: aload         44
779: invokestatic  #61
782: ldc           #91
784: invokestatic  #59
787: aload         46
789: invokestatic  #56
792: aload         46
794: invokestatic  #61
797: ldc           #90
799: invokestatic  #59
802: aload         48
804: invokestatic  #56
807: aload         48
809: invokestatic  #61
812: ldc           #90
814: invokestatic  #59
817: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test276
Start line: 13897
End line: 13984
Method source code: 
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25);
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30);
        double[] doubleArray33 = functionEvaluationException32.getArgument();
        double[] doubleArray35 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer39.rows = 0;
        levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray44 = levenbergMarquardtOptimizer39.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54);
        double[] doubleArray57 = functionEvaluationException56.getArgument();
        double[] doubleArray58 = functionEvaluationException56.getArgument();
        levenbergMarquardtOptimizer39.objective = doubleArray58;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException61 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException61, 0.0d, "hi!", objArray69);
        double[] doubleArray72 = functionEvaluationException71.getArgument();
        double[] doubleArray74 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray74);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray58, doubleArray72, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray72);
        double[] doubleArray79 = vectorialPointValuePair78.getPointRef();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]");
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #81
145: dup
146: iconst_m1
147: invokespecial #82
150: astore        12
152: aconst_null
153: astore        13
155: new           #27
158: dup
159: aload         13
161: invokespecial #39
164: astore        14
166: aconst_null
167: astore        15
169: iconst_2
170: anewarray     #5
173: dup
174: iconst_0
175: ldc           #28
177: aastore
178: dup
179: iconst_1
180: iconst_1
181: invokestatic  #17
184: aastore
185: astore        16
187: new           #27
190: dup
191: aload         13
193: aload         15
195: aload         16
197: invokespecial #47
200: astore        17
202: new           #23
205: dup
206: aload         12
208: dconst_0
209: ldc           #28
211: aload         16
213: invokespecial #83
216: astore        18
218: aload         18
220: invokevirtual #84
223: astore        19
225: iconst_1
226: newarray       double
228: dup
229: iconst_0
230: ldc2_w        #85
233: dastore
234: astore        20
236: new           #87
239: dup
240: aload         19
242: aload         20
244: invokespecial #88
247: astore        21
249: new           #87
252: dup
253: aload         11
255: aload         19
257: iconst_0
258: invokespecial #117
261: astore        22
263: new           #8
266: dup
267: invokespecial #9
270: astore        23
272: aload         23
274: iconst_0
275: putfield      #93
278: aload         23
280: iconst_1
281: invokevirtual #76
284: aload         23
286: getfield      #113
289: astore        24
291: new           #81
294: dup
295: iconst_m1
296: invokespecial #82
299: astore        25
301: aconst_null
302: astore        26
304: new           #27
307: dup
308: aload         26
310: invokespecial #39
313: astore        27
315: aconst_null
316: astore        28
318: iconst_2
319: anewarray     #5
322: dup
323: iconst_0
324: ldc           #28
326: aastore
327: dup
328: iconst_1
329: iconst_1
330: invokestatic  #17
333: aastore
334: astore        29
336: new           #27
339: dup
340: aload         26
342: aload         28
344: aload         29
346: invokespecial #47
349: astore        30
351: new           #23
354: dup
355: aload         25
357: dconst_0
358: ldc           #28
360: aload         29
362: invokespecial #83
365: astore        31
367: aload         31
369: invokevirtual #84
372: astore        32
374: aload         31
376: invokevirtual #84
379: astore        33
381: aload         23
383: aload         33
385: putfield      #114
388: new           #81
391: dup
392: iconst_m1
393: invokespecial #82
396: astore        34
398: aconst_null
399: astore        35
401: new           #27
404: dup
405: aload         35
407: invokespecial #39
410: astore        36
412: aconst_null
413: astore        37
415: iconst_2
416: anewarray     #5
419: dup
420: iconst_0
421: ldc           #28
423: aastore
424: dup
425: iconst_1
426: iconst_1
427: invokestatic  #17
430: aastore
431: astore        38
433: new           #27
436: dup
437: aload         35
439: aload         37
441: aload         38
443: invokespecial #47
446: astore        39
448: new           #23
451: dup
452: aload         34
454: dconst_0
455: ldc           #28
457: aload         38
459: invokespecial #83
462: astore        40
464: aload         40
466: invokevirtual #84
469: astore        41
471: iconst_1
472: newarray       double
474: dup
475: iconst_0
476: ldc2_w        #85
479: dastore
480: astore        42
482: new           #87
485: dup
486: aload         41
488: aload         42
490: invokespecial #88
493: astore        43
495: new           #87
498: dup
499: aload         33
501: aload         41
503: iconst_0
504: invokespecial #117
507: astore        44
509: new           #87
512: dup
513: aload         11
515: aload         41
517: invokespecial #88
520: astore        45
522: aload         45
524: invokevirtual #159
527: astore        46
529: aload_2
530: invokestatic  #106
533: aload         7
535: invokestatic  #56
538: aload         7
540: invokestatic  #57
543: ldc           #74
545: invokestatic  #59
548: aload         7
550: invokestatic  #60
553: ldc           #74
555: invokestatic  #59
558: aload         10
560: invokestatic  #56
563: aload         10
565: invokestatic  #61
568: ldc           #90
570: invokestatic  #59
573: aload         11
575: invokestatic  #56
578: aload         11
580: invokestatic  #61
583: ldc           #90
585: invokestatic  #59
588: aload         16
590: invokestatic  #56
593: aload         16
595: invokestatic  #57
598: ldc           #74
600: invokestatic  #59
603: aload         16
605: invokestatic  #60
608: ldc           #74
610: invokestatic  #59
613: aload         19
615: invokestatic  #56
618: aload         19
620: invokestatic  #61
623: ldc           #90
625: invokestatic  #59
628: aload         20
630: invokestatic  #56
633: aload         20
635: invokestatic  #61
638: ldc           #91
640: invokestatic  #59
643: aload         24
645: invokestatic  #106
648: aload         29
650: invokestatic  #56
653: aload         29
655: invokestatic  #57
658: ldc           #74
660: invokestatic  #59
663: aload         29
665: invokestatic  #60
668: ldc           #74
670: invokestatic  #59
673: aload         32
675: invokestatic  #56
678: aload         32
680: invokestatic  #61
683: ldc           #90
685: invokestatic  #59
688: aload         33
690: invokestatic  #56
693: aload         33
695: invokestatic  #61
698: ldc           #90
700: invokestatic  #59
703: aload         38
705: invokestatic  #56
708: aload         38
710: invokestatic  #57
713: ldc           #74
715: invokestatic  #59
718: aload         38
720: invokestatic  #60
723: ldc           #74
725: invokestatic  #59
728: aload         41
730: invokestatic  #56
733: aload         41
735: invokestatic  #61
738: ldc           #90
740: invokestatic  #59
743: aload         42
745: invokestatic  #56
748: aload         42
750: invokestatic  #61
753: ldc           #91
755: invokestatic  #59
758: aload         46
760: invokestatic  #56
763: aload         46
765: invokestatic  #61
768: ldc           #90
770: invokestatic  #59
773: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test277
Start line: 13987
End line: 14007
Method source code: 
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer9 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer9.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray14 = new double[] { (-1), 1.0f };
        double[][] doubleArray15 = new double[][] { doubleArray14 };
        levenbergMarquardtOptimizer9.jacobian = doubleArray15;
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray15);
        levenbergMarquardtOptimizer0.jacobian = doubleArray15;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: new           #8
58: dup
59: invokespecial #9
62: astore_3
63: aload_3
64: dconst_0
65: invokevirtual #129
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: ldc2_w        #31
76: dastore
77: dup
78: iconst_1
79: dconst_1
80: dastore
81: astore        4
83: iconst_1
84: anewarray     #130
87: dup
88: iconst_0
89: aload         4
91: aastore
92: astore        5
94: aload_3
95: aload         5
97: putfield      #131
100: ldc           #28
102: aload         5
104: checkcast     #143
107: invokestatic  #36
110: astore        6
112: aload_1
113: aload         5
115: putfield      #131
118: new           #64
121: dup
122: invokespecial #65
125: ldc           #66
127: invokevirtual #67
130: iload_2
131: invokevirtual #102
134: ldc           #69
136: invokevirtual #67
139: iconst_0
140: invokevirtual #102
143: ldc           #66
145: invokevirtual #67
148: invokevirtual #71
151: iload_2
152: ifne          159
155: iconst_1
156: goto          160
159: iconst_0
160: invokestatic  #73
163: aload         4
165: invokestatic  #56
168: aload         4
170: invokestatic  #61
173: ldc           #134
175: invokestatic  #59
178: aload         5
180: invokestatic  #56
183: aload         6
185: invokestatic  #56
188: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test278
Start line: 14010
End line: 14019
Method source code: 
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        levenbergMarquardtOptimizer0.setMaxEvaluations(10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNull(doubleArray2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #477
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: aload_1
39: getfield      #122
42: astore        4
44: aload_1
45: bipush        10
47: invokevirtual #76
50: new           #64
53: dup
54: invokespecial #65
57: ldc           #66
59: invokevirtual #67
62: dload_2
63: invokevirtual #79
66: ldc           #69
68: invokevirtual #67
71: dconst_0
72: invokevirtual #79
75: ldc           #66
77: invokevirtual #67
80: invokevirtual #71
83: dload_2
84: dconst_0
85: dcmpl
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #73
97: aload         4
99: invokestatic  #106
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test279
Start line: 14022
End line: 14057
Method source code: 
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1000);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(vectorialConvergenceChecker23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: aload_1
143: sipush        1000
146: invokevirtual #76
149: aload_1
150: getfield      #140
153: astore        12
155: aload_1
156: invokevirtual #11
159: astore        13
161: ldc           #12
163: invokestatic  #13
166: goto          171
169: astore        13
171: aload_2
172: invokestatic  #106
175: aload         7
177: invokestatic  #56
180: aload         7
182: invokestatic  #57
185: ldc           #74
187: invokestatic  #59
190: aload         7
192: invokestatic  #60
195: ldc           #74
197: invokestatic  #59
200: aload         10
202: invokestatic  #56
205: aload         10
207: invokestatic  #61
210: ldc           #90
212: invokestatic  #59
215: aload         11
217: invokestatic  #56
220: aload         11
222: invokestatic  #61
225: ldc           #90
227: invokestatic  #59
230: aload         12
232: invokestatic  #106
235: return
Exception table:
from    to  target type
155   166   169   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test280
Start line: 14060
End line: 14156
Method source code: 
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer21.rows = 0;
        levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray40 = functionEvaluationException38.getArgument();
        levenbergMarquardtOptimizer21.objective = doubleArray40;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        double[] doubleArray56 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false);
        double[] doubleArray60 = vectorialPointValuePair59.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60);
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66);
        org.apache.commons.math.exception.util.Localizable localizable68 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71);
        double[] doubleArray74 = functionEvaluationException73.getArgument();
        double[] doubleArray76 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76);
        double[] doubleArray78 = vectorialPointValuePair77.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray78, false);
        double[] doubleArray81 = vectorialPointValuePair80.getPoint();
        double[] doubleArray82 = vectorialPointValuePair80.getPoint();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #8
145: dup
146: invokespecial #9
149: astore        12
151: aload         12
153: iconst_0
154: putfield      #93
157: aload         12
159: iconst_1
160: invokevirtual #76
163: aload         12
165: getfield      #113
168: astore        13
170: new           #81
173: dup
174: iconst_m1
175: invokespecial #82
178: astore        14
180: aconst_null
181: astore        15
183: new           #27
186: dup
187: aload         15
189: invokespecial #39
192: astore        16
194: aconst_null
195: astore        17
197: iconst_2
198: anewarray     #5
201: dup
202: iconst_0
203: ldc           #28
205: aastore
206: dup
207: iconst_1
208: iconst_1
209: invokestatic  #17
212: aastore
213: astore        18
215: new           #27
218: dup
219: aload         15
221: aload         17
223: aload         18
225: invokespecial #47
228: astore        19
230: new           #23
233: dup
234: aload         14
236: dconst_0
237: ldc           #28
239: aload         18
241: invokespecial #83
244: astore        20
246: aload         20
248: invokevirtual #84
251: astore        21
253: aload         20
255: invokevirtual #84
258: astore        22
260: aload         12
262: aload         22
264: putfield      #114
267: new           #81
270: dup
271: iconst_m1
272: invokespecial #82
275: astore        23
277: aconst_null
278: astore        24
280: new           #27
283: dup
284: aload         24
286: invokespecial #39
289: astore        25
291: aconst_null
292: astore        26
294: iconst_2
295: anewarray     #5
298: dup
299: iconst_0
300: ldc           #28
302: aastore
303: dup
304: iconst_1
305: iconst_1
306: invokestatic  #17
309: aastore
310: astore        27
312: new           #27
315: dup
316: aload         24
318: aload         26
320: aload         27
322: invokespecial #47
325: astore        28
327: new           #23
330: dup
331: aload         23
333: dconst_0
334: ldc           #28
336: aload         27
338: invokespecial #83
341: astore        29
343: aload         29
345: invokevirtual #84
348: astore        30
350: iconst_1
351: newarray       double
353: dup
354: iconst_0
355: ldc2_w        #85
358: dastore
359: astore        31
361: new           #87
364: dup
365: aload         30
367: aload         31
369: invokespecial #88
372: astore        32
374: new           #87
377: dup
378: aload         22
380: aload         30
382: iconst_0
383: invokespecial #117
386: astore        33
388: aload         33
390: invokevirtual #185
393: astore        34
395: new           #87
398: dup
399: aload         11
401: aload         34
403: invokespecial #88
406: astore        35
408: new           #81
411: dup
412: iconst_m1
413: invokespecial #82
416: astore        36
418: aconst_null
419: astore        37
421: new           #27
424: dup
425: aload         37
427: invokespecial #39
430: astore        38
432: aconst_null
433: astore        39
435: iconst_2
436: anewarray     #5
439: dup
440: iconst_0
441: ldc           #28
443: aastore
444: dup
445: iconst_1
446: iconst_1
447: invokestatic  #17
450: aastore
451: astore        40
453: new           #27
456: dup
457: aload         37
459: aload         39
461: aload         40
463: invokespecial #47
466: astore        41
468: new           #23
471: dup
472: aload         36
474: dconst_0
475: ldc           #28
477: aload         40
479: invokespecial #83
482: astore        42
484: aload         42
486: invokevirtual #84
489: astore        43
491: iconst_1
492: newarray       double
494: dup
495: iconst_0
496: ldc2_w        #85
499: dastore
500: astore        44
502: new           #87
505: dup
506: aload         43
508: aload         44
510: invokespecial #88
513: astore        45
515: aload         45
517: invokevirtual #159
520: astore        46
522: new           #87
525: dup
526: aload         34
528: aload         46
530: iconst_0
531: invokespecial #117
534: astore        47
536: aload         47
538: invokevirtual #185
541: astore        48
543: aload         47
545: invokevirtual #185
548: astore        49
550: aload_2
551: invokestatic  #106
554: aload         7
556: invokestatic  #56
559: aload         7
561: invokestatic  #57
564: ldc           #74
566: invokestatic  #59
569: aload         7
571: invokestatic  #60
574: ldc           #74
576: invokestatic  #59
579: aload         10
581: invokestatic  #56
584: aload         10
586: invokestatic  #61
589: ldc           #90
591: invokestatic  #59
594: aload         11
596: invokestatic  #56
599: aload         11
601: invokestatic  #61
604: ldc           #90
606: invokestatic  #59
609: aload         13
611: invokestatic  #106
614: aload         18
616: invokestatic  #56
619: aload         18
621: invokestatic  #57
624: ldc           #74
626: invokestatic  #59
629: aload         18
631: invokestatic  #60
634: ldc           #74
636: invokestatic  #59
639: aload         21
641: invokestatic  #56
644: aload         21
646: invokestatic  #61
649: ldc           #90
651: invokestatic  #59
654: aload         22
656: invokestatic  #56
659: aload         22
661: invokestatic  #61
664: ldc           #90
666: invokestatic  #59
669: aload         27
671: invokestatic  #56
674: aload         27
676: invokestatic  #57
679: ldc           #74
681: invokestatic  #59
684: aload         27
686: invokestatic  #60
689: ldc           #74
691: invokestatic  #59
694: aload         30
696: invokestatic  #56
699: aload         30
701: invokestatic  #61
704: ldc           #90
706: invokestatic  #59
709: aload         31
711: invokestatic  #56
714: aload         31
716: invokestatic  #61
719: ldc           #91
721: invokestatic  #59
724: aload         34
726: invokestatic  #56
729: aload         34
731: invokestatic  #61
734: ldc           #90
736: invokestatic  #59
739: aload         40
741: invokestatic  #56
744: aload         40
746: invokestatic  #57
749: ldc           #74
751: invokestatic  #59
754: aload         40
756: invokestatic  #60
759: ldc           #74
761: invokestatic  #59
764: aload         43
766: invokestatic  #56
769: aload         43
771: invokestatic  #61
774: ldc           #90
776: invokestatic  #59
779: aload         44
781: invokestatic  #56
784: aload         44
786: invokestatic  #61
789: ldc           #91
791: invokestatic  #59
794: aload         46
796: invokestatic  #56
799: aload         46
801: invokestatic  #61
804: ldc           #90
806: invokestatic  #59
809: aload         48
811: invokestatic  #56
814: aload         48
816: invokestatic  #61
819: ldc           #90
821: invokestatic  #59
824: aload         49
826: invokestatic  #56
829: aload         49
831: invokestatic  #61
834: ldc           #90
836: invokestatic  #59
839: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test281
Start line: 14159
End line: 14250
Method source code: 
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L };
        levenbergMarquardtOptimizer0.targetValues = doubleArray25;
        int int27 = levenbergMarquardtOptimizer0.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer28.rows = 0;
        levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38);
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43);
        double[] doubleArray46 = functionEvaluationException45.getArgument();
        double[] doubleArray47 = functionEvaluationException45.getArgument();
        levenbergMarquardtOptimizer28.objective = doubleArray47;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53);
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58);
        double[] doubleArray61 = functionEvaluationException60.getArgument();
        double[] doubleArray63 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false);
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray47;
        double[] doubleArray68 = levenbergMarquardtOptimizer0.targetValues;
        org.apache.commons.math.exception.util.Localizable localizable72 = null;
        java.lang.Object[] objArray78 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable72, objArray78);
        org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException("hi!", objArray78);
        org.apache.commons.math.exception.util.Localizable localizable83 = null;
        java.lang.Object[] objArray89 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable83, objArray89);
        org.apache.commons.math.MathRuntimeException mathRuntimeException91 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException80, "hi!", objArray89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray68, "", objArray89);
        double[] doubleArray93 = functionEvaluationException92.getArgument();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 0.0, 10.0, 32.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0, 0.0, 10.0, 32.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: iconst_5
147: newarray       double
149: dup
150: iconst_0
151: ldc2_w        #95
154: dastore
155: dup
156: iconst_1
157: dconst_0
158: dastore
159: dup
160: iconst_2
161: ldc2_w        #33
164: dastore
165: dup
166: iconst_3
167: ldc2_w        #150
170: dastore
171: dup
172: iconst_4
173: dconst_1
174: dastore
175: astore        12
177: aload_1
178: aload         12
180: putfield      #152
183: aload_1
184: invokevirtual #167
187: istore        13
189: new           #8
192: dup
193: invokespecial #9
196: astore        14
198: aload         14
200: iconst_0
201: putfield      #93
204: aload         14
206: iconst_1
207: invokevirtual #76
210: aload         14
212: getfield      #113
215: astore        15
217: new           #81
220: dup
221: iconst_m1
222: invokespecial #82
225: astore        16
227: aconst_null
228: astore        17
230: new           #27
233: dup
234: aload         17
236: invokespecial #39
239: astore        18
241: aconst_null
242: astore        19
244: iconst_2
245: anewarray     #5
248: dup
249: iconst_0
250: ldc           #28
252: aastore
253: dup
254: iconst_1
255: iconst_1
256: invokestatic  #17
259: aastore
260: astore        20
262: new           #27
265: dup
266: aload         17
268: aload         19
270: aload         20
272: invokespecial #47
275: astore        21
277: new           #23
280: dup
281: aload         16
283: dconst_0
284: ldc           #28
286: aload         20
288: invokespecial #83
291: astore        22
293: aload         22
295: invokevirtual #84
298: astore        23
300: aload         22
302: invokevirtual #84
305: astore        24
307: aload         14
309: aload         24
311: putfield      #114
314: new           #81
317: dup
318: iconst_m1
319: invokespecial #82
322: astore        25
324: aconst_null
325: astore        26
327: new           #27
330: dup
331: aload         26
333: invokespecial #39
336: astore        27
338: aconst_null
339: astore        28
341: iconst_2
342: anewarray     #5
345: dup
346: iconst_0
347: ldc           #28
349: aastore
350: dup
351: iconst_1
352: iconst_1
353: invokestatic  #17
356: aastore
357: astore        29
359: new           #27
362: dup
363: aload         26
365: aload         28
367: aload         29
369: invokespecial #47
372: astore        30
374: new           #23
377: dup
378: aload         25
380: dconst_0
381: ldc           #28
383: aload         29
385: invokespecial #83
388: astore        31
390: aload         31
392: invokevirtual #84
395: astore        32
397: iconst_1
398: newarray       double
400: dup
401: iconst_0
402: ldc2_w        #85
405: dastore
406: astore        33
408: new           #87
411: dup
412: aload         32
414: aload         33
416: invokespecial #88
419: astore        34
421: new           #87
424: dup
425: aload         24
427: aload         32
429: iconst_0
430: invokespecial #117
433: astore        35
435: aload_1
436: aload         24
438: putfield      #113
441: aload_1
442: getfield      #152
445: astore        36
447: aconst_null
448: astore        37
450: iconst_5
451: anewarray     #5
454: dup
455: iconst_0
456: iconst_0
457: invokestatic  #16
460: aastore
461: dup
462: iconst_1
463: iconst_0
464: invokestatic  #17
467: aastore
468: dup
469: iconst_2
470: bipush        52
472: invokestatic  #18
475: aastore
476: dup
477: iconst_3
478: ldc2_w        #19
481: invokestatic  #21
484: aastore
485: dup
486: iconst_4
487: dconst_1
488: invokestatic  #22
491: aastore
492: astore        38
494: new           #23
497: dup
498: ldc2_w        #24
501: aload         37
503: aload         38
505: invokespecial #26
508: astore        39
510: new           #27
513: dup
514: ldc           #28
516: aload         38
518: invokespecial #29
521: astore        40
523: aconst_null
524: astore        41
526: iconst_5
527: anewarray     #5
530: dup
531: iconst_0
532: iconst_0
533: invokestatic  #16
536: aastore
537: dup
538: iconst_1
539: iconst_0
540: invokestatic  #17
543: aastore
544: dup
545: iconst_2
546: bipush        52
548: invokestatic  #18
551: aastore
552: dup
553: iconst_3
554: ldc2_w        #19
557: invokestatic  #21
560: aastore
561: dup
562: iconst_4
563: dconst_1
564: invokestatic  #22
567: aastore
568: astore        42
570: new           #23
573: dup
574: ldc2_w        #24
577: aload         41
579: aload         42
581: invokespecial #26
584: astore        43
586: new           #27
589: dup
590: aload         40
592: ldc           #28
594: aload         42
596: invokespecial #30
599: astore        44
601: new           #23
604: dup
605: aload         36
607: ldc           #42
609: aload         42
611: invokespecial #144
614: astore        45
616: aload         45
618: invokevirtual #84
621: astore        46
623: aload         6
625: invokestatic  #56
628: aload         6
630: invokestatic  #57
633: ldc           #74
635: invokestatic  #59
638: aload         6
640: invokestatic  #60
643: ldc           #74
645: invokestatic  #59
648: aload         9
650: invokestatic  #56
653: aload         9
655: invokestatic  #61
658: ldc           #90
660: invokestatic  #59
663: aload         10
665: invokestatic  #56
668: aload         10
670: invokestatic  #61
673: ldc           #91
675: invokestatic  #59
678: aload         12
680: invokestatic  #56
683: aload         12
685: invokestatic  #61
688: ldc           #153
690: invokestatic  #59
693: new           #64
696: dup
697: invokespecial #65
700: ldc           #66
702: invokevirtual #67
705: iload         13
707: invokevirtual #102
710: ldc           #69
712: invokevirtual #67
715: iconst_0
716: invokevirtual #102
719: ldc           #66
721: invokevirtual #67
724: invokevirtual #71
727: iload         13
729: ifne          736
732: iconst_1
733: goto          737
736: iconst_0
737: invokestatic  #73
740: aload         15
742: invokestatic  #106
745: aload         20
747: invokestatic  #56
750: aload         20
752: invokestatic  #57
755: ldc           #74
757: invokestatic  #59
760: aload         20
762: invokestatic  #60
765: ldc           #74
767: invokestatic  #59
770: aload         23
772: invokestatic  #56
775: aload         23
777: invokestatic  #61
780: ldc           #90
782: invokestatic  #59
785: aload         24
787: invokestatic  #56
790: aload         24
792: invokestatic  #61
795: ldc           #90
797: invokestatic  #59
800: aload         29
802: invokestatic  #56
805: aload         29
807: invokestatic  #57
810: ldc           #74
812: invokestatic  #59
815: aload         29
817: invokestatic  #60
820: ldc           #74
822: invokestatic  #59
825: aload         32
827: invokestatic  #56
830: aload         32
832: invokestatic  #61
835: ldc           #90
837: invokestatic  #59
840: aload         33
842: invokestatic  #56
845: aload         33
847: invokestatic  #61
850: ldc           #91
852: invokestatic  #59
855: aload         36
857: invokestatic  #56
860: aload         36
862: invokestatic  #61
865: ldc           #153
867: invokestatic  #59
870: aload         38
872: invokestatic  #56
875: aload         38
877: invokestatic  #57
880: ldc           #58
882: invokestatic  #59
885: aload         38
887: invokestatic  #60
890: ldc           #58
892: invokestatic  #59
895: aload         42
897: invokestatic  #56
900: aload         42
902: invokestatic  #57
905: ldc           #58
907: invokestatic  #59
910: aload         42
912: invokestatic  #60
915: ldc           #58
917: invokestatic  #59
920: aload         46
922: invokestatic  #56
925: aload         46
927: invokestatic  #61
930: ldc           #153
932: invokestatic  #59
935: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test282
Start line: 14253
End line: 14342
Method source code: 
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals;
        int int80 = levenbergMarquardtOptimizer0.getIterations();
        double[] doubleArray81 = levenbergMarquardtOptimizer0.point;
        int int82 = levenbergMarquardtOptimizer0.rows;
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: getfield      #122
539: astore        44
541: aload_1
542: invokevirtual #126
545: istore        45
547: aload_1
548: getfield      #52
551: astore        46
553: aload_1
554: getfield      #93
557: istore        47
559: aload_3
560: invokestatic  #56
563: aload_3
564: invokestatic  #57
567: ldc           #58
569: invokestatic  #59
572: aload_3
573: invokestatic  #60
576: ldc           #58
578: invokestatic  #59
581: aload         7
583: invokestatic  #56
586: aload         7
588: invokestatic  #57
591: ldc           #58
593: invokestatic  #59
596: aload         7
598: invokestatic  #60
601: ldc           #58
603: invokestatic  #59
606: aload         10
608: invokestatic  #56
611: aload         10
613: invokestatic  #61
616: ldc           #62
618: invokestatic  #59
621: aload         12
623: invokestatic  #56
626: aload         12
628: invokestatic  #57
631: ldc           #63
633: invokestatic  #59
636: aload         12
638: invokestatic  #60
641: ldc           #63
643: invokestatic  #59
646: aload         13
648: invokestatic  #56
651: new           #64
654: dup
655: invokespecial #65
658: ldc           #66
660: invokevirtual #67
663: aload         17
665: invokevirtual #68
668: ldc           #69
670: invokevirtual #67
673: getstatic     #70
676: invokevirtual #68
679: ldc           #66
681: invokevirtual #67
684: invokevirtual #71
687: aload         17
689: getstatic     #70
692: invokevirtual #72
695: invokestatic  #73
698: aload         19
700: invokestatic  #56
703: aload         19
705: invokestatic  #57
708: ldc           #63
710: invokestatic  #59
713: aload         19
715: invokestatic  #60
718: ldc           #63
720: invokestatic  #59
723: aload         20
725: invokestatic  #56
728: new           #64
731: dup
732: invokespecial #65
735: ldc           #66
737: invokevirtual #67
740: aload         25
742: invokevirtual #68
745: ldc           #69
747: invokevirtual #67
750: getstatic     #70
753: invokevirtual #68
756: ldc           #66
758: invokevirtual #67
761: invokevirtual #71
764: aload         25
766: getstatic     #70
769: invokevirtual #72
772: invokestatic  #73
775: aload         27
777: invokestatic  #56
780: aload         27
782: invokestatic  #57
785: ldc           #63
787: invokestatic  #59
790: aload         27
792: invokestatic  #60
795: ldc           #63
797: invokestatic  #59
800: aload         28
802: invokestatic  #56
805: aload         30
807: invokestatic  #56
810: aload         31
812: invokestatic  #56
815: aload         33
817: invokestatic  #56
820: aload         37
822: invokestatic  #56
825: aload         37
827: invokestatic  #57
830: ldc           #74
832: invokestatic  #59
835: aload         37
837: invokestatic  #60
840: ldc           #74
842: invokestatic  #59
845: aload         39
847: invokestatic  #56
850: aload         39
852: invokestatic  #57
855: ldc           #74
857: invokestatic  #59
860: aload         39
862: invokestatic  #60
865: ldc           #74
867: invokestatic  #59
870: aload         40
872: invokestatic  #56
875: aload         44
877: invokestatic  #106
880: new           #64
883: dup
884: invokespecial #65
887: ldc           #66
889: invokevirtual #67
892: iload         45
894: invokevirtual #102
897: ldc           #69
899: invokevirtual #67
902: iconst_0
903: invokevirtual #102
906: ldc           #66
908: invokevirtual #67
911: invokevirtual #71
914: iload         45
916: ifne          923
919: iconst_1
920: goto          924
923: iconst_0
924: invokestatic  #73
927: aload         46
929: invokestatic  #56
932: aload         46
934: invokestatic  #61
937: ldc           #62
939: invokestatic  #59
942: new           #64
945: dup
946: invokespecial #65
949: ldc           #66
951: invokevirtual #67
954: iload         47
956: invokevirtual #102
959: ldc           #69
961: invokevirtual #67
964: iconst_0
965: invokevirtual #102
968: ldc           #66
970: invokevirtual #67
973: invokevirtual #71
976: iload         47
978: ifne          985
981: iconst_1
982: goto          986
985: iconst_0
986: invokestatic  #73
989: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test283
Start line: 14345
End line: 14420
Method source code: 
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10);
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15);
        double[] doubleArray18 = functionEvaluationException17.getArgument();
        double[] doubleArray19 = functionEvaluationException17.getArgument();
        levenbergMarquardtOptimizer0.objective = doubleArray19;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer21.rows = 0;
        levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36);
        double[] doubleArray39 = functionEvaluationException38.getArgument();
        double[] doubleArray40 = functionEvaluationException38.getArgument();
        levenbergMarquardtOptimizer21.objective = doubleArray40;
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51);
        double[] doubleArray54 = functionEvaluationException53.getArgument();
        double[] doubleArray56 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false);
        double[] doubleArray60 = vectorialPointValuePair59.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60);
        double[] doubleArray62 = vectorialPointValuePair61.getValue();
        double[] doubleArray63 = vectorialPointValuePair61.getValue();
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: new           #81
51: dup
52: iconst_m1
53: invokespecial #82
56: astore_3
57: aconst_null
58: astore        4
60: new           #27
63: dup
64: aload         4
66: invokespecial #39
69: astore        5
71: aconst_null
72: astore        6
74: iconst_2
75: anewarray     #5
78: dup
79: iconst_0
80: ldc           #28
82: aastore
83: dup
84: iconst_1
85: iconst_1
86: invokestatic  #17
89: aastore
90: astore        7
92: new           #27
95: dup
96: aload         4
98: aload         6
100: aload         7
102: invokespecial #47
105: astore        8
107: new           #23
110: dup
111: aload_3
112: dconst_0
113: ldc           #28
115: aload         7
117: invokespecial #83
120: astore        9
122: aload         9
124: invokevirtual #84
127: astore        10
129: aload         9
131: invokevirtual #84
134: astore        11
136: aload_1
137: aload         11
139: putfield      #114
142: new           #8
145: dup
146: invokespecial #9
149: astore        12
151: aload         12
153: iconst_0
154: putfield      #93
157: aload         12
159: iconst_1
160: invokevirtual #76
163: aload         12
165: getfield      #113
168: astore        13
170: new           #81
173: dup
174: iconst_m1
175: invokespecial #82
178: astore        14
180: aconst_null
181: astore        15
183: new           #27
186: dup
187: aload         15
189: invokespecial #39
192: astore        16
194: aconst_null
195: astore        17
197: iconst_2
198: anewarray     #5
201: dup
202: iconst_0
203: ldc           #28
205: aastore
206: dup
207: iconst_1
208: iconst_1
209: invokestatic  #17
212: aastore
213: astore        18
215: new           #27
218: dup
219: aload         15
221: aload         17
223: aload         18
225: invokespecial #47
228: astore        19
230: new           #23
233: dup
234: aload         14
236: dconst_0
237: ldc           #28
239: aload         18
241: invokespecial #83
244: astore        20
246: aload         20
248: invokevirtual #84
251: astore        21
253: aload         20
255: invokevirtual #84
258: astore        22
260: aload         12
262: aload         22
264: putfield      #114
267: new           #81
270: dup
271: iconst_m1
272: invokespecial #82
275: astore        23
277: aconst_null
278: astore        24
280: new           #27
283: dup
284: aload         24
286: invokespecial #39
289: astore        25
291: aconst_null
292: astore        26
294: iconst_2
295: anewarray     #5
298: dup
299: iconst_0
300: ldc           #28
302: aastore
303: dup
304: iconst_1
305: iconst_1
306: invokestatic  #17
309: aastore
310: astore        27
312: new           #27
315: dup
316: aload         24
318: aload         26
320: aload         27
322: invokespecial #47
325: astore        28
327: new           #23
330: dup
331: aload         23
333: dconst_0
334: ldc           #28
336: aload         27
338: invokespecial #83
341: astore        29
343: aload         29
345: invokevirtual #84
348: astore        30
350: iconst_1
351: newarray       double
353: dup
354: iconst_0
355: ldc2_w        #85
358: dastore
359: astore        31
361: new           #87
364: dup
365: aload         30
367: aload         31
369: invokespecial #88
372: astore        32
374: new           #87
377: dup
378: aload         22
380: aload         30
382: iconst_0
383: invokespecial #117
386: astore        33
388: aload         33
390: invokevirtual #185
393: astore        34
395: new           #87
398: dup
399: aload         11
401: aload         34
403: invokespecial #88
406: astore        35
408: aload         35
410: invokevirtual #157
413: astore        36
415: aload         35
417: invokevirtual #157
420: astore        37
422: aload_2
423: invokestatic  #106
426: aload         7
428: invokestatic  #56
431: aload         7
433: invokestatic  #57
436: ldc           #74
438: invokestatic  #59
441: aload         7
443: invokestatic  #60
446: ldc           #74
448: invokestatic  #59
451: aload         10
453: invokestatic  #56
456: aload         10
458: invokestatic  #61
461: ldc           #90
463: invokestatic  #59
466: aload         11
468: invokestatic  #56
471: aload         11
473: invokestatic  #61
476: ldc           #90
478: invokestatic  #59
481: aload         13
483: invokestatic  #106
486: aload         18
488: invokestatic  #56
491: aload         18
493: invokestatic  #57
496: ldc           #74
498: invokestatic  #59
501: aload         18
503: invokestatic  #60
506: ldc           #74
508: invokestatic  #59
511: aload         21
513: invokestatic  #56
516: aload         21
518: invokestatic  #61
521: ldc           #90
523: invokestatic  #59
526: aload         22
528: invokestatic  #56
531: aload         22
533: invokestatic  #61
536: ldc           #90
538: invokestatic  #59
541: aload         27
543: invokestatic  #56
546: aload         27
548: invokestatic  #57
551: ldc           #74
553: invokestatic  #59
556: aload         27
558: invokestatic  #60
561: ldc           #74
563: invokestatic  #59
566: aload         30
568: invokestatic  #56
571: aload         30
573: invokestatic  #61
576: ldc           #90
578: invokestatic  #59
581: aload         31
583: invokestatic  #56
586: aload         31
588: invokestatic  #61
591: ldc           #91
593: invokestatic  #59
596: aload         34
598: invokestatic  #56
601: aload         34
603: invokestatic  #61
606: ldc           #90
608: invokestatic  #59
611: aload         36
613: invokestatic  #56
616: aload         36
618: invokestatic  #61
621: ldc           #90
623: invokestatic  #59
626: aload         37
628: invokestatic  #56
631: aload         37
633: invokestatic  #61
636: ldc           #90
638: invokestatic  #59
641: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test284
Start line: 14423
End line: 14441
Method source code: 
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1);
        java.lang.Object[] objArray11 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathRuntimeException$2: true", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 2147483647);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) functionEvaluationException14);
        java.lang.RuntimeException runtimeException16 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) functionEvaluationException14);
        double[] doubleArray17 = functionEvaluationException14.getArgument();
        levenbergMarquardtOptimizer0.residualsWeights = doubleArray17;
        org.junit.Assert.assertNotNull(runtimeException16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[2.147483647E9]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #483
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: iconst_m1
52: invokevirtual #76
55: aconst_null
56: astore_2
57: new           #23
60: dup
61: dconst_0
62: ldc_w         #417
65: aload_2
66: invokespecial #418
69: astore_3
70: new           #23
73: dup
74: ldc2_w        #340
77: invokespecial #256
80: astore        4
82: aload_3
83: aload         4
85: invokevirtual #484
88: aload         4
90: invokestatic  #485
93: astore        5
95: aload         4
97: invokevirtual #84
100: astore        6
102: aload_1
103: aload         6
105: putfield      #113
108: aload         5
110: invokestatic  #56
113: aload         6
115: invokestatic  #56
118: aload         6
120: invokestatic  #61
123: ldc_w         #486
126: invokestatic  #59
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test285
Start line: 14444
End line: 14475
Method source code: 
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1);
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5);
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10);
        double[] doubleArray13 = functionEvaluationException12.getArgument();
        double[] doubleArray15 = new double[] { 'a' };
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15);
        levenbergMarquardtOptimizer0.point = doubleArray15;
        levenbergMarquardtOptimizer0.cost = 0L;
        int int20 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int21 = levenbergMarquardtOptimizer0.getIterations();
        int int22 = levenbergMarquardtOptimizer0.getMaxIterations();
        double[][] doubleArray23 = levenbergMarquardtOptimizer0.jacobian;
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
        org.junit.Assert.assertNull(doubleArray23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #487
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: new           #81
36: dup
37: iconst_m1
38: invokespecial #82
41: astore_2
42: aconst_null
43: astore_3
44: new           #27
47: dup
48: aload_3
49: invokespecial #39
52: astore        4
54: aconst_null
55: astore        5
57: iconst_2
58: anewarray     #5
61: dup
62: iconst_0
63: ldc           #28
65: aastore
66: dup
67: iconst_1
68: iconst_1
69: invokestatic  #17
72: aastore
73: astore        6
75: new           #27
78: dup
79: aload_3
80: aload         5
82: aload         6
84: invokespecial #47
87: astore        7
89: new           #23
92: dup
93: aload_2
94: dconst_0
95: ldc           #28
97: aload         6
99: invokespecial #83
102: astore        8
104: aload         8
106: invokevirtual #84
109: astore        9
111: iconst_1
112: newarray       double
114: dup
115: iconst_0
116: ldc2_w        #85
119: dastore
120: astore        10
122: new           #87
125: dup
126: aload         9
128: aload         10
130: invokespecial #88
133: astore        11
135: aload_1
136: aload         10
138: putfield      #52
141: aload_1
142: dconst_0
143: putfield      #97
146: aload_1
147: invokevirtual #98
150: istore        12
152: aload_1
153: invokevirtual #126
156: istore        13
158: aload_1
159: invokevirtual #98
162: istore        14
164: aload_1
165: getfield      #131
168: astore        15
170: aload         6
172: invokestatic  #56
175: aload         6
177: invokestatic  #57
180: ldc           #74
182: invokestatic  #59
185: aload         6
187: invokestatic  #60
190: ldc           #74
192: invokestatic  #59
195: aload         9
197: invokestatic  #56
200: aload         9
202: invokestatic  #61
205: ldc           #90
207: invokestatic  #59
210: aload         10
212: invokestatic  #56
215: aload         10
217: invokestatic  #61
220: ldc           #91
222: invokestatic  #59
225: new           #64
228: dup
229: invokespecial #65
232: ldc           #66
234: invokevirtual #67
237: iload         12
239: invokevirtual #102
242: ldc           #69
244: invokevirtual #67
247: sipush        1000
250: invokevirtual #102
253: ldc           #66
255: invokevirtual #67
258: invokevirtual #71
261: iload         12
263: sipush        1000
266: if_icmpne     273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #73
277: new           #64
280: dup
281: invokespecial #65
284: ldc           #66
286: invokevirtual #67
289: iload         13
291: invokevirtual #102
294: ldc           #69
296: invokevirtual #67
299: iconst_0
300: invokevirtual #102
303: ldc           #66
305: invokevirtual #67
308: invokevirtual #71
311: iload         13
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #73
324: new           #64
327: dup
328: invokespecial #65
331: ldc           #66
333: invokevirtual #67
336: iload         14
338: invokevirtual #102
341: ldc           #69
343: invokevirtual #67
346: sipush        1000
349: invokevirtual #102
352: ldc           #66
354: invokevirtual #67
357: invokevirtual #71
360: iload         14
362: sipush        1000
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #73
376: aload         15
378: invokestatic  #106
381: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test286
Start line: 14478
End line: 14543
Method source code: 
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable1);
        org.apache.commons.math.exception.util.Localizable localizable3 = mathRuntimeException2.getLocalizablePattern();
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException8 = new org.apache.commons.math.MathRuntimeException(throwable7);
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable7, localizable9, objArray12);
        java.lang.Object[] objArray14 = mathRuntimeException13.getArguments();
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray14);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer19.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray24 = new double[] { (-1), 1.0f };
        double[][] doubleArray25 = new double[][] { doubleArray24 };
        levenbergMarquardtOptimizer19.jacobian = doubleArray25;
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray25);
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30);
        org.apache.commons.math.exception.util.Localizable localizable32 = mathRuntimeException31.getLocalizablePattern();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException34.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray40);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException42 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable37, objArray40);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException43 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable35, objArray40);
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException29, localizable32, objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, localizable3, objArray40);
        java.util.Locale locale46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = localizable3.getLocalizedString(locale46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + localizable3 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable3.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertTrue("'" + localizable32 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable32.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable35.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException41);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #27
30: dup
31: aload_1
32: invokespecial #39
35: astore_2
36: aload_2
37: invokevirtual #40
40: astore_3
41: aconst_null
42: astore        4
44: new           #27
47: dup
48: aload         4
50: invokespecial #39
53: astore        5
55: aconst_null
56: astore        6
58: iconst_2
59: anewarray     #5
62: dup
63: iconst_0
64: ldc           #28
66: aastore
67: dup
68: iconst_1
69: iconst_1
70: invokestatic  #17
73: aastore
74: astore        7
76: new           #27
79: dup
80: aload         4
82: aload         6
84: aload         7
86: invokespecial #47
89: astore        8
91: aload         8
93: invokevirtual #48
96: astore        9
98: bipush        52
100: ldc           #28
102: aload         9
104: invokestatic  #176
107: astore        10
109: ldc           #142
111: aload         9
113: invokestatic  #49
116: astore        11
118: new           #27
121: dup
122: aload_3
123: aload         9
125: invokespecial #177
128: astore        12
130: new           #8
133: dup
134: invokespecial #9
137: astore        13
139: aload         13
141: dconst_0
142: invokevirtual #129
145: iconst_2
146: newarray       double
148: dup
149: iconst_0
150: ldc2_w        #31
153: dastore
154: dup
155: iconst_1
156: dconst_1
157: dastore
158: astore        14
160: iconst_1
161: anewarray     #130
164: dup
165: iconst_0
166: aload         14
168: aastore
169: astore        15
171: aload         13
173: aload         15
175: putfield      #131
178: ldc           #28
180: aload         15
182: checkcast     #143
185: invokestatic  #36
188: astore        16
190: aload_3
191: aload         15
193: checkcast     #143
196: invokestatic  #178
199: astore        17
201: new           #240
204: dup
205: invokespecial #241
208: astore        18
210: aconst_null
211: astore        19
213: new           #27
216: dup
217: aload         19
219: invokespecial #39
222: astore        20
224: aload         20
226: invokevirtual #40
229: astore        21
231: aconst_null
232: astore        22
234: new           #27
237: dup
238: aload         22
240: invokespecial #39
243: astore        23
245: aload         23
247: invokevirtual #40
250: astore        24
252: aconst_null
253: astore        25
255: iconst_1
256: anewarray     #5
259: dup
260: iconst_0
261: iconst_1
262: invokestatic  #35
265: aastore
266: astore        26
268: ldc           #28
270: aload         26
272: invokestatic  #36
275: astore        27
277: new           #37
280: dup
281: bipush        100
283: aload         25
285: aload         26
287: invokespecial #38
290: astore        28
292: aload         24
294: aload         26
296: invokestatic  #41
299: astore        29
301: new           #27
304: dup
305: aload         18
307: aload         21
309: aload         26
311: invokespecial #47
314: astore        30
316: new           #23
319: dup
320: ldc2_w        #95
323: aload_3
324: aload         26
326: invokespecial #26
329: astore        31
331: aconst_null
332: astore        32
334: aload_3
335: aload         32
337: invokeinterface #179,  2
342: astore        33
344: ldc           #54
346: invokestatic  #13
349: goto          354
352: astore        33
354: new           #64
357: dup
358: invokespecial #65
361: ldc           #66
363: invokevirtual #67
366: aload_3
367: invokevirtual #68
370: ldc           #69
372: invokevirtual #67
375: getstatic     #70
378: invokevirtual #68
381: ldc           #66
383: invokevirtual #67
386: invokevirtual #71
389: aload_3
390: getstatic     #70
393: invokevirtual #72
396: invokestatic  #73
399: aload         7
401: invokestatic  #56
404: aload         7
406: invokestatic  #57
409: ldc           #74
411: invokestatic  #59
414: aload         7
416: invokestatic  #60
419: ldc           #74
421: invokestatic  #59
424: aload         9
426: invokestatic  #56
429: aload         9
431: invokestatic  #57
434: ldc           #74
436: invokestatic  #59
439: aload         9
441: invokestatic  #60
444: ldc           #74
446: invokestatic  #59
449: aload         10
451: invokestatic  #56
454: aload         11
456: invokestatic  #56
459: aload         14
461: invokestatic  #56
464: aload         14
466: invokestatic  #61
469: ldc           #134
471: invokestatic  #59
474: aload         15
476: invokestatic  #56
479: aload         16
481: invokestatic  #56
484: aload         17
486: invokestatic  #56
489: new           #64
492: dup
493: invokespecial #65
496: ldc           #66
498: invokevirtual #67
501: aload         21
503: invokevirtual #68
506: ldc           #69
508: invokevirtual #67
511: getstatic     #70
514: invokevirtual #68
517: ldc           #66
519: invokevirtual #67
522: invokevirtual #71
525: aload         21
527: getstatic     #70
530: invokevirtual #72
533: invokestatic  #73
536: new           #64
539: dup
540: invokespecial #65
543: ldc           #66
545: invokevirtual #67
548: aload         24
550: invokevirtual #68
553: ldc           #69
555: invokevirtual #67
558: getstatic     #70
561: invokevirtual #68
564: ldc           #66
566: invokevirtual #67
569: invokevirtual #71
572: aload         24
574: getstatic     #70
577: invokevirtual #72
580: invokestatic  #73
583: aload         26
585: invokestatic  #56
588: aload         26
590: invokestatic  #57
593: ldc           #63
595: invokestatic  #59
598: aload         26
600: invokestatic  #60
603: ldc           #63
605: invokestatic  #59
608: aload         27
610: invokestatic  #56
613: aload         29
615: invokestatic  #56
618: return
Exception table:
from    to  target type
334   349   352   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test287
Start line: 14546
End line: 14562
Method source code: 
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        int int10 = levenbergMarquardtOptimizer0.getIterations();
        int int11 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        int int12 = levenbergMarquardtOptimizer0.getIterations();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #489
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: aload_1
63: invokevirtual #126
66: istore_3
67: aload_1
68: invokevirtual #133
71: istore        4
73: aload_1
74: invokevirtual #126
77: istore        5
79: new           #64
82: dup
83: invokespecial #65
86: ldc           #66
88: invokevirtual #67
91: iload_2
92: invokevirtual #102
95: ldc           #69
97: invokevirtual #67
100: sipush        1000
103: invokevirtual #102
106: ldc           #66
108: invokevirtual #67
111: invokevirtual #71
114: iload_2
115: sipush        1000
118: if_icmpne     125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #73
129: new           #64
132: dup
133: invokespecial #65
136: ldc           #66
138: invokevirtual #67
141: iload_3
142: invokevirtual #102
145: ldc           #69
147: invokevirtual #67
150: iconst_0
151: invokevirtual #102
154: ldc           #66
156: invokevirtual #67
159: invokevirtual #71
162: iload_3
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #73
174: new           #64
177: dup
178: invokespecial #65
181: ldc           #66
183: invokevirtual #67
186: iload         4
188: invokevirtual #102
191: ldc           #69
193: invokevirtual #67
196: iconst_0
197: invokevirtual #102
200: ldc           #66
202: invokevirtual #67
205: invokevirtual #71
208: iload         4
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #73
221: new           #64
224: dup
225: invokespecial #65
228: ldc           #66
230: invokevirtual #67
233: iload         5
235: invokevirtual #102
238: ldc           #69
240: invokevirtual #67
243: iconst_0
244: invokevirtual #102
247: ldc           #66
249: invokevirtual #67
252: invokevirtual #71
255: iload         5
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #73
268: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test288
Start line: 14565
End line: 14655
Method source code: 
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        double[] doubleArray82 = levenbergMarquardtOptimizer0.point;
        levenbergMarquardtOptimizer0.setMaxIterations(0);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #98
551: istore        47
553: aload_1
554: getfield      #52
557: astore        48
559: aload_1
560: iconst_0
561: invokevirtual #182
564: aload_3
565: invokestatic  #56
568: aload_3
569: invokestatic  #57
572: ldc           #58
574: invokestatic  #59
577: aload_3
578: invokestatic  #60
581: ldc           #58
583: invokestatic  #59
586: aload         7
588: invokestatic  #56
591: aload         7
593: invokestatic  #57
596: ldc           #58
598: invokestatic  #59
601: aload         7
603: invokestatic  #60
606: ldc           #58
608: invokestatic  #59
611: aload         10
613: invokestatic  #56
616: aload         10
618: invokestatic  #61
621: ldc           #62
623: invokestatic  #59
626: aload         12
628: invokestatic  #56
631: aload         12
633: invokestatic  #57
636: ldc           #63
638: invokestatic  #59
641: aload         12
643: invokestatic  #60
646: ldc           #63
648: invokestatic  #59
651: aload         13
653: invokestatic  #56
656: new           #64
659: dup
660: invokespecial #65
663: ldc           #66
665: invokevirtual #67
668: aload         17
670: invokevirtual #68
673: ldc           #69
675: invokevirtual #67
678: getstatic     #70
681: invokevirtual #68
684: ldc           #66
686: invokevirtual #67
689: invokevirtual #71
692: aload         17
694: getstatic     #70
697: invokevirtual #72
700: invokestatic  #73
703: aload         19
705: invokestatic  #56
708: aload         19
710: invokestatic  #57
713: ldc           #63
715: invokestatic  #59
718: aload         19
720: invokestatic  #60
723: ldc           #63
725: invokestatic  #59
728: aload         20
730: invokestatic  #56
733: new           #64
736: dup
737: invokespecial #65
740: ldc           #66
742: invokevirtual #67
745: aload         25
747: invokevirtual #68
750: ldc           #69
752: invokevirtual #67
755: getstatic     #70
758: invokevirtual #68
761: ldc           #66
763: invokevirtual #67
766: invokevirtual #71
769: aload         25
771: getstatic     #70
774: invokevirtual #72
777: invokestatic  #73
780: aload         27
782: invokestatic  #56
785: aload         27
787: invokestatic  #57
790: ldc           #63
792: invokestatic  #59
795: aload         27
797: invokestatic  #60
800: ldc           #63
802: invokestatic  #59
805: aload         28
807: invokestatic  #56
810: aload         30
812: invokestatic  #56
815: aload         31
817: invokestatic  #56
820: aload         33
822: invokestatic  #56
825: aload         37
827: invokestatic  #56
830: aload         37
832: invokestatic  #57
835: ldc           #74
837: invokestatic  #59
840: aload         37
842: invokestatic  #60
845: ldc           #74
847: invokestatic  #59
850: aload         39
852: invokestatic  #56
855: aload         39
857: invokestatic  #57
860: ldc           #74
862: invokestatic  #59
865: aload         39
867: invokestatic  #60
870: ldc           #74
872: invokestatic  #59
875: aload         40
877: invokestatic  #56
880: new           #64
883: dup
884: invokespecial #65
887: ldc           #66
889: invokevirtual #67
892: dload         44
894: invokevirtual #79
897: ldc           #69
899: invokevirtual #67
902: dconst_0
903: invokevirtual #79
906: ldc           #66
908: invokevirtual #67
911: invokevirtual #71
914: dload         44
916: dconst_0
917: dcmpl
918: ifne          925
921: iconst_1
922: goto          926
925: iconst_0
926: invokestatic  #73
929: aload         46
931: invokestatic  #106
934: new           #64
937: dup
938: invokespecial #65
941: ldc           #66
943: invokevirtual #67
946: iload         47
948: invokevirtual #102
951: ldc           #69
953: invokevirtual #67
956: sipush        1000
959: invokevirtual #102
962: ldc           #66
964: invokevirtual #67
967: invokevirtual #71
970: iload         47
972: sipush        1000
975: if_icmpne     982
978: iconst_1
979: goto          983
982: iconst_0
983: invokestatic  #73
986: aload         48
988: invokestatic  #56
991: aload         48
993: invokestatic  #61
996: ldc           #62
998: invokestatic  #59
1001: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test289
Start line: 14658
End line: 14668
Method source code: 
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        double double1 = levenbergMarquardtOptimizer0.cost;
        double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(vectorialConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: getfield      #97
37: dstore_2
38: aload_1
39: getfield      #122
42: astore        4
44: aload_1
45: invokevirtual #104
48: astore        5
50: new           #64
53: dup
54: invokespecial #65
57: ldc           #66
59: invokevirtual #67
62: dload_2
63: invokevirtual #79
66: ldc           #69
68: invokevirtual #67
71: dconst_0
72: invokevirtual #79
75: ldc           #66
77: invokevirtual #67
80: invokevirtual #71
83: dload_2
84: dconst_0
85: dcmpl
86: ifne          93
89: iconst_1
90: goto          94
93: iconst_0
94: invokestatic  #73
97: aload         4
99: invokestatic  #106
102: aload         5
104: invokestatic  #106
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test290
Start line: 14671
End line: 14684
Method source code: 
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        int int7 = levenbergMarquardtOptimizer0.getIterations();
        int int8 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1000 + "'", int8 == 1000);
        org.junit.Assert.assertNull(vectorialConvergenceChecker9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #492
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: invokevirtual #126
54: istore_2
55: aload_1
56: invokevirtual #98
59: istore_3
60: aload_1
61: invokevirtual #104
64: astore        4
66: new           #64
69: dup
70: invokespecial #65
73: ldc           #66
75: invokevirtual #67
78: iload_2
79: invokevirtual #102
82: ldc           #69
84: invokevirtual #67
87: iconst_0
88: invokevirtual #102
91: ldc           #66
93: invokevirtual #67
96: invokevirtual #71
99: iload_2
100: ifne          107
103: iconst_1
104: goto          108
107: iconst_0
108: invokestatic  #73
111: new           #64
114: dup
115: invokespecial #65
118: ldc           #66
120: invokevirtual #67
123: iload_3
124: invokevirtual #102
127: ldc           #69
129: invokevirtual #67
132: sipush        1000
135: invokevirtual #102
138: ldc           #66
140: invokevirtual #67
143: invokevirtual #71
146: iload_3
147: sipush        1000
150: if_icmpne     157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #73
161: aload         4
163: invokestatic  #106
166: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test291
Start line: 14687
End line: 14706
Method source code: 
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        levenbergMarquardtOptimizer0.setMaxEvaluations(100);
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.checker;
        int int15 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker16 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #493
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: bipush        100
78: invokevirtual #76
81: aload_1
82: getfield      #140
85: astore        4
87: aload_1
88: invokevirtual #133
91: istore        5
93: aload_1
94: invokevirtual #104
97: astore        6
99: new           #64
102: dup
103: invokespecial #65
106: ldc           #66
108: invokevirtual #67
111: iload_2
112: invokevirtual #102
115: ldc           #69
117: invokevirtual #67
120: sipush        1000
123: invokevirtual #102
126: ldc           #66
128: invokevirtual #67
131: invokevirtual #71
134: iload_2
135: sipush        1000
138: if_icmpne     145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #73
149: aload         4
151: invokestatic  #56
154: new           #64
157: dup
158: invokespecial #65
161: ldc           #66
163: invokevirtual #67
166: iload         5
168: invokevirtual #102
171: ldc           #69
173: invokevirtual #67
176: iconst_0
177: invokevirtual #102
180: ldc           #66
182: invokevirtual #67
185: invokevirtual #71
188: iload         5
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #73
201: aload         6
203: invokestatic  #56
206: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test292
Start line: 14709
End line: 14802
Method source code: 
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9);
        org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20);
        double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d };
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33);
        java.lang.Throwable throwable37 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37);
        org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49);
        org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray56 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56);
        java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56);
        java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64);
        org.apache.commons.math.exception.util.Localizable localizable66 = null;
        java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69);
        java.lang.Object[] objArray71 = mathRuntimeException70.getArguments();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71);
        java.lang.Object[] objArray74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74);
        levenbergMarquardtOptimizer0.point = doubleArray28;
        levenbergMarquardtOptimizer0.setMaxEvaluations(1);
        double double79 = levenbergMarquardtOptimizer0.getChiSquare();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        int int81 = levenbergMarquardtOptimizer0.getMaxIterations();
        levenbergMarquardtOptimizer0.cost = '4';
        double[][] doubleArray84 = levenbergMarquardtOptimizer0.jacobian;
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker85 = null;
        levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker85);
        int int87 = levenbergMarquardtOptimizer0.getEvaluations();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(nullPointerException60);
        org.junit.Assert.assertNotNull(nullPointerException62);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]");
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNull(vectorialConvergenceChecker80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #494
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aconst_null
34: astore_2
35: iconst_5
36: anewarray     #5
39: dup
40: iconst_0
41: iconst_0
42: invokestatic  #16
45: aastore
46: dup
47: iconst_1
48: iconst_0
49: invokestatic  #17
52: aastore
53: dup
54: iconst_2
55: bipush        52
57: invokestatic  #18
60: aastore
61: dup
62: iconst_3
63: ldc2_w        #19
66: invokestatic  #21
69: aastore
70: dup
71: iconst_4
72: dconst_1
73: invokestatic  #22
76: aastore
77: astore_3
78: new           #23
81: dup
82: ldc2_w        #24
85: aload_2
86: aload_3
87: invokespecial #26
90: astore        4
92: new           #27
95: dup
96: ldc           #28
98: aload_3
99: invokespecial #29
102: astore        5
104: aconst_null
105: astore        6
107: iconst_5
108: anewarray     #5
111: dup
112: iconst_0
113: iconst_0
114: invokestatic  #16
117: aastore
118: dup
119: iconst_1
120: iconst_0
121: invokestatic  #17
124: aastore
125: dup
126: iconst_2
127: bipush        52
129: invokestatic  #18
132: aastore
133: dup
134: iconst_3
135: ldc2_w        #19
138: invokestatic  #21
141: aastore
142: dup
143: iconst_4
144: dconst_1
145: invokestatic  #22
148: aastore
149: astore        7
151: new           #23
154: dup
155: ldc2_w        #24
158: aload         6
160: aload         7
162: invokespecial #26
165: astore        8
167: new           #27
170: dup
171: aload         5
173: ldc           #28
175: aload         7
177: invokespecial #30
180: astore        9
182: iconst_5
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #31
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #33
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #31
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #31
208: dastore
209: dup
210: iconst_4
211: dconst_1
212: dastore
213: astore        10
215: aconst_null
216: astore        11
218: iconst_1
219: anewarray     #5
222: dup
223: iconst_0
224: iconst_1
225: invokestatic  #35
228: aastore
229: astore        12
231: ldc           #28
233: aload         12
235: invokestatic  #36
238: astore        13
240: new           #37
243: dup
244: bipush        100
246: aload         11
248: aload         12
250: invokespecial #38
253: astore        14
255: aconst_null
256: astore        15
258: new           #27
261: dup
262: aload         15
264: invokespecial #39
267: astore        16
269: aload         16
271: invokevirtual #40
274: astore        17
276: aconst_null
277: astore        18
279: iconst_1
280: anewarray     #5
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #35
289: aastore
290: astore        19
292: ldc           #28
294: aload         19
296: invokestatic  #36
299: astore        20
301: new           #37
304: dup
305: bipush        100
307: aload         18
309: aload         19
311: invokespecial #38
314: astore        21
316: aconst_null
317: astore        22
319: aconst_null
320: astore        23
322: new           #27
325: dup
326: aload         23
328: invokespecial #39
331: astore        24
333: aload         24
335: invokevirtual #40
338: astore        25
340: aconst_null
341: astore        26
343: iconst_1
344: anewarray     #5
347: dup
348: iconst_0
349: iconst_1
350: invokestatic  #35
353: aastore
354: astore        27
356: ldc           #28
358: aload         27
360: invokestatic  #36
363: astore        28
365: new           #37
368: dup
369: bipush        100
371: aload         26
373: aload         27
375: invokespecial #38
378: astore        29
380: aload         25
382: aload         27
384: invokestatic  #41
387: astore        30
389: ldc           #42
391: aload         27
393: invokestatic  #43
396: astore        31
398: new           #44
401: dup
402: aload         21
404: aload         22
406: aload         27
408: invokespecial #45
411: astore        32
413: aload         17
415: aload         27
417: invokestatic  #46
420: astore        33
422: aconst_null
423: astore        34
425: new           #27
428: dup
429: aload         34
431: invokespecial #39
434: astore        35
436: aconst_null
437: astore        36
439: iconst_2
440: anewarray     #5
443: dup
444: iconst_0
445: ldc           #28
447: aastore
448: dup
449: iconst_1
450: iconst_1
451: invokestatic  #17
454: aastore
455: astore        37
457: new           #27
460: dup
461: aload         34
463: aload         36
465: aload         37
467: invokespecial #47
470: astore        38
472: aload         38
474: invokevirtual #48
477: astore        39
479: ldc           #42
481: aload         39
483: invokestatic  #49
486: astore        40
488: new           #23
491: dup
492: aload         14
494: dconst_0
495: aload         17
497: aload         39
499: invokespecial #50
502: astore        41
504: aconst_null
505: astore        42
507: new           #23
510: dup
511: aload         5
513: aload         10
515: aload         17
517: aload         42
519: invokespecial #51
522: astore        43
524: aload_1
525: aload         10
527: putfield      #52
530: aload_1
531: iconst_1
532: invokevirtual #76
535: aload_1
536: invokevirtual #77
539: dstore        44
541: aload_1
542: invokevirtual #104
545: astore        46
547: aload_1
548: invokevirtual #98
551: istore        47
553: aload_1
554: ldc2_w        #328
557: putfield      #97
560: aload_1
561: getfield      #131
564: astore        48
566: aconst_null
567: astore        49
569: aload_1
570: aload         49
572: invokevirtual #101
575: aload_1
576: invokevirtual #167
579: istore        50
581: aload_3
582: invokestatic  #56
585: aload_3
586: invokestatic  #57
589: ldc           #58
591: invokestatic  #59
594: aload_3
595: invokestatic  #60
598: ldc           #58
600: invokestatic  #59
603: aload         7
605: invokestatic  #56
608: aload         7
610: invokestatic  #57
613: ldc           #58
615: invokestatic  #59
618: aload         7
620: invokestatic  #60
623: ldc           #58
625: invokestatic  #59
628: aload         10
630: invokestatic  #56
633: aload         10
635: invokestatic  #61
638: ldc           #62
640: invokestatic  #59
643: aload         12
645: invokestatic  #56
648: aload         12
650: invokestatic  #57
653: ldc           #63
655: invokestatic  #59
658: aload         12
660: invokestatic  #60
663: ldc           #63
665: invokestatic  #59
668: aload         13
670: invokestatic  #56
673: new           #64
676: dup
677: invokespecial #65
680: ldc           #66
682: invokevirtual #67
685: aload         17
687: invokevirtual #68
690: ldc           #69
692: invokevirtual #67
695: getstatic     #70
698: invokevirtual #68
701: ldc           #66
703: invokevirtual #67
706: invokevirtual #71
709: aload         17
711: getstatic     #70
714: invokevirtual #72
717: invokestatic  #73
720: aload         19
722: invokestatic  #56
725: aload         19
727: invokestatic  #57
730: ldc           #63
732: invokestatic  #59
735: aload         19
737: invokestatic  #60
740: ldc           #63
742: invokestatic  #59
745: aload         20
747: invokestatic  #56
750: new           #64
753: dup
754: invokespecial #65
757: ldc           #66
759: invokevirtual #67
762: aload         25
764: invokevirtual #68
767: ldc           #69
769: invokevirtual #67
772: getstatic     #70
775: invokevirtual #68
778: ldc           #66
780: invokevirtual #67
783: invokevirtual #71
786: aload         25
788: getstatic     #70
791: invokevirtual #72
794: invokestatic  #73
797: aload         27
799: invokestatic  #56
802: aload         27
804: invokestatic  #57
807: ldc           #63
809: invokestatic  #59
812: aload         27
814: invokestatic  #60
817: ldc           #63
819: invokestatic  #59
822: aload         28
824: invokestatic  #56
827: aload         30
829: invokestatic  #56
832: aload         31
834: invokestatic  #56
837: aload         33
839: invokestatic  #56
842: aload         37
844: invokestatic  #56
847: aload         37
849: invokestatic  #57
852: ldc           #74
854: invokestatic  #59
857: aload         37
859: invokestatic  #60
862: ldc           #74
864: invokestatic  #59
867: aload         39
869: invokestatic  #56
872: aload         39
874: invokestatic  #57
877: ldc           #74
879: invokestatic  #59
882: aload         39
884: invokestatic  #60
887: ldc           #74
889: invokestatic  #59
892: aload         40
894: invokestatic  #56
897: new           #64
900: dup
901: invokespecial #65
904: ldc           #66
906: invokevirtual #67
909: dload         44
911: invokevirtual #79
914: ldc           #69
916: invokevirtual #67
919: dconst_0
920: invokevirtual #79
923: ldc           #66
925: invokevirtual #67
928: invokevirtual #71
931: dload         44
933: dconst_0
934: dcmpl
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #73
946: aload         46
948: invokestatic  #106
951: new           #64
954: dup
955: invokespecial #65
958: ldc           #66
960: invokevirtual #67
963: iload         47
965: invokevirtual #102
968: ldc           #69
970: invokevirtual #67
973: sipush        1000
976: invokevirtual #102
979: ldc           #66
981: invokevirtual #67
984: invokevirtual #71
987: iload         47
989: sipush        1000
992: if_icmpne     999
995: iconst_1
996: goto          1000
999: iconst_0
1000: invokestatic  #73
1003: aload         48
1005: invokestatic  #106
1008: new           #64
1011: dup
1012: invokespecial #65
1015: ldc           #66
1017: invokevirtual #67
1020: iload         50
1022: invokevirtual #102
1025: ldc           #69
1027: invokevirtual #67
1030: iconst_0
1031: invokevirtual #102
1034: ldc           #66
1036: invokevirtual #67
1039: invokevirtual #71
1042: iload         50
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #73
1055: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test293
Start line: 14805
End line: 14881
Method source code: 
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        java.lang.Object[] objArray4 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4);
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4);
        java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9);
        org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12);
        org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { true };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19);
        org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray29 = new double[] { (-1), 1.0f };
        double[][] doubleArray30 = new double[][] { doubleArray29 };
        levenbergMarquardtOptimizer24.jacobian = doubleArray30;
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33);
        org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException34.getLocalizablePattern();
        java.lang.Throwable throwable39 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39);
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 };
        org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44);
        java.lang.Object[] objArray46 = mathRuntimeException45.getArguments();
        java.text.ParseException parseException47 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray46);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException48 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray46);
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(localizable35, objArray46);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer51 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer51.setOrthoTolerance((double) (byte) 0);
        double[] doubleArray56 = new double[] { (-1), 1.0f };
        double[][] doubleArray57 = new double[][] { doubleArray56 };
        levenbergMarquardtOptimizer51.jacobian = doubleArray57;
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray57);
        java.lang.IllegalStateException illegalStateException60 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, (java.lang.Object[]) doubleArray57);
        java.lang.NullPointerException nullPointerException61 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable11, (java.lang.Object[]) doubleArray57);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException5);
        org.junit.Assert.assertNotNull(noSuchElementException7);
        org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + localizable35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable35.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, 1]");
        org.junit.Assert.assertNotNull(parseException47);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException48);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(concurrentModificationException59);
        org.junit.Assert.assertNotNull(illegalStateException60);
        org.junit.Assert.assertNotNull(nullPointerException61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: anewarray     #5
29: dup
30: iconst_0
31: iconst_1
32: invokestatic  #35
35: aastore
36: astore_1
37: ldc           #28
39: aload_1
40: invokestatic  #36
43: astore_2
44: new           #44
47: dup
48: ldc           #142
50: aload_1
51: invokespecial #238
54: astore_3
55: ldc           #42
57: aload_1
58: invokestatic  #239
61: astore        4
63: new           #240
66: dup
67: invokespecial #241
70: astore        5
72: aconst_null
73: astore        6
75: new           #27
78: dup
79: aload         6
81: invokespecial #39
84: astore        7
86: aload         7
88: invokevirtual #40
91: astore        8
93: aconst_null
94: astore        9
96: new           #27
99: dup
100: aload         9
102: invokespecial #39
105: astore        10
107: aload         10
109: invokevirtual #40
112: astore        11
114: aconst_null
115: astore        12
117: iconst_1
118: anewarray     #5
121: dup
122: iconst_0
123: iconst_1
124: invokestatic  #35
127: aastore
128: astore        13
130: ldc           #28
132: aload         13
134: invokestatic  #36
137: astore        14
139: new           #37
142: dup
143: bipush        100
145: aload         12
147: aload         13
149: invokespecial #38
152: astore        15
154: aload         11
156: aload         13
158: invokestatic  #41
161: astore        16
163: new           #27
166: dup
167: aload         5
169: aload         8
171: aload         13
173: invokespecial #47
176: astore        17
178: new           #8
181: dup
182: invokespecial #9
185: astore        18
187: aload         18
189: dconst_0
190: invokevirtual #129
193: iconst_2
194: newarray       double
196: dup
197: iconst_0
198: ldc2_w        #31
201: dastore
202: dup
203: iconst_1
204: dconst_1
205: dastore
206: astore        19
208: iconst_1
209: anewarray     #130
212: dup
213: iconst_0
214: aload         19
216: aastore
217: astore        20
219: aload         18
221: aload         20
223: putfield      #131
226: new           #44
229: dup
230: aload         4
232: aload         8
234: aload         20
236: checkcast     #143
239: invokespecial #45
242: astore        21
244: aconst_null
245: astore        22
247: new           #27
250: dup
251: aload         22
253: invokespecial #39
256: astore        23
258: aload         23
260: invokevirtual #40
263: astore        24
265: aconst_null
266: astore        25
268: new           #27
271: dup
272: aload         25
274: invokespecial #39
277: astore        26
279: aconst_null
280: astore        27
282: iconst_2
283: anewarray     #5
286: dup
287: iconst_0
288: ldc           #28
290: aastore
291: dup
292: iconst_1
293: iconst_1
294: invokestatic  #17
297: aastore
298: astore        28
300: new           #27
303: dup
304: aload         25
306: aload         27
308: aload         28
310: invokespecial #47
313: astore        29
315: aload         29
317: invokevirtual #48
320: astore        30
322: bipush        52
324: ldc           #28
326: aload         30
328: invokestatic  #176
331: astore        31
333: ldc           #142
335: aload         30
337: invokestatic  #49
340: astore        32
342: new           #27
345: dup
346: aload         24
348: aload         30
350: invokespecial #177
353: astore        33
355: new           #8
358: dup
359: invokespecial #9
362: astore        34
364: aload         34
366: dconst_0
367: invokevirtual #129
370: iconst_2
371: newarray       double
373: dup
374: iconst_0
375: ldc2_w        #31
378: dastore
379: dup
380: iconst_1
381: dconst_1
382: dastore
383: astore        35
385: iconst_1
386: anewarray     #130
389: dup
390: iconst_0
391: aload         35
393: aastore
394: astore        36
396: aload         34
398: aload         36
400: putfield      #131
403: ldc           #28
405: aload         36
407: checkcast     #143
410: invokestatic  #36
413: astore        37
415: aload         24
417: aload         36
419: checkcast     #143
422: invokestatic  #178
425: astore        38
427: aload         8
429: aload         36
431: checkcast     #143
434: invokestatic  #46
437: astore        39
439: aload_1
440: invokestatic  #56
443: aload_1
444: invokestatic  #57
447: ldc           #63
449: invokestatic  #59
452: aload_1
453: invokestatic  #60
456: ldc           #63
458: invokestatic  #59
461: aload_2
462: invokestatic  #56
465: aload         4
467: invokestatic  #56
470: new           #64
473: dup
474: invokespecial #65
477: ldc           #66
479: invokevirtual #67
482: aload         8
484: invokevirtual #68
487: ldc           #69
489: invokevirtual #67
492: getstatic     #70
495: invokevirtual #68
498: ldc           #66
500: invokevirtual #67
503: invokevirtual #71
506: aload         8
508: getstatic     #70
511: invokevirtual #72
514: invokestatic  #73
517: new           #64
520: dup
521: invokespecial #65
524: ldc           #66
526: invokevirtual #67
529: aload         11
531: invokevirtual #68
534: ldc           #69
536: invokevirtual #67
539: getstatic     #70
542: invokevirtual #68
545: ldc           #66
547: invokevirtual #67
550: invokevirtual #71
553: aload         11
555: getstatic     #70
558: invokevirtual #72
561: invokestatic  #73
564: aload         13
566: invokestatic  #56
569: aload         13
571: invokestatic  #57
574: ldc           #63
576: invokestatic  #59
579: aload         13
581: invokestatic  #60
584: ldc           #63
586: invokestatic  #59
589: aload         14
591: invokestatic  #56
594: aload         16
596: invokestatic  #56
599: aload         19
601: invokestatic  #56
604: aload         19
606: invokestatic  #61
609: ldc           #134
611: invokestatic  #59
614: aload         20
616: invokestatic  #56
619: new           #64
622: dup
623: invokespecial #65
626: ldc           #66
628: invokevirtual #67
631: aload         24
633: invokevirtual #68
636: ldc           #69
638: invokevirtual #67
641: getstatic     #70
644: invokevirtual #68
647: ldc           #66
649: invokevirtual #67
652: invokevirtual #71
655: aload         24
657: getstatic     #70
660: invokevirtual #72
663: invokestatic  #73
666: aload         28
668: invokestatic  #56
671: aload         28
673: invokestatic  #57
676: ldc           #74
678: invokestatic  #59
681: aload         28
683: invokestatic  #60
686: ldc           #74
688: invokestatic  #59
691: aload         30
693: invokestatic  #56
696: aload         30
698: invokestatic  #57
701: ldc           #74
703: invokestatic  #59
706: aload         30
708: invokestatic  #60
711: ldc           #74
713: invokestatic  #59
716: aload         31
718: invokestatic  #56
721: aload         32
723: invokestatic  #56
726: aload         35
728: invokestatic  #56
731: aload         35
733: invokestatic  #61
736: ldc           #134
738: invokestatic  #59
741: aload         36
743: invokestatic  #56
746: aload         37
748: invokestatic  #56
751: aload         38
753: invokestatic  #56
756: aload         39
758: invokestatic  #56
761: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test294
Start line: 14884
End line: 14897
Method source code: 
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        levenbergMarquardtOptimizer0.incrementIterationsCounter();
        double double10 = levenbergMarquardtOptimizer0.getChiSquare();
        int int11 = levenbergMarquardtOptimizer0.getJacobianEvaluations();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10000.0d + "'", double10 == 10000.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #496
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #10
61: aload_1
62: invokevirtual #77
65: dstore_2
66: aload_1
67: invokevirtual #133
70: istore        4
72: new           #64
75: dup
76: invokespecial #65
79: ldc           #66
81: invokevirtual #67
84: dload_2
85: invokevirtual #79
88: ldc           #69
90: invokevirtual #67
93: ldc2_w        #299
96: invokevirtual #79
99: ldc           #66
101: invokevirtual #67
104: invokevirtual #71
107: dload_2
108: ldc2_w        #299
111: dcmpl
112: ifne          119
115: iconst_1
116: goto          120
119: iconst_0
120: invokestatic  #73
123: new           #64
126: dup
127: invokespecial #65
130: ldc           #66
132: invokevirtual #67
135: iload         4
137: invokevirtual #102
140: ldc           #69
142: invokevirtual #67
145: iconst_0
146: invokevirtual #102
149: ldc           #66
151: invokevirtual #67
154: invokevirtual #71
157: iload         4
159: ifne          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #73
170: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test295
Start line: 14900
End line: 14918
Method source code: 
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d));
        levenbergMarquardtOptimizer0.cost = (short) 100;
        int int9 = levenbergMarquardtOptimizer0.getMaxIterations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer0.getEvaluations();
        int int13 = levenbergMarquardtOptimizer0.getIterations();
        org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vectorialConvergenceChecker14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #497
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: ldc2_w        #31
47: invokevirtual #94
50: aload_1
51: ldc2_w        #95
54: putfield      #97
57: aload_1
58: invokevirtual #98
61: istore_2
62: new           #99
65: dup
66: invokespecial #100
69: astore_3
70: aload_1
71: aload_3
72: invokevirtual #101
75: aload_1
76: invokevirtual #167
79: istore        4
81: aload_1
82: invokevirtual #126
85: istore        5
87: aload_1
88: invokevirtual #104
91: astore        6
93: new           #64
96: dup
97: invokespecial #65
100: ldc           #66
102: invokevirtual #67
105: iload_2
106: invokevirtual #102
109: ldc           #69
111: invokevirtual #67
114: sipush        1000
117: invokevirtual #102
120: ldc           #66
122: invokevirtual #67
125: invokevirtual #71
128: iload_2
129: sipush        1000
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #73
143: new           #64
146: dup
147: invokespecial #65
150: ldc           #66
152: invokevirtual #67
155: iload         4
157: invokevirtual #102
160: ldc           #69
162: invokevirtual #67
165: iconst_0
166: invokevirtual #102
169: ldc           #66
171: invokevirtual #67
174: invokevirtual #71
177: iload         4
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #73
190: new           #64
193: dup
194: invokespecial #65
197: ldc           #66
199: invokevirtual #67
202: iload         5
204: invokevirtual #102
207: ldc           #69
209: invokevirtual #67
212: iconst_0
213: invokevirtual #102
216: ldc           #66
218: invokevirtual #67
221: invokevirtual #71
224: iload         5
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #73
237: aload         6
239: invokestatic  #56
242: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/RegressionTest0.class
Class name: RegressionTest0
Method name: test296
Start line: 14921
End line: 14939
Method source code: 
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        levenbergMarquardtOptimizer0.rows = 0;
        levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1);
        double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights;
        levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L);
        double[] doubleArray8 = levenbergMarquardtOptimizer0.residualsWeights;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray9 = levenbergMarquardtOptimizer0.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.optimization.OptimizationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #498
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #9
32: astore_1
33: aload_1
34: iconst_0
35: putfield      #93
38: aload_1
39: iconst_1
40: invokevirtual #76
43: aload_1
44: getfield      #113
47: astore_2
48: aload_1
49: dconst_0
50: invokevirtual #129
53: aload_1
54: getfield      #113
57: astore_3
58: aload_1
59: invokevirtual #11
62: astore        4
64: ldc           #12
66: invokestatic  #13
69: goto          74
72: astore        4
74: aload_2
75: invokestatic  #106
78: aload_3
79: invokestatic  #106
82: return
Exception table:
from    to  target type
58    69    72   Class org/apache/commons/math/optimization/OptimizationException
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearFullRank
Start line: 99
End line: 104
Method source code: 
  public void testMinpackLinearFullRank() {
    minpackTest(new LinearFullRankFunction(10, 5, 1.0,
                                           5.0, 2.23606797749979), false);
    minpackTest(new LinearFullRankFunction(50, 5, 1.0,
                                           8.06225774829855, 6.70820393249937), false);
  }
Method byte code: 
0: aload_0
1: new           #2
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: ldc2_w        #3
12: ldc2_w        #5
15: invokespecial #7
18: iconst_0
19: invokespecial #8
22: aload_0
23: new           #2
26: dup
27: bipush        50
29: iconst_5
30: dconst_1
31: ldc2_w        #9
34: ldc2_w        #11
37: invokespecial #7
40: iconst_0
41: invokespecial #8
44: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearRank1
Start line: 106
End line: 111
Method source code: 
  public void testMinpackLinearRank1() {
    minpackTest(new LinearRank1Function(10, 5, 1.0,
                                        291.521868819476, 1.4638501094228), false);
    minpackTest(new LinearRank1Function(50, 5, 1.0,
                                        3101.60039334535, 3.48263016573496), false);
  }
Method byte code: 
0: aload_0
1: new           #13
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: ldc2_w        #14
12: ldc2_w        #16
15: invokespecial #18
18: iconst_0
19: invokespecial #8
22: aload_0
23: new           #13
26: dup
27: bipush        50
29: iconst_5
30: dconst_1
31: ldc2_w        #19
34: ldc2_w        #21
37: invokespecial #18
40: iconst_0
41: invokespecial #8
44: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearRank1ZeroColsAndRows
Start line: 113
End line: 116
Method source code: 
  public void testMinpackLinearRank1ZeroColsAndRows() {
    minpackTest(new LinearRank1ZeroColsAndRowsFunction(10, 5, 1.0), false);
    minpackTest(new LinearRank1ZeroColsAndRowsFunction(50, 5, 1.0), false);
  }
Method byte code: 
0: aload_0
1: new           #23
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: invokespecial #24
12: iconst_0
13: invokespecial #8
16: aload_0
17: new           #23
20: dup
21: bipush        50
23: iconst_5
24: dconst_1
25: invokespecial #24
28: iconst_0
29: invokespecial #8
32: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackRosenbrok
Start line: 118
End line: 125
Method source code: 
  public void testMinpackRosenbrok() {
    minpackTest(new RosenbrockFunction(new double[] { -1.2, 1.0 },
                                       Math.sqrt(24.2)), false);
    minpackTest(new RosenbrockFunction(new double[] { -12.0, 10.0 },
                                       Math.sqrt(1795769.0)), false);
    minpackTest(new RosenbrockFunction(new double[] { -120.0, 100.0 },
                                       11.0 * Math.sqrt(169000121.0)), false);
  }
Method byte code: 
0: aload_0
1: new           #25
4: dup
5: iconst_2
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #26
13: dastore
14: dup
15: iconst_1
16: dconst_1
17: dastore
18: ldc2_w        #28
21: invokestatic  #30
24: invokespecial #31
27: iconst_0
28: invokespecial #8
31: aload_0
32: new           #25
35: dup
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #32
44: dastore
45: dup
46: iconst_1
47: ldc2_w        #34
50: dastore
51: ldc2_w        #36
54: invokestatic  #30
57: invokespecial #31
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #25
68: dup
69: iconst_2
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #38
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #40
83: dastore
84: ldc2_w        #42
87: ldc2_w        #44
90: invokestatic  #30
93: dmul
94: invokespecial #31
97: iconst_0
98: invokespecial #8
101: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackHelicalValley
Start line: 127
End line: 134
Method source code: 
  public void testMinpackHelicalValley() {
    minpackTest(new HelicalValleyFunction(new double[] { -1.0, 0.0, 0.0 },
                                          50.0), false);
    minpackTest(new HelicalValleyFunction(new double[] { -10.0, 0.0, 0.0 },
                                          102.95630140987), false);
    minpackTest(new HelicalValleyFunction(new double[] { -100.0, 0.0, 0.0},
                                          991.261822123701), false);
  }
Method byte code: 
0: aload_0
1: new           #46
4: dup
5: iconst_3
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #47
13: dastore
14: dup
15: iconst_1
16: dconst_0
17: dastore
18: dup
19: iconst_2
20: dconst_0
21: dastore
22: ldc2_w        #49
25: invokespecial #51
28: iconst_0
29: invokespecial #8
32: aload_0
33: new           #46
36: dup
37: iconst_3
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #52
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: dup
51: iconst_2
52: dconst_0
53: dastore
54: ldc2_w        #54
57: invokespecial #51
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #46
68: dup
69: iconst_3
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #56
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: dconst_0
85: dastore
86: ldc2_w        #58
89: invokespecial #51
92: iconst_0
93: invokespecial #8
96: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackPowellSingular
Start line: 136
End line: 143
Method source code: 
  public void testMinpackPowellSingular() {
    minpackTest(new PowellSingularFunction(new double[] { 3.0, -1.0, 0.0, 1.0 },
                                           14.6628782986152), false);
    minpackTest(new PowellSingularFunction(new double[] { 30.0, -10.0, 0.0, 10.0 },
                                           1270.9838708654), false);
    minpackTest(new PowellSingularFunction(new double[] { 300.0, -100.0, 0.0, 100.0 },
                                           126887.903284750), false);
  }
Method byte code: 
0: aload_0
1: new           #60
4: dup
5: iconst_4
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #61
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #47
19: dastore
20: dup
21: iconst_2
22: dconst_0
23: dastore
24: dup
25: iconst_3
26: dconst_1
27: dastore
28: ldc2_w        #63
31: invokespecial #65
34: iconst_0
35: invokespecial #8
38: aload_0
39: new           #60
42: dup
43: iconst_4
44: newarray       double
46: dup
47: iconst_0
48: ldc2_w        #66
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #52
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: ldc2_w        #34
67: dastore
68: ldc2_w        #68
71: invokespecial #65
74: iconst_0
75: invokespecial #8
78: aload_0
79: new           #60
82: dup
83: iconst_4
84: newarray       double
86: dup
87: iconst_0
88: ldc2_w        #70
91: dastore
92: dup
93: iconst_1
94: ldc2_w        #56
97: dastore
98: dup
99: iconst_2
100: dconst_0
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #40
107: dastore
108: ldc2_w        #72
111: invokespecial #65
114: iconst_0
115: invokespecial #8
118: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackFreudensteinRoth
Start line: 145
End line: 164
Method source code: 
  public void testMinpackFreudensteinRoth() {
    minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 },
                                             20.0124960961895, 6.99887517584575,
                                             new double[] {
                                               11.4124844654993,
                                               -0.896827913731509
                                             }), false);
    minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },
                                             12432.833948863, 6.9988751744895,
                                             new double[] {
                                               11.4130046614746,
                                               -0.896796038685958
                                             }), false);
    minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },
                                             11426454.595762, 6.99887517242903,
                                             new double[] {
                                               11.4127817857886,
                                               -0.89680510749204
                                             }), false);
  }
Method byte code: 
0: aload_0
1: new           #74
4: dup
5: iconst_2
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #75
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #77
19: dastore
20: ldc2_w        #79
23: ldc2_w        #81
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #83
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #85
40: dastore
41: invokespecial #87
44: iconst_0
45: invokespecial #8
48: aload_0
49: new           #74
52: dup
53: iconst_2
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #3
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #88
67: dastore
68: ldc2_w        #90
71: ldc2_w        #92
74: iconst_2
75: newarray       double
77: dup
78: iconst_0
79: ldc2_w        #94
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #96
88: dastore
89: invokespecial #87
92: iconst_0
93: invokespecial #8
96: aload_0
97: new           #74
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #49
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #98
115: dastore
116: ldc2_w        #100
119: ldc2_w        #102
122: iconst_2
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #104
130: dastore
131: dup
132: iconst_1
133: ldc2_w        #106
136: dastore
137: invokespecial #87
140: iconst_0
141: invokespecial #8
144: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBard
Start line: 166
End line: 185
Method source code: 
  public void testMinpackBard() {
    minpackTest(new BardFunction(1.0, 6.45613629515967, 0.0906359603390466,
                                 new double[] {
                                   0.0824105765758334,
                                   1.1330366534715,
                                   2.34369463894115
                                 }), false);
    minpackTest(new BardFunction(10.0, 36.1418531596785, 4.17476870138539,
                                 new double[] {
                                   0.840666673818329,
                                   -158848033.259565,
                                   -164378671.653535
                                 }), false);
    minpackTest(new BardFunction(100.0, 384.114678637399, 4.17476870135969,
                                 new double[] {
                                   0.840666673867645,
                                   -158946167.205518,
                                   -164464906.857771
                                 }), false);
  }
Method byte code: 
0: aload_0
1: new           #108
4: dup
5: dconst_1
6: ldc2_w        #109
9: ldc2_w        #111
12: iconst_3
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #113
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #115
26: dastore
27: dup
28: iconst_2
29: ldc2_w        #117
32: dastore
33: invokespecial #119
36: iconst_0
37: invokespecial #8
40: aload_0
41: new           #108
44: dup
45: ldc2_w        #34
48: ldc2_w        #120
51: ldc2_w        #122
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #124
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #126
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #128
74: dastore
75: invokespecial #119
78: iconst_0
79: invokespecial #8
82: aload_0
83: new           #108
86: dup
87: ldc2_w        #40
90: ldc2_w        #130
93: ldc2_w        #132
96: iconst_3
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #134
104: dastore
105: dup
106: iconst_1
107: ldc2_w        #136
110: dastore
111: dup
112: iconst_2
113: ldc2_w        #138
116: dastore
117: invokespecial #119
120: iconst_0
121: invokespecial #8
124: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackKowalikOsborne
Start line: 187
End line: 215
Method source code: 
  public void testMinpackKowalikOsborne() {
    minpackTest(new KowalikOsborneFunction(new double[] { 0.25, 0.39, 0.415, 0.39 },
                                           0.0728915102882945,
                                           0.017535837721129,
                                           new double[] {
                                             0.192807810476249,
                                             0.191262653354071,
                                             0.123052801046931,
                                             0.136053221150517
                                           }), false);
    minpackTest(new KowalikOsborneFunction(new double[] { 2.5, 3.9, 4.15, 3.9 },
                                           2.97937007555202,
                                           0.032052192917937,
                                           new double[] {
                                             728675.473768287,
                                             -14.0758803129393,
                                             -32977797.7841797,
                                             -20571594.1977912
                                           }), false);
    minpackTest(new KowalikOsborneFunction(new double[] { 25.0, 39.0, 41.5, 39.0 },
                                           29.9590617016037,
                                           0.0175364017658228,
                                           new double[] {
                                             0.192948328597594,
                                             0.188053165007911,
                                             0.122430604321144,
                                             0.134575665392506
                                           }), true);
  }
Method byte code: 
0: aload_0
1: new           #140
4: dup
5: iconst_4
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #141
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #143
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #145
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #143
31: dastore
32: ldc2_w        #147
35: ldc2_w        #149
38: iconst_4
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #151
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #153
52: dastore
53: dup
54: iconst_2
55: ldc2_w        #155
58: dastore
59: dup
60: iconst_3
61: ldc2_w        #157
64: dastore
65: invokespecial #159
68: iconst_0
69: invokespecial #8
72: aload_0
73: new           #140
76: dup
77: iconst_4
78: newarray       double
80: dup
81: iconst_0
82: ldc2_w        #160
85: dastore
86: dup
87: iconst_1
88: ldc2_w        #162
91: dastore
92: dup
93: iconst_2
94: ldc2_w        #164
97: dastore
98: dup
99: iconst_3
100: ldc2_w        #162
103: dastore
104: ldc2_w        #166
107: ldc2_w        #168
110: iconst_4
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #170
118: dastore
119: dup
120: iconst_1
121: ldc2_w        #172
124: dastore
125: dup
126: iconst_2
127: ldc2_w        #174
130: dastore
131: dup
132: iconst_3
133: ldc2_w        #176
136: dastore
137: invokespecial #159
140: iconst_0
141: invokespecial #8
144: aload_0
145: new           #140
148: dup
149: iconst_4
150: newarray       double
152: dup
153: iconst_0
154: ldc2_w        #178
157: dastore
158: dup
159: iconst_1
160: ldc2_w        #180
163: dastore
164: dup
165: iconst_2
166: ldc2_w        #182
169: dastore
170: dup
171: iconst_3
172: ldc2_w        #180
175: dastore
176: ldc2_w        #184
179: ldc2_w        #186
182: iconst_4
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #188
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #190
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #192
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #194
208: dastore
209: invokespecial #159
212: iconst_1
213: invokespecial #8
216: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackMeyer
Start line: 217
End line: 232
Method source code: 
  public void testMinpackMeyer() {
    minpackTest(new MeyerFunction(new double[] { 0.02, 4000.0, 250.0 },
                                  41153.4665543031, 9.37794514651874,
                                  new double[] {
                                    0.00560963647102661,
                                    6181.34634628659,
                                    345.223634624144
                                  }), false);
    minpackTest(new MeyerFunction(new double[] { 0.2, 40000.0, 2500.0 },
                                  4168216.89130846, 792.917871779501,
                                  new double[] {
                                    1.42367074157994e-11,
                                    33695.7133432541,
                                    901.268527953801
                                  }), true);
  }
Method byte code: 
0: aload_0
1: new           #196
4: dup
5: iconst_3
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #197
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #199
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #201
25: dastore
26: ldc2_w        #203
29: ldc2_w        #205
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #207
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #209
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #211
52: dastore
53: invokespecial #213
56: iconst_0
57: invokespecial #8
60: aload_0
61: new           #196
64: dup
65: iconst_3
66: newarray       double
68: dup
69: iconst_0
70: ldc2_w        #214
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #216
79: dastore
80: dup
81: iconst_2
82: ldc2_w        #218
85: dastore
86: ldc2_w        #220
89: ldc2_w        #222
92: iconst_3
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #224
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #226
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #228
112: dastore
113: invokespecial #213
116: iconst_1
117: invokespecial #8
120: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackWatson
Start line: 234
End line: 317
Method source code: 
  public void testMinpackWatson() {

    minpackTest(new WatsonFunction(6, 0.0,
                                   5.47722557505166, 0.0478295939097601,
                                   new double[] {
                                     -0.0157249615083782, 1.01243488232965,
                                     -0.232991722387673,  1.26043101102818,
                                     -1.51373031394421,   0.99299727291842
                                   }), false);
    minpackTest(new WatsonFunction(6, 10.0,
                                   6433.12578950026, 0.0478295939096951,
                                   new double[] {
                                     -0.0157251901386677, 1.01243485860105,
                                     -0.232991545843829,  1.26042932089163,
                                     -1.51372776706575,   0.99299573426328
                                   }), false);
    minpackTest(new WatsonFunction(6, 100.0,
                                   674256.040605213, 0.047829593911544,
                                   new double[] {
                                    -0.0157247019712586, 1.01243490925658,
                                    -0.232991922761641,  1.26043292929555,
                                    -1.51373320452707,   0.99299901922322
                                   }), false);

    minpackTest(new WatsonFunction(9, 0.0,
                                   5.47722557505166, 0.00118311459212420,
                                   new double[] {
                                    -0.153070644166722e-4, 0.999789703934597,
                                     0.0147639634910978,   0.146342330145992,
                                     1.00082109454817,    -2.61773112070507,
                                     4.10440313943354,    -3.14361226236241,
                                     1.05262640378759
                                   }), false);
    minpackTest(new WatsonFunction(9, 10.0,
                                   12088.127069307, 0.00118311459212513,
                                   new double[] {
                                   -0.153071334849279e-4, 0.999789703941234,
                                    0.0147639629786217,   0.146342334818836,
                                    1.00082107321386,    -2.61773107084722,
                                    4.10440307655564,    -3.14361222178686,
                                    1.05262639322589
                                   }), false);
    minpackTest(new WatsonFunction(9, 100.0,
                                   1269109.29043834, 0.00118311459212384,
                                   new double[] {
                                    -0.153069523352176e-4, 0.999789703958371,
                                     0.0147639625185392,   0.146342341096326,
                                     1.00082104729164,    -2.61773101573645,
                                     4.10440301427286,    -3.14361218602503,
                                     1.05262638516774
                                   }), false);

    minpackTest(new WatsonFunction(12, 0.0,
                                   5.47722557505166, 0.217310402535861e-4,
                                   new double[] {
                                    -0.660266001396382e-8, 1.00000164411833,
                                    -0.000563932146980154, 0.347820540050756,
                                    -0.156731500244233,    1.05281515825593,
                                    -3.24727109519451,     7.2884347837505,
                                   -10.271848098614,       9.07411353715783,
                                    -4.54137541918194,     1.01201187975044
                                   }), false);
    minpackTest(new WatsonFunction(12, 10.0,
                                   19220.7589790951, 0.217310402518509e-4,
                                   new double[] {
                                    -0.663710223017410e-8, 1.00000164411787,
                                    -0.000563932208347327, 0.347820540486998,
                                    -0.156731503955652,    1.05281517654573,
                                    -3.2472711515214,      7.28843489430665,
                                   -10.2718482369638,      9.07411364383733,
                                    -4.54137546533666,     1.01201188830857
                                   }), false);
    minpackTest(new WatsonFunction(12, 100.0,
                                   2018918.04462367, 0.217310402539845e-4,
                                   new double[] {
                                    -0.663806046485249e-8, 1.00000164411786,
                                    -0.000563932210324959, 0.347820540503588,
                                    -0.156731504091375,    1.05281517718031,
                                    -3.24727115337025,     7.28843489775302,
                                   -10.2718482410813,      9.07411364688464,
                                    -4.54137546660822,     1.0120118885369
                                   }), false);

  }
Method byte code: 
0: aload_0
1: new           #230
4: dup
5: bipush        6
7: dconst_0
8: ldc2_w        #231
11: ldc2_w        #233
14: bipush        6
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #235
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #237
29: dastore
30: dup
31: iconst_2
32: ldc2_w        #239
35: dastore
36: dup
37: iconst_3
38: ldc2_w        #241
41: dastore
42: dup
43: iconst_4
44: ldc2_w        #243
47: dastore
48: dup
49: iconst_5
50: ldc2_w        #245
53: dastore
54: invokespecial #247
57: iconst_0
58: invokespecial #8
61: aload_0
62: new           #230
65: dup
66: bipush        6
68: ldc2_w        #34
71: ldc2_w        #248
74: ldc2_w        #250
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #252
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #254
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #256
98: dastore
99: dup
100: iconst_3
101: ldc2_w        #258
104: dastore
105: dup
106: iconst_4
107: ldc2_w        #260
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #262
116: dastore
117: invokespecial #247
120: iconst_0
121: invokespecial #8
124: aload_0
125: new           #230
128: dup
129: bipush        6
131: ldc2_w        #40
134: ldc2_w        #264
137: ldc2_w        #266
140: bipush        6
142: newarray       double
144: dup
145: iconst_0
146: ldc2_w        #268
149: dastore
150: dup
151: iconst_1
152: ldc2_w        #270
155: dastore
156: dup
157: iconst_2
158: ldc2_w        #272
161: dastore
162: dup
163: iconst_3
164: ldc2_w        #274
167: dastore
168: dup
169: iconst_4
170: ldc2_w        #276
173: dastore
174: dup
175: iconst_5
176: ldc2_w        #278
179: dastore
180: invokespecial #247
183: iconst_0
184: invokespecial #8
187: aload_0
188: new           #230
191: dup
192: bipush        9
194: dconst_0
195: ldc2_w        #231
198: ldc2_w        #280
201: bipush        9
203: newarray       double
205: dup
206: iconst_0
207: ldc2_w        #282
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #284
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #286
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #288
228: dastore
229: dup
230: iconst_4
231: ldc2_w        #290
234: dastore
235: dup
236: iconst_5
237: ldc2_w        #292
240: dastore
241: dup
242: bipush        6
244: ldc2_w        #294
247: dastore
248: dup
249: bipush        7
251: ldc2_w        #296
254: dastore
255: dup
256: bipush        8
258: ldc2_w        #298
261: dastore
262: invokespecial #247
265: iconst_0
266: invokespecial #8
269: aload_0
270: new           #230
273: dup
274: bipush        9
276: ldc2_w        #34
279: ldc2_w        #300
282: ldc2_w        #302
285: bipush        9
287: newarray       double
289: dup
290: iconst_0
291: ldc2_w        #304
294: dastore
295: dup
296: iconst_1
297: ldc2_w        #306
300: dastore
301: dup
302: iconst_2
303: ldc2_w        #308
306: dastore
307: dup
308: iconst_3
309: ldc2_w        #310
312: dastore
313: dup
314: iconst_4
315: ldc2_w        #312
318: dastore
319: dup
320: iconst_5
321: ldc2_w        #314
324: dastore
325: dup
326: bipush        6
328: ldc2_w        #316
331: dastore
332: dup
333: bipush        7
335: ldc2_w        #318
338: dastore
339: dup
340: bipush        8
342: ldc2_w        #320
345: dastore
346: invokespecial #247
349: iconst_0
350: invokespecial #8
353: aload_0
354: new           #230
357: dup
358: bipush        9
360: ldc2_w        #40
363: ldc2_w        #322
366: ldc2_w        #324
369: bipush        9
371: newarray       double
373: dup
374: iconst_0
375: ldc2_w        #326
378: dastore
379: dup
380: iconst_1
381: ldc2_w        #328
384: dastore
385: dup
386: iconst_2
387: ldc2_w        #330
390: dastore
391: dup
392: iconst_3
393: ldc2_w        #332
396: dastore
397: dup
398: iconst_4
399: ldc2_w        #334
402: dastore
403: dup
404: iconst_5
405: ldc2_w        #336
408: dastore
409: dup
410: bipush        6
412: ldc2_w        #338
415: dastore
416: dup
417: bipush        7
419: ldc2_w        #340
422: dastore
423: dup
424: bipush        8
426: ldc2_w        #342
429: dastore
430: invokespecial #247
433: iconst_0
434: invokespecial #8
437: aload_0
438: new           #230
441: dup
442: bipush        12
444: dconst_0
445: ldc2_w        #231
448: ldc2_w        #344
451: bipush        12
453: newarray       double
455: dup
456: iconst_0
457: ldc2_w        #346
460: dastore
461: dup
462: iconst_1
463: ldc2_w        #348
466: dastore
467: dup
468: iconst_2
469: ldc2_w        #350
472: dastore
473: dup
474: iconst_3
475: ldc2_w        #352
478: dastore
479: dup
480: iconst_4
481: ldc2_w        #354
484: dastore
485: dup
486: iconst_5
487: ldc2_w        #356
490: dastore
491: dup
492: bipush        6
494: ldc2_w        #358
497: dastore
498: dup
499: bipush        7
501: ldc2_w        #360
504: dastore
505: dup
506: bipush        8
508: ldc2_w        #362
511: dastore
512: dup
513: bipush        9
515: ldc2_w        #364
518: dastore
519: dup
520: bipush        10
522: ldc2_w        #366
525: dastore
526: dup
527: bipush        11
529: ldc2_w        #368
532: dastore
533: invokespecial #247
536: iconst_0
537: invokespecial #8
540: aload_0
541: new           #230
544: dup
545: bipush        12
547: ldc2_w        #34
550: ldc2_w        #370
553: ldc2_w        #372
556: bipush        12
558: newarray       double
560: dup
561: iconst_0
562: ldc2_w        #374
565: dastore
566: dup
567: iconst_1
568: ldc2_w        #376
571: dastore
572: dup
573: iconst_2
574: ldc2_w        #378
577: dastore
578: dup
579: iconst_3
580: ldc2_w        #380
583: dastore
584: dup
585: iconst_4
586: ldc2_w        #382
589: dastore
590: dup
591: iconst_5
592: ldc2_w        #384
595: dastore
596: dup
597: bipush        6
599: ldc2_w        #386
602: dastore
603: dup
604: bipush        7
606: ldc2_w        #388
609: dastore
610: dup
611: bipush        8
613: ldc2_w        #390
616: dastore
617: dup
618: bipush        9
620: ldc2_w        #392
623: dastore
624: dup
625: bipush        10
627: ldc2_w        #394
630: dastore
631: dup
632: bipush        11
634: ldc2_w        #396
637: dastore
638: invokespecial #247
641: iconst_0
642: invokespecial #8
645: aload_0
646: new           #230
649: dup
650: bipush        12
652: ldc2_w        #40
655: ldc2_w        #398
658: ldc2_w        #400
661: bipush        12
663: newarray       double
665: dup
666: iconst_0
667: ldc2_w        #402
670: dastore
671: dup
672: iconst_1
673: ldc2_w        #404
676: dastore
677: dup
678: iconst_2
679: ldc2_w        #406
682: dastore
683: dup
684: iconst_3
685: ldc2_w        #408
688: dastore
689: dup
690: iconst_4
691: ldc2_w        #410
694: dastore
695: dup
696: iconst_5
697: ldc2_w        #412
700: dastore
701: dup
702: bipush        6
704: ldc2_w        #414
707: dastore
708: dup
709: bipush        7
711: ldc2_w        #416
714: dastore
715: dup
716: bipush        8
718: ldc2_w        #418
721: dastore
722: dup
723: bipush        9
725: ldc2_w        #420
728: dastore
729: dup
730: bipush        10
732: ldc2_w        #422
735: dastore
736: dup
737: bipush        11
739: ldc2_w        #424
742: dastore
743: invokespecial #247
746: iconst_0
747: invokespecial #8
750: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBox3Dimensional
Start line: 319
End line: 322
Method source code: 
  public void testMinpackBox3Dimensional() {
    minpackTest(new Box3DimensionalFunction(10, new double[] { 0.0, 10.0, 20.0 },
                                            32.1115837449572), false);
  }
Method byte code: 
0: aload_0
1: new           #426
4: dup
5: bipush        10
7: iconst_3
8: newarray       double
10: dup
11: iconst_0
12: dconst_0
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #34
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #427
25: dastore
26: ldc2_w        #429
29: invokespecial #431
32: iconst_0
33: invokespecial #8
36: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackJennrichSampson
Start line: 324
End line: 330
Method source code: 
  public void testMinpackJennrichSampson() {
    minpackTest(new JennrichSampsonFunction(10, new double[] { 0.3, 0.4 },
                                            64.5856498144943, 11.1517793413499,
                                            new double[] {
                                             0.257819926636811, 0.257829976764542
                                            }), false);
  }
Method byte code: 
0: aload_0
1: new           #432
4: dup
5: bipush        10
7: iconst_2
8: newarray       double
10: dup
11: iconst_0
12: ldc2_w        #433
15: dastore
16: dup
17: iconst_1
18: ldc2_w        #435
21: dastore
22: ldc2_w        #437
25: ldc2_w        #439
28: iconst_2
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #441
36: dastore
37: dup
38: iconst_1
39: ldc2_w        #443
42: dastore
43: invokespecial #445
46: iconst_0
47: invokespecial #8
50: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBrownDennis
Start line: 332
End line: 354
Method source code: 
  public void testMinpackBrownDennis() {
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 25.0, 5.0, -5.0, -1.0 },
                                        2815.43839161816, 292.954288244866,
                                        new double[] {
                                         -11.59125141003, 13.2024883984741,
                                         -0.403574643314272, 0.236736269844604
                                        }), false);
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 250.0, 50.0, -50.0, -10.0 },
                                        555073.354173069, 292.954270581415,
                                        new double[] {
                                         -11.5959274272203, 13.2041866926242,
                                         -0.403417362841545, 0.236771143410386
                                       }), false);
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 2500.0, 500.0, -500.0, -100.0 },
                                        61211252.2338581, 292.954306151134,
                                        new double[] {
                                         -11.5902596937374, 13.2020628854665,
                                         -0.403688070279258, 0.236665033746463
                                        }), false);
  }
Method byte code: 
0: aload_0
1: new           #446
4: dup
5: bipush        20
7: iconst_4
8: newarray       double
10: dup
11: iconst_0
12: ldc2_w        #178
15: dastore
16: dup
17: iconst_1
18: ldc2_w        #3
21: dastore
22: dup
23: iconst_2
24: ldc2_w        #447
27: dastore
28: dup
29: iconst_3
30: ldc2_w        #47
33: dastore
34: ldc2_w        #449
37: ldc2_w        #451
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #453
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #455
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #457
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #459
66: dastore
67: invokespecial #461
70: iconst_0
71: invokespecial #8
74: aload_0
75: new           #446
78: dup
79: bipush        20
81: iconst_4
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #201
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #49
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #462
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #52
107: dastore
108: ldc2_w        #464
111: ldc2_w        #466
114: iconst_4
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #468
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #470
128: dastore
129: dup
130: iconst_2
131: ldc2_w        #472
134: dastore
135: dup
136: iconst_3
137: ldc2_w        #474
140: dastore
141: invokespecial #461
144: iconst_0
145: invokespecial #8
148: aload_0
149: new           #446
152: dup
153: bipush        20
155: iconst_4
156: newarray       double
158: dup
159: iconst_0
160: ldc2_w        #218
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #476
169: dastore
170: dup
171: iconst_2
172: ldc2_w        #478
175: dastore
176: dup
177: iconst_3
178: ldc2_w        #56
181: dastore
182: ldc2_w        #480
185: ldc2_w        #482
188: iconst_4
189: newarray       double
191: dup
192: iconst_0
193: ldc2_w        #484
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #486
202: dastore
203: dup
204: iconst_2
205: ldc2_w        #488
208: dastore
209: dup
210: iconst_3
211: ldc2_w        #490
214: dastore
215: invokespecial #461
218: iconst_0
219: invokespecial #8
222: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackChebyquad
Start line: 356
End line: 392
Method source code: 
  public void testMinpackChebyquad() {
    minpackTest(new ChebyquadFunction(1, 8, 1.0,
                                      1.88623796907732, 1.88623796907732,
                                      new double[] { 0.5 }), false);
    minpackTest(new ChebyquadFunction(1, 8, 10.0,
                                      5383344372.34005, 1.88424820499951,
                                      new double[] { 0.9817314924684 }), false);
    minpackTest(new ChebyquadFunction(1, 8, 100.0,
                                      0.118088726698392e19, 1.88424820499347,
                                      new double[] { 0.9817314852934 }), false);
    minpackTest(new ChebyquadFunction(8, 8, 1.0,
                                      0.196513862833975, 0.0593032355046727,
                                      new double[] {
                                        0.0431536648587336, 0.193091637843267,
                                        0.266328593812698,  0.499999334628884,
                                        0.500000665371116,  0.733671406187302,
                                        0.806908362156733,  0.956846335141266
                                      }), false);
    minpackTest(new ChebyquadFunction(9, 9, 1.0,
                                      0.16994993465202, 0.0,
                                      new double[] {
                                        0.0442053461357828, 0.199490672309881,
                                        0.23561910847106,   0.416046907892598,
                                        0.5,                0.583953092107402,
                                        0.764380891528940,  0.800509327690119,
                                        0.955794653864217
                                      }), false);
    minpackTest(new ChebyquadFunction(10, 10, 1.0,
                                      0.183747831178711, 0.0806471004038253,
                                      new double[] {
                                        0.0596202671753563, 0.166708783805937,
                                        0.239171018813509,  0.398885290346268,
                                        0.398883667870681,  0.601116332129320,
                                        0.60111470965373,   0.760828981186491,
                                        0.833291216194063,  0.940379732824644
                                      }), false);
  }
Method byte code: 
0: aload_0
1: new           #492
4: dup
5: iconst_1
6: bipush        8
8: dconst_1
9: ldc2_w        #493
12: ldc2_w        #493
15: iconst_1
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #75
23: dastore
24: invokespecial #495
27: iconst_0
28: invokespecial #8
31: aload_0
32: new           #492
35: dup
36: iconst_1
37: bipush        8
39: ldc2_w        #34
42: ldc2_w        #496
45: ldc2_w        #498
48: iconst_1
49: newarray       double
51: dup
52: iconst_0
53: ldc2_w        #500
56: dastore
57: invokespecial #495
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #492
68: dup
69: iconst_1
70: bipush        8
72: ldc2_w        #40
75: ldc2_w        #502
78: ldc2_w        #504
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #506
89: dastore
90: invokespecial #495
93: iconst_0
94: invokespecial #8
97: aload_0
98: new           #492
101: dup
102: bipush        8
104: bipush        8
106: dconst_1
107: ldc2_w        #508
110: ldc2_w        #510
113: bipush        8
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #512
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #514
128: dastore
129: dup
130: iconst_2
131: ldc2_w        #516
134: dastore
135: dup
136: iconst_3
137: ldc2_w        #518
140: dastore
141: dup
142: iconst_4
143: ldc2_w        #520
146: dastore
147: dup
148: iconst_5
149: ldc2_w        #522
152: dastore
153: dup
154: bipush        6
156: ldc2_w        #524
159: dastore
160: dup
161: bipush        7
163: ldc2_w        #526
166: dastore
167: invokespecial #495
170: iconst_0
171: invokespecial #8
174: aload_0
175: new           #492
178: dup
179: bipush        9
181: bipush        9
183: dconst_1
184: ldc2_w        #528
187: dconst_0
188: bipush        9
190: newarray       double
192: dup
193: iconst_0
194: ldc2_w        #530
197: dastore
198: dup
199: iconst_1
200: ldc2_w        #532
203: dastore
204: dup
205: iconst_2
206: ldc2_w        #534
209: dastore
210: dup
211: iconst_3
212: ldc2_w        #536
215: dastore
216: dup
217: iconst_4
218: ldc2_w        #75
221: dastore
222: dup
223: iconst_5
224: ldc2_w        #538
227: dastore
228: dup
229: bipush        6
231: ldc2_w        #540
234: dastore
235: dup
236: bipush        7
238: ldc2_w        #542
241: dastore
242: dup
243: bipush        8
245: ldc2_w        #544
248: dastore
249: invokespecial #495
252: iconst_0
253: invokespecial #8
256: aload_0
257: new           #492
260: dup
261: bipush        10
263: bipush        10
265: dconst_1
266: ldc2_w        #546
269: ldc2_w        #548
272: bipush        10
274: newarray       double
276: dup
277: iconst_0
278: ldc2_w        #550
281: dastore
282: dup
283: iconst_1
284: ldc2_w        #552
287: dastore
288: dup
289: iconst_2
290: ldc2_w        #554
293: dastore
294: dup
295: iconst_3
296: ldc2_w        #556
299: dastore
300: dup
301: iconst_4
302: ldc2_w        #558
305: dastore
306: dup
307: iconst_5
308: ldc2_w        #560
311: dastore
312: dup
313: bipush        6
315: ldc2_w        #562
318: dastore
319: dup
320: bipush        7
322: ldc2_w        #564
325: dastore
326: dup
327: bipush        8
329: ldc2_w        #566
332: dastore
333: dup
334: bipush        9
336: ldc2_w        #568
339: dastore
340: invokespecial #495
343: iconst_0
344: invokespecial #8
347: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBrownAlmostLinear
Start line: 394
End line: 460
Method source code: 
  public void testMinpackBrownAlmostLinear() {
    minpackTest(new BrownAlmostLinearFunction(10, 0.5,
                                              16.5302162063499, 0.0,
                                              new double[] {
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 1.20569696650138
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(10, 5.0,
                                              9765624.00089211, 0.0,
                                              new double[] {
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 1.20569696650135
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(10, 50.0,
                                              0.9765625e17, 0.0,
                                              new double[] {
                                                1.0, 1.0, 1.0, 1.0, 1.0,
                                                1.0, 1.0, 1.0, 1.0, 1.0
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(30, 0.5,
                                              83.476044467848, 0.0,
                                              new double[] {
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 1.06737350671578
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(40, 0.5,
                                              128.026364472323, 0.0,
                                              new double[] {
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                0.999999999999121
                                              }), false);
    }
Method byte code: 
0: aload_0
1: new           #570
4: dup
5: bipush        10
7: ldc2_w        #75
10: ldc2_w        #571
13: dconst_0
14: bipush        10
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #573
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #573
29: dastore
30: dup
31: iconst_2
32: ldc2_w        #573
35: dastore
36: dup
37: iconst_3
38: ldc2_w        #573
41: dastore
42: dup
43: iconst_4
44: ldc2_w        #573
47: dastore
48: dup
49: iconst_5
50: ldc2_w        #573
53: dastore
54: dup
55: bipush        6
57: ldc2_w        #573
60: dastore
61: dup
62: bipush        7
64: ldc2_w        #573
67: dastore
68: dup
69: bipush        8
71: ldc2_w        #573
74: dastore
75: dup
76: bipush        9
78: ldc2_w        #575
81: dastore
82: invokespecial #577
85: iconst_0
86: invokespecial #8
89: aload_0
90: new           #570
93: dup
94: bipush        10
96: ldc2_w        #3
99: ldc2_w        #578
102: dconst_0
103: bipush        10
105: newarray       double
107: dup
108: iconst_0
109: ldc2_w        #580
112: dastore
113: dup
114: iconst_1
115: ldc2_w        #580
118: dastore
119: dup
120: iconst_2
121: ldc2_w        #580
124: dastore
125: dup
126: iconst_3
127: ldc2_w        #580
130: dastore
131: dup
132: iconst_4
133: ldc2_w        #580
136: dastore
137: dup
138: iconst_5
139: ldc2_w        #580
142: dastore
143: dup
144: bipush        6
146: ldc2_w        #580
149: dastore
150: dup
151: bipush        7
153: ldc2_w        #580
156: dastore
157: dup
158: bipush        8
160: ldc2_w        #580
163: dastore
164: dup
165: bipush        9
167: ldc2_w        #582
170: dastore
171: invokespecial #577
174: iconst_0
175: invokespecial #8
178: aload_0
179: new           #570
182: dup
183: bipush        10
185: ldc2_w        #49
188: ldc2_w        #584
191: dconst_0
192: bipush        10
194: newarray       double
196: dup
197: iconst_0
198: dconst_1
199: dastore
200: dup
201: iconst_1
202: dconst_1
203: dastore
204: dup
205: iconst_2
206: dconst_1
207: dastore
208: dup
209: iconst_3
210: dconst_1
211: dastore
212: dup
213: iconst_4
214: dconst_1
215: dastore
216: dup
217: iconst_5
218: dconst_1
219: dastore
220: dup
221: bipush        6
223: dconst_1
224: dastore
225: dup
226: bipush        7
228: dconst_1
229: dastore
230: dup
231: bipush        8
233: dconst_1
234: dastore
235: dup
236: bipush        9
238: dconst_1
239: dastore
240: invokespecial #577
243: iconst_0
244: invokespecial #8
247: aload_0
248: new           #570
251: dup
252: bipush        30
254: ldc2_w        #75
257: ldc2_w        #586
260: dconst_0
261: bipush        30
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #588
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #588
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #588
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #588
288: dastore
289: dup
290: iconst_4
291: ldc2_w        #588
294: dastore
295: dup
296: iconst_5
297: ldc2_w        #588
300: dastore
301: dup
302: bipush        6
304: ldc2_w        #588
307: dastore
308: dup
309: bipush        7
311: ldc2_w        #588
314: dastore
315: dup
316: bipush        8
318: ldc2_w        #588
321: dastore
322: dup
323: bipush        9
325: ldc2_w        #588
328: dastore
329: dup
330: bipush        10
332: ldc2_w        #588
335: dastore
336: dup
337: bipush        11
339: ldc2_w        #588
342: dastore
343: dup
344: bipush        12
346: ldc2_w        #588
349: dastore
350: dup
351: bipush        13
353: ldc2_w        #588
356: dastore
357: dup
358: bipush        14
360: ldc2_w        #588
363: dastore
364: dup
365: bipush        15
367: ldc2_w        #588
370: dastore
371: dup
372: bipush        16
374: ldc2_w        #588
377: dastore
378: dup
379: bipush        17
381: ldc2_w        #588
384: dastore
385: dup
386: bipush        18
388: ldc2_w        #588
391: dastore
392: dup
393: bipush        19
395: ldc2_w        #588
398: dastore
399: dup
400: bipush        20
402: ldc2_w        #588
405: dastore
406: dup
407: bipush        21
409: ldc2_w        #588
412: dastore
413: dup
414: bipush        22
416: ldc2_w        #588
419: dastore
420: dup
421: bipush        23
423: ldc2_w        #588
426: dastore
427: dup
428: bipush        24
430: ldc2_w        #588
433: dastore
434: dup
435: bipush        25
437: ldc2_w        #588
440: dastore
441: dup
442: bipush        26
444: ldc2_w        #588
447: dastore
448: dup
449: bipush        27
451: ldc2_w        #588
454: dastore
455: dup
456: bipush        28
458: ldc2_w        #588
461: dastore
462: dup
463: bipush        29
465: ldc2_w        #590
468: dastore
469: invokespecial #577
472: iconst_0
473: invokespecial #8
476: aload_0
477: new           #570
480: dup
481: bipush        40
483: ldc2_w        #75
486: ldc2_w        #592
489: dconst_0
490: bipush        35
492: newarray       double
494: dup
495: iconst_0
496: ldc2_w        #594
499: dastore
500: dup
501: iconst_1
502: ldc2_w        #594
505: dastore
506: dup
507: iconst_2
508: ldc2_w        #594
511: dastore
512: dup
513: iconst_3
514: ldc2_w        #594
517: dastore
518: dup
519: iconst_4
520: ldc2_w        #594
523: dastore
524: dup
525: iconst_5
526: ldc2_w        #594
529: dastore
530: dup
531: bipush        6
533: ldc2_w        #594
536: dastore
537: dup
538: bipush        7
540: ldc2_w        #594
543: dastore
544: dup
545: bipush        8
547: ldc2_w        #594
550: dastore
551: dup
552: bipush        9
554: ldc2_w        #594
557: dastore
558: dup
559: bipush        10
561: ldc2_w        #594
564: dastore
565: dup
566: bipush        11
568: ldc2_w        #594
571: dastore
572: dup
573: bipush        12
575: ldc2_w        #594
578: dastore
579: dup
580: bipush        13
582: ldc2_w        #594
585: dastore
586: dup
587: bipush        14
589: ldc2_w        #594
592: dastore
593: dup
594: bipush        15
596: ldc2_w        #594
599: dastore
600: dup
601: bipush        16
603: ldc2_w        #594
606: dastore
607: dup
608: bipush        17
610: ldc2_w        #594
613: dastore
614: dup
615: bipush        18
617: ldc2_w        #594
620: dastore
621: dup
622: bipush        19
624: ldc2_w        #594
627: dastore
628: dup
629: bipush        20
631: ldc2_w        #594
634: dastore
635: dup
636: bipush        21
638: ldc2_w        #594
641: dastore
642: dup
643: bipush        22
645: ldc2_w        #594
648: dastore
649: dup
650: bipush        23
652: ldc2_w        #594
655: dastore
656: dup
657: bipush        24
659: ldc2_w        #594
662: dastore
663: dup
664: bipush        25
666: ldc2_w        #594
669: dastore
670: dup
671: bipush        26
673: ldc2_w        #594
676: dastore
677: dup
678: bipush        27
680: ldc2_w        #594
683: dastore
684: dup
685: bipush        28
687: ldc2_w        #594
690: dastore
691: dup
692: bipush        29
694: ldc2_w        #594
697: dastore
698: dup
699: bipush        30
701: ldc2_w        #594
704: dastore
705: dup
706: bipush        31
708: ldc2_w        #594
711: dastore
712: dup
713: bipush        32
715: ldc2_w        #594
718: dastore
719: dup
720: bipush        33
722: ldc2_w        #594
725: dastore
726: dup
727: bipush        34
729: ldc2_w        #596
732: dastore
733: invokespecial #577
736: iconst_0
737: invokespecial #8
740: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackOsborne1
Start line: 462
End line: 470
Method source code: 
  public void testMinpackOsborne1() {
      minpackTest(new Osborne1Function(new double[] { 0.5, 1.5, -1.0, 0.01, 0.02, },
                                       0.937564021037838, 0.00739249260904843,
                                       new double[] {
                                         0.375410049244025, 1.93584654543108,
                                        -1.46468676748716, 0.0128675339110439,
                                         0.0221227011813076
                                       }), false);
    }
Method byte code: 
0: aload_0
1: new           #598
4: dup
5: iconst_5
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #75
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #599
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #47
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #601
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #197
37: dastore
38: ldc2_w        #603
41: ldc2_w        #605
44: iconst_5
45: newarray       double
47: dup
48: iconst_0
49: ldc2_w        #607
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #609
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #611
64: dastore
65: dup
66: iconst_3
67: ldc2_w        #613
70: dastore
71: dup
72: iconst_4
73: ldc2_w        #615
76: dastore
77: invokespecial #617
80: iconst_0
81: invokespecial #8
84: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/estimation/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/estimation/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackOsborne2
Start line: 472
End line: 487
Method source code: 
  public void testMinpackOsborne2() {

    minpackTest(new Osborne2Function(new double[] {
                                       1.3, 0.65, 0.65, 0.7, 0.6,
                                       3.0, 5.0, 7.0, 2.0, 4.5, 5.5
                                     },
                                     1.44686540984712, 0.20034404483314,
                                     new double[] {
                                       1.30997663810096,  0.43155248076,
                                       0.633661261602859, 0.599428560991695,
                                       0.754179768272449, 0.904300082378518,
                                       1.36579949521007, 4.82373199748107,
                                       2.39868475104871, 4.56887554791452,
                                       5.67534206273052
                                     }), false);
  }
Method byte code: 
0: aload_0
1: new           #618
4: dup
5: bipush        11
7: newarray       double
9: dup
10: iconst_0
11: ldc2_w        #619
14: dastore
15: dup
16: iconst_1
17: ldc2_w        #621
20: dastore
21: dup
22: iconst_2
23: ldc2_w        #621
26: dastore
27: dup
28: iconst_3
29: ldc2_w        #623
32: dastore
33: dup
34: iconst_4
35: ldc2_w        #625
38: dastore
39: dup
40: iconst_5
41: ldc2_w        #61
44: dastore
45: dup
46: bipush        6
48: ldc2_w        #3
51: dastore
52: dup
53: bipush        7
55: ldc2_w        #627
58: dastore
59: dup
60: bipush        8
62: ldc2_w        #629
65: dastore
66: dup
67: bipush        9
69: ldc2_w        #631
72: dastore
73: dup
74: bipush        10
76: ldc2_w        #633
79: dastore
80: ldc2_w        #635
83: ldc2_w        #637
86: bipush        11
88: newarray       double
90: dup
91: iconst_0
92: ldc2_w        #639
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #641
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #643
107: dastore
108: dup
109: iconst_3
110: ldc2_w        #645
113: dastore
114: dup
115: iconst_4
116: ldc2_w        #647
119: dastore
120: dup
121: iconst_5
122: ldc2_w        #649
125: dastore
126: dup
127: bipush        6
129: ldc2_w        #651
132: dastore
133: dup
134: bipush        7
136: ldc2_w        #653
139: dastore
140: dup
141: bipush        8
143: ldc2_w        #655
146: dastore
147: dup
148: bipush        9
150: ldc2_w        #657
153: dastore
154: dup
155: bipush        10
157: ldc2_w        #659
160: dastore
161: invokespecial #661
164: iconst_0
165: invokespecial #8
168: return
}
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer_ESTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer_ESTest.class
Class name: LevenbergMarquardtOptimizer_ESTest
Method name: test0
Start line: 16
End line: 19
Method source code: 
  public void test0()  throws Throwable  {
      LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
      assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations());
  }
Method byte code: 
0: new           #2
3: dup
4: invokespecial #3
7: astore_1
8: ldc2_w        #4
11: aload_1
12: invokevirtual #6
15: i2l
16: invokestatic  #7
19: return
}
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testTrivial
Start line: 105
End line: 122
Method source code: 
    public void testTrivial() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        try {
            optimizer.guessParametersErrors();
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }
        assertEquals(1.5, optimum.getPoint()[0], 1.0e-10);
        assertEquals(3.0, optimum.getValue()[0], 1.0e-10);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_1
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #4
18: dastore
19: aastore
20: iconst_1
21: newarray       double
23: dup
24: iconst_0
25: ldc2_w        #6
28: dastore
29: invokespecial #8
32: astore_1
33: new           #9
36: dup
37: invokespecial #10
40: astore_2
41: aload_2
42: aload_1
43: aload_1
44: getfield      #11
47: iconst_1
48: newarray       double
50: dup
51: iconst_0
52: dconst_1
53: dastore
54: iconst_1
55: newarray       double
57: dup
58: iconst_0
59: dconst_0
60: dastore
61: invokevirtual #12
64: astore_3
65: dconst_0
66: aload_2
67: invokevirtual #13
70: ldc2_w        #14
73: invokestatic  #16
76: aload_2
77: invokevirtual #17
80: pop
81: ldc           #18
83: invokestatic  #19
86: goto          101
89: astore        4
91: goto          101
94: astore        4
96: ldc           #22
98: invokestatic  #19
101: ldc2_w        #23
104: aload_3
105: invokevirtual #25
108: iconst_0
109: daload
110: ldc2_w        #14
113: invokestatic  #16
116: ldc2_w        #6
119: aload_3
120: invokevirtual #26
123: iconst_0
124: daload
125: ldc2_w        #14
128: invokestatic  #16
131: return
Exception table:
from    to  target type
76    86    89   Class org/apache/commons/math/optimization/OptimizationException
76    86    94   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testQRColumnsPermutation
Start line: 124
End line: 140
Method source code: 
    public void testQRColumnsPermutation() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem =
            new LinearProblem(new double[][] { { 1.0, -1.0 }, { 0.0, 2.0 }, { 1.0, -2.0 } },
                              new double[] { 4.0, 6.0, 1.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(7.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals(3.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(4.0, optimum.getValue()[0], 1.0e-10);
        assertEquals(6.0, optimum.getValue()[1], 1.0e-10);
        assertEquals(1.0, optimum.getValue()[2], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #27
22: dastore
23: aastore
24: dup
25: iconst_1
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: dconst_0
32: dastore
33: dup
34: iconst_1
35: ldc2_w        #4
38: dastore
39: aastore
40: dup
41: iconst_2
42: iconst_2
43: newarray       double
45: dup
46: iconst_0
47: dconst_1
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #29
54: dastore
55: aastore
56: iconst_3
57: newarray       double
59: dup
60: iconst_0
61: ldc2_w        #31
64: dastore
65: dup
66: iconst_1
67: ldc2_w        #33
70: dastore
71: dup
72: iconst_2
73: dconst_1
74: dastore
75: invokespecial #8
78: astore_1
79: new           #9
82: dup
83: invokespecial #10
86: astore_2
87: aload_2
88: aload_1
89: aload_1
90: getfield      #11
93: iconst_3
94: newarray       double
96: dup
97: iconst_0
98: dconst_1
99: dastore
100: dup
101: iconst_1
102: dconst_1
103: dastore
104: dup
105: iconst_2
106: dconst_1
107: dastore
108: iconst_2
109: newarray       double
111: dup
112: iconst_0
113: dconst_0
114: dastore
115: dup
116: iconst_1
117: dconst_0
118: dastore
119: invokevirtual #12
122: astore_3
123: dconst_0
124: aload_2
125: invokevirtual #13
128: ldc2_w        #14
131: invokestatic  #16
134: ldc2_w        #35
137: aload_3
138: invokevirtual #25
141: iconst_0
142: daload
143: ldc2_w        #14
146: invokestatic  #16
149: ldc2_w        #6
152: aload_3
153: invokevirtual #25
156: iconst_1
157: daload
158: ldc2_w        #14
161: invokestatic  #16
164: ldc2_w        #31
167: aload_3
168: invokevirtual #26
171: iconst_0
172: daload
173: ldc2_w        #14
176: invokestatic  #16
179: ldc2_w        #33
182: aload_3
183: invokevirtual #26
186: iconst_1
187: daload
188: ldc2_w        #14
191: invokestatic  #16
194: dconst_1
195: aload_3
196: invokevirtual #26
199: iconst_2
200: daload
201: ldc2_w        #14
204: invokestatic  #16
207: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testNoDependency
Start line: 142
End line: 159
Method source code: 
    public void testNoDependency() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 2, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 0, 0 },
                { 0, 0, 2, 0, 0, 0 },
                { 0, 0, 0, 2, 0, 0 },
                { 0, 0, 0, 0, 2, 0 },
                { 0, 0, 0, 0, 0, 2 }
        }, new double[] { 0.0, 1.1, 2.2, 3.3, 4.4, 5.5 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        for (int i = 0; i < problem.target.length; ++i) {
            assertEquals(0.55 * i, optimum.getPoint()[i], 1.0e-10);
        }
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: anewarray     #3
9: dup
10: iconst_0
11: bipush        6
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #4
20: dastore
21: dup
22: iconst_1
23: dconst_0
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: dup
34: iconst_4
35: dconst_0
36: dastore
37: dup
38: iconst_5
39: dconst_0
40: dastore
41: aastore
42: dup
43: iconst_1
44: bipush        6
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #4
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: dconst_0
65: dastore
66: dup
67: iconst_4
68: dconst_0
69: dastore
70: dup
71: iconst_5
72: dconst_0
73: dastore
74: aastore
75: dup
76: iconst_2
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #4
94: dastore
95: dup
96: iconst_3
97: dconst_0
98: dastore
99: dup
100: iconst_4
101: dconst_0
102: dastore
103: dup
104: iconst_5
105: dconst_0
106: dastore
107: aastore
108: dup
109: iconst_3
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_0
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #4
131: dastore
132: dup
133: iconst_4
134: dconst_0
135: dastore
136: dup
137: iconst_5
138: dconst_0
139: dastore
140: aastore
141: dup
142: iconst_4
143: bipush        6
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: dconst_0
154: dastore
155: dup
156: iconst_2
157: dconst_0
158: dastore
159: dup
160: iconst_3
161: dconst_0
162: dastore
163: dup
164: iconst_4
165: ldc2_w        #4
168: dastore
169: dup
170: iconst_5
171: dconst_0
172: dastore
173: aastore
174: dup
175: iconst_5
176: bipush        6
178: newarray       double
180: dup
181: iconst_0
182: dconst_0
183: dastore
184: dup
185: iconst_1
186: dconst_0
187: dastore
188: dup
189: iconst_2
190: dconst_0
191: dastore
192: dup
193: iconst_3
194: dconst_0
195: dastore
196: dup
197: iconst_4
198: dconst_0
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #4
205: dastore
206: aastore
207: bipush        6
209: newarray       double
211: dup
212: iconst_0
213: dconst_0
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #37
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #39
226: dastore
227: dup
228: iconst_3
229: ldc2_w        #41
232: dastore
233: dup
234: iconst_4
235: ldc2_w        #43
238: dastore
239: dup
240: iconst_5
241: ldc2_w        #45
244: dastore
245: invokespecial #8
248: astore_1
249: new           #9
252: dup
253: invokespecial #10
256: astore_2
257: aload_2
258: aload_1
259: aload_1
260: getfield      #11
263: bipush        6
265: newarray       double
267: dup
268: iconst_0
269: dconst_1
270: dastore
271: dup
272: iconst_1
273: dconst_1
274: dastore
275: dup
276: iconst_2
277: dconst_1
278: dastore
279: dup
280: iconst_3
281: dconst_1
282: dastore
283: dup
284: iconst_4
285: dconst_1
286: dastore
287: dup
288: iconst_5
289: dconst_1
290: dastore
291: bipush        6
293: newarray       double
295: dup
296: iconst_0
297: dconst_0
298: dastore
299: dup
300: iconst_1
301: dconst_0
302: dastore
303: dup
304: iconst_2
305: dconst_0
306: dastore
307: dup
308: iconst_3
309: dconst_0
310: dastore
311: dup
312: iconst_4
313: dconst_0
314: dastore
315: dup
316: iconst_5
317: dconst_0
318: dastore
319: invokevirtual #12
322: astore_3
323: dconst_0
324: aload_2
325: invokevirtual #13
328: ldc2_w        #14
331: invokestatic  #16
334: iconst_0
335: istore        4
337: iload         4
339: aload_1
340: getfield      #11
343: arraylength
344: if_icmpge     373
347: ldc2_w        #47
350: iload         4
352: i2d
353: dmul
354: aload_3
355: invokevirtual #25
358: iload         4
360: daload
361: ldc2_w        #14
364: invokestatic  #16
367: iinc          4, 1
370: goto          337
373: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testOneSet
Start line: 161
End line: 176
Method source code: 
    public void testOneSet() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1,  0, 0 },
                { -1,  1, 0 },
                {  0, -1, 1 }
        }, new double[] { 1, 1, 1});
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(1.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals(2.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(3.0, optimum.getPoint()[2], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: dup
22: iconst_2
23: dconst_0
24: dastore
25: aastore
26: dup
27: iconst_1
28: iconst_3
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #27
36: dastore
37: dup
38: iconst_1
39: dconst_1
40: dastore
41: dup
42: iconst_2
43: dconst_0
44: dastore
45: aastore
46: dup
47: iconst_2
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_0
54: dastore
55: dup
56: iconst_1
57: ldc2_w        #27
60: dastore
61: dup
62: iconst_2
63: dconst_1
64: dastore
65: aastore
66: iconst_3
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: dconst_1
76: dastore
77: dup
78: iconst_2
79: dconst_1
80: dastore
81: invokespecial #8
84: astore_1
85: new           #9
88: dup
89: invokespecial #10
92: astore_2
93: aload_2
94: aload_1
95: aload_1
96: getfield      #11
99: iconst_3
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: dup
111: iconst_2
112: dconst_1
113: dastore
114: iconst_3
115: newarray       double
117: dup
118: iconst_0
119: dconst_0
120: dastore
121: dup
122: iconst_1
123: dconst_0
124: dastore
125: dup
126: iconst_2
127: dconst_0
128: dastore
129: invokevirtual #12
132: astore_3
133: dconst_0
134: aload_2
135: invokevirtual #13
138: ldc2_w        #14
141: invokestatic  #16
144: dconst_1
145: aload_3
146: invokevirtual #25
149: iconst_0
150: daload
151: ldc2_w        #14
154: invokestatic  #16
157: ldc2_w        #4
160: aload_3
161: invokevirtual #25
164: iconst_1
165: daload
166: ldc2_w        #14
169: invokestatic  #16
172: ldc2_w        #6
175: aload_3
176: invokevirtual #25
179: iconst_2
180: daload
181: ldc2_w        #14
184: invokestatic  #16
187: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testTwoSets
Start line: 178
End line: 201
Method source code: 
    public void testTwoSets() throws FunctionEvaluationException, OptimizationException {
        double epsilon = 1.0e-7;
        LinearProblem problem = new LinearProblem(new double[][] {
                {  2,  1,   0,  4,       0, 0 },
                { -4, -2,   3, -7,       0, 0 },
                {  4,  1,  -2,  8,       0, 0 },
                {  0, -3, -12, -1,       0, 0 },
                {  0,  0,   0,  0, epsilon, 1 },
                {  0,  0,   0,  0,       1, 1 }
        }, new double[] { 2, -9, 2, 2, 1 + epsilon * epsilon, 2});

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },
                               new double[] { 0, 0, 0, 0, 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals( 3.0, optimum.getPoint()[0], 1.0e-10);
        assertEquals( 4.0, optimum.getPoint()[1], 1.0e-10);
        assertEquals(-1.0, optimum.getPoint()[2], 1.0e-10);
        assertEquals(-2.0, optimum.getPoint()[3], 1.0e-10);
        assertEquals( 1.0 + epsilon, optimum.getPoint()[4], 1.0e-10);
        assertEquals( 1.0 - epsilon, optimum.getPoint()[5], 1.0e-10);

    }
Method byte code: 
0: ldc2_w        #49
3: dstore_1
4: new           #2
7: dup
8: bipush        6
10: anewarray     #3
13: dup
14: iconst_0
15: bipush        6
17: newarray       double
19: dup
20: iconst_0
21: ldc2_w        #4
24: dastore
25: dup
26: iconst_1
27: dconst_1
28: dastore
29: dup
30: iconst_2
31: dconst_0
32: dastore
33: dup
34: iconst_3
35: ldc2_w        #31
38: dastore
39: dup
40: iconst_4
41: dconst_0
42: dastore
43: dup
44: iconst_5
45: dconst_0
46: dastore
47: aastore
48: dup
49: iconst_1
50: bipush        6
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #51
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #29
65: dastore
66: dup
67: iconst_2
68: ldc2_w        #6
71: dastore
72: dup
73: iconst_3
74: ldc2_w        #53
77: dastore
78: dup
79: iconst_4
80: dconst_0
81: dastore
82: dup
83: iconst_5
84: dconst_0
85: dastore
86: aastore
87: dup
88: iconst_2
89: bipush        6
91: newarray       double
93: dup
94: iconst_0
95: ldc2_w        #31
98: dastore
99: dup
100: iconst_1
101: dconst_1
102: dastore
103: dup
104: iconst_2
105: ldc2_w        #29
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #55
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: aastore
124: dup
125: iconst_3
126: bipush        6
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #57
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #59
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #27
151: dastore
152: dup
153: iconst_4
154: dconst_0
155: dastore
156: dup
157: iconst_5
158: dconst_0
159: dastore
160: aastore
161: dup
162: iconst_4
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: dconst_0
174: dastore
175: dup
176: iconst_2
177: dconst_0
178: dastore
179: dup
180: iconst_3
181: dconst_0
182: dastore
183: dup
184: iconst_4
185: dload_1
186: dastore
187: dup
188: iconst_5
189: dconst_1
190: dastore
191: aastore
192: dup
193: iconst_5
194: bipush        6
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: dup
203: iconst_1
204: dconst_0
205: dastore
206: dup
207: iconst_2
208: dconst_0
209: dastore
210: dup
211: iconst_3
212: dconst_0
213: dastore
214: dup
215: iconst_4
216: dconst_1
217: dastore
218: dup
219: iconst_5
220: dconst_1
221: dastore
222: aastore
223: bipush        6
225: newarray       double
227: dup
228: iconst_0
229: ldc2_w        #4
232: dastore
233: dup
234: iconst_1
235: ldc2_w        #61
238: dastore
239: dup
240: iconst_2
241: ldc2_w        #4
244: dastore
245: dup
246: iconst_3
247: ldc2_w        #4
250: dastore
251: dup
252: iconst_4
253: dconst_1
254: dload_1
255: dload_1
256: dmul
257: dadd
258: dastore
259: dup
260: iconst_5
261: ldc2_w        #4
264: dastore
265: invokespecial #8
268: astore_3
269: new           #9
272: dup
273: invokespecial #10
276: astore        4
278: aload         4
280: aload_3
281: aload_3
282: getfield      #11
285: bipush        6
287: newarray       double
289: dup
290: iconst_0
291: dconst_1
292: dastore
293: dup
294: iconst_1
295: dconst_1
296: dastore
297: dup
298: iconst_2
299: dconst_1
300: dastore
301: dup
302: iconst_3
303: dconst_1
304: dastore
305: dup
306: iconst_4
307: dconst_1
308: dastore
309: dup
310: iconst_5
311: dconst_1
312: dastore
313: bipush        6
315: newarray       double
317: dup
318: iconst_0
319: dconst_0
320: dastore
321: dup
322: iconst_1
323: dconst_0
324: dastore
325: dup
326: iconst_2
327: dconst_0
328: dastore
329: dup
330: iconst_3
331: dconst_0
332: dastore
333: dup
334: iconst_4
335: dconst_0
336: dastore
337: dup
338: iconst_5
339: dconst_0
340: dastore
341: invokevirtual #12
344: astore        5
346: dconst_0
347: aload         4
349: invokevirtual #13
352: ldc2_w        #14
355: invokestatic  #16
358: ldc2_w        #6
361: aload         5
363: invokevirtual #25
366: iconst_0
367: daload
368: ldc2_w        #14
371: invokestatic  #16
374: ldc2_w        #31
377: aload         5
379: invokevirtual #25
382: iconst_1
383: daload
384: ldc2_w        #14
387: invokestatic  #16
390: ldc2_w        #27
393: aload         5
395: invokevirtual #25
398: iconst_2
399: daload
400: ldc2_w        #14
403: invokestatic  #16
406: ldc2_w        #29
409: aload         5
411: invokevirtual #25
414: iconst_3
415: daload
416: ldc2_w        #14
419: invokestatic  #16
422: dconst_1
423: dload_1
424: dadd
425: aload         5
427: invokevirtual #25
430: iconst_4
431: daload
432: ldc2_w        #14
435: invokestatic  #16
438: dconst_1
439: dload_1
440: dsub
441: aload         5
443: invokevirtual #25
446: iconst_5
447: daload
448: ldc2_w        #14
451: invokestatic  #16
454: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testNonInversible
Start line: 203
End line: 223
Method source code: 
    public void testNonInversible() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                {  1, 2, -3 },
                {  2, 1,  3 },
                { -3, 0, -9 }
        }, new double[] { 1, 1, 1 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });
        assertTrue(Math.sqrt(problem.target.length) * optimizer.getRMS() > 0.6);
        try {
            optimizer.getCovariances();
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_3
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: ldc2_w        #4
22: dastore
23: dup
24: iconst_2
25: ldc2_w        #57
28: dastore
29: aastore
30: dup
31: iconst_1
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #4
40: dastore
41: dup
42: iconst_1
43: dconst_1
44: dastore
45: dup
46: iconst_2
47: ldc2_w        #6
50: dastore
51: aastore
52: dup
53: iconst_2
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #57
62: dastore
63: dup
64: iconst_1
65: dconst_0
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #61
72: dastore
73: aastore
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: invokespecial #8
92: astore_1
93: new           #9
96: dup
97: invokespecial #10
100: astore_2
101: aload_2
102: aload_1
103: aload_1
104: getfield      #11
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_1
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_1
121: dastore
122: iconst_3
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: dconst_0
132: dastore
133: dup
134: iconst_2
135: dconst_0
136: dastore
137: invokevirtual #12
140: pop
141: aload_1
142: getfield      #11
145: arraylength
146: i2d
147: invokestatic  #63
150: aload_2
151: invokevirtual #13
154: dmul
155: ldc2_w        #64
158: dcmpl
159: ifle          166
162: iconst_1
163: goto          167
166: iconst_0
167: invokestatic  #66
170: aload_2
171: invokevirtual #67
174: pop
175: ldc           #18
177: invokestatic  #19
180: goto          193
183: astore_3
184: goto          193
187: astore_3
188: ldc           #22
190: invokestatic  #19
193: return
Exception table:
from    to  target type
170   180   183   Class org/apache/commons/math/optimization/OptimizationException
170   180   187   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testIllConditioned
Start line: 225
End line: 257
Method source code: 
    public void testIllConditioned() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem1 = new LinearProblem(new double[][] {
                { 10.0, 7.0,  8.0,  7.0 },
                {  7.0, 5.0,  6.0,  5.0 },
                {  8.0, 6.0, 10.0,  9.0 },
                {  7.0, 5.0,  9.0, 10.0 }
        }, new double[] { 32, 23, 33, 31 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum1 =
            optimizer.optimize(problem1, problem1.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[0], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[1], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[2], 1.0e-10);
        assertEquals(1.0, optimum1.getPoint()[3], 1.0e-10);

        LinearProblem problem2 = new LinearProblem(new double[][] {
                { 10.00, 7.00, 8.10, 7.20 },
                {  7.08, 5.04, 6.00, 5.00 },
                {  8.00, 5.98, 9.89, 9.00 },
                {  6.99, 4.99, 9.00, 9.98 }
        }, new double[] { 32, 23, 33, 31 });
        VectorialPointValuePair optimum2 =
            optimizer.optimize(problem2, problem2.target, new double[] { 1, 1, 1, 1 },
                               new double[] { 0, 1, 2, 3 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(-81.0, optimum2.getPoint()[0], 1.0e-8);
        assertEquals(137.0, optimum2.getPoint()[1], 1.0e-8);
        assertEquals(-34.0, optimum2.getPoint()[2], 1.0e-8);
        assertEquals( 22.0, optimum2.getPoint()[3], 1.0e-8);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #68
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #35
24: dastore
25: dup
26: iconst_2
27: ldc2_w        #55
30: dastore
31: dup
32: iconst_3
33: ldc2_w        #35
36: dastore
37: aastore
38: dup
39: iconst_1
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #35
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #70
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #33
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #70
66: dastore
67: aastore
68: dup
69: iconst_2
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #55
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #33
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #68
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #72
96: dastore
97: aastore
98: dup
99: iconst_3
100: iconst_4
101: newarray       double
103: dup
104: iconst_0
105: ldc2_w        #35
108: dastore
109: dup
110: iconst_1
111: ldc2_w        #70
114: dastore
115: dup
116: iconst_2
117: ldc2_w        #72
120: dastore
121: dup
122: iconst_3
123: ldc2_w        #68
126: dastore
127: aastore
128: iconst_4
129: newarray       double
131: dup
132: iconst_0
133: ldc2_w        #74
136: dastore
137: dup
138: iconst_1
139: ldc2_w        #76
142: dastore
143: dup
144: iconst_2
145: ldc2_w        #78
148: dastore
149: dup
150: iconst_3
151: ldc2_w        #80
154: dastore
155: invokespecial #8
158: astore_1
159: new           #9
162: dup
163: invokespecial #10
166: astore_2
167: aload_2
168: aload_1
169: aload_1
170: getfield      #11
173: iconst_4
174: newarray       double
176: dup
177: iconst_0
178: dconst_1
179: dastore
180: dup
181: iconst_1
182: dconst_1
183: dastore
184: dup
185: iconst_2
186: dconst_1
187: dastore
188: dup
189: iconst_3
190: dconst_1
191: dastore
192: iconst_4
193: newarray       double
195: dup
196: iconst_0
197: dconst_0
198: dastore
199: dup
200: iconst_1
201: dconst_1
202: dastore
203: dup
204: iconst_2
205: ldc2_w        #4
208: dastore
209: dup
210: iconst_3
211: ldc2_w        #6
214: dastore
215: invokevirtual #12
218: astore_3
219: dconst_0
220: aload_2
221: invokevirtual #13
224: ldc2_w        #14
227: invokestatic  #16
230: dconst_1
231: aload_3
232: invokevirtual #25
235: iconst_0
236: daload
237: ldc2_w        #14
240: invokestatic  #16
243: dconst_1
244: aload_3
245: invokevirtual #25
248: iconst_1
249: daload
250: ldc2_w        #14
253: invokestatic  #16
256: dconst_1
257: aload_3
258: invokevirtual #25
261: iconst_2
262: daload
263: ldc2_w        #14
266: invokestatic  #16
269: dconst_1
270: aload_3
271: invokevirtual #25
274: iconst_3
275: daload
276: ldc2_w        #14
279: invokestatic  #16
282: new           #2
285: dup
286: iconst_4
287: anewarray     #3
290: dup
291: iconst_0
292: iconst_4
293: newarray       double
295: dup
296: iconst_0
297: ldc2_w        #68
300: dastore
301: dup
302: iconst_1
303: ldc2_w        #35
306: dastore
307: dup
308: iconst_2
309: ldc2_w        #82
312: dastore
313: dup
314: iconst_3
315: ldc2_w        #84
318: dastore
319: aastore
320: dup
321: iconst_1
322: iconst_4
323: newarray       double
325: dup
326: iconst_0
327: ldc2_w        #86
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #88
336: dastore
337: dup
338: iconst_2
339: ldc2_w        #33
342: dastore
343: dup
344: iconst_3
345: ldc2_w        #70
348: dastore
349: aastore
350: dup
351: iconst_2
352: iconst_4
353: newarray       double
355: dup
356: iconst_0
357: ldc2_w        #55
360: dastore
361: dup
362: iconst_1
363: ldc2_w        #90
366: dastore
367: dup
368: iconst_2
369: ldc2_w        #92
372: dastore
373: dup
374: iconst_3
375: ldc2_w        #72
378: dastore
379: aastore
380: dup
381: iconst_3
382: iconst_4
383: newarray       double
385: dup
386: iconst_0
387: ldc2_w        #94
390: dastore
391: dup
392: iconst_1
393: ldc2_w        #96
396: dastore
397: dup
398: iconst_2
399: ldc2_w        #72
402: dastore
403: dup
404: iconst_3
405: ldc2_w        #98
408: dastore
409: aastore
410: iconst_4
411: newarray       double
413: dup
414: iconst_0
415: ldc2_w        #74
418: dastore
419: dup
420: iconst_1
421: ldc2_w        #76
424: dastore
425: dup
426: iconst_2
427: ldc2_w        #78
430: dastore
431: dup
432: iconst_3
433: ldc2_w        #80
436: dastore
437: invokespecial #8
440: astore        4
442: aload_2
443: aload         4
445: aload         4
447: getfield      #11
450: iconst_4
451: newarray       double
453: dup
454: iconst_0
455: dconst_1
456: dastore
457: dup
458: iconst_1
459: dconst_1
460: dastore
461: dup
462: iconst_2
463: dconst_1
464: dastore
465: dup
466: iconst_3
467: dconst_1
468: dastore
469: iconst_4
470: newarray       double
472: dup
473: iconst_0
474: dconst_0
475: dastore
476: dup
477: iconst_1
478: dconst_1
479: dastore
480: dup
481: iconst_2
482: ldc2_w        #4
485: dastore
486: dup
487: iconst_3
488: ldc2_w        #6
491: dastore
492: invokevirtual #12
495: astore        5
497: dconst_0
498: aload_2
499: invokevirtual #13
502: ldc2_w        #14
505: invokestatic  #16
508: ldc2_w        #100
511: aload         5
513: invokevirtual #25
516: iconst_0
517: daload
518: ldc2_w        #102
521: invokestatic  #16
524: ldc2_w        #104
527: aload         5
529: invokevirtual #25
532: iconst_1
533: daload
534: ldc2_w        #102
537: invokestatic  #16
540: ldc2_w        #106
543: aload         5
545: invokevirtual #25
548: iconst_2
549: daload
550: ldc2_w        #102
553: invokestatic  #16
556: ldc2_w        #108
559: aload         5
561: invokevirtual #25
564: iconst_3
565: daload
566: ldc2_w        #102
569: invokestatic  #16
572: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMoreEstimatedParametersSimple
Start line: 259
End line: 272
Method source code: 
    public void testMoreEstimatedParametersSimple() throws FunctionEvaluationException, OptimizationException {

        LinearProblem problem = new LinearProblem(new double[][] {
                { 3.0, 2.0,  0.0, 0.0 },
                { 0.0, 1.0, -1.0, 1.0 },
                { 2.0, 0.0,  1.0, 0.0 }
        }, new double[] { 7.0, 3.0, 5.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },
                new double[] { 7, 6, 5, 4 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_4
11: newarray       double
13: dup
14: iconst_0
15: ldc2_w        #6
18: dastore
19: dup
20: iconst_1
21: ldc2_w        #4
24: dastore
25: dup
26: iconst_2
27: dconst_0
28: dastore
29: dup
30: iconst_3
31: dconst_0
32: dastore
33: aastore
34: dup
35: iconst_1
36: iconst_4
37: newarray       double
39: dup
40: iconst_0
41: dconst_0
42: dastore
43: dup
44: iconst_1
45: dconst_1
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #27
52: dastore
53: dup
54: iconst_3
55: dconst_1
56: dastore
57: aastore
58: dup
59: iconst_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: ldc2_w        #4
68: dastore
69: dup
70: iconst_1
71: dconst_0
72: dastore
73: dup
74: iconst_2
75: dconst_1
76: dastore
77: dup
78: iconst_3
79: dconst_0
80: dastore
81: aastore
82: iconst_3
83: newarray       double
85: dup
86: iconst_0
87: ldc2_w        #35
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #6
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #70
102: dastore
103: invokespecial #8
106: astore_1
107: new           #9
110: dup
111: invokespecial #10
114: astore_2
115: aload_2
116: aload_1
117: aload_1
118: getfield      #11
121: iconst_3
122: newarray       double
124: dup
125: iconst_0
126: dconst_1
127: dastore
128: dup
129: iconst_1
130: dconst_1
131: dastore
132: dup
133: iconst_2
134: dconst_1
135: dastore
136: iconst_4
137: newarray       double
139: dup
140: iconst_0
141: ldc2_w        #35
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #33
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #70
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #31
162: dastore
163: invokevirtual #12
166: pop
167: dconst_0
168: aload_2
169: invokevirtual #13
172: ldc2_w        #14
175: invokestatic  #16
178: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMoreEstimatedParametersUnsorted
Start line: 274
End line: 293
Method source code: 
    public void testMoreEstimatedParametersUnsorted() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0, 1.0,  0.0,  0.0, 0.0,  0.0 },
                { 0.0, 0.0,  1.0,  1.0, 1.0,  0.0 },
                { 0.0, 0.0,  0.0,  0.0, 1.0, -1.0 },
                { 0.0, 0.0, -1.0,  1.0, 0.0,  1.0 },
                { 0.0, 0.0,  0.0, -1.0, 1.0,  0.0 }
       }, new double[] { 3.0, 12.0, -1.0, 7.0, 1.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1 },
                               new double[] { 2, 2, 2, 2, 2, 2 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(3.0, optimum.getPointRef()[2], 1.0e-10);
        assertEquals(4.0, optimum.getPointRef()[3], 1.0e-10);
        assertEquals(5.0, optimum.getPointRef()[4], 1.0e-10);
        assertEquals(6.0, optimum.getPointRef()[5], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: anewarray     #3
8: dup
9: iconst_0
10: bipush        6
12: newarray       double
14: dup
15: iconst_0
16: dconst_1
17: dastore
18: dup
19: iconst_1
20: dconst_1
21: dastore
22: dup
23: iconst_2
24: dconst_0
25: dastore
26: dup
27: iconst_3
28: dconst_0
29: dastore
30: dup
31: iconst_4
32: dconst_0
33: dastore
34: dup
35: iconst_5
36: dconst_0
37: dastore
38: aastore
39: dup
40: iconst_1
41: bipush        6
43: newarray       double
45: dup
46: iconst_0
47: dconst_0
48: dastore
49: dup
50: iconst_1
51: dconst_0
52: dastore
53: dup
54: iconst_2
55: dconst_1
56: dastore
57: dup
58: iconst_3
59: dconst_1
60: dastore
61: dup
62: iconst_4
63: dconst_1
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: aastore
70: dup
71: iconst_2
72: bipush        6
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: dconst_0
83: dastore
84: dup
85: iconst_2
86: dconst_0
87: dastore
88: dup
89: iconst_3
90: dconst_0
91: dastore
92: dup
93: iconst_4
94: dconst_1
95: dastore
96: dup
97: iconst_5
98: ldc2_w        #27
101: dastore
102: aastore
103: dup
104: iconst_3
105: bipush        6
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: dconst_0
116: dastore
117: dup
118: iconst_2
119: ldc2_w        #27
122: dastore
123: dup
124: iconst_3
125: dconst_1
126: dastore
127: dup
128: iconst_4
129: dconst_0
130: dastore
131: dup
132: iconst_5
133: dconst_1
134: dastore
135: aastore
136: dup
137: iconst_4
138: bipush        6
140: newarray       double
142: dup
143: iconst_0
144: dconst_0
145: dastore
146: dup
147: iconst_1
148: dconst_0
149: dastore
150: dup
151: iconst_2
152: dconst_0
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #27
159: dastore
160: dup
161: iconst_4
162: dconst_1
163: dastore
164: dup
165: iconst_5
166: dconst_0
167: dastore
168: aastore
169: iconst_5
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #6
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #110
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #27
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #35
195: dastore
196: dup
197: iconst_4
198: dconst_1
199: dastore
200: invokespecial #8
203: astore_1
204: new           #9
207: dup
208: invokespecial #10
211: astore_2
212: aload_2
213: aload_1
214: aload_1
215: getfield      #11
218: iconst_5
219: newarray       double
221: dup
222: iconst_0
223: dconst_1
224: dastore
225: dup
226: iconst_1
227: dconst_1
228: dastore
229: dup
230: iconst_2
231: dconst_1
232: dastore
233: dup
234: iconst_3
235: dconst_1
236: dastore
237: dup
238: iconst_4
239: dconst_1
240: dastore
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: ldc2_w        #4
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #4
256: dastore
257: dup
258: iconst_2
259: ldc2_w        #4
262: dastore
263: dup
264: iconst_3
265: ldc2_w        #4
268: dastore
269: dup
270: iconst_4
271: ldc2_w        #4
274: dastore
275: dup
276: iconst_5
277: ldc2_w        #4
280: dastore
281: invokevirtual #12
284: astore_3
285: dconst_0
286: aload_2
287: invokevirtual #13
290: ldc2_w        #14
293: invokestatic  #16
296: ldc2_w        #6
299: aload_3
300: invokevirtual #112
303: iconst_2
304: daload
305: ldc2_w        #14
308: invokestatic  #16
311: ldc2_w        #31
314: aload_3
315: invokevirtual #112
318: iconst_3
319: daload
320: ldc2_w        #14
323: invokestatic  #16
326: ldc2_w        #70
329: aload_3
330: invokevirtual #112
333: iconst_4
334: daload
335: ldc2_w        #14
338: invokestatic  #16
341: ldc2_w        #33
344: aload_3
345: invokevirtual #112
348: iconst_5
349: daload
350: ldc2_w        #14
353: invokestatic  #16
356: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testRedundantEquations
Start line: 295
End line: 310
Method source code: 
    public void testRedundantEquations() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 5.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },
                               new double[] { 1, 1 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(2.0, optimum.getPointRef()[0], 1.0e-10);
        assertEquals(1.0, optimum.getPointRef()[1], 1.0e-10);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #27
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #6
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #6
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #70
72: dastore
73: invokespecial #8
76: astore_1
77: new           #9
80: dup
81: invokespecial #10
84: astore_2
85: aload_2
86: aload_1
87: aload_1
88: getfield      #11
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: iconst_2
107: newarray       double
109: dup
110: iconst_0
111: dconst_1
112: dastore
113: dup
114: iconst_1
115: dconst_1
116: dastore
117: invokevirtual #12
120: astore_3
121: dconst_0
122: aload_2
123: invokevirtual #13
126: ldc2_w        #14
129: invokestatic  #16
132: ldc2_w        #4
135: aload_3
136: invokevirtual #112
139: iconst_0
140: daload
141: ldc2_w        #14
144: invokestatic  #16
147: dconst_1
148: aload_3
149: invokevirtual #112
152: iconst_1
153: daload
154: ldc2_w        #14
157: invokestatic  #16
160: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testInconsistentEquations
Start line: 312
End line: 323
Method source code: 
    public void testInconsistentEquations() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem = new LinearProblem(new double[][] {
                { 1.0,  1.0 },
                { 1.0, -1.0 },
                { 1.0,  3.0 }
        }, new double[] { 3.0, 1.0, 4.0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });
        assertTrue(optimizer.getRMS() > 0.1);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_1
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_1
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #27
36: dastore
37: aastore
38: dup
39: iconst_2
40: iconst_2
41: newarray       double
43: dup
44: iconst_0
45: dconst_1
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #6
52: dastore
53: aastore
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #6
62: dastore
63: dup
64: iconst_1
65: dconst_1
66: dastore
67: dup
68: iconst_2
69: ldc2_w        #31
72: dastore
73: invokespecial #8
76: astore_1
77: new           #9
80: dup
81: invokespecial #10
84: astore_2
85: aload_2
86: aload_1
87: aload_1
88: getfield      #11
91: iconst_3
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: iconst_2
107: newarray       double
109: dup
110: iconst_0
111: dconst_1
112: dastore
113: dup
114: iconst_1
115: dconst_1
116: dastore
117: invokevirtual #12
120: pop
121: aload_2
122: invokevirtual #13
125: ldc2_w        #113
128: dcmpl
129: ifle          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #66
140: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testInconsistentSizes
Start line: 325
End line: 358
Method source code: 
    public void testInconsistentSizes() throws FunctionEvaluationException, OptimizationException {
        LinearProblem problem =
            new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } }, new double[] { -1, 1 });
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();

        VectorialPointValuePair optimum =
            optimizer.optimize(problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });
        assertEquals(0, optimizer.getRMS(), 1.0e-10);
        assertEquals(-1, optimum.getPoint()[0], 1.0e-10);
        assertEquals(+1, optimum.getPoint()[1], 1.0e-10);

        try {
            optimizer.optimize(problem, problem.target,
                               new double[] { 1 },
                               new double[] { 0, 0 });
            fail("an exception should have been thrown");
        } catch (OptimizationException oe) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

        try {
            optimizer.optimize(problem, new double[] { 1 },
                               new double[] { 1 },
                               new double[] { 0, 0 });
            fail("an exception should have been thrown");
        } catch (FunctionEvaluationException oe) {
            // expected behavior
        } catch (Exception e) {
            fail("wrong exception caught");
        }

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: anewarray     #3
8: dup
9: iconst_0
10: iconst_2
11: newarray       double
13: dup
14: iconst_0
15: dconst_1
16: dastore
17: dup
18: iconst_1
19: dconst_0
20: dastore
21: aastore
22: dup
23: iconst_1
24: iconst_2
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: dconst_1
34: dastore
35: aastore
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #27
44: dastore
45: dup
46: iconst_1
47: dconst_1
48: dastore
49: invokespecial #8
52: astore_1
53: new           #9
56: dup
57: invokespecial #10
60: astore_2
61: aload_2
62: aload_1
63: aload_1
64: getfield      #11
67: iconst_2
68: newarray       double
70: dup
71: iconst_0
72: dconst_1
73: dastore
74: dup
75: iconst_1
76: dconst_1
77: dastore
78: iconst_2
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: dconst_0
88: dastore
89: invokevirtual #12
92: astore_3
93: dconst_0
94: aload_2
95: invokevirtual #13
98: ldc2_w        #14
101: invokestatic  #16
104: ldc2_w        #27
107: aload_3
108: invokevirtual #25
111: iconst_0
112: daload
113: ldc2_w        #14
116: invokestatic  #16
119: dconst_1
120: aload_3
121: invokevirtual #25
124: iconst_1
125: daload
126: ldc2_w        #14
129: invokestatic  #16
132: aload_2
133: aload_1
134: aload_1
135: getfield      #11
138: iconst_1
139: newarray       double
141: dup
142: iconst_0
143: dconst_1
144: dastore
145: iconst_2
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: dconst_0
155: dastore
156: invokevirtual #12
159: pop
160: ldc           #18
162: invokestatic  #19
165: goto          180
168: astore        4
170: goto          180
173: astore        4
175: ldc           #22
177: invokestatic  #19
180: aload_2
181: aload_1
182: iconst_1
183: newarray       double
185: dup
186: iconst_0
187: dconst_1
188: dastore
189: iconst_1
190: newarray       double
192: dup
193: iconst_0
194: dconst_1
195: dastore
196: iconst_2
197: newarray       double
199: dup
200: iconst_0
201: dconst_0
202: dastore
203: dup
204: iconst_1
205: dconst_0
206: dastore
207: invokevirtual #12
210: pop
211: ldc           #18
213: invokestatic  #19
216: goto          231
219: astore        4
221: goto          231
224: astore        4
226: ldc           #22
228: invokestatic  #19
231: return
Exception table:
from    to  target type
132   165   168   Class org/apache/commons/math/optimization/OptimizationException
132   165   173   Class java/lang/Exception
180   216   219   Class org/apache/commons/math/FunctionEvaluationException
180   216   224   Class java/lang/Exception
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testControlParameters
Start line: 360
End line: 372
Method source code: 
    public void testControlParameters() {
        Circle circle = new Circle();
        circle.addPoint( 30.0,  68.0);
        circle.addPoint( 50.0,  -6.0);
        circle.addPoint(110.0, -20.0);
        circle.addPoint( 35.0,  15.0);
        circle.addPoint( 45.0,  97.0);
        checkEstimate(circle, 0.1, 10, 1.0e-14, 1.0e-16, 1.0e-10, false);
        checkEstimate(circle, 0.1, 10, 1.0e-15, 1.0e-17, 1.0e-10, true);
        checkEstimate(circle, 0.1,  5, 1.0e-15, 1.0e-16, 1.0e-10, true);
        circle.addPoint(300, -300);
        checkEstimate(circle, 0.1, 20, 1.0e-18, 1.0e-16, 1.0e-10, true);
    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: aload_1
9: ldc2_w        #118
12: ldc2_w        #120
15: invokevirtual #122
18: aload_1
19: ldc2_w        #123
22: ldc2_w        #125
25: invokevirtual #122
28: aload_1
29: ldc2_w        #127
32: ldc2_w        #129
35: invokevirtual #122
38: aload_1
39: ldc2_w        #131
42: ldc2_w        #133
45: invokevirtual #122
48: aload_1
49: ldc2_w        #135
52: ldc2_w        #137
55: invokevirtual #122
58: aload_0
59: aload_1
60: ldc2_w        #113
63: bipush        10
65: ldc2_w        #139
68: ldc2_w        #141
71: ldc2_w        #14
74: iconst_0
75: invokespecial #143
78: aload_0
79: aload_1
80: ldc2_w        #113
83: bipush        10
85: ldc2_w        #144
88: ldc2_w        #146
91: ldc2_w        #14
94: iconst_1
95: invokespecial #143
98: aload_0
99: aload_1
100: ldc2_w        #113
103: iconst_5
104: ldc2_w        #144
107: ldc2_w        #141
110: ldc2_w        #14
113: iconst_1
114: invokespecial #143
117: aload_1
118: ldc2_w        #148
121: ldc2_w        #150
124: invokevirtual #122
127: aload_0
128: aload_1
129: ldc2_w        #113
132: bipush        20
134: ldc2_w        #152
137: ldc2_w        #141
140: ldc2_w        #14
143: iconst_1
144: invokespecial #143
147: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testCircleFitting
Start line: 397
End line: 444
Method source code: 
    public void testCircleFitting() throws FunctionEvaluationException, OptimizationException {
        Circle circle = new Circle();
        circle.addPoint( 30.0,  68.0);
        circle.addPoint( 50.0,  -6.0);
        circle.addPoint(110.0, -20.0);
        circle.addPoint( 35.0,  15.0);
        circle.addPoint( 45.0,  97.0);
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        VectorialPointValuePair optimum =
            optimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },
                               new double[] { 98.680, 47.345 });
        assertTrue(optimizer.getEvaluations() < 10);
        assertTrue(optimizer.getJacobianEvaluations() < 10);
        double rms = optimizer.getRMS();
        assertEquals(1.768262623567235,  Math.sqrt(circle.getN()) * rms,  1.0e-10);
        Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        assertEquals(69.96016176931406, circle.getRadius(center), 1.0e-10);
        assertEquals(96.07590211815305, center.x,      1.0e-10);
        assertEquals(48.13516790438953, center.y,      1.0e-10);
        double[][] cov = optimizer.getCovariances();
        assertEquals(1.839, cov[0][0], 0.001);
        assertEquals(0.731, cov[0][1], 0.001);
        assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        assertEquals(0.786, cov[1][1], 0.001);
        double[] errors = optimizer.guessParametersErrors();
        assertEquals(1.384, errors[0], 0.001);
        assertEquals(0.905, errors[1], 0.001);

        // add perfect measurements and check errors are reduced
        double  r = circle.getRadius(center);
        for (double d= 0; d < 2 * Math.PI; d += 0.01) {
            circle.addPoint(center.x + r * Math.cos(d), center.y + r * Math.sin(d));
        }
        double[] target = new double[circle.getN()];
        Arrays.fill(target, 0.0);
        double[] weights = new double[circle.getN()];
        Arrays.fill(weights, 2.0);
        optimizer.optimize(circle, target, weights, new double[] { 98.680, 47.345 });
        cov = optimizer.getCovariances();
        assertEquals(0.0016, cov[0][0], 0.001);
        assertEquals(3.2e-7, cov[0][1], 1.0e-9);
        assertEquals(cov[0][1], cov[1][0], 1.0e-14);
        assertEquals(0.0016, cov[1][1], 0.001);
        errors = optimizer.guessParametersErrors();
        assertEquals(0.004, errors[0], 0.001);
        assertEquals(0.004, errors[1], 0.001);

    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: aload_1
9: ldc2_w        #118
12: ldc2_w        #120
15: invokevirtual #122
18: aload_1
19: ldc2_w        #123
22: ldc2_w        #125
25: invokevirtual #122
28: aload_1
29: ldc2_w        #127
32: ldc2_w        #129
35: invokevirtual #122
38: aload_1
39: ldc2_w        #131
42: ldc2_w        #133
45: invokevirtual #122
48: aload_1
49: ldc2_w        #135
52: ldc2_w        #137
55: invokevirtual #122
58: new           #9
61: dup
62: invokespecial #10
65: astore_2
66: aload_2
67: aload_1
68: iconst_5
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: dup
80: iconst_2
81: dconst_0
82: dastore
83: dup
84: iconst_3
85: dconst_0
86: dastore
87: dup
88: iconst_4
89: dconst_0
90: dastore
91: iconst_5
92: newarray       double
94: dup
95: iconst_0
96: dconst_1
97: dastore
98: dup
99: iconst_1
100: dconst_1
101: dastore
102: dup
103: iconst_2
104: dconst_1
105: dastore
106: dup
107: iconst_3
108: dconst_1
109: dastore
110: dup
111: iconst_4
112: dconst_1
113: dastore
114: iconst_2
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #159
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #161
128: dastore
129: invokevirtual #12
132: astore_3
133: aload_2
134: invokevirtual #164
137: bipush        10
139: if_icmpge     146
142: iconst_1
143: goto          147
146: iconst_0
147: invokestatic  #66
150: aload_2
151: invokevirtual #165
154: bipush        10
156: if_icmpge     163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #66
167: aload_2
168: invokevirtual #13
171: dstore        4
173: ldc2_w        #166
176: aload_1
177: invokevirtual #168
180: i2d
181: invokestatic  #63
184: dload         4
186: dmul
187: ldc2_w        #14
190: invokestatic  #16
193: new           #169
196: dup
197: aload_3
198: invokevirtual #112
201: iconst_0
202: daload
203: aload_3
204: invokevirtual #112
207: iconst_1
208: daload
209: invokespecial #170
212: astore        6
214: ldc2_w        #171
217: aload_1
218: aload         6
220: invokevirtual #173
223: ldc2_w        #14
226: invokestatic  #16
229: ldc2_w        #174
232: aload         6
234: getfield      #176
237: ldc2_w        #14
240: invokestatic  #16
243: ldc2_w        #177
246: aload         6
248: getfield      #179
251: ldc2_w        #14
254: invokestatic  #16
257: aload_2
258: invokevirtual #67
261: astore        7
263: ldc2_w        #180
266: aload         7
268: iconst_0
269: aaload
270: iconst_0
271: daload
272: ldc2_w        #182
275: invokestatic  #16
278: ldc2_w        #184
281: aload         7
283: iconst_0
284: aaload
285: iconst_1
286: daload
287: ldc2_w        #182
290: invokestatic  #16
293: aload         7
295: iconst_0
296: aaload
297: iconst_1
298: daload
299: aload         7
301: iconst_1
302: aaload
303: iconst_0
304: daload
305: ldc2_w        #139
308: invokestatic  #16
311: ldc2_w        #186
314: aload         7
316: iconst_1
317: aaload
318: iconst_1
319: daload
320: ldc2_w        #182
323: invokestatic  #16
326: aload_2
327: invokevirtual #17
330: astore        8
332: ldc2_w        #188
335: aload         8
337: iconst_0
338: daload
339: ldc2_w        #182
342: invokestatic  #16
345: ldc2_w        #190
348: aload         8
350: iconst_1
351: daload
352: ldc2_w        #182
355: invokestatic  #16
358: aload_1
359: aload         6
361: invokevirtual #173
364: dstore        9
366: dconst_0
367: dstore        11
369: dload         11
371: ldc2_w        #193
374: dcmpg
375: ifge          421
378: aload_1
379: aload         6
381: getfield      #176
384: dload         9
386: dload         11
388: invokestatic  #195
391: dmul
392: dadd
393: aload         6
395: getfield      #179
398: dload         9
400: dload         11
402: invokestatic  #196
405: dmul
406: dadd
407: invokevirtual #122
410: dload         11
412: ldc2_w        #197
415: dadd
416: dstore        11
418: goto          369
421: aload_1
422: invokevirtual #168
425: newarray       double
427: astore        11
429: aload         11
431: dconst_0
432: invokestatic  #199
435: aload_1
436: invokevirtual #168
439: newarray       double
441: astore        12
443: aload         12
445: ldc2_w        #4
448: invokestatic  #199
451: aload_2
452: aload_1
453: aload         11
455: aload         12
457: iconst_2
458: newarray       double
460: dup
461: iconst_0
462: ldc2_w        #159
465: dastore
466: dup
467: iconst_1
468: ldc2_w        #161
471: dastore
472: invokevirtual #12
475: pop
476: aload_2
477: invokevirtual #67
480: astore        7
482: ldc2_w        #200
485: aload         7
487: iconst_0
488: aaload
489: iconst_0
490: daload
491: ldc2_w        #182
494: invokestatic  #16
497: ldc2_w        #202
500: aload         7
502: iconst_0
503: aaload
504: iconst_1
505: daload
506: ldc2_w        #204
509: invokestatic  #16
512: aload         7
514: iconst_0
515: aaload
516: iconst_1
517: daload
518: aload         7
520: iconst_1
521: aaload
522: iconst_0
523: daload
524: ldc2_w        #139
527: invokestatic  #16
530: ldc2_w        #200
533: aload         7
535: iconst_1
536: aaload
537: iconst_1
538: daload
539: ldc2_w        #182
542: invokestatic  #16
545: aload_2
546: invokevirtual #17
549: astore        8
551: ldc2_w        #206
554: aload         8
556: iconst_0
557: daload
558: ldc2_w        #182
561: invokestatic  #16
564: ldc2_w        #206
567: aload         8
569: iconst_1
570: daload
571: ldc2_w        #182
574: invokestatic  #16
577: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testCircleFittingBadInit
Start line: 446
End line: 497
Method source code: 
    public void testCircleFittingBadInit() throws FunctionEvaluationException, OptimizationException {
        Circle circle = new Circle();
        double[][] points = new double[][] {
                {-0.312967,  0.072366}, {-0.339248,  0.132965}, {-0.379780,  0.202724},
                {-0.390426,  0.260487}, {-0.361212,  0.328325}, {-0.346039,  0.392619},
                {-0.280579,  0.444306}, {-0.216035,  0.470009}, {-0.149127,  0.493832},
                {-0.075133,  0.483271}, {-0.007759,  0.452680}, { 0.060071,  0.410235},
                { 0.103037,  0.341076}, { 0.118438,  0.273884}, { 0.131293,  0.192201},
                { 0.115869,  0.129797}, { 0.072223,  0.058396}, { 0.022884,  0.000718},
                {-0.053355, -0.020405}, {-0.123584, -0.032451}, {-0.216248, -0.032862},
                {-0.278592, -0.005008}, {-0.337655,  0.056658}, {-0.385899,  0.112526},
                {-0.405517,  0.186957}, {-0.415374,  0.262071}, {-0.387482,  0.343398},
                {-0.347322,  0.397943}, {-0.287623,  0.458425}, {-0.223502,  0.475513},
                {-0.135352,  0.478186}, {-0.061221,  0.483371}, { 0.003711,  0.422737},
                { 0.065054,  0.375830}, { 0.108108,  0.297099}, { 0.123882,  0.222850},
                { 0.117729,  0.134382}, { 0.085195,  0.056820}, { 0.029800, -0.019138},
                {-0.027520, -0.072374}, {-0.102268, -0.091555}, {-0.200299, -0.106578},
                {-0.292731, -0.091473}, {-0.356288, -0.051108}, {-0.420561,  0.014926},
                {-0.471036,  0.074716}, {-0.488638,  0.182508}, {-0.485990,  0.254068},
                {-0.463943,  0.338438}, {-0.406453,  0.404704}, {-0.334287,  0.466119},
                {-0.254244,  0.503188}, {-0.161548,  0.495769}, {-0.075733,  0.495560},
                { 0.001375,  0.434937}, { 0.082787,  0.385806}, { 0.115490,  0.323807},
                { 0.141089,  0.223450}, { 0.138693,  0.131703}, { 0.126415,  0.049174},
                { 0.066518, -0.010217}, {-0.005184, -0.070647}, {-0.080985, -0.103635},
                {-0.177377, -0.116887}, {-0.260628, -0.100258}, {-0.335756, -0.056251},
                {-0.405195, -0.000895}, {-0.444937,  0.085456}, {-0.484357,  0.175597},
                {-0.472453,  0.248681}, {-0.438580,  0.347463}, {-0.402304,  0.422428},
                {-0.326777,  0.479438}, {-0.247797,  0.505581}, {-0.152676,  0.519380},
                {-0.071754,  0.516264}, { 0.015942,  0.472802}, { 0.076608,  0.419077},
                { 0.127673,  0.330264}, { 0.159951,  0.262150}, { 0.153530,  0.172681},
                { 0.140653,  0.089229}, { 0.078666,  0.024981}, { 0.023807, -0.037022},
                {-0.048837, -0.077056}, {-0.127729, -0.075338}, {-0.221271, -0.067526}
        };
        double[] target = new double[points.length];
        Arrays.fill(target, 0.0);
        double[] weights = new double[points.length];
        Arrays.fill(weights, 2.0);
        for (int i = 0; i < points.length; ++i) {
            circle.addPoint(points[i][0], points[i][1]);
        }
        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.setConvergenceChecker(new SimpleVectorialValueChecker(1.0e-8, 1.0e-8));
        VectorialPointValuePair optimum =
            optimizer.optimize(circle, target, weights, new double[] { -12, -12 });
        Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]);
        assertTrue(optimizer.getEvaluations() < 25);
        assertTrue(optimizer.getJacobianEvaluations() < 20);
        assertEquals( 0.043, optimizer.getRMS(), 1.0e-3);
        assertEquals( 0.292235,  circle.getRadius(center), 1.0e-6);
        assertEquals(-0.151738,  center.x,      1.0e-6);
        assertEquals( 0.2075001, center.y,      1.0e-6);
    }
Method byte code: 
0: new           #116
3: dup
4: invokespecial #117
7: astore_1
8: bipush        87
10: anewarray     #3
13: dup
14: iconst_0
15: iconst_2
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #208
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #210
29: dastore
30: aastore
31: dup
32: iconst_1
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #212
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #214
47: dastore
48: aastore
49: dup
50: iconst_2
51: iconst_2
52: newarray       double
54: dup
55: iconst_0
56: ldc2_w        #216
59: dastore
60: dup
61: iconst_1
62: ldc2_w        #218
65: dastore
66: aastore
67: dup
68: iconst_3
69: iconst_2
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #220
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #222
83: dastore
84: aastore
85: dup
86: iconst_4
87: iconst_2
88: newarray       double
90: dup
91: iconst_0
92: ldc2_w        #224
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #226
101: dastore
102: aastore
103: dup
104: iconst_5
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: ldc2_w        #228
113: dastore
114: dup
115: iconst_1
116: ldc2_w        #230
119: dastore
120: aastore
121: dup
122: bipush        6
124: iconst_2
125: newarray       double
127: dup
128: iconst_0
129: ldc2_w        #232
132: dastore
133: dup
134: iconst_1
135: ldc2_w        #234
138: dastore
139: aastore
140: dup
141: bipush        7
143: iconst_2
144: newarray       double
146: dup
147: iconst_0
148: ldc2_w        #236
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #238
157: dastore
158: aastore
159: dup
160: bipush        8
162: iconst_2
163: newarray       double
165: dup
166: iconst_0
167: ldc2_w        #240
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #242
176: dastore
177: aastore
178: dup
179: bipush        9
181: iconst_2
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #244
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #246
195: dastore
196: aastore
197: dup
198: bipush        10
200: iconst_2
201: newarray       double
203: dup
204: iconst_0
205: ldc2_w        #248
208: dastore
209: dup
210: iconst_1
211: ldc2_w        #250
214: dastore
215: aastore
216: dup
217: bipush        11
219: iconst_2
220: newarray       double
222: dup
223: iconst_0
224: ldc2_w        #252
227: dastore
228: dup
229: iconst_1
230: ldc2_w        #254
233: dastore
234: aastore
235: dup
236: bipush        12
238: iconst_2
239: newarray       double
241: dup
242: iconst_0
243: ldc2_w        #256
246: dastore
247: dup
248: iconst_1
249: ldc2_w        #258
252: dastore
253: aastore
254: dup
255: bipush        13
257: iconst_2
258: newarray       double
260: dup
261: iconst_0
262: ldc2_w        #260
265: dastore
266: dup
267: iconst_1
268: ldc2_w        #262
271: dastore
272: aastore
273: dup
274: bipush        14
276: iconst_2
277: newarray       double
279: dup
280: iconst_0
281: ldc2_w        #264
284: dastore
285: dup
286: iconst_1
287: ldc2_w        #266
290: dastore
291: aastore
292: dup
293: bipush        15
295: iconst_2
296: newarray       double
298: dup
299: iconst_0
300: ldc2_w        #268
303: dastore
304: dup
305: iconst_1
306: ldc2_w        #270
309: dastore
310: aastore
311: dup
312: bipush        16
314: iconst_2
315: newarray       double
317: dup
318: iconst_0
319: ldc2_w        #272
322: dastore
323: dup
324: iconst_1
325: ldc2_w        #274
328: dastore
329: aastore
330: dup
331: bipush        17
333: iconst_2
334: newarray       double
336: dup
337: iconst_0
338: ldc2_w        #276
341: dastore
342: dup
343: iconst_1
344: ldc2_w        #278
347: dastore
348: aastore
349: dup
350: bipush        18
352: iconst_2
353: newarray       double
355: dup
356: iconst_0
357: ldc2_w        #280
360: dastore
361: dup
362: iconst_1
363: ldc2_w        #282
366: dastore
367: aastore
368: dup
369: bipush        19
371: iconst_2
372: newarray       double
374: dup
375: iconst_0
376: ldc2_w        #284
379: dastore
380: dup
381: iconst_1
382: ldc2_w        #286
385: dastore
386: aastore
387: dup
388: bipush        20
390: iconst_2
391: newarray       double
393: dup
394: iconst_0
395: ldc2_w        #288
398: dastore
399: dup
400: iconst_1
401: ldc2_w        #290
404: dastore
405: aastore
406: dup
407: bipush        21
409: iconst_2
410: newarray       double
412: dup
413: iconst_0
414: ldc2_w        #292
417: dastore
418: dup
419: iconst_1
420: ldc2_w        #294
423: dastore
424: aastore
425: dup
426: bipush        22
428: iconst_2
429: newarray       double
431: dup
432: iconst_0
433: ldc2_w        #296
436: dastore
437: dup
438: iconst_1
439: ldc2_w        #298
442: dastore
443: aastore
444: dup
445: bipush        23
447: iconst_2
448: newarray       double
450: dup
451: iconst_0
452: ldc2_w        #300
455: dastore
456: dup
457: iconst_1
458: ldc2_w        #302
461: dastore
462: aastore
463: dup
464: bipush        24
466: iconst_2
467: newarray       double
469: dup
470: iconst_0
471: ldc2_w        #304
474: dastore
475: dup
476: iconst_1
477: ldc2_w        #306
480: dastore
481: aastore
482: dup
483: bipush        25
485: iconst_2
486: newarray       double
488: dup
489: iconst_0
490: ldc2_w        #308
493: dastore
494: dup
495: iconst_1
496: ldc2_w        #310
499: dastore
500: aastore
501: dup
502: bipush        26
504: iconst_2
505: newarray       double
507: dup
508: iconst_0
509: ldc2_w        #312
512: dastore
513: dup
514: iconst_1
515: ldc2_w        #314
518: dastore
519: aastore
520: dup
521: bipush        27
523: iconst_2
524: newarray       double
526: dup
527: iconst_0
528: ldc2_w        #316
531: dastore
532: dup
533: iconst_1
534: ldc2_w        #318
537: dastore
538: aastore
539: dup
540: bipush        28
542: iconst_2
543: newarray       double
545: dup
546: iconst_0
547: ldc2_w        #320
550: dastore
551: dup
552: iconst_1
553: ldc2_w        #322
556: dastore
557: aastore
558: dup
559: bipush        29
561: iconst_2
562: newarray       double
564: dup
565: iconst_0
566: ldc2_w        #324
569: dastore
570: dup
571: iconst_1
572: ldc2_w        #326
575: dastore
576: aastore
577: dup
578: bipush        30
580: iconst_2
581: newarray       double
583: dup
584: iconst_0
585: ldc2_w        #328
588: dastore
589: dup
590: iconst_1
591: ldc2_w        #330
594: dastore
595: aastore
596: dup
597: bipush        31
599: iconst_2
600: newarray       double
602: dup
603: iconst_0
604: ldc2_w        #332
607: dastore
608: dup
609: iconst_1
610: ldc2_w        #334
613: dastore
614: aastore
615: dup
616: bipush        32
618: iconst_2
619: newarray       double
621: dup
622: iconst_0
623: ldc2_w        #336
626: dastore
627: dup
628: iconst_1
629: ldc2_w        #338
632: dastore
633: aastore
634: dup
635: bipush        33
637: iconst_2
638: newarray       double
640: dup
641: iconst_0
642: ldc2_w        #340
645: dastore
646: dup
647: iconst_1
648: ldc2_w        #342
651: dastore
652: aastore
653: dup
654: bipush        34
656: iconst_2
657: newarray       double
659: dup
660: iconst_0
661: ldc2_w        #344
664: dastore
665: dup
666: iconst_1
667: ldc2_w        #346
670: dastore
671: aastore
672: dup
673: bipush        35
675: iconst_2
676: newarray       double
678: dup
679: iconst_0
680: ldc2_w        #348
683: dastore
684: dup
685: iconst_1
686: ldc2_w        #350
689: dastore
690: aastore
691: dup
692: bipush        36
694: iconst_2
695: newarray       double
697: dup
698: iconst_0
699: ldc2_w        #352
702: dastore
703: dup
704: iconst_1
705: ldc2_w        #354
708: dastore
709: aastore
710: dup
711: bipush        37
713: iconst_2
714: newarray       double
716: dup
717: iconst_0
718: ldc2_w        #356
721: dastore
722: dup
723: iconst_1
724: ldc2_w        #358
727: dastore
728: aastore
729: dup
730: bipush        38
732: iconst_2
733: newarray       double
735: dup
736: iconst_0
737: ldc2_w        #360
740: dastore
741: dup
742: iconst_1
743: ldc2_w        #362
746: dastore
747: aastore
748: dup
749: bipush        39
751: iconst_2
752: newarray       double
754: dup
755: iconst_0
756: ldc2_w        #364
759: dastore
760: dup
761: iconst_1
762: ldc2_w        #366
765: dastore
766: aastore
767: dup
768: bipush        40
770: iconst_2
771: newarray       double
773: dup
774: iconst_0
775: ldc2_w        #368
778: dastore
779: dup
780: iconst_1
781: ldc2_w        #370
784: dastore
785: aastore
786: dup
787: bipush        41
789: iconst_2
790: newarray       double
792: dup
793: iconst_0
794: ldc2_w        #372
797: dastore
798: dup
799: iconst_1
800: ldc2_w        #374
803: dastore
804: aastore
805: dup
806: bipush        42
808: iconst_2
809: newarray       double
811: dup
812: iconst_0
813: ldc2_w        #376
816: dastore
817: dup
818: iconst_1
819: ldc2_w        #378
822: dastore
823: aastore
824: dup
825: bipush        43
827: iconst_2
828: newarray       double
830: dup
831: iconst_0
832: ldc2_w        #380
835: dastore
836: dup
837: iconst_1
838: ldc2_w        #382
841: dastore
842: aastore
843: dup
844: bipush        44
846: iconst_2
847: newarray       double
849: dup
850: iconst_0
851: ldc2_w        #384
854: dastore
855: dup
856: iconst_1
857: ldc2_w        #386
860: dastore
861: aastore
862: dup
863: bipush        45
865: iconst_2
866: newarray       double
868: dup
869: iconst_0
870: ldc2_w        #388
873: dastore
874: dup
875: iconst_1
876: ldc2_w        #390
879: dastore
880: aastore
881: dup
882: bipush        46
884: iconst_2
885: newarray       double
887: dup
888: iconst_0
889: ldc2_w        #392
892: dastore
893: dup
894: iconst_1
895: ldc2_w        #394
898: dastore
899: aastore
900: dup
901: bipush        47
903: iconst_2
904: newarray       double
906: dup
907: iconst_0
908: ldc2_w        #396
911: dastore
912: dup
913: iconst_1
914: ldc2_w        #398
917: dastore
918: aastore
919: dup
920: bipush        48
922: iconst_2
923: newarray       double
925: dup
926: iconst_0
927: ldc2_w        #400
930: dastore
931: dup
932: iconst_1
933: ldc2_w        #402
936: dastore
937: aastore
938: dup
939: bipush        49
941: iconst_2
942: newarray       double
944: dup
945: iconst_0
946: ldc2_w        #404
949: dastore
950: dup
951: iconst_1
952: ldc2_w        #406
955: dastore
956: aastore
957: dup
958: bipush        50
960: iconst_2
961: newarray       double
963: dup
964: iconst_0
965: ldc2_w        #408
968: dastore
969: dup
970: iconst_1
971: ldc2_w        #410
974: dastore
975: aastore
976: dup
977: bipush        51
979: iconst_2
980: newarray       double
982: dup
983: iconst_0
984: ldc2_w        #412
987: dastore
988: dup
989: iconst_1
990: ldc2_w        #414
993: dastore
994: aastore
995: dup
996: bipush        52
998: iconst_2
999: newarray       double
1001: dup
1002: iconst_0
1003: ldc2_w        #416
1006: dastore
1007: dup
1008: iconst_1
1009: ldc2_w        #418
1012: dastore
1013: aastore
1014: dup
1015: bipush        53
1017: iconst_2
1018: newarray       double
1020: dup
1021: iconst_0
1022: ldc2_w        #420
1025: dastore
1026: dup
1027: iconst_1
1028: ldc2_w        #422
1031: dastore
1032: aastore
1033: dup
1034: bipush        54
1036: iconst_2
1037: newarray       double
1039: dup
1040: iconst_0
1041: ldc2_w        #424
1044: dastore
1045: dup
1046: iconst_1
1047: ldc2_w        #426
1050: dastore
1051: aastore
1052: dup
1053: bipush        55
1055: iconst_2
1056: newarray       double
1058: dup
1059: iconst_0
1060: ldc2_w        #428
1063: dastore
1064: dup
1065: iconst_1
1066: ldc2_w        #430
1069: dastore
1070: aastore
1071: dup
1072: bipush        56
1074: iconst_2
1075: newarray       double
1077: dup
1078: iconst_0
1079: ldc2_w        #432
1082: dastore
1083: dup
1084: iconst_1
1085: ldc2_w        #434
1088: dastore
1089: aastore
1090: dup
1091: bipush        57
1093: iconst_2
1094: newarray       double
1096: dup
1097: iconst_0
1098: ldc2_w        #436
1101: dastore
1102: dup
1103: iconst_1
1104: ldc2_w        #438
1107: dastore
1108: aastore
1109: dup
1110: bipush        58
1112: iconst_2
1113: newarray       double
1115: dup
1116: iconst_0
1117: ldc2_w        #440
1120: dastore
1121: dup
1122: iconst_1
1123: ldc2_w        #442
1126: dastore
1127: aastore
1128: dup
1129: bipush        59
1131: iconst_2
1132: newarray       double
1134: dup
1135: iconst_0
1136: ldc2_w        #444
1139: dastore
1140: dup
1141: iconst_1
1142: ldc2_w        #446
1145: dastore
1146: aastore
1147: dup
1148: bipush        60
1150: iconst_2
1151: newarray       double
1153: dup
1154: iconst_0
1155: ldc2_w        #448
1158: dastore
1159: dup
1160: iconst_1
1161: ldc2_w        #450
1164: dastore
1165: aastore
1166: dup
1167: bipush        61
1169: iconst_2
1170: newarray       double
1172: dup
1173: iconst_0
1174: ldc2_w        #452
1177: dastore
1178: dup
1179: iconst_1
1180: ldc2_w        #454
1183: dastore
1184: aastore
1185: dup
1186: bipush        62
1188: iconst_2
1189: newarray       double
1191: dup
1192: iconst_0
1193: ldc2_w        #456
1196: dastore
1197: dup
1198: iconst_1
1199: ldc2_w        #458
1202: dastore
1203: aastore
1204: dup
1205: bipush        63
1207: iconst_2
1208: newarray       double
1210: dup
1211: iconst_0
1212: ldc2_w        #460
1215: dastore
1216: dup
1217: iconst_1
1218: ldc2_w        #462
1221: dastore
1222: aastore
1223: dup
1224: bipush        64
1226: iconst_2
1227: newarray       double
1229: dup
1230: iconst_0
1231: ldc2_w        #464
1234: dastore
1235: dup
1236: iconst_1
1237: ldc2_w        #466
1240: dastore
1241: aastore
1242: dup
1243: bipush        65
1245: iconst_2
1246: newarray       double
1248: dup
1249: iconst_0
1250: ldc2_w        #468
1253: dastore
1254: dup
1255: iconst_1
1256: ldc2_w        #470
1259: dastore
1260: aastore
1261: dup
1262: bipush        66
1264: iconst_2
1265: newarray       double
1267: dup
1268: iconst_0
1269: ldc2_w        #472
1272: dastore
1273: dup
1274: iconst_1
1275: ldc2_w        #474
1278: dastore
1279: aastore
1280: dup
1281: bipush        67
1283: iconst_2
1284: newarray       double
1286: dup
1287: iconst_0
1288: ldc2_w        #476
1291: dastore
1292: dup
1293: iconst_1
1294: ldc2_w        #478
1297: dastore
1298: aastore
1299: dup
1300: bipush        68
1302: iconst_2
1303: newarray       double
1305: dup
1306: iconst_0
1307: ldc2_w        #480
1310: dastore
1311: dup
1312: iconst_1
1313: ldc2_w        #482
1316: dastore
1317: aastore
1318: dup
1319: bipush        69
1321: iconst_2
1322: newarray       double
1324: dup
1325: iconst_0
1326: ldc2_w        #484
1329: dastore
1330: dup
1331: iconst_1
1332: ldc2_w        #486
1335: dastore
1336: aastore
1337: dup
1338: bipush        70
1340: iconst_2
1341: newarray       double
1343: dup
1344: iconst_0
1345: ldc2_w        #488
1348: dastore
1349: dup
1350: iconst_1
1351: ldc2_w        #490
1354: dastore
1355: aastore
1356: dup
1357: bipush        71
1359: iconst_2
1360: newarray       double
1362: dup
1363: iconst_0
1364: ldc2_w        #492
1367: dastore
1368: dup
1369: iconst_1
1370: ldc2_w        #494
1373: dastore
1374: aastore
1375: dup
1376: bipush        72
1378: iconst_2
1379: newarray       double
1381: dup
1382: iconst_0
1383: ldc2_w        #496
1386: dastore
1387: dup
1388: iconst_1
1389: ldc2_w        #498
1392: dastore
1393: aastore
1394: dup
1395: bipush        73
1397: iconst_2
1398: newarray       double
1400: dup
1401: iconst_0
1402: ldc2_w        #500
1405: dastore
1406: dup
1407: iconst_1
1408: ldc2_w        #502
1411: dastore
1412: aastore
1413: dup
1414: bipush        74
1416: iconst_2
1417: newarray       double
1419: dup
1420: iconst_0
1421: ldc2_w        #504
1424: dastore
1425: dup
1426: iconst_1
1427: ldc2_w        #506
1430: dastore
1431: aastore
1432: dup
1433: bipush        75
1435: iconst_2
1436: newarray       double
1438: dup
1439: iconst_0
1440: ldc2_w        #508
1443: dastore
1444: dup
1445: iconst_1
1446: ldc2_w        #510
1449: dastore
1450: aastore
1451: dup
1452: bipush        76
1454: iconst_2
1455: newarray       double
1457: dup
1458: iconst_0
1459: ldc2_w        #512
1462: dastore
1463: dup
1464: iconst_1
1465: ldc2_w        #514
1468: dastore
1469: aastore
1470: dup
1471: bipush        77
1473: iconst_2
1474: newarray       double
1476: dup
1477: iconst_0
1478: ldc2_w        #516
1481: dastore
1482: dup
1483: iconst_1
1484: ldc2_w        #518
1487: dastore
1488: aastore
1489: dup
1490: bipush        78
1492: iconst_2
1493: newarray       double
1495: dup
1496: iconst_0
1497: ldc2_w        #520
1500: dastore
1501: dup
1502: iconst_1
1503: ldc2_w        #522
1506: dastore
1507: aastore
1508: dup
1509: bipush        79
1511: iconst_2
1512: newarray       double
1514: dup
1515: iconst_0
1516: ldc2_w        #524
1519: dastore
1520: dup
1521: iconst_1
1522: ldc2_w        #526
1525: dastore
1526: aastore
1527: dup
1528: bipush        80
1530: iconst_2
1531: newarray       double
1533: dup
1534: iconst_0
1535: ldc2_w        #528
1538: dastore
1539: dup
1540: iconst_1
1541: ldc2_w        #530
1544: dastore
1545: aastore
1546: dup
1547: bipush        81
1549: iconst_2
1550: newarray       double
1552: dup
1553: iconst_0
1554: ldc2_w        #532
1557: dastore
1558: dup
1559: iconst_1
1560: ldc2_w        #534
1563: dastore
1564: aastore
1565: dup
1566: bipush        82
1568: iconst_2
1569: newarray       double
1571: dup
1572: iconst_0
1573: ldc2_w        #536
1576: dastore
1577: dup
1578: iconst_1
1579: ldc2_w        #538
1582: dastore
1583: aastore
1584: dup
1585: bipush        83
1587: iconst_2
1588: newarray       double
1590: dup
1591: iconst_0
1592: ldc2_w        #540
1595: dastore
1596: dup
1597: iconst_1
1598: ldc2_w        #542
1601: dastore
1602: aastore
1603: dup
1604: bipush        84
1606: iconst_2
1607: newarray       double
1609: dup
1610: iconst_0
1611: ldc2_w        #544
1614: dastore
1615: dup
1616: iconst_1
1617: ldc2_w        #546
1620: dastore
1621: aastore
1622: dup
1623: bipush        85
1625: iconst_2
1626: newarray       double
1628: dup
1629: iconst_0
1630: ldc2_w        #548
1633: dastore
1634: dup
1635: iconst_1
1636: ldc2_w        #550
1639: dastore
1640: aastore
1641: dup
1642: bipush        86
1644: iconst_2
1645: newarray       double
1647: dup
1648: iconst_0
1649: ldc2_w        #552
1652: dastore
1653: dup
1654: iconst_1
1655: ldc2_w        #554
1658: dastore
1659: aastore
1660: astore_2
1661: aload_2
1662: arraylength
1663: newarray       double
1665: astore_3
1666: aload_3
1667: dconst_0
1668: invokestatic  #199
1671: aload_2
1672: arraylength
1673: newarray       double
1675: astore        4
1677: aload         4
1679: ldc2_w        #4
1682: invokestatic  #199
1685: iconst_0
1686: istore        5
1688: iload         5
1690: aload_2
1691: arraylength
1692: if_icmpge     1717
1695: aload_1
1696: aload_2
1697: iload         5
1699: aaload
1700: iconst_0
1701: daload
1702: aload_2
1703: iload         5
1705: aaload
1706: iconst_1
1707: daload
1708: invokevirtual #122
1711: iinc          5, 1
1714: goto          1688
1717: new           #9
1720: dup
1721: invokespecial #10
1724: astore        5
1726: aload         5
1728: new           #556
1731: dup
1732: ldc2_w        #102
1735: ldc2_w        #102
1738: invokespecial #557
1741: invokevirtual #558
1744: aload         5
1746: aload_1
1747: aload_3
1748: aload         4
1750: iconst_2
1751: newarray       double
1753: dup
1754: iconst_0
1755: ldc2_w        #59
1758: dastore
1759: dup
1760: iconst_1
1761: ldc2_w        #59
1764: dastore
1765: invokevirtual #12
1768: astore        6
1770: new           #169
1773: dup
1774: aload         6
1776: invokevirtual #112
1779: iconst_0
1780: daload
1781: aload         6
1783: invokevirtual #112
1786: iconst_1
1787: daload
1788: invokespecial #170
1791: astore        7
1793: aload         5
1795: invokevirtual #164
1798: bipush        25
1800: if_icmpge     1807
1803: iconst_1
1804: goto          1808
1807: iconst_0
1808: invokestatic  #66
1811: aload         5
1813: invokevirtual #165
1816: bipush        20
1818: if_icmpge     1825
1821: iconst_1
1822: goto          1826
1825: iconst_0
1826: invokestatic  #66
1829: ldc2_w        #559
1832: aload         5
1834: invokevirtual #13
1837: ldc2_w        #182
1840: invokestatic  #16
1843: ldc2_w        #561
1846: aload_1
1847: aload         7
1849: invokevirtual #173
1852: ldc2_w        #563
1855: invokestatic  #16
1858: ldc2_w        #565
1861: aload         7
1863: getfield      #176
1866: ldc2_w        #563
1869: invokestatic  #16
1872: ldc2_w        #567
1875: aload         7
1877: getfield      #179
1880: ldc2_w        #563
1883: invokestatic  #16
1886: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.class
Class name: LevenbergMarquardtOptimizerTest
Method name: testMath199
Start line: 499
End line: 518
Method source code: 
    public void testMath199() throws FunctionEvaluationException {
        try {
            QuadraticProblem problem = new QuadraticProblem();
            problem.addPoint (0, -3.182591015485607);
            problem.addPoint (1, -2.5581184967730577);
            problem.addPoint (2, -2.1488478161387325);
            problem.addPoint (3, -1.9122489313410047);
            problem.addPoint (4, 1.7785661310051026);
            LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
            optimizer.setQRRankingThreshold(0);
            optimizer.optimize(problem,
                               new double[] { 0, 0, 0, 0, 0 },
                               new double[] { 0.0, 4.4e-323, 1.0, 4.4e-323, 0.0 },
                               new double[] { 0, 0, 0 });
            fail("an exception should have been thrown");
        } catch (OptimizationException ee) {
            // expected behavior
        }

    }
Method byte code: 
0: new           #569
3: dup
4: invokespecial #570
7: astore_1
8: aload_1
9: dconst_0
10: ldc2_w        #571
13: invokevirtual #573
16: aload_1
17: dconst_1
18: ldc2_w        #574
21: invokevirtual #573
24: aload_1
25: ldc2_w        #4
28: ldc2_w        #576
31: invokevirtual #573
34: aload_1
35: ldc2_w        #6
38: ldc2_w        #578
41: invokevirtual #573
44: aload_1
45: ldc2_w        #31
48: ldc2_w        #580
51: invokevirtual #573
54: new           #9
57: dup
58: invokespecial #10
61: astore_2
62: aload_2
63: dconst_0
64: invokevirtual #582
67: aload_2
68: aload_1
69: iconst_5
70: newarray       double
72: dup
73: iconst_0
74: dconst_0
75: dastore
76: dup
77: iconst_1
78: dconst_0
79: dastore
80: dup
81: iconst_2
82: dconst_0
83: dastore
84: dup
85: iconst_3
86: dconst_0
87: dastore
88: dup
89: iconst_4
90: dconst_0
91: dastore
92: iconst_5
93: newarray       double
95: dup
96: iconst_0
97: dconst_0
98: dastore
99: dup
100: iconst_1
101: ldc2_w        #583
104: dastore
105: dup
106: iconst_2
107: dconst_1
108: dastore
109: dup
110: iconst_3
111: ldc2_w        #583
114: dastore
115: dup
116: iconst_4
117: dconst_0
118: dastore
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: dconst_0
125: dastore
126: dup
127: iconst_1
128: dconst_0
129: dastore
130: dup
131: iconst_2
132: dconst_0
133: dastore
134: invokevirtual #12
137: pop
138: ldc           #18
140: invokestatic  #19
143: goto          147
146: astore_1
147: return
Exception table:
from    to  target type
0   143   146   Class org/apache/commons/math/optimization/OptimizationException
}
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearFullRank
Start line: 98
End line: 103
Method source code: 
  public void testMinpackLinearFullRank() {
    minpackTest(new LinearFullRankFunction(10, 5, 1.0,
                                           5.0, 2.23606797749979), false);
    minpackTest(new LinearFullRankFunction(50, 5, 1.0,
                                           8.06225774829855, 6.70820393249937), false);
  }
Method byte code: 
0: aload_0
1: new           #2
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: ldc2_w        #3
12: ldc2_w        #5
15: invokespecial #7
18: iconst_0
19: invokespecial #8
22: aload_0
23: new           #2
26: dup
27: bipush        50
29: iconst_5
30: dconst_1
31: ldc2_w        #9
34: ldc2_w        #11
37: invokespecial #7
40: iconst_0
41: invokespecial #8
44: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearRank1
Start line: 105
End line: 110
Method source code: 
  public void testMinpackLinearRank1() {
    minpackTest(new LinearRank1Function(10, 5, 1.0,
                                        291.521868819476, 1.4638501094228), false);
    minpackTest(new LinearRank1Function(50, 5, 1.0,
                                        3101.60039334535, 3.48263016573496), false);
  }
Method byte code: 
0: aload_0
1: new           #13
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: ldc2_w        #14
12: ldc2_w        #16
15: invokespecial #18
18: iconst_0
19: invokespecial #8
22: aload_0
23: new           #13
26: dup
27: bipush        50
29: iconst_5
30: dconst_1
31: ldc2_w        #19
34: ldc2_w        #21
37: invokespecial #18
40: iconst_0
41: invokespecial #8
44: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackLinearRank1ZeroColsAndRows
Start line: 112
End line: 115
Method source code: 
  public void testMinpackLinearRank1ZeroColsAndRows() {
    minpackTest(new LinearRank1ZeroColsAndRowsFunction(10, 5, 1.0), false);
    minpackTest(new LinearRank1ZeroColsAndRowsFunction(50, 5, 1.0), false);
  }
Method byte code: 
0: aload_0
1: new           #23
4: dup
5: bipush        10
7: iconst_5
8: dconst_1
9: invokespecial #24
12: iconst_0
13: invokespecial #8
16: aload_0
17: new           #23
20: dup
21: bipush        50
23: iconst_5
24: dconst_1
25: invokespecial #24
28: iconst_0
29: invokespecial #8
32: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackRosenbrok
Start line: 117
End line: 124
Method source code: 
  public void testMinpackRosenbrok() {
    minpackTest(new RosenbrockFunction(new double[] { -1.2, 1.0 },
                                       Math.sqrt(24.2)), false);
    minpackTest(new RosenbrockFunction(new double[] { -12.0, 10.0 },
                                       Math.sqrt(1795769.0)), false);
    minpackTest(new RosenbrockFunction(new double[] { -120.0, 100.0 },
                                       11.0 * Math.sqrt(169000121.0)), false);
  }
Method byte code: 
0: aload_0
1: new           #25
4: dup
5: iconst_2
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #26
13: dastore
14: dup
15: iconst_1
16: dconst_1
17: dastore
18: ldc2_w        #28
21: invokestatic  #30
24: invokespecial #31
27: iconst_0
28: invokespecial #8
31: aload_0
32: new           #25
35: dup
36: iconst_2
37: newarray       double
39: dup
40: iconst_0
41: ldc2_w        #32
44: dastore
45: dup
46: iconst_1
47: ldc2_w        #34
50: dastore
51: ldc2_w        #36
54: invokestatic  #30
57: invokespecial #31
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #25
68: dup
69: iconst_2
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #38
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #40
83: dastore
84: ldc2_w        #42
87: ldc2_w        #44
90: invokestatic  #30
93: dmul
94: invokespecial #31
97: iconst_0
98: invokespecial #8
101: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackHelicalValley
Start line: 126
End line: 133
Method source code: 
  public void testMinpackHelicalValley() {
    minpackTest(new HelicalValleyFunction(new double[] { -1.0, 0.0, 0.0 },
                                          50.0), false);
    minpackTest(new HelicalValleyFunction(new double[] { -10.0, 0.0, 0.0 },
                                          102.95630140987), false);
    minpackTest(new HelicalValleyFunction(new double[] { -100.0, 0.0, 0.0},
                                          991.261822123701), false);
  }
Method byte code: 
0: aload_0
1: new           #46
4: dup
5: iconst_3
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #47
13: dastore
14: dup
15: iconst_1
16: dconst_0
17: dastore
18: dup
19: iconst_2
20: dconst_0
21: dastore
22: ldc2_w        #49
25: invokespecial #51
28: iconst_0
29: invokespecial #8
32: aload_0
33: new           #46
36: dup
37: iconst_3
38: newarray       double
40: dup
41: iconst_0
42: ldc2_w        #52
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: dup
51: iconst_2
52: dconst_0
53: dastore
54: ldc2_w        #54
57: invokespecial #51
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #46
68: dup
69: iconst_3
70: newarray       double
72: dup
73: iconst_0
74: ldc2_w        #56
77: dastore
78: dup
79: iconst_1
80: dconst_0
81: dastore
82: dup
83: iconst_2
84: dconst_0
85: dastore
86: ldc2_w        #58
89: invokespecial #51
92: iconst_0
93: invokespecial #8
96: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackPowellSingular
Start line: 135
End line: 142
Method source code: 
  public void testMinpackPowellSingular() {
    minpackTest(new PowellSingularFunction(new double[] { 3.0, -1.0, 0.0, 1.0 },
                                           14.6628782986152), false);
    minpackTest(new PowellSingularFunction(new double[] { 30.0, -10.0, 0.0, 10.0 },
                                           1270.9838708654), false);
    minpackTest(new PowellSingularFunction(new double[] { 300.0, -100.0, 0.0, 100.0 },
                                           126887.903284750), false);
  }
Method byte code: 
0: aload_0
1: new           #60
4: dup
5: iconst_4
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #61
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #47
19: dastore
20: dup
21: iconst_2
22: dconst_0
23: dastore
24: dup
25: iconst_3
26: dconst_1
27: dastore
28: ldc2_w        #63
31: invokespecial #65
34: iconst_0
35: invokespecial #8
38: aload_0
39: new           #60
42: dup
43: iconst_4
44: newarray       double
46: dup
47: iconst_0
48: ldc2_w        #66
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #52
57: dastore
58: dup
59: iconst_2
60: dconst_0
61: dastore
62: dup
63: iconst_3
64: ldc2_w        #34
67: dastore
68: ldc2_w        #68
71: invokespecial #65
74: iconst_0
75: invokespecial #8
78: aload_0
79: new           #60
82: dup
83: iconst_4
84: newarray       double
86: dup
87: iconst_0
88: ldc2_w        #70
91: dastore
92: dup
93: iconst_1
94: ldc2_w        #56
97: dastore
98: dup
99: iconst_2
100: dconst_0
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #40
107: dastore
108: ldc2_w        #72
111: invokespecial #65
114: iconst_0
115: invokespecial #8
118: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackFreudensteinRoth
Start line: 144
End line: 163
Method source code: 
  public void testMinpackFreudensteinRoth() {
    minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 },
                                             20.0124960961895, 6.99887517584575,
                                             new double[] {
                                               11.4124844654993,
                                               -0.896827913731509
                                             }), false);
    minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },
                                             12432.833948863, 6.9988751744895,
                                             new double[] {
                                                11.41300466147456,
                                                -0.896796038685959
                                             }), false);
    minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },
                                             11426454.595762, 6.99887517242903,
                                             new double[] {
                                                 11.412781785788564,
                                                 -0.8968051074920405
                                             }), false);
  }
Method byte code: 
0: aload_0
1: new           #74
4: dup
5: iconst_2
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #75
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #77
19: dastore
20: ldc2_w        #79
23: ldc2_w        #81
26: iconst_2
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #83
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #85
40: dastore
41: invokespecial #87
44: iconst_0
45: invokespecial #8
48: aload_0
49: new           #74
52: dup
53: iconst_2
54: newarray       double
56: dup
57: iconst_0
58: ldc2_w        #3
61: dastore
62: dup
63: iconst_1
64: ldc2_w        #88
67: dastore
68: ldc2_w        #90
71: ldc2_w        #92
74: iconst_2
75: newarray       double
77: dup
78: iconst_0
79: ldc2_w        #94
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #96
88: dastore
89: invokespecial #87
92: iconst_0
93: invokespecial #8
96: aload_0
97: new           #74
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #49
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #98
115: dastore
116: ldc2_w        #100
119: ldc2_w        #102
122: iconst_2
123: newarray       double
125: dup
126: iconst_0
127: ldc2_w        #104
130: dastore
131: dup
132: iconst_1
133: ldc2_w        #106
136: dastore
137: invokespecial #87
140: iconst_0
141: invokespecial #8
144: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBard
Start line: 165
End line: 184
Method source code: 
  public void testMinpackBard() {
    minpackTest(new BardFunction(1.0, 6.45613629515967, 0.0906359603390466,
                                 new double[] {
                                   0.0824105765758334,
                                   1.1330366534715,
                                   2.34369463894115
                                 }), false);
    minpackTest(new BardFunction(10.0, 36.1418531596785, 4.17476870138539,
                                 new double[] {
                                   0.840666673818329,
                                   -158848033.259565,
                                   -164378671.653535
                                 }), false);
    minpackTest(new BardFunction(100.0, 384.114678637399, 4.17476870135969,
                                 new double[] {
                                   0.840666673867645,
                                   -158946167.205518,
                                   -164464906.857771
                                 }), false);
  }
Method byte code: 
0: aload_0
1: new           #108
4: dup
5: dconst_1
6: ldc2_w        #109
9: ldc2_w        #111
12: iconst_3
13: newarray       double
15: dup
16: iconst_0
17: ldc2_w        #113
20: dastore
21: dup
22: iconst_1
23: ldc2_w        #115
26: dastore
27: dup
28: iconst_2
29: ldc2_w        #117
32: dastore
33: invokespecial #119
36: iconst_0
37: invokespecial #8
40: aload_0
41: new           #108
44: dup
45: ldc2_w        #34
48: ldc2_w        #120
51: ldc2_w        #122
54: iconst_3
55: newarray       double
57: dup
58: iconst_0
59: ldc2_w        #124
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #126
68: dastore
69: dup
70: iconst_2
71: ldc2_w        #128
74: dastore
75: invokespecial #119
78: iconst_0
79: invokespecial #8
82: aload_0
83: new           #108
86: dup
87: ldc2_w        #40
90: ldc2_w        #130
93: ldc2_w        #132
96: iconst_3
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #134
104: dastore
105: dup
106: iconst_1
107: ldc2_w        #136
110: dastore
111: dup
112: iconst_2
113: ldc2_w        #138
116: dastore
117: invokespecial #119
120: iconst_0
121: invokespecial #8
124: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackKowalikOsborne
Start line: 186
End line: 214
Method source code: 
  public void testMinpackKowalikOsborne() {
    minpackTest(new KowalikOsborneFunction(new double[] { 0.25, 0.39, 0.415, 0.39 },
                                           0.0728915102882945,
                                           0.017535837721129,
                                           new double[] {
                                             0.192807810476249,
                                             0.191262653354071,
                                             0.123052801046931,
                                             0.136053221150517
                                           }), false);
    minpackTest(new KowalikOsborneFunction(new double[] { 2.5, 3.9, 4.15, 3.9 },
                                           2.97937007555202,
                                           0.032052192917937,
                                           new double[] {
                                             728675.473768287,
                                             -14.0758803129393,
                                             -32977797.7841797,
                                             -20571594.1977912
                                           }), false);
    minpackTest(new KowalikOsborneFunction(new double[] { 25.0, 39.0, 41.5, 39.0 },
                                           29.9590617016037,
                                           0.0175364017658228,
                                           new double[] {
                                             0.192948328597594,
                                             0.188053165007911,
                                             0.122430604321144,
                                             0.134575665392506
                                           }), false);
  }
Method byte code: 
0: aload_0
1: new           #140
4: dup
5: iconst_4
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #141
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #143
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #145
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #143
31: dastore
32: ldc2_w        #147
35: ldc2_w        #149
38: iconst_4
39: newarray       double
41: dup
42: iconst_0
43: ldc2_w        #151
46: dastore
47: dup
48: iconst_1
49: ldc2_w        #153
52: dastore
53: dup
54: iconst_2
55: ldc2_w        #155
58: dastore
59: dup
60: iconst_3
61: ldc2_w        #157
64: dastore
65: invokespecial #159
68: iconst_0
69: invokespecial #8
72: aload_0
73: new           #140
76: dup
77: iconst_4
78: newarray       double
80: dup
81: iconst_0
82: ldc2_w        #160
85: dastore
86: dup
87: iconst_1
88: ldc2_w        #162
91: dastore
92: dup
93: iconst_2
94: ldc2_w        #164
97: dastore
98: dup
99: iconst_3
100: ldc2_w        #162
103: dastore
104: ldc2_w        #166
107: ldc2_w        #168
110: iconst_4
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #170
118: dastore
119: dup
120: iconst_1
121: ldc2_w        #172
124: dastore
125: dup
126: iconst_2
127: ldc2_w        #174
130: dastore
131: dup
132: iconst_3
133: ldc2_w        #176
136: dastore
137: invokespecial #159
140: iconst_0
141: invokespecial #8
144: aload_0
145: new           #140
148: dup
149: iconst_4
150: newarray       double
152: dup
153: iconst_0
154: ldc2_w        #178
157: dastore
158: dup
159: iconst_1
160: ldc2_w        #180
163: dastore
164: dup
165: iconst_2
166: ldc2_w        #182
169: dastore
170: dup
171: iconst_3
172: ldc2_w        #180
175: dastore
176: ldc2_w        #184
179: ldc2_w        #186
182: iconst_4
183: newarray       double
185: dup
186: iconst_0
187: ldc2_w        #188
190: dastore
191: dup
192: iconst_1
193: ldc2_w        #190
196: dastore
197: dup
198: iconst_2
199: ldc2_w        #192
202: dastore
203: dup
204: iconst_3
205: ldc2_w        #194
208: dastore
209: invokespecial #159
212: iconst_0
213: invokespecial #8
216: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackMeyer
Start line: 216
End line: 231
Method source code: 
  public void testMinpackMeyer() {
    minpackTest(new MeyerFunction(new double[] { 0.02, 4000.0, 250.0 },
                                  41153.4665543031, 9.37794514651874,
                                  new double[] {
                                    0.00560963647102661,
                                    6181.34634628659,
                                    345.223634624144
                                  }), false);
    minpackTest(new MeyerFunction(new double[] { 0.2, 40000.0, 2500.0 },
                                  4168216.89130846, 792.917871779501,
                                  new double[] {
                                    1.42367074157994e-11,
                                    33695.7133432541,
                                    901.268527953801
                                  }), true);
  }
Method byte code: 
0: aload_0
1: new           #196
4: dup
5: iconst_3
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #197
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #199
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #201
25: dastore
26: ldc2_w        #203
29: ldc2_w        #205
32: iconst_3
33: newarray       double
35: dup
36: iconst_0
37: ldc2_w        #207
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #209
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #211
52: dastore
53: invokespecial #213
56: iconst_0
57: invokespecial #8
60: aload_0
61: new           #196
64: dup
65: iconst_3
66: newarray       double
68: dup
69: iconst_0
70: ldc2_w        #214
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #216
79: dastore
80: dup
81: iconst_2
82: ldc2_w        #218
85: dastore
86: ldc2_w        #220
89: ldc2_w        #222
92: iconst_3
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #224
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #226
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #228
112: dastore
113: invokespecial #213
116: iconst_1
117: invokespecial #8
120: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackWatson
Start line: 233
End line: 316
Method source code: 
  public void testMinpackWatson() {

    minpackTest(new WatsonFunction(6, 0.0,
                                   5.47722557505166, 0.0478295939097601,
                                   new double[] {
                                     -0.0157249615083782, 1.01243488232965,
                                     -0.232991722387673,  1.26043101102818,
                                     -1.51373031394421,   0.99299727291842
                                   }), false);
    minpackTest(new WatsonFunction(6, 10.0,
                                   6433.12578950026, 0.0478295939096951,
                                   new double[] {
                                     -0.0157251901386677, 1.01243485860105,
                                     -0.232991545843829,  1.26042932089163,
                                     -1.51372776706575,   0.99299573426328
                                   }), false);
    minpackTest(new WatsonFunction(6, 100.0,
                                   674256.040605213, 0.047829593911544,
                                   new double[] {
                                    -0.0157247019712586, 1.01243490925658,
                                    -0.232991922761641,  1.26043292929555,
                                    -1.51373320452707,   0.99299901922322
                                   }), false);

    minpackTest(new WatsonFunction(9, 0.0,
                                   5.47722557505166, 0.00118311459212420,
                                   new double[] {
                                    -0.153070644166722e-4, 0.999789703934597,
                                     0.0147639634910978,   0.146342330145992,
                                     1.00082109454817,    -2.61773112070507,
                                     4.10440313943354,    -3.14361226236241,
                                     1.05262640378759
                                   }), false);
    minpackTest(new WatsonFunction(9, 10.0,
                                   12088.127069307, 0.00118311459212513,
                                   new double[] {
                                   -0.153071334849279e-4, 0.999789703941234,
                                    0.0147639629786217,   0.146342334818836,
                                    1.00082107321386,    -2.61773107084722,
                                    4.10440307655564,    -3.14361222178686,
                                    1.05262639322589
                                   }), false);
    minpackTest(new WatsonFunction(9, 100.0,
                                   1269109.29043834, 0.00118311459212384,
                                   new double[] {
                                    -0.153069523352176e-4, 0.999789703958371,
                                     0.0147639625185392,   0.146342341096326,
                                     1.00082104729164,    -2.61773101573645,
                                     4.10440301427286,    -3.14361218602503,
                                     1.05262638516774
                                   }), false);

    minpackTest(new WatsonFunction(12, 0.0,
                                   5.47722557505166, 0.217310402535861e-4,
                                   new double[] {
                                    -0.660266001396382e-8, 1.00000164411833,
                                    -0.000563932146980154, 0.347820540050756,
                                    -0.156731500244233,    1.05281515825593,
                                    -3.24727109519451,     7.2884347837505,
                                   -10.271848098614,       9.07411353715783,
                                    -4.54137541918194,     1.01201187975044
                                   }), false);
    minpackTest(new WatsonFunction(12, 10.0,
                                   19220.7589790951, 0.217310402518509e-4,
                                   new double[] {
                                    -0.663710223017410e-8, 1.00000164411787,
                                    -0.000563932208347327, 0.347820540486998,
                                    -0.156731503955652,    1.05281517654573,
                                    -3.2472711515214,      7.28843489430665,
                                   -10.2718482369638,      9.07411364383733,
                                    -4.54137546533666,     1.01201188830857
                                   }), false);
    minpackTest(new WatsonFunction(12, 100.0,
                                   2018918.04462367, 0.217310402539845e-4,
                                   new double[] {
                                    -0.663806046485249e-8, 1.00000164411786,
                                    -0.000563932210324959, 0.347820540503588,
                                    -0.156731504091375,    1.05281517718031,
                                    -3.24727115337025,     7.28843489775302,
                                   -10.2718482410813,      9.07411364688464,
                                    -4.54137546660822,     1.0120118885369
                                   }), false);

  }
Method byte code: 
0: aload_0
1: new           #230
4: dup
5: bipush        6
7: dconst_0
8: ldc2_w        #231
11: ldc2_w        #233
14: bipush        6
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #235
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #237
29: dastore
30: dup
31: iconst_2
32: ldc2_w        #239
35: dastore
36: dup
37: iconst_3
38: ldc2_w        #241
41: dastore
42: dup
43: iconst_4
44: ldc2_w        #243
47: dastore
48: dup
49: iconst_5
50: ldc2_w        #245
53: dastore
54: invokespecial #247
57: iconst_0
58: invokespecial #8
61: aload_0
62: new           #230
65: dup
66: bipush        6
68: ldc2_w        #34
71: ldc2_w        #248
74: ldc2_w        #250
77: bipush        6
79: newarray       double
81: dup
82: iconst_0
83: ldc2_w        #252
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #254
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #256
98: dastore
99: dup
100: iconst_3
101: ldc2_w        #258
104: dastore
105: dup
106: iconst_4
107: ldc2_w        #260
110: dastore
111: dup
112: iconst_5
113: ldc2_w        #262
116: dastore
117: invokespecial #247
120: iconst_0
121: invokespecial #8
124: aload_0
125: new           #230
128: dup
129: bipush        6
131: ldc2_w        #40
134: ldc2_w        #264
137: ldc2_w        #266
140: bipush        6
142: newarray       double
144: dup
145: iconst_0
146: ldc2_w        #268
149: dastore
150: dup
151: iconst_1
152: ldc2_w        #270
155: dastore
156: dup
157: iconst_2
158: ldc2_w        #272
161: dastore
162: dup
163: iconst_3
164: ldc2_w        #274
167: dastore
168: dup
169: iconst_4
170: ldc2_w        #276
173: dastore
174: dup
175: iconst_5
176: ldc2_w        #278
179: dastore
180: invokespecial #247
183: iconst_0
184: invokespecial #8
187: aload_0
188: new           #230
191: dup
192: bipush        9
194: dconst_0
195: ldc2_w        #231
198: ldc2_w        #280
201: bipush        9
203: newarray       double
205: dup
206: iconst_0
207: ldc2_w        #282
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #284
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #286
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #288
228: dastore
229: dup
230: iconst_4
231: ldc2_w        #290
234: dastore
235: dup
236: iconst_5
237: ldc2_w        #292
240: dastore
241: dup
242: bipush        6
244: ldc2_w        #294
247: dastore
248: dup
249: bipush        7
251: ldc2_w        #296
254: dastore
255: dup
256: bipush        8
258: ldc2_w        #298
261: dastore
262: invokespecial #247
265: iconst_0
266: invokespecial #8
269: aload_0
270: new           #230
273: dup
274: bipush        9
276: ldc2_w        #34
279: ldc2_w        #300
282: ldc2_w        #302
285: bipush        9
287: newarray       double
289: dup
290: iconst_0
291: ldc2_w        #304
294: dastore
295: dup
296: iconst_1
297: ldc2_w        #306
300: dastore
301: dup
302: iconst_2
303: ldc2_w        #308
306: dastore
307: dup
308: iconst_3
309: ldc2_w        #310
312: dastore
313: dup
314: iconst_4
315: ldc2_w        #312
318: dastore
319: dup
320: iconst_5
321: ldc2_w        #314
324: dastore
325: dup
326: bipush        6
328: ldc2_w        #316
331: dastore
332: dup
333: bipush        7
335: ldc2_w        #318
338: dastore
339: dup
340: bipush        8
342: ldc2_w        #320
345: dastore
346: invokespecial #247
349: iconst_0
350: invokespecial #8
353: aload_0
354: new           #230
357: dup
358: bipush        9
360: ldc2_w        #40
363: ldc2_w        #322
366: ldc2_w        #324
369: bipush        9
371: newarray       double
373: dup
374: iconst_0
375: ldc2_w        #326
378: dastore
379: dup
380: iconst_1
381: ldc2_w        #328
384: dastore
385: dup
386: iconst_2
387: ldc2_w        #330
390: dastore
391: dup
392: iconst_3
393: ldc2_w        #332
396: dastore
397: dup
398: iconst_4
399: ldc2_w        #334
402: dastore
403: dup
404: iconst_5
405: ldc2_w        #336
408: dastore
409: dup
410: bipush        6
412: ldc2_w        #338
415: dastore
416: dup
417: bipush        7
419: ldc2_w        #340
422: dastore
423: dup
424: bipush        8
426: ldc2_w        #342
429: dastore
430: invokespecial #247
433: iconst_0
434: invokespecial #8
437: aload_0
438: new           #230
441: dup
442: bipush        12
444: dconst_0
445: ldc2_w        #231
448: ldc2_w        #344
451: bipush        12
453: newarray       double
455: dup
456: iconst_0
457: ldc2_w        #346
460: dastore
461: dup
462: iconst_1
463: ldc2_w        #348
466: dastore
467: dup
468: iconst_2
469: ldc2_w        #350
472: dastore
473: dup
474: iconst_3
475: ldc2_w        #352
478: dastore
479: dup
480: iconst_4
481: ldc2_w        #354
484: dastore
485: dup
486: iconst_5
487: ldc2_w        #356
490: dastore
491: dup
492: bipush        6
494: ldc2_w        #358
497: dastore
498: dup
499: bipush        7
501: ldc2_w        #360
504: dastore
505: dup
506: bipush        8
508: ldc2_w        #362
511: dastore
512: dup
513: bipush        9
515: ldc2_w        #364
518: dastore
519: dup
520: bipush        10
522: ldc2_w        #366
525: dastore
526: dup
527: bipush        11
529: ldc2_w        #368
532: dastore
533: invokespecial #247
536: iconst_0
537: invokespecial #8
540: aload_0
541: new           #230
544: dup
545: bipush        12
547: ldc2_w        #34
550: ldc2_w        #370
553: ldc2_w        #372
556: bipush        12
558: newarray       double
560: dup
561: iconst_0
562: ldc2_w        #374
565: dastore
566: dup
567: iconst_1
568: ldc2_w        #376
571: dastore
572: dup
573: iconst_2
574: ldc2_w        #378
577: dastore
578: dup
579: iconst_3
580: ldc2_w        #380
583: dastore
584: dup
585: iconst_4
586: ldc2_w        #382
589: dastore
590: dup
591: iconst_5
592: ldc2_w        #384
595: dastore
596: dup
597: bipush        6
599: ldc2_w        #386
602: dastore
603: dup
604: bipush        7
606: ldc2_w        #388
609: dastore
610: dup
611: bipush        8
613: ldc2_w        #390
616: dastore
617: dup
618: bipush        9
620: ldc2_w        #392
623: dastore
624: dup
625: bipush        10
627: ldc2_w        #394
630: dastore
631: dup
632: bipush        11
634: ldc2_w        #396
637: dastore
638: invokespecial #247
641: iconst_0
642: invokespecial #8
645: aload_0
646: new           #230
649: dup
650: bipush        12
652: ldc2_w        #40
655: ldc2_w        #398
658: ldc2_w        #400
661: bipush        12
663: newarray       double
665: dup
666: iconst_0
667: ldc2_w        #402
670: dastore
671: dup
672: iconst_1
673: ldc2_w        #404
676: dastore
677: dup
678: iconst_2
679: ldc2_w        #406
682: dastore
683: dup
684: iconst_3
685: ldc2_w        #408
688: dastore
689: dup
690: iconst_4
691: ldc2_w        #410
694: dastore
695: dup
696: iconst_5
697: ldc2_w        #412
700: dastore
701: dup
702: bipush        6
704: ldc2_w        #414
707: dastore
708: dup
709: bipush        7
711: ldc2_w        #416
714: dastore
715: dup
716: bipush        8
718: ldc2_w        #418
721: dastore
722: dup
723: bipush        9
725: ldc2_w        #420
728: dastore
729: dup
730: bipush        10
732: ldc2_w        #422
735: dastore
736: dup
737: bipush        11
739: ldc2_w        #424
742: dastore
743: invokespecial #247
746: iconst_0
747: invokespecial #8
750: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBox3Dimensional
Start line: 318
End line: 321
Method source code: 
  public void testMinpackBox3Dimensional() {
    minpackTest(new Box3DimensionalFunction(10, new double[] { 0.0, 10.0, 20.0 },
                                            32.1115837449572), false);
  }
Method byte code: 
0: aload_0
1: new           #426
4: dup
5: bipush        10
7: iconst_3
8: newarray       double
10: dup
11: iconst_0
12: dconst_0
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #34
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #427
25: dastore
26: ldc2_w        #429
29: invokespecial #431
32: iconst_0
33: invokespecial #8
36: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackJennrichSampson
Start line: 323
End line: 330
Method source code: 
  public void testMinpackJennrichSampson() {
    minpackTest(new JennrichSampsonFunction(10, new double[] { 0.3, 0.4 },
                                            64.5856498144943, 11.1517793413499,
                                            new double[] {
 //                                            0.2578330049, 0.257829976764542
                                               0.2578199266368004, 0.25782997676455244
                                            }), false);
  }
Method byte code: 
0: aload_0
1: new           #432
4: dup
5: bipush        10
7: iconst_2
8: newarray       double
10: dup
11: iconst_0
12: ldc2_w        #433
15: dastore
16: dup
17: iconst_1
18: ldc2_w        #435
21: dastore
22: ldc2_w        #437
25: ldc2_w        #439
28: iconst_2
29: newarray       double
31: dup
32: iconst_0
33: ldc2_w        #441
36: dastore
37: dup
38: iconst_1
39: ldc2_w        #443
42: dastore
43: invokespecial #445
46: iconst_0
47: invokespecial #8
50: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBrownDennis
Start line: 332
End line: 354
Method source code: 
  public void testMinpackBrownDennis() {
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 25.0, 5.0, -5.0, -1.0 },
                                        2815.43839161816, 292.954288244866,
                                        new double[] {
                                         -11.59125141003, 13.2024883984741,
                                         -0.403574643314272, 0.236736269844604
                                        }), false);
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 250.0, 50.0, -50.0, -10.0 },
                                        555073.354173069, 292.954270581415,
                                        new double[] {
                                         -11.5959274272203, 13.2041866926242,
                                         -0.403417362841545, 0.236771143410386
                                       }), false);
    minpackTest(new BrownDennisFunction(20,
                                        new double[] { 2500.0, 500.0, -500.0, -100.0 },
                                        61211252.2338581, 292.954306151134,
                                        new double[] {
                                         -11.5902596937374, 13.2020628854665,
                                         -0.403688070279258, 0.236665033746463
                                        }), false);
  }
Method byte code: 
0: aload_0
1: new           #446
4: dup
5: bipush        20
7: iconst_4
8: newarray       double
10: dup
11: iconst_0
12: ldc2_w        #178
15: dastore
16: dup
17: iconst_1
18: ldc2_w        #3
21: dastore
22: dup
23: iconst_2
24: ldc2_w        #447
27: dastore
28: dup
29: iconst_3
30: ldc2_w        #47
33: dastore
34: ldc2_w        #449
37: ldc2_w        #451
40: iconst_4
41: newarray       double
43: dup
44: iconst_0
45: ldc2_w        #453
48: dastore
49: dup
50: iconst_1
51: ldc2_w        #455
54: dastore
55: dup
56: iconst_2
57: ldc2_w        #457
60: dastore
61: dup
62: iconst_3
63: ldc2_w        #459
66: dastore
67: invokespecial #461
70: iconst_0
71: invokespecial #8
74: aload_0
75: new           #446
78: dup
79: bipush        20
81: iconst_4
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #201
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #49
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #462
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #52
107: dastore
108: ldc2_w        #464
111: ldc2_w        #466
114: iconst_4
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #468
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #470
128: dastore
129: dup
130: iconst_2
131: ldc2_w        #472
134: dastore
135: dup
136: iconst_3
137: ldc2_w        #474
140: dastore
141: invokespecial #461
144: iconst_0
145: invokespecial #8
148: aload_0
149: new           #446
152: dup
153: bipush        20
155: iconst_4
156: newarray       double
158: dup
159: iconst_0
160: ldc2_w        #218
163: dastore
164: dup
165: iconst_1
166: ldc2_w        #476
169: dastore
170: dup
171: iconst_2
172: ldc2_w        #478
175: dastore
176: dup
177: iconst_3
178: ldc2_w        #56
181: dastore
182: ldc2_w        #480
185: ldc2_w        #482
188: iconst_4
189: newarray       double
191: dup
192: iconst_0
193: ldc2_w        #484
196: dastore
197: dup
198: iconst_1
199: ldc2_w        #486
202: dastore
203: dup
204: iconst_2
205: ldc2_w        #488
208: dastore
209: dup
210: iconst_3
211: ldc2_w        #490
214: dastore
215: invokespecial #461
218: iconst_0
219: invokespecial #8
222: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackChebyquad
Start line: 356
End line: 392
Method source code: 
  public void testMinpackChebyquad() {
    minpackTest(new ChebyquadFunction(1, 8, 1.0,
                                      1.88623796907732, 1.88623796907732,
                                      new double[] { 0.5 }), false);
    minpackTest(new ChebyquadFunction(1, 8, 10.0,
                                      5383344372.34005, 1.88424820499951,
                                      new double[] { 0.9817314924684 }), false);
    minpackTest(new ChebyquadFunction(1, 8, 100.0,
                                      0.118088726698392e19, 1.88424820499347,
                                      new double[] { 0.9817314852934 }), false);
    minpackTest(new ChebyquadFunction(8, 8, 1.0,
                                      0.196513862833975, 0.0593032355046727,
                                      new double[] {
                                        0.0431536648587336, 0.193091637843267,
                                        0.266328593812698,  0.499999334628884,
                                        0.500000665371116,  0.733671406187302,
                                        0.806908362156733,  0.956846335141266
                                      }), false);
    minpackTest(new ChebyquadFunction(9, 9, 1.0,
                                      0.16994993465202, 0.0,
                                      new double[] {
                                        0.0442053461357828, 0.199490672309881,
                                        0.23561910847106,   0.416046907892598,
                                        0.5,                0.583953092107402,
                                        0.764380891528940,  0.800509327690119,
                                        0.955794653864217
                                      }), false);
    minpackTest(new ChebyquadFunction(10, 10, 1.0,
                                      0.183747831178711, 0.0806471004038253,
                                      new double[] {
                                        0.0596202671753563, 0.166708783805937,
                                        0.239171018813509,  0.398885290346268,
                                        0.398883667870681,  0.601116332129320,
                                        0.60111470965373,   0.760828981186491,
                                        0.833291216194063,  0.940379732824644
                                      }), false);
  }
Method byte code: 
0: aload_0
1: new           #492
4: dup
5: iconst_1
6: bipush        8
8: dconst_1
9: ldc2_w        #493
12: ldc2_w        #493
15: iconst_1
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #75
23: dastore
24: invokespecial #495
27: iconst_0
28: invokespecial #8
31: aload_0
32: new           #492
35: dup
36: iconst_1
37: bipush        8
39: ldc2_w        #34
42: ldc2_w        #496
45: ldc2_w        #498
48: iconst_1
49: newarray       double
51: dup
52: iconst_0
53: ldc2_w        #500
56: dastore
57: invokespecial #495
60: iconst_0
61: invokespecial #8
64: aload_0
65: new           #492
68: dup
69: iconst_1
70: bipush        8
72: ldc2_w        #40
75: ldc2_w        #502
78: ldc2_w        #504
81: iconst_1
82: newarray       double
84: dup
85: iconst_0
86: ldc2_w        #506
89: dastore
90: invokespecial #495
93: iconst_0
94: invokespecial #8
97: aload_0
98: new           #492
101: dup
102: bipush        8
104: bipush        8
106: dconst_1
107: ldc2_w        #508
110: ldc2_w        #510
113: bipush        8
115: newarray       double
117: dup
118: iconst_0
119: ldc2_w        #512
122: dastore
123: dup
124: iconst_1
125: ldc2_w        #514
128: dastore
129: dup
130: iconst_2
131: ldc2_w        #516
134: dastore
135: dup
136: iconst_3
137: ldc2_w        #518
140: dastore
141: dup
142: iconst_4
143: ldc2_w        #520
146: dastore
147: dup
148: iconst_5
149: ldc2_w        #522
152: dastore
153: dup
154: bipush        6
156: ldc2_w        #524
159: dastore
160: dup
161: bipush        7
163: ldc2_w        #526
166: dastore
167: invokespecial #495
170: iconst_0
171: invokespecial #8
174: aload_0
175: new           #492
178: dup
179: bipush        9
181: bipush        9
183: dconst_1
184: ldc2_w        #528
187: dconst_0
188: bipush        9
190: newarray       double
192: dup
193: iconst_0
194: ldc2_w        #530
197: dastore
198: dup
199: iconst_1
200: ldc2_w        #532
203: dastore
204: dup
205: iconst_2
206: ldc2_w        #534
209: dastore
210: dup
211: iconst_3
212: ldc2_w        #536
215: dastore
216: dup
217: iconst_4
218: ldc2_w        #75
221: dastore
222: dup
223: iconst_5
224: ldc2_w        #538
227: dastore
228: dup
229: bipush        6
231: ldc2_w        #540
234: dastore
235: dup
236: bipush        7
238: ldc2_w        #542
241: dastore
242: dup
243: bipush        8
245: ldc2_w        #544
248: dastore
249: invokespecial #495
252: iconst_0
253: invokespecial #8
256: aload_0
257: new           #492
260: dup
261: bipush        10
263: bipush        10
265: dconst_1
266: ldc2_w        #546
269: ldc2_w        #548
272: bipush        10
274: newarray       double
276: dup
277: iconst_0
278: ldc2_w        #550
281: dastore
282: dup
283: iconst_1
284: ldc2_w        #552
287: dastore
288: dup
289: iconst_2
290: ldc2_w        #554
293: dastore
294: dup
295: iconst_3
296: ldc2_w        #556
299: dastore
300: dup
301: iconst_4
302: ldc2_w        #558
305: dastore
306: dup
307: iconst_5
308: ldc2_w        #560
311: dastore
312: dup
313: bipush        6
315: ldc2_w        #562
318: dastore
319: dup
320: bipush        7
322: ldc2_w        #564
325: dastore
326: dup
327: bipush        8
329: ldc2_w        #566
332: dastore
333: dup
334: bipush        9
336: ldc2_w        #568
339: dastore
340: invokespecial #495
343: iconst_0
344: invokespecial #8
347: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackBrownAlmostLinear
Start line: 394
End line: 460
Method source code: 
  public void testMinpackBrownAlmostLinear() {
    minpackTest(new BrownAlmostLinearFunction(10, 0.5,
                                              16.5302162063499, 0.0,
                                              new double[] {
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 0.979430303349862,
                                                0.979430303349862, 1.20569696650138
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(10, 5.0,
                                              9765624.00089211, 0.0,
                                              new double[] {
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 0.979430303349865,
                                               0.979430303349865, 1.20569696650135
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(10, 50.0,
                                              0.9765625e17, 0.0,
                                              new double[] {
                                                1.0, 1.0, 1.0, 1.0, 1.0,
                                                1.0, 1.0, 1.0, 1.0, 1.0
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(30, 0.5,
                                              83.476044467848, 0.0,
                                              new double[] {
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 0.997754216442807,
                                                0.997754216442807, 1.06737350671578
                                              }), false);
    minpackTest(new BrownAlmostLinearFunction(40, 0.5,
                                              128.026364472323, 0.0,
                                              new double[] {
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                1.00000000000002, 1.00000000000002,
                                                0.999999999999121
                                              }), false);
    }
Method byte code: 
0: aload_0
1: new           #570
4: dup
5: bipush        10
7: ldc2_w        #75
10: ldc2_w        #571
13: dconst_0
14: bipush        10
16: newarray       double
18: dup
19: iconst_0
20: ldc2_w        #573
23: dastore
24: dup
25: iconst_1
26: ldc2_w        #573
29: dastore
30: dup
31: iconst_2
32: ldc2_w        #573
35: dastore
36: dup
37: iconst_3
38: ldc2_w        #573
41: dastore
42: dup
43: iconst_4
44: ldc2_w        #573
47: dastore
48: dup
49: iconst_5
50: ldc2_w        #573
53: dastore
54: dup
55: bipush        6
57: ldc2_w        #573
60: dastore
61: dup
62: bipush        7
64: ldc2_w        #573
67: dastore
68: dup
69: bipush        8
71: ldc2_w        #573
74: dastore
75: dup
76: bipush        9
78: ldc2_w        #575
81: dastore
82: invokespecial #577
85: iconst_0
86: invokespecial #8
89: aload_0
90: new           #570
93: dup
94: bipush        10
96: ldc2_w        #3
99: ldc2_w        #578
102: dconst_0
103: bipush        10
105: newarray       double
107: dup
108: iconst_0
109: ldc2_w        #580
112: dastore
113: dup
114: iconst_1
115: ldc2_w        #580
118: dastore
119: dup
120: iconst_2
121: ldc2_w        #580
124: dastore
125: dup
126: iconst_3
127: ldc2_w        #580
130: dastore
131: dup
132: iconst_4
133: ldc2_w        #580
136: dastore
137: dup
138: iconst_5
139: ldc2_w        #580
142: dastore
143: dup
144: bipush        6
146: ldc2_w        #580
149: dastore
150: dup
151: bipush        7
153: ldc2_w        #580
156: dastore
157: dup
158: bipush        8
160: ldc2_w        #580
163: dastore
164: dup
165: bipush        9
167: ldc2_w        #582
170: dastore
171: invokespecial #577
174: iconst_0
175: invokespecial #8
178: aload_0
179: new           #570
182: dup
183: bipush        10
185: ldc2_w        #49
188: ldc2_w        #584
191: dconst_0
192: bipush        10
194: newarray       double
196: dup
197: iconst_0
198: dconst_1
199: dastore
200: dup
201: iconst_1
202: dconst_1
203: dastore
204: dup
205: iconst_2
206: dconst_1
207: dastore
208: dup
209: iconst_3
210: dconst_1
211: dastore
212: dup
213: iconst_4
214: dconst_1
215: dastore
216: dup
217: iconst_5
218: dconst_1
219: dastore
220: dup
221: bipush        6
223: dconst_1
224: dastore
225: dup
226: bipush        7
228: dconst_1
229: dastore
230: dup
231: bipush        8
233: dconst_1
234: dastore
235: dup
236: bipush        9
238: dconst_1
239: dastore
240: invokespecial #577
243: iconst_0
244: invokespecial #8
247: aload_0
248: new           #570
251: dup
252: bipush        30
254: ldc2_w        #75
257: ldc2_w        #586
260: dconst_0
261: bipush        30
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #588
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #588
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #588
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #588
288: dastore
289: dup
290: iconst_4
291: ldc2_w        #588
294: dastore
295: dup
296: iconst_5
297: ldc2_w        #588
300: dastore
301: dup
302: bipush        6
304: ldc2_w        #588
307: dastore
308: dup
309: bipush        7
311: ldc2_w        #588
314: dastore
315: dup
316: bipush        8
318: ldc2_w        #588
321: dastore
322: dup
323: bipush        9
325: ldc2_w        #588
328: dastore
329: dup
330: bipush        10
332: ldc2_w        #588
335: dastore
336: dup
337: bipush        11
339: ldc2_w        #588
342: dastore
343: dup
344: bipush        12
346: ldc2_w        #588
349: dastore
350: dup
351: bipush        13
353: ldc2_w        #588
356: dastore
357: dup
358: bipush        14
360: ldc2_w        #588
363: dastore
364: dup
365: bipush        15
367: ldc2_w        #588
370: dastore
371: dup
372: bipush        16
374: ldc2_w        #588
377: dastore
378: dup
379: bipush        17
381: ldc2_w        #588
384: dastore
385: dup
386: bipush        18
388: ldc2_w        #588
391: dastore
392: dup
393: bipush        19
395: ldc2_w        #588
398: dastore
399: dup
400: bipush        20
402: ldc2_w        #588
405: dastore
406: dup
407: bipush        21
409: ldc2_w        #588
412: dastore
413: dup
414: bipush        22
416: ldc2_w        #588
419: dastore
420: dup
421: bipush        23
423: ldc2_w        #588
426: dastore
427: dup
428: bipush        24
430: ldc2_w        #588
433: dastore
434: dup
435: bipush        25
437: ldc2_w        #588
440: dastore
441: dup
442: bipush        26
444: ldc2_w        #588
447: dastore
448: dup
449: bipush        27
451: ldc2_w        #588
454: dastore
455: dup
456: bipush        28
458: ldc2_w        #588
461: dastore
462: dup
463: bipush        29
465: ldc2_w        #590
468: dastore
469: invokespecial #577
472: iconst_0
473: invokespecial #8
476: aload_0
477: new           #570
480: dup
481: bipush        40
483: ldc2_w        #75
486: ldc2_w        #592
489: dconst_0
490: bipush        35
492: newarray       double
494: dup
495: iconst_0
496: ldc2_w        #594
499: dastore
500: dup
501: iconst_1
502: ldc2_w        #594
505: dastore
506: dup
507: iconst_2
508: ldc2_w        #594
511: dastore
512: dup
513: iconst_3
514: ldc2_w        #594
517: dastore
518: dup
519: iconst_4
520: ldc2_w        #594
523: dastore
524: dup
525: iconst_5
526: ldc2_w        #594
529: dastore
530: dup
531: bipush        6
533: ldc2_w        #594
536: dastore
537: dup
538: bipush        7
540: ldc2_w        #594
543: dastore
544: dup
545: bipush        8
547: ldc2_w        #594
550: dastore
551: dup
552: bipush        9
554: ldc2_w        #594
557: dastore
558: dup
559: bipush        10
561: ldc2_w        #594
564: dastore
565: dup
566: bipush        11
568: ldc2_w        #594
571: dastore
572: dup
573: bipush        12
575: ldc2_w        #594
578: dastore
579: dup
580: bipush        13
582: ldc2_w        #594
585: dastore
586: dup
587: bipush        14
589: ldc2_w        #594
592: dastore
593: dup
594: bipush        15
596: ldc2_w        #594
599: dastore
600: dup
601: bipush        16
603: ldc2_w        #594
606: dastore
607: dup
608: bipush        17
610: ldc2_w        #594
613: dastore
614: dup
615: bipush        18
617: ldc2_w        #594
620: dastore
621: dup
622: bipush        19
624: ldc2_w        #594
627: dastore
628: dup
629: bipush        20
631: ldc2_w        #594
634: dastore
635: dup
636: bipush        21
638: ldc2_w        #594
641: dastore
642: dup
643: bipush        22
645: ldc2_w        #594
648: dastore
649: dup
650: bipush        23
652: ldc2_w        #594
655: dastore
656: dup
657: bipush        24
659: ldc2_w        #594
662: dastore
663: dup
664: bipush        25
666: ldc2_w        #594
669: dastore
670: dup
671: bipush        26
673: ldc2_w        #594
676: dastore
677: dup
678: bipush        27
680: ldc2_w        #594
683: dastore
684: dup
685: bipush        28
687: ldc2_w        #594
690: dastore
691: dup
692: bipush        29
694: ldc2_w        #594
697: dastore
698: dup
699: bipush        30
701: ldc2_w        #594
704: dastore
705: dup
706: bipush        31
708: ldc2_w        #594
711: dastore
712: dup
713: bipush        32
715: ldc2_w        #594
718: dastore
719: dup
720: bipush        33
722: ldc2_w        #594
725: dastore
726: dup
727: bipush        34
729: ldc2_w        #596
732: dastore
733: invokespecial #577
736: iconst_0
737: invokespecial #8
740: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackOsborne1
Start line: 462
End line: 470
Method source code: 
  public void testMinpackOsborne1() {
      minpackTest(new Osborne1Function(new double[] { 0.5, 1.5, -1.0, 0.01, 0.02, },
                                       0.937564021037838, 0.00739249260904843,
                                       new double[] {
                                         0.375410049244025, 1.93584654543108,
                                        -1.46468676748716, 0.0128675339110439,
                                         0.0221227011813076
                                       }), false);
    }
Method byte code: 
0: aload_0
1: new           #598
4: dup
5: iconst_5
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #75
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #599
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #47
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #601
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #197
37: dastore
38: ldc2_w        #603
41: ldc2_w        #605
44: iconst_5
45: newarray       double
47: dup
48: iconst_0
49: ldc2_w        #607
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #609
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #611
64: dastore
65: dup
66: iconst_3
67: ldc2_w        #613
70: dastore
71: dup
72: iconst_4
73: ldc2_w        #615
76: dastore
77: invokespecial #617
80: iconst_0
81: invokespecial #8
84: return
Source File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
Bytecode File: /home/islam/MyWork/New-work-2023/DBT-workbench/resources/subjects/fixed/math/64/target/test-classes/org/apache/commons/math/optimization/general/MinpackTest.class
Class name: MinpackTest
Method name: testMinpackOsborne2
Start line: 472
End line: 487
Method source code: 
  public void testMinpackOsborne2() {

    minpackTest(new Osborne2Function(new double[] {
                                       1.3, 0.65, 0.65, 0.7, 0.6,
                                       3.0, 5.0, 7.0, 2.0, 4.5, 5.5
                                     },
                                     1.44686540984712, 0.20034404483314,
                                     new double[] {
                                       1.30997663810096,  0.43155248076,
                                       0.633661261602859, 0.599428560991695,
                                       0.754179768272449, 0.904300082378518,
                                       1.36579949521007, 4.82373199748107,
                                       2.39868475104871, 4.56887554791452,
                                       5.67534206273052
                                     }), false);
  }
Method byte code: 
0: aload_0
1: new           #618
4: dup
5: bipush        11
7: newarray       double
9: dup
10: iconst_0
11: ldc2_w        #619
14: dastore
15: dup
16: iconst_1
17: ldc2_w        #621
20: dastore
21: dup
22: iconst_2
23: ldc2_w        #621
26: dastore
27: dup
28: iconst_3
29: ldc2_w        #623
32: dastore
33: dup
34: iconst_4
35: ldc2_w        #625
38: dastore
39: dup
40: iconst_5
41: ldc2_w        #61
44: dastore
45: dup
46: bipush        6
48: ldc2_w        #3
51: dastore
52: dup
53: bipush        7
55: ldc2_w        #627
58: dastore
59: dup
60: bipush        8
62: ldc2_w        #629
65: dastore
66: dup
67: bipush        9
69: ldc2_w        #631
72: dastore
73: dup
74: bipush        10
76: ldc2_w        #633
79: dastore
80: ldc2_w        #635
83: ldc2_w        #637
86: bipush        11
88: newarray       double
90: dup
91: iconst_0
92: ldc2_w        #639
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #641
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #643
107: dastore
108: dup
109: iconst_3
110: ldc2_w        #645
113: dastore
114: dup
115: iconst_4
116: ldc2_w        #647
119: dastore
120: dup
121: iconst_5
122: ldc2_w        #649
125: dastore
126: dup
127: bipush        6
129: ldc2_w        #651
132: dastore
133: dup
134: bipush        7
136: ldc2_w        #653
139: dastore
140: dup
141: bipush        8
143: ldc2_w        #655
146: dastore
147: dup
148: bipush        9
150: ldc2_w        #657
153: dastore
154: dup
155: bipush        10
157: ldc2_w        #659
160: dastore
161: invokespecial #661
164: iconst_0
165: invokespecial #8
168: return
}
